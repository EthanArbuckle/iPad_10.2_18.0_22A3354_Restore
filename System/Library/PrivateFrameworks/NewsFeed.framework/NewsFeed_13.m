uint64_t sub_1BACF9DF0(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF5478;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5AF59C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAB1CAB4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACF9F54(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  char v22;

  v22 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  v21 = BYTE2(a4);
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF9760;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF976C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF2B90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA0C4(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  double v18;
  uint64_t v19;
  __int16 v20;
  char v21;

  v21 = a1;
  v18 = a5;
  v19 = a2;
  v20 = a3;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF9760;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF976C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF2BD4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA230(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int16 v20;
  char v21;
  char v22;

  v22 = a1;
  v18 = a2;
  v19 = a3;
  v21 = BYTE2(a4);
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF9760;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF976C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF97B0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA3A0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF9760;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF976C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA508(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF8C80;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF8C8C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA694(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF8C80;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF8C8C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3A66C0, (uint64_t (*)(void))sub_1BAADB198, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BAEF8CD0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA820(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF9754;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A3060();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEE890C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFA984(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF9754;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A3060();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA53ED90();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFAAEC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF9754;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5A3060();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAB19C34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFAC50(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE9FFC;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B342C();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEA008();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFADB4(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2 & 1;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEE9F68;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE9F74();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEE9FB8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFAF24(char a1, uint64_t a2, __int16 a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  double v18;
  uint64_t v19;
  __int16 v20;
  char v21;

  v21 = a1;
  v18 = a5;
  v19 = a2;
  v20 = a3;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEFBC10;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBC1C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF0F9C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB090(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF7A2C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5F4F18();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB1F8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v17 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v5 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v11;
  *(_QWORD *)(v12 + 24) = v10;
  v15[2] = sub_1BAEEBD00;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v6 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEBD20();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEBD64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB358(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC654;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC660();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB4BC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v6 = a1 & 1;
  v22 = a1 & 1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v6;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEC654;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC660();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB62C(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF3984;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF3990();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB790(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  _BYTE v18[25];
  char v19;

  v19 = a1;
  v7 = a2[1];
  v17 = *a2;
  *(_OWORD *)v18 = v7;
  *(_OWORD *)&v18[9] = *(__int128 *)((char *)a2 + 25);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF39D4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFB900(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF3984;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA6522F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF3A18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFBA64(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v28 = a1;
  v7 = a2[5];
  v24 = a2[4];
  v25 = v7;
  v8 = a2[7];
  v26 = a2[6];
  v27 = v8;
  v9 = a2[1];
  v20 = *a2;
  v21 = v9;
  v10 = a2[3];
  v22 = a2[2];
  v23 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF61B4;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF38AC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFBBE4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF61B4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA610C04();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFBD48(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  _OWORD v28[2];
  char v29;

  v29 = a1;
  v7 = a2[7];
  v26 = a2[6];
  v27 = v7;
  v28[0] = a2[8];
  *(_OWORD *)((char *)v28 + 9) = *(__int128 *)((char *)a2 + 137);
  v8 = a2[3];
  v22 = a2[2];
  v23 = v8;
  v9 = a2[5];
  v24 = a2[4];
  v25 = v9;
  v10 = a2[1];
  v20 = *a2;
  v21 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF61B4;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAA8CC84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFBEE0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF61B4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF61C0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC044(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;
  char v30;

  v30 = a1;
  v7 = a2[7];
  v26 = a2[6];
  v27 = v7;
  v28 = a2[8];
  v29 = *((_BYTE *)a2 + 144);
  v8 = a2[3];
  v22 = a2[2];
  v23 = v8;
  v9 = a2[5];
  v24 = a2[4];
  v25 = v9;
  v10 = a2[1];
  v20 = *a2;
  v21 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF61B4;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF3D14();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC1DC(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF61B4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D60CC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF6204();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC340(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2 & 1;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF823C;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA995DB4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC4B4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF823C;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA615F1C();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEF82B0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC61C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSupplementaryNodeStyle();
    sub_1BA4A2870(&qword_1ED3A8470, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC7A0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatMicaNodeStyle();
    sub_1BA4A2870(&qword_1EF2B5C38, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFC924(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVideoNodeStyle();
    sub_1BA4A2870(&qword_1EF2B5A68, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFCAA8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatIssueCoverNodeStyle();
    sub_1BA4A2870(&qword_1ED3A76E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFCC2C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAnimationNodeStyle();
    sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFCDB0(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v22 = a1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEF1DC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEED80C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFCF20(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1DC;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA61DEB0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    sub_1BA4A2870(&qword_1EF2B5B10, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD0A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEE4E08;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D6FA8();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3D2AF0, (uint64_t (*)(void))sub_1BAEE4E14, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    sub_1BAEE4E58();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD230(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  uint64_t v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEECB30;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEECB50();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    type metadata accessor for FormatResizeAuto();
    sub_1BA4A2870(&qword_1ED3A5AE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatResizeAuto, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD3A4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF9FD0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9FDC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEEEC44();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD510(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF9FD0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9FDC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAA1B808();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD674(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF9FD0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9FDC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD800(char a1, uint64_t a2, float a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  float v16;
  char v17;

  v17 = a1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEECA9C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEECAA8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEECAEC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFD964(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEAC68;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEAC74();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFDAF0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v8 = a1 & 1;
  v21 = a1 & 1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = v8;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEAC68;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEAC74();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA624828();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFDC58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD v12[4];
  __int128 v13;
  uint64_t v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v6 = (uint64_t *)(v2 + *(int *)(v5 + 44));
  v8 = *v6;
  v7 = v6[1];
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = v8;
  *(_QWORD *)(v9 + 24) = v7;
  v12[2] = sub_1BAEECCD4;
  v12[3] = v9;
  swift_retain();
  v10 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v12);
  if (!v3 && (v10 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEECCF4();
    v13 = 0uLL;
    sub_1BB874464();
    v13 = xmmword_1BB87FC90;
    type metadata accessor for FormatResizeAuto();
    sub_1BA4A2870(&qword_1ED3A5AE0, (uint64_t (*)(uint64_t))type metadata accessor for FormatResizeAuto, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFDDCC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF0E4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF0F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFDF50(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF0E4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF0F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA63658C(0);
    sub_1BA4A2870(&qword_1ED39B060, (uint64_t (*)(uint64_t))sub_1BA63658C, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFE0D4(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF0E4;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF0F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEF134();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFE238(char a1, uint64_t a2, double a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  double v16;
  char v17;

  v17 = a1;
  v16 = a3;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF2A8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF2B4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1EF2B3158, MEMORY[0x1E0DEB070], (uint64_t)&protocol witness table for Double, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEEC280();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFE3C4(char a1, uint64_t a2, double a3, double a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  double v17;
  double v18;
  char v19;

  v19 = a1;
  v17 = a3;
  v18 = a4;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEF2A8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF2B4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEA6D40(0, (unint64_t *)&qword_1EF2AFF10, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for FormatRange);
    sub_1BAEA6DB4(&qword_1EF2B5C70, (unint64_t *)&qword_1EF2AFF10, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for FormatRange, (uint64_t)&protocol conformance descriptor for FormatRange<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFE568(char a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  double v19;
  double v20;
  double v21;
  double v22;
  char v23;

  v23 = a1;
  v19 = a3;
  v20 = a4;
  v21 = a5;
  v22 = a6;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEEF2A8;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF2B4();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAEA6D40(0, &qword_1EF2B3148, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for FormatTranslate);
    sub_1BAEA6DB4(&qword_1EF2B5C60, &qword_1EF2B3148, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for FormatTranslate, (uint64_t)&protocol conformance descriptor for FormatTranslate<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFE710(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEF2A8;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEF2B4();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEF2F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFE880(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4DE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA50CAA8(0, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    sub_1BAEE9BD8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFEA0C(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4DE4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3D04B0, (uint64_t (*)(void))sub_1BAE886B8, (uint64_t)&type metadata for FormatSystemColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    sub_1BAEF4E34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFEBA4(char a1, char a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  char v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4DE4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3AD4C0, (uint64_t (*)(void))sub_1BAE8860C, (uint64_t)&type metadata for FormatFixedColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    sub_1BAEF4E9C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFED3C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4DE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3B79F0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    sub_1BA6732A8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFEEC8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4DE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA673310();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF02C(char a1, uint64_t a2, char a3, uint64_t a4, double a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  double v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a5;
  v19 = a2;
  v20 = a3 & 1;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4DE4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF4F04();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF19C(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_BYTE *)a2 + 32);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4DE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF4F48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF30C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF4DE4;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA673264();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF478(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4DE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA4CDF6C(0, &qword_1ED3BE6B0, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    sub_1BA673354();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF604(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4DE4;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAE88274(0, &qword_1EF2B2B60, (void (*)(void))sub_1BAE88390);
    sub_1BAEF4F8C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF794(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4DE4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAE88274(0, &qword_1EF2B2B48, (void (*)(void))sub_1BAE882E8);
    sub_1BAEF4FEC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFF91C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF4DE4;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF4DF0();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAE88168();
    sub_1BA4A2870(&qword_1EF2B5E60, (uint64_t (*)(uint64_t))sub_1BAE88168, (uint64_t)&protocol conformance descriptor for FormatUnboundValue<A, B>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFFAA4(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA84D630();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFFC08(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEC418();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFFD6C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEC45C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BACFFED0(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEC40C;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAB1DE84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00034(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v17 = a1;
  v16 = a2 & 1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEC40C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA63F9F0();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEEC4A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0019C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatHOverlayNode();
    sub_1BA4A2870(&qword_1ED39FD18, (uint64_t (*)(uint64_t))type metadata accessor for FormatHOverlayNode, (uint64_t)&protocol conformance descriptor for FormatHOverlayNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00320(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatStateViewNode();
    sub_1BA4A2870(&qword_1ED39EC60, (uint64_t (*)(uint64_t))type metadata accessor for FormatStateViewNode, (uint64_t)&protocol conformance descriptor for FormatStateViewNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD004A4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatCustomNode();
    sub_1BA4A2870(&qword_1ED39FBA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNode, (uint64_t)&protocol conformance descriptor for FormatCustomNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00628(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatPrintNode();
    sub_1BA4A2870(&qword_1EF2B5C40, (uint64_t (*)(uint64_t))type metadata accessor for FormatPrintNode, (uint64_t)&protocol conformance descriptor for FormatPrintNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD007AC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatMicaNode();
    sub_1BA4A2870(&qword_1EF2B5C48, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNode, (uint64_t)&protocol conformance descriptor for FormatMicaNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00930(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatLayeredMediaNode();
    sub_1BA4A2870((unint64_t *)&unk_1ED3A01F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNode, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00AB4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVideoNode();
    sub_1BA4A2870(&qword_1EF2B5C50, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNode, (uint64_t)&protocol conformance descriptor for FormatVideoNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00C38(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  char v24;

  v24 = a1;
  v7 = a2[3];
  v20 = a2[2];
  v21 = v7;
  v22 = a2[4];
  v23 = *((_QWORD *)a2 + 10);
  v8 = a2[1];
  v18 = *a2;
  v19 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEEF1E8;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEEF1F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00DB8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatBlockNode();
    sub_1BA4A2870(&qword_1ED39FA20, (uint64_t (*)(uint64_t))type metadata accessor for FormatBlockNode, (uint64_t)&protocol conformance descriptor for FormatBlockNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD00F3C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatGeometryNode();
    sub_1BA4A2870(&qword_1ED39FCF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatGeometryNode, (uint64_t)&protocol conformance descriptor for FormatGeometryNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD010C0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVideoPlayerNode();
    sub_1BA4A2870(&qword_1ED3A01C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNode, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD01244(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatProgressViewNode();
    sub_1BA4A2870(&qword_1ED3A6EE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewNode, (uint64_t)&protocol conformance descriptor for FormatProgressViewNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD013C8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatItemBindingsNode();
    sub_1BA4A2870(&qword_1ED3A6DF8, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemBindingsNode, (uint64_t)&protocol conformance descriptor for FormatItemBindingsNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0154C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAuxiliaryNode();
    sub_1BA4A2870(&qword_1ED3A65D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAuxiliaryNode, (uint64_t)&protocol conformance descriptor for FormatAuxiliaryNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD016D0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatResetNode();
    sub_1BA4A2870(&qword_1ED3A58B8, (uint64_t (*)(uint64_t))type metadata accessor for FormatResetNode, (uint64_t)&protocol conformance descriptor for FormatResetNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD01854(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatVariableNode();
    sub_1BA4A2870(&qword_1ED3A6310, (uint64_t (*)(uint64_t))type metadata accessor for FormatVariableNode, (uint64_t)&protocol conformance descriptor for FormatVariableNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD019D8(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatBreakpointNode();
    sub_1BA4A2870(&qword_1EF2AC8D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatBreakpointNode, (uint64_t)&protocol conformance descriptor for FormatBreakpointNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD01B5C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatPuzzleEmbedNode();
    sub_1BA4A2870(&qword_1ED3A0F78, (uint64_t (*)(uint64_t))type metadata accessor for FormatPuzzleEmbedNode, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD01CE0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEEF1E8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA695324();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSponsoredBannerNode();
    sub_1BA4A2870(&qword_1EF2B5C58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNode, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNode);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD01E64(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFAE58;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5EAE50();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatRemoteFont();
    sub_1BA4A2870(&qword_1ED39B368, (uint64_t (*)(uint64_t))type metadata accessor for FormatRemoteFont, (uint64_t)&protocol conformance descriptor for FormatRemoteFont);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD01FF0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  char v23;

  v23 = a1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEFAE58;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5EAE50();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BAA4A9E8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0215C(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = *((_QWORD *)a2 + 4);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEFAE58;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5EAE50();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAE7353C();
    sub_1BA4A2870(&qword_1EF2B6018, (uint64_t (*)(uint64_t))sub_1BAE7353C, (uint64_t)&protocol conformance descriptor for FormatUnboundValue<A, B>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD022EC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  char v22;

  v22 = a1;
  v7 = a2[1];
  v18 = *a2;
  v19 = v7;
  v8 = a2[3];
  v20 = a2[2];
  v21 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF38A0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA610A18();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA5D6280();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0245C(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;

  v28 = a1;
  v7 = a2[5];
  v24 = a2[4];
  v25 = v7;
  v8 = a2[7];
  v26 = a2[6];
  v27 = v8;
  v9 = a2[1];
  v20 = *a2;
  v21 = v9;
  v10 = a2[3];
  v22 = a2[2];
  v23 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF38A0;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA610A18();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BAEF38AC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD025DC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF38F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatContent(0);
    sub_1BA4A2870(&qword_1EF2C2220, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD02768(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[27];
  char v25;

  v25 = a1;
  v7 = a2[5];
  v23 = a2[4];
  *(_OWORD *)v24 = v7;
  *(_OWORD *)&v24[11] = *(__int128 *)((char *)a2 + 91);
  v8 = a2[1];
  v19 = *a2;
  v20 = v8;
  v9 = a2[3];
  v21 = a2[2];
  v22 = v9;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF38F0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA832CF8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD028E8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v18[4];
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v29;

  v29 = a1;
  v7 = a2[7];
  v26 = a2[6];
  v27 = v7;
  v28 = a2[8];
  v8 = a2[3];
  v22 = a2[2];
  v23 = v8;
  v9 = a2[5];
  v24 = a2[4];
  v25 = v9;
  v10 = a2[1];
  v20 = *a2;
  v21 = v10;
  sub_1BA6EE1B8(0);
  v12 = (uint64_t *)(v3 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v18[2] = sub_1BAEF38F0;
  v18[3] = v15;
  swift_retain();
  v16 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v18);
  if (!v4 && (v16 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v19 = 0uLL;
    sub_1BB874464();
    v19 = xmmword_1BB87FC90;
    sub_1BA836FB8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD02A78(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _BYTE v25[25];
  char v26;

  v26 = a1;
  v7 = a2[5];
  v23 = a2[4];
  v24 = v7;
  *(_OWORD *)v25 = a2[6];
  *(_OWORD *)&v25[9] = *(__int128 *)((char *)a2 + 105);
  v8 = a2[1];
  v19 = *a2;
  v20 = v8;
  v9 = a2[3];
  v21 = a2[2];
  v22 = v9;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF38F0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA837820();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD02C00(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  v20 = *((_QWORD *)a2 + 6);
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF38F0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BA82FBCC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD02D78(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF38F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatPackage();
    sub_1BA4A2870(&qword_1ED3B3B00, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD02F04(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF38F0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAEF3940();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0306C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF38F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatSnippet();
    sub_1BA4A2870(&qword_1ED3BCD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, (uint64_t)&protocol conformance descriptor for FormatSnippet);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD031F0(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  char v23;

  v23 = a1;
  v7 = a2[3];
  v20 = a2[2];
  v21 = v7;
  v22 = *((_QWORD *)a2 + 8);
  v8 = a2[1];
  v18 = *a2;
  v19 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF38F0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA836C38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03368(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _BYTE v24[25];
  char v25;

  v25 = a1;
  v7 = a2[5];
  v23 = a2[4];
  *(_OWORD *)v24 = v7;
  *(_OWORD *)&v24[9] = *(__int128 *)((char *)a2 + 89);
  v8 = a2[1];
  v19 = *a2;
  v20 = v8;
  v9 = a2[3];
  v21 = a2[2];
  v22 = v9;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v3 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEF38F0;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v4 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA82E260();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD034E8(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  char v23;
  char v24;

  v24 = a1;
  v7 = a2[3];
  v20 = a2[2];
  v21 = v7;
  v22 = a2[4];
  v23 = *((_BYTE *)a2 + 80);
  v8 = a2[1];
  v18 = *a2;
  v19 = v8;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v3 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEF38F0;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v4 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BA8374F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03668(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF38F0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF38FC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatBindingContent();
    sub_1BA4A2870(&qword_1EF2ADDA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatBindingContent, (uint64_t)&protocol conformance descriptor for FormatBindingContent);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD037F4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEFBF78;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBF84();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BA655028(0);
    sub_1BA4A2870(&qword_1ED39B058, (uint64_t (*)(uint64_t))sub_1BA655028, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03978(char a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _QWORD v17[4];
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  char v23;

  v9 = a1 & 1;
  v23 = a1 & 1;
  v19 = a2;
  v20 = a3;
  v21 = a4;
  v22 = a5 & 0x1FF;
  sub_1BA6EE1B8(0);
  v11 = (uint64_t *)(v6 + *(int *)(v10 + 44));
  v13 = *v11;
  v12 = v11[1];
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = v9;
  *(_QWORD *)(v14 + 24) = v13;
  *(_QWORD *)(v14 + 32) = v12;
  v17[2] = sub_1BAEFBF78;
  v17[3] = v14;
  swift_retain();
  v15 = sub_1BA6EDEF8(a6, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v17);
  if (!v7 && (v15 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFBF84();
    v18 = 0uLL;
    sub_1BB874464();
    v18 = xmmword_1BB87FC90;
    sub_1BA5CC22C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03AEC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6BC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6BD4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAnimationNodeBasicAnimation();
    sub_1BA4A2870(&qword_1EF2B5EC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeBasicAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeBasicAnimation);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03C70(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6BC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6BD4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAnimationNodeSpringAnimation();
    sub_1BA4A2870(&qword_1ED39F0D0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeSpringAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeSpringAnimation);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03DF4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF6BC8;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6BD4();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatAnimationNodeGroupAnimation();
    sub_1BA4A2870(&qword_1EF2AD918, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeGroupAnimation, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeGroupAnimation);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD03F78(char a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;
  char v17;

  v6 = a1 & 1;
  v17 = a1 & 1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = v6;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEECA08;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEECA14();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEECA58();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD040DC(char a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  char v20;

  v20 = a1;
  v7 = a2[1];
  v17 = *a2;
  v18 = v7;
  v19 = a2[2];
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v3 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF4038;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v4 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA508728();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF4044();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t FormatPatternDirection.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  _BYTE v22[24];
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v20 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v19 = (char *)&v19 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v19 - v8;
  v21 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v15 = v24;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v15)
  {
    v17 = a1[3];
    v24 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v17);
    v18 = (uint64_t)v20;
    v14(v20, v13, v12);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v18, (uint64_t)sub_1BA90CF04, 0, v17, v24);
    sub_1BA4A2E80(v18, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
    sub_1BB8743E0();
    swift_bridgeObjectRelease();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  }
  return result;
}

uint64_t FormatTextAdjustmentMetric.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(_BYTE *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v27[12];
  int v28;
  _BYTE *v29;
  uint64_t v30;
  _BYTE *v31;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v29 = &v27[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v31 = &v27[-v7];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v27[-v9];
  sub_1BAE741EC(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v27[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = *(_BYTE *)v1;
  v30 = *(_QWORD *)(v1 + 8);
  v28 = *(unsigned __int8 *)(v1 + 16);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE740E4();
  v18 = sub_1BA4A2870(&qword_1ED3D1260, (uint64_t (*)(uint64_t))sub_1BAE740E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTextAdjustmentMetric, v19, v15, (uint64_t)&type metadata for FormatTextAdjustmentMetric, v17, (uint64_t)&type metadata for FormatVersions.StarSky, v16, (uint64_t)v13, v18, (uint64_t)&off_1E734BDC0);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
  v22 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v10, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0F764(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v23 = (uint64_t)v31;
    v22(v31, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = swift_retain();
    sub_1BAD0F8C4(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v25 = (uint64_t)v29;
    v22(v29, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0FA40(v28, 2, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAE741EC);
}

uint64_t FormatFontMetric.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFontMetric, v16, v13, (uint64_t)&type metadata for FormatFontMetric, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDC0);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD79CF4(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD79CF4(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatFontMetricAdjustment.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFontMetricAdjustment, v16, v13, (uint64_t)&type metadata for FormatFontMetricAdjustment, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDC0);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD754E4(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD754E4(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void FormatRange.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[26];

  v14[18] = a3;
  v14[14] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v14[7] = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v14[6] = (char *)v14 - v5;
  MEMORY[0x1E0C80A78](v6);
  v14[13] = (char *)v14 - v7;
  MEMORY[0x1E0C80A78](v8);
  v14[19] = (char *)v14 - v10;
  v14[20] = v9;
  v14[16] = v9;
  v14[17] = v11;
  v14[21] = v11;
  v14[22] = v12;
  v14[8] = v12;
  v14[9] = v13;
  v14[23] = v13;
  _s10CodingKeysOMa_259();
}

void FormatRange.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v7[2] = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 16);
  v10 = v9;
  v8 = *(_OWORD *)(a2 + 24);
  v11 = v8;
  v12 = v6;
  _s10CodingKeysOMa_259();
}

void sub_1BAD05320(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = MEMORY[0x1BCCE5B24](&unk_1BB8D1200, a1);
  v4 = MEMORY[0x1BCCE5B24](&unk_1BB8D11B0, a1);
  v5 = MEMORY[0x1BCCE5B24](&unk_1BB8D1188, a1);
  *(_QWORD *)(v1 - 112) = a1;
  *(_QWORD *)(v1 - 104) = v3;
  *(_QWORD *)(v1 - 96) = v4;
  *(_QWORD *)(v1 - 88) = v5;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BAD05370(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 72) = v11;
  *(_QWORD *)(v5 - 152) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  *(_QWORD *)(v5 - 168) = v2;
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19(v4, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v20 = *(_QWORD *)(*(_QWORD *)(v5 - 144) + 16);
  sub_1BA6EE974(*(_QWORD *)(v5 - 128), v5 - 112, v4, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 72), *(_QWORD *)(v5 - 120), v20);
  sub_1BA4A2E80(v4, type metadata accessor for FormatVersionRequirement);
  if (v3)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 152) + 8))(v13, *(_QWORD *)(v5 - 72));
  v22 = *(_QWORD *)(v5 - 160);
  v23 = *(_QWORD *)(v5 - 128) + *(int *)(*(_QWORD *)(v5 - 168) + 52);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v19(v22, v18, v17);
  swift_storeEnumTagMultiPayload();
  v24 = *(_QWORD *)(v5 - 72);
  sub_1BA6EE974(v23, v5 - 112, v22, (uint64_t)sub_1BA90CF04, 0, v24, *(_QWORD *)(v5 - 120), v20);
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 152) + 8))(v13, v24);
}

uint64_t FormatSymbolImageFill.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE747C8();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE74840();
  sub_1BA4A2870(&qword_1ED3D0FE0, (uint64_t (*)(uint64_t))sub_1BAE74840, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v26 = v13;
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_240;
      *(&v26 - 3) = sub_1BAE748C0();
      *(&v26 - 2) = sub_1BAE74904();
      *(&v26 - 1) = sub_1BAE74948();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E7253C40);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v14);
  v25 = v29;
  *v12 = v18;
  v12[1] = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSymbolImageFill.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v35 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v32 - v6;
  sub_1BAE7498C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v1;
  v34 = v1[1];
  v12 = a1[3];
  v13 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  v14 = sub_1BAE74840();
  v15 = sub_1BA4A2870(&qword_1ED3D0FE0, (uint64_t (*)(uint64_t))sub_1BAE74840, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSymbolImageFill, v16, v12, (uint64_t)&type metadata for FormatSymbolImageFill, v14, (uint64_t)&type metadata for FormatVersions.AzdenE, v13, (uint64_t)v10, v15, (uint64_t)&off_1E734BD20);
  sub_1BA6F3F88();
  v18 = v17;
  v19 = &v7[*(int *)(v17 + 48)];
  v20 = &v7[*(int *)(v17 + 64)];
  v36 = v11;
  v21 = qword_1ED3C6D40;
  swift_retain();
  if (v21 != -1)
    swift_once();
  v38 = v10;
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476BC0);
  v24 = *(void (**)(char *))(*(_QWORD *)(v22 - 8) + 16);
  v33 = v23;
  v24(v7);
  if (qword_1ED3C4170 != -1)
    swift_once();
  v25 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476998);
  ((void (*)(char *, uint64_t, uint64_t))v24)(v19, v25, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  swift_storeEnumTagMultiPayload();
  v26 = v37;
  v27 = (uint64_t)v38;
  sub_1BAD17520(v36, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_release();
  if (!v26)
  {
    v28 = (uint64_t)v35;
    v37 = &v35[*(int *)(v18 + 48)];
    v29 = &v35[*(int *)(v18 + 64)];
    ((void (*)(char *, uint64_t, uint64_t))v24)(v35, v33, v22);
    ((void (*)(char *, uint64_t, uint64_t))v24)(v37, v25, v22);
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    v30 = v34;
    swift_retain();
    sub_1BAD17520(v30, 1, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))sub_1BAE7498C);
}

uint64_t FormatSymbolImageColor.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v23;
  uint64_t v24;

  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_9;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BAE74A7C();
    v23 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v16;
  *(_QWORD *)(v19 + 16) = &unk_1E7253C68;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_9:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAD05F90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BA62C9A0();
  sub_1BB8740D4();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    v6 = *(_QWORD *)(v5 - 112);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v6;
    *v4 = v7 | 0x4000000000000000;
    JUMPOUT(0x1BAD05E44);
  }
  JUMPOUT(0x1BAD05E08);
}

void sub_1BAD06000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  *v3 = 0xC000000000000000;
  JUMPOUT(0x1BAD05E44);
}

void sub_1BAD06018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  *v3 = 0xC000000000000008;
  JUMPOUT(0x1BAD05E44);
}

void sub_1BAD06034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_1BA4CDF6C(0, &qword_1EF2B2450, (uint64_t (*)(void))sub_1BA9AEC44, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAE74AC0();
  sub_1BB8740D4();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    v5 = *(_QWORD *)(v4 - 96);
    v6 = *(_QWORD *)(v4 - 88);
    v7 = swift_allocObject();
    *(_QWORD *)(v7 + 16) = v5;
    *(_QWORD *)(v7 + 24) = v6;
    JUMPOUT(0x1BAD060C8);
  }
  JUMPOUT(0x1BAD05E08);
}

void FormatSymbolImageColor.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[4];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  v17[0] = (char *)v17 - v5;
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v17[3] = v11;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSymbolImageColor, v16, v13, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.CrystalGlow, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BC60);
  __asm { BR              X10 }
}

uint64_t sub_1BAD06258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v0 + 16);
  if (qword_1ED3C4170 != -1)
    swift_once();
  v4 = sub_1BB86EB84();
  v5 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED476998);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(v1, v5, v4);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v6 = *(_QWORD *)(v2 - 72);
  sub_1BACEB860(0, v3, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatBreakpointNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BAE75570(a1);
}

uint64_t FormatBreakpointNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  __int128 v48[2];
  uint64_t v49;
  uint64_t v50;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v43 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v43 - v8;
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v43 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - v15;
  sub_1BAE7593C(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BAE75A2C();
  v23 = sub_1BA4A2870(&qword_1EF2B2490, (uint64_t (*)(uint64_t))sub_1BAE75A2C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v24, v20, v4, v22, (uint64_t)&type metadata for FormatVersions.Dawnburst, v21, (uint64_t)v19, v23, (uint64_t)&off_1E734BDE0);
  swift_beginAccess();
  v25 = v2[2];
  v26 = v2[3];
  v27 = qword_1ED3C6D88;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C80);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v46 = v29;
  v47 = v30;
  ((void (*)(char *))v30)(v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v31 = v50;
  sub_1BAD265E8(v25, v26, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4DC0C, (uint64_t (*)(uint64_t))sub_1BAE759B4, &qword_1EF2B2498);
  sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v31)
  {
    v32 = v2[4];
    v33 = v46;
    v47(v13, v46, v28);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1ACA8(v32, 1, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    v34 = v2[5];
    v35 = (uint64_t)v45;
    v47(v45, v33, v28);
    swift_storeEnumTagMultiPayload();
    sub_1BAD1ACA8(v34, 2, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    v36 = v2[6];
    v37 = v2[7];
    v38 = (uint64_t)v44;
    v47(v44, v46, v28);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1AE00(v36, v37, 3, 0, 0, v38, (uint64_t)sub_1BA90CF04, 0);
    v39 = v46;
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v40 = *((_OWORD *)v2 + 5);
    v48[0] = *((_OWORD *)v2 + 4);
    v48[1] = v40;
    v49 = v2[12];
    v41 = (uint64_t)v43;
    v47(v43, v39, v28);
    swift_storeEnumTagMultiPayload();
    sub_1BA7086BC((uint64_t)v48);
    sub_1BAD1AF58(v48, 4, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    sub_1BA708680((uint64_t)v48);
  }
  return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BAE7593C);
}

uint64_t FormatRemoteFont.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v30;
  double v31;
  __int16 v32;
  int *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t *v38;
  __int128 v39;
  void (**v40)(char *, _QWORD);
  double v41;
  __int16 v42;
  __int128 v43;
  char v44;
  __int128 v45;
  char v46;

  v38 = a2;
  *(_QWORD *)&v39 = type metadata accessor for FormatURL();
  MEMORY[0x1E0C80A78](v39);
  v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE75D98();
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE75E10();
  sub_1BA4A2870(&qword_1ED3AD818, (uint64_t (*)(uint64_t))sub_1BAE75E10, (uint64_t)&unk_1BB8FFC6C);
  v10 = v40;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    v28 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  v36 = v4;
  v37 = a1;
  v12 = v38;
  v40 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  v15 = v6;
  v16 = v9;
  if ((v14 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v19 - 2);
      v24 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *(&v35 - 4) = (uint64_t)&_s10CodingKeysON_234;
      *(&v35 - 3) = sub_1BAE75E90();
      *(&v35 - 2) = sub_1BAE75ED4();
      *(&v35 - 1) = sub_1BAE75F18();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E7254D78);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v27 = v23;
      *(_QWORD *)(v27 + 8) = v24;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v24, 1);
      v40[1](v16, v15);
      a1 = v37;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v45 = 0uLL;
  v46 = 0;
  v20 = sub_1BB874098();
  v22 = v21;
  v45 = xmmword_1BB8A1A10;
  v46 = 0;
  sub_1BA4A2870(&qword_1ED3B9028, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
  sub_1BB8740D4();
  v39 = xmmword_1BB8D2D60;
  v45 = xmmword_1BB8D2D60;
  v46 = 0;
  v30 = 16.0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v43 = v39;
    v44 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v30 = v41;
  }
  v39 = xmmword_1BB8D2D70;
  v45 = xmmword_1BB8D2D70;
  v46 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v43 = v39;
    v44 = 0;
    sub_1BA610304();
    sub_1BB8740D4();
    v31 = v41;
    v32 = v42;
  }
  else
  {
    v31 = 0.0;
    v32 = 3072;
  }
  v40[1](v9, v15);
  v33 = (int *)type metadata accessor for FormatRemoteFont();
  sub_1BA5193C4((uint64_t)v36, (uint64_t)v12 + v33[5], (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
  *v12 = v20;
  v12[1] = v22;
  *(double *)((char *)v12 + v33[6]) = v30;
  v34 = (char *)v12 + v33[7];
  *(double *)v34 = v31;
  *((_WORD *)v34 + 4) = v32;
  v28 = (uint64_t)v37;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t FormatRemoteFont.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  void (**v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  void (**v39)(char *, uint64_t, uint64_t);
  void (**v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  double v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  char *v48;
  uint64_t v49;
  __int16 v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t (*v54)();
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t *v61;
  uint64_t v62;
  int *v63;
  uint64_t v64;
  void (**v65)(char *, uint64_t, uint64_t);
  __int128 v66;
  char v67;
  __int128 v68;
  char v69;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v59 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v60 = (char *)&v56 - v7;
  MEMORY[0x1E0C80A78](v8);
  v64 = (uint64_t)&v56 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v56 - v11;
  sub_1BAE75F5C(0);
  v62 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = type metadata accessor for FormatRemoteFont();
  v19 = sub_1BAE75E10();
  v20 = sub_1BA4A2870(&qword_1ED3AD818, (uint64_t (*)(uint64_t))sub_1BAE75E10, (uint64_t)&unk_1BB8FFC6C);
  v63 = (int *)v18;
  sub_1BA6EC1EC(v18, v21, v16, v18, v19, (uint64_t)&type metadata for FormatVersions.JazzkonC, v17, (uint64_t)v15, v20, (uint64_t)&off_1E734BD80);
  v22 = *v2;
  v23 = v2[1];
  v61 = v2;
  v24 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C20);
  v27 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v27(v12, v26, v25);
  v28 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v29 = v65;
  sub_1BAD1FB44(v22, v23, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (v29)
  {
    v42 = (uint64_t)v15;
  }
  else
  {
    v30 = v63[5];
    v31 = v26;
    v32 = v64;
    v57 = v31;
    v58 = v30;
    ((void (*)(uint64_t))v27)(v64);
    swift_storeEnumTagMultiPayload();
    v68 = xmmword_1BB8A1A10;
    v69 = 0;
    v33 = &v15[*(int *)(v62 + 44)];
    v35 = *(_QWORD *)v33;
    v34 = *((_QWORD *)v33 + 1);
    v66 = xmmword_1BB8A1A10;
    v67 = 0;
    v36 = swift_allocObject();
    v37 = sub_1BA5193C4((uint64_t)&v66, v36 + 16, (uint64_t (*)(_QWORD))sub_1BAE75E10);
    v65 = &v56;
    *(_QWORD *)(v36 + 40) = v35;
    *(_QWORD *)(v36 + 48) = v34;
    MEMORY[0x1E0C80A78](v37);
    *(&v56 - 4) = (void (*)(char *, uint64_t, uint64_t))sub_1BA90CF04;
    *(&v56 - 3) = 0;
    v54 = sub_1BAE76058;
    v55 = v36;
    swift_retain();
    sub_1BAE2C360(v32, 1, 0, 0, (uint64_t)sub_1BAE76064, (uint64_t)(&v56 - 6));
    v56 = v27;
    v62 = v28;
    v38 = v61;
    sub_1BAE75FD4();
    v40 = v39;
    v41 = sub_1BA4A2870(&qword_1ED3AE758, (uint64_t (*)(uint64_t))sub_1BAE75FD4, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatURL();
    sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
    sub_1BB874464();
    v58 = v41;
    v65 = v40;
    swift_release();
    sub_1BA4A2E80(v64, type metadata accessor for FormatVersionRequirement);
    v44 = *(double *)((char *)v38 + v63[6]);
    v45 = (uint64_t)v60;
    v46 = v56;
    v47 = v57;
    v56(v60, v57, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2BFA0(2, 0, 0, v44, v45, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE5378C, (uint64_t (*)(uint64_t))sub_1BAE75FD4, &qword_1ED3AE758);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    v48 = (char *)v61 + v63[7];
    v49 = *(_QWORD *)v48;
    v50 = *((_WORD *)v48 + 4);
    v51 = (uint64_t)v59;
    v46(v59, v47, v25);
    swift_storeEnumTagMultiPayload();
    if ((v50 & 0xFF00) == 0xC00)
    {
      v52 = v15;
    }
    else
    {
      v53 = v49;
      v52 = v15;
      if ((sub_1BAE5378C(v51, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v68 = xmmword_1BB8D2D70;
        v69 = 0;
        *(_QWORD *)&v66 = v53;
        WORD4(v66) = v50;
        sub_1BA6745B0();
        sub_1BB874464();
      }
    }
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    v42 = (uint64_t)v52;
  }
  return sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))sub_1BAE75F5C);
}

uint64_t FormatGroupNodeStyle.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA51E538(a1);
}

uint64_t FormatGroupNodeStyle.Selector.init(from:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  __int128 *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  __int128 *v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unsigned __int8 v70;
  __int128 v71;
  char v72;
  _BYTE v73[7];

  v3 = v2;
  v60 = a2;
  sub_1BAE76268();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  sub_1BAE762E0();
  sub_1BA4A2870(&qword_1EF2B24D8, (uint64_t (*)(uint64_t))sub_1BAE762E0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
    v10 = a1;
LABEL_11:
    sub_1BA7F8B78(v10, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  }
  __swift_project_boxed_opaque_existential_1(a1, *((_QWORD *)a1 + 3));
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v7;
  v14 = v6;
  v15 = v9;
  v10 = a1;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_8;
      }
      v60 = a1;
      v20 = *((_QWORD *)v18 - 2);
      v21 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      v23 = v13;
      MEMORY[0x1E0C80A78](v22);
      sub_1BAE76360();
      sub_1BAE763A4();
      sub_1BAE763E8();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E7251E40);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v20;
      *(_QWORD *)(v25 + 8) = v21;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      v26 = v21;
      v10 = v60;
      sub_1BA69C828(v20, v26, 1);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v14);
      goto LABEL_11;
    }
LABEL_8:
    swift_bridgeObjectRelease();
  }
  sub_1BA69C13C();
  v61 = 0uLL;
  LOBYTE(v62) = 0;
  sub_1BB8740D4();
  v19 = v71;
  sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  v61 = xmmword_1BB8A1A10;
  LOBYTE(v62) = 0;
  sub_1BA69C0C4();
  sub_1BB874068();
  v59 = v13;
  v28 = v71;
  v71 = xmmword_1BB8D2D60;
  v72 = 0;
  sub_1BA69A4F4();
  sub_1BB874068();
  v58 = v28;
  v29 = v61;
  LODWORD(v28) = v62;
  v71 = xmmword_1BB8D2D70;
  v72 = 0;
  sub_1BA69C080();
  sub_1BB874068();
  v55 = *((_QWORD *)&v29 + 1);
  v56 = v29;
  v57 = v28;
  v48 = v61;
  v49 = v62;
  v50 = v63;
  v51 = v64;
  v53 = v65;
  v54 = v66;
  v52 = v67;
  v30 = v69;
  v47 = v68;
  v31 = v70;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v61 = xmmword_1BB8D2D90;
  LOBYTE(v62) = 0;
  sub_1BA69C018();
  sub_1BB874068();
  v45 = v31;
  v46 = v30;
  v32 = v71;
  v61 = xmmword_1BB8D2D80;
  LOBYTE(v62) = 0;
  HIDWORD(v43) = sub_1BB874038();
  v44 = v32;
  v33 = v58;
  v61 = xmmword_1BB8D2DA0;
  LOBYTE(v62) = 0;
  v34 = sub_1BB874038();
  v35 = v52;
  v36 = v34;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v15, v6);
  v37 = v60;
  *v60 = v19;
  v38 = v56;
  *((_QWORD *)v37 + 2) = v33;
  *((_QWORD *)v37 + 3) = v38;
  *((_QWORD *)v37 + 4) = v55;
  *((_BYTE *)v37 + 40) = v57;
  *(_DWORD *)((char *)v37 + 41) = v71;
  *((_DWORD *)v37 + 11) = *(_DWORD *)((char *)&v71 + 3);
  v39 = *((_QWORD *)&v48 + 1);
  *((_QWORD *)v37 + 6) = v48;
  *((_QWORD *)v37 + 7) = v39;
  v40 = v50;
  *((_QWORD *)v37 + 8) = v49;
  *((_QWORD *)v37 + 9) = v40;
  v41 = v53;
  *((_QWORD *)v37 + 10) = v51;
  *((_QWORD *)v37 + 11) = v41;
  *((_QWORD *)v37 + 12) = v54;
  *((_QWORD *)v37 + 13) = v35;
  v42 = v46;
  *((_QWORD *)v37 + 14) = v47;
  *((_QWORD *)v37 + 15) = v42;
  *((_BYTE *)v37 + 128) = v45;
  *((_DWORD *)v37 + 33) = *(_DWORD *)&v73[3];
  *(_DWORD *)((char *)v37 + 129) = *(_DWORD *)v73;
  *((_QWORD *)v37 + 17) = v44;
  *((_BYTE *)v37 + 144) = BYTE4(v43);
  *((_BYTE *)v37 + 145) = v36;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t FormatGroupNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(_BYTE *);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  void (*v43)(_BYTE *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE v51[4];
  int v52;
  _BYTE *v53;
  int v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE v66[96];
  uint64_t v67;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v53 = &v51[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v55 = &v51[-v6];
  MEMORY[0x1E0C80A78](v7);
  v57 = &v51[-v8];
  MEMORY[0x1E0C80A78](v9);
  v58 = &v51[-v10];
  MEMORY[0x1E0C80A78](v11);
  v62 = &v51[-v12];
  MEMORY[0x1E0C80A78](v13);
  v64 = &v51[-v14];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v51[-v16];
  sub_1BAE7642C(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = &v51[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v22 = *(_QWORD *)v1;
  v21 = *(_QWORD *)(v1 + 8);
  v63 = *(_QWORD *)(v1 + 16);
  v59 = *(_QWORD *)(v1 + 24);
  v61 = *(_QWORD *)(v1 + 32);
  v60 = *(unsigned __int8 *)(v1 + 40);
  sub_1BA6A09F0(v1 + 48, (uint64_t)v66, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v56 = *(_QWORD *)(v1 + 136);
  v54 = *(unsigned __int8 *)(v1 + 144);
  v52 = *(unsigned __int8 *)(v1 + 145);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BAE762E0();
  v26 = sub_1BA4A2870(&qword_1EF2B24D8, (uint64_t (*)(uint64_t))sub_1BAE762E0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupNodeStyle.Selector, v27, v23, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, v25, (uint64_t)&type metadata for FormatVersions.StarSky, v24, (uint64_t)v20, v26, (uint64_t)&off_1E734BDC0);
  v28 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v28 != -1)
    swift_once();
  v29 = sub_1BB86EB84();
  v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C08);
  v31 = *(void (**)(_BYTE *))(*(_QWORD *)(v29 - 8) + 16);
  v65 = v30;
  v31(v17);
  v32 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v33 = v67;
  sub_1BAD1A58C(v22, v21, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
  if (v33)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v64;
    v34 = v65;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v31)(v64, v65, v29);
    swift_storeEnumTagMultiPayload();
    v36 = swift_bridgeObjectRetain();
    sub_1BAD56980(v36, 1, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    v37 = v32;
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v38 = (uint64_t)v62;
    v64 = v31;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v31)(v62, v34, v29);
    swift_storeEnumTagMultiPayload();
    v39 = v59;
    v40 = v61;
    v67 = v37;
    v41 = v60;
    sub_1BA6E6C54(v59, v61, v60);
    sub_1BAD56BB0(v39, v40, v41, 2, 0, 0, v38, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    v42 = v39;
    v43 = (void (*)(_BYTE *, uint64_t, uint64_t))v64;
    sub_1BA6E6CC4(v42, v40, v41);
    v44 = (uint64_t)v58;
    v43(v58, v34, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD56DE4((uint64_t)v66, 3, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v66, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    v45 = (uint64_t)v57;
    v43(v57, v65, v29);
    swift_storeEnumTagMultiPayload();
    v46 = swift_bridgeObjectRetain();
    sub_1BAD570CC(v46, 4, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v47 = (uint64_t)v55;
    v43(v55, v65, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BAD572EC(v54, 5, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v48 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476B78);
    v49 = (uint64_t)v53;
    v43(v53, v48, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BAD572EC(v52, 6, 0, 0, v49, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BAE7642C);
}

void FormatDateTime.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v20[1] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v20[2] = (char *)v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = sub_1BA6B8518();
  v20[5] = v14;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDateTime, v19, v17, (uint64_t)&type metadata for FormatDateTime, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BDE0);
  __asm { BR              X10 }
}

uint64_t sub_1BAD08744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(v0 + 16);
  v4 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_BYTE *)(v0 + 40);
  if (qword_1ED3C6D88 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v1, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v9 = *(_QWORD *)(v2 - 72);
  sub_1BACFD3A4(0, v3, v4, v5, v6, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v9, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatDateTimeOffset.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  unint64_t v27;
  char *v28;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  sub_1BAE76A44(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v27 = v1[1];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE7693C();
  v17 = sub_1BA4A2870(&qword_1ED3D0EA0, (uint64_t (*)(uint64_t))sub_1BAE7693C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatDateTimeOffset, v18, v14, (uint64_t)&type metadata for FormatDateTimeOffset, v16, (uint64_t)&type metadata for FormatVersions.Dawnburst, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BDE0);
  v19 = qword_1ED3C6D88;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C80);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1A9C8(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v28;
    v22(v28, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = v27;
    sub_1BA739250(v27);
    sub_1BAD1AB4C(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    sub_1BA6F5D74(v24);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE76A44);
}

uint64_t FormatAccessibilityNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA72E05C(a1);
}

uint64_t *FormatAnimationNodeGroupAnimation.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BAE76D2C(a1);
}

uint64_t FormatAnimationNodeGroupAnimation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v27;
  uint64_t *v28;
  _BYTE v29[144];
  char *v30;

  v3 = v2;
  v4 = v1;
  v6 = *v1;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - v10;
  sub_1BAE77100(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE771F0();
  v18 = sub_1BA4A2870(&qword_1EF2B2528, (uint64_t (*)(uint64_t))sub_1BAE771F0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v19, v15, v6, v17, (uint64_t)&type metadata for FormatVersions.StarSky, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BDC0);
  v28 = v4;
  v20 = v4[2];
  v21 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C08);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v11, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD24CC4(v20, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    sub_1BA6A09F0((uint64_t)(v28 + 3), (uint64_t)v29, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v25 = (uint64_t)v30;
    v24(v30, v23, v22);
    swift_storeEnumTagMultiPayload();
    sub_1BA8966F8((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    sub_1BAD6E5C0((uint64_t)v29, 1, 0, 0, v25, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    sub_1BA8966F8((uint64_t)v29, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAE77100);
}

uint64_t sub_1BAD09154(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7D548(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D440);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF76B8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE15DA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7D5C0();
    sub_1BA4A2870(&qword_1ED3AF198, (uint64_t (*)(uint64_t))sub_1BAE7D5C0, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD092B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7D548(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D440);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF76B8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE15DA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7D5C0();
    sub_1BA4A2870(&qword_1ED3AF198, (uint64_t (*)(uint64_t))sub_1BAE7D5C0, MEMORY[0x1E0DED188]);
    sub_1BAA1B6FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0940C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE842CC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE84180);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF5A54;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE15F84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE84344();
    sub_1BA4A2870(&qword_1ED3AF188, (uint64_t (*)(uint64_t))sub_1BAE84344, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD09568(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE842CC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE84180);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF5A54;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE15F84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE84344();
    sub_1BA4A2870(&qword_1ED3AF188, (uint64_t (*)(uint64_t))sub_1BAE84344, MEMORY[0x1E0DED188]);
    sub_1BA62B2B4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD096C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7DBB4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7DA68);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF72F0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16164(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7DC2C();
    sub_1BA4A2870(&qword_1EF2B2848, (uint64_t (*)(uint64_t))sub_1BAE7DC2C, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD09848(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v27 = a1;
  v28 = a2;
  v11 = a3 & 1;
  v29 = a3 & 1;
  sub_1BAE84CD0(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v25[0] = a1;
  v25[1] = a2;
  v26 = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v25, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE84BC8);
  *(_QWORD *)(v16 + 40) = v15;
  *(_QWORD *)(v16 + 48) = v14;
  v21 = a5;
  v22 = a6;
  v23 = sub_1BAEF572C;
  v24 = v16;
  swift_retain();
  sub_1BA69C808(a1, a2, v11);
  sub_1BAE16344(a4, a1, a2, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v20);
  if (!v19)
  {
    sub_1BAE84D48();
    sub_1BA4A2870(&qword_1ED3AF178, (uint64_t (*)(uint64_t))sub_1BAE84D48, MEMORY[0x1E0DED188]);
    sub_1BAEF58B4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0999C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA228C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA2140);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEFB20;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16524(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA2304();
    sub_1BA4A2870(&qword_1EF2B2FD8, (uint64_t (*)(uint64_t))sub_1BAEA2304, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD09B20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB88FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB87B0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC2F4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16704(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8974();
    sub_1BA4A2870(&qword_1ED3AF168, (uint64_t (*)(uint64_t))sub_1BAEB8974, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1ED3C03D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5AAEA8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD09C9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE79334(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE791E8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF8F54;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE168E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE793AC();
    sub_1BA4A2870(&qword_1EF2B26B8, (uint64_t (*)(uint64_t))sub_1BAE793AC, MEMORY[0x1E0DED188]);
    sub_1BA94B918();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD09DF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB8C94(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB8B48);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC0D4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16AC4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8D0C();
    sub_1BA4A2870(&qword_1EF2B3520, (uint64_t (*)(uint64_t))sub_1BAEB8D0C, MEMORY[0x1E0DED188]);
    sub_1BA94B918();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD09F54(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE918A0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE91754);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3294;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16CA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE91918();
    sub_1BA4A2870(&qword_1EF2B2DE0, (uint64_t (*)(uint64_t))sub_1BAE91918, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A0D8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE918A0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE91754);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3294;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16CA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE91918();
    sub_1BA4A2870(&qword_1EF2B2DE0, (uint64_t (*)(uint64_t))sub_1BAE91918, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A234(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE918A0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE91754);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3294;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16CA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE91918();
    sub_1BA4A2870(&qword_1EF2B2DE0, (uint64_t (*)(uint64_t))sub_1BAE91918, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatTextNodeStyle();
    sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A3B0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8DFC8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8DE7C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4210;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE16E84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8E040();
    sub_1BA4A2870(&qword_1ED3AF158, (uint64_t (*)(uint64_t))sub_1BAE8E040, MEMORY[0x1E0DED188]);
    sub_1BA785D18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A50C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE896D0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE895C8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4A6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17064(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE89748();
    sub_1BA4A2870(&qword_1ED3AF138, (uint64_t (*)(uint64_t))sub_1BAE89748, MEMORY[0x1E0DED188]);
    sub_1BA60F76C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A668(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAE896D0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE895C8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEF4A6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE17064(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE89748();
    sub_1BA4A2870(&qword_1ED3AF138, (uint64_t (*)(uint64_t))sub_1BAE89748, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A7C4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE88B54(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE88A4C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4A6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17244(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE88BCC();
    sub_1BA4A2870(&qword_1ED3AF128, (uint64_t (*)(uint64_t))sub_1BAE88BCC, MEMORY[0x1E0DED188]);
    sub_1BA60F76C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0A920(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAE88B54(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE88A4C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEF4A6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE17244(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE88BCC();
    sub_1BA4A2870(&qword_1ED3AF128, (uint64_t (*)(uint64_t))sub_1BAE88BCC, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0AA7C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE84A60(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE84958);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF572C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17424(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE84AD8();
    sub_1BA4A2870(&qword_1ED3AF118, (uint64_t (*)(uint64_t))sub_1BAE84AD8, MEMORY[0x1E0DED188]);
    sub_1BA93D3EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0ABDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB8F48(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB8DFC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC0D4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17604(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8FC0();
    sub_1BA4A2870(&qword_1EF2B3568, (uint64_t (*)(uint64_t))sub_1BAEB8FC0, MEMORY[0x1E0DED188]);
    sub_1BA94B918();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0AD38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE8349C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE83350);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF5E34;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE177E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE83514();
    sub_1BA4A2870(&qword_1EF2B2A78, (uint64_t (*)(uint64_t))sub_1BAE83514, MEMORY[0x1E0DED188]);
    sub_1BA616A40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0AE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC4550(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4448);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE9CF8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE179C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC45C8();
    sub_1BA4A2870(&qword_1ED3AF108, (uint64_t (*)(uint64_t))sub_1BAEC45C8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0AFEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC4550(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4448);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9CF8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE179C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC45C8();
    sub_1BA4A2870(&qword_1ED3AF108, (uint64_t (*)(uint64_t))sub_1BAEC45C8, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatTextNodeStyle();
    sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B168(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE915EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE914A0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17BA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE91664();
    sub_1BA4A2870(&qword_1ED3AF088, (uint64_t (*)(uint64_t))sub_1BAE91664, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B2EC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE915EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE914A0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17BA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE91664();
    sub_1BA4A2870(&qword_1ED3AF088, (uint64_t (*)(uint64_t))sub_1BAE91664, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B448(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC8EE0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC8DD8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9488;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE17D84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC8F58();
    sub_1BA4A2870(&qword_1ED3AF078, (uint64_t (*)(uint64_t))sub_1BAEC8F58, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA545B60();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B5C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEAA0DC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA9F90);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEEAB8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE17F64(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEAA154();
    sub_1BA4A2870(&qword_1EF2B3218, (uint64_t (*)(uint64_t))sub_1BAEAA154, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE77880(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE77734);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF997C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE18144(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE778F8();
    sub_1BA4A2870(&qword_1ED3AF068, (uint64_t (*)(uint64_t))sub_1BAE778F8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE79858(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE79750);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE9A00;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE18324(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE798D0();
    sub_1BA4A2870(&qword_1ED3AF058, (uint64_t (*)(uint64_t))sub_1BAE798D0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0B9CC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE79858(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE79750);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE18324(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE798D0();
    sub_1BA4A2870(&qword_1ED3AF058, (uint64_t (*)(uint64_t))sub_1BAE798D0, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0BB28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE795E8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7949C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE18504(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE79660();
    sub_1BA4A2870(&qword_1EF2B2700, (uint64_t (*)(uint64_t))sub_1BAE79660, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0BC80(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE795E8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7949C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE18504(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE79660();
    sub_1BA4A2870(&qword_1EF2B2700, (uint64_t (*)(uint64_t))sub_1BAE79660, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0BDDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[56];

  sub_1BAE79BFC(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE79B0C(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE799C0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF8E1C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE186E4(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE79B84();
    sub_1BA4A2870(&qword_1ED3AF048, (uint64_t (*)(uint64_t))sub_1BAE79B84, MEMORY[0x1E0DED188]);
    sub_1BA634D18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0BF40(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE79B0C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE799C0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF8E1C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE186E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE79B84();
    sub_1BA4A2870(&qword_1ED3AF048, (uint64_t (*)(uint64_t))sub_1BAE79B84, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C09C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7C75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C654);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7B84;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE188C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7C7D4();
    sub_1BA4A2870(&qword_1ED3AF038, (uint64_t (*)(uint64_t))sub_1BAE7C7D4, MEMORY[0x1E0DED188]);
    sub_1BA766C2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C1F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7C75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C654);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7B84;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE188C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7C7D4();
    sub_1BA4A2870(&qword_1ED3AF038, (uint64_t (*)(uint64_t))sub_1BAE7C7D4, MEMORY[0x1E0DED188]);
    sub_1BA598990();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C354(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v32 = a1;
  v33 = a2;
  v34 = a3 & 1;
  v29 = a4;
  v30 = a5;
  v13 = a6 & 1;
  v31 = a6 & 1;
  sub_1BAE7C75C(0);
  v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C654);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a8;
  v24 = a9;
  v25 = sub_1BAEF7B84;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BAE188C4(a7, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7C7D4();
    sub_1BA4A2870(&qword_1ED3AF038, (uint64_t (*)(uint64_t))sub_1BAE7C7D4, MEMORY[0x1E0DED188]);
    sub_1BA7844F0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C4B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE83C54(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE83B4C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF5CE4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE18AA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE83CCC();
    sub_1BA4A2870(&qword_1ED3AF028, (uint64_t (*)(uint64_t))sub_1BAE83CCC, MEMORY[0x1E0DED188]);
    sub_1BAA1B6FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C614(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC4E7C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4D30);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A70;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE18C84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC4EF4();
    sub_1BA4A2870(&qword_1EF2B38E8, (uint64_t (*)(uint64_t))sub_1BAEC4EF4, MEMORY[0x1E0DED188]);
    sub_1BA55289C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC4BC8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4A7C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE9AD4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE18E64(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC4C40();
    sub_1BA4A2870(&qword_1EF2B38A0, (uint64_t (*)(uint64_t))sub_1BAEC4C40, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0C8C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC4BC8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4A7C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9AD4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE18E64(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC4C40();
    sub_1BA4A2870(&qword_1EF2B38A0, (uint64_t (*)(uint64_t))sub_1BAEC4C40, MEMORY[0x1E0DED188]);
    sub_1BA55289C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0CA24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC50EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4FE4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE19044(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC5164();
    sub_1BA4A2870(&qword_1ED3AF018, (uint64_t (*)(uint64_t))sub_1BAEC5164, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0CBA8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC50EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4FE4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9A00;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE19044(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC5164();
    sub_1BA4A2870(&qword_1ED3AF018, (uint64_t (*)(uint64_t))sub_1BAEC5164, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0CD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBE230(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE320);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEB494;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE19224(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBE2A8();
    sub_1BA4A2870(&qword_1EF2B3638, (uint64_t (*)(uint64_t))sub_1BAEBE2A8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0CE5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBE630(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE4E4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEB400;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE19404(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBE6A8();
    sub_1BA4A2870(&qword_1EF2B3680, (uint64_t (*)(uint64_t))sub_1BAEBE6A8, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0CFB8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89370(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE89268);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4B70;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE195E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE893E8();
    sub_1BA4A2870(&qword_1ED3AF008, (uint64_t (*)(uint64_t))sub_1BAE893E8, MEMORY[0x1E0DED188]);
    sub_1BA60F76C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D114(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89370(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE89268);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4B70;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE195E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE893E8();
    sub_1BA4A2870(&qword_1ED3AF008, (uint64_t (*)(uint64_t))sub_1BAE893E8, MEMORY[0x1E0DED188]);
    sub_1BA5C0F38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D270(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAE89370(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE89268);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEF4B70;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE195E4(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE893E8();
    sub_1BA4A2870(&qword_1ED3AF008, (uint64_t (*)(uint64_t))sub_1BAE893E8, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE831E8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8309C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF5E98;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE197C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE83260();
    sub_1BA4A2870(&qword_1EF2B2A30, (uint64_t (*)(uint64_t))sub_1BAE83260, MEMORY[0x1E0DED188]);
    sub_1BA616A40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7F328(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7F418);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF6E58;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE199A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7F3A0();
    sub_1BA4A2870(&qword_1EF2B28E8, (uint64_t (*)(uint64_t))sub_1BAE7F3A0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D680(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7F328(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7F418);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF6E58;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE199A4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7F3A0();
    sub_1BA4A2870(&qword_1EF2B28E8, (uint64_t (*)(uint64_t))sub_1BAE7F3A0, MEMORY[0x1E0DED188]);
    sub_1BAB6CD8C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE73F7C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE73E30);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFAB80;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE19B84(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE73FF4();
    sub_1BA4A2870(&qword_1EF2B2440, (uint64_t (*)(uint64_t))sub_1BAE73FF4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0D934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBEF58(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBEE0C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAF8C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE19D64(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBEFD0();
    sub_1BA4A2870(&qword_1EF2B3758, (uint64_t (*)(uint64_t))sub_1BAEBEFD0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0DA8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;

  v32 = a1;
  v33 = a2 & 1;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEAFA10(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF880);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEDDB4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE19F44(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEAFA88();
    sub_1BA4A2870(&qword_1ED3AEFF0, (uint64_t (*)(uint64_t))sub_1BAEAFA88, MEMORY[0x1E0DED188]);
    sub_1BAEEDE18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0DBF0(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAEAFA10(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF880);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEEDDB4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE19F44(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEAFA88();
    sub_1BA4A2870(&qword_1ED3AEFF0, (uint64_t (*)(uint64_t))sub_1BAEAFA88, MEMORY[0x1E0DED188]);
    sub_1BA856D18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0DD50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7CBC4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7CABC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7A50;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1A124(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7CC3C();
    sub_1BA4A2870(&qword_1ED3AEFE0, (uint64_t (*)(uint64_t))sub_1BAE7CC3C, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatTextNodeStyle();
    sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0DECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC1A84(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1B74);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEA788;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1A304(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC1AFC();
    sub_1BA4A2870(&qword_1ED3AEFC0, (uint64_t (*)(uint64_t))sub_1BAEC1AFC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC1DFC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1CF4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEA6E8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1A4E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC1E74();
    sub_1BA4A2870(&qword_1ED3AEFD0, (uint64_t (*)(uint64_t))sub_1BAEC1E74, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBF438(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBF330);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAEAC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1A6C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBF4B0();
    sub_1BA4A2870(&qword_1ED3AEFB0, (uint64_t (*)(uint64_t))sub_1BAEBF4B0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE76704(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE76594);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFA02C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1A8A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7677C();
    sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E430(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[48];

  sub_1BA728238(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE847F0(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE846E8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF572C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE1AA84(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE84868();
    sub_1BA4A2870(&qword_1ED3AEF80, (uint64_t (*)(uint64_t))sub_1BAE84868, MEMORY[0x1E0DED188]);
    sub_1BA5B5BBC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E594(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE83F90(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE83E00);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF572C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1AC64(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE84008();
    sub_1BA4A2870(&qword_1ED3AEF70, (uint64_t (*)(uint64_t))sub_1BAE84008, MEMORY[0x1E0DED188]);
    sub_1BAEEDD64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE82E24(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE82CD8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF6018;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1AE44(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE82E9C();
    sub_1BA4A2870(&qword_1EF2B29D0, (uint64_t (*)(uint64_t))sub_1BAE82E9C, MEMORY[0x1E0DED188]);
    sub_1BA616A40();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E84C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE82E24(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE82CD8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF6018;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1AE44(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE82E9C();
    sub_1BA4A2870(&qword_1EF2B29D0, (uint64_t (*)(uint64_t))sub_1BAE82E9C, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0E9D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEBE8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE798);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEB378;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1B024(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEBE95C();
    sub_1BA4A2870(&qword_1EF2B3698, (uint64_t (*)(uint64_t))sub_1BAEBE95C, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0EB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7A3E4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A4D4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF8740;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1B204(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7A45C();
    sub_1BA4A2870(&qword_1ED3AEF50, (uint64_t (*)(uint64_t))sub_1BAE7A45C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0EC84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7A75C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A654);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF86A0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1B3E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7A7D4();
    sub_1BA4A2870(&qword_1ED3AEF60, (uint64_t (*)(uint64_t))sub_1BAE7A7D4, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0EDE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7EA90(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E944);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF70C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1B5C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7EB08();
    sub_1BA4A2870(&qword_1EF2B2890, (uint64_t (*)(uint64_t))sub_1BAE7EB08, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0EF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA0EFC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF013C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1B7A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA0F74();
    sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA12B8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEFFE0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1B984(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA1330();
    sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F1EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[56];

  sub_1BAE79BFC(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE84F84(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE84E7C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF572C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE1BB64(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE84FFC();
    sub_1BA4A2870(&qword_1ED3AEF10, (uint64_t (*)(uint64_t))sub_1BAE84FFC, MEMORY[0x1E0DED188]);
    sub_1BA634D18();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F350(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  __int16 v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE839E4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE838DC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF5D60;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1BD44(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE83A5C();
    sub_1BA4A2870(&qword_1ED3AEF00, (uint64_t (*)(uint64_t))sub_1BAE83A5C, MEMORY[0x1E0DED188]);
    sub_1BA5EA054();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F4B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAECE28C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE8710;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1BF24(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECE304();
    sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAECE604(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE8638;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1C104(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECE67C();
    sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F764(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE741EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE740E4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFAA18;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1C2E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE74264();
    sub_1BA4A2870(&qword_1ED3AEED0, (uint64_t (*)(uint64_t))sub_1BAE74264, MEMORY[0x1E0DED188]);
    sub_1BA995F08();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0F8C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE741EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE740E4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFAA18;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1C2E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE74264();
    sub_1BA4A2870(&qword_1ED3AEED0, (uint64_t (*)(uint64_t))sub_1BAE74264, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatTextNodeStyle();
    sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0FA40(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE741EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE740E4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFAA18;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1C2E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE74264();
    sub_1BA4A2870(&qword_1ED3AEED0, (uint64_t (*)(uint64_t))sub_1BAE74264, MEMORY[0x1E0DED188]);
    sub_1BA996018();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0FBA0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v27 = a1;
  v28 = a2;
  v11 = a3 & 1;
  v29 = a3 & 1;
  sub_1BAEB7D6C(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v25[0] = a1;
  v25[1] = a2;
  v26 = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v25, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7BFC);
  *(_QWORD *)(v16 + 40) = v15;
  *(_QWORD *)(v16 + 48) = v14;
  v21 = a5;
  v22 = a6;
  v23 = sub_1BAEEC81C;
  v24 = v16;
  swift_retain();
  sub_1BA69C808(a1, a2, v11);
  sub_1BAE1C4C4(a4, a1, a2, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v20);
  if (!v19)
  {
    sub_1BAEB7DE4();
    sub_1BA4A2870(&qword_1ED3AEEC0, (uint64_t (*)(uint64_t))sub_1BAEB7DE4, MEMORY[0x1E0DED188]);
    sub_1BAC8AA88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0FCF4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  double v33;

  v32 = a7;
  v33 = a8;
  v29 = a1;
  v30 = a2;
  v13 = a3 & 1;
  v31 = a3 & 1;
  sub_1BAEB34F8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a1;
  v27[1] = a2;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB33AC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEED06C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a1, a2, v13);
  sub_1BAE1C6A4(a4, a1, a2, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB3570();
    sub_1BA4A2870(&qword_1EF2B3418, (uint64_t (*)(uint64_t))sub_1BAEB3570, MEMORY[0x1E0DED188]);
    sub_1BA5B987C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0FE50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[40];

  sub_1BAEB35E8(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAEB34F8(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB33AC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEED06C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE1C6A4(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB3570();
    sub_1BA4A2870(&qword_1EF2B3418, (uint64_t (*)(uint64_t))sub_1BAEB3570, MEMORY[0x1E0DED188]);
    sub_1BAB65C6C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD0FFB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEB2790(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB25DC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEED5F8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1C884(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB2808();
    sub_1BA4A2870(&qword_1ED3AEEB0, (uint64_t (*)(uint64_t))sub_1BAEB2808, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1010C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEB2A44(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB28F8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEED4EC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1CA64(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB2ABC();
    sub_1BA4A2870(&qword_1EF2B33E0, (uint64_t (*)(uint64_t))sub_1BAEB2ABC, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10268(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA9B18(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA99A8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEED0C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1CC44(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA9B90();
    sub_1BA4A2870(&qword_1ED3AEEA0, (uint64_t (*)(uint64_t))sub_1BAEA9B90, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD103C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE994F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE993EC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF1B48;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1CE24(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE9956C();
    sub_1BA4A2870(&qword_1ED3AEE70, (uint64_t (*)(uint64_t))sub_1BAE9956C, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1051C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE994F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE993EC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF1B48;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1CE24(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE9956C();
    sub_1BA4A2870(&qword_1ED3AEE70, (uint64_t (*)(uint64_t))sub_1BAE9956C, MEMORY[0x1E0DED188]);
    sub_1BA5516DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10678(__int128 *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[136];
  uint64_t v33;

  sub_1BA895FE8(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE997EC(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9965C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF1AD8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  v19 = v33;
  sub_1BAE1D004(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v19)
  {
    sub_1BAE99864();
    sub_1BA4A2870(&qword_1EF2B2F20, (uint64_t (*)(uint64_t))sub_1BAE99864, MEMORY[0x1E0DED188]);
    sub_1BAEF1A88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD107EC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE997EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9965C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF1AD8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1D004(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE99864();
    sub_1BA4A2870(&qword_1EF2B2F20, (uint64_t (*)(uint64_t))sub_1BAE99864, MEMORY[0x1E0DED188]);
    sub_1BA5516DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10948(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8E75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E654);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4094;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1D1E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8E7D4();
    sub_1BA4A2870(&qword_1ED3AEE60, (uint64_t (*)(uint64_t))sub_1BAE8E7D4, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5AAF38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE8A28C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8A184);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF4700;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1D3C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE8A304();
    sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10C1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAE851F4(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE850EC);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEF572C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE1D5A4(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE8526C();
    sub_1BA4A2870(&qword_1ED3AEE40, (uint64_t (*)(uint64_t))sub_1BAE8526C, MEMORY[0x1E0DED188]);
    sub_1BA5A8098();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE73A30(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE73928);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFAD90;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1D784(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE73AA8();
    sub_1BA4A2870(&qword_1ED3AEE30, (uint64_t (*)(uint64_t))sub_1BAE73AA8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD10ED4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE73A30(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73928);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFAD90;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1D784(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE73AA8();
    sub_1BA4A2870(&qword_1ED3AEE30, (uint64_t (*)(uint64_t))sub_1BAE73AA8, MEMORY[0x1E0DED188]);
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11030(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE73A30(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73928);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFAD90;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1D784(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE73AA8();
    sub_1BA4A2870(&qword_1ED3AEE30, (uint64_t (*)(uint64_t))sub_1BAE73AA8, MEMORY[0x1E0DED188]);
    sub_1BA55289C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1118C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEBD5D0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBD6C0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEB708;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1D964(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEBD648();
    sub_1BA4A2870(&qword_1EF2B3620, (uint64_t (*)(uint64_t))sub_1BAEBD648, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD112E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE72558(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE72450);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFB758;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1DB44(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE725D0();
    sub_1BA4A2870(&qword_1ED3AEE20, (uint64_t (*)(uint64_t))sub_1BAE725D0, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11444(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4 & 1;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAEAFF78(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAFE2C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEEDBEC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE1DD24(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEAFFF0();
    sub_1BA4A2870(&qword_1EF2B3378, (uint64_t (*)(uint64_t))sub_1BAEAFFF0, MEMORY[0x1E0DED188]);
    sub_1BAEE4D88();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD115A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE79F7C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A06C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF8A0C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1DF04(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE79FF4();
    sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7A2F4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF88C8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1E0E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7A36C();
    sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1185C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE88E90(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE88D88);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4C5C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1E2C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE88F08();
    sub_1BA4A2870(&qword_1ED3AEDE0, (uint64_t (*)(uint64_t))sub_1BAE88F08, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD119B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC535C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC5254);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9984;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1E4A4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC53D4();
    sub_1BA4A2870(&qword_1ED3AEDC0, (uint64_t (*)(uint64_t))sub_1BAEC53D4, MEMORY[0x1E0DED188]);
    sub_1BA58FD48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE722E8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE721E0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFB7BC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1E684(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE72360();
    sub_1BA4A2870(&qword_1ED3AEDB0, (uint64_t (*)(uint64_t))sub_1BAE72360, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11C70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE8FAC4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F9BC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF3A68;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1E864(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE8FB3C();
    sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11DC8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8FAC4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F9BC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3A68;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1E864(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8FB3C();
    sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD11F20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8FAC4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F9BC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3A68;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1E864(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8FB3C();
    sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B9500, (uint64_t)&type metadata for FormatTypeDefinition.Case, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA619F2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1209C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE70B4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE71A4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1EA44(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE712C();
    sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD121F4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE70B4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE71A4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1EA44(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE712C();
    sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1234C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE6D54(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6E44);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1EC24(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE6DCC();
    sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD124A4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE6D54(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6E44);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1EC24(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE6DCC();
    sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD125FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE69F4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6AE4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1EE04(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE6A6C();
    sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD12754(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE69F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6AE4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1EE04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE6A6C();
    sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD128AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE6694(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6784);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1EFE4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE670C();
    sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD12A04(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE6694(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6784);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1EFE4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE670C();
    sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD12B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE6440(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6530);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1F1C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE64B8();
    sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD12CB4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE6440(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6530);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1F1C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE64B8();
    sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD12E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE6148(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6238);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1F3A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE61C0();
    sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD12F64(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE6148(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6238);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1F3A4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE61C0();
    sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD130BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE5DE8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5ED8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1F584(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE5E60();
    sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13214(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE5DE8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5ED8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1F584(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE5E60();
    sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1336C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE5A88(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5B78);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1F764(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE5B00();
    sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD134C4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE5A88(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5B78);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1F764(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE5B00();
    sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1361C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE57BC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE58AC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1F944(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE5834();
    sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13774(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE57BC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE58AC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1F944(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE5834();
    sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD138CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE545C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE554C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1FB24(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE54D4();
    sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13A24(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE545C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE554C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1FB24(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE54D4();
    sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEE5150(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5240);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE53C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1FD04(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE51C8();
    sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13CD4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE5150(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5240);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE53C0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE1FD04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE51C8();
    sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA1AF8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1988);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEFD04;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE1FEE4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA1B70();
    sub_1BA4A2870(&qword_1ED3AED80, (uint64_t (*)(uint64_t))sub_1BAEA1B70, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD13F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA1D68(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1C60);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEFC94;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE200C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA1DE0();
    sub_1BA4A2870(&qword_1ED3AED90, (uint64_t (*)(uint64_t))sub_1BAEA1DE0, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD140E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA1D68(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1C60);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEFC94;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE200C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA1DE0();
    sub_1BA4A2870(&qword_1ED3AED90, (uint64_t (*)(uint64_t))sub_1BAEA1DE0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE96F7C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9706C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF256C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE202A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE96FF4();
    sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE972F4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE971EC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF2490;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE20484(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9736C();
    sub_1BA4A2870(&qword_1ED3AED60, (uint64_t (*)(uint64_t))sub_1BAE9736C, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD144EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE91B54(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE91A08);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3230;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE20664(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE91BCC();
    sub_1BA4A2870(&qword_1EF2B2E28, (uint64_t (*)(uint64_t))sub_1BAE91BCC, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14670(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8F854(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F74C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3B1C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE20844(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8F8CC();
    sub_1BA4A2870(&qword_1ED3AED40, (uint64_t (*)(uint64_t))sub_1BAE8F8CC, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD147F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89984(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE89838);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEF184;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE20A24(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE899FC();
    sub_1BA4A2870(&qword_1EF2B2BD0, (uint64_t (*)(uint64_t))sub_1BAE899FC, MEMORY[0x1E0DED188]);
    sub_1BA5A3D48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14950(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE888E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE887DC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEEB40;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE20C04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8895C();
    sub_1BA4A2870(&qword_1ED3AED30, (uint64_t (*)(uint64_t))sub_1BAE8895C, MEMORY[0x1E0DED188]);
    sub_1BA5A3D48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE80F80(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE81070);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF66C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE20DE4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE80FF8();
    sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE8148C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE81384);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF6620;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE20FC4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE81504();
    sub_1BA4A2870(&qword_1ED3AED20, (uint64_t (*)(uint64_t))sub_1BAE81504, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7B508(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B5F8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF80C0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE211A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7B580();
    sub_1BA4A2870(&qword_1ED3AECF0, (uint64_t (*)(uint64_t))sub_1BAE7B580, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD14EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7B880(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B778);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF802C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE21384(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7B8F8();
    sub_1BA4A2870(&qword_1ED3AED00, (uint64_t (*)(uint64_t))sub_1BAE7B8F8, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD15014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7D7F8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D8E8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF746C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE21564(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7D870();
    sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1516C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7D7F8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D8E8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF746C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE21564(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7D870();
    sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD152C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBF1C8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBF0C0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAF10;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE21744(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBF240();
    sub_1BA4A2870(&qword_1ED3AECC0, (uint64_t (*)(uint64_t))sub_1BAEBF240, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD15420(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAFCC4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAFBBC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEDC8C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE21924(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAFD3C();
    sub_1BA4A2870(&qword_1ED3AECB0, (uint64_t (*)(uint64_t))sub_1BAEAFD3C, MEMORY[0x1E0DED188]);
    sub_1BA59894C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1557C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAFCC4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAFBBC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEDC8C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE21924(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAFD3C();
    sub_1BA4A2870(&qword_1ED3AECB0, (uint64_t (*)(uint64_t))sub_1BAEAFD3C, MEMORY[0x1E0DED188]);
    sub_1BA598990();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD156D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE70998(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE70840);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFC088;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE21B04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE70A10();
    sub_1BA4A2870(&qword_1ED3AEC90, (uint64_t (*)(uint64_t))sub_1BAE70A10, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1585C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE70998(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE70840);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFC088;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE21B04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE70A10();
    sub_1BA4A2870(&qword_1ED3AEC90, (uint64_t (*)(uint64_t))sub_1BAE70A10, MEMORY[0x1E0DED188]);
    sub_1BA84D73C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD159B8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA1528(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1420);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEFF38;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE21CE4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA15A0();
    sub_1BA4A2870(&qword_1ED3AEC80, (uint64_t (*)(uint64_t))sub_1BAEA15A0, MEMORY[0x1E0DED188]);
    sub_1BAEEFF44();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD15B18(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  double v32;
  double v33;

  v32 = a7;
  v33 = a8;
  v29 = a1;
  v30 = a2;
  v13 = a3 & 1;
  v31 = a3 & 1;
  sub_1BAE94990(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a1;
  v27[1] = a2;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE94888);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a5;
  v24 = a6;
  v25 = sub_1BAEF3050;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a1, a2, v13);
  sub_1BAE21EC4(a4, a1, a2, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE94A08();
    sub_1BA4A2870(&qword_1ED3AEC70, (uint64_t (*)(uint64_t))sub_1BAE94A08, MEMORY[0x1E0DED188]);
    sub_1BA5B987C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD15C74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89C38(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE89AEC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEEB40;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22284(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE89CB0();
    sub_1BA4A2870(&qword_1EF2B2C18, (uint64_t (*)(uint64_t))sub_1BAE89CB0, MEMORY[0x1E0DED188]);
    sub_1BA5A3D48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD15DD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;

  v32 = a1;
  v33 = a2 & 1;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE76B34(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE76C24);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF9E6C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE22464(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE76BAC();
    sub_1BA4A2870(&qword_1ED3AEC60, (uint64_t (*)(uint64_t))sub_1BAE76BAC, MEMORY[0x1E0DED188]);
    sub_1BA733370();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD15F34(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB7460(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7358);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEECBA0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22644(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB74D8();
    sub_1BA4A2870(&qword_1ED3AEC50, (uint64_t (*)(uint64_t))sub_1BAEB74D8, MEMORY[0x1E0DED188]);
    sub_1BA53DAE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEB7460(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7358);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEECBA0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE22644(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB74D8();
    sub_1BA4A2870(&qword_1ED3AEC50, (uint64_t (*)(uint64_t))sub_1BAEB74D8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD161EC(__int128 *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  _OWORD v33[2];

  v12 = a1[1];
  v32 = *a1;
  v33[0] = v12;
  *(_OWORD *)((char *)v33 + 10) = *(__int128 *)((char *)a1 + 26);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAEAF4BC(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEEDE68;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE22824(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEAF534();
    sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
    sub_1BAEEDF78();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16354(char a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  __n128 *v16;
  uint64_t v18;
  char v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  __n128 *v23;
  __n128 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;

  v27 = a1;
  v25 = a2;
  v26 = a3;
  sub_1BA6EE1B8(0);
  v13 = (unint64_t *)(v6 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v24.n128_u64[0] = a2;
  v24.n128_u64[1] = a3;
  v16 = (__n128 *)swift_allocObject();
  sub_1BA6EE228(&v24, v16 + 1);
  v16[2].n128_u64[0] = v14;
  v16[2].n128_u64[1] = v15;
  v20 = a5;
  v21 = a6;
  v22 = sub_1BAEE4820;
  v23 = v16;
  swift_retain();
  sub_1BA6EE1A4(a2, a3);
  sub_1BA58D7CC(a4, a2, a3, (uint64_t)sub_1BAEFCC08, (uint64_t)v19);
  if (!v18)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7C34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD164A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE774BC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE773B4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF9CB8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE22A04(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE77534();
    sub_1BA4A2870(&qword_1ED3AEC30, (uint64_t (*)(uint64_t))sub_1BAE77534, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD165FC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE774BC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE773B4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9CB8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22A04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE77534();
    sub_1BA4A2870(&qword_1ED3AEC30, (uint64_t (*)(uint64_t))sub_1BAE77534, MEMORY[0x1E0DED188]);
    sub_1BA6F60E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16758(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE774BC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE773B4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9CB8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22A04(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE77534();
    sub_1BA4A2870(&qword_1ED3AEC30, (uint64_t (*)(uint64_t))sub_1BAE77534, MEMORY[0x1E0DED188]);
    sub_1BA6F6128();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD168B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA1798(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1690);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEFDE4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22BE4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA1810();
    sub_1BA4A2870(&qword_1ED3AEC20, (uint64_t (*)(uint64_t))sub_1BAEA1810, MEMORY[0x1E0DED188]);
    sub_1BA5A83C0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16A14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA0734(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF03B8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22DC4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA07AC();
    sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
    sub_1BAEF046C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16B70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA0734(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF03B8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE22DC4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA07AC();
    sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9E410(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9E500);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF0C48;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE22FA4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9E488();
    sub_1BA4A2870(&qword_1ED3AEC00, (uint64_t (*)(uint64_t))sub_1BAE9E488, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16E24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE90E14(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE90D0C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3490;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23184(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE90E8C();
    sub_1BA4A2870(&qword_1ED3AEBE0, (uint64_t (*)(uint64_t))sub_1BAE90E8C, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD16FA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE895C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23364(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAECD95C();
    sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17104(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE895C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23364(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAECD95C();
    sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
    sub_1BA826738();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17260(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE895C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23364(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAECD95C();
    sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
    sub_1BA766C2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD173BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4 & 1;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAECD8E4(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEE895C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE23364(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECD95C();
    sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
    sub_1BAA62A58();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17520(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7498C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE74840);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFA804;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23544(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE74A04();
    sub_1BA4A2870(&qword_1ED3AEBC0, (uint64_t (*)(uint64_t))sub_1BAE74A04, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1767C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE78674(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE784E4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF93D8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23724(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE786EC();
    sub_1BA4A2870(&qword_1ED3AEBB0, (uint64_t (*)(uint64_t))sub_1BAE786EC, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17800(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[80];
  uint64_t v33;

  sub_1BAE78764(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE78674(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE784E4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF93D8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  v19 = v33;
  sub_1BAE23724(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v19)
  {
    sub_1BAE786EC();
    sub_1BA4A2870(&qword_1ED3AEBB0, (uint64_t (*)(uint64_t))sub_1BAE786EC, MEMORY[0x1E0DED188]);
    sub_1BAEF93E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17974(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB20B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEED7EC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23904(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB2130();
    sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
    sub_1BAEED868();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17AD0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAAE70(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAAC9C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE67C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23AE4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAAEE8();
    sub_1BA4A2870(&qword_1EF2B32F8, (uint64_t (*)(uint64_t))sub_1BAEAAEE8, MEMORY[0x1E0DED188]);
    sub_1BAEEE724();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17C2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE99AE4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE99998);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF19A8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE23CC4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE99B5C();
    sub_1BA4A2870(&qword_1ED3AEB90, (uint64_t (*)(uint64_t))sub_1BAE99B5C, MEMORY[0x1E0DED188]);
    sub_1BA766C2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17D88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE91338(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE911EC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF338C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE23EA4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE913B0();
    sub_1BA4A2870(&qword_1ED3AEB80, (uint64_t (*)(uint64_t))sub_1BAE913B0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD17EE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAE91338(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE911EC);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEF338C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE23EA4(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE913B0();
    sub_1BA4A2870(&qword_1ED3AEB80, (uint64_t (*)(uint64_t))sub_1BAE913B0, MEMORY[0x1E0DED188]);
    sub_1BAA375E0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18040(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE91084(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE90F7C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF33FC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE24084(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE910FC();
    sub_1BA4A2870(&qword_1ED3AEB70, (uint64_t (*)(uint64_t))sub_1BAE910FC, MEMORY[0x1E0DED188]);
    sub_1BA5F41DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1819C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8F2EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F1E4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC8B8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE24264(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8F364();
    sub_1BA4A2870(&qword_1ED3AEB50, (uint64_t (*)(uint64_t))sub_1BAE8F364, MEMORY[0x1E0DED188]);
    sub_1BA76371C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD182F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE79DF8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE79CF0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF8D44;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE24444(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE79E70();
    sub_1BA4A2870(&qword_1ED3AEB40, (uint64_t (*)(uint64_t))sub_1BAE79E70, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE74F44(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE74E3C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAEAC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE24624(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE74FBC();
    sub_1BA4A2870(&qword_1ED3AEB20, (uint64_t (*)(uint64_t))sub_1BAE74FBC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD185AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE86C40(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE86B38);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF55C8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE24804(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE86CB8();
    sub_1BA4A2870(&qword_1ED3AEAF0, (uint64_t (*)(uint64_t))sub_1BAE86CB8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18704(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAECD354(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE8710;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE249E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECD3CC();
    sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1885C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAECD754(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE8638;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE24BC4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECD7CC();
    sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD189B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC8C70(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC8B68);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE94EC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE24DA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC8CE8();
    sub_1BA4A2870(&qword_1ED3AEAD0, (uint64_t (*)(uint64_t))sub_1BAEC8CE8, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B9500, (uint64_t)&type metadata for FormatTypeDefinition.Case, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA619F2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC8A00(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC88F8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE9550;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE24F84(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC8A78();
    sub_1BA4A2870(&qword_1ED3AEAC0, (uint64_t (*)(uint64_t))sub_1BAEC8A78, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18C8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7314C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE72FBC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFB068;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE25164(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE731C4();
    sub_1BA4A2870(&qword_1ED3AEAB0, (uint64_t (*)(uint64_t))sub_1BAE731C4, MEMORY[0x1E0DED188]);
    sub_1BAEFB0CC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18DEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC2874(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2964);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA4E8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25344(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC28EC();
    sub_1BA4A2870(&qword_1ED3AEAA0, (uint64_t (*)(uint64_t))sub_1BAEC28EC, MEMORY[0x1E0DED188]);
    sub_1BA654038();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD18F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEB85A4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB849C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEC370;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE25524(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB861C();
    sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD190A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB85A4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB849C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC370;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25524(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB861C();
    sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1ED3C03D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5AAEA8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1921C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB85A4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB849C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC370;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25524(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB861C();
    sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5AAF38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19398(__int128 *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  char v35;

  v12 = a1[1];
  v32 = *a1;
  v33 = v12;
  v34 = a1[2];
  v35 = *((_BYTE *)a1 + 48);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAEB3244(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB303C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEED0DC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE25704(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB32BC();
    sub_1BA4A2870(&qword_1EF2B3400, (uint64_t (*)(uint64_t))sub_1BAEB32BC, MEMORY[0x1E0DED188]);
    sub_1BAEED1DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19508(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB3244(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB303C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEED0DC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25704(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB32BC();
    sub_1BA4A2870(&qword_1EF2B3400, (uint64_t (*)(uint64_t))sub_1BAEB32BC, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B93B0, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5DCB64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7445C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE74354);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFA908;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE258E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE744D4();
    sub_1BA4A2870(&qword_1ED3AEA80, (uint64_t (*)(uint64_t))sub_1BAE744D4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD197DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7445C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE74354);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFA908;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE258E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE744D4();
    sub_1BA4A2870(&qword_1ED3AEA80, (uint64_t (*)(uint64_t))sub_1BAE744D4, MEMORY[0x1E0DED188]);
    sub_1BA7A8DAC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19938(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAD7E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAD6DC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE224;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25AC4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAD85C();
    sub_1BA4A2870(&qword_1ED3AEA70, (uint64_t (*)(uint64_t))sub_1BAEAD85C, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19A94(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAD7E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAD6DC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE224;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25AC4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAD85C();
    sub_1BA4A2870(&qword_1ED3AEA70, (uint64_t (*)(uint64_t))sub_1BAEAD85C, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B94D0, (uint64_t)&type metadata for FormatColorProcessor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6132EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19C10(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA260C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA247C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEF9E4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25CA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA2684();
    sub_1BA4A2870(&qword_1EF2B3028, (uint64_t (*)(uint64_t))sub_1BAEA2684, MEMORY[0x1E0DED188]);
    sub_1BAEEF8E0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19D6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE73BC0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFABFC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25E84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE73C38();
    sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD19EC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE73BC0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFABFC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25E84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE73C38();
    sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
    sub_1BA829298();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A024(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE73BC0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFABFC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE25E84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE73C38();
    sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
    sub_1BA82C7F8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9B20C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF12B8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE26064(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9B284();
    sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9B5FC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF1160;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE26244(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9B674();
    sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE76070(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFA188;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE26424(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE760E8();
    sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A58C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7642C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFA0C8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE26604(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE764A4();
    sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A6E8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAE94C44(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE94AF8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEF2FC8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE267E4(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE94CBC();
    sub_1BA4A2870(&qword_1EF2B2E70, (uint64_t (*)(uint64_t))sub_1BAE94CBC, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A844(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE90BA4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE90A58);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3518;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE269C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE90C1C();
    sub_1BA4A2870(&qword_1EF2B2D98, (uint64_t (*)(uint64_t))sub_1BAE90C1C, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, &qword_1ED3B4028, (uint64_t (*)(void))sub_1BA835D64, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA8357F4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1A9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE76A44(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7693C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9F6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE26BA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE76ABC();
    sub_1BA4A2870(&qword_1ED3AEA00, (uint64_t (*)(uint64_t))sub_1BAE76ABC, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1AB4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE76A44(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7693C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9F6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE26BA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE76ABC();
    sub_1BA4A2870(&qword_1ED3AEA00, (uint64_t (*)(uint64_t))sub_1BAE76ABC, MEMORY[0x1E0DED188]);
    sub_1BAA1B6FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1ACA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7593C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE75A2C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFA4A4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE26D84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE759B4();
    sub_1BA4A2870(&qword_1EF2B2498, (uint64_t (*)(uint64_t))sub_1BAE759B4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1AE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7593C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE75A2C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFA4A4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE26D84(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE759B4();
    sub_1BA4A2870(&qword_1EF2B2498, (uint64_t (*)(uint64_t))sub_1BAE759B4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1AF58(__int128 *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  __int128 v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v12 = a1[1];
  v32 = *a1;
  v33 = v12;
  v34 = *((_QWORD *)a1 + 4);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE7593C(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE75A2C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEFA4A4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE26D84(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE759B4();
    sub_1BA4A2870(&qword_1EF2B2498, (uint64_t (*)(uint64_t))sub_1BAE759B4, MEMORY[0x1E0DED188]);
    sub_1BA49B0D0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B0C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE77B34(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE779E8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF98F4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE26F64(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE77BAC();
    sub_1BA4A2870(&qword_1EF2B2588, (uint64_t (*)(uint64_t))sub_1BAE77BAC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAECFC9C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE8354;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE27144(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECFD14();
    sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAED0014(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE8288;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE27324(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAED008C();
    sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B4CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC840C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE96E0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE27504(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC8484();
    sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC8784(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE95E4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE276E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC87FC();
    sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7C27C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C0A4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF7D24;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE278C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7C2F4();
    sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1B8D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC0114(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0204);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEACC4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE27AA4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC018C();
    sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1BA30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC0114(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0204);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEACC4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE27AA4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC018C();
    sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B9340, (uint64_t)&type metadata for FormatStateViewNodeState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEEACE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1BBAC(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEBB9E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBB810);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEBC4C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE27C84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEBBA5C();
    sub_1BA4A2870(&qword_1ED3AE980, (uint64_t (*)(uint64_t))sub_1BAEBBA5C, MEMORY[0x1E0DED188]);
    sub_1BAEEBCA4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1BD08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAB41C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAB314);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE4B0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE27E64(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAB494();
    sub_1BA4A2870(&qword_1ED3AE970, (uint64_t (*)(uint64_t))sub_1BAEAB494, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1BE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA81DC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA806C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEEF2C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE28044(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA8254();
    sub_1BA4A2870(&qword_1ED3AE960, (uint64_t (*)(uint64_t))sub_1BAEA8254, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1BFE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA7BC8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA7AC0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEF184;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE28224(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA7C40();
    sub_1BA4A2870(&qword_1ED3AE950, (uint64_t (*)(uint64_t))sub_1BAEA7C40, MEMORY[0x1E0DED188]);
    sub_1BA654038();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA67C8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEF400;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE28404(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA6840();
    sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA6BC8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEF348;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE285E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA6C40();
    sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C3F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9F09C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF087C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE287C4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9F114();
    sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9F458(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF0728;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE289A4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9F4D0();
    sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
    sub_1BA68660C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C6A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89EA8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE89DA0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF494C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE28B84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE89F20();
    sub_1BA4A2870(&qword_1ED3AE910, (uint64_t (*)(uint64_t))sub_1BAE89F20, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C800(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE89EA8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE89DA0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF494C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE28B84(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE89F20();
    sub_1BA4A2870(&qword_1ED3AE910, (uint64_t (*)(uint64_t))sub_1BAE89F20, MEMORY[0x1E0DED188]);
    sub_1BA6400BC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1C960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE87458(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8730C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAEAC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE28D64(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE874D0();
    sub_1BA4A2870(&qword_1EF2B2A98, (uint64_t (*)(uint64_t))sub_1BAE874D0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1CAB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE71684(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7157C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEEB40;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE28F44(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE716FC();
    sub_1BA4A2870(&qword_1ED3AE8F0, (uint64_t (*)(uint64_t))sub_1BAE716FC, MEMORY[0x1E0DED188]);
    sub_1BA654038();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1CC14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)();
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v27 = a1;
  v28 = a2;
  v11 = a3 & 1;
  v29 = a3 & 1;
  sub_1BAE73344(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v25[0] = a1;
  v25[1] = a2;
  v26 = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v25, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE73434);
  *(_QWORD *)(v16 + 40) = v15;
  *(_QWORD *)(v16 + 48) = v14;
  v21 = a5;
  v22 = a6;
  v23 = sub_1BAEFAE70;
  v24 = v16;
  swift_retain();
  sub_1BA69C808(a1, a2, v11);
  sub_1BAE29124(a4, a1, a2, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v20);
  if (!v19)
  {
    sub_1BAE733BC();
    sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
    sub_1BA5E6F20();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1CD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE73344(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE73434);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFAE70;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE29124(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE733BC();
    sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1CEC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE73344(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73434);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFAE70;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE29124(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE733BC();
    sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D01C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAED0AE8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE7DC8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE29304(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAED0B60();
    sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
    sub_1BA5DB144();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D178(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAED0AE8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE7DC8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE29304(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAED0B60();
    sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAECAADC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECABCC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE9140;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE294E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAECAB54();
    sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D42C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC5900(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC57B4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEC59FC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE296C4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC5978();
    sub_1BA4A2870(&qword_1EF2B3978, (uint64_t (*)(uint64_t))sub_1BAEC5978, MEMORY[0x1E0DED188]);
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D588(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC3518(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC33CC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA194;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE298A4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC3590();
    sub_1BA4A2870(&qword_1EF2B37F8, (uint64_t (*)(uint64_t))sub_1BAEC3590, MEMORY[0x1E0DED188]);
    sub_1BA5F41DC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D6E4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC37CC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3680);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA10C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE29A84(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC3844();
    sub_1BA4A2870(&qword_1EF2B3838, (uint64_t (*)(uint64_t))sub_1BAEC3844, MEMORY[0x1E0DED188]);
    sub_1BA5FE24C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D840(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC2FF4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2EA8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA2BC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE29C64(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC306C();
    sub_1BA4A2870(&qword_1ED3AE890, (uint64_t (*)(uint64_t))sub_1BAEC306C, MEMORY[0x1E0DED188]);
    sub_1BA5FE290();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1D99C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC3264(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC315C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA228;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE29E44(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC32DC();
    sub_1BA4A2870(&qword_1ED3AE880, (uint64_t (*)(uint64_t))sub_1BAEC32DC, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1DB20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC2D40(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2BF4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA344;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A024(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC2DB8();
    sub_1BA4A2870(&qword_1EF2B37B0, (uint64_t (*)(uint64_t))sub_1BAEC2DB8, MEMORY[0x1E0DED188]);
    sub_1BA6A1098();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1DC7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7BF3C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7BDF0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7DC0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A204(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7BFB4();
    sub_1BA4A2870(&qword_1EF2B27E8, (uint64_t (*)(uint64_t))sub_1BAE7BFB4, MEMORY[0x1E0DED188]);
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    sub_1BA5FE1E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1DE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEB8120(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEC4F0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2A3E4(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1DF58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB8120(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC4F0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A3E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E0B4(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1 & 1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB8120(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC4F0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A3E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BAAF3898();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E214(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAEB8120(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEEC4F0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE2A3E4(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E36C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[48];

  sub_1BAEB8210(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAEB8120(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEEC4F0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE2A3E4(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BAEEC5E0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E4D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEB8120(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEC4F0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A3E4(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1EF2B34A0, (uint64_t)&type metadata for FormatShineBlend, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEEC55C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E64C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAEB8120(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7F5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEEC4F0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE2A3E4(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB8198();
    sub_1BA4A2870(&qword_1EF2B34C0, (uint64_t (*)(uint64_t))sub_1BAEB8198, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E7A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA9E28(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA9D20);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEEB40;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A740(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA9EA0();
    sub_1BA4A2870(&qword_1ED3AE870, (uint64_t (*)(uint64_t))sub_1BAEA9EA0, MEMORY[0x1E0DED188]);
    sub_1BA654038();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1E904(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE78FF8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78EF0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF906C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2A920(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE79070();
    sub_1BA4A2870(&qword_1ED3AE860, (uint64_t (*)(uint64_t))sub_1BAE79070, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B9570, (uint64_t)&type metadata for FormatLocalizationString, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA567CE0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1EA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE98F20(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE99010);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEE9140;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2AB00(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE98F98();
    sub_1BA4A2870(&qword_1ED3AE850, (uint64_t (*)(uint64_t))sub_1BAE98F98, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1EBD8(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8E238(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E130);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF41A0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2ACE0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8E2B0();
    sub_1BA4A2870(&qword_1ED3AE820, (uint64_t (*)(uint64_t))sub_1BAE8E2B0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1ED30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4 & 1;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAE746D8(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE745D0);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEFA868;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE2AEC0(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE74750();
    sub_1BA4A2870(&qword_1ED3AE800, (uint64_t (*)(uint64_t))sub_1BAE74750, MEMORY[0x1E0DED188]);
    sub_1BA60DF80();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1EE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBB2A8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBB398);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEBE0C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2B0A0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBB320();
    sub_1BA4A2870(&qword_1ED3AE7F0, (uint64_t (*)(uint64_t))sub_1BAEBB320, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1EFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEAA6D4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAA4F8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEE960;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2B640(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEAA74C();
    sub_1BA4A2870(&qword_1EF2B32B8, (uint64_t (*)(uint64_t))sub_1BAEAA74C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F144(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAA6D4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAA4F8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE960;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2B640(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAA74C();
    sub_1BA4A2870(&qword_1EF2B32B8, (uint64_t (*)(uint64_t))sub_1BAEAA74C, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1EF2B3298, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEEE96C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F2C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7C4EC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C3E4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF7C90;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2B820(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7C564();
    sub_1BA4A2870(&qword_1ED3AE7B0, (uint64_t (*)(uint64_t))sub_1BAE7C564, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F418(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC2418(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2508);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEA5DC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2BBE0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC2490();
    sub_1BA4A2870(&qword_1ED3AE788, (uint64_t (*)(uint64_t))sub_1BAEC2490, MEMORY[0x1E0DED188]);
    sub_1BA4B07F0(0, &qword_1ED3CF770, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeCase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA673A84();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F594(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC0740(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0638);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEAAF8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2BDC0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC07B8();
    sub_1BA4A2870(&qword_1ED3AE778, (uint64_t (*)(uint64_t))sub_1BAEC07B8, MEMORY[0x1E0DED188]);
    sub_1BA766C2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F6F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC0740(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0638);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEAAF8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2BDC0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC07B8();
    sub_1BA4A2870(&qword_1ED3AE778, (uint64_t (*)(uint64_t))sub_1BAEC07B8, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatImageNodeStyle();
    sub_1BA4A2870(&qword_1ED3A6808, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F86C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[80];
  uint64_t v33;

  sub_1BAE78E3C(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE78D4C(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE78B78);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF90F4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  v19 = v33;
  sub_1BAE2BFA0(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v19)
  {
    sub_1BAE78DC4();
    sub_1BA4A2870(&qword_1EF2B2668, (uint64_t (*)(uint64_t))sub_1BAE78DC4, MEMORY[0x1E0DED188]);
    sub_1BAEF91A8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1F9E0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  char v33;

  v32 = a1;
  v33 = a2 & 1;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEB5ED8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB5FC8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEECE6C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2C180(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEB5F50();
    sub_1BA4A2870(&qword_1ED3AE768, (uint64_t (*)(uint64_t))sub_1BAEB5F50, MEMORY[0x1E0DED188]);
    sub_1BA800BE4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1FB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE75F5C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE75E10);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAE76058;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2C360(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE75FD4();
    sub_1BA4A2870(&qword_1ED3AE758, (uint64_t (*)(uint64_t))sub_1BAE75FD4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1FC9C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, float a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  float v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAEAB1AC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAB0A4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEEE514;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE2C540(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAB224();
    sub_1BA4A2870(&qword_1ED3AE748, (uint64_t (*)(uint64_t))sub_1BAEAB224, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1FDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA844C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA8344);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEEEB0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2C720(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA84C4();
    sub_1BA4A2870(&qword_1ED3AE738, (uint64_t (*)(uint64_t))sub_1BAEA84C4, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD1FF4C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAE8F5E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F4DC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEF3B1C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE2C900(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8F65C();
    sub_1BA4A2870(&qword_1ED3AE718, (uint64_t (*)(uint64_t))sub_1BAE8F65C, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD200A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8EEA0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8ED98);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3D64;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2CAE0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8EF18();
    sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
    sub_1BA579ED0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v29 = a4;
  v30 = a5;
  v13 = a6 & 1;
  v31 = a6 & 1;
  sub_1BAE7E690(0);
  v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a8;
  v24 = a9;
  v25 = sub_1BAEF713C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BAE2CCC0(a7, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7E708();
    sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
    sub_1BAEF71E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20364(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7E690(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF713C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2CCC0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7E708();
    sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD204C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE789CC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE788C4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF9260;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2CEA0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE78A44();
    sub_1BA4A2870(&qword_1EF2B2608, (uint64_t (*)(uint64_t))sub_1BAE78A44, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20618(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE718C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFBA08;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D080(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE71940();
    sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
    sub_1BA5FB454();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20774(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE82B70(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE82968);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF60A0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D260(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE82BE8();
    sub_1BA4A2870(&qword_1ED3AE6D8, (uint64_t (*)(uint64_t))sub_1BAE82BE8, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3AAF20, (uint64_t)&type metadata for FormatBezierPathComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEF60AC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD208F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE81740(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE815F4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF65BC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D440(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE817B8();
    sub_1BA4A2870(&qword_1ED3AE6C8, (uint64_t (*)(uint64_t))sub_1BAE817B8, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20A48(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAECBF58(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE8FFC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D620(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAECBFD0();
    sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20BA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAECBF58(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE8FFC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D620(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAECBFD0();
    sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
    sub_1BA829BBC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20D00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE72738(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE72828);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9800;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D800(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE727B0();
    sub_1BA4A2870(&qword_1ED3AF390, (uint64_t (*)(uint64_t))sub_1BAE727B0, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBC020(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBBED4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEB878;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2D9E0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBC098();
    sub_1BA4A2870(&qword_1EF2B3608, (uint64_t (*)(uint64_t))sub_1BAEBC098, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD20FB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEBC020(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBBED4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEB878;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2D9E0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEBC098();
    sub_1BA4A2870(&qword_1EF2B3608, (uint64_t (*)(uint64_t))sub_1BAEBC098, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD2110C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAEB2ED4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB2D88);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEED22C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE2DBC0(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEB2F4C();
    sub_1BA4A2870(&qword_1ED3AF360, (uint64_t (*)(uint64_t))sub_1BAEB2F4C, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21268(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEFC6CC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEFC488);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEFC7C8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2DDA0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEFC744();
    sub_1BA4A2870(&qword_1EF2B6120, (uint64_t (*)(uint64_t))sub_1BAEFC744, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B9458, (uint64_t)&type metadata for FormatMenuItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA530DB0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD213E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE99FA8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF1870;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2DF80(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE9A020();
    sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21540(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE99FA8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF1870;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2DF80(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE9A020();
    sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
    sub_1BA766C2C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD2169C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE77D64(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE77E54);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9800;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2E160(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE77DDC();
    sub_1BA4A2870(&qword_1ED3AF330, (uint64_t (*)(uint64_t))sub_1BAE77DDC, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD217F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE87058(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE87148);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF54D4;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2E340(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE870D0();
    sub_1BA4A2870(&qword_1ED3AF320, (uint64_t (*)(uint64_t))sub_1BAE870D0, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21950(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAECF594(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE8500;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2E520(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAECF60C();
    sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21AAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE78274(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF94AC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2E700(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE782EC();
    sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
    sub_1BA7636D8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21C08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE78274(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF94AC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2E700(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE782EC();
    sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEBA90C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBA9FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEBFE0;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2E8E0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEBA984();
    sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD21EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA8700(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA85B4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAEAC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2EAC0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA8778();
    sub_1BA4A2870(&qword_1ED3AF2D0, (uint64_t (*)(uint64_t))sub_1BAEA8778, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22014(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA5488(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEF824;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2ECA0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA5500();
    sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22170(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA5488(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEF824;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2ECA0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA5500();
    sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
    sub_1BAEEF8E0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD222CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v35 = a4;
  v29 = a5;
  v30 = a6;
  v13 = a7 & 1;
  v31 = a7 & 1;
  sub_1BAEE447C(0);
  v15 = (uint64_t *)(v10 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a5;
  v27[1] = a6;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE4374);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a9;
  v24 = a10;
  v25 = sub_1BAEE4578;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAE2EE80(a8, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE44F4();
    sub_1BA4A2870(&qword_1ED3AF2C0, (uint64_t (*)(uint64_t))sub_1BAEE44F4, MEMORY[0x1E0DED188]);
    sub_1BA7B70C0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v32 = a1;
  v33 = a2;
  v34 = a3;
  v29 = a4;
  v30 = a5;
  v13 = a6 & 1;
  v31 = a6 & 1;
  sub_1BAEE447C(0);
  v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE4374);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a8;
  v24 = a9;
  v25 = sub_1BAEE4578;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BAE2EE80(a7, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEE44F4();
    sub_1BA4A2870(&qword_1ED3AF2C0, (uint64_t (*)(uint64_t))sub_1BAEE44F4, MEMORY[0x1E0DED188]);
    sub_1BA7B7104();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22588(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEE447C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE4374);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE4578;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2EE80(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEE44F4();
    sub_1BA4A2870(&qword_1ED3AF2C0, (uint64_t (*)(uint64_t))sub_1BAEE44F4, MEMORY[0x1E0DED188]);
    sub_1BA7B707C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD226E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9E954(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9EA44);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF0A88;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2F060(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9E9CC();
    sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD2283C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE9E954(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9EA44);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF0A88;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2F060(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE9E9CC();
    sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
    sub_1BA6371A0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22998(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE94720(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE94618);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF30B4;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2F240(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE94798();
    sub_1BA4A2870(&qword_1ED3AF290, (uint64_t (*)(uint64_t))sub_1BAE94798, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B93B0, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5DCB64();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22B14(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  uint64_t v10;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v35;
  double v36;
  double v37;

  v34 = a7;
  v35 = a8;
  v36 = a9;
  v37 = a10;
  v31 = a1;
  v32 = a2;
  v15 = a3 & 1;
  v33 = a3 & 1;
  sub_1BAE94720(0);
  v17 = (uint64_t *)(v10 + *(int *)(v16 + 44));
  v19 = *v17;
  v18 = v17[1];
  v29[0] = a1;
  v29[1] = a2;
  v30 = v15;
  v20 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v29, v20 + 16, (uint64_t (*)(_QWORD))sub_1BAE94618);
  *(_QWORD *)(v20 + 40) = v19;
  *(_QWORD *)(v20 + 48) = v18;
  v25 = a5;
  v26 = a6;
  v27 = sub_1BAEF30B4;
  v28 = v20;
  swift_retain();
  sub_1BA69C808(a1, a2, v15);
  sub_1BAE2F240(a4, a1, a2, v15, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
  if (!v23)
  {
    sub_1BAE94798();
    sub_1BA4A2870(&qword_1ED3AF290, (uint64_t (*)(uint64_t))sub_1BAE94798, MEMORY[0x1E0DED188]);
    sub_1BA5DCBDC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE819BC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE818B4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAE7EEEC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2F420(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE81A34();
    sub_1BA4A2870(&qword_1ED3AF280, (uint64_t (*)(uint64_t))sub_1BAE81A34, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7130C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE713FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEFBD14;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2F600(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE71384();
    sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD22F24(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAAA10(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAA83C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE844;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2F7E0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAAA88();
    sub_1BA4A2870(&qword_1ED3AF268, (uint64_t (*)(uint64_t))sub_1BAEAAA88, MEMORY[0x1E0DED188]);
    sub_1BAC797C0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23080(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEAAA10(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAA83C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEE844;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2F7E0(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEAAA88();
    sub_1BA4A2870(&qword_1ED3AF268, (uint64_t (*)(uint64_t))sub_1BAEAAA88, MEMORY[0x1E0DED188]);
    sub_1BAEEE8EC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD231DC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[7];
  char v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a1;
  v21 = a2;
  v19 = a3;
  sub_1BAEE7470(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v14;
  v18[2] = a5;
  v18[3] = a6;
  v18[4] = sub_1BAEE759C;
  v18[5] = v16;
  swift_retain();
  sub_1BAE2F9C0(a4, a3, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  if (!v7)
  {
    sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BAEE7534();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23308(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[7];
  char v18;
  char v19;

  v19 = a1;
  v18 = a2;
  sub_1BAEE7470(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE759C;
  v17[5] = v15;
  swift_retain();
  sub_1BAE2F9C0(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BAEE7534();
    sub_1BA5BBBE0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23438(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v19 = a1;
  v18 = a2;
  sub_1BAEE7470(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE759C;
  v17[5] = v15;
  swift_retain();
  sub_1BAE2F9C0(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BAEE7534();
    sub_1BA4B07F0(0, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAEE763C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23588(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[6];
  char v18;
  uint64_t v19;

  v19 = a1;
  v18 = a2;
  sub_1BAEE7470(0);
  v12 = (uint64_t *)(v5 + *(int *)(v11 + 44));
  v14 = *v12;
  v13 = v12[1];
  v15 = swift_allocObject();
  *(_BYTE *)(v15 + 16) = a2;
  *(_QWORD *)(v15 + 24) = v14;
  *(_QWORD *)(v15 + 32) = v13;
  v17[2] = a4;
  v17[3] = a5;
  v17[4] = sub_1BAEE759C;
  v17[5] = v15;
  swift_retain();
  sub_1BAE2F9C0(a3, a2, (uint64_t)sub_1BAEFCC08, (uint64_t)v17);
  if (!v6)
  {
    sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BAEE7534();
    sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5AAF38();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD236D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEA7F04(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA7DFC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEEFA8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2FB48(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEA7F7C();
    sub_1BA4A2870(&qword_1ED3AF238, (uint64_t (*)(uint64_t))sub_1BAEA7F7C, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23830(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEA7F04(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA7DFC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEEEFA8;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE2FB48(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA7F7C();
    sub_1BA4A2870(&qword_1ED3AF238, (uint64_t (*)(uint64_t))sub_1BAEA7F7C, MEMORY[0x1E0DED188]);
    sub_1BA640C5C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD2398C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8, double a9, double a10)
{
  uint64_t v10;
  char v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v23;
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)();
  uint64_t v28;
  _QWORD v29[2];
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  double v34;
  double v35;
  double v36;
  double v37;

  v34 = a7;
  v35 = a8;
  v36 = a9;
  v37 = a10;
  v31 = a1;
  v32 = a2;
  v15 = a3 & 1;
  v33 = a3 & 1;
  sub_1BAEA7020(0);
  v17 = (uint64_t *)(v10 + *(int *)(v16 + 44));
  v19 = *v17;
  v18 = v17[1];
  v29[0] = a1;
  v29[1] = a2;
  v30 = v15;
  v20 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v29, v20 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6ED4);
  *(_QWORD *)(v20 + 40) = v19;
  *(_QWORD *)(v20 + 48) = v18;
  v25 = a5;
  v26 = a6;
  v27 = sub_1BAEEF244;
  v28 = v20;
  swift_retain();
  sub_1BA69C808(a1, a2, v15);
  sub_1BAE2FD28(a4, a1, a2, v15, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
  if (!v23)
  {
    sub_1BAEA7098();
    sub_1BA4A2870(&qword_1EF2B31A8, (uint64_t (*)(uint64_t))sub_1BAEA7098, MEMORY[0x1E0DED188]);
    sub_1BAEA6D40(0, &qword_1EF2B3148, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for FormatTranslate);
    sub_1BAEA6DB4(&qword_1EF2B5C60, &qword_1EF2B3148, (uint64_t (*)(_QWORD, _QWORD *))type metadata accessor for FormatTranslate, (uint64_t)&protocol conformance descriptor for FormatTranslate<A>);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23B24(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAEA7020(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6ED4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEEF244;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE2FD28(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEA7098();
    sub_1BA4A2870(&qword_1EF2B31A8, (uint64_t (*)(uint64_t))sub_1BAEA7098, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE8770C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE875C0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAEAC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE2FF08(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE87784();
    sub_1BA4A2870(&qword_1ED3AF228, (uint64_t (*)(uint64_t))sub_1BAE87784, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23DD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7AA34(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A8C4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF8618;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE300E8(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7AAAC();
    sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD23F30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7AA34(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A8C4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF8618;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE300E8(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7AAAC();
    sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
    sub_1BA62B2B4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD2408C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAEC04D0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC03C8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEEAB80;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE302C8(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC0548();
    sub_1BA4A2870(&qword_1ED3AF208, (uint64_t (*)(uint64_t))sub_1BAEC0548, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD241E4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  double v31;

  v31 = a7;
  v28 = a1;
  v29 = a2;
  v12 = a3 & 1;
  v30 = a3 & 1;
  sub_1BAE737C0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a1;
  v26[1] = a2;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE736B8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a5;
  v23 = a6;
  v24 = sub_1BAEEE4B0;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a1, a2, v12);
  sub_1BAE304A8(a4, a1, a2, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE73838();
    sub_1BA4A2870(&qword_1ED3AF1F8, (uint64_t (*)(uint64_t))sub_1BAE73838, MEMORY[0x1E0DED188]);
    sub_1BA5ED248();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE94F1C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE94DAC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF2F38;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE30688(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE94F94();
    sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE868C8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE869B8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF562C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE30868(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE86940();
    sub_1BA4A2870(&qword_1ED3AF1D8, (uint64_t (*)(uint64_t))sub_1BAE86940, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD245F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7B19C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B094);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF8300;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE30A48(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7B214();
    sub_1BA4A2870(&qword_1ED3AF1C8, (uint64_t (*)(uint64_t))sub_1BAE7B214, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24748(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[56];

  sub_1BA6F788C(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE7B19C(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B094);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF8300;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE30A48(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7B214();
    sub_1BA4A2870(&qword_1ED3AF1C8, (uint64_t (*)(uint64_t))sub_1BAE7B214, MEMORY[0x1E0DED188]);
    sub_1BA6F78E4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD248AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9BAF0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B9E8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF0D3C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE30DB0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9BB68();
    sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE9BAF0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B9E8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF0D3C;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE30DB0(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE9BB68();
    sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
    sub_1BA7850D0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24B60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[56];

  sub_1BAE8056C(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE809A8(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE80A98);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF68AC;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE30F90(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE80A20();
    sub_1BA4A2870(&qword_1ED3AF3C0, (uint64_t (*)(uint64_t))sub_1BAE80A20, MEMORY[0x1E0DED188]);
    sub_1BAEF6930();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24CC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE77100(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE771F0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF9D6C;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31170(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE77178();
    sub_1BA4A2870(&qword_1EF2B2530, (uint64_t (*)(uint64_t))sub_1BAE77178, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BAE81250();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24E40(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[56];

  sub_1BAE8056C(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAE80330(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE80420);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEF6AC8;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE31350(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE803A8();
    sub_1BA4A2870(&qword_1EF2B2948, (uint64_t (*)(uint64_t))sub_1BAE803A8, MEMORY[0x1E0DED188]);
    sub_1BAEF6930();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD24FA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAEC5610(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC54C4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEE9914;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31530(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAEC5688();
    sub_1BA4A2870(&qword_1EF2B3930, (uint64_t (*)(uint64_t))sub_1BAEC5688, MEMORY[0x1E0DED188]);
    sub_1BAA1B6FC();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25100(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _BYTE v32[48];

  sub_1BAEC5700(a1, (uint64_t)v32);
  v29 = a2;
  v30 = a3;
  v13 = a4 & 1;
  v31 = a4 & 1;
  sub_1BAEC5610(0);
  v15 = (uint64_t *)(v7 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = a4 & 1;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC54C4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a6;
  v24 = a7;
  v25 = sub_1BAEE9914;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v13);
  sub_1BAE31530(a5, a2, a3, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC5688();
    sub_1BA4A2870(&qword_1EF2B3930, (uint64_t (*)(uint64_t))sub_1BAEC5688, MEMORY[0x1E0DED188]);
    sub_1BA5FC9C4();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25264(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[7];
  char v19;
  uint64_t v20;
  uint64_t v21;

  v11 = a3 & 1;
  v20 = a1;
  v21 = a2;
  v19 = a3 & 1;
  sub_1BAEE4FF4(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v15 = *v13;
  v14 = v13[1];
  v16 = swift_allocObject();
  *(_BYTE *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = v15;
  *(_QWORD *)(v16 + 32) = v14;
  v18[2] = a5;
  v18[3] = a6;
  v18[4] = sub_1BAEE50DC;
  v18[5] = v16;
  swift_retain();
  sub_1BAE31710(a4, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v18);
  if (!v7)
  {
    sub_1BA4CDF6C(0, &qword_1ED39C0E0, (uint64_t (*)(void))sub_1BA4FB65C, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BAEE5074();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25390(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v32 = a1;
  v33 = a2;
  v34 = a3 & 1;
  v29 = a4;
  v30 = a5;
  v13 = a6 & 1;
  v31 = a6 & 1;
  sub_1BAEC42E0(0);
  v15 = (uint64_t *)(v9 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a4;
  v27[1] = a5;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC4194);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v23 = a8;
  v24 = a9;
  v25 = sub_1BAEE9D68;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BAE3189C(a7, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAEC4358();
    sub_1BA4A2870(&qword_1ED3AF3B0, (uint64_t (*)(uint64_t))sub_1BAEC4358, MEMORY[0x1E0DED188]);
    sub_1BA7844F0();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD254F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7D20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D104);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7818;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31A7C(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7D284();
    sub_1BA4A2870(&qword_1ED3AF3F0, (uint64_t (*)(uint64_t))sub_1BAE7D284, MEMORY[0x1E0DED188]);
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25650(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7D20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D104);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7818;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31A7C(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7D284();
    sub_1BA4A2870(&qword_1ED3AF3F0, (uint64_t (*)(uint64_t))sub_1BAE7D284, MEMORY[0x1E0DED188]);
    sub_1BA4AD288(0, &qword_1ED3B9328, (uint64_t)&type metadata for FormatTextNodeFormat.Token, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA5FCCC8();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD257CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v21;
  _BYTE v22[16];
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)();
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a1;
  v33 = a2;
  v29 = a3;
  v30 = a4;
  v13 = a5 & 1;
  v31 = a5 & 1;
  sub_1BAE7CF9C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7CE94);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  v23 = a7;
  v24 = a8;
  v25 = sub_1BAEF7888;
  v26 = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BAE31C5C(a6, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v21)
  {
    sub_1BAE7D014();
    sub_1BA4A2870(&qword_1ED3AF400, (uint64_t (*)(uint64_t))sub_1BAE7D014, MEMORY[0x1E0DED188]);
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25924(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE7CF9C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7CE94);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF7888;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31C5C(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE7D014();
    sub_1BA4A2870(&qword_1ED3AF400, (uint64_t (*)(uint64_t))sub_1BAE7D014, MEMORY[0x1E0DED188]);
    sub_1BA76361C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25A80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89100(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE88FF8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4BEC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31E3C(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE89178();
    sub_1BA4A2870(&qword_1ED3AF3E0, (uint64_t (*)(uint64_t))sub_1BAE89178, MEMORY[0x1E0DED188]);
    sub_1BA62BA1C();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25BDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE89100(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE88FF8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF4BEC;
  v25 = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAE31E3C(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE89178();
    sub_1BA4A2870(&qword_1ED3AF3E0, (uint64_t (*)(uint64_t))sub_1BAE89178, MEMORY[0x1E0DED188]);
    sub_1BA5A3D48();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25D38(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v20;
  _BYTE v21[16];
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  char v31;

  v31 = a1;
  v28 = a2;
  v29 = a3;
  v12 = a4 & 1;
  v30 = a4 & 1;
  sub_1BAE8EADC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E908);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  v22 = a6;
  v23 = a7;
  v24 = sub_1BAEF3F28;
  v25 = v17;
  sub_1BA69C808(a2, a3, v12);
  swift_retain();
  sub_1BAE3201C(a5, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v20)
  {
    sub_1BAE8EB54();
    sub_1BA4A2870(&qword_1ED3AF3D0, (uint64_t (*)(uint64_t))sub_1BAE8EB54, MEMORY[0x1E0DED188]);
    sub_1BAEF3F34();
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD25E94(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE408CC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE8ABA0();
      sub_1BA4A2870(&qword_1ED3AF1A8, (uint64_t (*)(uint64_t))sub_1BAE8ABA0, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE138();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD25FC4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE40C9C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEB8974();
      sub_1BA4A2870(&qword_1ED3AF168, (uint64_t (*)(uint64_t))sub_1BAEB8974, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B9580, type metadata accessor for FormatPropertyDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5AAF38();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD260F4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4106C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE8A8A8();
      sub_1BA4A2870(&qword_1ED3AF148, (uint64_t (*)(uint64_t))sub_1BAE8A8A8, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE138();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26224(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  char v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[4];
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;

  if (result != 2)
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4143C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v16 = a2;
      v17 = a3;
      v18 = v8 != 0;
      v15 = v7;
      sub_1BAEAA408();
      sub_1BA4A2870(&qword_1EF2B3260, (uint64_t (*)(uint64_t))sub_1BAEAA408, MEMORY[0x1E0DED188]);
      sub_1BAAAC280();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26338(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE41DC4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEBE2A8();
      sub_1BA4A2870(&qword_1EF2B3638, (uint64_t (*)(uint64_t))sub_1BAEBE2A8, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1EF2B5AF8, (uint64_t)&type metadata for FormatSponsoredBannerNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEB4F8();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26468(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  char v15;
  int v16;
  _QWORD v17[5];
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;

  if ((a1 & 1) == 0)
    return swift_bridgeObjectRelease();
  v18 = a3;
  v15 = sub_1BB874398();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v16 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v17[2] = a6;
    v17[3] = a7;
    result = sub_1BAE42194(a5, a2, v18, v16, (uint64_t)sub_1BAEFCC00, (uint64_t)v17);
    if (!v7 && (result & 1) != 0)
    {
      v20 = a2;
      v21 = v18;
      v22 = v16 != 0;
      v19 = a1 & 1;
      sub_1BAE73FF4();
      sub_1BA4A2870(&qword_1EF2B2440, (uint64_t (*)(uint64_t))sub_1BAE73FF4, MEMORY[0x1E0DED188]);
      sub_1BA98C7DC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD265E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t), unint64_t *a12)
{
  uint64_t v12;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;

  v30 = a7;
  v31 = a8;
  v32 = a6;
  v33 = a4;
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v29 - v19;
  sub_1BB86C8BC();
  v21 = sub_1BB86C8E0();
  v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 48))(v20, 1, v21);
  result = sub_1BA5C699C((uint64_t)v20, (unint64_t *)&qword_1ED39ED40, v17);
  if (v22 == 1)
  {
    v24 = a5 & 1;
    MEMORY[0x1E0C80A78](result);
    v26 = v31;
    v25 = v32;
    *(&v29 - 2) = v30;
    *(&v29 - 1) = v26;
    v27 = v33;
    result = v28(v25, a3, v33, v24);
    if (!v12 && (result & 1) != 0)
    {
      v36 = a3;
      v37 = v27;
      v38 = (_DWORD)v24 != 0;
      v34 = a1;
      v35 = a2;
      a11(0);
      sub_1BA4A2870(a12, a11, MEMORY[0x1E0DED188]);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD267B8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE42564(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC1AFC();
      sub_1BA4A2870(&qword_1ED3AEFC0, (uint64_t (*)(uint64_t))sub_1BAEC1AFC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAFF0, (uint64_t)&type metadata for FormatSupplementaryNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEA7EC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD268E8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE42934(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7677C();
      sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE138();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26A18(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE42934(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7677C();
      sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3C03C8, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE1C8();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26B48(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE432BC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7A45C();
      sub_1BA4A2870(&qword_1ED3AEF50, (uint64_t (*)(uint64_t))sub_1BAE7A45C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAFA8, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA81D8CC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26C78(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE43874(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAF98, (uint64_t)&type metadata for FormatLayeredMediaNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C79F0();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26DA8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE44014(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAF58, (uint64_t)&type metadata for FormatVideoPlayerNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA81D944();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD26ED8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE443E4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEB7DE4();
      sub_1BA4A2870(&qword_1ED3AEEC0, (uint64_t (*)(uint64_t))sub_1BAEB7DE4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27008(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE445CC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEB2808();
      sub_1BA4A2870(&qword_1ED3AEEB0, (uint64_t (*)(uint64_t))sub_1BAEB2808, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1EF2B5BB0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEED574();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27138(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4499C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA9B90();
      sub_1BA4A2870(&qword_1ED3AEEA0, (uint64_t (*)(uint64_t))sub_1BAEA9B90, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A1020, (uint64_t)&type metadata for FormatOptionsNodeStatementModifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEEC88();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27268(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE44B84(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9A9AC();
      sub_1BA4A2870(&qword_1ED3AEE90, (uint64_t (*)(uint64_t))sub_1BAE9A9AC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AB050, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF14A0();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27398(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE44D6C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9A73C();
      sub_1BA4A2870(&qword_1ED3AEE80, (uint64_t (*)(uint64_t))sub_1BAE9A73C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AB050, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF14A0();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD274C8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE45324(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEBD648();
      sub_1BA4A2870(&qword_1EF2B3620, (uint64_t (*)(uint64_t))sub_1BAEBD648, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD275F8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE456F4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAF38, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF8A9C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27728(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE456F4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3A08A0, (uint64_t)&type metadata for FormatIssueCoverTraits, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF88DC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27858(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t), unint64_t *a13)
{
  uint64_t v13;
  uint64_t result;
  double v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, _QWORD, double);

  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BA69C828(a1, a2, 1);
    result = sub_1BA69C828(1, 0, 0);
  }
  else
  {
    sub_1BA69C828(a1, a2, 0);
    result = sub_1BA69C828(1, 0, 0);
    if ((a1 & 1) != 0)
      return result;
  }
  v21 = MEMORY[0x1E0C80A78](result);
  result = v22(a7, a4, a5, a6 & 1, v21);
  if (!v13 && (result & 1) != 0)
  {
    a12(0);
    sub_1BA4A2870(a13, a12, MEMORY[0x1E0DED188]);
    sub_1BA7844F0();
    return sub_1BB874464();
  }
  return result;
}

uint64_t sub_1BAD279F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), unint64_t *a11)
{
  uint64_t v11;
  uint64_t v16;
  uint64_t inited;
  uint64_t result;
  double v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, double);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0;
  sub_1BA790480();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v16;
  *(_BYTE *)(inited + 40) = 0;
  LOBYTE(v16) = sub_1BA881EAC(a1, inited);
  swift_setDeallocating();
  sub_1BA4CDF6C(0, qword_1ED3B5BC0, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  result = swift_arrayDestroy();
  if ((v16 & 1) == 0)
  {
    v19 = MEMORY[0x1E0C80A78](result);
    result = v20(a5, a2, a3, a4 & 1, a8, v19);
    if (!v11 && (result & 1) != 0)
    {
      a10(0);
      sub_1BA4A2870(a11, a10, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27BD4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), unint64_t *a11)
{
  uint64_t v11;
  uint64_t v16;
  uint64_t inited;
  uint64_t result;
  double v19;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, double);

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 0x3FF0000000000000;
  sub_1BA790480();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v16;
  *(_BYTE *)(inited + 40) = 0;
  LOBYTE(v16) = sub_1BA881EAC(a1, inited);
  swift_setDeallocating();
  sub_1BA4CDF6C(0, qword_1ED3B5BC0, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  result = swift_arrayDestroy();
  if ((v16 & 1) == 0)
  {
    v19 = MEMORY[0x1E0C80A78](result);
    result = v20(a5, a2, a3, a4 & 1, a8, v19);
    if (!v11 && (result & 1) != 0)
    {
      a10(0);
      sub_1BA4A2870(a11, a10, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27DBC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE47B2C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA1B70();
      sub_1BA4A2870(&qword_1ED3AED80, (uint64_t (*)(uint64_t))sub_1BAEA1B70, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BF10, (uint64_t)&type metadata for FormatLocalizationString.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA63A294();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD27EEC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE47EFC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE96FF4();
      sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAF08, (uint64_t)&type metadata for FormatGroupNodeMaskStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA577E00();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2801C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE484B4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE80FF8();
      sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3A08B8, (uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF670C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2814C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE48884(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7B580();
      sub_1BA4A2870(&qword_1ED3AECF0, (uint64_t (*)(uint64_t))sub_1BAE7B580, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAEF0, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA81D9BC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2827C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE48E3C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7D870();
      sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD283AC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE48E3C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7D870();
      sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD284DC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE48E3C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7D870();
      sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2860C(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE497C4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEAF534();
      sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2873C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  int8x16_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[4];
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  _QWORD v30[10];
  BOOL v31;
  _QWORD v32[7];
  char v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  char v38;
  _QWORD v39[7];
  unsigned __int8 v40;
  _BYTE v41[56];
  char v42;
  _QWORD v43[3];
  int8x16_t v44;
  int8x16_t v45;
  unsigned __int8 v46;
  uint64_t v47;

  v28 = a3;
  v24 = a6;
  v25 = a7;
  v26 = a5;
  v27 = a2;
  v23 = a4;
  sub_1BAEAF75C(a1, (uint64_t)v39);
  v8 = v39[0];
  v9 = v39[1];
  v10 = v39[2];
  v11 = v39[3];
  v13 = v39[4];
  v12 = v39[5];
  v14 = v39[6];
  v29 = v40;
  result = sub_1BAEAF75C(a1, (uint64_t)v43);
  if ((v46 & 0xC0) != 0x80
    || v46 != 128
    || (v16 = vorrq_s8(v44, v45),
        *(_QWORD *)&vorr_s8(*(int8x8_t *)v16.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v16, v16, 8uLL)) | v43[2] | v43[1] | v43[0]))
  {
    v32[0] = v8;
    v32[1] = v9;
    v32[2] = v10;
    v32[3] = v11;
    v32[4] = v13;
    v32[5] = v12;
    v32[6] = v14;
    v33 = v29;
    v34 = 0u;
    v35 = 0u;
    v36 = 0u;
    v37 = 0;
    v38 = 0x80;
    sub_1BAEAF75C(a1, (uint64_t)v41);
    if (v42 < 0)
    {
      return sub_1BAEEDE88((uint64_t)v32, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BAC68B70);
    }
    else
    {
      v17 = v23 & 1;
      v42 &= 0x3Fu;
      sub_1BA76445C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAEAF798);
      v18 = sub_1BAEEDE88((uint64_t)v32, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BAC68B70);
      MEMORY[0x1E0C80A78](v18);
      v22[2] = v24;
      v22[3] = v25;
      v20 = v27;
      v19 = v28;
      v21 = v47;
      result = sub_1BAE497C4(v26, v27, v28, v17, (uint64_t)sub_1BAEFCC00, (uint64_t)v22);
      if (!v21 && (result & 1) != 0)
      {
        v30[8] = v20;
        v30[9] = v19;
        v31 = v17 != 0;
        sub_1BAEAF75C(a1, (uint64_t)v30);
        sub_1BAEAF534();
        sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
        sub_1BAEEDF1C();
        return sub_1BB874464();
      }
    }
  }
  return result;
}

void sub_1BAD28978(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD289D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD28BC0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE49D24(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA07AC();
      sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD28CF0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE49F0C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9E488();
      sub_1BA4A2870(&qword_1ED3AEC00, (uint64_t (*)(uint64_t))sub_1BAE9E488, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD28E20(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE49F0C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9E488();
      sub_1BA4A2870(&qword_1ED3AEC00, (uint64_t (*)(uint64_t))sub_1BAE9E488, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD28F50(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4A6AC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29080(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4A894(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEB2130();
      sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD291B0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4B404(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7549C();
      sub_1BA4A2870(&qword_1ED3AEB00, (uint64_t (*)(uint64_t))sub_1BAE7549C, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE138();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD292E0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4B404(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7549C();
      sub_1BA4A2870(&qword_1ED3AEB00, (uint64_t (*)(uint64_t))sub_1BAE7549C, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B95A8, type metadata accessor for FormatCompilerSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA59F44C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29410(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4BBA4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1EF2B5A28, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEE8D88();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29540(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4C52C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEB861C();
      sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3C03C8, (uint64_t)&type metadata for FormatSlotTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE1C8();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29670(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4CCCC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD297A0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4CEB4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAE88, (uint64_t)&type metadata for FormatImageNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA665C58();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD298D0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4D284(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE760E8();
      sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1EF2B5FD8, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEFA218();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29A00(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4DFDC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE837EC();
      sub_1BA4A2870(&qword_1ED3AE9F0, (uint64_t (*)(uint64_t))sub_1BAE837EC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9480, (uint64_t)&type metadata for FormatItemTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA683EC4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29B30(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4E1C4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAE78, (uint64_t)&type metadata for FormatViewNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA690E04();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29C60(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4E594(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAE68, (uint64_t)&type metadata for FormatTextNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A10DC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29D90(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4E964(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD29EC0(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  char v15;
  int v16;
  _QWORD v17[5];
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;

  if ((a1 & 1) == 0)
    return swift_bridgeObjectRelease();
  v18 = a3;
  v15 = sub_1BB874398();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v16 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v17[2] = a6;
    v17[3] = a7;
    result = sub_1BAE4E964(a5, a2, v18, v16, (uint64_t)sub_1BAEFCC00, (uint64_t)v17);
    if (!v7 && (result & 1) != 0)
    {
      v20 = a2;
      v21 = v18;
      v22 = v16 != 0;
      v19 = a1 & 1;
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      sub_1BA5A205C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A030(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4E964(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A160(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4E964(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9398, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEABCC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A290(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4EB4C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC018C();
      sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A3C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  int v14;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _QWORD v22[5];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;

  if ((a3 & 1) != 0 || *(_QWORD *)(a1 + 16))
  {
    v24 = a4;
    v14 = a6 & 1;
    sub_1BA896BB8(a1, a2, a3 & 1);
    sub_1BA896BE0(a1, a2, a3 & 1);
    v17 = sub_1BA896BE0(MEMORY[0x1E0DEE9D8], 0, 0);
    MEMORY[0x1E0C80A78](v17);
    v22[2] = a8;
    v22[3] = a9;
    v18 = a5;
    v19 = v24;
    v23 = a2;
    result = sub_1BAE4ED34(a7, v24, v18, v14, (uint64_t)sub_1BAEFCC00, (uint64_t)v22);
    if (!v9 && (result & 1) != 0)
    {
      v28 = v19;
      v29 = v18;
      v30 = v14 != 0;
      v25 = a1;
      v26 = v23;
      v27 = a3 & 1;
      sub_1BAEBBA5C();
      sub_1BA4A2870(&qword_1ED3AE980, (uint64_t (*)(uint64_t))sub_1BAEBBA5C, MEMORY[0x1E0DED188]);
      sub_1BAEEBBFC();
      return sub_1BB874464();
    }
  }
  else
  {
    v21 = swift_bridgeObjectRetain();
    sub_1BA896BE0(v21, a2, 0);
    return sub_1BA896BE0(MEMORY[0x1E0DEE9D8], 0, 0);
  }
  return result;
}

uint64_t sub_1BAD2A580(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4EF1C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA8254();
      sub_1BA4A2870(&qword_1ED3AE960, (uint64_t (*)(uint64_t))sub_1BAEA8254, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B95A0, (uint64_t)&type metadata for FormatOptionBindingModifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA660074();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A6B0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4F104(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA6840();
      sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1EF2B5C80, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEF490();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A7E0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4F4D4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9F114();
      sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3AAE48, type metadata accessor for FormatItemNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA7F383C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2A910(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4F8A4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE96BE4();
      sub_1BA4A2870(&qword_1ED3AE920, (uint64_t (*)(uint64_t))sub_1BAE96BE4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2AA40(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE4FE5C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE824AC();
      sub_1BA4A2870(&qword_1ED3AE900, (uint64_t (*)(uint64_t))sub_1BAE824AC, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2AB70(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE50044(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE733BC();
      sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2ACA0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5022C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2ADD0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[7];
  BOOL v16;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v15[2] = v9;
    v15[3] = v10;
    result = sub_1BAE505FC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v15);
    if (!v4 && (result & 1) != 0)
    {
      v15[5] = a2;
      v15[6] = a3;
      v16 = v8 != 0;
      v15[4] = v7;
      sub_1BAECAB54();
      sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
      v14 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v14, MEMORY[0x1E0DEA970]);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2AF20(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE505FC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECAB54();
      sub_1BA4A2870(&qword_1ED3AE8B0, (uint64_t (*)(uint64_t))sub_1BAECAB54, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2B050(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[7];
  BOOL v14;
  char v15;

  if ((result & 1) == 0)
  {
    v7 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v13[2] = v8;
    v13[3] = v9;
    result = sub_1BAE507E4(v12, v10, v11, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v13);
    if (!v4 && (result & 1) != 0)
    {
      v13[5] = a2;
      v13[6] = a3;
      v14 = v7 != 0;
      v15 = 0;
      sub_1BAEC3E34();
      sub_1BA4A2870(&qword_1ED3AE8A0, (uint64_t (*)(uint64_t))sub_1BAEC3E34, MEMORY[0x1E0DED188]);
      sub_1BAEE9E64();
      return sub_1BB874464();
    }
  }
  return result;
}

unint64_t sub_1BAD2B158(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  unint64_t v14;
  uint64_t v15;
  __int16 v16;
  char v17;
  uint64_t v18;
  __int16 v19;
  __int128 v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  _QWORD v24[6];
  _QWORD v25[2];
  __int16 v26;
  char v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  char v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int16 v39;

  v8 = v7;
  v14 = result;
  if (result >> 61)
    goto LABEL_5;
  v24[5] = a5;
  v15 = *(_QWORD *)(result + 24);
  v16 = *(_WORD *)(result + 32);
  v17 = *(_BYTE *)(result + 34);
  v18 = *(_QWORD *)(result + 40);
  v19 = *(_WORD *)(result + 80);
  v32 = *(_QWORD *)(result + 16);
  v33 = v15;
  v34 = v16;
  v35 = v17;
  v36 = v18;
  v20 = *(_OWORD *)(result + 64);
  v37 = *(_OWORD *)(result + 48);
  v38 = v20;
  v39 = v19;
  v21 = qword_1ED3CF378;
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v25[0] = qword_1ED3CF328;
  v25[1] = qword_1ED3CF330;
  v26 = word_1ED3CF338;
  v27 = byte_1ED3CF33A;
  v28 = qword_1ED3CF340;
  v29 = xmmword_1ED3CF348;
  v30 = unk_1ED3CF358;
  v31 = word_1ED3CF368;
  v22 = _s8NewsFeed16FormatSystemFontV2eeoiySbAC_ACtFZ_0((uint64_t)&v32, (uint64_t)v25);
  result = swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
LABEL_5:
    MEMORY[0x1E0C80A78](result);
    v24[2] = a6;
    v24[3] = a7;
    result = sub_1BAE507E4(v23, a2, a3, a4 & 1, (uint64_t)sub_1BAEFCC00, (uint64_t)v24);
    if (!v8 && (result & 1) != 0)
    {
      v32 = a2;
      v33 = a3;
      LOBYTE(v34) = (a4 & 1) != 0;
      v25[0] = v14;
      sub_1BAEC3E34();
      sub_1BA4A2870(&qword_1ED3AE8A0, (uint64_t (*)(uint64_t))sub_1BAEC3E34, MEMORY[0x1E0DED188]);
      sub_1BA6A1098();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2B364(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v12;
  uint64_t inited;
  uint64_t result;
  int v15;
  _QWORD v16[5];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;

  v17 = a6;
  v18 = a7;
  v19 = a5;
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4020000000000000;
  sub_1BA790480();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = v12;
  *(_BYTE *)(inited + 40) = 0;
  LOBYTE(v12) = sub_1BA881EAC(a1, inited);
  swift_setDeallocating();
  sub_1BA4CDF6C(0, qword_1ED3B5BC0, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquationToken);
  result = swift_arrayDestroy();
  if ((v12 & 1) == 0)
  {
    v15 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v16[2] = v17;
    v16[3] = v18;
    result = sub_1BAE507E4(v19, a2, a3, v15, (uint64_t)sub_1BAEFCC00, (uint64_t)v16);
    if (!v7 && (result & 1) != 0)
    {
      v21 = a2;
      v22 = a3;
      v23 = v15 != 0;
      v20 = a1;
      sub_1BAEC3E34();
      sub_1BA4A2870(&qword_1ED3AE8A0, (uint64_t (*)(uint64_t))sub_1BAEC3E34, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2B550(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[7];
  BOOL v16;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v15[2] = v9;
    v15[3] = v10;
    result = sub_1BAE5153C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v15);
    if (!v4 && (result & 1) != 0)
    {
      v15[5] = a2;
      v15[6] = a3;
      v16 = v8 != 0;
      v15[4] = v7;
      sub_1BAE98F98();
      sub_1BA4A2870(&qword_1ED3AE850, (uint64_t (*)(uint64_t))sub_1BAE98F98, MEMORY[0x1E0DED188]);
      v14 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v14, MEMORY[0x1E0DEA970]);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2B6A0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5153C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE98F98();
      sub_1BA4A2870(&qword_1ED3AE850, (uint64_t (*)(uint64_t))sub_1BAE98F98, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2B7D0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[7];
  BOOL v16;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v15[2] = v9;
    v15[3] = v10;
    result = sub_1BAE51724(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v15);
    if (!v4 && (result & 1) != 0)
    {
      v15[5] = a2;
      v15[6] = a3;
      v16 = v8 != 0;
      v15[4] = v7;
      sub_1BAE94420();
      sub_1BA4A2870(&qword_1ED3AE840, (uint64_t (*)(uint64_t))sub_1BAE94420, MEMORY[0x1E0DED188]);
      v14 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v14, MEMORY[0x1E0DEA970]);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2B920(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  int v16;
  _QWORD v17[4];
  _QWORD v18[5];
  BOOL v19;

  result = sub_1BA620178(a1, (uint64_t)&unk_1E724BEE0);
  if ((result & 1) == 0)
  {
    v18[1] = v18;
    v16 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v17[2] = a6;
    v17[3] = a7;
    result = sub_1BAE5190C(a5, a2, a3, v16, (uint64_t)sub_1BAEFCC00, (uint64_t)v17);
    if (!v7 && (result & 1) != 0)
    {
      v18[3] = a2;
      v18[4] = a3;
      v19 = v16 != 0;
      v18[2] = a1;
      sub_1BAE8E520();
      sub_1BA4A2870(&qword_1ED3AE830, (uint64_t (*)(uint64_t))sub_1BAE8E520, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B93D8, (uint64_t)&type metadata for FormatCorner, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62036C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2BA78(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE51AF4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC40A4();
      sub_1BA4A2870(&qword_1ED3AE810, (uint64_t (*)(uint64_t))sub_1BAEC40A4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA545B60();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2BBA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(uint64_t), unint64_t *a13)
{
  uint64_t v13;
  uint64_t result;
  double v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, _QWORD, double);

  if ((a3 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BA69C828(a1, a2, 1);
    result = sub_1BA69C828(0, 0, 0);
  }
  else
  {
    sub_1BA69C828(a1, a2, 0);
    result = sub_1BA69C828(0, 0, 0);
    if ((a1 & 1) == 0)
      return result;
  }
  v21 = MEMORY[0x1E0C80A78](result);
  result = v22(a7, a4, a5, a6 & 1, v21);
  if (!v13 && (result & 1) != 0)
  {
    a12(0);
    sub_1BA4A2870(a13, a12, MEMORY[0x1E0DED188]);
    sub_1BA7844F0();
    return sub_1BB874464();
  }
  return result;
}

uint64_t sub_1BAD2BD40(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE51EC4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEBB320();
      sub_1BA4A2870(&qword_1ED3AE7F0, (uint64_t (*)(uint64_t))sub_1BAEBB320, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2BE70(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE52A34(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7EE68();
      sub_1BA4A2870(&qword_1ED3AE7A8, (uint64_t (*)(uint64_t))sub_1BAE7EE68, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA545B60();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2BFA0(uint64_t result, uint64_t a2, char a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), unint64_t *a11)
{
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, double);
  _QWORD v22[7];
  BOOL v23;
  double v24;

  if (a4 != 16.0)
  {
    v14 = result;
    v15 = a3 & 1;
    v16 = MEMORY[0x1E0C80A78](result);
    v22[2] = v17;
    v22[3] = v18;
    result = v21(v19, v14, a2, v15, v20, v22, v16);
    if (!v11 && (result & 1) != 0)
    {
      v22[5] = v14;
      v22[6] = a2;
      v23 = (_DWORD)v15 != 0;
      v24 = a4;
      a10(0);
      sub_1BA4A2870(a11, a10, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C0B8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE53974(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA84C4();
      sub_1BA4A2870(&qword_1ED3AE738, (uint64_t (*)(uint64_t))sub_1BAEA84C4, MEMORY[0x1E0DED188]);
      sub_1BA62BE6C();
      sub_1BA62BE0C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C1D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD v20[5];
  uint64_t v21;
  uint64_t v22[3];
  BOOL v23;

  v21 = a5;
  v14 = sub_1BA55111C((uint64_t)&unk_1E724BF08);
  v20[4] = a1;
  LOBYTE(a1) = sub_1BA579D0C(a1, v14);
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    v16 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v20[2] = a6;
    v20[3] = a7;
    result = sub_1BAE53D44(v21, a2, a3, v16, (uint64_t)sub_1BAEFCC00, (uint64_t)v20);
    if (!v7 && (result & 1) != 0)
    {
      v22[1] = a2;
      v22[2] = a3;
      v23 = v16 != 0;
      v17 = swift_bridgeObjectRetain();
      v18 = sub_1BA766C70(v17);
      swift_bridgeObjectRelease();
      v22[0] = (uint64_t)v18;
      swift_retain();
      sub_1BA766EFC(v22);
      swift_release();
      sub_1BAE8EF18();
      sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
      v19 = MEMORY[0x1E0DEB418];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9610, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39BF68, (unint64_t *)&qword_1ED3B9610, v19, MEMORY[0x1E0DEB420]);
      sub_1BB874464();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BAD2C3B8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE53D44(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE8EF18();
      sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C4E8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE53F2C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE7E708();
      sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C618(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE542FC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C748(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE542FC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39D9F8, (uint64_t)&type metadata for FormatButtonNodeStateMask, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5FB498();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C878(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE542FC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1EF2B6080, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEFB96C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2C9A8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE542FC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AE4A0, (uint64_t)&type metadata for FormatSourceItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF09C0();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2CAD8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE544E4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECBFD0();
      sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2CC08(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE548B4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE727B0();
      sub_1BA4A2870(&qword_1ED3AF390, (uint64_t (*)(uint64_t))sub_1BAE727B0, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2CD38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  int v17;
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  BOOL v22;
  uint64_t v23;

  v19 = a7;
  v20 = a5;
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = 21;
  *(_QWORD *)(v13 + 24) = 0x3FF0000000000000;
  *(_BYTE *)(v13 + 32) = 0;
  v21[0] = v13 | 0x1000000000000000;
  v23 = a1;
  static FormatColor.== infix(_:_:)((uint64_t)v21);
  v15 = v14;
  result = swift_release();
  if ((v15 & 1) == 0)
  {
    v17 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v18[2] = a6;
    v18[3] = v19;
    result = sub_1BAE54A9C(v20, a2, a3, v17, (uint64_t)sub_1BAEFCC00, (uint64_t)v18);
    if (!v7 && (result & 1) != 0)
    {
      v21[0] = a2;
      v21[1] = a3;
      v22 = v17 != 0;
      v23 = a1;
      sub_1BAEBB698();
      sub_1BA4A2870(&qword_1ED3AF380, (uint64_t (*)(uint64_t))sub_1BAEBB698, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2CEA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  int v17;
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  BOOL v22;
  uint64_t v23;

  v19 = a7;
  v20 = a5;
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = 2;
  *(_QWORD *)(v13 + 24) = 0;
  *(_BYTE *)(v13 + 32) = 0;
  v21[0] = v13 | 0x1000000000000000;
  v23 = a1;
  static FormatColor.== infix(_:_:)((uint64_t)v21);
  v15 = v14;
  result = swift_release();
  if ((v15 & 1) == 0)
  {
    v17 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v18[2] = a6;
    v18[3] = v19;
    result = sub_1BAE54A9C(v20, a2, a3, v17, (uint64_t)sub_1BAEFCC00, (uint64_t)v18);
    if (!v7 && (result & 1) != 0)
    {
      v21[0] = a2;
      v21[1] = a3;
      v22 = v17 != 0;
      v23 = a1;
      sub_1BAEBB698();
      sub_1BA4A2870(&qword_1ED3AF380, (uint64_t (*)(uint64_t))sub_1BAEBB698, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D014(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE55424(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9A020();
      sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D144(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5560C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D274(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE557F4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE77DDC();
      sub_1BA4A2870(&qword_1ED3AF330, (uint64_t (*)(uint64_t))sub_1BAE77DDC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D3A4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE559DC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE870D0();
      sub_1BA4A2870(&qword_1ED3AF320, (uint64_t (*)(uint64_t))sub_1BAE870D0, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D4D4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE55BC4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D604(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE55DAC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAECA5AC();
      sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D734(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE55F94(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D864(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5617C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEBA984();
      sub_1BA4A2870(&qword_1ED3AF2E0, (uint64_t (*)(uint64_t))sub_1BAEBA984, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2D994(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE56364(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEA5500();
      sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2DAC4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5654C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2DBF4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5654C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2DD24(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5654C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2DE54(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5654C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AE4A0, (uint64_t)&type metadata for FormatSourceItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF09C0();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2DF84(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE56734(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE983D0();
      sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9488, (uint64_t)&type metadata for FormatAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA763660();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E0B4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE56B04(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE81A34();
      sub_1BA4A2870(&qword_1ED3AF280, (uint64_t (*)(uint64_t))sub_1BAE81A34, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B94E0, (uint64_t)&type metadata for FormatQueryParameter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA545B60();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E1E4(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE56CEC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE71384();
      sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E314(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE56CEC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE71384();
      sub_1BA4A2870(&qword_1ED3AF270, (uint64_t (*)(uint64_t))sub_1BAE71384, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9398, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEABCC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E444(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BAD2E7FC(a1, a2, a3, a4, a5, (uint64_t)sub_1BAEFCC00, (uint64_t (*)(uint64_t))sub_1BA64D5B0, &qword_1ED39D440);
}

uint64_t sub_1BAD2E470(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B83E8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE794C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E590(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B83C8, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE78E4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E6B0(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B83F8, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE787C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E7D0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1BAD2E7FC(a1, a2, a3, a4, a5, (uint64_t)sub_1BAEFCC00, (uint64_t (*)(uint64_t))sub_1BAEE7804, &qword_1EF2B59D8);
}

uint64_t sub_1BAD2E7FC(uint64_t result, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t), unint64_t *a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[5];
  char v19;

  if (*(_QWORD *)(result + 16))
  {
    v12 = result;
    MEMORY[0x1E0C80A78](result);
    v18[2] = v13;
    v18[3] = v14;
    result = sub_1BAE570BC(v16, v15, v17, (uint64_t)v18);
    if (!v8 && (result & 1) != 0)
    {
      v19 = a2;
      v18[4] = v12;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      a7(0);
      sub_1BA4A2870(a8, a7, (uint64_t)&protocol conformance descriptor for FormatFileReferenceCollection<A>);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2E914(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B83B8, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE779C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2EA34(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B83D8, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE7734();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2EB54(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B8398, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE76CC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2EC74(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BAEFCC00, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2ED8C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  _QWORD v9[5];
  char v10;

  if (*(_QWORD *)(result + 16))
  {
    v4 = result;
    MEMORY[0x1E0C80A78](result);
    v9[2] = v5;
    v9[3] = v6;
    result = sub_1BAE570BC(v8, v7, (uint64_t)sub_1BA4D7948, (uint64_t)v9);
    if (!v2 && (result & 1) != 0)
    {
      v10 = a2;
      v9[4] = v4;
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4CDF6C(0, &qword_1ED3B83A8, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
      sub_1BAEE75A8();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2EEAC(uint64_t result, uint64_t a2, char a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), unint64_t *a11)
{
  uint64_t v11;
  uint64_t v13;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, double);
  _QWORD v22[7];
  BOOL v23;
  double v24;

  if (a4 != 0.0)
  {
    v13 = result;
    v15 = a3 & 1;
    v16 = MEMORY[0x1E0C80A78](result);
    v22[2] = v17;
    v22[3] = v18;
    result = v21(v19, v13, a2, v15, v20, v22, v16);
    if (!v11 && (result & 1) != 0)
    {
      v22[5] = v13;
      v22[6] = a2;
      v23 = (_DWORD)v15 != 0;
      v24 = a4;
      a10(0);
      sub_1BA4A2870(a11, a10, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2EFC0(uint64_t result, uint64_t a2, char a3, float a4)
{
  uint64_t v4;
  uint64_t v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[4];
  float v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  if (a4 != 0.0)
  {
    v6 = result;
    v8 = a3 & 1;
    MEMORY[0x1E0C80A78](result);
    v12[2] = v9;
    v12[3] = v10;
    result = sub_1BAE5724C(v11, v6, a2, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v12);
    if (!v4 && (result & 1) != 0)
    {
      v14 = v6;
      v15 = a2;
      v16 = v8 != 0;
      v13 = a4;
      sub_1BAEB789C();
      sub_1BA4A2870(&qword_1ED3AF248, (uint64_t (*)(uint64_t))sub_1BAEB789C, MEMORY[0x1E0DED188]);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2F0D8(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7, double a8)
{
  uint64_t v8;
  uint64_t v14;
  int v18;
  _QWORD v19[9];
  BOOL v20;

  v14 = result;
  if (qword_1ED3C1168 != -1)
    result = swift_once();
  if (*(double *)&xmmword_1ED3D25A0 != a7 || *((double *)&xmmword_1ED3D25A0 + 1) != a8)
  {
    v18 = a3 & 1;
    MEMORY[0x1E0C80A78](result);
    v19[2] = a5;
    v19[3] = a6;
    result = sub_1BAE5724C(a4, v14, a2, v18, (uint64_t)sub_1BAEFCC00, (uint64_t)v19);
    if (!v8 && (result & 1) != 0)
    {
      v19[7] = v14;
      v19[8] = a2;
      v20 = v18 != 0;
      *(double *)&v19[5] = a7;
      *(double *)&v19[6] = a8;
      sub_1BAEB789C();
      sub_1BA4A2870(&qword_1ED3AF248, (uint64_t (*)(uint64_t))sub_1BAEB789C, MEMORY[0x1E0DED188]);
      sub_1BA5BD86C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2F244(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t result;
  int v17;
  _QWORD v18[4];
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];
  BOOL v22;
  uint64_t v23;

  v19 = a7;
  v20 = a5;
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = 2;
  *(_QWORD *)(v13 + 24) = 0x3FF0000000000000;
  *(_BYTE *)(v13 + 32) = 0;
  v21[0] = v13 | 0x1000000000000000;
  v23 = a1;
  static FormatColor.== infix(_:_:)((uint64_t)v21);
  v15 = v14;
  result = swift_release();
  if ((v15 & 1) == 0)
  {
    v17 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v18[2] = a6;
    v18[3] = v19;
    result = sub_1BAE5724C(v20, a2, a3, v17, (uint64_t)sub_1BAEFCC00, (uint64_t)v18);
    if (!v7 && (result & 1) != 0)
    {
      v21[0] = a2;
      v21[1] = a3;
      v22 = v17 != 0;
      v23 = a1;
      sub_1BAEB789C();
      sub_1BA4A2870(&qword_1ED3AF248, (uint64_t (*)(uint64_t))sub_1BAEB789C, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2F3B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v14;
  uint64_t result;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[5];
  uint64_t v20;
  uint64_t v21[3];
  BOOL v22;

  v20 = a5;
  v14 = sub_1BA8620DC((uint64_t)&unk_1E724BF48);
  v19[4] = a1;
  LOBYTE(a1) = sub_1BA617A54(a1, v14);
  result = swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
  {
    v16 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v19[2] = a6;
    v19[3] = a7;
    result = sub_1BAE57804(v20, a2, a3, v16, (uint64_t)sub_1BAEFCC00, (uint64_t)v19);
    if (!v7 && (result & 1) != 0)
    {
      v21[1] = a2;
      v21[2] = a3;
      v22 = v16 != 0;
      v17 = swift_bridgeObjectRetain();
      v18 = sub_1BA617E64(v17);
      swift_bridgeObjectRelease();
      v21[0] = v18;
      swift_retain();
      sub_1BA617EF0(v21);
      swift_release();
      sub_1BAE7AAAC();
      sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A0860, (uint64_t)&type metadata for FormatBorderEdge, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA617E78();
      sub_1BB874464();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1BAD2F57C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t result;
  char v15;
  int v16;
  uint64_t v17;
  _QWORD v18[5];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  char v23;

  if (a1)
  {
    if (a1 == 1)
      return swift_bridgeObjectRelease();
    v19 = a3;
  }
  else
  {
    v19 = a3;
  }
  v15 = sub_1BB874398();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v16 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v18[2] = a6;
    v18[3] = a7;
    v17 = v19;
    result = sub_1BAE57804(a5, a2, v19, v16, (uint64_t)sub_1BAEFCC00, (uint64_t)v18);
    if (!v7 && (result & 1) != 0)
    {
      v20 = a2;
      v21 = v17;
      v22 = v16 != 0;
      v23 = a1;
      sub_1BAE7AAAC();
      sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
      sub_1BA617E20();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2F71C(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t (*a9)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double), uint64_t (*a10)(uint64_t), unint64_t *a11)
{
  uint64_t v11;
  uint64_t v12;
  char v15;
  uint64_t result;
  double v17;

  if (!a1)
    return swift_bridgeObjectRelease();
  v12 = a4 & 1;
  v15 = sub_1BB874398();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    v17 = MEMORY[0x1E0C80A78](result);
    result = a9(a5, a2, a3, v12, a8, v17);
    if (!v11 && (result & 1) != 0)
    {
      a10(0);
      sub_1BA4A2870(a11, a10, MEMORY[0x1E0DED188]);
      sub_1BA618BDC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2F8C0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[7];
  BOOL v16;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v15[2] = v9;
    v15[3] = v10;
    result = sub_1BAE57804(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v15);
    if (!v4 && (result & 1) != 0)
    {
      v15[5] = a2;
      v15[6] = a3;
      v16 = v8 != 0;
      v15[4] = v7;
      sub_1BAE7AAAC();
      sub_1BA4A2870(&qword_1ED3AF218, (uint64_t (*)(uint64_t))sub_1BAE7AAAC, MEMORY[0x1E0DED188]);
      v14 = MEMORY[0x1E0DEB188];
      sub_1BA4AD288(0, &qword_1ED3B9608, MEMORY[0x1E0DEB188], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&unk_1ED39BF58, &qword_1ED3B9608, v14, MEMORY[0x1E0DEB198]);
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2FA10(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE579EC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC0548();
      sub_1BA4A2870(&qword_1ED3AF208, (uint64_t (*)(uint64_t))sub_1BAEC0548, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2FB40(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE579EC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC0548();
      sub_1BA4A2870(&qword_1ED3AF208, (uint64_t (*)(uint64_t))sub_1BAEC0548, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9398, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEABCC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2FC70(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE579EC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAEC0548();
      sub_1BA4A2870(&qword_1ED3AF208, (uint64_t (*)(uint64_t))sub_1BAEC0548, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

void sub_1BAD2FDA0(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD2FDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[14];

  *(_QWORD *)(v10 - 112) = v7;
  v15 = sub_1BB874398();
  result = swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    MEMORY[0x1E0C80A78](result);
    v19[2] = a6;
    v19[3] = a7;
    v17 = a5;
    v18 = *(_QWORD *)(v10 - 104);
    result = sub_1BAE57BD4(v17, v18, a3, v9, (uint64_t)sub_1BAEFCC00, (uint64_t)v19);
    if (!v8 && (result & 1) != 0)
    {
      *(_QWORD *)(v10 - 88) = v18;
      *(_QWORD *)(v10 - 80) = a3;
      *(_BYTE *)(v10 - 72) = v9 != 0;
      *(_BYTE *)(v10 - 89) = *(_QWORD *)(v10 - 112);
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BAB52A1C();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD2FF50(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57BD4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD30080(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57BD4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9480, (uint64_t)&type metadata for FormatItemTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA683EC4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD301B0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57BD4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD302E0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57BD4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9398, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEABCC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD30410(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57BD4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3AAEE0, (uint64_t)&type metadata for FormatGroupRequirement, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF2EB4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD30540(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57DBC(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE86940();
      sub_1BA4A2870(&qword_1ED3AF1D8, (uint64_t (*)(uint64_t))sub_1BAE86940, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD30670(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57FA4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9BB68();
      sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9480, (uint64_t)&type metadata for FormatItemTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA683EC4();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD307A0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57FA4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9BB68();
      sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED39BE98, (uint64_t)&type metadata for FormatNodeStyle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA62AFFC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD308D0(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57FA4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9BB68();
      sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD30A00(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE57FA4(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE9BB68();
      sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9398, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEABCC();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t sub_1BAD30B30(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[7];
  BOOL v15;

  if (*(_QWORD *)(result + 16))
  {
    v7 = result;
    v8 = a4 & 1;
    MEMORY[0x1E0C80A78](result);
    v14[2] = v9;
    v14[3] = v10;
    result = sub_1BAE5818C(v13, v11, v12, v8, (uint64_t)sub_1BAEFCC00, (uint64_t)v14);
    if (!v4 && (result & 1) != 0)
    {
      v14[5] = a2;
      v14[6] = a3;
      v15 = v8 != 0;
      v14[4] = v7;
      sub_1BAE8AE54();
      sub_1BA4A2870(&qword_1EF2B2C70, (uint64_t (*)(uint64_t))sub_1BAE8AE54, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5BE138();
      return sub_1BB874464();
    }
  }
  return result;
}

uint64_t FormatFrameExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  _QWORD *v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v3 = v2;
  v32 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_14:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  v11 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v12 = sub_1BB872874();
  LOBYTE(v11) = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v13 = v6;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (unint64_t *)(v14 + 40);
      while (1)
      {
        v17 = *v16;
        if (*v16 >= 4)
          break;
        v16 += 2;
        if (!--v15)
          goto LABEL_7;
      }
      v23 = *(v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v23;
      *(_QWORD *)(v24 + 8) = v17;
      *(_QWORD *)(v24 + 16) = &unk_1E72551F8;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v23, v17);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
      a1 = v27;
      goto LABEL_14;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE775AC();
  v29 = 0uLL;
  sub_1BB8740D4();
  if ((_BYTE)v28)
  {
    if (v28 == 1)
    {
      v29 = xmmword_1BB87FC90;
      sub_1BAE77634();
      sub_1BB8740D4();
      v18 = v32;
      a1 = v27;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v19 = 0;
      v20 = v28;
      v21 = BYTE8(v28);
      v22 = 64;
    }
    else
    {
      v28 = xmmword_1BB87FC90;
      sub_1BAE775F0();
      sub_1BB8740D4();
      v18 = v32;
      a1 = v27;
      (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v13);
      v20 = v29;
      v21 = BYTE8(v29);
      v19 = v30;
      v22 = v31 | 0x80;
    }
  }
  else
  {
    v29 = xmmword_1BB87FC90;
    sub_1BAE77634();
    sub_1BB8740D4();
    a1 = v27;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    v19 = 0;
    v22 = 0;
    v20 = v28;
    v21 = BYTE8(v28);
    v18 = v32;
  }
  *(_QWORD *)v18 = v20;
  *(_QWORD *)(v18 + 8) = v21;
  *(_QWORD *)(v18 + 16) = v19;
  *(_BYTE *)(v18 + 24) = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatFrameExpressionLogic.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(v1 + 8);
  v16 = *(_QWORD *)(v1 + 16);
  v34 = *(_QWORD *)v1;
  v35 = v15;
  v17 = *(unsigned __int8 *)(v1 + 24);
  v18 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v20 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatFrameExpressionLogic, v21, v18, (uint64_t)&type metadata for FormatFrameExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v19, (uint64_t)v14, v20, (uint64_t)&off_1E734BD80);
  if (!(v17 >> 6))
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v26 = sub_1BB86EB84();
    v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v11, v27, v26);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE4090(0, v34, v35, (uint64_t)v11);
    v25 = (uint64_t)v11;
    goto LABEL_9;
  }
  if (v17 >> 6 == 1)
  {
    v22 = v34;
    if (qword_1ED3C2478 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE4090(1, v22, v35, (uint64_t)v8);
    v25 = (uint64_t)v8;
LABEL_9:
    sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v29 = qword_1ED3C2478;
  v30 = v34;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v29 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v5, v32, v31);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v33 = v35;
  sub_1BACE41F8(2, v30, v35, v16, v17 & 1, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAA376C0(v30, v33, v16, v17);
}

uint64_t FormatOptionsNodeStatementOption.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v29;
  __int128 v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  __int128 v34;
  char v35;
  char v36;

  v3 = v2;
  v31 = a2;
  sub_1BAE776BC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE77734();
  sub_1BA4A2870(&qword_1ED3D1380, (uint64_t (*)(uint64_t))sub_1BAE77734, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v31;
  v13 = v7;
  v14 = v6;
  v15 = v9;
  if ((v11 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v31 = v13;
      v23 = *((_QWORD *)v18 - 2);
      v24 = *((_QWORD *)v18 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *((_QWORD *)&v30 - 4) = &_s10CodingKeysON_226;
      *((_QWORD *)&v30 - 3) = sub_1BAE777B4();
      *((_QWORD *)&v30 - 2) = sub_1BAE777F8();
      *((_QWORD *)&v30 - 1) = sub_1BAE7783C();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E7267EA0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v27 = v23;
      *(_QWORD *)(v27 + 8) = v24;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v24, 1);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v6);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v19 = v12;
  v34 = 0uLL;
  v35 = 0;
  v20 = sub_1BB874098();
  v22 = v21;
  v30 = xmmword_1BB8A1A10;
  v34 = xmmword_1BB8A1A10;
  v35 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v32 = v30;
    v33 = 0;
    sub_1BB8740D4();
    v29 = v36;
  }
  else
  {
    v29 = 1;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v14);
  *(_QWORD *)v19 = v20;
  *(_QWORD *)(v19 + 8) = v22;
  *(_BYTE *)(v19 + 16) = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatOptionsNodeStatementOption.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[2];
  __int128 v26;
  char v27;
  int v28;
  char v29;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v25[0] = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v25 - v6;
  sub_1BAE77880(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v28 = *(unsigned __int8 *)(v1 + 16);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE77734();
  v16 = sub_1BA4A2870(&qword_1ED3D1380, (uint64_t (*)(uint64_t))sub_1BAE77734, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionsNodeStatementOption, v17, v13, (uint64_t)&type metadata for FormatOptionsNodeStatementOption, v15, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BDC0);
  v18 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C08);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v25[1];
  sub_1BAD0B71C(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = v25[0];
    v21((char *)v25[0], v20, v19);
    swift_storeEnumTagMultiPayload();
    if ((v28 & 1) == 0 && (sub_1BAE4180C(v23, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v26 = xmmword_1BB8A1A10;
      v27 = 0;
      v29 = 0;
      sub_1BAE778F8();
      sub_1BA4A2870(&qword_1ED3AF068, (uint64_t (*)(uint64_t))sub_1BAE778F8, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE77880);
}

uint64_t FormatBindingContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  void (**v7)(char *, _QWORD);
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t *v43;
  void (**v44)(char *, _QWORD);
  __int128 v45;
  char v46;

  v43 = a2;
  v42 = type metadata accessor for FormatContent(0);
  MEMORY[0x1E0C80A78](v42);
  v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE77970();
  v6 = v5;
  v7 = *(void (***)(char *, _QWORD))(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE779E8();
  sub_1BA4A2870(&qword_1EF2B2568, (uint64_t (*)(uint64_t))sub_1BAE779E8, (uint64_t)&unk_1BB8FFC6C);
  v10 = v44;
  sub_1BB87468C();
  v11 = v10;
  if (v10)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v11);
    swift_willThrow();

    v36 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v36);
  }
  v40 = v4;
  v41 = a1;
  v44 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = sub_1BB872874();
  v13 = Dictionary<>.errorOnUnknownKeys.getter(v12);
  swift_bridgeObjectRelease();
  v14 = v6;
  v15 = v43;
  v16 = v9;
  if ((v13 & 1) != 0)
  {
    v17 = sub_1BB8740EC();
    v18 = *(_QWORD *)(v17 + 16);
    if (v18)
    {
      v19 = (_BYTE *)(v17 + 48);
      while (*v19 != 1)
      {
        v19 += 24;
        if (!--v18)
          goto LABEL_7;
      }
      v23 = *((_QWORD *)v19 - 2);
      v24 = *((_QWORD *)v19 - 1);
      swift_bridgeObjectRetain_n();
      v25 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v25);
      *(&v37 - 4) = (uint64_t)&_s10CodingKeysON_225;
      *(&v37 - 3) = sub_1BAE77A68();
      *(&v37 - 2) = sub_1BAE77AAC();
      *(&v37 - 1) = sub_1BAE77AF0();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E7267F18);
      swift_release_n();
      sub_1BA98D1F0();
      v11 = (void *)swift_allocError();
      *(_QWORD *)v27 = v23;
      *(_QWORD *)(v27 + 8) = v24;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v23, v24, 1);
      v44[1](v9, v14);
      a1 = v41;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v45 = 0uLL;
  v46 = 0;
  v20 = sub_1BB874098();
  v22 = v21;
  v45 = xmmword_1BB8A1A10;
  v46 = 0;
  v28 = sub_1BB874098();
  v30 = v29;
  v45 = xmmword_1BB8D2D60;
  v46 = 0;
  v37 = sub_1BB87402C();
  v38 = v28;
  v39 = v32;
  v45 = xmmword_1BB8D2D70;
  v46 = 0;
  sub_1BA4A2870(&qword_1EF2B2570, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
  v33 = (uint64_t)v40;
  sub_1BB8740D4();
  v44[1](v16, v14);
  v34 = type metadata accessor for FormatBindingContent();
  sub_1BA5193C4(v33, (uint64_t)v15 + *(int *)(v34 + 28), type metadata accessor for FormatContent);
  *v15 = v20;
  v15[1] = v22;
  v15[2] = v38;
  v15[3] = v30;
  v35 = v39;
  v15[4] = v37;
  v15[5] = v35;
  v36 = (uint64_t)v41;
  return __swift_destroy_boxed_opaque_existential_1(v36);
}

uint64_t FormatBindingContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v41)();
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t *v47;
  void (*v48)(char *, uint64_t, uint64_t);
  __int128 v49;
  char v50;
  __int128 v51;
  char v52;
  uint64_t v53;

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v45 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v43 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v43 - v9;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v43 - v12;
  sub_1BAE77B34(0);
  v44 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = type metadata accessor for FormatBindingContent();
  v20 = sub_1BAE779E8();
  v21 = sub_1BA4A2870(&qword_1EF2B2568, (uint64_t (*)(uint64_t))sub_1BAE779E8, (uint64_t)&unk_1BB8FFC6C);
  v43 = v19;
  sub_1BA6EC1EC(v19, v22, v17, v19, v20, (uint64_t)&type metadata for FormatVersions.StarSkyE, v18, (uint64_t)v16, v21, (uint64_t)&off_1E734BDA0);
  v47 = v2;
  v23 = *v2;
  v24 = v2[1];
  v25 = qword_1ED3C6D78;
  swift_bridgeObjectRetain();
  if (v25 != -1)
    swift_once();
  v26 = sub_1BB86EB84();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C68);
  v48 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
  v48(v13, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v28 = v53;
  sub_1BAD1B0C0(v23, v24, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v28)
  {
    v29 = v47[2];
    v30 = v47[3];
    v48(v10, v27, v26);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD1B0C0(v29, v30, 1, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v31 = (uint64_t)v46;
    v32 = v47[4];
    v33 = v47[5];
    v48(v46, v27, v26);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD57FDC(v32, v33, 2, 0, 0, v31, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34 = (uint64_t)v45;
    v48(v45, v27, v26);
    swift_storeEnumTagMultiPayload();
    v51 = xmmword_1BB8D2D70;
    v52 = 0;
    v35 = &v16[*(int *)(v44 + 44)];
    v36 = *(_QWORD *)v35;
    v37 = *((_QWORD *)v35 + 1);
    v49 = xmmword_1BB8D2D70;
    v50 = 0;
    v38 = swift_allocObject();
    v39 = sub_1BA5193C4((uint64_t)&v49, v38 + 16, (uint64_t (*)(_QWORD))sub_1BAE779E8);
    *(_QWORD *)(v38 + 40) = v36;
    *(_QWORD *)(v38 + 48) = v37;
    MEMORY[0x1E0C80A78](v39);
    *(&v43 - 4) = (uint64_t)sub_1BA90CF04;
    *(&v43 - 3) = 0;
    v41 = sub_1BAE77C30;
    v42 = v38;
    swift_retain();
    sub_1BAE26F64(v34, 3, 0, 0, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v43 - 6));
    sub_1BAE77BAC();
    sub_1BA4A2870(&qword_1EF2B2588, (uint64_t (*)(uint64_t))sub_1BAE77BAC, MEMORY[0x1E0DED188]);
    type metadata accessor for FormatContent(0);
    sub_1BA4A2870(&qword_1EF2C2220, type metadata accessor for FormatContent, (uint64_t)&protocol conformance descriptor for FormatContent);
    sub_1BB874464();
    swift_release();
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAE77B34);
}

_QWORD *FormatFrameNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5A632C(a1);
}

uint64_t FormatBindingFont.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  uint64_t v21;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BAE77F5C();
    v20[1] = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7267F68;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v3);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void FormatBindingFont.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD v17[3];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v17[2] = v1[1];
  v11 = v1[2];
  v17[0] = v10;
  v17[1] = v11;
  v12 = *((unsigned __int8 *)v1 + 24);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingFont, v16, v13, (uint64_t)&type metadata for FormatBindingFont, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v9, v15, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BAD329A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v3 = sub_1BB86EB84();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v0, v4, v3);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACF9F54(0, *(_QWORD *)(v2 - 112), *(_QWORD *)(v2 - 96), *(_DWORD *)(v2 - 104) & 0xFFFFFF, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatPatternAnchor.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[7];
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27[6] = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v27[5] = (char *)v27 - v6;
  MEMORY[0x1E0C80A78](v7);
  v27[4] = (char *)v27 - v8;
  MEMORY[0x1E0C80A78](v9);
  v27[3] = (char *)v27 - v10;
  MEMORY[0x1E0C80A78](v11);
  v27[2] = (char *)v27 - v12;
  MEMORY[0x1E0C80A78](v13);
  v27[1] = (char *)v27 - v14;
  MEMORY[0x1E0C80A78](v15);
  v27[0] = (char *)v27 - v16;
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)v27 - v19;
  v28 = *v1;
  v29 = a1;
  v21 = a1[3];
  v22 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v21);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v20, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v25 = v30;
  sub_1BA69F160((uint64_t)v20, (uint64_t)sub_1BA90CF04, 0, v21, v22);
  if (!v25)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
}

uint64_t FormatTextNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA64FC18(a1);
}

uint64_t FormatSplitBackground.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _BYTE v36[12];
  int v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  __int128 v46;
  char v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  unsigned __int8 v52;
  char v53;
  _BYTE v54[7];

  v3 = v2;
  v44 = a2;
  sub_1BAE7846C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v36[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE784E4();
  sub_1BA4A2870(&qword_1ED3AD8F8, (uint64_t (*)(uint64_t))sub_1BAE784E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v42 = a1;
  v43 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v6;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v20);
      *(_QWORD *)&v36[-32] = &_s10CodingKeysON_222;
      *(_QWORD *)&v36[-24] = sub_1BAE78564();
      v34 = sub_1BAE785A8();
      v35 = sub_1BAE785EC();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E7268318);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v13, v6);
      a1 = v42;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v48 = 0uLL;
  LOBYTE(v49) = 0;
  sub_1BB8740D4();
  v17 = v46;
  v48 = xmmword_1BB8A1A10;
  LOBYTE(v49) = 0;
  sub_1BB8740D4();
  v23 = v46;
  v46 = xmmword_1BB8D2D60;
  v47 = 0;
  sub_1BAE78630();
  sub_1BB8740D4();
  v38 = v48;
  v39 = v49;
  v40 = v50;
  v25 = *((_QWORD *)&v51 + 1);
  v41 = v51;
  v37 = v52;
  v46 = xmmword_1BB8D2D70;
  v47 = 0;
  sub_1BB8740D4();
  a1 = v42;
  (*(void (**)(_BYTE *, uint64_t))(v43 + 8))(v9, v12);
  v26 = v49;
  v27 = v25;
  v28 = v44;
  *(_OWORD *)(v44 + 88) = v48;
  *(_OWORD *)(v28 + 104) = v26;
  v29 = v51;
  *(_OWORD *)(v28 + 120) = v50;
  v30 = v37;
  v53 = v37;
  v45 = v52;
  *(_QWORD *)v28 = v17;
  *(_QWORD *)(v28 + 8) = v23;
  v31 = *((_QWORD *)&v38 + 1);
  *(_QWORD *)(v28 + 16) = v38;
  *(_QWORD *)(v28 + 24) = v31;
  v32 = *((_QWORD *)&v39 + 1);
  *(_QWORD *)(v28 + 32) = v39;
  *(_QWORD *)(v28 + 40) = v32;
  v33 = *((_QWORD *)&v40 + 1);
  *(_QWORD *)(v28 + 48) = v40;
  *(_QWORD *)(v28 + 56) = v33;
  *(_QWORD *)(v28 + 64) = v41;
  *(_QWORD *)(v28 + 72) = v27;
  *(_BYTE *)(v28 + 80) = v30;
  *(_DWORD *)(v28 + 81) = *(_DWORD *)v54;
  *(_DWORD *)(v28 + 84) = *(_DWORD *)&v54[3];
  *(_OWORD *)(v28 + 136) = v29;
  *(_BYTE *)(v28 + 152) = v45;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSplitBackground.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v31;
  char *v32;
  uint64_t v33;
  _BYTE v34[72];
  _BYTE v35[80];
  void (*v36)(char *, uint64_t, uint64_t);

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v32 = (char *)&v31 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v31 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v31 - v13;
  sub_1BAE78674(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v33 = v1[1];
  sub_1BAE78764((uint64_t)(v1 + 2), (uint64_t)v35);
  sub_1BAE78764((uint64_t)(v1 + 11), (uint64_t)v34);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BAE784E4();
  v22 = sub_1BA4A2870(&qword_1ED3AD8F8, (uint64_t (*)(uint64_t))sub_1BAE784E4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSplitBackground, v23, v19, (uint64_t)&type metadata for FormatSplitBackground, v21, (uint64_t)&type metadata for FormatVersions.SydroF, v20, (uint64_t)v17, v22, (uint64_t)&off_1E734BD60);
  v24 = qword_1ED3C6D50;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476BF0);
  v36 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v36(v14, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1767C(v18, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v36(v11, v26, v25);
    swift_storeEnumTagMultiPayload();
    v27 = swift_bridgeObjectRetain();
    sub_1BAD1767C(v27, 1, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v32;
    v36(v32, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BA5A5A64((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA8961B4);
    sub_1BAD17800((uint64_t)v35, 2, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    sub_1BA5A5A64((uint64_t)v35, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA8962BC);
    v29 = (uint64_t)v31;
    v36(v31, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BA5A5A64((uint64_t)v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA8961B4);
    sub_1BAD17800((uint64_t)v34, 3, 0, 0, v29, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v29, type metadata accessor for FormatVersionRequirement);
    sub_1BA5A5A64((uint64_t)v34, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA8962BC);
  }
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BAE78674);
}

uint64_t FormatSupplementaryNodePinTrait.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  __int16 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)v1;
  v15 = *(_WORD *)(v1 + 8);
  v16 = *(unsigned __int8 *)(v1 + 10);
  v18 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSupplementaryNodePinTrait, v20, v18, (uint64_t)&type metadata for FormatSupplementaryNodePinTrait, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v17, (uint64_t)v14, v19, (uint64_t)&off_1E734BDC0);
  if (v16)
  {
    if (v16 == 1)
    {
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v21 = sub_1BB86EB84();
      v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v8, v22, v21);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACE1494(1, v29, v15 & 0x1FF, (uint64_t)v8);
      v23 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v26 = sub_1BB86EB84();
      v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v5, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD7EDEC(2, v29, v15, (uint64_t)v5);
      v23 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v11, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE1304(0, v29 & 1, (uint64_t)v11);
    v23 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatTagBinding.DateTime.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE78ABC, (uint64_t)&_s14descr1E728EA89V8DateTimeO10CodingTypeON, (uint64_t)&unk_1E72686D0, a2);
}

uint64_t FormatTagBinding.DateTime.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v28[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v28 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v28 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatTagBinding.DateTime, v19, v16, (uint64_t)&type metadata for FormatTagBinding.DateTime, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BDE0);
  if (v15)
  {
    if (v15 == 1)
    {
      if (qword_1ED3C6D88 != -1)
        swift_once();
      v20 = sub_1BB86EB84();
      v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD79998(1, (uint64_t)v8);
      v22 = (uint64_t)v8;
    }
    else
    {
      if (qword_1ED3C6D88 != -1)
        swift_once();
      v25 = sub_1BB86EB84();
      v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C80);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v5, v26, v25);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD79998(2, (uint64_t)v5);
      v22 = (uint64_t)v5;
    }
  }
  else
  {
    if (qword_1ED3C6D88 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v11, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD79998(0, (uint64_t)v11);
    v22 = (uint64_t)v11;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatShineBlend.init(from:)@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v30;
  __int128 *v31;
  char v32;
  char v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  _BYTE v37[12];
  int v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  __int128 *v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 v59;

  v3 = v2;
  v48 = a2;
  sub_1BAE78B00();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v37[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE78B78();
  sub_1BA4A2870(&qword_1EF2B2640, (uint64_t (*)(uint64_t))sub_1BAE78B78, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v34 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v34);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v22 = *((_QWORD *)v17 - 2);
      v23 = *((_QWORD *)v17 - 1);
      v47 = a1;
      swift_bridgeObjectRetain_n();
      v24 = swift_bridgeObjectRelease();
      v25 = v12;
      MEMORY[0x1E0C80A78](v24);
      *(_QWORD *)&v37[-32] = &_s10CodingKeysON_220;
      *(_QWORD *)&v37[-24] = sub_1BAE78BF8();
      v35 = sub_1BAE78C3C();
      v36 = sub_1BAE78C80();
      swift_getKeyPath();
      swift_retain();
      v26 = sub_1BAE71220((uint64_t)&unk_1E7268720);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v27 = v22;
      *(_QWORD *)(v27 + 8) = v23;
      *(_QWORD *)(v27 + 16) = v26;
      *(_OWORD *)(v27 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v47;
      sub_1BA69C828(v22, v23, 1);
      (*(void (**)(_BYTE *, uint64_t))(v25 + 8))(v14, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE78CC4();
  v49 = 0;
  v50 = 0;
  v51 = 0;
  sub_1BB8740D4();
  v47 = a1;
  v18 = v52;
  v19 = v54;
  v42 = v12;
  v43 = v53;
  v20 = v56;
  v46 = v57;
  v44 = v55;
  v45 = v58;
  v21 = v59;
  v52 = xmmword_1BB8A1A10;
  LOBYTE(v53) = 0;
  sub_1BA534708();
  sub_1BB874068();
  v38 = v21;
  v39 = v18;
  v40 = v19;
  v41 = v20;
  v28 = v49;
  v52 = xmmword_1BB8D2D60;
  LOBYTE(v53) = 0;
  sub_1BAE78D08();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v9, v13);
  v31 = v48;
  v30 = v49;
  v32 = v50;
  v33 = BYTE1(v50);
  *v48 = v39;
  *((_QWORD *)v31 + 2) = v43;
  *((_QWORD *)v31 + 3) = v40;
  *((_QWORD *)v31 + 4) = v44;
  *((_QWORD *)v31 + 5) = v41;
  v34 = (uint64_t)v47;
  *((_QWORD *)v31 + 6) = v46;
  *((_QWORD *)v31 + 7) = v45;
  *((_BYTE *)v31 + 64) = v38;
  *((_BYTE *)v31 + 65) = v28;
  *((_QWORD *)v31 + 9) = v30;
  *((_BYTE *)v31 + 80) = v32;
  *((_BYTE *)v31 + 81) = v33;
  return __swift_destroy_boxed_opaque_existential_1(v34);
}

uint64_t FormatShineBlend.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _BYTE v45[72];
  int v46;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v41 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v37 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v37 - v8;
  sub_1BAE78D4C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE78E3C(v1, (uint64_t)v45);
  v46 = *(unsigned __int8 *)(v1 + 65);
  v40 = *(_QWORD *)(v1 + 72);
  v13 = *(unsigned __int8 *)(v1 + 80);
  v38 = *(unsigned __int8 *)(v1 + 81);
  v39 = v13;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE78B78();
  v17 = sub_1BA4A2870(&qword_1EF2B2640, (uint64_t (*)(uint64_t))sub_1BAE78B78, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatShineBlend, v18, v14, (uint64_t)&type metadata for FormatShineBlend, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BD80);
  sub_1BA6F3F88();
  v20 = v19;
  v21 = &v9[*(int *)(v19 + 48)];
  v22 = &v9[*(int *)(v19 + 64)];
  sub_1BA5A5A64((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA8961B4);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v9, v24, v23);
  if (qword_1ED3C4170 != -1)
    swift_once();
  v43 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476998);
  ((void (*)(char *))v25)(v21);
  type metadata accessor for FormatVersionRequirement.Value(0);
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  swift_storeEnumTagMultiPayload();
  v26 = v44;
  sub_1BAD1F86C((uint64_t)v45, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1BA5A5A64((uint64_t)v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA8962BC);
  if (!v26)
  {
    v27 = *(int *)(v20 + 48);
    v44 = v24;
    v28 = (uint64_t)v42;
    v29 = &v42[v27];
    v30 = &v42[*(int *)(v20 + 64)];
    v25(v42, v44, v23);
    v25(v29, v43, v23);
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BAD651A4(v46, 1, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    v31 = v28;
    v32 = v44;
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    v33 = (uint64_t)v41;
    v34 = &v41[*(int *)(v20 + 48)];
    v35 = &v41[*(int *)(v20 + 64)];
    v25(v41, v32, v23);
    v25(v34, v43, v23);
    *(_QWORD *)v35 = 0;
    *((_QWORD *)v35 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BAD6536C(v40, v39 | ((_WORD)v38 << 8), 2, 0, 0, v33, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE78D4C);
}

uint64_t FormatPurchaseAction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(char *, _QWORD);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void *v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t *v25;
  unint64_t v26;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[5];
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, _QWORD);
  uint64_t v36;
  uint64_t v37;

  v34 = a2;
  v31 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v31);
  v32 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3BB1E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v30[4] = (char *)v30 - v6;
  sub_1BA4B07F0(0, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, v4);
  MEMORY[0x1E0C80A78](v7);
  v30[3] = (char *)v30 - v8;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v33 = v9;
  v10 = *(void (***)(char *, _QWORD))(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v30 - v11;
  v13 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v16 = v35;
  sub_1BB87468C();
  v17 = v16;
  if (v16)
  {
    v18 = a1;
    goto LABEL_10;
  }
  v35 = v10;
  v30[1] = v15;
  v30[2] = v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v19 = sub_1BB872874();
  v20 = Dictionary<>.errorOnUnknownKeys.getter(v19);
  swift_bridgeObjectRelease();
  v21 = v33;
  v22 = v12;
  v18 = a1;
  if ((v20 & 1) == 0)
  {
LABEL_9:
    sub_1BAE790E8();
    v36 = 0;
    v37 = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v23 = sub_1BB8740EC();
  v24 = *(_QWORD *)(v23 + 16);
  if (!v24)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v25 = (unint64_t *)(v23 + 40);
  while (1)
  {
    v26 = *v25;
    if (*v25 >= 4)
      break;
    v25 += 2;
    if (!--v24)
      goto LABEL_8;
  }
  v28 = *(v25 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v17 = (void *)swift_allocError();
  *(_QWORD *)v29 = v28;
  *(_QWORD *)(v29 + 8) = v26;
  *(_QWORD *)(v29 + 16) = &unk_1E72688E8;
  *(_OWORD *)(v29 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v28, v26);
  v35[1](v22, v21);
LABEL_10:
  sub_1BA7F8B78(v18, (uint64_t)v17);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
}

void sub_1BAD35054()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FormatPostPurchase();
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3BE278, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, (uint64_t)&protocol conformance descriptor for FormatPostPurchase);
  v5 = *(_QWORD *)(v4 - 152);
  sub_1BB874068();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    sub_1BA646EFC(v5, *(_QWORD *)(v4 - 168), &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    JUMPOUT(0x1BAD35104);
  }
  JUMPOUT(0x1BAD34F34);
}

void sub_1BAD350EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BAD35100);
}

void sub_1BAD35128()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FormatPurchaseLandingPage();
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1ED3BF378, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage, (uint64_t)&protocol conformance descriptor for FormatPurchaseLandingPage);
  v5 = *(_QWORD *)(v4 - 144);
  sub_1BB874068();
  if (!v3)
  {
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
    sub_1BA646EFC(v5, *(_QWORD *)(v4 - 168), &qword_1ED3BB1E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
    JUMPOUT(0x1BAD35104);
  }
  JUMPOUT(0x1BAD34F34);
}

void sub_1BAD351C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_OWORD *)(v5 - 96) = xmmword_1BB87FC90;
  sub_1BA4A2870(&qword_1EF2B2670, type metadata accessor for FormatOsloSheetPurchaseDataModel, (uint64_t)&protocol conformance descriptor for FormatOsloSheetPurchaseDataModel);
  sub_1BB8740D4();
  if (v4)
    JUMPOUT(0x1BAD35210);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  sub_1BA5193C4(v0, *(_QWORD *)(v5 - 168), type metadata accessor for FormatOsloSheetPurchaseDataModel);
  JUMPOUT(0x1BAD35104);
}

void FormatPurchaseAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v28[8];

  v2 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v2);
  v28[6] = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3BB1E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v28[5] = (char *)v28 - v6;
  sub_1BA4B07F0(0, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, v4);
  MEMORY[0x1E0C80A78](v7);
  v28[4] = (char *)v28 - v8;
  v9 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v9);
  v28[3] = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v28[2] = (char *)v28 - v12;
  MEMORY[0x1E0C80A78](v13);
  v28[1] = (char *)v28 - v14;
  MEMORY[0x1E0C80A78](v15);
  MEMORY[0x1E0C80A78](v16);
  v17 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BA6B8518();
  sub_1BA6EC1EC(v17, v26, v23, v17, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v24, (uint64_t)v22, v25, (uint64_t)&off_1E734BD20);
  sub_1BA4C2DD8(v28[7], (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatPurchaseAction);
  v27 = (char *)sub_1BAD354F4 + 4 * byte_1BB8AE0F4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAD354F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = v2;
  v5 = *(_QWORD *)(v3 - 112);
  sub_1BA646EFC(v4, v5, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v6 = v0;
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v7 = sub_1BB86EB84();
  v8 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED476BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v1, v8, v7);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD7F0BC(1, v5, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  sub_1BA5C699C(v5, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  return sub_1BA4A2E80(v6, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatFontDesign.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD v20[4];
  uint64_t v21;
  _QWORD *v22;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v20[3] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v20[2] = (char *)v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  v20[1] = (char *)v20 - v9;
  MEMORY[0x1E0C80A78](v10);
  v20[0] = (char *)v20 - v11;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - v13;
  v21 = *v1;
  v15 = a1[3];
  v16 = a1[4];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v15);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v14, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160((uint64_t)v14, (uint64_t)sub_1BA90CF04, 0, v15, v16);
  result = sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  if (!v2)
    __asm { BR              X9 }
  return result;
}

uint64_t FormatItemNodeActionBinding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  char v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v28 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v28;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E7268938;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7912C();
  v24 = 0uLL;
  sub_1BB8740D4();
  v23 = xmmword_1BB87FC90;
  sub_1BA5A28CC();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v20 = v25;
  v21 = v26;
  v22 = v27;
  *(_OWORD *)v12 = v24;
  *(_QWORD *)(v12 + 16) = v20;
  *(_BYTE *)(v12 + 24) = v21;
  *(_BYTE *)(v12 + 25) = v22;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatItemNodeActionBinding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  __int16 v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(v1 + 8);
  v22 = *(_QWORD *)v1;
  v10 = *(_QWORD *)(v1 + 16);
  v11 = *(unsigned __int8 *)(v1 + 24);
  v12 = *(unsigned __int8 *)(v1 + 25);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  v16 = v14;
  v17 = v22;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatItemNodeActionBinding, v18, v13, (uint64_t)&type metadata for FormatItemNodeActionBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyE, v16, (uint64_t)v8, v15, (uint64_t)&off_1E734BDA0);
  sub_1BAE70D80(v17, v9, v10, v11, v12, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  if (qword_1ED3C6D78 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v5, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE37FC(v17, v9, v10, v11 | (v12 << 8), (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAE70D80(v17, v9, v10, v11, v12, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t FormatSlotItemTagFilterNotCondition.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAE79170();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE791E8();
  sub_1BA4A2870(&qword_1EF2B26A0, (uint64_t (*)(uint64_t))sub_1BAE791E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_218;
      *(&v24 - 3) = sub_1BAE79268();
      *(&v24 - 2) = sub_1BAE792AC();
      *(&v24 - 1) = sub_1BAE792F0();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E7268988);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA94B8D4();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSlotItemTagFilterNotCondition.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE79334(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE791E8();
  v13 = sub_1BA4A2870(&qword_1EF2B26A0, (uint64_t (*)(uint64_t))sub_1BAE791E8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSlotItemTagFilterNotCondition, v14, v10, (uint64_t)&type metadata for FormatSlotItemTagFilterNotCondition, v12, (uint64_t)&type metadata for FormatVersions.DawnburstC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BCA0);
  sub_1BA739250(v9);
  if (qword_1ED3C6D00 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476B48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v16, v15);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD09C9C(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA6F5D74(v9);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE79334);
}

uint64_t FormatBindingTextExpressionLogic.Length.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  char v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE79424();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7949C();
  sub_1BA4A2870(&qword_1EF2B26E8, (uint64_t (*)(uint64_t))sub_1BAE7949C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_217;
      *(&v26 - 3) = sub_1BAE7951C();
      *(&v26 - 2) = sub_1BAE79560();
      *(&v26 - 1) = sub_1BAE795A4();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E72689B0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27 = 0uLL;
  v28 = 0;
  v18 = sub_1BB8740C8();
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA63BE34();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_QWORD *)v12 = v18;
  *(_BYTE *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBindingTextExpressionLogic.Length.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  _BYTE v23[12];
  int v24;
  _BYTE *v25;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v25 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v8 = &v23[-v7];
  sub_1BAE795E8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = *(_QWORD *)v1;
  v24 = *(unsigned __int8 *)(v1 + 8);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE7949C();
  v16 = sub_1BA4A2870(&qword_1EF2B26E8, (uint64_t (*)(uint64_t))sub_1BAE7949C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingTextExpressionLogic.Length, v17, v13, (uint64_t)&type metadata for FormatBindingTextExpressionLogic.Length, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C20);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0BB28(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v25;
    v20(v25, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0BC80(v24, 1, 0, 0, v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE795E8);
}

uint64_t FormatBindingTextExpressionLogic.Compare.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(_BYTE *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  _BYTE v25[4];
  int v26;
  _BYTE *v27;
  uint64_t v28;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v27 = &v25[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v7 = &v25[-v6];
  sub_1BAE79858(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v25[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = *(_QWORD *)v1;
  v12 = *(_QWORD *)(v1 + 8);
  v26 = *(unsigned __int8 *)(v1 + 16);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE79750();
  v16 = sub_1BA4A2870(&qword_1ED3D1370, (uint64_t (*)(uint64_t))sub_1BAE79750, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingTextExpressionLogic.Compare, v17, v13, (uint64_t)&type metadata for FormatBindingTextExpressionLogic.Compare, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  v18 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v28;
  sub_1BAD0B874(v11, v12, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = (uint64_t)v27;
    v21(v27, v20, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0B9CC(v26, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE79858);
}

uint64_t FormatBindingTextExpressionLogic.Binding.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  unsigned __int8 v43;

  v3 = v2;
  v33 = a2;
  sub_1BAE79948();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE799C0();
  sub_1BA4A2870(&qword_1ED3AD9D8, (uint64_t (*)(uint64_t))sub_1BAE799C0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v15 - 2);
      v19 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v33 = v7;
      MEMORY[0x1E0C80A78](v20);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_215;
      *(&v28 - 3) = sub_1BAE79A40();
      *(&v28 - 2) = sub_1BAE79A84();
      *(&v28 - 1) = sub_1BAE79AC8();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E7268A00);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA646348();
  v34 = 0;
  v35 = 0;
  v36 = 0;
  sub_1BB8740D4();
  v16 = v37;
  v17 = v38;
  v28 = v39;
  v29 = v40;
  v30 = v41;
  v31 = v42;
  v32 = v43;
  v37 = xmmword_1BB8A1A10;
  LOBYTE(v38) = 0;
  sub_1BA63BE34();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v24 = v34;
  v25 = v33;
  *(_OWORD *)v33 = v16;
  v26 = v28;
  *(_QWORD *)(v25 + 16) = v17;
  *(_QWORD *)(v25 + 24) = v26;
  v27 = v30;
  *(_QWORD *)(v25 + 32) = v29;
  *(_QWORD *)(v25 + 40) = v27;
  *(_BYTE *)(v25 + 48) = v31;
  *(_BYTE *)(v25 + 49) = v32;
  *(_BYTE *)(v25 + 50) = v24;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBindingTextExpressionLogic.Binding.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_BYTE *, uint64_t, uint64_t);
  _BYTE v23[56];
  int v24;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1E0C80A78](v7);
  v9 = &v23[-v8 - 8];
  sub_1BAE79B0C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = &v23[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1BAE79BFC(v1, (uint64_t)v23);
  v24 = *(unsigned __int8 *)(v1 + 50);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE799C0();
  v16 = sub_1BA4A2870(&qword_1ED3AD9D8, (uint64_t (*)(uint64_t))sub_1BAE799C0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingTextExpressionLogic.Binding, v17, v13, (uint64_t)&type metadata for FormatBindingTextExpressionLogic.Binding, v15, (uint64_t)&type metadata for FormatVersions.SydroF, v14, (uint64_t)v12, v16, (uint64_t)&off_1E734BD60);
  sub_1BAE79C38((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA713CDC);
  if (qword_1ED3C6D50 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476BF0);
  v20 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v9, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0BDDC((uint64_t)v23, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  sub_1BAE79C38((uint64_t)v23, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6EF090);
  if (!v2)
  {
    v20(v6, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0BF40(v24, 1, 0, 0, (uint64_t)v6, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE79B0C);
}

uint64_t sub_1BAD3763C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE8AB28(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8A998);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEEC2F4;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = sub_1BAE408CC(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE8ABA0();
      sub_1BA4A2870(&qword_1ED3AF1A8, (uint64_t (*)(uint64_t))sub_1BAE8ABA0, MEMORY[0x1E0DED188]);
      sub_1BAEF439C();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3784C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE8A830(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8A6A0);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (a1)
  {
    v24 = (uint64_t)&v24;
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v25;
    v23[3] = v26;
    v23[4] = sub_1BAEF4438;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    sub_1BA8EF4D4(a1);
    v20 = v34;
    v21 = sub_1BAE4106C(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20 || (v21 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAE8A8A8();
      sub_1BA4A2870(&qword_1ED3AF148, (uint64_t (*)(uint64_t))sub_1BAE8A8A8, MEMORY[0x1E0DED188]);
      sub_1BAEF449C();
      sub_1BB874464();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
}

uint64_t sub_1BAD37A74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE8A830(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE8A6A0);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEF4438;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4106C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE8A8A8();
        sub_1BA4A2870(&qword_1ED3AF148, (uint64_t (*)(uint64_t))sub_1BAE8A8A8, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD37D88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatPostPurchase();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAEAA0DC(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAEA9F90);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEEEAB8;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE41624(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAEAA154();
        sub_1BA4A2870(&qword_1EF2B3218, (uint64_t (*)(uint64_t))sub_1BAEAA154, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1EF2B5BD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, (uint64_t)&protocol conformance descriptor for FormatPostPurchase);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD38090(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7C75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C654);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF7B84;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE419F4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7C7D4();
      sub_1BA4A2870(&qword_1ED3AF038, (uint64_t (*)(uint64_t))sub_1BAE7C7D4, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatImageNodeStyle();
      sub_1BA4A2870(&qword_1ED3A6808, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD382A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE7C75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C654);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF7B84;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE419F4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE7C7D4();
      sub_1BA4A2870(&qword_1ED3AF038, (uint64_t (*)(uint64_t))sub_1BAE7C7D4, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD384B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEBE230(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE320);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEB494;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE41DC4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEBE2A8();
      sub_1BA4A2870(&qword_1EF2B3638, (uint64_t (*)(uint64_t))sub_1BAEBE2A8, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD386D0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEBE230(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE320);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEB494;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE41DC4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEBE2A8();
      sub_1BA4A2870(&qword_1EF2B3638, (uint64_t (*)(uint64_t))sub_1BAEBE2A8, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD38898(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEBE630(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE4E4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEB400;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE41FAC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEBE6A8();
      sub_1BA4A2870(&qword_1EF2B3680, (uint64_t (*)(uint64_t))sub_1BAEBE6A8, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD38AB0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEBE630(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE4E4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEB400;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE41FAC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEBE6A8();
      sub_1BA4A2870(&qword_1EF2B3680, (uint64_t (*)(uint64_t))sub_1BAEBE6A8, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD38C78(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC1A84(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1B74);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA788;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE42564(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC1AFC();
      sub_1BA4A2870(&qword_1ED3AEFC0, (uint64_t (*)(uint64_t))sub_1BAEC1AFC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD38E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  _QWORD v24[2];
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v26 = a7;
  v27 = a8;
  v28 = a6;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEC1A84(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1B74);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (BYTE2(a2) == 255)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24[1] = v24;
  v29 = a1;
  LOWORD(v30) = a2;
  v25 = WORD1(a2);
  BYTE2(v30) = BYTE2(a2);
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v26;
  v23[3] = v27;
  v23[4] = sub_1BAEEA788;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA771834(a1, a2);
  v21 = v35;
  v22 = sub_1BAE42564(v28, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEC1AFC();
      sub_1BA4A2870(&qword_1ED3AEFC0, (uint64_t (*)(uint64_t))sub_1BAEC1AFC, MEMORY[0x1E0DED188]);
      sub_1BAA9D540();
      sub_1BB874464();
      sub_1BA77A170(v29, (unsigned __int16)v30, SBYTE2(v30), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
    else
    {
      sub_1BA77A170(a1, a2, v25, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA77A170(a1, a2, v25, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
}

uint64_t sub_1BAD390B0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC1A84(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1B74);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA788;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE42564(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC1AFC();
      sub_1BA4A2870(&qword_1ED3AEFC0, (uint64_t (*)(uint64_t))sub_1BAEC1AFC, MEMORY[0x1E0DED188]);
      sub_1BA93BD3C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD39278(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC1DFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1CF4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA6E8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4274C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC1E74();
      sub_1BA4A2870(&qword_1ED3AEFD0, (uint64_t (*)(uint64_t))sub_1BAEC1E74, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD39440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  _QWORD v24[2];
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v26 = a7;
  v27 = a8;
  v28 = a6;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEC1DFC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1CF4);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (BYTE2(a2) == 255)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24[1] = v24;
  v29 = a1;
  LOWORD(v30) = a2;
  v25 = WORD1(a2);
  BYTE2(v30) = BYTE2(a2);
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v26;
  v23[3] = v27;
  v23[4] = sub_1BAEEA6E8;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA771834(a1, a2);
  v21 = v35;
  v22 = sub_1BAE4274C(v28, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEC1E74();
      sub_1BA4A2870(&qword_1ED3AEFD0, (uint64_t (*)(uint64_t))sub_1BAEC1E74, MEMORY[0x1E0DED188]);
      sub_1BAA9D540();
      sub_1BB874464();
      sub_1BA77A170(v29, (unsigned __int16)v30, SBYTE2(v30), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
    else
    {
      sub_1BA77A170(a1, a2, v25, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA77A170(a1, a2, v25, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
}

uint64_t sub_1BAD396B0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC1DFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC1CF4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA6E8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4274C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC1E74();
      sub_1BA4A2870(&qword_1ED3AEFD0, (uint64_t (*)(uint64_t))sub_1BAEC1E74, MEMORY[0x1E0DED188]);
      sub_1BA93BD3C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD39878(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAE76704(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAE76594);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEFA02C;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE42934(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAE7677C();
        sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1ED3A0680, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t)&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSet);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD39B80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE76704(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE76594);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEFA02C;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE42934(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE7677C();
        sub_1BA4A2870(&qword_1ED3AEF90, (uint64_t (*)(uint64_t))sub_1BAE7677C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

unint64_t sub_1BAD39E94(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEBE8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBE798);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) == 0)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  v22[1] = v22;
  v25[0] = a1;
  MEMORY[0x1E0C80A78](v18);
  v21[2] = v23;
  v21[3] = v24;
  v21[4] = sub_1BAEEB378;
  v21[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BAC651E4(a1);
  v20 = sub_1BAE430D4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v8)
  {
    if ((v20 & 1) != 0)
    {
      sub_1BAEBE95C();
      sub_1BA4A2870(&qword_1EF2B3698, (uint64_t (*)(uint64_t))sub_1BAEBE95C, MEMORY[0x1E0DED188]);
      sub_1BA6371A0();
      sub_1BB874464();
      sub_1BA719718(v25[0]);
    }
    else
    {
      sub_1BA719718(a1);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA719718(a1);
}

uint64_t sub_1BAD3A0A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7A3E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A4D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF8740;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE432BC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7A45C();
      sub_1BA4A2870(&qword_1ED3AEF50, (uint64_t (*)(uint64_t))sub_1BAE7A45C, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3A2C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE7A3E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A4D4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF8740;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE432BC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE7A45C();
      sub_1BA4A2870(&qword_1ED3AEF50, (uint64_t (*)(uint64_t))sub_1BAE7A45C, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3A4DC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7A3E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A4D4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8740;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE432BC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7A45C();
      sub_1BA4A2870(&qword_1ED3AEF50, (uint64_t (*)(uint64_t))sub_1BAE7A45C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3A6A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7A75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A654);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF86A0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE434A4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7A7D4();
      sub_1BA4A2870(&qword_1ED3AEF60, (uint64_t (*)(uint64_t))sub_1BAE7A7D4, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3A8C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE7A75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A654);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF86A0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE434A4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE7A7D4();
      sub_1BA4A2870(&qword_1ED3AEF60, (uint64_t (*)(uint64_t))sub_1BAE7A7D4, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3AADC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7A75C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A654);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF86A0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE434A4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7A7D4();
      sub_1BA4A2870(&qword_1ED3AEF60, (uint64_t (*)(uint64_t))sub_1BAE7A7D4, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3ACA4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA0EFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF013C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE43874(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3AEC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA0EFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF013C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE43874(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3B0DC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA0EFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF013C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE43874(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3B30C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEA0EFC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF013C;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE43874(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD3B540(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAEA0EFC(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF013C;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE43874(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD3B828(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAEA0EFC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEF013C;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE43874(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD3BA58(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA0EFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF013C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE43874(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3BC20(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA0EFC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0FEC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF013C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE43874(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA0F74();
      sub_1BA4A2870(&qword_1ED3AEF20, (uint64_t (*)(uint64_t))sub_1BAEA0F74, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3CF7C0, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEFFF4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3BE50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA12B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEFFE0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE43A5C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3C070(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA12B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEFFE0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE43A5C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3C288(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA12B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEFFE0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE43A5C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3C4B8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEA12B8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEEFFE0;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE43A5C(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD3C6EC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAEA12B8(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEEFFE0;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE43A5C(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD3C9D4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAEA12B8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEEFFE0;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE43A5C(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD3CC04(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA12B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEFFE0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE43A5C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3CDCC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA12B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA116C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEFFE0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE43A5C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA1330();
      sub_1BA4A2870(&qword_1ED3AEF30, (uint64_t (*)(uint64_t))sub_1BAEA1330, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3CF7C0, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEEFFF4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3CFFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECE28C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE44014(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3D21C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECE28C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE44014(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3D434(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECE28C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE44014(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3D664(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAECE28C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEE8710;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE44014(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD3D898(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAECE28C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE8710;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE44014(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD3DB80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECE28C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE44014(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3DD98(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECE28C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE37C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE8710;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE44014(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAECE304();
      sub_1BA4A2870(&qword_1ED3AEEE0, (uint64_t (*)(uint64_t))sub_1BAECE304, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3DF60(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECE604(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE441FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3E180(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECE604(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE441FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3E398(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECE604(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE441FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3E5C8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAECE604(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEE8638;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE441FC(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD3E7FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAECE604(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE8638;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE441FC(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD3EAE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECE604(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE441FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD3ECFC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECE604(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECE4FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE8638;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE441FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAECE67C();
      sub_1BA4A2870(&qword_1ED3AEEF0, (uint64_t (*)(uint64_t))sub_1BAECE67C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3EEC4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEB7D6C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7BFC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEEC81C;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE443E4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEB7DE4();
      sub_1BA4A2870(&qword_1ED3AEEC0, (uint64_t (*)(uint64_t))sub_1BAEB7DE4, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD3F0D4(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEB7D6C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB7BFC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEEC81C;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE443E4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEB7DE4();
      sub_1BA4A2870(&qword_1ED3AEEC0, (uint64_t (*)(uint64_t))sub_1BAEB7DE4, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3F2A8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEB2790(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB25DC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEED5F8;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE445CC(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEB2808();
      sub_1BA4A2870(&qword_1ED3AEEB0, (uint64_t (*)(uint64_t))sub_1BAEB2808, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD3F4DC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEB2790(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB25DC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEED5F8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE445CC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEB2808();
      sub_1BA4A2870(&qword_1ED3AEEB0, (uint64_t (*)(uint64_t))sub_1BAEB2808, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3F6A4(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEB2A44(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB28F8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEED4EC;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE447B4(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEB2ABC();
      sub_1BA4A2870(&qword_1EF2B33E0, (uint64_t (*)(uint64_t))sub_1BAEB2ABC, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD3F8D8(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEB2A44(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB28F8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEED4EC;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE447B4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEB2ABC();
      sub_1BA4A2870(&qword_1EF2B33E0, (uint64_t (*)(uint64_t))sub_1BAEB2ABC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD3FAA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE8A28C(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE8A184);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF4700;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE44F54(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE8A304();
      sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD3FCA8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE8A28C(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE8A184);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEF4700;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE44F54(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE8A304();
        sub_1BA4A2870(&qword_1ED3AEE50, (uint64_t (*)(uint64_t))sub_1BAE8A304, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD3FFBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEBD5D0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBD6C0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEEB708;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE45324(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEBD648();
      sub_1BA4A2870(&qword_1EF2B3620, (uint64_t (*)(uint64_t))sub_1BAEBD648, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD401CC(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEBD5D0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEBD6C0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEEB708;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE45324(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEBD648();
      sub_1BA4A2870(&qword_1EF2B3620, (uint64_t (*)(uint64_t))sub_1BAEBD648, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD403A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEBD5D0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEBD6C0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEB708;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE45324(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEBD648();
      sub_1BA4A2870(&qword_1EF2B3620, (uint64_t (*)(uint64_t))sub_1BAEBD648, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatSponsoredBannerNodeStyle();
      sub_1BA4A2870(&qword_1EF2B5B10, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD405B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatPostPurchase();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAEAFF78(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAEAFE2C);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, &qword_1ED3BE290, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEEDBEC;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE4550C(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAEAFFF0();
        sub_1BA4A2870(&qword_1EF2B3378, (uint64_t (*)(uint64_t))sub_1BAEAFFF0, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1EF2B5BD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, (uint64_t)&protocol conformance descriptor for FormatPostPurchase);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD408C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE79F7C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A06C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF8A0C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE456F4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD40AE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE79F7C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A06C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF8A0C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE456F4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD40D10(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE79F7C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A06C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF8A0C;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE456F4(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD40F44(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE79F7C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A06C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF8A0C;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE456F4(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD4122C(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE79F7C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A06C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8A0C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE456F4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE79FF4();
      sub_1BA4A2870(&qword_1ED3AEE00, (uint64_t (*)(uint64_t))sub_1BAE79FF4, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD413F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7A2F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF88C8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE458DC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7A36C();
      sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD41614(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE7A2F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF88C8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE458DC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7A36C();
      sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD41844(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE7A2F4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF88C8;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE458DC(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE7A36C();
      sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD41A78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE7A2F4(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF88C8;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE458DC(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE7A36C();
      sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD41D60(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7A2F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF88C8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE458DC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7A36C();
      sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD41F28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE7A2F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7A1EC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF88C8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE458DC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7A36C();
      sub_1BA4A2870(&qword_1ED3AEE10, (uint64_t (*)(uint64_t))sub_1BAE7A36C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3A08A0, (uint64_t)&type metadata for FormatIssueCoverTraits, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEF88DC();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD42158(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAE88E90(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE88D88);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF4C5C;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE45CAC(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE88F08();
      sub_1BA4A2870(&qword_1ED3AEDE0, (uint64_t (*)(uint64_t))sub_1BAE88F08, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD42338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE8FAC4(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F9BC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF3A68;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE46264(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE8FB3C();
      sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD42540(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE8FAC4(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE8F9BC);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEF3A68;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46264(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE8FB3C();
        sub_1BA4A2870(&qword_1ED3AEFA0, (uint64_t (*)(uint64_t))sub_1BAE8FB3C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD42854(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEE70B4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE71A4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE53C0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA7333B4(a1);
    v20 = v31;
    v21 = sub_1BAE4644C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEE712C();
      sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
      sub_1BA826738();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD42A6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE70B4(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE71A4);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4644C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE712C();
        sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD42D80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEE6D54(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6E44);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE53C0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE46634(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEE6DCC();
      sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
      sub_1BA6A1098();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD42F98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE6D54(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6E44);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46634(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE6DCC();
        sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD432AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEE69F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6AE4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE53C0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4681C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEE6A6C();
      sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
      sub_1BA829BBC();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD434C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE69F4(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6AE4);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4681C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE6A6C();
        sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD437D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEE6694(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6784);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE53C0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE46A04(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEE670C();
      sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
      sub_1BA766C2C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD439F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE6694(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6784);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46A04(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE670C();
        sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD43D04(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE6440(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6530);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46BEC(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE64B8();
        sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD44018(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE6440(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6530);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46BEC(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE64B8();
        sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD4432C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEE6148(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6238);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEE53C0;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE46DD4(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAEE61C0();
      sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD44534(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE6148(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE6238);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46DD4(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE61C0();
        sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD44848(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a6;
  v24 = a7;
  v25 = a8;
  v13 = a5 & 1;
  v30 = a3;
  v31 = a4;
  v32 = a5 & 1;
  sub_1BAEE5DE8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28[0] = a3;
  v28[1] = a4;
  v29 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5ED8);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEE53C0;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v27;
    v21 = sub_1BAE46FBC(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAEE5E60();
      sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD44A08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE5DE8(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5ED8);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE46FBC(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE5E60();
        sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD44D1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAEE5A88(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5B78);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEE53C0;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE471A4(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAEE5B00();
      sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD44EFC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE5A88(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5B78);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE471A4(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE5B00();
        sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD45210(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86C8B0();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE57BC(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE58AC);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4738C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE5834();
        sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&unk_1ED3B0510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD45524(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE57BC(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE58AC);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4738C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE5834();
        sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD45838(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEE545C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE554C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE53C0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE47574(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEE54D4();
      sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD45A50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE545C(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE554C);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE47574(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE54D4();
        sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD45D64(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEE5150(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5240);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE53C0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4775C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEE51C8();
      sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD45F2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEE5150(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEE5240);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEE53C0;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4775C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEE51C8();
        sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD46240(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE70C4C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE70B00);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFBFD4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE47944(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE70CC4();
      sub_1BA4A2870(&qword_1ED3AEDA0, (uint64_t (*)(uint64_t))sub_1BAE70CC4, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD46460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA03E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA02DC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF0534;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE47D14(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEA045C();
      sub_1BA4A2870(&qword_1ED3AED70, (uint64_t (*)(uint64_t))sub_1BAEA045C, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD46678(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA03E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA02DC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF0534;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE47D14(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEA045C();
      sub_1BA4A2870(&qword_1ED3AED70, (uint64_t (*)(uint64_t))sub_1BAEA045C, MEMORY[0x1E0DED188]);
      sub_1BA62B2B4();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD46890(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD v47[8];
  unsigned __int8 v48;
  _BYTE v49[72];
  _BYTE v50[80];
  uint64_t v51;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v47, &qword_1ED3A0240, (uint64_t)&type metadata for FormatGroupNodeMaskPath);
  v28 = v47[0];
  v29 = v47[1];
  v30 = v47[2];
  v31 = v47[4];
  v33 = v47[3];
  v34 = v47[5];
  v32 = v47[6];
  v51 = v47[7];
  v27 = v48;
  v44 = a2;
  v45 = a3;
  v46 = v11;
  sub_1BAE96F7C(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v35 = a2;
  v36 = a3;
  LOBYTE(v37) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v35, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE9706C);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  sub_1BA6A09F0(a1, (uint64_t)v49, &qword_1ED3A0240, (uint64_t)&type metadata for FormatGroupNodeMaskPath);
  if (v49[64] == 255)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v17 = sub_1BAEF2500((uint64_t)v49, (uint64_t)v50);
    v22[1] = v22;
    v35 = v28;
    v36 = v29;
    v37 = v30;
    v38 = v33;
    v39 = v31;
    v40 = v34;
    v41 = v32;
    v42 = v51;
    v43 = v27;
    MEMORY[0x1E0C80A78](v17);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF256C;
    v21[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA5A5A64(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA7AF9CC);
    v18 = v26;
    v19 = sub_1BAE47EFC(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (v18)
    {
      swift_release();
      return sub_1BA5608E0(v28, v29, v30, v33, v31, v34, v32, v51, v27);
    }
    if ((v19 & 1) != 0)
    {
      sub_1BAE96FF4();
      sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
      sub_1BA829530();
      sub_1BB874464();
      sub_1BA5608E0(v35, v36, v37, v38, v39, v40, v41, v42, v43);
    }
    else
    {
      sub_1BA5608E0(v28, v29, v30, v33, v31, v34, v32, v51, v27);
    }
  }
  return swift_release();
}

uint64_t sub_1BAD46BA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE96F7C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9706C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF256C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE47EFC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE96FF4();
      sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD46DD0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE96F7C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE9706C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF256C;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE47EFC(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE96FF4();
      sub_1BA4A2870(&qword_1ED3AED50, (uint64_t (*)(uint64_t))sub_1BAE96FF4, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD470B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  _QWORD v47[8];
  unsigned __int8 v48;
  _BYTE v49[72];
  _BYTE v50[80];
  uint64_t v51;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v47, &qword_1ED3A0240, (uint64_t)&type metadata for FormatGroupNodeMaskPath);
  v28 = v47[0];
  v29 = v47[1];
  v30 = v47[2];
  v31 = v47[4];
  v33 = v47[3];
  v34 = v47[5];
  v32 = v47[6];
  v51 = v47[7];
  v27 = v48;
  v44 = a2;
  v45 = a3;
  v46 = v11;
  sub_1BAE972F4(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v35 = a2;
  v36 = a3;
  LOBYTE(v37) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v35, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE971EC);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  sub_1BA6A09F0(a1, (uint64_t)v49, &qword_1ED3A0240, (uint64_t)&type metadata for FormatGroupNodeMaskPath);
  if (v49[64] == 255)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v17 = sub_1BAEF2500((uint64_t)v49, (uint64_t)v50);
    v22[1] = v22;
    v35 = v28;
    v36 = v29;
    v37 = v30;
    v38 = v33;
    v39 = v31;
    v40 = v34;
    v41 = v32;
    v42 = v51;
    v43 = v27;
    MEMORY[0x1E0C80A78](v17);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF2490;
    v21[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA5A5A64(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA7AF9CC);
    v18 = v26;
    v19 = sub_1BAE480E4(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (v18)
    {
      swift_release();
      return sub_1BA5608E0(v28, v29, v30, v33, v31, v34, v32, v51, v27);
    }
    if ((v19 & 1) != 0)
    {
      sub_1BAE9736C();
      sub_1BA4A2870(&qword_1ED3AED60, (uint64_t (*)(uint64_t))sub_1BAE9736C, MEMORY[0x1E0DED188]);
      sub_1BA829530();
      sub_1BB874464();
      sub_1BA5608E0(v35, v36, v37, v38, v39, v40, v41, v42, v43);
    }
    else
    {
      sub_1BA5608E0(v28, v29, v30, v33, v31, v34, v32, v51, v27);
    }
  }
  return swift_release();
}

uint64_t sub_1BAD473C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE972F4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE971EC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF2490;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE480E4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9736C();
      sub_1BA4A2870(&qword_1ED3AED60, (uint64_t (*)(uint64_t))sub_1BAE9736C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD475F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE972F4(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE971EC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF2490;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE480E4(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE9736C();
      sub_1BA4A2870(&qword_1ED3AED60, (uint64_t (*)(uint64_t))sub_1BAE9736C, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD478E0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE90300(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE901F8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF3848;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE482CC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE90378();
      sub_1BA4A2870(&qword_1EF2B2D48, (uint64_t (*)(uint64_t))sub_1BAE90378, MEMORY[0x1E0DED188]);
      sub_1BA827F44();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD47AA8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a7;
  v25 = a2;
  v26 = a8;
  v13 = a6 & 1;
  v32 = a4;
  v33 = a5;
  v34 = a6 & 1;
  sub_1BAE80F80(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a4;
  v30 = a5;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE81070);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a3 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
  }
  else
  {
    v29 = a1;
    v30 = v25;
    MEMORY[0x1E0C80A78](v19);
    v24[2] = v26;
    v24[3] = v20;
    v24[4] = sub_1BAEF66C0;
    v24[5] = v18;
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    v21 = v28;
    v22 = sub_1BAE484B4(v27, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (v21)
      return swift_release();
    if ((v22 & 1) != 0)
    {
      sub_1BAE80FF8();
      sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
      sub_1BA5B987C();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD47C70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v22 = a6;
  v23 = a7;
  v24 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE80F80(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE81070);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if ((~a1 & 0xFF00000000) != 0)
  {
    LODWORD(v25[0]) = a1;
    BYTE4(v25[0]) = BYTE4(a1);
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v22;
    v21[3] = v23;
    v21[4] = sub_1BAEF66C0;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    v19 = sub_1BAE484B4(v24, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE80FF8();
      sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
      sub_1BAEA56C4();
      sub_1BB874464();
    }
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD47E44(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a7;
  v25 = a2;
  v26 = a8;
  v13 = a6 & 1;
  v32 = a4;
  v33 = a5;
  v34 = a6 & 1;
  sub_1BAE8148C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a4;
  v30 = a5;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE81384);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a3 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
  }
  else
  {
    v29 = a1;
    v30 = v25;
    MEMORY[0x1E0C80A78](v19);
    v24[2] = v26;
    v24[3] = v20;
    v24[4] = sub_1BAEF6620;
    v24[5] = v18;
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    v21 = v28;
    v22 = sub_1BAE4869C(v27, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (v21)
      return swift_release();
    if ((v22 & 1) != 0)
    {
      sub_1BAE81504();
      sub_1BA4A2870(&qword_1ED3AED20, (uint64_t (*)(uint64_t))sub_1BAE81504, MEMORY[0x1E0DED188]);
      sub_1BA5B987C();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD4800C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE8148C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE81384);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF6620;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4869C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE81504();
      sub_1BA4A2870(&qword_1ED3AED20, (uint64_t (*)(uint64_t))sub_1BAE81504, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAE81250();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4823C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v22 = a6;
  v23 = a7;
  v24 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE8148C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE81384);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if ((~a1 & 0xFF00000000) != 0)
  {
    LODWORD(v25[0]) = a1;
    BYTE4(v25[0]) = BYTE4(a1);
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v22;
    v21[3] = v23;
    v21[4] = sub_1BAEF6620;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    v19 = sub_1BAE4869C(v24, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE81504();
      sub_1BA4A2870(&qword_1ED3AED20, (uint64_t (*)(uint64_t))sub_1BAE81504, MEMORY[0x1E0DED188]);
      sub_1BAEA56C4();
      sub_1BB874464();
    }
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD48410(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE7B508(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B5F8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF80C0;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE48884(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE7B580();
      sub_1BA4A2870(&qword_1ED3AECF0, (uint64_t (*)(uint64_t))sub_1BAE7B580, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD48644(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7B508(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B5F8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF80C0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE48884(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7B580();
      sub_1BA4A2870(&qword_1ED3AECF0, (uint64_t (*)(uint64_t))sub_1BAE7B580, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4880C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE7B880(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B778);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF802C;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE48A6C(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE7B8F8();
      sub_1BA4A2870(&qword_1ED3AED00, (uint64_t (*)(uint64_t))sub_1BAE7B8F8, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD48A40(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7B880(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7B778);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF802C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE48A6C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7B8F8();
      sub_1BA4A2870(&qword_1ED3AED00, (uint64_t (*)(uint64_t))sub_1BAE7B8F8, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD48C08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE7D7F8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D8E8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF746C;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE48E3C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE7D870();
      sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD48E18(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a6;
  v24 = a7;
  v25 = a8;
  v13 = a5 & 1;
  v30 = a3;
  v31 = a4;
  v32 = a5 & 1;
  sub_1BAE7D7F8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28[0] = a3;
  v28[1] = a4;
  v29 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7D8E8);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF746C;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v27;
    v21 = sub_1BAE48E3C(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE7D870();
      sub_1BA4A2870(&qword_1ED3AECD0, (uint64_t (*)(uint64_t))sub_1BAE7D870, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD48FD8(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEAFCC4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAFBBC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 12)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEDC8C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4920C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEAFD3C();
      sub_1BA4A2870(&qword_1ED3AECB0, (uint64_t (*)(uint64_t))sub_1BAEAFD3C, MEMORY[0x1E0DED188]);
      sub_1BA5F41DC();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD491A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEAB68C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAB584);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEE434;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE493F4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEAB704();
      sub_1BA4A2870(&qword_1ED3AECA0, (uint64_t (*)(uint64_t))sub_1BAEAB704, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD493B8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v25[7];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v36[5];
  _BYTE v37[48];
  uint64_t v38;

  v27 = a7;
  v26 = a6;
  v28 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v36, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  v12 = v36[0];
  v13 = v36[1];
  v14 = v36[2];
  v15 = v36[3];
  v33 = a2;
  v34 = a3;
  v35 = v11;
  sub_1BAEAB68C(0);
  v17 = (uint64_t *)(v7 + *(int *)(v16 + 44));
  v18 = *v17;
  v19 = v17[1];
  v29 = a2;
  v30 = a3;
  LOBYTE(v31) = v11;
  v20 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v20 + 16, (uint64_t (*)(_QWORD))sub_1BAEAB584);
  *(_QWORD *)(v20 + 40) = v18;
  *(_QWORD *)(v20 + 48) = v19;
  v21 = sub_1BA6A09F0(a1, (uint64_t)v37, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  if ((v37[32] & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v29 = v12;
    v30 = v13;
    v31 = v14;
    v32 = v15;
    MEMORY[0x1E0C80A78](v21);
    v25[2] = v26;
    v25[3] = v27;
    v25[4] = sub_1BAEEE434;
    v25[5] = v20;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    v22 = v38;
    v23 = sub_1BAE493F4(v28, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v25);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEAB704();
      sub_1BA4A2870(&qword_1ED3AECA0, (uint64_t (*)(uint64_t))sub_1BAEAB704, MEMORY[0x1E0DED188]);
      sub_1BA58C294();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD495F8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEAB68C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAB584);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEEE434;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE493F4(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEAB704();
      sub_1BA4A2870(&qword_1ED3AECA0, (uint64_t (*)(uint64_t))sub_1BAEAB704, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD4982C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[6];
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v33 = a8;
  v35 = a1;
  v36 = a3;
  v13 = a7 & 1;
  v41 = a5;
  v42 = a6;
  v43 = a7 & 1;
  sub_1BAE76B34(0);
  v15 = *(int *)(v14 + 44);
  v34 = v8;
  v16 = (uint64_t *)(v8 + v15);
  v18 = *v16;
  v17 = v16[1];
  v37 = a5;
  v38 = a6;
  LOBYTE(v39) = v13;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v37, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE76C24);
  *(_QWORD *)(v19 + 40) = v18;
  *(_QWORD *)(v19 + 48) = v17;
  if ((unsigned __int16)(a4 >> 9) > 0x7Eu)
  {
    swift_retain();
    sub_1BA69C808(a5, a6, v13);
    return swift_release();
  }
  v30 = (uint64_t)&v30;
  v22 = v35;
  v37 = v35;
  v38 = a2;
  v23 = a4;
  v24 = v36;
  v39 = v36;
  v40 = v23;
  MEMORY[0x1E0C80A78](v20);
  v32 = v29;
  v29[2] = v26;
  v29[3] = v25;
  v29[4] = sub_1BAEF9E6C;
  v29[5] = v19;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  v31 = a2;
  sub_1BA72FFC4(v22, a2, v24, v23);
  v27 = v44;
  v28 = sub_1BAE495DC(v33, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v32);
  if (!v27)
  {
    if ((v28 & 1) != 0)
    {
      sub_1BAE76BAC();
      sub_1BA4A2870(&qword_1ED3AEC60, (uint64_t (*)(uint64_t))sub_1BAE76BAC, MEMORY[0x1E0DED188]);
      sub_1BA7BA0C0();
      sub_1BB874464();
      sub_1BA54C928(v37, v38, v39, v40);
    }
    else
    {
      sub_1BA54C928(v35, v31, v36, v23);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA54C928(v35, v31, v36, v23);
}

uint64_t sub_1BAD49A74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEAF4BC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEEDE68;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE497C4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEAF534();
      sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD49C84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEAF4BC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEDE68;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE497C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEAF534();
      sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatProgressViewNodeStyle();
      sub_1BA4A2870(&qword_1ED3A8028, (uint64_t (*)(uint64_t))type metadata accessor for FormatProgressViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD49E9C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEAF4BC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEEDE68;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE497C4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEAF534();
      sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4A070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEAF4BC(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEAF5AC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEEDE68;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE497C4(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAEAF534();
      sub_1BA4A2870(&qword_1ED3AEC40, (uint64_t (*)(uint64_t))sub_1BAEAF534, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD4A278(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA0734(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF03B8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE49D24(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA07AC();
      sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatLayeredMediaNodeStyle();
      sub_1BA4A2870(&qword_1ED3A7FC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayeredMediaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatLayeredMediaNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4A490(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA0734(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF03B8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE49D24(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA07AC();
      sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4A6A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEA0734(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF03B8;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE49D24(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEA07AC();
      sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4A8B8(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEA0734(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA0824);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF03B8;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE49D24(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEA07AC();
      sub_1BA4A2870(&qword_1ED3AEC10, (uint64_t (*)(uint64_t))sub_1BAEA07AC, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4AA8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE9A3EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A2E4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF1618;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = sub_1BAE4A0F4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE9A464();
      sub_1BA4A2870(&qword_1ED3AEBF0, (uint64_t (*)(uint64_t))sub_1BAE9A464, MEMORY[0x1E0DED188]);
      sub_1BAEF16C0();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4AC9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE9A3EC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A2E4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF1618;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = sub_1BAE4A0F4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE9A464();
      sub_1BA4A2870(&qword_1ED3AEBF0, (uint64_t (*)(uint64_t))sub_1BAE9A464, MEMORY[0x1E0DED188]);
      sub_1BAEF1624();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4AEAC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE90E14(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE90D0C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 12)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF3490;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4A2DC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE90E8C();
      sub_1BA4A2870(&qword_1ED3AEBE0, (uint64_t (*)(uint64_t))sub_1BAE90E8C, MEMORY[0x1E0DED188]);
      sub_1BA5F41DC();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4B074(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7AF2C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8370;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4A4C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7AFA4();
      sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
      sub_1BAEF84CC();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4B23C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAE7AF2C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEF8370;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE4A4C4(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAE7AFA4();
      sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4B46C(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7AF2C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8370;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4A4C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7AFA4();
      sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
      sub_1BAEF8470();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4B638(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7AF2C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 12)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8370;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4A4C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7AFA4();
      sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
      sub_1BAEF8420();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4B800(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7AF2C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7ACD0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8370;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4A4C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7AFA4();
      sub_1BA4A2870(&qword_1EF2B2748, (uint64_t (*)(uint64_t))sub_1BAE7AFA4, MEMORY[0x1E0DED188]);
      sub_1BAEF8384();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4B9C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEE895C;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE4A6AC(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4BBD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE895C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4A6AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatVideoPlayerNodeStyle();
      sub_1BA4A2870(qword_1ED3A7CC0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoPlayerNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4BDF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE895C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4A6AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4C008(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD8E4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE895C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4A6AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatImageNodeStyle();
      sub_1BA4A2870(&qword_1ED3A6808, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4C220(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v19;
  uint64_t v20;
  char v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  _QWORD v30[6];
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[6];
  unsigned __int8 v53;
  char v54[16];
  uint64_t v55;
  uint64_t v56;

  v33 = a7;
  v32 = a6;
  v34 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED3A9168, (uint64_t)&type metadata for FormatVideoPlayerOverlayContent);
  v36 = v52[0];
  v37 = v52[1];
  v38 = v52[2];
  v39 = v52[3];
  v40 = v52[4];
  v41 = v52[5];
  v35 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAECD8E4(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v42 = a2;
  v43 = a3;
  LOBYTE(v44) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v42, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  v17 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED3A9168, (uint64_t)&type metadata for FormatVideoPlayerOverlayContent);
  if (v55 == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  v31 = (uint64_t)&v31;
  v42 = v36;
  v43 = v37;
  v44 = v38;
  v45 = v39;
  v46 = v40;
  v47 = v41;
  v19 = v35 & 1;
  v48 = v35 & 1;
  MEMORY[0x1E0C80A78](v17);
  v30[2] = v32;
  v30[3] = v33;
  v30[4] = sub_1BAEE895C;
  v30[5] = v16;
  swift_retain();
  sub_1BA69C808(a2, a3, v11);
  sub_1BA6F7850(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA49C600);
  v20 = v56;
  v21 = sub_1BAE4A6AC(v34, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v30);
  if (!v20)
  {
    v22 = v37;
    v23 = v40;
    v24 = v41;
    if ((v21 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      sub_1BAB37120();
      sub_1BB874464();
      v25 = v43;
      v26 = v46;
      v27 = v47;
      v28 = v48;
      swift_release();
      sub_1BA738D54(v25);
      swift_release();
      swift_release();
      sub_1BA69C828(v26, v27, v28);
    }
    else
    {
      v29 = v35 & 1;
      swift_release();
      sub_1BA738D54(v22);
      swift_release();
      swift_release();
      sub_1BA69C828(v23, v24, v29);
    }
    return swift_release();
  }
  swift_release();
  swift_release();
  sub_1BA738D54(v37);
  swift_release();
  swift_release();
  return sub_1BA69C828(v40, v41, v19);
}

uint64_t sub_1BAD4C640(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAECD8E4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEE895C;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE4A6AC(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4C814(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAECD8E4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD9D4);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEE895C;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE4A6AC(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAECD95C();
      sub_1BA4A2870(&qword_1ED3AEBD0, (uint64_t (*)(uint64_t))sub_1BAECD95C, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4CA44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEB20B8(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEED7EC;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE4A894(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAEB2130();
      sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD4CC4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEB20B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEED7EC;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE4A894(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEB2130();
      sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4CE5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEB20B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEED7EC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4A894(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEB2130();
      sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatJsonConfig();
      sub_1BA4A2870(&qword_1ED3A59F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonConfig, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4D074(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  _QWORD v28[6];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int16 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  _QWORD v50[8];
  char v51[8];
  uint64_t v52;
  uint64_t v53;

  v31 = a7;
  v30 = a6;
  v32 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v50, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  v12 = v50[0];
  v35 = v50[1];
  v29 = v50[2];
  v34 = v50[3];
  v36 = v50[4];
  v38 = v50[5];
  v37 = v50[6];
  v53 = v50[7];
  v47 = a2;
  v48 = a3;
  v49 = v11;
  sub_1BAEB20B8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v39 = a2;
  v40 = a3;
  LOBYTE(v41) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v39, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  v18 = sub_1BA6A09F0((uint64_t)a1, (uint64_t)v51, (unint64_t *)&qword_1ED3A7CB8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle);
  if (v52)
  {
    v39 = v12;
    v40 = v35;
    v41 = v29;
    v42 = v34;
    v43 = v36;
    v44 = v38;
    v45 = v37;
    v46 = v53;
    MEMORY[0x1E0C80A78](v18);
    v28[2] = v30;
    v28[3] = v31;
    v28[4] = sub_1BAEED7EC;
    v28[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BAEB22F4(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAC69440);
    v19 = v33;
    v20 = sub_1BAE4A894(v32, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v28);
    if (v19)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v36, v38, v37);
    }
    else
    {
      v22 = v36;
      v23 = v38;
      v24 = v37;
      if ((v20 & 1) != 0)
      {
        sub_1BAEB2130();
        sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
        sub_1BAEED80C();
        sub_1BB874464();
        v25 = v43;
        v26 = v44;
        v27 = v45;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v25, v26, v27);
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v22, v23, v24);
      }
      swift_release();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
}

uint64_t sub_1BAD4D46C(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEB20B8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB21A8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEED7EC;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE4A894(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEB2130();
      sub_1BA4A2870(&qword_1ED3AEBA0, (uint64_t (*)(uint64_t))sub_1BAEB2130, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4D640(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[6];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a7;
  v25 = a2;
  v26 = a8;
  v13 = a6 & 1;
  v32 = a4;
  v33 = a5;
  v34 = a6 & 1;
  sub_1BAEAAE70(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a4;
  v30 = a5;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAAC9C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a3 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
  }
  else
  {
    v29 = a1;
    v30 = v25;
    MEMORY[0x1E0C80A78](v19);
    v24[2] = v26;
    v24[3] = v20;
    v24[4] = sub_1BAEEE67C;
    v24[5] = v18;
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    v21 = v28;
    v22 = sub_1BAE4AA7C(v27, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (v21)
      return swift_release();
    if ((v22 & 1) != 0)
    {
      sub_1BAEAAEE8();
      sub_1BA4A2870(&qword_1EF2B32F8, (uint64_t (*)(uint64_t))sub_1BAEAAEE8, MEMORY[0x1E0DED188]);
      sub_1BAEEE688();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD4D808(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE99AE4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE99998);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF19A8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4AC64(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE99B5C();
      sub_1BA4A2870(&qword_1ED3AEB90, (uint64_t (*)(uint64_t))sub_1BAE99B5C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatImageNodeStyle();
      sub_1BA4A2870(&qword_1ED3A6808, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD4DA20(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAE91084(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE90F7C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF33FC;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE4AE4C(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE910FC();
      sub_1BA4A2870(&qword_1ED3AEB70, (uint64_t (*)(uint64_t))sub_1BAE910FC, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD4DC00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v25[7];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v36[5];
  _BYTE v37[48];
  uint64_t v38;

  v27 = a7;
  v26 = a6;
  v28 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v36, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  v12 = v36[0];
  v13 = v36[1];
  v14 = v36[2];
  v15 = v36[3];
  v33 = a2;
  v34 = a3;
  v35 = v11;
  sub_1BAE9063C(0);
  v17 = (uint64_t *)(v7 + *(int *)(v16 + 44));
  v18 = *v17;
  v19 = v17[1];
  v29 = a2;
  v30 = a3;
  LOBYTE(v31) = v11;
  v20 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v20 + 16, (uint64_t (*)(_QWORD))sub_1BAE904AC);
  *(_QWORD *)(v20 + 40) = v18;
  *(_QWORD *)(v20 + 48) = v19;
  v21 = sub_1BA6A09F0(a1, (uint64_t)v37, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  if ((v37[32] & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v29 = v12;
    v30 = v13;
    v31 = v14;
    v32 = v15;
    MEMORY[0x1E0C80A78](v21);
    v25[2] = v26;
    v25[3] = v27;
    v25[4] = sub_1BAEF36BC;
    v25[5] = v20;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    v22 = v38;
    v23 = sub_1BAE4B034(v28, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v25);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE906B4();
      sub_1BA4A2870(&qword_1ED3AEB60, (uint64_t (*)(uint64_t))sub_1BAE906B4, MEMORY[0x1E0DED188]);
      sub_1BA58C294();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD4DE40(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9063C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE904AC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF36BC;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4B034(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE906B4();
      sub_1BA4A2870(&qword_1ED3AEB60, (uint64_t (*)(uint64_t))sub_1BAE906B4, MEMORY[0x1E0DED188]);
      sub_1BAEF36C8();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4E008(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE79DF8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE79CF0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF8D44;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4B21C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE79E70();
      sub_1BA4A2870(&qword_1ED3AEB40, (uint64_t (*)(uint64_t))sub_1BAE79E70, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4E1D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE79DF8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE79CF0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF8D44;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4B21C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE79E70();
      sub_1BA4A2870(&qword_1ED3AEB40, (uint64_t (*)(uint64_t))sub_1BAE79E70, MEMORY[0x1E0DED188]);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9440, (uint64_t (*)(uint64_t))type metadata accessor for FormatOption, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA639454();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4E400(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE75424(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE7531C);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEFA5BC;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4B404(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE7549C();
        sub_1BA4A2870(&qword_1ED3AEB00, (uint64_t (*)(uint64_t))sub_1BAE7549C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD4E714(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  _QWORD v21[6];
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  _QWORD v41[6];
  char v42[8];
  uint64_t v43;
  uint64_t v44;

  v27 = a7;
  v26 = a6;
  v28 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v41, &qword_1ED3A6A68, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environments);
  v25 = v41[0];
  v29 = v41[1];
  v24 = v41[2];
  v30 = v41[3];
  v23 = v41[4];
  v31 = v41[5];
  v38 = a2;
  v39 = a3;
  v40 = v11;
  sub_1BAE751B4(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v32 = a2;
  v33 = a3;
  LOBYTE(v34) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v32, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE750AC);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  v17 = sub_1BA6A09F0((uint64_t)a1, (uint64_t)v42, &qword_1ED3A6A68, (uint64_t)&type metadata for FormatCompilerOptions.Newsroom.Environments);
  if (v43 == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v22 = (uint64_t)&v22;
    v32 = v25;
    v33 = v29;
    v34 = v24;
    v35 = v30;
    v36 = v23;
    v37 = v31;
    MEMORY[0x1E0C80A78](v17);
    v21[2] = v26;
    v21[3] = v27;
    v21[4] = sub_1BAEFA620;
    v21[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA593184(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA5931BC);
    v19 = v44;
    v20 = sub_1BAE4B5EC(v28, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7522C();
      sub_1BA4A2870(&qword_1ED3AEB10, (uint64_t (*)(uint64_t))sub_1BAE7522C, MEMORY[0x1E0DED188]);
      sub_1BA59323C();
      sub_1BB874464();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAD4EA70(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE751B4(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE750AC);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEFA620;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4B5EC(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE7522C();
        sub_1BA4A2870(&qword_1ED3AEB10, (uint64_t (*)(uint64_t))sub_1BAE7522C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD4ED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE74CD4(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE74BCC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEFA6E8;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE4B7D4(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE74D4C();
      sub_1BA4A2870(&qword_1ED3AEB30, (uint64_t (*)(uint64_t))sub_1BAE74D4C, MEMORY[0x1E0DED188]);
      sub_1BA5AB344();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD4EF90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD354(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4BBA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4F1B0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECD354(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4BBA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4F3C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECD354(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4BBA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4F5F8(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAECD354(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEE8710;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4BBA4(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD4F82C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAECD354(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE8710;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4BBA4(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD4FB14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECD354(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8710;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE4BBA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD4FD2C(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD354(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD444);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE8710;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4BBA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAECD3CC();
      sub_1BA4A2870(&qword_1EF2B39E0, (uint64_t (*)(uint64_t))sub_1BAECD3CC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD4FEF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD754(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4BD8C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD50114(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECD754(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4BD8C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5032C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECD754(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4BD8C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5055C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAECD754(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEE8638;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4BD8C(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD50790(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAECD754(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE8638;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4BD8C(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD50A78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECD754(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8638;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE4BD8C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD50C90(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECD754(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECD608);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE8638;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4BD8C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAECD7CC();
      sub_1BA4A2870(&qword_1EF2B3A28, (uint64_t (*)(uint64_t))sub_1BAECD7CC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD50E58(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  _QWORD v60[14];
  unsigned __int8 v61;
  _BYTE v62[128];
  uint64_t v63;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v60, &qword_1ED3A4210, (uint64_t)&type metadata for FormatNumberFormat);
  v23 = v60[0];
  v24 = v60[1];
  v25 = v60[2];
  v26 = v60[3];
  v27 = v60[4];
  v28 = v60[5];
  v29 = v60[6];
  v30 = v60[7];
  v31 = v60[8];
  v32 = v60[9];
  v33 = v60[10];
  v34 = v60[11];
  v35 = v60[12];
  v37 = v60[13];
  v36 = v61;
  v57 = a2;
  v58 = a3;
  v59 = v11;
  sub_1BAE7314C(0);
  v13 = *(int *)(v12 + 44);
  v41 = v7;
  v42 = a2;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  v43 = a3;
  v44 = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v42, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE72FBC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  v18 = sub_1BA6A09F0(a1, (uint64_t)v62, &qword_1ED3A4210, (uint64_t)&type metadata for FormatNumberFormat);
  if ((unint64_t)v62[1] << 8 == 2048)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  LOWORD(v42) = v23;
  v43 = v24;
  v44 = v25 & 1;
  v45 = v26;
  v46 = v27 & 1;
  v47 = v28;
  v48 = v29 & 1;
  v49 = v30;
  v50 = v31 & 1;
  v51 = v32;
  v52 = v33 & 1;
  v53 = v34;
  v54 = v35 & 1;
  v55 = v37;
  v56 = v36 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v38;
  v22[3] = v39;
  v22[4] = sub_1BAEFB068;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v11);
  v20 = v63;
  v21 = sub_1BAE4C15C(v40, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE731C4();
      sub_1BA4A2870(&qword_1ED3AEAB0, (uint64_t (*)(uint64_t))sub_1BAE731C4, MEMORY[0x1E0DED188]);
      sub_1BAB1DB40();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD51168(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAEB85A4(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAEB849C);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEEC370;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4C52C(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAEB861C();
        sub_1BA4A2870(&qword_1ED3AEA90, (uint64_t (*)(uint64_t))sub_1BAEB861C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD5147C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEB3244(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB303C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEED0DC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4C714(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEB32BC();
      sub_1BA4A2870(&qword_1EF2B3400, (uint64_t (*)(uint64_t))sub_1BAEB32BC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3CF6C0, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAEED0E8();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD516AC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE72CDC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 5)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFB2A4;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4C8FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE72D54();
      sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
      sub_1BA665D58();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD51874(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAE72CDC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEFB2A4;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE4C8FC(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE72D54();
      sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD51A54(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE72CDC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 6)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFB2A4;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4C8FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE72D54();
      sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
      sub_1BA828AB8();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD51C1C(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE72CDC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFB2A4;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4C8FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE72D54();
      sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
      sub_1BAEFB310();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD51DE4(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE72CDC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE72BD4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFB2A4;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4C8FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE72D54();
      sub_1BA4A2870(&qword_1ED3AEA60, (uint64_t (*)(uint64_t))sub_1BAE72D54, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD51FAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[7];
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[144];
  uint64_t v49[18];
  _BYTE v50[160];
  uint64_t v51;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v48, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0((uint64_t)v48, (uint64_t)v50, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v45 = a2;
  v46 = a3;
  v47 = v11;
  sub_1BAEA260C(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v37 = a2;
  *((_QWORD *)&v37 + 1) = a3;
  LOBYTE(v38) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v37, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA247C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v49, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v49) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v50, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v43 = v35[6];
    v44[0] = v36[0];
    *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v36 + 9);
    v39 = v35[2];
    v40 = v35[3];
    v41 = v35[4];
    v42 = v35[5];
    v37 = v35[0];
    v38 = v35[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEEF9E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA8966F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    v20 = v51;
    v21 = sub_1BAE4CAE4(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      return sub_1BA896610((uint64_t)&v27);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAEA2684();
        sub_1BA4A2870(&qword_1EF2B3028, (uint64_t (*)(uint64_t))sub_1BAEA2684, MEMORY[0x1E0DED188]);
        sub_1BAEEF890();
        sub_1BB874464();
      }
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      sub_1BA896610((uint64_t)&v27);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD522AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE73BC0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEFABFC;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE4CCCC(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD524BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE73BC0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFABFC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4CCCC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatIssueCoverNodeStyle();
      sub_1BA4A2870(&qword_1ED3A76E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatIssueCoverNodeStyle, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD526D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE73BC0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFABFC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4CCCC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD528EC(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE73BC0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE73CB0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEFABFC;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE4CCCC(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE73C38();
      sub_1BA4A2870(&qword_1ED3AEA50, (uint64_t (*)(uint64_t))sub_1BAE73C38, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD52AC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF12B8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD52CE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF12B8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD52EF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF12B8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD53128(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 9)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF12B8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA665D9C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD532F0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE9B20C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF12B8;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4CEB4(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

unint64_t sub_1BAD53524(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  v22[1] = v22;
  v25[0] = a1;
  MEMORY[0x1E0C80A78](v18);
  v21[2] = v23;
  v21[3] = v24;
  v21[4] = sub_1BAEF12B8;
  v21[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BA6E6C80(a1);
  v20 = sub_1BAE4CEB4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v8)
  {
    if ((v20 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA665D14();
      sub_1BB874464();
      sub_1BA6E7468(v25[0]);
    }
    else
    {
      sub_1BA6E7468(a1);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6E7468(a1);
}

uint64_t sub_1BAD53730(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 4)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF12B8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA665CD0();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD538F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE9B20C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF12B8;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4CEB4(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD53BE0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF12B8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD53DF8(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B20C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF12B8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4CEB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD53FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE9B20C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (a1 == 1)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  else
  {
    v24 = (uint64_t)&v24;
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v25;
    v23[3] = v26;
    v23[4] = sub_1BAEF12B8;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    sub_1BA6E6C90(a1);
    v21 = v34;
    v22 = sub_1BAE4CEB4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v21 || (v22 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAE9B284();
      sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
      sub_1BAEF1174();
      sub_1BB874464();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAD541E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t *v43;
  _QWORD v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;

  v38 = a6;
  v39 = a7;
  v40 = a5;
  v43 = (uint64_t *)a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v36 - v12;
  v14 = sub_1BB86E710();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v42 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = a2;
  v47 = a3;
  v17 = a4 & 1;
  v48 = a4 & 1;
  sub_1BAE9B20C(0);
  v19 = *(int *)(v18 + 44);
  v41 = v7;
  v20 = (uint64_t *)(v7 + v19);
  v22 = *v20;
  v21 = v20[1];
  v44[0] = a2;
  v44[1] = a3;
  v45 = v17;
  v23 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v44, v23 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B2FC);
  *(_QWORD *)(v23 + 40) = v22;
  *(_QWORD *)(v23 + 48) = v21;
  sub_1BA5E01A4((uint64_t)v43, (uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v25 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v42, v13, v14);
    v43 = &v36;
    MEMORY[0x1E0C80A78](v25);
    v37 = v14;
    v26 = v39;
    *(&v36 - 4) = v38;
    *(&v36 - 3) = v26;
    *(&v36 - 2) = (uint64_t)sub_1BAEF12B8;
    *(&v36 - 1) = v23;
    v28 = v46;
    v27 = v47;
    v39 = v15;
    v29 = v48;
    swift_retain();
    sub_1BA69C808(a2, a3, v17);
    v30 = v49;
    v31 = sub_1BAE4CEB4(v40, v28, v27, v29, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v36 - 6));
    v49 = v30;
    if (v30)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v42, v37);
    }
    else
    {
      v32 = v42;
      v33 = v39;
      v34 = v37;
      if ((v31 & 1) != 0)
      {
        sub_1BAE9B284();
        sub_1BA4A2870(&qword_1ED3AEA30, (uint64_t (*)(uint64_t))sub_1BAE9B284, MEMORY[0x1E0DED188]);
        sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
        v35 = v49;
        sub_1BB874464();
        v49 = v35;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v32, v34);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD544F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1160;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD54710(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1160;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD54940(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE9B5FC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEF1160;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4D09C(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD54B74(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE9B5FC(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEF1160;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4D09C(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD54E5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1160;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD55074(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF1160;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5523C(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 4)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF1160;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA665CD0();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD55404(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 9)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF1160;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA665D9C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

unint64_t sub_1BAD555CC(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  v22[1] = v22;
  v25[0] = a1;
  MEMORY[0x1E0C80A78](v18);
  v21[2] = v23;
  v21[3] = v24;
  v21[4] = sub_1BAEF1160;
  v21[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BA6E6C80(a1);
  v20 = sub_1BAE4D09C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v8)
  {
    if ((v20 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA665D14();
      sub_1BB874464();
      sub_1BA6E7468(v25[0]);
    }
    else
    {
      sub_1BA6E7468(a1);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6E7468(a1);
}

uint64_t sub_1BAD557D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1160;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD559F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE9B5FC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1160;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4D09C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9520, (uint64_t)&type metadata for FormatImageAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA63B770();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD55C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE9B5FC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B4F4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (a1 == 1)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  else
  {
    v24 = (uint64_t)&v24;
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v25;
    v23[3] = v26;
    v23[4] = sub_1BAEF1160;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    sub_1BA6E6C90(a1);
    v21 = v34;
    v22 = sub_1BAE4D09C(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v21 || (v22 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAE9B674();
      sub_1BA4A2870(&qword_1ED3AEA40, (uint64_t (*)(uint64_t))sub_1BAE9B674, MEMORY[0x1E0DED188]);
      sub_1BAEF1174();
      sub_1BB874464();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAD55E4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE76070(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFA188;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4D284(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE760E8();
      sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5606C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE76070(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFA188;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4D284(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE760E8();
      sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5629C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE76070(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEFA188;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4D284(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE760E8();
      sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD564D0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE76070(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEFA188;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4D284(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE760E8();
      sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD567B8(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE76070(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE76160);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFA188;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4D284(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE760E8();
      sub_1BA4A2870(&qword_1ED3AEA20, (uint64_t (*)(uint64_t))sub_1BAE760E8, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD56980(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE7642C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFA0C8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4D46C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE764A4();
      sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD56BB0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAE7642C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEFA0C8;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4D46C(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE764A4();
      sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD56DE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAE7642C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEFA0C8;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4D46C(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE764A4();
      sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD570CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7642C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFA0C8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4D46C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE764A4();
      sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD572EC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7642C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE762E0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFA0C8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4D46C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE764A4();
      sub_1BA4A2870(&qword_1EF2B24F0, (uint64_t (*)(uint64_t))sub_1BAE764A4, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD574B4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAE94C44(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE94AF8);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF2FC8;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE4D654(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE94CBC();
      sub_1BA4A2870(&qword_1EF2B2E70, (uint64_t (*)(uint64_t))sub_1BAE94CBC, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD57694(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE90BA4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE90A58);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF3518;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4D83C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE90C1C();
      sub_1BA4A2870(&qword_1EF2B2D98, (uint64_t (*)(uint64_t))sub_1BAE90C1C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatTextNodeStyle();
      sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD578AC(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE908F0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE907E8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 10)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF35A0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4DA24(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE90968();
      sub_1BA4A2870(&qword_1ED3AEA10, (uint64_t (*)(uint64_t))sub_1BAE90968, MEMORY[0x1E0DED188]);
      sub_1BAEF361C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD57A74(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAE908F0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE907E8);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF35A0;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE4DA24(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE90968();
      sub_1BA4A2870(&qword_1ED3AEA10, (uint64_t (*)(uint64_t))sub_1BAE90968, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD57C54(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a6;
  v24 = a7;
  v25 = a8;
  v13 = a5 & 1;
  v30 = a3;
  v31 = a4;
  v32 = a5 & 1;
  sub_1BAE908F0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28[0] = a3;
  v28[1] = a4;
  v29 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE907E8);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF35A0;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v27;
    v21 = sub_1BAE4DA24(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE90968();
      sub_1BA4A2870(&qword_1ED3AEA10, (uint64_t (*)(uint64_t))sub_1BAE90968, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD57E14(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE908F0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE907E8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 4)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF35A0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4DA24(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE90968();
      sub_1BA4A2870(&qword_1ED3AEA10, (uint64_t (*)(uint64_t))sub_1BAE90968, MEMORY[0x1E0DED188]);
      sub_1BAAD5BB0();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD57FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE77B34(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE779E8);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF98F4;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE4DDF4(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE77BAC();
      sub_1BA4A2870(&qword_1EF2B2588, (uint64_t (*)(uint64_t))sub_1BAE77BAC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD581E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECFC9C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8354;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4E1C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD58404(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECFC9C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8354;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4E1C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5861C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAECFC9C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8354;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4E1C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5884C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAECFC9C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEE8354;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4E1C4(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD58A80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAECFC9C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE8354;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4E1C4(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD58D68(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECFC9C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFD8C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE8354;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4E1C4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAECFD14();
      sub_1BA4A2870(&qword_1ED3AE9D0, (uint64_t (*)(uint64_t))sub_1BAECFD14, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD58F30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAED0014(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8288;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4E3AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAED008C();
      sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
      sub_1BA68A818();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD59148(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAED0014(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8288;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4E3AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAED008C();
      sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD59378(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAED0014(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEE8288;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4E3AC(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAED008C();
      sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD595AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAED0014(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE8288;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4E3AC(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAED008C();
      sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD59894(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAED0014(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8288;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4E3AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAED008C();
      sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD59AB4(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAED0014(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECFF0C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE8288;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4E3AC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAED008C();
      sub_1BA4A2870(&qword_1ED3AE9E0, (uint64_t (*)(uint64_t))sub_1BAED008C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD59C7C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC840C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE96E0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4E594(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA6A1098();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

_QWORD *sub_1BAD59E94(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[16];
  __int128 v28[8];
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE v34[128];
  __int128 v35[8];
  uint64_t v36;
  _BYTE v37[136];
  uint64_t v38;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v34, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  sub_1BA6A09F0((uint64_t)v34, (uint64_t)v37, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  v31 = a2;
  v32 = a3;
  v33 = v11;
  sub_1BAEC840C(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v29 = a2;
  *((_QWORD *)&v29 + 1) = a3;
  v30 = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v35, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  if (sub_1BAB05F98((uint64_t)v35) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return (_QWORD *)swift_release();
  }
  else
  {
    sub_1BA7439D4(v35, (uint64_t)&v36);
    sub_1BA6A09F0((uint64_t)v37, (uint64_t)v28, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    v19 = sub_1BA7439D4(v28, (uint64_t)&v29);
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEE96E0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    v20 = v38;
    v21 = sub_1BAE4E594(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      sub_1BA7439D4(&v29, (uint64_t)v27);
      return sub_1BA6A0C50(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAEC8484();
        sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
        sub_1BA686650();
        sub_1BB874464();
      }
      sub_1BA7439D4(&v29, (uint64_t)v27);
      sub_1BA6A0C50(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
      return (_QWORD *)swift_release();
    }
  }
}

uint64_t sub_1BAD5A148(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC840C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE96E0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4E594(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5A378(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAEC840C(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE96E0;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4E594(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD5A660(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC840C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE96E0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4E594(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9560, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A1154();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5A890(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[7];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[12];
  __int16 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[200];
  _BYTE v46[200];
  _QWORD v47[29];

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v45, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  sub_1BA6A09F0((uint64_t)v45, (uint64_t)v47, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  v42 = a2;
  v43 = a3;
  v44 = v11;
  sub_1BAEC840C(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v29 = a2;
  *((_QWORD *)&v29 + 1) = a3;
  LOBYTE(v30) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v46, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  if (sub_1BA92287C((uint64_t)v46) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v47, (uint64_t)v27, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    v41 = v28;
    v39 = v27[10];
    v40 = v27[11];
    v35 = v27[6];
    v36 = v27[7];
    v37 = v27[8];
    v38 = v27[9];
    v31 = v27[2];
    v32 = v27[3];
    v33 = v27[4];
    v34 = v27[5];
    v29 = v27[0];
    v30 = v27[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEE96E0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    v20 = v47[28];
    v21 = sub_1BAE4E594(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA686694();
      sub_1BB874464();
    }
    return swift_release();
  }
}

uint64_t sub_1BAD5AB34(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAEC840C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEE96E0;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE4E594(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD5AD14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC840C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE96E0;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4E594(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5AF34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEC840C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (a1 == 9)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24 = (uint64_t)&v24;
  LOBYTE(v28) = a1;
  v29 = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEE96E0;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA6E8A60(a1, a2);
  v21 = v34;
  v22 = sub_1BAE4E594(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BA6866D8();
      sub_1BB874464();
      sub_1BA5E800C(v29);
    }
    else
    {
      sub_1BA5E800C(a2);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA5E800C(a2);
}

uint64_t sub_1BAD5B154(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC840C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC84FC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE96E0;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4E594(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC8484();
      sub_1BA4A2870(&qword_1ED3AE9B0, (uint64_t (*)(uint64_t))sub_1BAEC8484, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5B31C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC8784(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE95E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4E77C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA6A1098();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

_QWORD *sub_1BAD5B534(_QWORD *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[16];
  __int128 v28[8];
  __int128 v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE v34[128];
  __int128 v35[8];
  uint64_t v36;
  _BYTE v37[136];
  uint64_t v38;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v34, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  sub_1BA6A09F0((uint64_t)v34, (uint64_t)v37, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  v31 = a2;
  v32 = a3;
  v33 = v11;
  sub_1BAEC8784(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v29 = a2;
  *((_QWORD *)&v29 + 1) = a3;
  v30 = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0((uint64_t)a1, (uint64_t)v35, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  if (sub_1BAB05F98((uint64_t)v35) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return (_QWORD *)swift_release();
  }
  else
  {
    sub_1BA7439D4(v35, (uint64_t)&v36);
    sub_1BA6A09F0((uint64_t)v37, (uint64_t)v28, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    v19 = sub_1BA7439D4(v28, (uint64_t)&v29);
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEE95E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0C50(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AA8);
    v20 = v38;
    v21 = sub_1BAE4E77C(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      sub_1BA7439D4(&v29, (uint64_t)v27);
      return sub_1BA6A0C50(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAEC87FC();
        sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
        sub_1BA686650();
        sub_1BB874464();
      }
      sub_1BA7439D4(&v29, (uint64_t)v27);
      sub_1BA6A0C50(v27, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
      return (_QWORD *)swift_release();
    }
  }
}

uint64_t sub_1BAD5B7E8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC8784(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE95E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4E77C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5BA18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAEC8784(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEE95E4;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4E77C(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD5BD00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC8784(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE95E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4E77C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B9560, (uint64_t)&type metadata for FormatTextNodeTransform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA6A1154();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5BF30(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[7];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v27[12];
  __int16 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int16 v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[200];
  _BYTE v46[200];
  _QWORD v47[29];

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v45, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  sub_1BA6A09F0((uint64_t)v45, (uint64_t)v47, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  v42 = a2;
  v43 = a3;
  v44 = v11;
  sub_1BAEC8784(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v29 = a2;
  *((_QWORD *)&v29 + 1) = a3;
  LOBYTE(v30) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v46, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
  if (sub_1BA92287C((uint64_t)v46) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v47, (uint64_t)v27, (unint64_t *)&qword_1ED3B6270, (uint64_t)&type metadata for FormatParagraphStyle);
    v41 = v28;
    v39 = v27[10];
    v40 = v27[11];
    v35 = v27[6];
    v36 = v27[7];
    v37 = v27[8];
    v38 = v27[9];
    v31 = v27[2];
    v32 = v27[3];
    v33 = v27[4];
    v34 = v27[5];
    v29 = v27[0];
    v30 = v27[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEE95E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    v20 = v47[28];
    v21 = sub_1BAE4E77C(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA686694();
      sub_1BB874464();
    }
    return swift_release();
  }
}

uint64_t sub_1BAD5C1D4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAEC8784(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEE95E4;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE4E77C(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD5C3B4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC8784(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE95E4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4E77C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5C5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEC8784(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (a1 == 9)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24 = (uint64_t)&v24;
  LOBYTE(v28) = a1;
  v29 = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEE95E4;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA6E8A60(a1, a2);
  v21 = v34;
  v22 = sub_1BAE4E77C(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BA6866D8();
      sub_1BB874464();
      sub_1BA5E800C(v29);
    }
    else
    {
      sub_1BA5E800C(a2);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA5E800C(a2);
}

uint64_t sub_1BAD5C7F4(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC8784(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC867C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE95E4;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4E77C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC87FC();
      sub_1BA4A2870(&qword_1ED3AE9C0, (uint64_t (*)(uint64_t))sub_1BAEC87FC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5C9BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7C27C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C0A4);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF7D24;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4E964(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatSupplementaryNodeStyle();
      sub_1BA4A2870(&qword_1ED3A8470, (uint64_t (*)(uint64_t))type metadata accessor for FormatSupplementaryNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSupplementaryNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD5CBD4(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7C27C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C0A4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 7)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF7D24;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4E964(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7C2F4();
      sub_1BA4A2870(&qword_1ED3AE9A0, (uint64_t (*)(uint64_t))sub_1BAE7C2F4, MEMORY[0x1E0DED188]);
      sub_1BA78508C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5CD9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEC0114(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0204);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEEACC4;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE4EB4C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEC018C();
      sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD5CFAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC0114(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC0204);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEACC4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4EB4C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC018C();
      sub_1BA4A2870(&qword_1ED3AE990, (uint64_t (*)(uint64_t))sub_1BAEC018C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD5D1C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA67C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEF400;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4F104(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA6840();
      sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5D3E4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA67C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEF400;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4F104(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA6840();
      sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5D614(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEA67C8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEEF400;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4F104(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEA6840();
      sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD5D848(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAEA67C8(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEEF400;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4F104(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEA6840();
      sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD5DB30(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA67C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA68B8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEF400;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4F104(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEA6840();
      sub_1BA4A2870(&qword_1EF2B30E0, (uint64_t (*)(uint64_t))sub_1BAEA6840, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5DCF8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA6BC8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEF348;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE4F2EC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA6C40();
      sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5DF18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA6BC8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEF348;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v31;
    v20 = sub_1BAE4F2EC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA6C40();
      sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, &qword_1ED3B93C8, (uint64_t)&type metadata for FormatBorder, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA64E150();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD5E148(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;

  v29 = a8;
  v30 = a7;
  v31 = a1;
  v32 = a2;
  v12 = a3;
  v13 = a6 & 1;
  v36 = a4;
  v37 = a5;
  v38 = a6 & 1;
  sub_1BAEA6BC8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v33 = a4;
  v34 = a5;
  v35 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v33, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v28[0] = v28;
  v28[1] = v8;
  v21 = a3;
  v23 = v31;
  v22 = v32;
  v33 = v31;
  v34 = v32;
  v35 = v21;
  MEMORY[0x1E0C80A78](v19);
  v27[2] = v29;
  v27[3] = v24;
  v27[4] = sub_1BAEEF348;
  v27[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  sub_1BA6E6C54(v23, v22, v21);
  v25 = v39;
  v26 = sub_1BAE4F2EC(v30, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAEA6C40();
      sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
      sub_1BA64E10C();
      sub_1BB874464();
      sub_1BA6F2B88(v33, v34, v35);
    }
    else
    {
      sub_1BA6F2B88(v31, v32, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F2B88(v31, v32, v21);
}

uint64_t sub_1BAD5E37C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  char v23;
  _QWORD v24[6];
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[10];
  unsigned __int8 v53;
  _BYTE v54[96];

  v33 = a6;
  v34 = a7;
  v35 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v52, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v12 = v52[0];
  v13 = v52[2];
  v14 = v52[3];
  v36 = v52[4];
  v31 = v52[5];
  v32 = v52[1];
  v29 = v52[7];
  v30 = v52[6];
  v27 = v52[9];
  v28 = v52[8];
  v26 = v53;
  v49 = a2;
  v50 = a3;
  v51 = v11;
  sub_1BAEA6BC8(0);
  v16 = (uint64_t *)(v7 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v38 = a2;
  v39 = a3;
  LOBYTE(v40) = v11;
  v19 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v38, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  v20 = sub_1BA6A09F0(a1, (uint64_t)v54, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  if (v54[80] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v25 = (uint64_t)&v25;
    v38 = v12;
    LODWORD(v39) = v32;
    v40 = v13;
    v41 = v14;
    v42 = v36;
    v43 = v31;
    v44 = v30;
    v45 = v29;
    v46 = v28;
    v47 = v27;
    v48 = v26;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v33;
    v24[3] = v34;
    v24[4] = sub_1BAEEF348;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA6A0BFC(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    v22 = v37;
    v23 = sub_1BAE4F2EC(v35, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAEA6C40();
      sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
      sub_1BA796C88();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
}

uint64_t sub_1BAD5E664(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA6BC8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA6A7C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEF348;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4F2EC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEA6C40();
      sub_1BA4A2870(&qword_1EF2B3128, (uint64_t (*)(uint64_t))sub_1BAEA6C40, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5E82C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[8];
  unsigned __int8 v54;
  _BYTE v55[76];
  uint64_t v56;

  v35 = a7;
  v34 = a6;
  v36 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v53, &qword_1ED3A7208, (uint64_t)&type metadata for FormatPreviewParameters);
  v40 = v53[0];
  v32 = v53[1];
  v31 = v53[2];
  v30 = v53[3];
  v29 = v53[4];
  v33 = v53[5];
  v38 = v53[6];
  v37 = v53[7];
  v39 = v54;
  v50 = a2;
  v51 = a3;
  v52 = v11;
  sub_1BAE9F09C(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v41 = a2;
  v42 = a3;
  LOBYTE(v43) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v41, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  v17 = sub_1BA6A09F0(a1, (uint64_t)v55, &qword_1ED3A7208, (uint64_t)&type metadata for FormatPreviewParameters);
  if ((v55[64] & 0xFE) == 0x7E)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  v28 = (uint64_t)&v28;
  v41 = v40;
  v42 = v32;
  v43 = v31;
  v44 = v30;
  v45 = v29;
  v46 = v33 & 1;
  v47 = v38;
  v48 = v37;
  v49 = v39;
  MEMORY[0x1E0C80A78](v17);
  v27[2] = v34;
  v27[3] = v35;
  v27[4] = sub_1BAEF087C;
  v27[5] = v16;
  swift_retain();
  sub_1BA69C808(a2, a3, v11);
  sub_1BA764394(a1, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  v19 = v56;
  v20 = sub_1BAE4F4D4(v36, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v19)
  {
    v21 = v38;
    v22 = v37;
    v23 = v39;
    if ((v20 & 1) != 0)
    {
      sub_1BAE9F114();
      sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
      sub_1BA7E41E4();
      sub_1BB874464();
      v24 = v47;
      v25 = v48;
      v26 = v49;
      sub_1BA5E800C(v41);
      sub_1BA6E6CC4(v24, v25, v26);
    }
    else
    {
      sub_1BA5E800C(v40);
      sub_1BA6E6CC4(v21, v22, v23);
    }
    return swift_release();
  }
  swift_release();
  sub_1BA5E800C(v40);
  return sub_1BA6E6CC4(v38, v37, v39);
}

uint64_t sub_1BAD5EC34(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD v29[6];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[7];
  unsigned __int8 v54;
  _BYTE v55[64];
  _BYTE v56[72];
  int v57;

  v33 = a5;
  v31 = a6;
  v32 = a7;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v53, &qword_1ED39FE68, (uint64_t)&type metadata for FormatCellSelection);
  v35 = v53[0];
  v36 = v53[1];
  v37 = v53[2];
  v38 = v53[4];
  v40 = v53[3];
  v41 = v53[5];
  v39 = v53[6];
  v57 = v54;
  v50 = a2;
  v51 = a3;
  v52 = v11;
  sub_1BAE9F09C(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v42 = a2;
  v43 = a3;
  LOBYTE(v44) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v42, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  sub_1BA6A09F0(a1, (uint64_t)v55, &qword_1ED39FE68, (uint64_t)&type metadata for FormatCellSelection);
  if (v55[56] == 255)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v17 = sub_1BA780C98((uint64_t)v55, (uint64_t)v56);
    v30 = (uint64_t)&v30;
    v42 = v35;
    v43 = v36;
    v44 = v37;
    v45 = v40;
    v46 = v38;
    v47 = v41;
    v48 = v39;
    v49 = v57;
    MEMORY[0x1E0C80A78](v17);
    v29[2] = v31;
    v29[3] = v32;
    v29[4] = sub_1BAEF087C;
    v29[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA76445C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA764498);
    v18 = v34;
    v19 = sub_1BAE4F4D4(v33, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v29);
    if (v18)
    {
      swift_release();
      return sub_1BA763860(v35, v36, v37, v40, v38, v41, v39, v57);
    }
    v21 = v36;
    v22 = v37;
    v23 = v38;
    v24 = v40;
    v25 = v41;
    v26 = v39;
    v27 = v57;
    if ((v19 & 1) != 0)
    {
      sub_1BAE9F114();
      sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
      sub_1BA7E847C();
      sub_1BB874464();
      v28 = v42;
      v21 = v43;
      v22 = v44;
      v24 = v45;
      v23 = v46;
      v25 = v47;
      v26 = v48;
      v27 = v49;
    }
    else
    {
      v28 = v35;
    }
    sub_1BA763860(v28, v21, v22, v24, v23, v25, v26, v27);
  }
  return swift_release();
}

uint64_t sub_1BAD5EF1C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatItemNodeAction();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAE9F09C(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEF087C;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE4F4D4(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAE9F114();
        sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1ED3A6838, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD5F224(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9F09C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF087C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4F4D4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9F114();
      sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

unint64_t sub_1BAD5F3EC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE9F09C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (a1 == 3)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24 = (uint64_t)&v24;
  v28 = a1;
  v29 = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF087C;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA77567C(a1);
  v21 = v34;
  v22 = sub_1BAE4F4D4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE9F114();
      sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
      sub_1BAEF07D8();
      sub_1BB874464();
      sub_1BAC687B4(v28);
    }
    else
    {
      sub_1BAC687B4(a1);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BAC687B4(a1);
}

uint64_t sub_1BAD5F60C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  __int16 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[4];
  __int16 v40;
  _BYTE v41[48];
  uint64_t v42;

  v8 = v7;
  v28 = a6;
  v29 = a7;
  v30 = a5;
  v12 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v39, &qword_1ED3AD6C0, (uint64_t)&type metadata for FormatFocusParameters);
  v27 = v39[0];
  v26 = v39[1];
  v25 = v39[2];
  v24 = v39[3];
  v13 = v40;
  v36 = a2;
  v37 = a3;
  v38 = v12;
  sub_1BAE9F09C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v31 = a2;
  v32 = a3;
  LOBYTE(v33) = v12;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v31, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F18C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v19 = sub_1BA6A09F0(a1, (uint64_t)v41, &qword_1ED3AD6C0, (uint64_t)&type metadata for FormatFocusParameters);
  if (v41[33] << 8 == 1024)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  v31 = v27;
  v32 = v26;
  v33 = v25;
  v34 = v24;
  v35 = v13 & 0xFF01;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v28;
  v23[3] = v29;
  v23[4] = sub_1BAEF087C;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v21 = v42;
  v22 = sub_1BAE4F4D4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE9F114();
      sub_1BA4A2870(&qword_1ED3AE930, (uint64_t (*)(uint64_t))sub_1BAE9F114, MEMORY[0x1E0DED188]);
      sub_1BAEF073C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD5F890(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[8];
  unsigned __int8 v54;
  _BYTE v55[76];
  uint64_t v56;

  v35 = a7;
  v34 = a6;
  v36 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v53, &qword_1ED3A7208, (uint64_t)&type metadata for FormatPreviewParameters);
  v40 = v53[0];
  v32 = v53[1];
  v31 = v53[2];
  v30 = v53[3];
  v29 = v53[4];
  v33 = v53[5];
  v38 = v53[6];
  v37 = v53[7];
  v39 = v54;
  v50 = a2;
  v51 = a3;
  v52 = v11;
  sub_1BAE9F458(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v41 = a2;
  v42 = a3;
  LOBYTE(v43) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v41, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  v17 = sub_1BA6A09F0(a1, (uint64_t)v55, &qword_1ED3A7208, (uint64_t)&type metadata for FormatPreviewParameters);
  if ((v55[64] & 0xFE) == 0x7E)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  v28 = (uint64_t)&v28;
  v41 = v40;
  v42 = v32;
  v43 = v31;
  v44 = v30;
  v45 = v29;
  v46 = v33 & 1;
  v47 = v38;
  v48 = v37;
  v49 = v39;
  MEMORY[0x1E0C80A78](v17);
  v27[2] = v34;
  v27[3] = v35;
  v27[4] = sub_1BAEF0728;
  v27[5] = v16;
  swift_retain();
  sub_1BA69C808(a2, a3, v11);
  sub_1BA764394(a1, (void (*)(void))sub_1BA5E7FF4, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6C54);
  v19 = v56;
  v20 = sub_1BAE4F6BC(v36, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v19)
  {
    v21 = v38;
    v22 = v37;
    v23 = v39;
    if ((v20 & 1) != 0)
    {
      sub_1BAE9F4D0();
      sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
      sub_1BA7E41E4();
      sub_1BB874464();
      v24 = v47;
      v25 = v48;
      v26 = v49;
      sub_1BA5E800C(v41);
      sub_1BA6E6CC4(v24, v25, v26);
    }
    else
    {
      sub_1BA5E800C(v40);
      sub_1BA6E6CC4(v21, v22, v23);
    }
    return swift_release();
  }
  swift_release();
  sub_1BA5E800C(v40);
  return sub_1BA6E6CC4(v38, v37, v39);
}

uint64_t sub_1BAD5FC98(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  _QWORD v29[6];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  _QWORD v53[7];
  unsigned __int8 v54;
  _BYTE v55[64];
  _BYTE v56[72];
  int v57;

  v33 = a5;
  v31 = a6;
  v32 = a7;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v53, &qword_1ED39FE68, (uint64_t)&type metadata for FormatCellSelection);
  v35 = v53[0];
  v36 = v53[1];
  v37 = v53[2];
  v38 = v53[4];
  v40 = v53[3];
  v41 = v53[5];
  v39 = v53[6];
  v57 = v54;
  v50 = a2;
  v51 = a3;
  v52 = v11;
  sub_1BAE9F458(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v42 = a2;
  v43 = a3;
  LOBYTE(v44) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v42, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  sub_1BA6A09F0(a1, (uint64_t)v55, &qword_1ED39FE68, (uint64_t)&type metadata for FormatCellSelection);
  if (v55[56] == 255)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v17 = sub_1BA780C98((uint64_t)v55, (uint64_t)v56);
    v30 = (uint64_t)&v30;
    v42 = v35;
    v43 = v36;
    v44 = v37;
    v45 = v40;
    v46 = v38;
    v47 = v41;
    v48 = v39;
    v49 = v57;
    MEMORY[0x1E0C80A78](v17);
    v29[2] = v31;
    v29[3] = v32;
    v29[4] = sub_1BAEF0728;
    v29[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA76445C(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA764498);
    v18 = v34;
    v19 = sub_1BAE4F6BC(v33, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v29);
    if (v18)
    {
      swift_release();
      return sub_1BA763860(v35, v36, v37, v40, v38, v41, v39, v57);
    }
    v21 = v36;
    v22 = v37;
    v23 = v38;
    v24 = v40;
    v25 = v41;
    v26 = v39;
    v27 = v57;
    if ((v19 & 1) != 0)
    {
      sub_1BAE9F4D0();
      sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
      sub_1BA7E847C();
      sub_1BB874464();
      v28 = v42;
      v21 = v43;
      v22 = v44;
      v24 = v45;
      v23 = v46;
      v25 = v47;
      v26 = v48;
      v27 = v49;
    }
    else
    {
      v28 = v35;
    }
    sub_1BA763860(v28, v21, v22, v24, v23, v25, v26, v27);
  }
  return swift_release();
}

uint64_t sub_1BAD5FF80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatItemNodeAction();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAE9F458(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, &qword_1ED3C8F38, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEF0728;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE4F6BC(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAE9F4D0();
        sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1ED3A6838, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeAction, (uint64_t)&protocol conformance descriptor for FormatItemNodeAction);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD60288(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9F458(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 2)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1 & 1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF0728;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE4F6BC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9F4D0();
      sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

unint64_t sub_1BAD60450(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE9F458(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (a1 == 3)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24 = (uint64_t)&v24;
  v28 = a1;
  v29 = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF0728;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA77567C(a1);
  v21 = v34;
  v22 = sub_1BAE4F6BC(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE9F4D0();
      sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
      sub_1BAEF07D8();
      sub_1BB874464();
      sub_1BAC687B4(v28);
    }
    else
    {
      sub_1BAC687B4(a1);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BAC687B4(a1);
}

uint64_t sub_1BAD60670(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  __int16 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[4];
  __int16 v40;
  _BYTE v41[48];
  uint64_t v42;

  v8 = v7;
  v28 = a6;
  v29 = a7;
  v30 = a5;
  v12 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v39, &qword_1ED3AD6C0, (uint64_t)&type metadata for FormatFocusParameters);
  v27 = v39[0];
  v26 = v39[1];
  v25 = v39[2];
  v24 = v39[3];
  v13 = v40;
  v36 = a2;
  v37 = a3;
  v38 = v12;
  sub_1BAE9F458(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v31 = a2;
  v32 = a3;
  LOBYTE(v33) = v12;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v31, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9F30C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v19 = sub_1BA6A09F0(a1, (uint64_t)v41, &qword_1ED3AD6C0, (uint64_t)&type metadata for FormatFocusParameters);
  if (v41[33] << 8 == 1024)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  v31 = v27;
  v32 = v26;
  v33 = v25;
  v34 = v24;
  v35 = v13 & 0xFF01;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v28;
  v23[3] = v29;
  v23[4] = sub_1BAEF0728;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v21 = v42;
  v22 = sub_1BAE4F6BC(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE9F4D0();
      sub_1BA4A2870(&qword_1ED3AE940, (uint64_t (*)(uint64_t))sub_1BAE9F4D0, MEMORY[0x1E0DED188]);
      sub_1BAEF073C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD608F4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE96B6C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE96C5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF26EC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4F8A4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE96BE4();
      sub_1BA4A2870(&qword_1ED3AE920, (uint64_t (*)(uint64_t))sub_1BAE96BE4, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatGroupNodeMaskStyle();
      sub_1BA4A2870(&qword_1ED3A73F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMaskStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD60B0C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE96B6C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE96C5C);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF26EC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE4F8A4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE96BE4();
      sub_1BA4A2870(&qword_1ED3AE920, (uint64_t (*)(uint64_t))sub_1BAE96BE4, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD60D24(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE88034(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE87EE8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF5058;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4FA8C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE880AC();
      sub_1BA4A2870(&qword_1EF2B2B28, (uint64_t (*)(uint64_t))sub_1BAE880AC, MEMORY[0x1E0DED188]);
      sub_1BA62B2B4();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD60F3C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE87D80(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE87C34);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF50BC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE4FC74(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE87DF8();
      sub_1BA4A2870(&qword_1EF2B2AE0, (uint64_t (*)(uint64_t))sub_1BAE87DF8, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD61154(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  _QWORD v25[7];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  _QWORD v36[5];
  _BYTE v37[48];
  uint64_t v38;

  v27 = a7;
  v26 = a6;
  v28 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v36, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  v12 = v36[0];
  v13 = v36[1];
  v14 = v36[2];
  v15 = v36[3];
  v33 = a2;
  v34 = a3;
  v35 = v11;
  sub_1BAE87D80(0);
  v17 = (uint64_t *)(v7 + *(int *)(v16 + 44));
  v18 = *v17;
  v19 = v17[1];
  v29 = a2;
  v30 = a3;
  LOBYTE(v31) = v11;
  v20 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v29, v20 + 16, (uint64_t (*)(_QWORD))sub_1BAE87C34);
  *(_QWORD *)(v20 + 40) = v18;
  *(_QWORD *)(v20 + 48) = v19;
  v21 = sub_1BA6A09F0(a1, (uint64_t)v37, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  if ((v37[32] & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v29 = v12;
    v30 = v13;
    v31 = v14;
    v32 = v15;
    MEMORY[0x1E0C80A78](v21);
    v25[2] = v26;
    v25[3] = v27;
    v25[4] = sub_1BAEF50BC;
    v25[5] = v20;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    v22 = v38;
    v23 = sub_1BAE4FC74(v28, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v25);
    if (!v22 && (v23 & 1) != 0)
    {
      sub_1BAE87DF8();
      sub_1BA4A2870(&qword_1EF2B2AE0, (uint64_t (*)(uint64_t))sub_1BAE87DF8, MEMORY[0x1E0DED188]);
      sub_1BA58C294();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD61394(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE87D80(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE87C34);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF50BC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E6C68(a1);
    v20 = v31;
    v21 = sub_1BAE4FC74(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE87DF8();
      sub_1BA4A2870(&qword_1EF2B2AE0, (uint64_t (*)(uint64_t))sub_1BAE87DF8, MEMORY[0x1E0DED188]);
      sub_1BA62B2B4();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD615AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE73344(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE73434);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEFAE70;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE50044(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE733BC();
      sub_1BA4A2870(&qword_1ED3AE8E0, (uint64_t (*)(uint64_t))sub_1BAE733BC, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD617BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAED0AE8(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEE7DC8;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE5022C(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD619C4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAED0AE8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE7DC8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE5022C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatJsonConfig();
      sub_1BA4A2870(&qword_1ED3A59F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonConfig, (uint64_t)&protocol conformance descriptor for FormatJsonConfig);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD61BDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAED0AE8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEE7DC8;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE5022C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD61DEC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAED0AE8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE7DC8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE5022C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatWebEmbedNodeStyle();
      sub_1BA4A2870(&qword_1ED3A72F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbedNodeStyle, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD62004(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAED0AE8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAED0BD8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEE7DC8;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE5022C(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAED0B60();
      sub_1BA4A2870(&qword_1ED3AE8D0, (uint64_t (*)(uint64_t))sub_1BAED0B60, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD621D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC3518(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC33CC);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEA194;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE509CC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC3590();
      sub_1BA4A2870(&qword_1EF2B37F8, (uint64_t (*)(uint64_t))sub_1BAEC3590, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD623F8(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC3518(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC33CC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 5)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA194;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE509CC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC3590();
      sub_1BA4A2870(&qword_1EF2B37F8, (uint64_t (*)(uint64_t))sub_1BAEC3590, MEMORY[0x1E0DED188]);
      sub_1BA5FE290();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD625C0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC37CC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3680);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 5)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA10C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE50BB4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC3844();
      sub_1BA4A2870(&qword_1EF2B3838, (uint64_t (*)(uint64_t))sub_1BAEC3844, MEMORY[0x1E0DED188]);
      sub_1BA5FE290();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD62788(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC2FF4(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2EA8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 10)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA2BC;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE50D9C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC306C();
      sub_1BA4A2870(&qword_1ED3AE890, (uint64_t (*)(uint64_t))sub_1BAEC306C, MEMORY[0x1E0DED188]);
      sub_1BA5FE24C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD62950(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC3264(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC315C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 10)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA228;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE50F84(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC32DC();
      sub_1BA4A2870(&qword_1ED3AE880, (uint64_t (*)(uint64_t))sub_1BAEC32DC, MEMORY[0x1E0DED188]);
      sub_1BA5FE24C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD62B18(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC3264(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC315C);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 5)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA228;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE50F84(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC32DC();
      sub_1BA4A2870(&qword_1ED3AE880, (uint64_t (*)(uint64_t))sub_1BAEC32DC, MEMORY[0x1E0DED188]);
      sub_1BA5FE290();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD62CE0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC2D40(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2BF4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 5)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEA344;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE5116C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC2DB8();
      sub_1BA4A2870(&qword_1EF2B37B0, (uint64_t (*)(uint64_t))sub_1BAEC2DB8, MEMORY[0x1E0DED188]);
      sub_1BA5FE290();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD62EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE943A8(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE94498);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF3154;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE51724(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE94420();
      sub_1BA4A2870(&qword_1ED3AE840, (uint64_t (*)(uint64_t))sub_1BAE94420, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD630B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int16 v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v31 = a8;
  v32 = a7;
  v40 = a2;
  v14 = a6 & 1;
  v37 = a4;
  v38 = a5;
  v39 = a6 & 1;
  sub_1BAE746D8(0);
  v16 = *(int *)(v15 + 44);
  v33 = v8;
  v34 = a4;
  v17 = (uint64_t *)(v8 + v16);
  v18 = *v17;
  v19 = v17[1];
  v35 = a5;
  LOBYTE(v36) = v14;
  v20 = swift_allocObject();
  v21 = sub_1BA5193C4((uint64_t)&v34, v20 + 16, (uint64_t (*)(_QWORD))sub_1BAE745D0);
  *(_QWORD *)(v20 + 40) = v18;
  *(_QWORD *)(v20 + 48) = v19;
  if (BYTE1(a3) == 255)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v14);
    return swift_release();
  }
  HIDWORD(v28) = BYTE1(a3);
  v29 = &v28;
  v23 = v40;
  v34 = a1;
  v35 = v40;
  v36 = a3;
  MEMORY[0x1E0C80A78](v21);
  v30 = v9;
  v27[2] = v31;
  v27[3] = v24;
  v27[4] = sub_1BAEFA868;
  v27[5] = v20;
  swift_retain();
  sub_1BA69C808(a4, a5, v14);
  v31 = a1;
  sub_1BA740E74(a1, v23, a3);
  v25 = v30;
  v26 = sub_1BAE51CDC(v32, a4, a5, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
  if (!v25)
  {
    if ((v26 & 1) != 0)
    {
      sub_1BAE74750();
      sub_1BA4A2870(&qword_1ED3AE800, (uint64_t (*)(uint64_t))sub_1BAE74750, MEMORY[0x1E0DED188]);
      sub_1BA60E000();
      sub_1BB874464();
      sub_1BA740434(v34, v35, v36, SHIBYTE(v36));
    }
    else
    {
      sub_1BA740434(v31, v40, a3, SBYTE4(v28));
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA740434(v31, v40, a3, SBYTE4(v28));
}

uint64_t sub_1BAD63304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE746D8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE745D0);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v24 = (uint64_t)&v24;
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v25;
    v23[3] = v26;
    v23[4] = sub_1BAEFA868;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    sub_1BA60DEE4(a1);
    v21 = v34;
    v22 = sub_1BAE51CDC(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v21 || (v22 & 1) == 0)
    {
      swift_release();
      swift_release();
    }
    else
    {
      sub_1BAE74750();
      sub_1BA4A2870(&qword_1ED3AE800, (uint64_t (*)(uint64_t))sub_1BAE74750, MEMORY[0x1E0DED188]);
      sub_1BA9AEB98();
      sub_1BB874464();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
}

unint64_t sub_1BAD63534(unint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  unint64_t v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE746D8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE745D0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) == 0)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  v22[1] = v22;
  v25[0] = a1;
  MEMORY[0x1E0C80A78](v18);
  v21[2] = v23;
  v21[3] = v24;
  v21[4] = sub_1BAEFA868;
  v21[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  sub_1BA895BA4(a1);
  v20 = sub_1BAE51CDC(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
  if (!v8)
  {
    if ((v20 & 1) != 0)
    {
      sub_1BAE74750();
      sub_1BA4A2870(&qword_1ED3AE800, (uint64_t (*)(uint64_t))sub_1BAE74750, MEMORY[0x1E0DED188]);
      sub_1BA9AECE8();
      sub_1BB874464();
      sub_1BA6F5D74(v25[0]);
    }
    else
    {
      sub_1BA6F5D74(a1);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA6F5D74(a1);
}

uint64_t sub_1BAD63744(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatURL();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAEB3A90(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAEB3944);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEB3B8C;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE520AC(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAEB3B08();
        sub_1BA4A2870(&qword_1EF2B3430, (uint64_t (*)(uint64_t))sub_1BAEB3B08, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD63A4C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatURL();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAEB37A4(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAEB369C);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3B9070, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEB38A0;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE52294(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAEB381C();
        sub_1BA4A2870(&qword_1ED3AE7E0, (uint64_t (*)(uint64_t))sub_1BAEB381C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatURL);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD63D54(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA1FD8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1ED0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEFB84;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE52664(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA2050();
      sub_1BA4A2870(&qword_1ED3AE7C0, (uint64_t (*)(uint64_t))sub_1BAEA2050, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD63F74(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA1FD8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1ED0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 4)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEEFB84;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE52664(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEA2050();
      sub_1BA4A2870(&qword_1ED3AE7C0, (uint64_t (*)(uint64_t))sub_1BAEA2050, MEMORY[0x1E0DED188]);
      sub_1BAEEFC38();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6413C(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAEA1FD8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1ED0);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEEFB84;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE52664(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAEA2050();
      sub_1BA4A2870(&qword_1ED3AE7C0, (uint64_t (*)(uint64_t))sub_1BAEA2050, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6436C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[6];
  _QWORD v28[2];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _QWORD v45[4];
  unsigned __int8 v46;
  _BYTE v47[40];
  _BYTE v48[40];
  uint64_t v49;

  v30 = a7;
  v29 = a6;
  v31 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v45, (unint64_t *)&unk_1ED3A77B0, (uint64_t)&type metadata for FormatMediaTimingFunction);
  v34 = v45[0];
  v36 = v45[1];
  v35 = v45[2];
  v49 = v45[3];
  v32 = v46;
  v42 = a2;
  v43 = a3;
  v44 = v11;
  sub_1BAEA1FD8(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v37 = a2;
  v38 = a3;
  LOBYTE(v39) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v37, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAEA1ED0);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  sub_1BA6A09F0(a1, (uint64_t)v47, (unint64_t *)&unk_1ED3A77B0, (uint64_t)&type metadata for FormatMediaTimingFunction);
  if (v47[32] == 255)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v17 = sub_1BAEEFB98((uint64_t)v47, (uint64_t)v48);
    v28[1] = v28;
    v37 = v34;
    v38 = v36;
    v39 = v35;
    v40 = v49;
    v18 = v32 & 1;
    v41 = v32 & 1;
    MEMORY[0x1E0C80A78](v17);
    v27[2] = v29;
    v27[3] = v30;
    v27[4] = sub_1BAEEFB84;
    v27[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA74E740(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA825F44);
    v19 = v33;
    v20 = sub_1BAE52664(v31, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v27);
    if (v19)
    {
      swift_release();
      return sub_1BA8964E0(v34, v36, v35, v49, v18);
    }
    v22 = v36;
    v23 = v35;
    v24 = v49;
    if ((v20 & 1) != 0)
    {
      sub_1BAEA2050();
      sub_1BA4A2870(&qword_1ED3AE7C0, (uint64_t (*)(uint64_t))sub_1BAEA2050, MEMORY[0x1E0DED188]);
      sub_1BAB0ED70();
      sub_1BB874464();
      v25 = v37;
      v22 = v38;
      v23 = v39;
      v24 = v40;
      v26 = v41;
    }
    else
    {
      v26 = v32 & 1;
      v25 = v34;
    }
    sub_1BA8964E0(v25, v22, v23, v24, v26);
  }
  return swift_release();
}

uint64_t sub_1BAD646C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE7C4EC(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C3E4);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF7C90;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE5284C(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE7C564();
      sub_1BA4A2870(&qword_1ED3AE7B0, (uint64_t (*)(uint64_t))sub_1BAE7C564, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD648CC(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  _QWORD v31[6];
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v34 = a7;
  v33 = a8;
  v36 = a1;
  v37 = a2;
  v12 = a6 & 1;
  v41 = a4;
  v42 = a5;
  v43 = a6 & 1;
  v13 = ~a3;
  sub_1BAE7C4EC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v38 = a4;
  v39 = a5;
  v40 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v38, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7C3E4);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v13)
  {
    v32 = (uint64_t)&v32;
    v20 = a3;
    v22 = v36;
    v21 = v37;
    v38 = v36;
    v39 = v37;
    v40 = v20;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v33;
    v31[3] = v23;
    v31[4] = sub_1BAEF7C90;
    v31[5] = v24;
    v33 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA76F5C4(v22, v21, v20);
    v25 = v35;
    v26 = sub_1BAE5284C(v34, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA76F57C(v36, v37, v20);
    }
    v28 = v37;
    if ((v26 & 1) != 0)
    {
      sub_1BAE7C564();
      sub_1BA4A2870(&qword_1ED3AE7B0, (uint64_t (*)(uint64_t))sub_1BAE7C564, MEMORY[0x1E0DED188]);
      sub_1BAC9BF34();
      sub_1BB874464();
      v29 = v38;
      v28 = v39;
      v30 = v40;
    }
    else
    {
      v29 = v36;
      v30 = v20;
    }
    sub_1BA76F57C(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD64AF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  __int16 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD v39[4];
  __int16 v40;
  _BYTE v41[48];
  uint64_t v42;

  v8 = v7;
  v28 = a6;
  v29 = a7;
  v30 = a5;
  v12 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v39, &qword_1ED3BE7E8, (uint64_t)&type metadata for FormatFontAttributes);
  v25 = v39[0];
  v24 = v39[1];
  v26 = v39[2];
  v27 = v39[3];
  v13 = v40;
  v36 = a2;
  v37 = a3;
  v38 = v12;
  sub_1BAEC3A3C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v31 = a2;
  v32 = a3;
  v33 = v12;
  v18 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v31, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEC3934);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  v19 = sub_1BA6A09F0(a1, (uint64_t)v41, &qword_1ED3BE7E8, (uint64_t)&type metadata for FormatFontAttributes);
  if (v41[33] << 8 == 1280)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v31) = v25;
  v32 = v24;
  v33 = v26 & 1;
  v34 = v27;
  v35 = v13 & 0xFF01;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v28;
  v23[3] = v29;
  v23[4] = sub_1BAEEA064;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v21 = v42;
  v22 = sub_1BAE52C1C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEC3AB4();
      sub_1BA4A2870(&qword_1ED3AE798, (uint64_t (*)(uint64_t))sub_1BAEC3AB4, MEMORY[0x1E0DED188]);
      sub_1BAEEA070();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD64D84(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC2418(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2508);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEA5DC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE52E04(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEC2490();
      sub_1BA4A2870(&qword_1ED3AE788, (uint64_t (*)(uint64_t))sub_1BAEC2490, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatSwitchNodeDefault();
      sub_1BA4A2870(&qword_1ED3A72E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSwitchNodeDefault, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeDefault);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD64F9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEC2418(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEC2508);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEEA5DC;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE52E04(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAEC2490();
      sub_1BA4A2870(&qword_1ED3AE788, (uint64_t (*)(uint64_t))sub_1BAEC2490, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD651A4(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE78D4C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78B78);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 16)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF90F4;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE531D4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE78DC4();
      sub_1BA4A2870(&qword_1EF2B2668, (uint64_t (*)(uint64_t))sub_1BAE78DC4, MEMORY[0x1E0DED188]);
      sub_1BA5516DC();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6536C(uint64_t a1, __int16 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE78D4C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE78B78);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 0x100) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v24[1] = v24;
    v29 = a1;
    LOBYTE(v30) = a2 & 1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v25;
    v23[3] = v26;
    v23[4] = sub_1BAEF90F4;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v28;
    v21 = sub_1BAE531D4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE78DC4();
      sub_1BA4A2870(&qword_1EF2B2668, (uint64_t (*)(uint64_t))sub_1BAE78DC4, MEMORY[0x1E0DED188]);
      sub_1BAEF9100();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD65548(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEB5ED8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEB5FC8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEECE6C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE535A4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEB5F50();
      sub_1BA4A2870(&qword_1ED3AE768, (uint64_t (*)(uint64_t))sub_1BAEB5F50, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, &qword_1ED3B4028, (uint64_t (*)(void))sub_1BA835D64, (uint64_t)&type metadata for FormatInteger, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA8357F4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD65768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEB5ED8(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEB5FC8);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEECE6C;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE535A4(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAEB5F50();
      sub_1BA4A2870(&qword_1ED3AE768, (uint64_t (*)(uint64_t))sub_1BAEB5F50, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD65970(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a6;
  v24 = a7;
  v25 = a8;
  v13 = a5 & 1;
  v30 = a3;
  v31 = a4;
  v32 = a5 & 1;
  sub_1BAE8EEA0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28[0] = a3;
  v28[1] = a4;
  v29 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8ED98);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF3D64;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v27;
    v21 = sub_1BAE53D44(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE8EF18();
      sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD65B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  _QWORD v24[2];
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;

  v26 = a7;
  v27 = a8;
  v28 = a6;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE8EEA0(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE8ED98);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (BYTE2(a2) == 255)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24[1] = v24;
  v29 = a1;
  LOWORD(v30) = a2;
  v25 = WORD1(a2);
  BYTE2(v30) = BYTE2(a2);
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v26;
  v23[3] = v27;
  v23[4] = sub_1BAEF3D64;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA771834(a1, a2);
  v21 = v35;
  v22 = sub_1BAE53D44(v28, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE8EF18();
      sub_1BA4A2870(&qword_1ED3AE708, (uint64_t (*)(uint64_t))sub_1BAE8EF18, MEMORY[0x1E0DED188]);
      sub_1BAA9D540();
      sub_1BB874464();
      sub_1BA77A170(v29, (unsigned __int16)v30, SBYTE2(v30), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
    else
    {
      sub_1BA77A170(a1, a2, v25, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA77A170(a1, a2, v25, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
}

uint64_t sub_1BAD65DA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE7E690(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF713C;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE53F2C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE7E708();
      sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD65FB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7E690(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF713C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE53F2C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7E708();
      sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatCustomNodeStyle();
      sub_1BA4A2870(&qword_1ED3A6AE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD661C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7E690(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7E780);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF713C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE53F2C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7E708();
      sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD663E0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE718C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEFBA08;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE542FC(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD665F0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE718C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFBA08;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE542FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA76361C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD66808(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAE718C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFBA08;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE542FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA5FB454();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD66A20(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE718C8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEFBA08;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE542FC(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD66BF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE718C8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEFBA08;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE542FC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD66E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE718C8(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE719B8);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEFBA08;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE542FC(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE71940();
      sub_1BA4A2870(&qword_1ED3AE6E8, (uint64_t (*)(uint64_t))sub_1BAE71940, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD67014(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAECBF58(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEE8FFC;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE544E4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAECBFD0();
      sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD67224(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECBF58(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8FFC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE544E4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECBFD0();
      sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatVideoNodeStyle();
      sub_1BA4A2870(&qword_1EF2B5A68, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeStyle, (uint64_t)&protocol conformance descriptor for FormatVideoNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6743C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECBF58(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8FFC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE544E4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECBFD0();
      sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD67654(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAECBF58(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEE8FFC;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE544E4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAECBFD0();
      sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD67828(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  unsigned __int8 v31;
  unsigned __int8 v32;
  _QWORD v33[6];
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 v57;
  uint64_t v58;
  uint64_t v59;
  __int16 v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  unsigned __int8 v64;
  uint64_t v65;
  uint64_t v66;
  char v67;
  _QWORD v68[12];
  unsigned __int8 v69;
  _BYTE v70[112];
  uint64_t v71;

  v35 = a6;
  v36 = a7;
  v37 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v68, &qword_1EF2B3998, (uint64_t)&type metadata for FormatVideoProperties);
  v34 = v68[0];
  v44 = v68[1];
  v45 = v68[2];
  v46 = v68[3];
  v47 = v68[4];
  v48 = v68[5];
  v49 = v68[6];
  v50 = v68[7];
  v39 = v68[8];
  v40 = v68[9];
  v41 = v68[10];
  v42 = v68[11];
  v43 = v69;
  v65 = a2;
  v66 = a3;
  v67 = v11;
  sub_1BAECBF58(0);
  v13 = *(int *)(v12 + 44);
  v38 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  v51 = a2;
  v52 = a3;
  LOBYTE(v53) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v51, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECC048);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  v18 = sub_1BA6A09F0(a1, (uint64_t)v70, &qword_1EF2B3998, (uint64_t)&type metadata for FormatVideoProperties);
  if (v70[24] == 254)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  LOBYTE(v51) = v34;
  v52 = v44;
  v53 = v45;
  v54 = v46;
  v55 = v47;
  v56 = v48;
  v57 = v49;
  v58 = v50;
  v59 = v39;
  v60 = v40;
  v61 = BYTE2(v40);
  v62 = v41;
  v63 = v42;
  v64 = v43;
  MEMORY[0x1E0C80A78](v18);
  v33[2] = v35;
  v33[3] = v36;
  v33[4] = sub_1BAEE8FFC;
  v33[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v11);
  sub_1BAECC194(a1, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C58);
  v20 = v71;
  v21 = sub_1BAE544E4(v37, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v33);
  if (!v20)
  {
    v22 = v47;
    v24 = v48;
    v23 = v49;
    v25 = v50;
    if ((v21 & 1) != 0)
    {
      sub_1BAECBFD0();
      sub_1BA4A2870(&qword_1EF2B3990, (uint64_t (*)(uint64_t))sub_1BAECBFD0, MEMORY[0x1E0DED188]);
      sub_1BAB106F0();
      sub_1BB874464();
      v71 = 0;
      v26 = v55;
      v27 = v56;
      v28 = v58;
      v29 = v59;
      v49 = v63;
      v50 = v62;
      v30 = v57;
      v31 = v60;
      v32 = v64;
      sub_1BA796C70(v52, v53, v54);
      sub_1BA796C70(v26, v27, v30);
      sub_1BA796C70(v28, v29, v31);
      sub_1BA796C70(v50, v49, v32);
    }
    else
    {
      sub_1BA796C70(v44, v45, v46);
      sub_1BA796C70(v22, v24, v23);
      sub_1BA796C70(v25, v39, v40);
      sub_1BA796C70(v41, v42, v43);
    }
    return swift_release();
  }
  swift_release();
  sub_1BA796C70(v44, v45, v46);
  sub_1BA796C70(v47, v48, v49);
  sub_1BA796C70(v50, v39, v40);
  return sub_1BA796C70(v41, v42, v43);
}

uint64_t sub_1BAD67BF0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEC915C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC9054);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 8)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEE9418;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE546CC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEC91D4();
      sub_1BA4A2870(&qword_1ED3AF3A0, (uint64_t (*)(uint64_t))sub_1BAEC91D4, MEMORY[0x1E0DED188]);
      sub_1BA552B94();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD67DB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEC915C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEC9054);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if ((~a1 & 0xF000000000000007) != 0)
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE9418;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA5E7FF4(a1);
    v20 = v31;
    v21 = sub_1BAE546CC(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEC91D4();
      sub_1BA4A2870(&qword_1ED3AF3A0, (uint64_t (*)(uint64_t))sub_1BAEC91D4, MEMORY[0x1E0DED188]);
      sub_1BA62BA1C();
      sub_1BB874464();
    }
    swift_release();
    return swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD67FD0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v24 = a7;
  v25 = a8;
  v26 = a6;
  v13 = a5 & 1;
  v29 = a3;
  v30 = a4;
  v31 = a5 & 1;
  sub_1BAEB2ED4(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v27[0] = a3;
  v27[1] = a4;
  v28 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v27, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEB2D88);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEED22C;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v32;
    v21 = sub_1BAE54E6C(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAEB2F4C();
      sub_1BA4A2870(&qword_1ED3AF360, (uint64_t (*)(uint64_t))sub_1BAEB2F4C, MEMORY[0x1E0DED188]);
      sub_1BA5ED248();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD681B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAEAD36C(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAEAD45C);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEEE294;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE55054(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAEAD3E4();
      sub_1BA4A2870(&qword_1EF2B3348, (uint64_t (*)(uint64_t))sub_1BAEAD3E4, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD683B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[6];
  _QWORD v30[2];
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v33 = a8;
  v34 = a1;
  v35 = a3;
  v13 = a7 & 1;
  v40 = a5;
  v41 = a6;
  v42 = a7 & 1;
  sub_1BAEFC6CC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v36 = a5;
  v37 = a6;
  LOBYTE(v38) = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v36, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEFC488);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if ((~a2 & 0xF000000000000007) == 0 && (a4 & 7) == 7)
  {
    swift_retain();
    sub_1BA69C808(a5, a6, v13);
    return swift_release();
  }
  v30[1] = v30;
  v32 = v8;
  v21 = a4;
  v22 = v34;
  v36 = v34;
  v37 = a2;
  v23 = a2;
  v24 = v35;
  v38 = v35;
  v39 = v21;
  MEMORY[0x1E0C80A78](v19);
  v31 = v29;
  v29[2] = v26;
  v29[3] = v25;
  v29[4] = sub_1BAEFC7C8;
  v29[5] = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  sub_1BAC68C90(v22, v23, v24, v21);
  v27 = v43;
  v28 = sub_1BAE5523C(v33, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
  if (!v27)
  {
    if ((v28 & 1) != 0)
    {
      sub_1BAEFC744();
      sub_1BA4A2870(&qword_1EF2B6120, (uint64_t (*)(uint64_t))sub_1BAEFC744, MEMORY[0x1E0DED188]);
      sub_1BA7B70C0();
      sub_1BB874464();
      sub_1BA7CCC14(v36, v37, v38, v39);
    }
    else
    {
      sub_1BA7CCC14(v34, v23, v35, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA7CCC14(v34, v23, v35, v21);
}

uint64_t sub_1BAD68618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _QWORD v26[6];
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v28 = a8;
  v29 = a7;
  v30 = a2;
  v13 = a6 & 1;
  v34 = a4;
  v35 = a5;
  v36 = a6 & 1;
  sub_1BAEFC6CC(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v31 = a4;
  v32 = a5;
  LOBYTE(v33) = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v31, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEFC488);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((~(a1 & a3) & 0x3000000000000007) == 0)
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v13);
    return swift_release();
  }
  v27[1] = v27;
  v27[2] = v8;
  v21 = a3;
  v22 = v30;
  v31 = a1;
  v32 = v30;
  v33 = v21;
  MEMORY[0x1E0C80A78](v19);
  v26[2] = v28;
  v26[3] = v23;
  v26[4] = sub_1BAEFC7C8;
  v26[5] = v18;
  swift_retain();
  sub_1BA69C808(a4, a5, v13);
  v28 = a1;
  sub_1BAC68CB0(a1, v22, v21);
  v24 = v37;
  v25 = sub_1BAE5523C(v29, a4, a5, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v26);
  if (!v24)
  {
    if ((v25 & 1) != 0)
    {
      sub_1BAEFC744();
      sub_1BA4A2870(&qword_1EF2B6120, (uint64_t (*)(uint64_t))sub_1BAEFC744, MEMORY[0x1E0DED188]);
      sub_1BA7B7104();
      sub_1BB874464();
      sub_1BA7CCC64(v31, v32, v33);
    }
    else
    {
      sub_1BA7CCC64(v28, v30, v21);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA7CCC64(v28, v30, v21);
}

uint64_t sub_1BAD68860(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEFC6CC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEFC488);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 3)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEFC7C8;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE5523C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAEFC744();
      sub_1BA4A2870(&qword_1EF2B6120, (uint64_t (*)(uint64_t))sub_1BAEFC744, MEMORY[0x1E0DED188]);
      sub_1BAEFC7F8();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD68A28(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE99FA8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF1870;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE55424(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE9A020();
      sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD68C38(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE99FA8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1870;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE55424(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9A020();
      sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatImageNodeStyle();
      sub_1BA4A2870(&qword_1ED3A6808, (uint64_t (*)(uint64_t))type metadata accessor for FormatImageNodeStyle, (uint64_t)&protocol conformance descriptor for FormatImageNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD68E50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE99FA8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF1870;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE55424(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9A020();
      sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD69068(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE99FA8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE9A098);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF1870;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE55424(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE9A020();
      sub_1BA4A2870(&qword_1ED3AF350, (uint64_t (*)(uint64_t))sub_1BAE9A020, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6923C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE96400(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF27D4;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE5560C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6944C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE96400(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF27D4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE5560C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatGroupNodeStyle();
      sub_1BA4A2870(&qword_1ED3A6800, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeStyle, (uint64_t)&protocol conformance descriptor for FormatGroupNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD69664(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE96400(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF27D4;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE5560C(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD69838(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE96400(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF27D4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE5560C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD69A50(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE96400(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE964F0);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF27D4;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE5560C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE96478();
      sub_1BA4A2870(&qword_1ED3AF340, (uint64_t (*)(uint64_t))sub_1BAE96478, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatGroupNodeMask();
      sub_1BA4A2870(&qword_1ED39FE70, (uint64_t (*)(uint64_t))type metadata accessor for FormatGroupNodeMask, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMask);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD69C68(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAECF594(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEE8500;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE55BC4(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD69E78(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECF594(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8500;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE55BC4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatViewNodeStyle();
      sub_1BA4A2870(&qword_1ED3A66F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeStyle, (uint64_t)&protocol conformance descriptor for FormatViewNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6A090(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAECF594(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEE8500;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE55BC4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6A2A8(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAECF594(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEE8500;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE55BC4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6A47C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAECF594(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECF684);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEE8500;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE55BC4(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAECF60C();
      sub_1BA4A2870(&qword_1ED3AF310, (uint64_t (*)(uint64_t))sub_1BAECF60C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD6A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAECA534(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAECA624);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEE92F0;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE55DAC(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAECA5AC();
      sub_1BA4A2870(&qword_1ED3AF300, (uint64_t (*)(uint64_t))sub_1BAECA5AC, MEMORY[0x1E0DED188]);
      sub_1BAEE9304();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD6A890(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE78274(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF94AC;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE55F94(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6AAA0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE78274(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF94AC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE55F94(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatTextNodeStyle();
      sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6ACB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE78274(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF94AC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE55F94(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatAnimationNodeStyle();
      sub_1BA4A2870(&qword_1ED3A0288, (uint64_t (*)(uint64_t))type metadata accessor for FormatAnimationNodeStyle, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6AED0(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int16 a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  _QWORD v29[6];
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v33 = a8;
  v35 = a1;
  v36 = a3;
  v13 = a7 & 1;
  v41 = a5;
  v42 = a6;
  v43 = a7 & 1;
  sub_1BAE78274(0);
  v15 = *(int *)(v14 + 44);
  v34 = v8;
  v16 = (uint64_t *)(v8 + v15);
  v18 = *v16;
  v17 = v16[1];
  v37 = a5;
  v38 = a6;
  LOBYTE(v39) = v13;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v37, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v19 + 40) = v18;
  *(_QWORD *)(v19 + 48) = v17;
  if ((unsigned __int16)(a4 >> 9) > 0x7Eu)
  {
    swift_retain();
    sub_1BA69C808(a5, a6, v13);
    return swift_release();
  }
  v30 = (uint64_t)&v30;
  v22 = v35;
  v37 = v35;
  v38 = a2;
  v23 = a4;
  v24 = v36;
  v39 = v36;
  v40 = v23;
  MEMORY[0x1E0C80A78](v20);
  v32 = v29;
  v29[2] = v26;
  v29[3] = v25;
  v29[4] = sub_1BAEF94AC;
  v29[5] = v19;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  v31 = a2;
  sub_1BA72FFC4(v22, a2, v24, v23);
  v27 = v44;
  v28 = sub_1BAE55F94(v33, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v32);
  if (!v27)
  {
    if ((v28 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BA7BA0C0();
      sub_1BB874464();
      sub_1BA54C928(v37, v38, v39, v40);
    }
    else
    {
      sub_1BA54C928(v35, v31, v36, v23);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA54C928(v35, v31, v36, v23);
}

uint64_t sub_1BAD6B118(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE78274(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 7)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF94AC;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE55F94(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BA763760();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6B2E0(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAE78274(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF94AC;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE55F94(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6B4B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE78274(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE78364);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF94AC;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE55F94(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE782EC();
      sub_1BA4A2870(&qword_1ED3AF2F0, (uint64_t (*)(uint64_t))sub_1BAE782EC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD6B6BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAEA5488(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEEF824;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE56364(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAEA5500();
      sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6B8CC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAEA5488(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEF824;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE56364(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAEA5500();
      sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatMicaNodeStyle();
      sub_1BA4A2870(&qword_1EF2B5C38, (uint64_t (*)(uint64_t))type metadata accessor for FormatMicaNodeStyle, (uint64_t)&protocol conformance descriptor for FormatMicaNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6BAE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[7];
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[144];
  uint64_t v49[18];
  _BYTE v50[160];
  uint64_t v51;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v48, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0((uint64_t)v48, (uint64_t)v50, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v45 = a2;
  v46 = a3;
  v47 = v11;
  sub_1BAEA5488(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v37 = a2;
  *((_QWORD *)&v37 + 1) = a3;
  LOBYTE(v38) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v37, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v49, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v49) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v50, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v43 = v35[6];
    v44[0] = v36[0];
    *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v36 + 9);
    v39 = v35[2];
    v40 = v35[3];
    v41 = v35[4];
    v42 = v35[5];
    v37 = v35[0];
    v38 = v35[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEEF824;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA8966F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    v20 = v51;
    v21 = sub_1BAE56364(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      return sub_1BA896610((uint64_t)&v27);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAEA5500();
        sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
        sub_1BAEEF890();
        sub_1BB874464();
      }
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      sub_1BA896610((uint64_t)&v27);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD6BDE4(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  unsigned int v12;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[7];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;

  v27 = a6;
  v25 = a7;
  v26 = a8;
  v24 = a1;
  v12 = a2;
  v13 = a5 & 1;
  v32 = a3;
  v33 = a4;
  v34 = a5 & 1;
  sub_1BAEA5488(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v17 = *v15;
  v16 = v15[1];
  v29 = a3;
  v30 = a4;
  v31 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v29, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEA5578);
  *(_QWORD *)(v18 + 40) = v17;
  *(_QWORD *)(v18 + 48) = v16;
  if (v12 > 0xFD)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v29 = v24;
  LOBYTE(v30) = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEEF824;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  v21 = v28;
  v22 = sub_1BAE56364(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAEA5500();
      sub_1BA4A2870(&qword_1EF2B3068, (uint64_t (*)(uint64_t))sub_1BAEA5500, MEMORY[0x1E0DED188]);
      sub_1BA5FB410();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6BFB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[6];
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  char v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;

  v23 = a6;
  v24 = a7;
  v30 = a5;
  v12 = a4 & 1;
  v27 = a2;
  v28 = a3;
  v29 = a4 & 1;
  sub_1BAE9E954(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v25[0] = a2;
  v25[1] = a3;
  v26 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v25, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9EA44);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1)
  {
    v22[1] = v22;
    v25[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v21[2] = v23;
    v21[3] = v24;
    v21[4] = sub_1BAEF0A88;
    v21[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = sub_1BAE5654C(v30, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v8 && (v19 & 1) != 0)
    {
      sub_1BAE9E9CC();
      sub_1BA4A2870(&qword_1ED3AF2B0, (uint64_t (*)(uint64_t))sub_1BAE9E9CC, MEMORY[0x1E0DED188]);
      sub_1BAEE7E40();
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6C1C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE98358(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE98448);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEE92F0;
    v24[5] = v19;
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    v21 = v34;
    v22 = sub_1BAE56734(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE983D0();
      sub_1BA4A2870(&qword_1ED3AF2A0, (uint64_t (*)(uint64_t))sub_1BAE983D0, MEMORY[0x1E0DED188]);
      sub_1BAEE9304();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v14);
    return swift_release();
  }
}

uint64_t sub_1BAD6C3D4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a5;
  v25 = a7;
  v12 = a4 & 1;
  v30 = a2;
  v31 = a3;
  v32 = a4 & 1;
  sub_1BAE94720(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v28[0] = a2;
  v28[1] = a3;
  v29 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v28, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE94618);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v24 = (uint64_t)&v24;
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v23[2] = a6;
    v23[3] = v25;
    v23[4] = sub_1BAEF30B4;
    v23[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v27;
    v20 = sub_1BAE5691C(v26, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE94798();
      sub_1BA4A2870(&qword_1ED3AF290, (uint64_t (*)(uint64_t))sub_1BAE94798, MEMORY[0x1E0DED188]);
      v21 = MEMORY[0x1E0DEB070];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95F8, MEMORY[0x1E0DEB070], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470(&qword_1ED39BF50, (unint64_t *)&qword_1ED3B95F8, v21, MEMORY[0x1E0DEB080]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD6C60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE94720(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE94618);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (a1)
  {
    v24 = (uint64_t)&v24;
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v25;
    v23[3] = v26;
    v23[4] = sub_1BAEF30B4;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    sub_1BA5DCC20(a1);
    v20 = v34;
    v21 = sub_1BAE5691C(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20 || (v21 & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAE94798();
      sub_1BA4A2870(&qword_1ED3AF290, (uint64_t (*)(uint64_t))sub_1BAE94798, MEMORY[0x1E0DED188]);
      sub_1BA616A40();
      sub_1BB874464();
      swift_release();
      swift_bridgeObjectRelease();
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
}

uint64_t sub_1BAD6C834(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  _QWORD v25[6];
  _QWORD v26[2];
  uint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;

  v29 = a8;
  v28 = a4;
  v27 = a3;
  v13 = a7 & 1;
  v34 = a5;
  v35 = a6;
  v36 = a7 & 1;
  sub_1BAEAAA10(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v30 = a5;
  v31 = a6;
  LOBYTE(v32) = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v30, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAEAA83C);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (a1 == 4)
  {
    swift_retain();
    sub_1BA69C808(a5, a6, v13);
    return swift_release();
  }
  v26[1] = v26;
  LOBYTE(v30) = a1;
  v31 = a2;
  v32 = v27;
  v33 = v28 & 1;
  MEMORY[0x1E0C80A78](v19);
  v25[2] = v22;
  v25[3] = v21;
  v25[4] = sub_1BAEEE844;
  v25[5] = v18;
  swift_retain();
  sub_1BA69C808(a5, a6, v13);
  v23 = v37;
  v24 = sub_1BAE56ED4(v29, a5, a6, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v25);
  if (!v23)
  {
    if ((v24 & 1) != 0)
    {
      sub_1BAEAAA88();
      sub_1BA4A2870(&qword_1ED3AF268, (uint64_t (*)(uint64_t))sub_1BAEAAA88, MEMORY[0x1E0DED188]);
      sub_1BAEEE850();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6CA3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v20[6];
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  v21 = a6;
  v22 = a4;
  v25 = a3;
  sub_1BAEE7470(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v16 = swift_allocObject();
  v17 = v16;
  *(_BYTE *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v14;
  *(_QWORD *)(v16 + 32) = v15;
  if (a2)
  {
    v23 = a1;
    v24 = a2;
    MEMORY[0x1E0C80A78](v16);
    v20[2] = a5;
    v20[3] = v21;
    v20[4] = sub_1BAEE759C;
    v20[5] = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    v18 = sub_1BAE570BC(v22, a3, (uint64_t)sub_1BAEFCC08, (uint64_t)v20);
    if (!v7 && (v18 & 1) != 0)
    {
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    return swift_release();
  }
}

uint64_t sub_1BAD6CBF4(uint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;

  v25 = a4;
  v29 = a3;
  sub_1BAEE7470(0);
  v13 = (uint64_t *)(v6 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v16 = swift_allocObject();
  v17 = v16;
  *(_BYTE *)(v16 + 16) = a3;
  *(_QWORD *)(v16 + 24) = v14;
  *(_QWORD *)(v16 + 32) = v15;
  if (a2 == 2)
  {
    swift_retain();
    return swift_release();
  }
  else
  {
    v24 = (uint64_t)&v24;
    v27 = a1;
    v28 = a2;
    MEMORY[0x1E0C80A78](v16);
    v23[2] = a5;
    v23[3] = a6;
    v23[4] = sub_1BAEE759C;
    v23[5] = v17;
    swift_retain();
    sub_1BA6BAD2C(a1, a2);
    v19 = v26;
    v20 = sub_1BAE570BC(v25, a3, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v19)
    {
      sub_1BA78DE14(a1, a2);
      return swift_release();
    }
    else
    {
      if ((v20 & 1) != 0)
      {
        sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
        sub_1BAEE7534();
        sub_1BA5BC058();
        sub_1BB874464();
        v21 = v27;
        v22 = v28;
      }
      else
      {
        v21 = a1;
        v22 = a2;
      }
      sub_1BA78DE14(v21, v22);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD6CDB4(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v28 = a4;
  v29 = a5;
  v30 = a3;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  v11 = sub_1BB86E710();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = a2;
  sub_1BAEE7470(0);
  v16 = *(int *)(v15 + 44);
  v31 = v5;
  v17 = (uint64_t *)(v5 + v16);
  v18 = *v17;
  v19 = v17[1];
  v20 = swift_allocObject();
  *(_BYTE *)(v20 + 16) = a2;
  *(_QWORD *)(v20 + 24) = v18;
  *(_QWORD *)(v20 + 32) = v19;
  sub_1BA5E01A4(a1, (uint64_t)v10, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_retain();
    swift_release();
    return sub_1BA5C699C((uint64_t)v10, (unint64_t *)&qword_1ED3C47E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0]);
  }
  else
  {
    v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    MEMORY[0x1E0C80A78](v22);
    v23 = v29;
    *(&v27 - 4) = v28;
    *(&v27 - 3) = v23;
    *(&v27 - 2) = (uint64_t)sub_1BAEE759C;
    *(&v27 - 1) = v20;
    v24 = v33;
    swift_retain();
    v25 = v32;
    v26 = sub_1BAE570BC(v30, v24, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v27 - 6));
    if (!v25 && (v26 & 1) != 0)
    {
      sub_1BA4CDF6C(0, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
      sub_1BAEE7534();
      sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], MEMORY[0x1E0DB48C0]);
      sub_1BB874464();
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return swift_release();
  }
}

uint64_t sub_1BAD6D060(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD v21[7];
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  _QWORD v40[5];
  unsigned __int8 v41;
  _BYTE v42[48];
  char v43[20];
  uint64_t v44;

  v29 = a7;
  v28 = a6;
  v30 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v40, &qword_1ED39B090, (uint64_t)&type metadata for FormatMotion);
  v27 = v40[0];
  v26 = v40[1];
  v25 = v40[2];
  v24 = v40[3];
  v23 = v40[4];
  v22 = v41;
  v37 = a2;
  v38 = a3;
  v39 = v11;
  sub_1BAEB7824(0);
  v13 = (uint64_t *)(v7 + *(int *)(v12 + 44));
  v14 = *v13;
  v15 = v13[1];
  v31 = a2;
  v32 = a3;
  LOBYTE(v33) = v11;
  v16 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v31, v16 + 16, (uint64_t (*)(_QWORD))sub_1BAEB771C);
  *(_QWORD *)(v16 + 40) = v14;
  *(_QWORD *)(v16 + 48) = v15;
  sub_1BA6A09F0(a1, (uint64_t)v42, &qword_1ED39B090, (uint64_t)&type metadata for FormatMotion);
  if (v42[40] == 255)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
  }
  else
  {
    v17 = sub_1BAEB8210((uint64_t)v42, (uint64_t)v43);
    v31 = v27;
    v32 = v26;
    v33 = v25;
    v34 = v24;
    v35 = v23;
    v36 = v22;
    MEMORY[0x1E0C80A78](v17);
    v21[2] = v28;
    v21[3] = v29;
    v21[4] = sub_1BAEEC910;
    v21[5] = v16;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    v18 = v44;
    v19 = sub_1BAE5724C(v30, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v21);
    if (!v18 && (v19 & 1) != 0)
    {
      sub_1BAEB789C();
      sub_1BA4A2870(&qword_1ED3AF248, (uint64_t (*)(uint64_t))sub_1BAEB789C, MEMORY[0x1E0DED188]);
      sub_1BAEEC5E0();
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD6D354(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  v24 = a7;
  v25 = a5;
  v12 = a4 & 1;
  v28 = a2;
  v29 = a3;
  v30 = a4 & 1;
  sub_1BAEA7F04(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v26[0] = a2;
  v26[1] = a3;
  v27 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v26, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAEA7DFC);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (a1 == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  else
  {
    v23[1] = v23;
    v26[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEEEFA8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    sub_1BA6E9BC8(a1);
    v20 = v31;
    v21 = sub_1BAE5761C(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v20 && (v21 & 1) != 0)
    {
      sub_1BAEA7F7C();
      sub_1BA4A2870(&qword_1ED3AF238, (uint64_t (*)(uint64_t))sub_1BAEA7F7C, MEMORY[0x1E0DED188]);
      sub_1BAEEF00C();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAD6D568(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  char v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;

  v30 = a6;
  v31 = a7;
  v32 = a5;
  v40 = a1;
  v10 = a4 & 1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  v14 = type metadata accessor for FormatVersionRequirement(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v29 = (uint64_t)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = a2;
  v38 = a3;
  v39 = v10;
  sub_1BAEA7F04(0);
  v18 = *(int *)(v17 + 44);
  v33 = v7;
  v19 = (uint64_t *)(v7 + v18);
  v21 = *v19;
  v20 = v19[1];
  v35[0] = a2;
  v35[1] = a3;
  v36 = v10;
  v22 = swift_allocObject();
  sub_1BA5193C4((uint64_t)v35, v22 + 16, (uint64_t (*)(_QWORD))sub_1BAEA7DFC);
  *(_QWORD *)(v22 + 40) = v21;
  *(_QWORD *)(v22 + 48) = v20;
  sub_1BA5E01A4(v40, (uint64_t)v13, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    swift_release();
    return sub_1BA5C699C((uint64_t)v13, (unint64_t *)&qword_1ED3D0B48, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    v40 = v14;
    v24 = v29;
    v25 = sub_1BA5193C4((uint64_t)v13, v29, type metadata accessor for FormatVersionRequirement);
    MEMORY[0x1E0C80A78](v25);
    v26 = v31;
    *(&v29 - 4) = v30;
    *(&v29 - 3) = v26;
    *(&v29 - 2) = (uint64_t)sub_1BAEEEFA8;
    *(&v29 - 1) = v22;
    swift_retain();
    sub_1BA69C808(a2, a3, v10);
    v27 = v34;
    v28 = sub_1BAE5761C(v32, a2, a3, v10, (uint64_t)sub_1BAEFCC08, (uint64_t)(&v29 - 6));
    if (v27)
    {
      swift_release();
      return sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    }
    else
    {
      if ((v28 & 1) != 0)
      {
        sub_1BAEA7F7C();
        sub_1BA4A2870(&qword_1ED3AF238, (uint64_t (*)(uint64_t))sub_1BAEA7F7C, MEMORY[0x1E0DED188]);
        sub_1BA4A2870(&qword_1EF2ACF88, type metadata accessor for FormatVersionRequirement, (uint64_t)&unk_1BB88EEBC);
        sub_1BB874464();
      }
      sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD6D870(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  char v22;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v25 = a7;
  v26 = a8;
  v27 = a6;
  v13 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE94F1C(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28 = a3;
  v29 = a4;
  v30 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE94DAC);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (a2 == 2)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    return swift_release();
  }
  v24 = (uint64_t)&v24;
  v28 = a1;
  v29 = a2;
  MEMORY[0x1E0C80A78](v19);
  v23[2] = v25;
  v23[3] = v26;
  v23[4] = sub_1BAEF2F38;
  v23[5] = v18;
  swift_retain();
  sub_1BA69C808(a3, a4, v13);
  sub_1BA6BAD2C(a1, a2);
  v21 = v34;
  v22 = sub_1BAE57BD4(v27, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
  if (!v21)
  {
    if ((v22 & 1) != 0)
    {
      sub_1BAE94F94();
      sub_1BA4A2870(&qword_1ED3AF1E8, (uint64_t (*)(uint64_t))sub_1BAE94F94, MEMORY[0x1E0DED188]);
      sub_1BA5BC058();
      sub_1BB874464();
      sub_1BA78DE14(v28, v29);
    }
    else
    {
      sub_1BA78DE14(a1, a2);
    }
    return swift_release();
  }
  swift_release();
  return sub_1BA78DE14(a1, a2);
}

uint64_t sub_1BAD6DA90(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9BAF0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B9E8);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF0D3C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE57FA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE9BB68();
      sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatItemNodeStyle(0);
      sub_1BA4A2870(&qword_1ED3A6620, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6DCA8(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE9BAF0(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE9B9E8);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 7)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF0D3C;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE57FA4(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE9BB68();
      sub_1BA4A2870(&qword_1ED3AF1B8, (uint64_t (*)(uint64_t))sub_1BAE9BB68, MEMORY[0x1E0DED188]);
      sub_1BA78508C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6DE70(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAE809A8(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE80A98);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEF68AC;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE58374(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAE80A20();
      sub_1BA4A2870(&qword_1ED3AF3C0, (uint64_t (*)(uint64_t))sub_1BAE80A20, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6E0A0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE809A8(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE80A98);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF68AC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_bridgeObjectRetain();
    v19 = v26;
    v20 = sub_1BAE58374(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE80A20();
      sub_1BA4A2870(&qword_1ED3AF3C0, (uint64_t (*)(uint64_t))sub_1BAE80A20, MEMORY[0x1E0DED188]);
      sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
      sub_1BA5FE1E4();
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
}

uint64_t sub_1BAD6E2C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[7];
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[144];
  uint64_t v49[18];
  _BYTE v50[160];
  uint64_t v51;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v48, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0((uint64_t)v48, (uint64_t)v50, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v45 = a2;
  v46 = a3;
  v47 = v11;
  sub_1BAE809A8(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v37 = a2;
  *((_QWORD *)&v37 + 1) = a3;
  LOBYTE(v38) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v37, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE80A98);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v49, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v49) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v50, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v43 = v35[6];
    v44[0] = v36[0];
    *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v36 + 9);
    v39 = v35[2];
    v40 = v35[3];
    v41 = v35[4];
    v42 = v35[5];
    v37 = v35[0];
    v38 = v35[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEF68AC;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA8966F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    v20 = v51;
    v21 = sub_1BAE58374(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      return sub_1BA896610((uint64_t)&v27);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAE80A20();
        sub_1BA4A2870(&qword_1ED3AF3C0, (uint64_t (*)(uint64_t))sub_1BAE80A20, MEMORY[0x1E0DED188]);
        sub_1BAEEF890();
        sub_1BB874464();
      }
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      sub_1BA896610((uint64_t)&v27);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD6E5C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[7];
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[144];
  uint64_t v49[18];
  _BYTE v50[160];
  uint64_t v51;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v48, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0((uint64_t)v48, (uint64_t)v50, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v45 = a2;
  v46 = a3;
  v47 = v11;
  sub_1BAE77100(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v37 = a2;
  *((_QWORD *)&v37 + 1) = a3;
  LOBYTE(v38) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v37, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE771F0);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v49, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v49) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v50, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v43 = v35[6];
    v44[0] = v36[0];
    *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v36 + 9);
    v39 = v35[2];
    v40 = v35[3];
    v41 = v35[4];
    v42 = v35[5];
    v37 = v35[0];
    v38 = v35[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEF9D6C;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA8966F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    v20 = v51;
    v21 = sub_1BAE5855C(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      return sub_1BA896610((uint64_t)&v27);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAE77178();
        sub_1BA4A2870(&qword_1EF2B2530, (uint64_t (*)(uint64_t))sub_1BAE77178, MEMORY[0x1E0DED188]);
        sub_1BAEEF890();
        sub_1BB874464();
      }
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      sub_1BA896610((uint64_t)&v27);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD6E8C0(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v12;
  int v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[6];
  uint64_t v32;
  int v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;

  v36 = a7;
  v35 = a8;
  v38 = a1;
  v39 = a2;
  v12 = a6 & 1;
  v43 = a4;
  v44 = a5;
  v45 = a6 & 1;
  v13 = ~a3;
  sub_1BAE80330(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v40 = a4;
  v41 = a5;
  v42 = v12;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)&v40, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE80420);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if (v13)
  {
    v34 = &v32;
    v20 = a3;
    v22 = v38;
    v21 = v39;
    v40 = v38;
    v41 = v39;
    v33 = v20 & 1;
    v42 = v20 & 1;
    MEMORY[0x1E0C80A78](v19);
    v31[2] = v35;
    v31[3] = v23;
    v31[4] = sub_1BAEF6AC8;
    v31[5] = v24;
    v35 = v24;
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
    sub_1BA796C58(v22, v21, v20);
    v25 = v37;
    v26 = sub_1BAE58744(v36, a4, a5, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v31);
    if (v25)
    {
      swift_release();
      return sub_1BA69C828(v38, v39, v33);
    }
    v28 = v39;
    if ((v26 & 1) != 0)
    {
      sub_1BAE803A8();
      sub_1BA4A2870(&qword_1EF2B2948, (uint64_t (*)(uint64_t))sub_1BAE803A8, MEMORY[0x1E0DED188]);
      sub_1BA7844F0();
      sub_1BB874464();
      v29 = v40;
      v28 = v41;
      v30 = v42;
    }
    else
    {
      v30 = v20 & 1;
      v29 = v38;
    }
    sub_1BA69C828(v29, v28, v30);
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a4, a5, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6EAF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[7];
  _OWORD v36[2];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _OWORD v44[2];
  uint64_t v45;
  uint64_t v46;
  char v47;
  _BYTE v48[144];
  uint64_t v49[18];
  _BYTE v50[160];
  uint64_t v51;

  v23 = a6;
  v24 = a7;
  v25 = a5;
  v11 = a4 & 1;
  sub_1BA6A09F0(a1, (uint64_t)v48, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  sub_1BA6A09F0((uint64_t)v48, (uint64_t)v50, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  v45 = a2;
  v46 = a3;
  v47 = v11;
  sub_1BAE80330(0);
  v13 = *(int *)(v12 + 44);
  v26 = v7;
  v14 = (uint64_t *)(v7 + v13);
  v15 = *v14;
  v16 = v14[1];
  *(_QWORD *)&v37 = a2;
  *((_QWORD *)&v37 + 1) = a3;
  LOBYTE(v38) = v11;
  v17 = swift_allocObject();
  sub_1BA5193C4((uint64_t)&v37, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE80420);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  sub_1BA6A09F0(a1, (uint64_t)v49, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
  if (sub_1BA896370(v49) == 1)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    return swift_release();
  }
  else
  {
    v19 = sub_1BA6A09F0((uint64_t)v50, (uint64_t)v35, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v43 = v35[6];
    v44[0] = v36[0];
    *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)((char *)v36 + 9);
    v39 = v35[2];
    v40 = v35[3];
    v41 = v35[4];
    v42 = v35[5];
    v37 = v35[0];
    v38 = v35[1];
    MEMORY[0x1E0C80A78](v19);
    v22[2] = v23;
    v22[3] = v24;
    v22[4] = sub_1BAEF6AC8;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v11);
    sub_1BA8966F8(a1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    v20 = v51;
    v21 = sub_1BAE58744(v25, a2, a3, v11, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (v20)
    {
      swift_release();
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      return sub_1BA896610((uint64_t)&v27);
    }
    else
    {
      if ((v21 & 1) != 0)
      {
        sub_1BAE803A8();
        sub_1BA4A2870(&qword_1EF2B2948, (uint64_t (*)(uint64_t))sub_1BAE803A8, MEMORY[0x1E0DED188]);
        sub_1BAEEF890();
        sub_1BB874464();
      }
      v33 = v43;
      v34[0] = v44[0];
      *(_OWORD *)((char *)v34 + 9) = *(_OWORD *)((char *)v44 + 9);
      v29 = v39;
      v30 = v40;
      v31 = v41;
      v32 = v42;
      v27 = v37;
      v28 = v38;
      sub_1BA896610((uint64_t)&v27);
      return swift_release();
    }
  }
}

uint64_t sub_1BAD6EDF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v24 = a7;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7CF9C(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v16 = *v14;
  v15 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7CE94);
  *(_QWORD *)(v17 + 40) = v16;
  *(_QWORD *)(v17 + 48) = v15;
  if (a1)
  {
    v23 = (uint64_t)&v23;
    v27[0] = a1;
    MEMORY[0x1E0C80A78](v18);
    v22[2] = a6;
    v22[3] = v24;
    v22[4] = sub_1BAEF7888;
    v22[5] = v17;
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    v19 = v26;
    v20 = sub_1BAE58AC0(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
    if (!v19 && (v20 & 1) != 0)
    {
      sub_1BAE7D014();
      sub_1BA4A2870(&qword_1ED3AF400, (uint64_t (*)(uint64_t))sub_1BAE7D014, MEMORY[0x1E0DED188]);
      type metadata accessor for FormatTextNodeStyle();
      sub_1BA4A2870(&qword_1ED3A66F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatTextNodeStyle, (uint64_t)&protocol conformance descriptor for FormatTextNodeStyle);
      sub_1BB874464();
    }
    swift_release();
  }
  else
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
  }
  return swift_release();
}

uint64_t sub_1BAD6F008(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7BC88(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7BAB4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 9)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF7E24;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE58CA8(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7BD00();
      sub_1BA4A2870(&qword_1EF2B27A0, (uint64_t (*)(uint64_t))sub_1BAE7BD00, MEMORY[0x1E0DED188]);
      sub_1BAEF7EEC();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6F1D0(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE7BC88(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE7BAB4);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 7)
  {
    swift_retain();
    sub_1BA69C808(a2, a3, v12);
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF7E24;
  v22[5] = v17;
  swift_retain();
  sub_1BA69C808(a2, a3, v12);
  v20 = v26;
  v21 = sub_1BAE58CA8(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE7BD00();
      sub_1BA4A2870(&qword_1EF2B27A0, (uint64_t (*)(uint64_t))sub_1BAE7BD00, MEMORY[0x1E0DED188]);
      sub_1BAEF7E9C();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6F398(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a6;
  v24 = a7;
  v25 = a8;
  v13 = a5 & 1;
  v30 = a3;
  v31 = a4;
  v32 = a5 & 1;
  sub_1BAE7BC88(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28[0] = a3;
  v28[1] = a4;
  v29 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7BAB4);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF7E24;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v27;
    v21 = sub_1BAE58CA8(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE7BD00();
      sub_1BA4A2870(&qword_1EF2B27A0, (uint64_t (*)(uint64_t))sub_1BAE7BD00, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD6F558(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  char v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  _QWORD v23[6];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];
  char v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v26 = a6;
  v24 = a7;
  v25 = a8;
  v13 = a5 & 1;
  v30 = a3;
  v31 = a4;
  v32 = a5 & 1;
  sub_1BAE7BC88(0);
  v15 = (uint64_t *)(v8 + *(int *)(v14 + 44));
  v16 = *v15;
  v17 = v15[1];
  v28[0] = a3;
  v28[1] = a4;
  v29 = v13;
  v18 = swift_allocObject();
  v19 = sub_1BA5193C4((uint64_t)v28, v18 + 16, (uint64_t (*)(_QWORD))sub_1BAE7BAB4);
  *(_QWORD *)(v18 + 40) = v16;
  *(_QWORD *)(v18 + 48) = v17;
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
  }
  else
  {
    v28[0] = a1;
    MEMORY[0x1E0C80A78](v19);
    v23[2] = v24;
    v23[3] = v25;
    v23[4] = sub_1BAEF7E24;
    v23[5] = v18;
    swift_retain();
    sub_1BA69C808(a3, a4, v13);
    v20 = v27;
    v21 = sub_1BAE58CA8(v26, a3, a4, v13, (uint64_t)sub_1BAEFCC08, (uint64_t)v23);
    if (v20)
      return swift_release();
    if ((v21 & 1) != 0)
    {
      sub_1BAE7BD00();
      sub_1BA4A2870(&qword_1EF2B27A0, (uint64_t (*)(uint64_t))sub_1BAE7BD00, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
  }
  return swift_release();
}

uint64_t sub_1BAD6F718(unsigned __int8 a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v11;
  char v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  char v21;
  _QWORD v22[6];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;

  v25 = a5;
  v23 = a6;
  v24 = a7;
  v11 = a1;
  v12 = a4 & 1;
  v29 = a2;
  v30 = a3;
  v31 = a4 & 1;
  sub_1BAE8EADC(0);
  v14 = (uint64_t *)(v7 + *(int *)(v13 + 44));
  v15 = *v14;
  v16 = v14[1];
  v27[0] = a2;
  v27[1] = a3;
  v28 = v12;
  v17 = swift_allocObject();
  v18 = sub_1BA5193C4((uint64_t)v27, v17 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E908);
  *(_QWORD *)(v17 + 40) = v15;
  *(_QWORD *)(v17 + 48) = v16;
  if (v11 == 5)
  {
    sub_1BA69C808(a2, a3, v12);
    swift_retain();
    return swift_release();
  }
  LOBYTE(v27[0]) = a1;
  MEMORY[0x1E0C80A78](v18);
  v22[2] = v23;
  v22[3] = v24;
  v22[4] = sub_1BAEF3F28;
  v22[5] = v17;
  sub_1BA69C808(a2, a3, v12);
  swift_retain();
  v20 = v26;
  v21 = sub_1BAE58E90(v25, a2, a3, v12, (uint64_t)sub_1BAEFCC08, (uint64_t)v22);
  if (!v20)
  {
    if ((v21 & 1) != 0)
    {
      sub_1BAE8EB54();
      sub_1BA4A2870(&qword_1ED3AF3D0, (uint64_t (*)(uint64_t))sub_1BAE8EB54, MEMORY[0x1E0DED188]);
      sub_1BAEF3FF4();
      sub_1BB874464();
    }
    return swift_release();
  }
  return swift_release();
}

uint64_t sub_1BAD6F8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  char v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  _QWORD v24[7];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;

  v9 = v8;
  v25 = a7;
  v26 = a8;
  v27 = a6;
  v14 = a5 & 1;
  v31 = a3;
  v32 = a4;
  v33 = a5 & 1;
  sub_1BAE8EADC(0);
  v16 = (uint64_t *)(v9 + *(int *)(v15 + 44));
  v17 = *v16;
  v18 = v16[1];
  v28 = a3;
  v29 = a4;
  v30 = v14;
  v19 = swift_allocObject();
  v20 = sub_1BA5193C4((uint64_t)&v28, v19 + 16, (uint64_t (*)(_QWORD))sub_1BAE8E908);
  *(_QWORD *)(v19 + 40) = v17;
  *(_QWORD *)(v19 + 48) = v18;
  if (a2)
  {
    v28 = a1;
    v29 = a2;
    MEMORY[0x1E0C80A78](v20);
    v24[2] = v25;
    v24[3] = v26;
    v24[4] = sub_1BAEF3F28;
    v24[5] = v19;
    sub_1BA69C808(a3, a4, v14);
    swift_bridgeObjectRetain();
    swift_retain();
    v21 = v34;
    v22 = sub_1BAE58E90(v27, a3, a4, v14, (uint64_t)sub_1BAEFCC08, (uint64_t)v24);
    if (!v21 && (v22 & 1) != 0)
    {
      sub_1BAE8EB54();
      sub_1BA4A2870(&qword_1ED3AF3D0, (uint64_t (*)(uint64_t))sub_1BAE8EB54, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA69C808(a3, a4, v14);
    swift_retain();
    return swift_release();
  }
}

uint64_t FormatVisibility.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - v13;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatVisibility, v22, v19, (uint64_t)&type metadata for FormatVisibility, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v20, (uint64_t)v17, v21, (uint64_t)&off_1E734BDC0);
  if (!(v18 >> 62))
  {
    v29 = *(_QWORD *)(v18 + 16);
    v30 = *(_QWORD *)(v18 + 24);
    v31 = qword_1ED3C6D58;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = sub_1BB86EB84();
    v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v8, v33, v32);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACFA508(2, v29, v30, (uint64_t)v8);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  if (v18 >> 62 != 1)
  {
    if (v18 == 0x8000000000000000)
    {
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v34 = sub_1BB86EB84();
      v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v14, v35, v34);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD79874(0, (uint64_t)v14);
      v36 = (uint64_t)v14;
    }
    else
    {
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v37 = sub_1BB86EB84();
      v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C08);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v11, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD79874(1, (uint64_t)v11);
      v36 = (uint64_t)v11;
    }
    sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v24 = *(_QWORD *)(v18 + 16);
  v23 = *(_QWORD *)(v18 + 24);
  sub_1BA67D3F4(v24);
  v25 = qword_1ED3C6D20;
  swift_bridgeObjectRetain();
  if (v25 != -1)
    swift_once();
  v26 = sub_1BB86EB84();
  v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476B78);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v5, v27, v26);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACFA694(3, v24, v23, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  sub_1BA6EEDB4(v24);
  return swift_bridgeObjectRelease();
}

uint64_t FormatIssueCoverNodeStyle.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA56C00C(a1);
}

uint64_t FormatIssueCoverNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  int v51;
  char *v52;
  char *v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  _BYTE v63[96];
  uint64_t v64;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v50 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v49 - v6;
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v49 - v8;
  MEMORY[0x1E0C80A78](v9);
  v57 = (char *)&v49 - v10;
  MEMORY[0x1E0C80A78](v11);
  v59 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v13);
  v61 = (char *)&v49 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - v16;
  sub_1BAE7A2F4(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(_QWORD *)(v1 + 8);
  v62 = *(_QWORD *)v1;
  v60 = *(_QWORD *)(v1 + 16);
  v58 = *(_QWORD *)(v1 + 24);
  v22 = *(_QWORD *)(v1 + 32);
  v55 = *(_QWORD *)(v1 + 40);
  v56 = v22;
  v54 = *(unsigned __int8 *)(v1 + 48);
  sub_1BA6A09F0(v1 + 56, (uint64_t)v63, &qword_1ED39B1A0, (uint64_t)&type metadata for FormatShadow);
  v51 = *(unsigned __int8 *)(v1 + 137);
  v49 = *(_QWORD *)(v1 + 144);
  v23 = a1[3];
  v24 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v23);
  v25 = sub_1BAE7A1EC();
  v26 = sub_1BA4A2870(&qword_1ED3AD958, (uint64_t (*)(uint64_t))sub_1BAE7A1EC, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, v27, v23, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, v25, (uint64_t)&type metadata for FormatVersions.StarSky, v24, (uint64_t)v20, v26, (uint64_t)&off_1E734BDC0);
  v28 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v28 != -1)
    swift_once();
  v29 = sub_1BB86EB84();
  v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C08);
  v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v31(v17, v30, v29);
  v32 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v33 = (uint64_t)v20;
  v34 = v64;
  sub_1BAD11700(v62, v21, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0);
  if (v34)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v61;
    v31(v61, v30, v29);
    swift_storeEnumTagMultiPayload();
    v36 = swift_bridgeObjectRetain();
    sub_1BAD413F4(v36, 1, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v37 = (uint64_t)v59;
    v31(v59, v30, v29);
    swift_storeEnumTagMultiPayload();
    v38 = swift_bridgeObjectRetain();
    sub_1BAD41614(v38, 2, 0, 0, v37, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v40 = (uint64_t)v57;
    v31(v57, v30, v29);
    swift_storeEnumTagMultiPayload();
    v41 = v55;
    v42 = v56;
    v64 = v32;
    v43 = v54;
    sub_1BA6E6C54(v56, v55, v54);
    sub_1BAD41844(v42, v41, v43, 3, 0, 0, v40, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CC4(v42, v41, v43);
    v44 = (uint64_t)v53;
    v31(v53, v30, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BA6A0BFC((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A48);
    sub_1BAD41A78((uint64_t)v63, 4, 0, 0, v44, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v44, type metadata accessor for FormatVersionRequirement);
    sub_1BA6A0BFC((uint64_t)v63, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA6E8A78);
    if (qword_1ED3C6D20 != -1)
      swift_once();
    v45 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476B78);
    v46 = (uint64_t)v52;
    v31(v52, v45, v29);
    swift_storeEnumTagMultiPayload();
    sub_1BAD41D60(v51, 5, 0, 0, v46, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    v47 = (uint64_t)v50;
    v31(v50, v30, v29);
    swift_storeEnumTagMultiPayload();
    v48 = swift_bridgeObjectRetain();
    sub_1BAD41F28(v48, 6, 0, 0, v47, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))sub_1BAE7A2F4);
}

uint64_t FormatProgressViewNodeStyle.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5111CC(a1);
}

uint64_t FormatShineSizer.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  _BYTE v31[24];
  uint64_t v32;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v28 = (char *)&v26 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v26 - v8;
  v30 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v14(v9, v13, v12);
  v15 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v16 = v33;
  sub_1BA69F160((uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, v10, v11);
  result = sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v16)
  {
    v33 = v15;
    v18 = a1[3];
    v27 = a1[4];
    v26 = __swift_project_boxed_opaque_existential_1(a1, v18);
    sub_1BA6F3F88();
    v20 = *(int *)(v19 + 48);
    v21 = *(int *)(v19 + 64);
    if ((v30 & 1) != 0)
    {
      v22 = (uint64_t)v29;
      v23 = &v29[v20];
      v24 = &v29[v21];
      v14(v29, v13, v12);
      if (qword_1ED3C4170 == -1)
        goto LABEL_8;
    }
    else
    {
      v22 = (uint64_t)v28;
      v23 = &v28[v20];
      v24 = &v28[v21];
      v14(v28, v13, v12);
      if (qword_1ED3C4170 == -1)
      {
LABEL_8:
        v25 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476998);
        v14(v23, v25, v12);
        *(_QWORD *)v24 = 0;
        *((_QWORD *)v24 + 1) = 0;
        swift_storeEnumTagMultiPayload();
        sub_1BA69F160(v22, (uint64_t)sub_1BA90CF04, 0, v18, v27);
        sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
        __swift_project_boxed_opaque_existential_1(a1, a1[3]);
        sub_1BB8746B0();
        __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v31, v32);
        sub_1BB8743E0();
        swift_bridgeObjectRelease();
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      }
    }
    swift_once();
    goto LABEL_8;
  }
  return result;
}

uint64_t FormatMediaTimingFunction.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v16;
      *(_QWORD *)(v21 + 16) = &unk_1E7268B40;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7AB24();
  v24 = 0uLL;
  sub_1BB8740D4();
  v17 = v23;
  if ((v23 & 1) != 0)
  {
    v23 = xmmword_1BB87FC90;
    sub_1BAE7AB68();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v19 = v24;
    v18 = v25;
  }
  else
  {
    sub_1BA4CDF6C(0, &qword_1EF2B2720, (uint64_t (*)(void))sub_1BAE7ABAC, (uint64_t)&type metadata for FormatMediaTimingFunctionName, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    v24 = xmmword_1BB87FC90;
    sub_1BAE7ABF0();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = 0uLL;
    v19 = v23;
  }
  *(_OWORD *)v12 = v19;
  *(_OWORD *)(v12 + 16) = v18;
  *(_BYTE *)(v12 + 32) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatMediaTimingFunction.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v26 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)v1;
  v13 = *(_QWORD *)(v1 + 16);
  v26 = *(_QWORD *)(v1 + 8);
  v27 = v12;
  v14 = *(_QWORD *)(v1 + 24);
  v15 = *(_BYTE *)(v1 + 32);
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatMediaTimingFunction, v19, v16, (uint64_t)&type metadata for FormatMediaTimingFunction, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v17, (uint64_t)v11, v18, (uint64_t)&off_1E734BDC0);
  if ((v15 & 1) != 0)
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE5DF4(1, v27, v26, v13, v14, (uint64_t)v5);
    v22 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v23 = sub_1BB86EB84();
    v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE5C68(0, v27, (uint64_t)v8);
    v22 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatVideoProperties.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 v30;
  __int128 v31;
  char v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  _QWORD *v48;
  _BYTE *v49;
  __int128 v50;
  char v51;
  __int128 v52;
  unsigned __int8 v53;

  v3 = v2;
  v49 = a2;
  sub_1BAE7AC58();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7ACD0();
  sub_1BA4A2870(&qword_1ED3AD908, (uint64_t (*)(uint64_t))sub_1BAE7ACD0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = a1[3];
  v48 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v10 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = v12;
      v20 = *((_QWORD *)v17 - 2);
      v21 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v22 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v22);
      *(&v37 - 4) = (uint64_t)&_s10CodingKeysON_208;
      *(&v37 - 3) = sub_1BAE7AD50();
      *(&v37 - 2) = sub_1BAE7AD94();
      *(&v37 - 1) = sub_1BAE7ADD8();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E72524C0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v20;
      *(_QWORD *)(v24 + 8) = v21;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v20, v21, 1);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v13);
      a1 = v48;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7AE1C();
  v52 = 0uLL;
  v53 = 0;
  sub_1BB874068();
  v18 = v50;
  v50 = xmmword_1BB8A1A10;
  v51 = 0;
  sub_1BA7967E4();
  sub_1BB874068();
  a1 = v48;
  v26 = v52;
  v47 = v53;
  v52 = xmmword_1BB8D2D60;
  v53 = 0;
  sub_1BAE7AE60();
  sub_1BB874068();
  v46 = v26;
  v27 = v50;
  v50 = xmmword_1BB8D2D70;
  v51 = 0;
  sub_1BB874068();
  v43 = v27;
  v45 = *((_QWORD *)&v52 + 1);
  v28 = v52;
  v44 = v53;
  v50 = xmmword_1BB8D2D90;
  v51 = 0;
  sub_1BB874068();
  v42 = v28;
  v29 = *((_QWORD *)&v52 + 1);
  v40 = v52;
  v41 = v53;
  v52 = xmmword_1BB8D2D80;
  v53 = 0;
  sub_1BAE7AEA4();
  sub_1BB874068();
  v39 = v29;
  v38 = v50;
  v52 = xmmword_1BB8D2DA0;
  v53 = 0;
  sub_1BAE7AEE8();
  sub_1BB874068();
  v37 = *((_QWORD *)&v26 + 1);
  LOBYTE(v29) = v50;
  v50 = xmmword_1BB8D2DB0;
  v51 = 0;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v13);
  v30 = v53;
  v31 = v52;
  v32 = v29;
  v33 = v49;
  *v49 = v18;
  v34 = v37;
  *((_QWORD *)v33 + 1) = v46;
  *((_QWORD *)v33 + 2) = v34;
  v33[24] = v47;
  v33[25] = v43;
  v35 = v45;
  *((_QWORD *)v33 + 4) = v42;
  *((_QWORD *)v33 + 5) = v35;
  v33[48] = v44;
  v36 = v39;
  *((_QWORD *)v33 + 7) = v40;
  *((_QWORD *)v33 + 8) = v36;
  v33[72] = v41;
  v33[73] = v38;
  v33[74] = v32;
  *((_OWORD *)v33 + 5) = v31;
  v33[96] = v30;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatVideoProperties.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_BYTE *);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 v50;
  uint64_t v51;
  void (*v52)(_BYTE *, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  void (*v56)(_BYTE *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _BYTE *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 v65;
  uint64_t v66;
  _BYTE v67[4];
  int v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  int v72;
  _BYTE *v73;
  int v74;
  _BYTE *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  int v82;
  _BYTE *v83;
  int v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  void (*v88)(_BYTE *, uint64_t, uint64_t);
  uint64_t v89;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v71 = &v67[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v73 = &v67[-v6];
  MEMORY[0x1E0C80A78](v7);
  v75 = &v67[-v8];
  MEMORY[0x1E0C80A78](v9);
  v79 = &v67[-v10];
  MEMORY[0x1E0C80A78](v11);
  v83 = &v67[-v12];
  MEMORY[0x1E0C80A78](v13);
  v85 = &v67[-v14];
  MEMORY[0x1E0C80A78](v15);
  v17 = &v67[-v16];
  MEMORY[0x1E0C80A78](v18);
  v20 = &v67[-v19];
  sub_1BAE7AF2C(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = &v67[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v24 = *(_BYTE *)v1;
  v25 = *(_QWORD *)(v1 + 16);
  v86 = *(_QWORD *)(v1 + 8);
  v87 = v25;
  LODWORD(v88) = *(unsigned __int8 *)(v1 + 24);
  v84 = *(unsigned __int8 *)(v1 + 25);
  v26 = *(_QWORD *)(v1 + 40);
  v80 = *(_QWORD *)(v1 + 32);
  v81 = v26;
  v82 = *(unsigned __int8 *)(v1 + 48);
  v27 = *(_QWORD *)(v1 + 56);
  v77 = *(_QWORD *)(v1 + 64);
  v78 = v27;
  v76 = *(unsigned __int8 *)(v1 + 72);
  v74 = *(unsigned __int8 *)(v1 + 73);
  v72 = *(unsigned __int8 *)(v1 + 74);
  v28 = *(_QWORD *)(v1 + 80);
  v69 = *(_QWORD *)(v1 + 88);
  v70 = v28;
  v68 = *(unsigned __int8 *)(v1 + 96);
  v30 = a1[3];
  v29 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v30);
  v31 = sub_1BAE7ACD0();
  v32 = sub_1BA4A2870(&qword_1ED3AD908, (uint64_t (*)(uint64_t))sub_1BAE7ACD0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatVideoProperties, v33, v30, (uint64_t)&type metadata for FormatVideoProperties, v31, (uint64_t)&type metadata for FormatVersions.AzdenE, v29, (uint64_t)v23, v32, (uint64_t)&off_1E734BD20);
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v34 = sub_1BB86EB84();
  v35 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476BC0);
  v36 = *(void (**)(_BYTE *))(*(_QWORD *)(v34 - 8) + 16);
  v37 = v35;
  v36(v20);
  v38 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v39 = (uint64_t)v23;
  v40 = v89;
  sub_1BAD4B074(v24, 0, 0, 0, (uint64_t)v20, (uint64_t)sub_1BA90CF04, 0);
  if (v40)
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for FormatVersionRequirement);
    v89 = v37;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v36)(v17, v37, v34);
    swift_storeEnumTagMultiPayload();
    v42 = v86;
    v41 = v87;
    v43 = v88;
    sub_1BA796C58(v86, v87, v88);
    sub_1BAD4B23C(v42, v41, v43, 1, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v42, v41, v43);
    v45 = (uint64_t)v85;
    v46 = v89;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v36)(v85, v89, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4B46C(v84, 2, 0, 0, v45, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
    v47 = (uint64_t)v83;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v36)(v83, v46, v34);
    swift_storeEnumTagMultiPayload();
    v48 = v80;
    v49 = v81;
    v88 = (void (*)(_BYTE *, uint64_t, uint64_t))v36;
    v50 = v82;
    sub_1BA796C58(v80, v81, v82);
    sub_1BAD4B23C(v48, v49, v50, 3, 0, 0, v47, (uint64_t)sub_1BA90CF04);
    v87 = v39;
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v48, v49, v50);
    v51 = (uint64_t)v79;
    v52 = v88;
    v88(v79, v46, v34);
    v86 = v38;
    swift_storeEnumTagMultiPayload();
    v54 = v77;
    v53 = v78;
    v55 = v76;
    sub_1BA796C58(v78, v77, v76);
    sub_1BAD4B23C(v53, v54, v55, 4, 0, 0, v51, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v53, v54, v55);
    v56 = v52;
    v57 = (uint64_t)v75;
    v52(v75, v46, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4B638(v74, 5, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    v58 = (uint64_t)v73;
    v52(v73, v46, v34);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4B800(v72, 6, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    sub_1BA6F3F88();
    v60 = (uint64_t)v71;
    v61 = &v71[*(int *)(v59 + 48)];
    v62 = &v71[*(int *)(v59 + 64)];
    v52(v71, v46, v34);
    v64 = v69;
    v63 = v70;
    v65 = v68;
    sub_1BA796C58(v70, v69, v68);
    if (qword_1ED3C6D48 != -1)
      swift_once();
    v66 = __swift_project_value_buffer(v34, (uint64_t)qword_1ED476BD8);
    v56(v61, v66, v34);
    *v62 = 0;
    v62[1] = 0;
    swift_storeEnumTagMultiPayload();
    v39 = v87;
    sub_1BAD4B23C(v63, v64, v65, 7, 0, 0, v60, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v63, v64, v65);
  }
  return sub_1BA4A2E80(v39, (uint64_t (*)(_QWORD))sub_1BAE7AF2C);
}

uint64_t FormatWebEmbedNodeStyle.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5A6AF0(a1);
}

uint64_t FormatGroupBinding.URL.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE *v23;
  __int128 v24;
  char v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E7268C80;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7B970();
  v24 = 0uLL;
  sub_1BB8740D4();
  v24 = xmmword_1BB87FC90;
  if ((v25 & 1) != 0)
  {
    sub_1BA5524B8();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25 | 0x80;
  }
  else
  {
    sub_1BA82AF58();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25;
  }
  *v17 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatGroupBinding.URL.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatGroupBinding.URL, v16, v13, (uint64_t)&type metadata for FormatGroupBinding.URL, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSkyC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BC40);
  if (v12 < 0)
  {
    if (qword_1ED3C6D50 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BF0);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF72E0(1, v12 & 1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C50);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF717C(0, v12, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatPuzzleStatisticBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE7B9F8, (uint64_t)&_s4BoolO10CodingTypeON_0, (uint64_t)&unk_1E7268D20, a2);
}

void FormatPuzzleStatisticBinding.Bool.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPuzzleStatisticBinding.Bool, v14, v11, (uint64_t)&type metadata for FormatPuzzleStatisticBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.DawnburstF, v12, (uint64_t)v9, v13, (uint64_t)&off_1E734BCE0);
  __asm { BR              X9 }
}

uint64_t sub_1BAD724D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C4168 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD74F40(0, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatNumberFormat.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  unsigned __int8 v18;
  int v19;
  uint64_t v20;
  char v21;
  char v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int128 v55;
  char v56;
  int v57;
  unsigned __int8 v58;

  v3 = v2;
  v54 = a2;
  sub_1BAE7BA3C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7BAB4();
  sub_1BA4A2870(&qword_1EF2B2788, (uint64_t (*)(uint64_t))sub_1BAE7BAB4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v53 = v7;
  v10 = v54;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v6;
  v14 = v9;
  if ((v12 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v35 = *((_QWORD *)v17 - 2);
      v36 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v37 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v37);
      *((_QWORD *)&v42 - 4) = &_s10CodingKeysON_204;
      *((_QWORD *)&v42 - 3) = sub_1BAE7BB34();
      *((_QWORD *)&v42 - 2) = sub_1BAE7BB78();
      *((_QWORD *)&v42 - 1) = sub_1BAE7BBBC();
      swift_getKeyPath();
      swift_retain();
      v38 = sub_1BAE71220((uint64_t)&unk_1E7250630);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v39 = v35;
      *(_QWORD *)(v39 + 8) = v36;
      *(_QWORD *)(v39 + 16) = v38;
      *(_OWORD *)(v39 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v35, v36, 1);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v9, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7BC00();
  v55 = 0uLL;
  v56 = 0;
  sub_1BB874068();
  v18 = v58;
  v55 = xmmword_1BB8A1A10;
  v56 = 0;
  sub_1BAE7BC44();
  sub_1BB874068();
  v19 = v58;
  v55 = xmmword_1BB8D2D60;
  v56 = 0;
  v20 = sub_1BB874050();
  v22 = v21;
  v55 = xmmword_1BB8D2D70;
  v56 = 0;
  v23 = sub_1BB874050();
  v57 = v24;
  v52 = v23;
  v55 = xmmword_1BB8D2D90;
  v56 = 0;
  v25 = sub_1BB874050();
  v50 = v26;
  v51 = v25;
  v55 = xmmword_1BB8D2D80;
  v56 = 0;
  v27 = sub_1BB874050();
  v48 = v28;
  v49 = v27;
  v55 = xmmword_1BB8D2DA0;
  v56 = 0;
  v29 = sub_1BB874050();
  v46 = v30;
  v47 = v29;
  v55 = xmmword_1BB8D2DB0;
  v56 = 0;
  v31 = sub_1BB874050();
  v43 = v32;
  v44 = v31;
  v45 = v19;
  v55 = xmmword_1BB8D2DD0;
  v56 = 0;
  v33 = sub_1BB874044();
  v42 = v34;
  v41 = v33;
  (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v13);
  *(_BYTE *)v10 = v18;
  *(_BYTE *)(v10 + 1) = v45;
  *(_QWORD *)(v10 + 8) = v20;
  *(_BYTE *)(v10 + 16) = v22 & 1;
  *(_QWORD *)(v10 + 24) = v52;
  *(_BYTE *)(v10 + 32) = v57 & 1;
  *(_QWORD *)(v10 + 40) = v51;
  *(_BYTE *)(v10 + 48) = v50 & 1;
  *(_QWORD *)(v10 + 56) = v49;
  *(_BYTE *)(v10 + 64) = v48 & 1;
  *(_QWORD *)(v10 + 72) = v47;
  *(_BYTE *)(v10 + 80) = v46 & 1;
  *(_QWORD *)(v10 + 88) = v44;
  *(_BYTE *)(v10 + 96) = v43 & 1;
  *(_QWORD *)(v10 + 104) = v41;
  *(_BYTE *)(v10 + 112) = v42 & 1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatNumberFormat.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(_BYTE *);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[12];
  int v45;
  uint64_t v46;
  _BYTE *v47;
  int v48;
  uint64_t v49;
  _BYTE *v50;
  int v51;
  uint64_t v52;
  _BYTE *v53;
  int v54;
  uint64_t v55;
  _BYTE *v56;
  int v57;
  uint64_t v58;
  _BYTE *v59;
  int v60;
  uint64_t v61;
  _BYTE *v62;
  int v63;
  uint64_t v64;
  _BYTE *v65;
  int v66;
  int v67;
  uint64_t v68;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v47 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v50 = &v44[-v6];
  MEMORY[0x1E0C80A78](v7);
  v53 = &v44[-v8];
  MEMORY[0x1E0C80A78](v9);
  v56 = &v44[-v10];
  MEMORY[0x1E0C80A78](v11);
  v59 = &v44[-v12];
  MEMORY[0x1E0C80A78](v13);
  v62 = &v44[-v14];
  MEMORY[0x1E0C80A78](v15);
  v65 = &v44[-v16];
  MEMORY[0x1E0C80A78](v17);
  v19 = &v44[-v18];
  MEMORY[0x1E0C80A78](v20);
  v22 = &v44[-v21];
  sub_1BAE7BC88(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = &v44[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v26 = *v1;
  v66 = v1[1];
  v67 = v26;
  v64 = *((_QWORD *)v1 + 1);
  v63 = v1[16];
  v61 = *((_QWORD *)v1 + 3);
  v60 = v1[32];
  v58 = *((_QWORD *)v1 + 5);
  v57 = v1[48];
  v55 = *((_QWORD *)v1 + 7);
  v54 = v1[64];
  v52 = *((_QWORD *)v1 + 9);
  v51 = v1[80];
  v49 = *((_QWORD *)v1 + 11);
  v48 = v1[96];
  v46 = *((_QWORD *)v1 + 13);
  v45 = v1[112];
  v27 = a1[3];
  v28 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v27);
  v29 = sub_1BAE7BAB4();
  v30 = sub_1BA4A2870(&qword_1EF2B2788, (uint64_t (*)(uint64_t))sub_1BAE7BAB4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatNumberFormat, v31, v27, (uint64_t)&type metadata for FormatNumberFormat, v29, (uint64_t)&type metadata for FormatVersions.JazzkonG, v28, (uint64_t)v25, v30, (uint64_t)&off_1E734BD00);
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v32 = sub_1BB86EB84();
  v33 = __swift_project_value_buffer(v32, (uint64_t)qword_1ED476C38);
  v34 = *(void (**)(_BYTE *))(*(_QWORD *)(v32 - 8) + 16);
  v34(v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = (uint64_t)v25;
  v36 = v68;
  sub_1BAD6F008(v67, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (!v36)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v19, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F1D0(v66, 1, 0, 0, (uint64_t)v19, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatVersionRequirement);
    v37 = (uint64_t)v65;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v65, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F398(v64, v63, 2, 0, 0, v37, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    v38 = (uint64_t)v62;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v62, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F398(v61, v60, 3, 0, 0, v38, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    v40 = (uint64_t)v59;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v59, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F398(v58, v57, 4, 0, 0, v40, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    v41 = (uint64_t)v56;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v56, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F398(v55, v54, 5, 0, 0, v41, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    v42 = (uint64_t)v53;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v53, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F398(v52, v51, 6, 0, 0, v42, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v42, type metadata accessor for FormatVersionRequirement);
    v43 = (uint64_t)v50;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v50, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F398(v49, v48, 7, 0, 0, v43, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    v22 = v47;
    ((void (*)(_BYTE *, uint64_t, uint64_t))v34)(v47, v33, v32);
    swift_storeEnumTagMultiPayload();
    sub_1BAD6F558(v46, v45, 8, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  }
  sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BAE7BC88);
}

uint64_t FormatSizeEquation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAE7BD78();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7BDF0();
  sub_1BA4A2870(&qword_1EF2B27D0, (uint64_t (*)(uint64_t))sub_1BAE7BDF0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v19);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_203;
      *(&v25 - 3) = sub_1BAE7BE70();
      *(&v25 - 2) = sub_1BAE7BEB4();
      *(&v25 - 1) = sub_1BAE7BEF8();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E7268D70);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v16 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = v28;
  v24 = v25;
  *(_QWORD *)v25 = v16;
  *(_QWORD *)(v24 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatSizeEquation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  char *v27;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v27 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - v8;
  sub_1BAE7BF3C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v26[1] = v1[1];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE7BDF0();
  v17 = sub_1BA4A2870(&qword_1EF2B27D0, (uint64_t (*)(uint64_t))sub_1BAE7BDF0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatSizeEquation, v18, v14, (uint64_t)&type metadata for FormatSizeEquation, v16, (uint64_t)&type metadata for FormatVersions.JazzkonG, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BD00);
  v19 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C38);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1DC7C(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v27;
    v22(v27, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = swift_bridgeObjectRetain();
    sub_1BAD1DC7C(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE7BF3C);
}

uint64_t static FormatBracketDataVisualization.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BAE664C0(a1, a2) & 1;
}

uint64_t sub_1BAD739A4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEA974;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEA980();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD73AC8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB1F8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB204();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD73BEC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF580C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5818();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD73D10(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF798C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7998();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD73E34(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB248;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB254();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD73F58(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC1D4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC1E0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7407C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF771C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7728();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD741A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF6FF4;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7014();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD742B4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEEBE8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEEBF4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD743D8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEEB98;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEEBA4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD744FC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB384;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB390();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74620(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF5AB8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5AC4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74744(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFAF84;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFAF90();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74868(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF15BC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF15C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7498C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF06CC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF06D8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74AB0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE9EA8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE9EB4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74BD4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED440;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED44C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74CF8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED490;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED49C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74E1C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED3F0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED3FC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD74F40(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7F30;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7F3C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75064(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEED77C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED79C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75178(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF6F40;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6F4C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7529C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF8230;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA525C34();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD753C0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF70A8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA578794();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD754E4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFA96C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFA978();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75608(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC6A4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC6B0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7572C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF5EF0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF5EFC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75850(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEEB198;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB1B8();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75964(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEB2B4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB2C0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75A88(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEB9E8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEB9F4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75BAC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFC02C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFC038();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75CD0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF76A0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA763760();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75DF4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC230;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC23C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD75F18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEED33C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED35C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7602C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED3A0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED3AC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76150(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED2A8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED2B4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76274(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7F80;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5002B8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76398(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF28DC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF28E8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD764BC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3CC4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA52D888();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD765E0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF40EC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF40F8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76704(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF63AC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF63B8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76828(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF6318;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF6324();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7694C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF63FC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5B5B78();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76A70(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFA740;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFA74C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76B94(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB19C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFB1A8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76CB8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7C78;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAB26F48();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76DDC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE49BC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEE47D0, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE49C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD76F00(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF52F0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA7B6C28();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77024(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEE8048;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE8068();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77138(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE7F44;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE7F50();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7725C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEE7FD8;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE7FF8();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77370(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1F90;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1F9C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77494(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1EC4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1ED0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD775B8(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1CB0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1CBC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD776DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF1F2C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1F4C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD777F0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1D50;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1D5C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77914(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF1E04;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1E24();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77A28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF1DA0;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1DC0();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77B3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEE814C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE816C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77C50(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE80AC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE80B8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77D74(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF79DC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF79E8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77E98(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC968;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC974();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD77FBC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF9010;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF901C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD780E0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEE56C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE578();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78204(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEE5BC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE5C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78328(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFB378;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5D94B8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7844C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEEDAC8;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEDAE8();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78560(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEDB2C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEDB38();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78684(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF7398;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF73B8();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78798(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEDA78;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEDA84();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD788BC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEED9E4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEED9F0();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD789E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEEDB7C;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEDB9C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78AF4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3660;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF366C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78C18(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEE12C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEE138();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78D3C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE4BF0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE4BFC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78E60(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF0FE0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF0FEC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD78F84(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF77BC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF77C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD790A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF10E4;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1104();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD791BC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF7058;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF7064();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD792E0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1030;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF103C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79404(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF1080;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF10A0();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF0EA8;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF0EC8();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7962C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3478;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5ACC80();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79750(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3DF4;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3E00();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79874(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF8C80;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF8C8C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79998(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF9204;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9210();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79ABC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEE9F68;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE9F74();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79BE0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEE9F04;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE9F24();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79CF4(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFA9BC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFA9C8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79E18(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF9FD0;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF9FDC();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD79F3C(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEECA9C;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEECAA8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7A060(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _QWORD v11[6];

  sub_1BA6EE1B8(0);
  v5 = (uint64_t *)(v1 + *(int *)(v4 + 44));
  v7 = *v5;
  v6 = v5[1];
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  *(_QWORD *)(v8 + 24) = v6;
  v11[2] = sub_1BAEF1BFC;
  v11[3] = v8;
  swift_retain();
  v9 = sub_1BA6EDEF8(a1, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v11);
  if (!v2 && (v9 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1C1C();
    v11[4] = 0;
    v11[5] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7A174(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF1C60;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF1C6C();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7A298(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEEC9B8;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEC9C4();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7A3BC(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v5 = a1 & 1;
  v14 = a1 & 1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = v5;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEF3BCC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF3BD8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t sub_1BAD7A4E0(char a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _QWORD v13[7];
  char v14;

  v14 = a1;
  sub_1BA6EE1B8(0);
  v7 = (uint64_t *)(v2 + *(int *)(v6 + 44));
  v9 = *v7;
  v8 = v7[1];
  v10 = swift_allocObject();
  *(_BYTE *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = v9;
  *(_QWORD *)(v10 + 32) = v8;
  v13[2] = sub_1BAEFC0EC;
  v13[3] = v10;
  swift_retain();
  v11 = sub_1BA6EDEF8(a2, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v13);
  if (!v3 && (v11 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEFC0F8();
    v13[5] = 0;
    v13[6] = 0;
    sub_1BB874464();
  }
  return swift_release();
}

uint64_t FormatVideoPlayerOverlayContent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_BYTE *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  _BYTE v43[4];
  int v44;
  uint64_t v45;
  uint64_t v46;
  _BYTE *v47;
  uint64_t v48;
  _BYTE *v49;
  uint64_t v50;
  _BYTE *v51;
  unint64_t v52;
  _BYTE *v53;
  uint64_t v54;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v47 = &v43[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v49 = &v43[-v6];
  MEMORY[0x1E0C80A78](v7);
  v51 = &v43[-v8];
  MEMORY[0x1E0C80A78](v9);
  v53 = &v43[-v10];
  MEMORY[0x1E0C80A78](v11);
  v13 = &v43[-v12];
  sub_1BAE7C75C(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = &v43[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *(_QWORD *)v1;
  v52 = *(_QWORD *)(v1 + 8);
  v50 = *(_QWORD *)(v1 + 16);
  v48 = *(_QWORD *)(v1 + 24);
  v18 = *(_QWORD *)(v1 + 32);
  v45 = *(_QWORD *)(v1 + 40);
  v46 = v18;
  v44 = *(unsigned __int8 *)(v1 + 48);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BAE7C654();
  v22 = sub_1BA4A2870(&qword_1ED3D1360, (uint64_t (*)(uint64_t))sub_1BAE7C654, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatVideoPlayerOverlayContent, v23, v19, (uint64_t)&type metadata for FormatVideoPlayerOverlayContent, v21, (uint64_t)&type metadata for FormatVersions.Sydro, v20, (uint64_t)v16, v22, (uint64_t)&off_1E734BD40);
  v24 = qword_1ED3C6D20;
  swift_retain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476B78);
  v27 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v27(v13, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v28 = v54;
  sub_1BAD0C09C(v17, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  if (v28)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v29 = (uint64_t)v16;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v30 = (uint64_t)v53;
    v27(v53, v26, v25);
    swift_storeEnumTagMultiPayload();
    v31 = v52;
    sub_1BA738D44(v52);
    v29 = (uint64_t)v16;
    sub_1BAD0C1F8(v31, 1, 0, 0, v30, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
    sub_1BA738D54(v31);
    v32 = (uint64_t)v51;
    v27(v51, v26, v25);
    swift_storeEnumTagMultiPayload();
    v33 = swift_retain();
    sub_1BAD38090(v33, 2, 0, 0, v32, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v34 = qword_1ED3C6D50;
    v35 = v48;
    swift_retain();
    if (v34 != -1)
      swift_once();
    v36 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476BF0);
    v37 = (uint64_t)v49;
    v27(v49, v36, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BAD382A8(v35, 3, 0, 0, v37, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v38 = (uint64_t)v47;
    v27(v47, v26, v25);
    swift_storeEnumTagMultiPayload();
    v40 = v45;
    v39 = v46;
    v41 = v44;
    sub_1BA69C808(v46, v45, v44);
    sub_1BAD0C354(v39, v40, v41, 4, 0, 0, v38, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
    sub_1BA69C828(v39, v40, v41);
  }
  return sub_1BA4A2E80(v29, (uint64_t (*)(_QWORD))sub_1BAE7C75C);
}

uint64_t FormatSwitchNodeDefault.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5FCDC0(a1);
}

uint64_t static FormatSwitchNodeDefault.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_1BAE0F7BC(a1, a2, sub_1BA883A18);
}

uint64_t FormatWeatherBinding.Bool.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE7CCB4, (uint64_t)&_s4BoolO10CodingTypeON_1, (uint64_t)&unk_1E72692A8, a2);
}

uint64_t FormatWeatherBinding.Bool.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatWeatherBinding.Bool, v16, v13, (uint64_t)&type metadata for FormatWeatherBinding.Bool, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD00);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD77D74(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD77D74(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatBindingLayeredMediaExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE7CCF8, (uint64_t)&_s10CodingTypeON_148, (uint64_t)&unk_1E7269330, a2);
}

uint64_t FormatBindingLayeredMediaExpressionLogic.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingLayeredMediaExpressionLogic, v16, v13, (uint64_t)&type metadata for FormatBindingLayeredMediaExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BCC0);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D38 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BA8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73D10(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D38 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476BA8);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73D10(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatRadialGradientCircleRadius.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v20 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v20;
      *(_QWORD *)(v21 + 8) = v16;
      *(_QWORD *)(v21 + 16) = &unk_1E7269470;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v20, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7CDD8();
  v24 = 0uLL;
  sub_1BB8740D4();
  v17 = v23;
  if ((v23 & 1) != 0)
  {
    v23 = xmmword_1BB87FC90;
    sub_1BA599700();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v18 = v24;
    v19 = v25;
  }
  else
  {
    sub_1BA4CDF6C(0, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    v24 = xmmword_1BB87FC90;
    sub_1BAE72E54();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(_QWORD *)&v18 = v23;
    v19 = 0uLL;
  }
  *(_OWORD *)v12 = v18;
  *(_OWORD *)(v12 + 16) = v19;
  *(_BYTE *)(v12 + 32) = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatRadialGradientCircleRadius.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(double *)v1;
  v13 = *(double *)(v1 + 8);
  v15 = *(double *)(v1 + 16);
  v14 = *(double *)(v1 + 24);
  v16 = *(_BYTE *)(v1 + 32);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatRadialGradientCircleRadius, v20, v17, (uint64_t)&type metadata for FormatRadialGradientCircleRadius, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v18, (uint64_t)v11, v19, (uint64_t)&off_1E734BD00);
  if ((v16 & 1) != 0)
  {
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE0784(1, (uint64_t)v5, v12, v13, v15, v14);
    v23 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACE05F8(0, (uint64_t)v8, v12);
    v23 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatIssueBinding.Command.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE7D2FC, (uint64_t)&_s7CommandO10CodingTypeON, (uint64_t)&unk_1E7269510, a2);
}

void FormatIssueBinding.Command.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD v30[10];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v30[6] = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v30[5] = (char *)v30 - v7;
  MEMORY[0x1E0C80A78](v8);
  v30[4] = (char *)v30 - v9;
  MEMORY[0x1E0C80A78](v10);
  v30[3] = (char *)v30 - v11;
  MEMORY[0x1E0C80A78](v12);
  v30[2] = (char *)v30 - v13;
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v30[1] = (char *)v30 - v16;
  MEMORY[0x1E0C80A78](v17);
  v30[0] = (char *)v30 - v18;
  MEMORY[0x1E0C80A78](v19);
  MEMORY[0x1E0C80A78](v20);
  MEMORY[0x1E0C80A78](v21);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *v2;
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v28 = sub_1BA6B8518();
  v30[9] = v24;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueBinding.Command, v29, v26, (uint64_t)&type metadata for FormatIssueBinding.Command, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v27, (uint64_t)v24, v28, (uint64_t)&off_1E734BDC0);
  __asm { BR              X9 }
}

uint64_t sub_1BAD7B870()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D58 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BAD78F84(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

unint64_t FormatBindingDateTimeExpressionLogic.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = v1[1];
  v18 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingDateTimeExpressionLogic, v20, v18, (uint64_t)&type metadata for FormatBindingDateTimeExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v17, (uint64_t)v14, v19, (uint64_t)&off_1E734BDE0);
  if (v15 == 12)
  {
    if (qword_1ED3C6D88 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476C80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD7407C(1, (uint64_t)v8);
    v23 = (uint64_t)v8;
    goto LABEL_9;
  }
  if (v15 == 13)
  {
    if (qword_1ED3C6D88 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476C80);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD7407C(2, (uint64_t)v5);
    v23 = (uint64_t)v5;
LABEL_9:
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  sub_1BA739250(v16);
  if (qword_1ED3C6D88 != -1)
    swift_once();
  v27 = sub_1BB86EB84();
  v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v11, v28, v27);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACDF114(0, v15, v16, (uint64_t)v11);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BA7DE08C(v15, v16);
}

uint64_t FormatBindingDateTimeExpressionLogicCompare.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  unint64_t v25;
  char *v26;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  sub_1BAE7D548(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v25 = *(_QWORD *)(v1 + 8);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE7D440();
  v16 = sub_1BA4A2870(&qword_1ED3D1450, (uint64_t (*)(uint64_t))sub_1BAE7D440, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingDateTimeExpressionLogicCompare, v17, v13, (uint64_t)&type metadata for FormatBindingDateTimeExpressionLogicCompare, v15, (uint64_t)&type metadata for FormatVersions.Dawnburst, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BDE0);
  if (qword_1ED3C6D88 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C80);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD09154(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v22 = v25;
    sub_1BA739250(v25);
    sub_1BAD092B0(v22, 1, 0, 0, v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
    sub_1BA6F5D74(v22);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE7D548);
}

uint64_t FormatAccessibilityValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[4];

  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  v10 = a1[3];
  v20[0] = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BA650C8C();
    v20[2] = 0;
    v20[3] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7269628;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = (_QWORD *)v20[0];
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAD7C72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_BYTE **)(v3 - 104) = 19;
  JUMPOUT(0x1BAD7C704);
}

void sub_1BAD7C744()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_BYTE **)(v3 - 104) = 20;
  JUMPOUT(0x1BAD7C704);
}

void sub_1BAD7C75C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_BYTE **)(v3 - 104) = 21;
  JUMPOUT(0x1BAD7C704);
}

void sub_1BAD7C774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_BYTE **)(v3 - 104) = 22;
  JUMPOUT(0x1BAD7C704);
}

void sub_1BAD7C78C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4CDF6C(0, &qword_1ED3B3480, (uint64_t (*)(void))sub_1BAE7D638, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAE7D67C();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    **(_BYTE **)(v4 - 104) = *(_BYTE *)(v4 - 65);
    JUMPOUT(0x1BAD7C704);
  }
  JUMPOUT(0x1BAD7C618);
}

void sub_1BAD7C808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BAD7C81CLL);
}

uint64_t FormatAccessibilityValue.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char *v49;
  char *v50;
  char *v51;
  char *v52;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v49 - v7;
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v49 - v10;
  MEMORY[0x1E0C80A78](v11);
  v50 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v13);
  v49 = (char *)&v49 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v49 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v49 - v19;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *v1;
  v25 = a1[3];
  v26 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v25);
  v27 = sub_1BA6B8518();
  v52 = v23;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAccessibilityValue, v28, v25, (uint64_t)&type metadata for FormatAccessibilityValue, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v26, (uint64_t)v23, v27, (uint64_t)&off_1E734BD80);
  switch(v24)
  {
    case 18:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v29 = sub_1BB86EB84();
      v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v20, v30, v29);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v31 = (uint64_t)v52;
      sub_1BAD75CD0(0, (uint64_t)v20);
      v32 = (uint64_t)v20;
      break;
    case 19:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v35 = sub_1BB86EB84();
      v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v17, v36, v35);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v31 = (uint64_t)v52;
      sub_1BAD75CD0(1, (uint64_t)v17);
      v32 = (uint64_t)v17;
      break;
    case 20:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v37 = sub_1BB86EB84();
      v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C20);
      v39 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v49, v38, v37);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v40 = 2;
      goto LABEL_17;
    case 21:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v41 = sub_1BB86EB84();
      v42 = __swift_project_value_buffer(v41, (uint64_t)qword_1ED476C20);
      v39 = (uint64_t)v50;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(v50, v42, v41);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v40 = 3;
LABEL_17:
      v31 = (uint64_t)v52;
      sub_1BAD75CD0(v40, v39);
      v32 = v39;
      break;
    case 22:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v43 = sub_1BB86EB84();
      v44 = __swift_project_value_buffer(v43, (uint64_t)qword_1ED476C20);
      v5 = v51;
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v51, v44, v43);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v45 = 4;
      goto LABEL_24;
    case 23:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v46 = sub_1BB86EB84();
      v47 = __swift_project_value_buffer(v46, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v5, v47, v46);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v45 = 6;
LABEL_24:
      v31 = (uint64_t)v52;
      sub_1BAD75CD0(v45, (uint64_t)v5);
      v32 = (uint64_t)v5;
      break;
    default:
      if (qword_1ED3C2478 != -1)
        swift_once();
      v33 = sub_1BB86EB84();
      v34 = __swift_project_value_buffer(v33, (uint64_t)qword_1ED476C20);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v8, v34, v33);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      v31 = (uint64_t)v52;
      sub_1BACE8270(5, v24, (uint64_t)v8);
      v32 = (uint64_t)v8;
      break;
  }
  sub_1BA4A2E80(v32, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v31, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatPatternMode.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  _BYTE *v23;
  __int128 v24;
  char v25;

  v3 = v2;
  v23 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E7269808;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7D6E4();
  v24 = 0uLL;
  sub_1BB8740D4();
  if ((v25 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39F800, (uint64_t (*)(void))sub_1BA98FDF8, (uint64_t)&type metadata for FormatPatternDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    v24 = xmmword_1BB87FC90;
    sub_1BAE7D728();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25 | 0x80;
  }
  else
  {
    sub_1BA4CDF6C(0, &qword_1ED39C9C8, (uint64_t (*)(void))sub_1BAA4B038, (uint64_t)&type metadata for FormatPatternAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    v24 = xmmword_1BB87FC90;
    sub_1BAE7D790();
    sub_1BB8740D4();
    v17 = v23;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v25;
  }
  *v17 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatPatternMode.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPatternMode, v16, v13, (uint64_t)&type metadata for FormatPatternMode, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD80);
  if (v12 < 0)
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v5, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF8CA8(1, v12 & 1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C2478 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v8, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF8B1C(0, v12, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatSupplementaryNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA576A30(a1);
}

uint64_t FormatShareAttributionNodeContent.encode(to:)(_QWORD *a1)
{
  return sub_1BADE77B8(a1, (uint64_t)&type metadata for FormatShareAttributionNodeContent, (void (*)(char *))sub_1BACDF828);
}

uint64_t FormatPuzzleBinding.Action.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatPuzzleBinding.Action, v11, v8, (uint64_t)&type metadata for FormatPuzzleBinding.Action, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v9, (uint64_t)v7, v10, (uint64_t)&off_1E734BDE0);
  if (qword_1ED3C6D88 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD78684((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatBundleImageSize.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)v1;
  v34 = *(_QWORD *)(v1 + 8);
  v16 = *(unsigned __int8 *)(v1 + 16);
  v17 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBundleImageSize, v20, v17, (uint64_t)&type metadata for FormatBundleImageSize, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v18, (uint64_t)v14, v19, (uint64_t)&off_1E734BD00);
  if (!v16)
  {
    v27 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v27 != -1)
      swift_once();
    v28 = sub_1BB86EB84();
    v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF0984(0, v15, (uint64_t)v11);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    v24 = v15;
    v25 = v34;
    v26 = 0;
    goto LABEL_9;
  }
  if (v16 == 1)
  {
    v21 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v21 != -1)
      swift_once();
    v22 = sub_1BB86EB84();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BACF0984(1, v15, (uint64_t)v8);
    sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
    v24 = v15;
    v25 = v34;
    v26 = 1;
LABEL_9:
    sub_1BA76F57C(v24, v25, v26);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  if (qword_1ED3C6D60 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C38);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v5, v31, v30);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACF0B08(2, v15, v34, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatItemNodeSwipeActionStyleDimension.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  char v27;
  uint64_t v28;

  v3 = v2;
  v25 = a2;
  sub_1BAE7D9F0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7DA68();
  sub_1BA4A2870(&qword_1EF2B2830, (uint64_t (*)(uint64_t))sub_1BAE7DA68, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      v25 = v7;
      MEMORY[0x1E0C80A78](v19);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_195;
      *(&v25 - 3) = sub_1BAE7DAE8();
      *(&v25 - 2) = sub_1BAE7DB2C();
      *(&v25 - 1) = sub_1BAE7DB70();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E7269948);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  sub_1BA69C018();
  v26 = 0uLL;
  v27 = 0;
  sub_1BB8740D4();
  v16 = v28;
  v26 = xmmword_1BB8A1A10;
  v27 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v23 = v28;
  v24 = v25;
  *(_QWORD *)v25 = v16;
  *(_QWORD *)(v24 + 8) = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatItemNodeSwipeActionStyleDimension.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  _QWORD v26[2];
  char *v27;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v27 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v26 - v8;
  sub_1BAE7DBB4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v26[1] = v1[1];
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE7DA68();
  v17 = sub_1BA4A2870(&qword_1EF2B2830, (uint64_t (*)(uint64_t))sub_1BAE7DA68, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatItemNodeSwipeActionStyleDimension, v18, v14, (uint64_t)&type metadata for FormatItemNodeSwipeActionStyleDimension, v16, (uint64_t)&type metadata for FormatVersions.DawnburstC, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BCA0);
  v19 = qword_1ED3C6D00;
  swift_bridgeObjectRetain();
  if (v19 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476B48);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v9, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD096C4(v13, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v23 = (uint64_t)v27;
    v22(v27, v21, v20);
    swift_storeEnumTagMultiPayload();
    v24 = swift_bridgeObjectRetain();
    sub_1BAD096C4(v24, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE7DBB4);
}

uint64_t static FormatArticleList.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return 1;
  else
    return sub_1BB874398();
}

uint64_t static FormatStandingDataVisualization.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BAE664C0(a1, a2) & 1;
}

uint64_t static FormatLineScoreDataVisualization.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BAE66368(a1, a2) & 1;
}

uint64_t static FormatInjuryReportDataVisualization.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BAE66368(a1, a2) & 1;
}

uint64_t static FormatKeyPlayerDataVisualization.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  return sub_1BAE66368(a1, a2) & 1;
}

uint64_t FormatCustomNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BAE7DCA4(a1);
}

uint64_t FormatCustomNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  void (*v89)(char *, uint64_t, uint64_t);
  uint64_t *v90;
  char *v91;
  __int128 v92;
  char v93;
  __int128 v94;
  char v95;
  __int128 v96;
  char v97;
  char v98;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v81 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v82 = (char *)&v78 - v8;
  MEMORY[0x1E0C80A78](v9);
  v83 = (char *)&v78 - v10;
  MEMORY[0x1E0C80A78](v11);
  v84 = (char *)&v78 - v12;
  MEMORY[0x1E0C80A78](v13);
  v85 = (char *)&v78 - v14;
  MEMORY[0x1E0C80A78](v15);
  v86 = (char *)&v78 - v16;
  MEMORY[0x1E0C80A78](v17);
  v87 = (char *)&v78 - v18;
  MEMORY[0x1E0C80A78](v19);
  v88 = (char *)&v78 - v20;
  MEMORY[0x1E0C80A78](v21);
  v89 = (void (*)(char *, uint64_t, uint64_t))((char *)&v78 - v22);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v78 - v24;
  sub_1BAE7E690(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = a1[3];
  v30 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v29);
  v31 = sub_1BAE7E780();
  v32 = sub_1BA4A2870(&qword_1ED3D0C00, (uint64_t (*)(uint64_t))sub_1BAE7E780, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v33, v29, v4, v31, (uint64_t)&type metadata for FormatVersions.JazzkonG, v30, (uint64_t)v28, v32, (uint64_t)&off_1E734BD00);
  swift_beginAccess();
  v34 = v2[2];
  v35 = v2[3];
  v90 = v2;
  v36 = qword_1ED3C6D60;
  swift_bridgeObjectRetain();
  if (v36 != -1)
    swift_once();
  v37 = sub_1BB86EB84();
  v38 = __swift_project_value_buffer(v37, (uint64_t)qword_1ED476C38);
  v39 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16);
  v39(v25, v38, v37);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v91;
  sub_1BAD265E8(v34, v35, 0, 0, 0, (uint64_t)v25, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE53F2C, (uint64_t (*)(uint64_t))sub_1BAE7E708, &qword_1ED3AE6F8);
  v42 = (uint64_t)v28;
  if (v41)
  {
    sub_1BA4A2E80((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v25, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v43 = v37;
    v44 = v90;
    v46 = v90[4];
    v45 = v90[5];
    v91 = v28;
    v47 = v90[6];
    v48 = (uint64_t)v89;
    v80 = v43;
    ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t))v39)(v89, v38);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v49 = v47;
    v42 = (uint64_t)v91;
    sub_1BAD20204(v46, v45, v49, 1, 0, 0, v48, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v50 = v44[7];
    v51 = (uint64_t)v88;
    v39(v88, v38, v80);
    swift_storeEnumTagMultiPayload();
    sub_1BA71CA6C(v50);
    sub_1BAD20364(v50, 2, 0, 0, v51, (uint64_t)sub_1BA90CF04, 0);
    v52 = v44;
    v89 = v39;
    v79 = v38;
    sub_1BA4A2E80(v51, type metadata accessor for FormatVersionRequirement);
    sub_1BA719718(v50);
    v53 = v44[8];
    v54 = qword_1ED3C6D50;
    swift_retain();
    if (v54 != -1)
      swift_once();
    v55 = v80;
    v56 = __swift_project_value_buffer(v80, (uint64_t)qword_1ED476BF0);
    v57 = (uint64_t)v87;
    v58 = v89;
    v89(v87, v56, v55);
    swift_storeEnumTagMultiPayload();
    sub_1BAD65DA0(v53, 3, 0, 0, v57, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v60 = (uint64_t)v86;
    v61 = v79;
    v58(v86, v79, v55);
    swift_storeEnumTagMultiPayload();
    v62 = swift_bridgeObjectRetain();
    sub_1BAD2C4E8(v62, 4, 0, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v63 = (uint64_t)v85;
    v58(v85, v61, v55);
    swift_storeEnumTagMultiPayload();
    v64 = swift_retain();
    sub_1BAD65FB0(v64, 5, 0, 0, v63, (uint64_t)sub_1BA90CF04, 0);
    v65 = v58;
    v88 = (char *)v40;
    sub_1BA4A2E80(v63, type metadata accessor for FormatVersionRequirement);
    swift_release();
    v66 = v52[11];
    v67 = qword_1ED3C6D58;
    swift_retain();
    if (v67 != -1)
      swift_once();
    v68 = __swift_project_value_buffer(v55, (uint64_t)qword_1ED476C08);
    v69 = (uint64_t)v84;
    v65(v84, v68, v55);
    swift_storeEnumTagMultiPayload();
    sub_1BAD661C8(v66, 6, 0, 0, v69, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v69, type metadata accessor for FormatVersionRequirement);
    swift_release();
    swift_beginAccess();
    v70 = v52[12];
    v71 = (uint64_t)v83;
    v65(v83, v79, v55);
    swift_storeEnumTagMultiPayload();
    if (v70)
    {
      if ((sub_1BAE53F2C(v71, 7, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v96 = xmmword_1BB8D2DB0;
        v97 = 0;
        *(_QWORD *)&v94 = v70;
        sub_1BAE7E708();
        sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
        sub_1BB874464();
      }
      v71 = (uint64_t)v83;
    }
    sub_1BA4A2E80(v71, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v72 = v52[13];
    v73 = (uint64_t)v82;
    v65(v82, v68, v55);
    swift_storeEnumTagMultiPayload();
    if (v72 == 0x8000000000000000)
    {
      v74 = (uint64_t)v81;
    }
    else
    {
      sub_1BA67D3F4(v72);
      v77 = sub_1BAE53F2C(v73, 8, 0, 0, (uint64_t)sub_1BA90CF04, 0);
      if ((v77 & 1) != 0)
      {
        v94 = xmmword_1BB8D2DD0;
        v95 = 0;
        *(_QWORD *)&v92 = v72;
        sub_1BAE7E708();
        sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
        sub_1BA84B088();
        sub_1BB874464();
        v42 = (uint64_t)v91;
        v74 = (uint64_t)v81;
        v52 = v90;
        v73 = (uint64_t)v82;
        v65 = v89;
        v55 = v80;
      }
      else
      {
        v42 = (uint64_t)v91;
        v74 = (uint64_t)v81;
        v73 = (uint64_t)v82;
      }
    }
    sub_1BA4A2E80(v73, type metadata accessor for FormatVersionRequirement);
    sub_1BA6EEDB4(v72);
    swift_beginAccess();
    v75 = *((_BYTE *)v52 + 112);
    if (qword_1ED3C6D70 != -1)
      swift_once();
    v76 = __swift_project_value_buffer(v55, (uint64_t)qword_1ED476C50);
    v65((char *)v74, v76, v55);
    swift_storeEnumTagMultiPayload();
    if ((v75 & 1) == 0)
    {
      if ((sub_1BAE53F2C(v74, 9, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v92 = xmmword_1BB8D2DE0;
        v93 = 0;
        v98 = 0;
        sub_1BAE7E708();
        sub_1BA4A2870(&qword_1ED3AE6F8, (uint64_t (*)(uint64_t))sub_1BAE7E708, MEMORY[0x1E0DED188]);
        sub_1BB874464();
        v42 = (uint64_t)v91;
      }
      v74 = (uint64_t)v81;
    }
    sub_1BA4A2E80(v74, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v42, (uint64_t (*)(_QWORD))sub_1BAE7E690);
}

uint64_t sub_1BAD7EC84(char a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  char v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  char v18;
  char v19;

  v7 = a1 & 1;
  v19 = a1 & 1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = v7;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEEAA58;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEEAA64();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEEAAA8();
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t sub_1BAD7EDEC(char a1, uint64_t a2, __int16 a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  _QWORD v15[4];
  __int128 v16;
  uint64_t v17;
  __int16 v18;
  char v19;

  v19 = a1;
  v17 = a2;
  v18 = a3;
  sub_1BA6EE1B8(0);
  v9 = (uint64_t *)(v4 + *(int *)(v8 + 44));
  v11 = *v9;
  v10 = v9[1];
  v12 = swift_allocObject();
  *(_BYTE *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = v11;
  *(_QWORD *)(v12 + 32) = v10;
  v15[2] = sub_1BAEF92D0;
  v15[3] = v12;
  swift_retain();
  v13 = sub_1BA6EDEF8(a4, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v15);
  if (!v5 && (v13 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF92DC();
    v16 = 0uLL;
    sub_1BB874464();
    v16 = xmmword_1BB87FC90;
    sub_1BAEF9388();
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t sub_1BAD7EF54(char a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _QWORD v16[4];
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;

  v21 = a1;
  v18 = a2;
  v19 = a3;
  v20 = a4;
  sub_1BA6EE1B8(0);
  v10 = (uint64_t *)(v5 + *(int *)(v9 + 44));
  v12 = *v10;
  v11 = v10[1];
  v13 = swift_allocObject();
  *(_BYTE *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = v12;
  *(_QWORD *)(v13 + 32) = v11;
  v16[2] = sub_1BAEE80AC;
  v16[3] = v13;
  swift_retain();
  v14 = sub_1BA6EDEF8(a5, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v16);
  if (!v6 && (v14 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE80B8();
    v17 = 0uLL;
    sub_1BB874464();
    v17 = xmmword_1BB87FC90;
    sub_1BAB5130C();
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t sub_1BAD7F0BC(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF9010;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF901C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatPostPurchase();
    sub_1BA4A2870(&qword_1EF2B5BD8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchase, (uint64_t)&protocol conformance descriptor for FormatPostPurchase);
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t sub_1BAD7F248(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF9010;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEF901C();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatPurchaseLandingPage();
    sub_1BA4A2870(&qword_1EF2B5F78, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage, (uint64_t)&protocol conformance descriptor for FormatPurchaseLandingPage);
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t sub_1BAD7F3D4(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  uint64_t v16;
  char v17;

  v17 = a1;
  v16 = a2;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEF512C;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEFCBFC, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BA5261C8();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    sub_1BAEF5138();
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t sub_1BAD7F538(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  _QWORD v14[4];
  __int128 v15;
  char v16;

  v16 = a1;
  sub_1BA6EE1B8(0);
  v8 = (uint64_t *)(v3 + *(int *)(v7 + 44));
  v10 = *v8;
  v9 = v8[1];
  v11 = swift_allocObject();
  *(_BYTE *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = v10;
  *(_QWORD *)(v11 + 32) = v9;
  v14[2] = sub_1BAEE4BF0;
  v14[3] = v11;
  swift_retain();
  v12 = sub_1BA6EDEF8(a3, 0, 0, (uint64_t)sub_1BAEE47D0, (uint64_t)v14);
  if (!v4 && (v12 & 1) != 0)
  {
    sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    sub_1BA6EE264();
    sub_1BAEE4BFC();
    v15 = 0uLL;
    sub_1BB874464();
    v15 = xmmword_1BB87FC90;
    type metadata accessor for FormatURL();
    sub_1BA4A2870(&qword_1ED39BD88, (uint64_t (*)(uint64_t))type metadata accessor for FormatURL, (uint64_t)&protocol conformance descriptor for FormatURL);
    sub_1BB874458();
  }
  return swift_release();
}

uint64_t FormatNodeAccessibilityRole.Position.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char v26;

  v3 = v2;
  v25[0] = a2;
  sub_1BAE7E8CC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE7E944();
  sub_1BA4A2870(&qword_1EF2B2878, (uint64_t (*)(uint64_t))sub_1BAE7E944, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v25[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v25[0] = v13;
      MEMORY[0x1E0C80A78](v21);
      v25[-4] = &_s10CodingKeysON_193;
      v25[-3] = sub_1BAE7E9C4();
      v25[-2] = sub_1BAE7EA08();
      v25[-1] = sub_1BAE7EA4C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71130((uint64_t)&unk_1E7269AD8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25[1] = 0;
  v25[2] = 0;
  v26 = 0;
  v18 = sub_1BB8740C8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatNodeAccessibilityRole.Position.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE7EA90(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE7E944();
  v13 = sub_1BA4A2870(&qword_1EF2B2878, (uint64_t (*)(uint64_t))sub_1BAE7E944, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatNodeAccessibilityRole.Position, v14, v10, (uint64_t)&type metadata for FormatNodeAccessibilityRole.Position, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v16, v15);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0EDE0(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE7EA90);
}

uint64_t FormatIssueBinding.Color.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE7EB80, (uint64_t)&_s5ColorO10CodingTypeON, (uint64_t)&unk_1E7269B50, a2);
}

void FormatIssueBinding.Color.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD v20[6];

  v2 = v1;
  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v20[2] = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v20[1] = (char *)v20 - v7;
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v2;
  v17 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v17);
  v18 = sub_1BA6B8518();
  v20[5] = v14;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatIssueBinding.Color, v19, v17, (uint64_t)&type metadata for FormatIssueBinding.Color, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.AzdenE, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BD20);
  __asm { BR              X9 }
}

uint64_t sub_1BAD7FD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D40 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BAD791BC(0, v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatOptionsNodeStatementModifier.Integer.init(from:)(_QWORD *a1)
{
  return sub_1BA57BEB8(a1, (void (*)(uint64_t))sub_1BAE7EBC4, (uint64_t)&_s10CodingTypeON_136, (uint64_t)&unk_1E7269BA0);
}

uint64_t FormatOptionsNodeStatementModifier.Integer.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatOptionsNodeStatementModifier.Integer, v11, v8, (uint64_t)&type metadata for FormatOptionsNodeStatementModifier.Integer, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.Dawnburst, v9, (uint64_t)v7, v10, (uint64_t)&off_1E734BDE0);
  if (qword_1ED3C6D88 != -1)
    swift_once();
  v12 = sub_1BB86EB84();
  v13 = __swift_project_value_buffer(v12, (uint64_t)qword_1ED476C80);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v4, v13, v12);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD741A0((uint64_t)v4);
  sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t FormatAbsoluteURL.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)();
  uint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t, uint64_t);
  _QWORD v41[2];
  char v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;

  v2 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v2);
  v38 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v36 - v5;
  sub_1BAE7EDF0(0);
  v8 = v7;
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = type metadata accessor for FormatAbsoluteURL();
  v14 = sub_1BAE7EC80();
  v15 = sub_1BA4A2870(&qword_1ED3AD828, (uint64_t (*)(uint64_t))sub_1BAE7EC80, (uint64_t)&unk_1BB8FFC6C);
  v37 = v13;
  sub_1BA6EC1EC(v13, v16, v11, v13, v14, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v10, v15, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C20);
  v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19(v6, v18, v17);
  v20 = (uint64_t)v6;
  v21 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v43 = 0;
  v44 = 0;
  v45 = 0;
  v22 = &v10[*(int *)(v8 + 44)];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  v41[0] = 0;
  v41[1] = 0;
  v42 = 0;
  v25 = swift_allocObject();
  v26 = sub_1BA5193C4((uint64_t)v41, v25 + 16, (uint64_t (*)(_QWORD))sub_1BAE7EC80);
  *(_QWORD *)(v25 + 40) = v24;
  *(_QWORD *)(v25 + 48) = v23;
  MEMORY[0x1E0C80A78](v26);
  v36[-4] = sub_1BA90CF04;
  v36[-3] = 0;
  v34 = sub_1BAE7EEEC;
  v35 = v25;
  swift_retain();
  v46 = v20;
  v27 = v40;
  sub_1BAE2BA00(v20, 0, 0, 0, (uint64_t)sub_1BAEFCC08, (uint64_t)&v36[-6]);
  if (v27)
  {
    swift_release();
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    v36[1] = v21;
    v40 = v19;
    sub_1BAE7EE68();
    sub_1BA4A2870(&qword_1ED3AE7A8, (uint64_t (*)(uint64_t))sub_1BAE7EE68, MEMORY[0x1E0DED188]);
    sub_1BB86C67C();
    sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    v28 = v39;
    sub_1BB874464();
    swift_release();
    sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
    v30 = *(_QWORD *)(v28 + *(int *)(v37 + 20));
    v31 = qword_1ED3C6D60;
    swift_bridgeObjectRetain();
    if (v31 != -1)
      swift_once();
    v32 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C38);
    v33 = (uint64_t)v38;
    v40(v38, v32, v17);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2BE70(v30, 1, 0, 0);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE7EDF0);
}

void sub_1BAD8071C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251208;
}

uint64_t sub_1BAD8072C()
{
  sub_1BA59C79C();
  return sub_1BB874710();
}

uint64_t sub_1BAD80754()
{
  sub_1BA59C79C();
  return sub_1BB87471C();
}

uint64_t FormatAccessibilityContainer.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE7EF1C, (uint64_t)&_s10CodingTypeON_135, (uint64_t)&unk_1E726A340, a2);
}

void FormatAccessibilityContainer.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAccessibilityContainer, v14, v11, (uint64_t)&type metadata for FormatAccessibilityContainer, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonC, v12, (uint64_t)v9, v13, (uint64_t)&off_1E734BD80);
  __asm { BR              X9 }
}

uint64_t sub_1BAD80900()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C2478 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v1, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD75178(0, v1);
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void sub_1BAD80B94(char *a1)
{
  sub_1BB7F1BFC(*a1);
}

void sub_1BAD80BA0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD80BF0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD80C64()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD80CA4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD80D04()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD80D50()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD80DC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BAD80DF8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAD80E2C + 4 * byte_1BB8AE1FE[*v0]))();
}

void sub_1BAD80E2C(_QWORD *a1@<X8>)
{
  *a1 = 1953720684;
  a1[1] = 0xE400000000000000;
}

void sub_1BAD80E40(_QWORD *a1@<X8>)
{
  *a1 = 0x6B72616D646E616CLL;
  a1[1] = 0xE800000000000000;
}

void sub_1BAD80E5C(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "semanticGroup");
  *(_WORD *)(a1 + 14) = -4864;
}

uint64_t sub_1BAD80E84()
{
  sub_1BAEE2CC8();
  return sub_1BB872D60();
}

uint64_t sub_1BAD80EE0()
{
  sub_1BAEE2CC8();
  return sub_1BB872D0C();
}

uint64_t sub_1BAD80F2C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F38DC(*a1, *a2);
}

uint64_t sub_1BAD80F38()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD80FD4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD8104C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t FormatAccessibilityLayoutValue.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BAE7EFCC(a1);
}

uint64_t FormatAccessibilityLayoutValue.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  char v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t *v30;
  char *v31;

  v3 = v2;
  v4 = v1;
  v6 = *v1;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v7);
  v31 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v29 - v10;
  sub_1BAE7F328(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE7F418();
  v18 = sub_1BA4A2870(&qword_1EF2B28E0, (uint64_t (*)(uint64_t))sub_1BAE7F418, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v6, v19, v15, v6, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v14, v18, (uint64_t)&off_1E734BD80);
  v20 = v4[2];
  v21 = v4[3];
  v30 = v4;
  v22 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v22 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C20);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v25(v11, v24, v23);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0D528(v20, v21, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v26 = *((_BYTE *)v30 + 32);
    v27 = (uint64_t)v31;
    v25(v31, v24, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BAD0D680(v26, 1, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAE7F328);
}

uint64_t sub_1BAD813A0()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BAD813F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE7F6C4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD81418(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253480;
}

uint64_t sub_1BAD81428()
{
  sub_1BAE7F4DC();
  return sub_1BB874710();
}

uint64_t sub_1BAD81450()
{
  sub_1BAE7F4DC();
  return sub_1BB87471C();
}

uint64_t sub_1BAD81478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE7F80C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8149C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252690;
}

uint64_t sub_1BAD814AC()
{
  sub_1BA72E504();
  return sub_1BB874710();
}

uint64_t sub_1BAD814D4()
{
  sub_1BA72E504();
  return sub_1BB87471C();
}

void sub_1BAD814FC(char *a1)
{
  sub_1BB7F29D4(*a1);
}

void sub_1BAD81508()
{
  char *v0;

  sub_1BAB08340(0, *v0);
}

void sub_1BAD81514()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD81554()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD815DC(uint64_t a1)
{
  char *v1;

  sub_1BAB08340(a1, *v1);
}

uint64_t FormatActivityItemsBinding.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  _BYTE *v22;
  __int128 v23;
  char v24;

  v3 = v2;
  v22 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v21 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_13:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v22;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v18 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v19 = v18;
      *(_QWORD *)(v19 + 8) = v16;
      *(_QWORD *)(v19 + 16) = &unk_1E726A458;
      *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v18, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7F564();
  v23 = 0uLL;
  sub_1BB8740D4();
  v17 = v24;
  v23 = xmmword_1BB87FC90;
  if ((v24 & 1) != 0)
    sub_1BAE7F5A8();
  else
    sub_1BAE7F5EC();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v12 = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatActivityItemsBinding.encode(to:)(_QWORD *a1)
{
  return sub_1BA4B2340(a1, (uint64_t)&type metadata for FormatActivityItemsBinding, (void (*)(_QWORD, char *))sub_1BACE4AF0, (void (*)(uint64_t, char *))sub_1BACE4C4C);
}

uint64_t sub_1BAD818E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F0130(*a1, *a2);
}

uint64_t sub_1BAD818FC@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

void sub_1BAD81908(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x656E696C64616568;
  if (*v1)
    v2 = 0x6575737369;
  v3 = 0xE800000000000000;
  if (*v1)
    v3 = 0xE500000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAD81944()
{
  sub_1BAEE2D0C();
  return sub_1BB872D60();
}

uint64_t sub_1BAD819A0()
{
  sub_1BAEE2D0C();
  return sub_1BB872D0C();
}

uint64_t FormatActivityItemsConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  _BYTE *v21;
  __int128 v22;
  char v23;

  v3 = v2;
  v21 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v21;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v18 = v17;
      *(_QWORD *)(v18 + 8) = v16;
      *(_QWORD *)(v18 + 16) = &unk_1E726A4A8;
      *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v17, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE7F630();
  v22 = 0uLL;
  sub_1BB8740D4();
  v22 = xmmword_1BB87FC90;
  sub_1BAE7F674();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *v12 = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatActivityItemsConfiguration.encode(to:)(_QWORD *a1)
{
  return sub_1BADBEA3C(a1, (uint64_t)&type metadata for FormatActivityItemsConfiguration, (void (*)(uint64_t, char *))sub_1BACE11AC);
}

uint64_t sub_1BAD81CC0()
{
  return sub_1BAE0E9E0();
}

uint64_t sub_1BAD81CD8()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAD81CF0()
{
  return sub_1BAE0EA6C();
}

uint64_t sub_1BAD81D08@<X0>(BOOL *a1@<X8>)
{
  return sub_1BA592DC0(a1);
}

uint64_t sub_1BAD81D14()
{
  sub_1BAEE2D50();
  return sub_1BB872D60();
}

uint64_t sub_1BAD81D70()
{
  sub_1BAEE2D50();
  return sub_1BB872D0C();
}

uint64_t sub_1BAD81DBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD81DF4 + 4 * byte_1BB8AE246[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAD81DF4()
{
  return 0x746E65746E6F63;
}

unint64_t sub_1BAD81E0C()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1BAD81E2C()
{
  return 1702521203;
}

uint64_t sub_1BAD81E3C()
{
  return 0x657A69736572;
}

uint64_t sub_1BAD81E50()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1BAD81E70()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BAD81E84()
{
  return 0x696C696269736976;
}

unint64_t sub_1BAD81E9C()
{
  return 0xD000000000000018;
}

uint64_t sub_1BAD81EB8()
{
  return 1885433183;
}

uint64_t sub_1BAD81EC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE7F9D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD81EEC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724FE88;
}

uint64_t sub_1BAD81EFC()
{
  sub_1BA581B14();
  return sub_1BB874710();
}

uint64_t sub_1BAD81F24()
{
  sub_1BA581B14();
  return sub_1BB87471C();
}

uint64_t sub_1BAD81F4C()
{
  return sub_1BAE0E9E0();
}

uint64_t sub_1BAD81F64()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAD81F7C()
{
  return sub_1BAE0EA6C();
}

uint64_t sub_1BAD81F94(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BADFFEB8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1BA804260);
}

uint64_t sub_1BAD81FA0(uint64_t a1, uint64_t a2)
{
  return sub_1BADFFF50(a1, a2, (void (*)(uint64_t))sub_1BA804260);
}

uint64_t sub_1BAD81FAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BADFFFC0(a1, a2, a3, (void (*)(_QWORD))sub_1BA804260);
}

uint64_t sub_1BAD81FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAE0000C(a1, a2, a3, (void (*)(uint64_t))sub_1BA804260);
}

void FormatAlphaColor.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[26];

  v13[15] = a3;
  v13[9] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[25] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[13] = (char *)v13 - v5;
  v13[10] = v6;
  v13[11] = v7;
  v9 = _s10CodingKeysOMa_205(255, v6, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CE540, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CE4F0, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CE4C8, v9);
  v13[18] = v9;
  v13[19] = v10;
  v13[7] = v11;
  v13[8] = v10;
  v13[20] = v11;
  v13[21] = v12;
  v13[6] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

void FormatAlphaColor.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v12 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v14 = v6;
  v8 = _s10CodingKeysOMa_205(255, v6, v13, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8CE540, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CE4F0, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CE4C8, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BAD82568(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 72) = v10;
  *(_QWORD *)(v4 - 168) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v26 - v11;
  v14 = v1[3];
  v13 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v15, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.JazzkonC, v13, (uint64_t)v12, v6, (uint64_t)&off_1E734BD80);
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  if (qword_1ED3C2478 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C20);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v3, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v19 = *(_QWORD *)(v4 - 144);
  sub_1BA6EE974(*(_QWORD *)(v4 - 136), v4 - 112, v3, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v4 - 72), *(_QWORD *)(v4 - 152), *(_QWORD *)(*(_QWORD *)(v4 - 160) + 16));
  sub_1BA4A2E80(v3, type metadata accessor for FormatVersionRequirement);
  if (v19)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v4 - 168) + 8))(v12, *(_QWORD *)(v4 - 72));
  v21 = (uint64_t *)(*(_QWORD *)(v4 - 136) + *(int *)(v2 + 36));
  v22 = *v21;
  LOBYTE(v21) = *((_BYTE *)v21 + 8);
  *(_QWORD *)(v4 - 128) = v22;
  *(_BYTE *)(v4 - 120) = (_BYTE)v21;
  *(_OWORD *)(v4 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v4 - 96) = 0;
  v23 = *(_QWORD *)(v4 - 176);
  v18(v23, v17, v16);
  swift_storeEnumTagMultiPayload();
  v24 = sub_1BA5ED248();
  v25 = *(_QWORD *)(v4 - 72);
  sub_1BA6232B0(v4 - 128, v4 - 112, v23, (uint64_t)sub_1BA90CF04, 0, v25, MEMORY[0x1E0DEF040], v24);
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 168) + 8))(v12, v25);
}

uint64_t sub_1BAD827E4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAD82918(char a1)
{
  if (!a1)
    return 0x726F6C6F63;
  if (a1 == 1)
    return 0x6168706C61;
  return 1885433183;
}

uint64_t sub_1BAD82960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAE039AC(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD))sub_1BAEFCC0C);
}

uint64_t sub_1BAD8296C()
{
  char *v0;

  return sub_1BAD82918(*v0);
}

uint64_t sub_1BAD82978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAD827E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAD829A4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BAE03948(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (void (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_205);
  *a2 = result;
  return result;
}

uint64_t sub_1BAD829D8(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8CE4F0, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAD82A0C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8CE4F0, a1);
  return sub_1BB87471C();
}

void sub_1BAD82A40(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72518D0;
}

uint64_t sub_1BAD82A50()
{
  sub_1BA5F3EF0();
  return sub_1BB874710();
}

uint64_t sub_1BAD82A78()
{
  sub_1BA5F3EF0();
  return sub_1BB87471C();
}

uint64_t FormatAnimationNodeAnimation.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD v34[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v34 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v34 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAnimationNodeAnimation, v19, v16, (uint64_t)&type metadata for FormatAnimationNodeAnimation, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v17, (uint64_t)v14, v18, (uint64_t)&off_1E734BDC0);
  if (!(v15 >> 62))
  {
    v25 = *(_QWORD *)(v15 + 16);
    v26 = qword_1ED3C6D58;
    swift_retain();
    if (v26 != -1)
      swift_once();
    v27 = sub_1BB86EB84();
    v28 = __swift_project_value_buffer(v27, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v11, v28, v27);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD03AEC(0, v25, (uint64_t)v11);
    v24 = (uint64_t)v11;
    goto LABEL_9;
  }
  if (v15 >> 62 == 1)
  {
    v20 = *(_QWORD *)(v15 + 16);
    v21 = qword_1ED3C6D58;
    swift_retain();
    if (v21 != -1)
      swift_once();
    v22 = sub_1BB86EB84();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v8, v23, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD03C70(1, v20, (uint64_t)v8);
    v24 = (uint64_t)v8;
LABEL_9:
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
    return swift_release();
  }
  v29 = *(_QWORD *)(v15 + 16);
  v30 = qword_1ED3C6D58;
  swift_retain();
  if (v30 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v5, v32, v31);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD03DF4(2, v29, (uint64_t)v5);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return swift_release();
}

uint64_t sub_1BAD82E20(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB806DAC(*a1, *a2);
}

uint64_t sub_1BAD82E2C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD82EC0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD82F30()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD82FC0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x676E69727073;
  if (v2 != 1)
  {
    v5 = 0x70756F7267;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6369736162;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAD83014()
{
  sub_1BA4A0284();
  return sub_1BB872D0C();
}

uint64_t FormatAnimationNodeBasicAnimation.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BAE7FDC8(a1);
}

uint64_t FormatAnimationNodeBasicAnimation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  _BYTE v42[144];
  _BYTE v43[64];
  uint64_t v44;

  v3 = (uint64_t)(v1 + 2);
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v38 = (char *)&v36 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v36 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v36 - v13;
  sub_1BAE80330(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = a1[3];
  v18 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v20 = sub_1BAE80420();
  v21 = sub_1BA4A2870(&qword_1EF2B2940, (uint64_t (*)(uint64_t))sub_1BAE80420, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v22, v19, v4, v20, (uint64_t)&type metadata for FormatVersions.StarSky, v18, (uint64_t)v17, v21, (uint64_t)&off_1E734BDC0);
  sub_1BAE8056C(v3, (uint64_t)v43);
  sub_1BA6F7850((uint64_t)v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA51A92C);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v23 = sub_1BB86EB84();
  v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C08);
  v25 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
  v40 = v24;
  v39 = v25;
  ((void (*)(char *))v25)(v14);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v26 = v44;
  sub_1BAD24E40((uint64_t)v43, 0, 0, 0, (uint64_t)v14, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v14, type metadata accessor for FormatVersionRequirement);
  sub_1BA6F7850((uint64_t)v43, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA51A9E0);
  if (!v26)
  {
    v27 = *(_QWORD *)(v41 + 72);
    v28 = *(_QWORD *)(v41 + 80);
    v29 = *(_BYTE *)(v41 + 88);
    v39(v11, v40, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BA796C58(v27, v28, v29);
    sub_1BAD6E8C0(v27, v28, v29, 1, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v27, v28, v29);
    v30 = *(_QWORD *)(v41 + 96);
    v31 = *(_QWORD *)(v41 + 104);
    v32 = *(_BYTE *)(v41 + 112);
    v33 = (uint64_t)v38;
    v39(v38, v40, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BA796C58(v30, v31, v32);
    sub_1BAD6E8C0(v30, v31, v32, 2, 0, 0, v33, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v30, v31, v32);
    sub_1BA6A09F0(v41 + 120, (uint64_t)v42, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v34 = (uint64_t)v37;
    v39(v37, v40, v23);
    swift_storeEnumTagMultiPayload();
    sub_1BA8966F8((uint64_t)v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    sub_1BAD6EAF0((uint64_t)v42, 3, 0, 0, v34, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    sub_1BA8966F8((uint64_t)v42, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  }
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BAE80330);
}

uint64_t sub_1BAD83530()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD83560 + 4 * byte_1BB8AE274[*v0]))(0x6874615079656BLL, 0xE700000000000000);
}

uint64_t sub_1BAD83560()
{
  return 0x6974616C756D7563;
}

uint64_t sub_1BAD8357C()
{
  return 0x6576697469646461;
}

uint64_t sub_1BAD83594()
{
  return 0x6D6954616964656DLL;
}

uint64_t sub_1BAD835B4()
{
  return 1885433183;
}

uint64_t sub_1BAD835C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE80610(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD835E8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250700;
}

uint64_t sub_1BAD835F8()
{
  sub_1BAE804E4();
  return sub_1BB874710();
}

uint64_t sub_1BAD83620()
{
  sub_1BAE804E4();
  return sub_1BB87471C();
}

uint64_t sub_1BAD83648()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D6954616964656DLL;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x6F6974616D696E61;
}

uint64_t sub_1BAD836A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE80840(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD836CC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250728;
}

uint64_t sub_1BAD836DC()
{
  sub_1BAE772B4();
  return sub_1BB874710();
}

uint64_t sub_1BAD83704()
{
  sub_1BAE772B4();
  return sub_1BB87471C();
}

void FormatAnimationNodeKeyPath.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  _QWORD v35[24];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v35[10] = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v35[9] = (char *)v35 - v6;
  MEMORY[0x1E0C80A78](v7);
  v35[8] = (char *)v35 - v8;
  MEMORY[0x1E0C80A78](v9);
  v35[6] = (char *)v35 - v10;
  MEMORY[0x1E0C80A78](v11);
  v35[5] = (char *)v35 - v12;
  MEMORY[0x1E0C80A78](v13);
  v35[4] = (char *)v35 - v14;
  MEMORY[0x1E0C80A78](v15);
  v35[3] = (char *)v35 - v16;
  MEMORY[0x1E0C80A78](v17);
  v35[7] = (char *)v35 - v18;
  MEMORY[0x1E0C80A78](v19);
  v35[2] = (char *)v35 - v20;
  MEMORY[0x1E0C80A78](v21);
  v35[1] = (char *)v35 - v22;
  MEMORY[0x1E0C80A78](v23);
  v35[0] = (char *)v35 - v24;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v35 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = *(_QWORD *)(v1 + 8);
  v35[11] = *(_QWORD *)v1;
  v35[12] = v29;
  v35[13] = *(_QWORD *)(v1 + 16);
  v30 = *(unsigned __int8 *)(v1 + 48);
  v31 = a1[3];
  v32 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v31);
  v33 = sub_1BA6B8518();
  v35[23] = v28;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAnimationNodeKeyPath, v34, v31, (uint64_t)&type metadata for FormatAnimationNodeKeyPath, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v32, (uint64_t)v28, v33, (uint64_t)&off_1E734BDC0);
  __asm { BR              X9 }
}

uint64_t sub_1BAD839B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D58 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BACE47D0(0, *(_QWORD *)(v1 - 168), *(_QWORD *)(v1 - 160), *(_QWORD *)(v1 - 152), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BAD84008(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD84048 + 4 * byte_1BB8AE29E[a1]))(0x726F66736E617274, 0xEE00656C6163536DLL);
}

unint64_t sub_1BAD84084()
{
  return 0xD000000000000012;
}

uint64_t sub_1BAD8412C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BADFFEB8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1BAD84008);
}

uint64_t sub_1BAD84138(uint64_t a1, uint64_t a2)
{
  return sub_1BADFFF50(a1, a2, (void (*)(uint64_t))sub_1BAD84008);
}

uint64_t sub_1BAD84144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BADFFFC0(a1, a2, a3, (void (*)(_QWORD))sub_1BAD84008);
}

uint64_t sub_1BAD84150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAE0000C(a1, a2, a3, (void (*)(uint64_t))sub_1BAD84008);
}

uint64_t sub_1BAD8415C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAD84008(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAD84184()
{
  sub_1BA49E84C();
  return sub_1BB872D0C();
}

void FormatAnimationNodeKeyPathAnimation.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[6];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v14[1] = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v14[2] = (char *)v14 - v6;
  MEMORY[0x1E0C80A78](v7);
  v8 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(a2 + 16);
  v14[5] = v8;
  v10 = _s10CodingKeysOMa_203(255, v15, v8, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CE390, v10);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CE340, v10);
  v13 = MEMORY[0x1BCCE5B24](&unk_1BB8CE318, v10);
  v16 = v10;
  v17 = v11;
  v18 = v12;
  v19 = v13;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BAD842D8(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v6 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v7 = sub_1BB8741D0();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v7);
  v10 = type metadata accessor for VersionedKeyedEncodingContainer(0, v7, v8, v9);
  *(_QWORD *)(v4 - 144) = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v30 - v11;
  v13 = v2[3];
  v14 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v13);
  *(_QWORD *)(v4 - 152) = v3;
  sub_1BA6EC1EC(v3, v15, v13, v3, a1, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v12, v6, (uint64_t)&off_1E734BDC0);
  *(_QWORD *)(v4 - 112) = 0;
  *(_QWORD *)(v4 - 104) = 0;
  *(_BYTE *)(v4 - 96) = 0;
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C08);
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v18(v1, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v19 = *(_QWORD *)(v4 - 128);
  v20 = *(_QWORD *)(*(_QWORD *)(v4 - 136) + 16);
  v21 = *(_QWORD *)(v4 - 72);
  v22 = *(_QWORD *)(v4 - 120);
  *(_QWORD *)(v4 - 136) = v20;
  sub_1BA6232B0(v21, v4 - 112, v1, (uint64_t)sub_1BA90CF04, 0, v10, v22, v20);
  if (!v19)
  {
    sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
    v23 = *(_QWORD *)(v4 - 160);
    v24 = *(_QWORD *)(v4 - 72) + *(int *)(*(_QWORD *)(v4 - 152) + 36);
    *(_OWORD *)(v4 - 112) = xmmword_1BB8A1A10;
    *(_BYTE *)(v4 - 96) = 0;
    *(_QWORD *)(v4 - 128) = v18;
    v18(v23, v17, v16);
    swift_storeEnumTagMultiPayload();
    v25 = *(_QWORD *)(v4 - 120);
    sub_1BA6232B0(v24, v4 - 112, v23, (uint64_t)sub_1BA90CF04, 0, v10, v25, *(_QWORD *)(v4 - 136));
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    v26 = *(_QWORD *)(v4 - 72) + *(int *)(*(_QWORD *)(v4 - 152) + 40);
    *(_OWORD *)(v4 - 112) = xmmword_1BB8D2D60;
    *(_BYTE *)(v4 - 96) = 0;
    v27 = *(_QWORD *)(v4 - 168);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 - 128))(v27, v17, v16);
    swift_storeEnumTagMultiPayload();
    v28 = v26;
    v1 = v27;
    sub_1BA6232B0(v28, v4 - 112, v27, (uint64_t)sub_1BA90CF04, 0, v10, v25, *(_QWORD *)(v4 - 136));
  }
  sub_1BA4A2E80(v1, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v4 - 144) + 8))(v12, v10);
}

uint64_t sub_1BAD845C8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x756C61566D6F7266 && a2 == 0xE900000000000065;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C61566F74 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65756C61567962 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1BAD84768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _DWORD *v5;

  _s10CodingKeysOMa_203(255, a1, a2, a4);
  sub_1BB874218();
  swift_allocObject();
  v4 = sub_1BB872E2C();
  *v5 = 50462976;
  return sub_1BA69C794(v4);
}

uint64_t sub_1BAD847C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAD845C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAD847F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA936B78();
  *a1 = result;
  return result;
}

uint64_t sub_1BAD84818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;

  result = sub_1BAD84768(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a2, a3);
  *a4 = result;
  return result;
}

uint64_t sub_1BAD84844(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8CE340, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAD84878(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8CE340, a1);
  return sub_1BB87471C();
}

uint64_t FormatAnimationNodeSpringAnimation.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA500D1C(a1);
}

uint64_t FormatAnimationNodeSpringAnimation.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  void (*v71)(char *, uint64_t, uint64_t);
  uint64_t v72;
  _BYTE v73[144];
  _BYTE v74[24];
  char *v75;

  v4 = (uint64_t)(v1 + 2);
  v3 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v61 - v8;
  MEMORY[0x1E0C80A78](v10);
  v67 = (char *)&v61 - v11;
  MEMORY[0x1E0C80A78](v12);
  v68 = (char *)&v61 - v13;
  MEMORY[0x1E0C80A78](v14);
  v69 = (char *)&v61 - v15;
  MEMORY[0x1E0C80A78](v16);
  v70 = (char *)&v61 - v17;
  MEMORY[0x1E0C80A78](v18);
  v71 = (void (*)(char *, uint64_t, uint64_t))((char *)&v61 - v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v61 - v21;
  sub_1BAE809A8(0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1[3];
  v27 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v26);
  v28 = sub_1BAE80A98();
  v29 = sub_1BA4A2870(&qword_1ED3ADA58, (uint64_t (*)(uint64_t))sub_1BAE80A98, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v3, v30, v26, v3, v28, (uint64_t)&type metadata for FormatVersions.StarSky, v27, (uint64_t)v25, v29, (uint64_t)&off_1E734BDC0);
  sub_1BAE8056C(v4, (uint64_t)v74);
  sub_1BA6F7850((uint64_t)v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA51A92C);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v31 = sub_1BB86EB84();
  v32 = __swift_project_value_buffer(v31, (uint64_t)qword_1ED476C08);
  v33 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
  v33(v22, v32, v31);
  v34 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v35 = v75;
  sub_1BAD24B60((uint64_t)v74, 0, 0, 0, (uint64_t)v22, (uint64_t)sub_1BA90CF04, 0);
  if (v35)
  {
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    sub_1BA6F7850((uint64_t)v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA51A9E0);
  }
  else
  {
    v62 = v9;
    sub_1BA4A2E80((uint64_t)v22, type metadata accessor for FormatVersionRequirement);
    sub_1BA6F7850((uint64_t)v74, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA51A9E0);
    v36 = v72;
    v37 = v34;
    v38 = *(_QWORD *)(v72 + 72);
    v39 = *(_QWORD *)(v72 + 80);
    v40 = v32;
    v41 = *(_BYTE *)(v72 + 88);
    v42 = v25;
    v43 = (uint64_t)v71;
    v64 = v40;
    v63 = v31;
    ((void (*)(void (*)(char *, uint64_t, uint64_t)))v33)(v71);
    v65 = v37;
    swift_storeEnumTagMultiPayload();
    sub_1BA796C58(v38, v39, v41);
    v75 = v42;
    sub_1BAD6DE70(v38, v39, v41, 1, 0, 0, v43, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v43, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v38, v39, v41);
    v44 = *(_QWORD *)(v36 + 96);
    v45 = *(_QWORD *)(v36 + 104);
    LOBYTE(v39) = *(_BYTE *)(v36 + 112);
    v46 = v33;
    v47 = (uint64_t)v70;
    v48 = v63;
    v71 = v46;
    v46(v70, v64, v63);
    swift_storeEnumTagMultiPayload();
    sub_1BA796C58(v44, v45, v39);
    v25 = v75;
    sub_1BAD6DE70(v44, v45, v39, 2, 0, 0, v47, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80(v47, type metadata accessor for FormatVersionRequirement);
    sub_1BA796C70(v44, v45, v39);
    v49 = v36;
    v50 = (uint64_t)v69;
    v51 = v64;
    v71(v69, v64, v48);
    swift_storeEnumTagMultiPayload();
    v52 = swift_bridgeObjectRetain();
    sub_1BAD6E0A0(v52, 3, 0, 0, v50, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v50, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v53 = (uint64_t)v68;
    v71(v68, v51, v48);
    swift_storeEnumTagMultiPayload();
    v54 = swift_bridgeObjectRetain();
    sub_1BAD6E0A0(v54, 4, 0, 0, v53, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v53, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v56 = (uint64_t)v67;
    v71(v67, v51, v48);
    swift_storeEnumTagMultiPayload();
    v57 = swift_bridgeObjectRetain();
    sub_1BAD6E0A0(v57, 5, 0, 0, v56, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v56, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v58 = (uint64_t)v62;
    v71(v62, v64, v48);
    swift_storeEnumTagMultiPayload();
    v59 = swift_bridgeObjectRetain();
    sub_1BAD6E0A0(v59, 6, 0, 0, v58, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v58, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    sub_1BA6A09F0(v49 + 152, (uint64_t)v73, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
    v60 = (uint64_t)v66;
    v71(v66, v64, v48);
    swift_storeEnumTagMultiPayload();
    sub_1BA8966F8((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
    sub_1BAD6E2C0((uint64_t)v73, 7, 0, 0, v60, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v60, type metadata accessor for FormatVersionRequirement);
    sub_1BA8966F8((uint64_t)v73, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  }
  return sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAE809A8);
}

uint64_t sub_1BAD850E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD85118 + 4 * byte_1BB8AE2AE[a1]))(0x6874615079656BLL, 0xE700000000000000);
}

uint64_t sub_1BAD85118()
{
  return 0x6974616C756D7563;
}

uint64_t sub_1BAD85134()
{
  return 0x6576697469646461;
}

uint64_t sub_1BAD8514C()
{
  return 1936941421;
}

uint64_t sub_1BAD8515C()
{
  return 0x73656E6666697473;
}

uint64_t sub_1BAD85178()
{
  return 0x676E69706D6164;
}

uint64_t sub_1BAD8518C()
{
  return 0x566C616974696E69;
}

uint64_t sub_1BAD851B0()
{
  return 0x6D6954616964656DLL;
}

uint64_t sub_1BAD851D0()
{
  return 1885433183;
}

uint64_t sub_1BAD851E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE80BA0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD85204(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250750;
}

uint64_t sub_1BAD85214()
{
  sub_1BA5015F8();
  return sub_1BB874710();
}

uint64_t sub_1BAD8523C()
{
  sub_1BA5015F8();
  return sub_1BB87471C();
}

char *FormatAnimationNodeStyle.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA532AB4(a1);
}

uint64_t FormatAnimationNodeStyle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  char *v54;
  uint64_t v55;
  void (*v56)(char *, char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t *v66;
  __int128 v67;
  char v68;
  uint64_t v69;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v62 = (char *)&v59 - v8;
  MEMORY[0x1E0C80A78](v9);
  v63 = (char *)&v59 - v10;
  MEMORY[0x1E0C80A78](v11);
  v64 = (char *)&v59 - v12;
  MEMORY[0x1E0C80A78](v13);
  v65 = (char *)&v59 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v59 - v16;
  sub_1BAE80F80(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v22);
  v23 = sub_1BAE81070();
  v24 = sub_1BA4A2870(&qword_1ED3AD918, (uint64_t (*)(uint64_t))sub_1BAE81070, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v25, v22, v4, v23, (uint64_t)&type metadata for FormatVersions.StarSky, v21, (uint64_t)v20, v24, (uint64_t)&off_1E734BDC0);
  swift_beginAccess();
  v26 = v2[2];
  v27 = v2[3];
  v28 = v2;
  v29 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v29 != -1)
    swift_once();
  v30 = sub_1BB86EB84();
  v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C08);
  v32 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v32(v17, v31, v30);
  v33 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v34 = v26;
  v35 = (uint64_t)v20;
  v36 = v66;
  sub_1BAD265E8(v34, v27, 0, 0, 0, (uint64_t)v17, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE484B4, (uint64_t (*)(uint64_t))sub_1BAE80FF8, &qword_1ED3AED10);
  if (v36)
  {
    sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
LABEL_6:
    swift_bridgeObjectRelease();
    return sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BAE80F80);
  }
  sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v37 = v28;
  v38 = v28[4];
  v66 = v37;
  v39 = v37[5];
  v40 = (uint64_t)v65;
  v32(v65, v31, v30);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1BAD14AAC(v38, v39, 1, 0, 0, v40, (uint64_t)sub_1BA90CF04, 0);
  v59 = 0;
  v60 = v20;
  sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  v42 = v66;
  v43 = v66[6];
  v44 = v66[7];
  v45 = *((_BYTE *)v66 + 64);
  v46 = (uint64_t)v64;
  v65 = (char *)v31;
  v32(v64, v31, v30);
  swift_storeEnumTagMultiPayload();
  v47 = v59;
  sub_1BAD47AA8(v43, v44, v45, 2, 0, 0, v46, (uint64_t)sub_1BA90CF04);
  v35 = (uint64_t)v60;
  sub_1BA4A2E80(v46, type metadata accessor for FormatVersionRequirement);
  if (!v47)
  {
    swift_beginAccess();
    v48 = v42[9];
    v49 = (uint64_t)v63;
    v50 = v30;
    v64 = (char *)v32;
    v32(v63, (uint64_t)v65, v30);
    v59 = v33;
    swift_storeEnumTagMultiPayload();
    if (v48)
    {
      swift_bridgeObjectRetain();
      if ((sub_1BAE484B4(v49, 3, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v67 = xmmword_1BB8D2D70;
        v68 = 0;
        v69 = v48;
        sub_1BAE80FF8();
        sub_1BA4A2870(&qword_1ED3AED10, (uint64_t (*)(uint64_t))sub_1BAE80FF8, MEMORY[0x1E0DED188]);
        sub_1BAE81178(0, &qword_1EF2B2960, &qword_1ED3A0808, (uint64_t)&type metadata for FormatAnimationNodeAnimation);
        sub_1BAE811D8();
        sub_1BB874464();
        v49 = (uint64_t)v63;
      }
    }
    sub_1BA4A2E80(v49, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v51 = *((unsigned int *)v42 + 20) | ((unint64_t)*((unsigned __int8 *)v42 + 84) << 32);
    v52 = (uint64_t)v62;
    v53 = (void (*)(char *, char *, uint64_t))v64;
    v54 = v65;
    ((void (*)(char *, char *, uint64_t))v64)(v62, v65, v50);
    swift_storeEnumTagMultiPayload();
    v55 = v51;
    v35 = (uint64_t)v60;
    sub_1BAD47C70(v55, 4, 0, 0, v52, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v52, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v56 = v53;
    v57 = (uint64_t)v61;
    v56(v61, v54, v50);
    swift_storeEnumTagMultiPayload();
    v58 = swift_bridgeObjectRetain();
    sub_1BAD2801C(v58, 5, 0, 0);
    sub_1BA4A2E80(v57, type metadata accessor for FormatVersionRequirement);
    goto LABEL_6;
  }
  return sub_1BA4A2E80(v35, (uint64_t (*)(_QWORD))sub_1BAE80F80);
}

uint64_t sub_1BAD85914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE81CE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD85938(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252968;
}

uint64_t sub_1BAD85948()
{
  sub_1BA533214();
  return sub_1BB874710();
}

uint64_t sub_1BAD85970()
{
  sub_1BA533214();
  return sub_1BB87471C();
}

uint64_t FormatAnimationNodeStyle.Selector.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, uint64_t, uint64_t);
  uint64_t v43;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v38 = (char *)&v33 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v33 - v11;
  sub_1BAE8148C(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)v1;
  v16 = *(_QWORD *)(v1 + 8);
  v18 = *(_QWORD *)(v1 + 16);
  v40 = *(_QWORD *)(v1 + 24);
  v41 = v18;
  v39 = *(unsigned __int8 *)(v1 + 32);
  v37 = *(_QWORD *)(v1 + 40);
  v35 = *(unsigned __int8 *)(v1 + 52);
  v34 = *(unsigned int *)(v1 + 48);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BAE81384();
  v22 = sub_1BA4A2870(&qword_1ED3AD928, (uint64_t (*)(uint64_t))sub_1BAE81384, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, v23, v19, (uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, v21, (uint64_t)&type metadata for FormatVersions.StarSky, v20, (uint64_t)v15, v22, (uint64_t)&off_1E734BDC0);
  v24 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C08);
  v42 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v42(v12, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v27 = v43;
  sub_1BAD14C04(v17, v16, 0, 0, 0, (uint64_t)v12, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v12, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v27)
  {
    v42(v9, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BAD47E44(v41, v40, v39, 1, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04);
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
    v28 = (uint64_t)v38;
    v42(v38, v26, v25);
    swift_storeEnumTagMultiPayload();
    v29 = swift_bridgeObjectRetain();
    sub_1BAD4800C(v29, 2, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v30 = v34 | (v35 << 32);
    v31 = (uint64_t)v36;
    v42(v36, v26, v25);
    swift_storeEnumTagMultiPayload();
    sub_1BAD4823C(v30 & 0xFFFFFFFFFFLL, 3, 0, 0, v31, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BAE8148C);
}

uint64_t sub_1BAD85D94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE81FE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD85DB8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252990;
}

uint64_t sub_1BAD85DC8()
{
  sub_1BA4F25E0();
  return sub_1BB874710();
}

uint64_t sub_1BAD85DF0()
{
  sub_1BA4F25E0();
  return sub_1BB87471C();
}

uint64_t FormatArrayIndex.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v25[3];
  char v26;

  v3 = v2;
  v25[0] = a2;
  sub_1BAE8157C();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE815F4();
  sub_1BA4A2870(&qword_1ED3ABE88, (uint64_t (*)(uint64_t))sub_1BAE815F4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v25[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v25[0] = v13;
      MEMORY[0x1E0C80A78](v21);
      v25[-4] = &_s10CodingKeysON_186;
      v25[-3] = sub_1BAE81674();
      v25[-2] = sub_1BAE816B8();
      v25[-1] = sub_1BAE816FC();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71130((uint64_t)&unk_1E726A688);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v25[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v25[1] = 0;
  v25[2] = 0;
  v26 = 0;
  v18 = sub_1BB8740C8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatArrayIndex.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE81740(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE815F4();
  v13 = sub_1BA4A2870(&qword_1ED3ABE88, (uint64_t (*)(uint64_t))sub_1BAE815F4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatArrayIndex, v14, v10, (uint64_t)&type metadata for FormatArrayIndex, v12, (uint64_t)&type metadata for FormatVersions.SydroF, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD60);
  if (qword_1ED3C6D50 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476BF0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v16, v15);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD208F0(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE81740);
}

uint64_t sub_1BAD862F0()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x7865646E69;
}

uint64_t sub_1BAD86320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE82214(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD86344(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250E88;
}

uint64_t sub_1BAD86354()
{
  sub_1BAE816B8();
  return sub_1BB874710();
}

uint64_t sub_1BAD8637C()
{
  sub_1BAE816B8();
  return sub_1BB87471C();
}

void FormatArraySubscript.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[20];

  v13[13] = a3;
  v13[14] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13[6] = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v13[15] = (char *)v13 - v5;
  v13[10] = v6;
  v13[11] = v7;
  v9 = _s10CodingKeysOMa_198(255, v6, v7, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CE020, v9);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CDFD0, v9);
  v12 = MEMORY[0x1BCCE5B24](&unk_1BB8CDFA8, v9);
  v13[16] = v9;
  v13[17] = v10;
  v13[8] = v11;
  v13[9] = v10;
  v13[18] = v11;
  v13[19] = v12;
  v13[7] = v12;
  type metadata accessor for FormatCodingKeysContainer();
}

void FormatArraySubscript.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v14 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v6 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 16);
  v12[1] = v6;
  v8 = _s10CodingKeysOMa_198(255, v13, v6, v7);
  v9 = MEMORY[0x1BCCE5B24](&unk_1BB8CE020, v8);
  v10 = MEMORY[0x1BCCE5B24](&unk_1BB8CDFD0, v8);
  v11 = MEMORY[0x1BCCE5B24](&unk_1BB8CDFA8, v8);
  v15 = v8;
  v16 = v9;
  v17 = v10;
  v18 = v11;
  type metadata accessor for FormatCodingKeysContainer();
}

uint64_t sub_1BAD86928(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v7 = MEMORY[0x1BCCE5B24](&unk_1BB8FFC6C, a1);
  v8 = sub_1BB8741D0();
  v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v8);
  v11 = type metadata accessor for VersionedKeyedEncodingContainer(0, v8, v9, v10);
  *(_QWORD *)(v5 - 120) = v11;
  *(_QWORD *)(v5 - 136) = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v25 - v12;
  v14 = v1[3];
  v15 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v14);
  sub_1BA6EC1EC(v2, v16, v14, v2, a1, (uint64_t)&type metadata for FormatVersions.SydroF, v15, (uint64_t)v13, v7, (uint64_t)&off_1E734BD60);
  *(_QWORD *)(v5 - 160) = v4;
  *(_QWORD *)(v5 - 72) = *v4;
  *(_QWORD *)(v5 - 112) = 0;
  *(_QWORD *)(v5 - 104) = 0;
  *(_BYTE *)(v5 - 96) = 0;
  if (qword_1ED3C6D50 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476BF0);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
  v19(v3, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v20 = *(_QWORD *)(v5 - 128);
  sub_1BA6EE974(v5 - 72, v5 - 112, v3, (uint64_t)sub_1BA90CF04, 0, *(_QWORD *)(v5 - 120), MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB420]);
  sub_1BA4A2E80(v3, type metadata accessor for FormatVersionRequirement);
  if (v20)
    return (*(uint64_t (**)(char *, _QWORD))(*(_QWORD *)(v5 - 136) + 8))(v13, *(_QWORD *)(v5 - 120));
  v22 = *(_QWORD *)(v5 - 160) + *(int *)(v2 + 36);
  *(_OWORD *)(v5 - 112) = xmmword_1BB8A1A10;
  *(_BYTE *)(v5 - 96) = 0;
  v23 = *(_QWORD *)(v5 - 144);
  v19(v23, v18, v17);
  swift_storeEnumTagMultiPayload();
  v24 = *(_QWORD *)(v5 - 120);
  sub_1BA6EE974(v22, v5 - 112, v23, (uint64_t)sub_1BA90CF04, 0, v24, *(_QWORD *)(v5 - 152), *(_QWORD *)(*(_QWORD *)(v5 - 168) + 16));
  sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 136) + 8))(v13, v24);
}

uint64_t sub_1BAD86BA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAD86CD8(char a1)
{
  if (!a1)
    return 0x7865646E69;
  if (a1 == 1)
    return 0x65756C6176;
  return 1885433183;
}

uint64_t sub_1BAD86D20()
{
  char *v0;

  return sub_1BAD86CD8(*v0);
}

uint64_t sub_1BAD86D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAD86BA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAD86D58@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BAE03948(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), (void (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_198);
  *a2 = result;
  return result;
}

uint64_t sub_1BAD86D8C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8CDFD0, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAD86DC0(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8CDFD0, a1);
  return sub_1BB87471C();
}

uint64_t FormatAssetURL.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v28 - v6;
  sub_1BAE819BC(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v11 = v1[1];
  v28 = v1[2];
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE818B4();
  v16 = sub_1BA4A2870(&qword_1ED3D1530, (uint64_t (*)(uint64_t))sub_1BAE818B4, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAssetURL, v17, v13, (uint64_t)&type metadata for FormatAssetURL, v15, (uint64_t)&type metadata for FormatVersions.JazzkonC, v14, (uint64_t)v10, v16, (uint64_t)&off_1E734BD80);
  v18 = qword_1ED3C2478;
  swift_bridgeObjectRetain();
  if (v18 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v7, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v30;
  sub_1BAD22C74(v12, v11, 0, 0, 0, (uint64_t)v7, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = qword_1ED3C6D60;
    v24 = v28;
    swift_bridgeObjectRetain();
    if (v23 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C38);
    v26 = (uint64_t)v29;
    v21(v29, v25, v19);
    swift_storeEnumTagMultiPayload();
    sub_1BAD2E0B4(v24, 1, 0, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BAE819BC);
}

uint64_t sub_1BAD870DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE822EC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD87100(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250A50;
}

uint64_t sub_1BAD87110()
{
  sub_1BA56D090();
  return sub_1BB874710();
}

uint64_t sub_1BAD87138()
{
  sub_1BA56D090();
  return sub_1BB87471C();
}

uint64_t sub_1BAD87160(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BADFFEB8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1BA8085EC);
}

uint64_t sub_1BAD8716C(uint64_t a1, uint64_t a2)
{
  return sub_1BADFFF50(a1, a2, (void (*)(uint64_t))sub_1BA8085EC);
}

uint64_t sub_1BAD87178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BADFFFC0(a1, a2, a3, (void (*)(_QWORD))sub_1BA8085EC);
}

uint64_t sub_1BAD87184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAE0000C(a1, a2, a3, (void (*)(uint64_t))sub_1BA8085EC);
}

uint64_t FormatAudioTrackBinding.Command.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE81C18, (uint64_t)&_s10CodingTypeON_126, (uint64_t)&unk_1E726A728, a2);
}

uint64_t FormatAudioTrackBinding.Command.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAudioTrackBinding.Command, v16, v13, (uint64_t)&type metadata for FormatAudioTrackBinding.Command, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BD00);
  sub_1BA6F3F88();
  v18 = *(int *)(v17 + 48);
  v19 = *(int *)(v17 + 64);
  if ((v12 & 1) != 0)
  {
    v20 = &v5[v18];
    v21 = &v5[v19];
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v22 = sub_1BB86EB84();
    v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C38);
    v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v24(v5, v23, v22);
    if (qword_1ED3C6D78 != -1)
      swift_once();
    v25 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C68);
    v24(v20, v25, v22);
    type metadata accessor for FormatVersionRequirement.Value(0);
    *(_QWORD *)v21 = 0;
    *((_QWORD *)v21 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BAD76704(1, (uint64_t)v5);
    v26 = (uint64_t)v5;
  }
  else
  {
    v27 = &v8[v18];
    v28 = &v8[v19];
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v29 = sub_1BB86EB84();
    v30 = __swift_project_value_buffer(v29, (uint64_t)qword_1ED476C38);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
    v31(v8, v30, v29);
    v31(v27, v30, v29);
    type metadata accessor for FormatVersionRequirement.Value(0);
    *(_QWORD *)v28 = 0;
    *((_QWORD *)v28 + 1) = 0;
    swift_storeEnumTagMultiPayload();
    sub_1BAD76704(0, (uint64_t)v8);
    v26 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BAD874A0(char *a1, char *a2)
{
  return sub_1BB7F6B54(*a1, *a2);
}

uint64_t sub_1BAD874AC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD87524()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD87578()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD875EC@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

void sub_1BAD875F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 2036427888;
  if (*v1)
    v2 = 0x6B63616279616C70;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAD87630()
{
  sub_1BAEE2D94();
  return sub_1BB872D60();
}

uint64_t sub_1BAD8768C()
{
  sub_1BAEE2D94();
  return sub_1BB872D0C();
}

uint64_t FormatAudioTrackBinding.Text.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[6];

  v20[1] = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v11 & 1) == 0)
  {
LABEL_8:
    sub_1BAE81C5C();
    v20[2] = 0;
    v20[3] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E726A778;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
LABEL_10:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAD8795C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_BYTE **)(v3 - 120) = 3;
  JUMPOUT(0x1BAD87930);
}

void sub_1BAD87974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  **(_BYTE **)(v3 - 120) = 4;
  JUMPOUT(0x1BAD87930);
}

void sub_1BAD8798C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 112) = xmmword_1BB87FC90;
  sub_1BAE81CA0();
  sub_1BB874068();
  if (!v2)
  {
    if (*(_BYTE *)(v4 - 65) == 2)
      swift_beginAccess();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BAD87A0CLL);
  }
  JUMPOUT(0x1BAD8784CLL);
}

uint64_t FormatAudioTrackBinding.Text.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v33 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v33 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v33 - v13;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *v1;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatAudioTrackBinding.Text, v22, v19, (uint64_t)&type metadata for FormatAudioTrackBinding.Text, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.JazzkonG, v20, (uint64_t)v17, v21, (uint64_t)&off_1E734BD00);
  switch(v18)
  {
    case 2:
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v26 = sub_1BB86EB84();
      v27 = __swift_project_value_buffer(v26, (uint64_t)qword_1ED476C38);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v14, v27, v26);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD76828(0, (uint64_t)v14);
      v25 = (uint64_t)v14;
      break;
    case 3:
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v28 = sub_1BB86EB84();
      v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C38);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD76828(1, (uint64_t)v11);
      v25 = (uint64_t)v11;
      break;
    case 4:
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v23 = sub_1BB86EB84();
      v24 = __swift_project_value_buffer(v23, (uint64_t)qword_1ED476C38);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v8, v24, v23);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BAD76828(2, (uint64_t)v8);
      v25 = (uint64_t)v8;
      break;
    default:
      if (qword_1ED3C6D60 != -1)
        swift_once();
      v30 = sub_1BB86EB84();
      v31 = __swift_project_value_buffer(v30, (uint64_t)qword_1ED476C38);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v5, v31, v30);
      type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BACEA664(3, v18 & 1, (uint64_t)v5);
      v25 = (uint64_t)v5;
      break;
  }
  sub_1BA4A2E80(v25, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void sub_1BAD87E0C(char *a1)
{
  sub_1BB7F6BF0(*a1);
}

void sub_1BAD87E18()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD87E68()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD87EDC()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD87F1C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD87F7C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD87FC8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD8803C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BAD88070()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAD880A4 + 4 * byte_1BB8AE306[*v0]))();
}

void sub_1BAD880A4(_QWORD *a1@<X8>)
{
  *a1 = 0x656C746974;
  a1[1] = 0xE500000000000000;
}

void sub_1BAD880BC(_QWORD *a1@<X8>)
{
  *a1 = 0x4E65727574616566;
  a1[1] = 0xEB00000000656D61;
}

void sub_1BAD880E0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F697461727564;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BAD880FC()
{
  sub_1BAEE2DD8();
  return sub_1BB872D60();
}

uint64_t sub_1BAD88158()
{
  sub_1BAEE2DD8();
  return sub_1BB872D0C();
}

uint64_t FormatAuxiliaryNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA50E61C(a1);
}

uint64_t FormatAuxiliaryNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[4];
  uint64_t v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t, uint64_t);
  __int128 v63;
  char v64;
  uint64_t v65;
  __int128 v66;
  char v67;
  __int128 v68;
  char v69;
  char v70;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v59 = (char *)v56 - v8;
  MEMORY[0x1E0C80A78](v9);
  v60 = (char *)v56 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v56 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v56 - v15;
  sub_1BAE82434(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BAE82524();
  v23 = sub_1BA4A2870(&qword_1ED3D0DB0, (uint64_t (*)(uint64_t))sub_1BAE82524, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v24, v20, v4, v22, (uint64_t)&type metadata for FormatVersions.SydroF, v21, (uint64_t)v19, v23, (uint64_t)&off_1E734BD60);
  swift_beginAccess();
  v25 = v2[2];
  v26 = v2[3];
  v61 = (uint64_t)v2;
  v27 = qword_1ED3C6D50;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476BF0);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v30(v16, v29, v28);
  v31 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v32 = v62;
  sub_1BAD265E8(v25, v26, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4FE5C, (uint64_t (*)(uint64_t))sub_1BAE824AC, &qword_1ED3AE900);
  if (v32)
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v33 = (uint64_t)v19;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34 = v61;
    swift_beginAccess();
    v35 = *(_QWORD *)(v34 + 32);
    v30(v13, v29, v28);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    v36 = sub_1BAE4FE5C((uint64_t)v13, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0);
    v33 = (uint64_t)v19;
    v57 = v28;
    v62 = v30;
    if ((v36 & 1) != 0)
    {
      v68 = xmmword_1BB8A1A10;
      v69 = 0;
      *(_QWORD *)&v66 = v35;
      sub_1BAE824AC();
      sub_1BA4A2870(&qword_1ED3AE900, (uint64_t (*)(uint64_t))sub_1BAE824AC, MEMORY[0x1E0DED188]);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3A2F48, (uint64_t)&type metadata for FormatSourceMapNode, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA653FC0();
      sub_1BB874464();
      v38 = v61;
      v33 = (uint64_t)v19;
    }
    else
    {
      v38 = v61;
    }
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v39 = *(_QWORD *)(v38 + 40);
    v40 = (uint64_t)v60;
    v41 = v29;
    v62(v60, v29, v57);
    v42 = v31;
    swift_storeEnumTagMultiPayload();
    v43 = *(_QWORD *)(v39 + 16);
    swift_bridgeObjectRetain();
    if (v43)
    {
      if ((sub_1BAE4FE5C(v40, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
      {
        v61 = v33;
        v66 = xmmword_1BB8D2D60;
        v67 = 0;
        v44 = swift_bridgeObjectRetain();
        v45 = sub_1BA67F4CC(v44);
        swift_bridgeObjectRelease();
        *(_QWORD *)&v63 = v45;
        swift_retain();
        sub_1BA67FABC((uint64_t *)&v63, sub_1BA67FB34, sub_1BA6801F8);
        swift_release();
        v65 = v63;
        sub_1BAE824AC();
        v56[2] = v46;
        v56[1] = sub_1BA4A2870(&qword_1ED3AE900, (uint64_t (*)(uint64_t))sub_1BAE824AC, MEMORY[0x1E0DED188]);
        v47 = MEMORY[0x1E0DEA968];
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
        sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v47, MEMORY[0x1E0DEA970]);
        v33 = v61;
        sub_1BB874464();
        swift_release();
        v40 = (uint64_t)v60;
        v41 = v29;
        v42 = v31;
      }
      else
      {
        v41 = v29;
      }
    }
    v56[3] = v42;
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v48 = (uint64_t)v59;
    v49 = v38;
    v50 = v57;
    v51 = v62;
    v62(v59, v41, v57);
    swift_storeEnumTagMultiPayload();
    v52 = swift_bridgeObjectRetain();
    v53 = v41;
    sub_1BAD2AA40(v52, 3, 0, 0);
    sub_1BA4A2E80(v48, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v54 = *(unsigned __int8 *)(v49 + 56);
    v55 = (uint64_t)v58;
    v51(v58, v53, v50);
    swift_storeEnumTagMultiPayload();
    if ((v54 & 1) == 0 && (sub_1BAE4FE5C(v55, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v63 = xmmword_1BB8D2D90;
      v64 = 0;
      v70 = 0;
      sub_1BAE824AC();
      sub_1BA4A2870(&qword_1ED3AE900, (uint64_t (*)(uint64_t))sub_1BAE824AC, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v55, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80(v33, (uint64_t (*)(_QWORD))sub_1BAE82434);
}

uint64_t sub_1BAD88A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE852E4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD88A2C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72518F8;
}

uint64_t sub_1BAD88A3C()
{
  sub_1BA50ED24();
  return sub_1BB874710();
}

uint64_t sub_1BAD88A64()
{
  sub_1BA50ED24();
  return sub_1BB87471C();
}

void sub_1BAD88A8C(char *a1)
{
  sub_1BB8012B4(*a1);
}

void sub_1BAD88A98()
{
  char *v0;

  sub_1BAB0ADB4(0, *v0);
}

void sub_1BAD88AA4(uint64_t a1)
{
  char *v1;

  sub_1BA9D3FD4(a1, *v1);
}

void sub_1BAD88AAC(uint64_t a1)
{
  char *v1;

  sub_1BAB0ADB4(a1, *v1);
}

uint64_t FormatBezierPath.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAE828F0();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE82968();
  sub_1BA4A2870(&qword_1ED3ABE98, (uint64_t (*)(uint64_t))sub_1BAE82968, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_183;
      *(&v24 - 3) = sub_1BAE829E8();
      *(&v24 - 2) = sub_1BAE82A2C();
      *(&v24 - 1) = sub_1BAE82A70();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726A840);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, &qword_1ED3AAF20, (uint64_t)&type metadata for FormatBezierPathComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAE82AB4();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBezierPath.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE82B70(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE82968();
  v13 = sub_1BA4A2870(&qword_1ED3ABE98, (uint64_t (*)(uint64_t))sub_1BAE82968, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBezierPath, v14, v10, (uint64_t)&type metadata for FormatBezierPath, v12, (uint64_t)&type metadata for FormatVersions.StarSky, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BDC0);
  v15 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v15 != -1)
    swift_once();
  v16 = sub_1BB86EB84();
  v17 = __swift_project_value_buffer(v16, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v5, v17, v16);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD20774(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE82B70);
}

uint64_t sub_1BAD88FD4()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x6E656E6F706D6F63;
}

uint64_t sub_1BAD8900C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE85564(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD89030(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250EB0;
}

uint64_t sub_1BAD89040()
{
  sub_1BAE82A2C();
  return sub_1BB874710();
}

uint64_t sub_1BAD89068()
{
  sub_1BAE82A2C();
  return sub_1BB87471C();
}

uint64_t FormatBezierPathArcComponent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  char v38;
  __int128 v39;
  char v40;
  char v41;

  v3 = v2;
  v36 = a2;
  sub_1BAE82C60();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE82CD8();
  sub_1BA4A2870(&qword_1EF2B29B8, (uint64_t (*)(uint64_t))sub_1BAE82CD8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v23 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v23);
  }
  v34 = a1;
  v35 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v6;
  v13 = v9;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v16 - 2);
      v18 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      v20 = sub_1BAE1586C();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v19;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v18, 1);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v13, v6);
      a1 = v34;
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA599590();
  v39 = 0uLL;
  v40 = 0;
  sub_1BB8740D4();
  v17 = v37;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
  v39 = xmmword_1BB8A1A10;
  v40 = 0;
  sub_1BA69C018();
  sub_1BB8740D4();
  v22 = v37;
  v39 = xmmword_1BB8D2D60;
  v40 = 0;
  sub_1BB8740D4();
  v25 = v37;
  v39 = xmmword_1BB8D2D70;
  v40 = 0;
  sub_1BB8740D4();
  v33 = v25;
  v26 = v37;
  v32 = xmmword_1BB8D2D90;
  v39 = xmmword_1BB8D2D90;
  v40 = 0;
  v27 = sub_1BB8740F8();
  v28 = v35;
  if ((v27 & 1) != 0)
  {
    v37 = v32;
    v38 = 0;
    sub_1BB8740D4();
    v29 = v36;
    v30 = v41;
    v28 = v35;
  }
  else
  {
    v30 = 1;
    v29 = v36;
  }
  (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v12);
  *(_OWORD *)v29 = v17;
  v31 = v33;
  v23 = (uint64_t)v34;
  *(_QWORD *)(v29 + 16) = v22;
  *(_QWORD *)(v29 + 24) = v31;
  *(_QWORD *)(v29 + 32) = v26;
  *(_BYTE *)(v29 + 40) = v30;
  return __swift_destroy_boxed_opaque_existential_1(v23);
}

uint64_t FormatBezierPathArcComponent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *);
  uint64_t v48;
  __int128 v49;
  char v50;
  int v51;
  char v52;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v40 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v39 - v6;
  MEMORY[0x1E0C80A78](v7);
  v44 = (char *)&v39 - v8;
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)&v39 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - v12;
  sub_1BAE82E24(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(_QWORD *)v1;
  v18 = *(_QWORD *)(v1 + 8);
  v45 = *(_QWORD *)(v1 + 16);
  v43 = *(_QWORD *)(v1 + 24);
  v41 = *(_QWORD *)(v1 + 32);
  v51 = *(unsigned __int8 *)(v1 + 40);
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BAE82CD8();
  v22 = sub_1BA4A2870(&qword_1EF2B29B8, (uint64_t (*)(uint64_t))sub_1BAE82CD8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBezierPathArcComponent, v23, v19, (uint64_t)&type metadata for FormatBezierPathArcComponent, v21, (uint64_t)&type metadata for FormatVersions.StarSky, v20, (uint64_t)v16, v22, (uint64_t)&off_1E734BDC0);
  v24 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C08);
  v47 = *(void (**)(char *))(*(_QWORD *)(v25 - 8) + 16);
  v47(v13);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v27 = v48;
  sub_1BAD0E6F0(v17, v18, 0, 0, 0, (uint64_t)v13, (uint64_t)sub_1BA90CF04, 0);
  if (v27)
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v28 = (uint64_t)v46;
    v29 = v26;
    v30 = v26;
    v31 = (void (*)(char *, uint64_t, uint64_t))v47;
    ((void (*)(char *, uint64_t, uint64_t))v47)(v46, v30, v25);
    swift_storeEnumTagMultiPayload();
    v32 = swift_bridgeObjectRetain();
    sub_1BAD0E84C(v32, 1, 0, 0, v28, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v33 = (uint64_t)v44;
    v31(v44, v29, v25);
    swift_storeEnumTagMultiPayload();
    v34 = swift_bridgeObjectRetain();
    sub_1BAD0E84C(v34, 2, 0, 0, v33, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v33, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v35 = (uint64_t)v42;
    v31(v42, v29, v25);
    swift_storeEnumTagMultiPayload();
    v36 = swift_bridgeObjectRetain();
    sub_1BAD0E84C(v36, 3, 0, 0, v35, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v35, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v37 = (uint64_t)v40;
    v31(v40, v29, v25);
    swift_storeEnumTagMultiPayload();
    if ((v51 & 1) == 0 && (sub_1BAE42EEC(v37, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v49 = xmmword_1BB8D2D90;
      v50 = 0;
      v52 = 0;
      sub_1BAE82E9C();
      sub_1BA4A2870(&qword_1EF2B29D0, (uint64_t (*)(uint64_t))sub_1BAE82E9C, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v37, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BAE82E24);
}

uint64_t sub_1BAD89A64()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD89A90 + 4 * byte_1BB8AE338[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_1BAD89A90()
{
  return 0x737569646172;
}

uint64_t sub_1BAD89AA0()
{
  return 0x676E417472617473;
}

uint64_t sub_1BAD89ABC()
{
  return 0x656C676E41646E65;
}

uint64_t sub_1BAD89AD4()
{
  return 0x7369776B636F6C63;
}

uint64_t sub_1BAD89AF0()
{
  return 1885433183;
}

uint64_t sub_1BAD89B00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE85650(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD89B24(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253240;
}

uint64_t sub_1BAD89B34()
{
  sub_1BAE82D9C();
  return sub_1BB874710();
}

uint64_t sub_1BAD89B5C()
{
  sub_1BAE82D9C();
  return sub_1BB87471C();
}

uint64_t FormatBezierPathComponent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  __int128 v22;
  uint64_t v24;

  v24 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  v9 = v2;
  if (v2)
    goto LABEL_9;
  v10 = a1[3];
  v21 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v11 = sub_1BB872874();
  LOBYTE(v10) = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v12 = v8;
  if ((v10 & 1) == 0)
  {
LABEL_8:
    sub_1BAE82F14();
    v22 = 0uLL;
    sub_1BB8740D4();
    __asm { BR              X9 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v18 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v9 = (void *)swift_allocError();
  *(_QWORD *)v19 = v18;
  *(_QWORD *)(v19 + 8) = v16;
  *(_QWORD *)(v19 + 16) = &unk_1E726A890;
  *(_OWORD *)(v19 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v18, v16);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  a1 = v21;
LABEL_9:
  sub_1BA7F8B78(a1, (uint64_t)v9);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAD89E54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAE82FE0();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BAD89F84);
  }
  JUMPOUT(0x1BAD89CFCLL);
}

void sub_1BAD89EAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAE82F9C();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BAD89F84);
  }
  JUMPOUT(0x1BAD89CFCLL);
}

void sub_1BAD89F08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 96) = xmmword_1BB87FC90;
  sub_1BAE82F58();
  sub_1BB8740D4();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
    JUMPOUT(0x1BAD89F84);
  }
  JUMPOUT(0x1BAD89CFCLL);
}

void sub_1BAD89F64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  JUMPOUT(0x1BAD89F80);
}

void FormatBezierPathComponent.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD v23[24];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v23[3] = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v23[2] = (char *)v23 - v6;
  MEMORY[0x1E0C80A78](v7);
  v23[1] = (char *)v23 - v8;
  MEMORY[0x1E0C80A78](v9);
  v23[0] = (char *)v23 - v10;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(_QWORD *)(v1 + 8);
  v23[6] = *(_QWORD *)v1;
  v23[7] = v16;
  v17 = *(_QWORD *)(v1 + 24);
  v23[4] = *(_QWORD *)(v1 + 16);
  v23[5] = v17;
  v18 = *(unsigned __int8 *)(v1 + 48);
  v20 = a1[3];
  v19 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v21 = sub_1BA6B8518();
  v23[23] = v15;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBezierPathComponent, v22, v20, (uint64_t)&type metadata for FormatBezierPathComponent, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v19, (uint64_t)v15, v21, (uint64_t)&off_1E734BDC0);
  __asm { BR              X9 }
}

uint64_t sub_1BAD8A160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D58 != -1)
    swift_once();
  v2 = sub_1BB86EB84();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(v0, v3, v2);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v4 = *(_QWORD *)(v1 - 72);
  sub_1BACE6690(0, *(_QWORD *)(v1 - 208), *(_QWORD *)(v1 - 200), v0);
  sub_1BA4A2E80(v0, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void sub_1BAD8A564(char *a1)
{
  sub_1BB7F4938(*a1);
}

void sub_1BAD8A570()
{
  char *v0;

  sub_1BA8D2CEC(*v0);
}

void sub_1BAD8A578()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD8A5AC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD8A61C(uint64_t a1)
{
  char *v1;

  sub_1BAB0874C(a1, *v1);
}

uint64_t sub_1BAD8A624@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA50F488();
  *a1 = result;
  return result;
}

uint64_t sub_1BAD8A658()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAD8A680 + 4 * byte_1BB8AE350[*v0]))();
}

void sub_1BAD8A680(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 1701734764;
  a1[1] = v1;
}

void sub_1BAD8A690(_QWORD *a1@<X8>)
{
  *a1 = 0x6576727563;
  a1[1] = 0xE500000000000000;
}

uint64_t sub_1BAD8A6EC()
{
  sub_1BAEE2E1C();
  return sub_1BB872D60();
}

uint64_t sub_1BAD8A748()
{
  sub_1BAEE2E1C();
  return sub_1BB872D0C();
}

uint64_t FormatBezierPathCurveComponent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  __int128 v34;

  v3 = v2;
  v31 = a2;
  sub_1BAE83024();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8309C();
  sub_1BA4A2870(&qword_1EF2B2A18, (uint64_t (*)(uint64_t))sub_1BAE8309C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v27 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v27);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  if ((v11 & 1) != 0)
  {
    v14 = sub_1BB8740EC();
    v15 = *(_QWORD *)(v14 + 16);
    if (v15)
    {
      v16 = (_BYTE *)(v14 + 48);
      while (*v16 != 1)
      {
        v16 += 24;
        if (!--v15)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v16 - 2);
      v19 = *((_QWORD *)v16 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v31 = v12;
      MEMORY[0x1E0C80A78](v20);
      *(&v28 - 4) = (uint64_t)&_s10CodingKeysON_181;
      *(&v28 - 3) = sub_1BAE8311C();
      *(&v28 - 2) = sub_1BAE83160();
      *(&v28 - 1) = sub_1BAE831A4();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71220((uint64_t)&unk_1E726A8E0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA599590();
  v32 = 0uLL;
  v33 = 0;
  sub_1BB8740D4();
  v17 = v34;
  v32 = xmmword_1BB8A1A10;
  v33 = 0;
  sub_1BB8740D4();
  v29 = *((_QWORD *)&v34 + 1);
  v30 = v34;
  v32 = xmmword_1BB8D2D60;
  v33 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v6);
  v24 = v34;
  v25 = v31;
  *(_OWORD *)v31 = v17;
  v26 = v29;
  *(_QWORD *)(v25 + 16) = v30;
  *(_QWORD *)(v25 + 24) = v26;
  *(_OWORD *)(v25 + 32) = v24;
  v27 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t FormatBezierPathCurveComponent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t, uint64_t);

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v34 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v34 - v10;
  sub_1BAE831E8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = v1[1];
  v17 = v1[2];
  v37 = v1[3];
  v38 = v17;
  v18 = v1[4];
  v34 = v1[5];
  v35 = v18;
  v19 = a1[3];
  v20 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v19);
  v21 = sub_1BAE8309C();
  v22 = sub_1BA4A2870(&qword_1EF2B2A18, (uint64_t (*)(uint64_t))sub_1BAE8309C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBezierPathCurveComponent, v23, v19, (uint64_t)&type metadata for FormatBezierPathCurveComponent, v21, (uint64_t)&type metadata for FormatVersions.StarSky, v20, (uint64_t)v14, v22, (uint64_t)&off_1E734BDC0);
  v24 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v24 != -1)
    swift_once();
  v25 = sub_1BB86EB84();
  v26 = __swift_project_value_buffer(v25, (uint64_t)qword_1ED476C08);
  v40 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
  v40(v11, v26, v25);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0D3CC(v15, v16, 0, 0, 0, (uint64_t)v11, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v3)
  {
    v27 = (uint64_t)v39;
    v40(v39, v26, v25);
    swift_storeEnumTagMultiPayload();
    v28 = v38;
    swift_bridgeObjectRetain();
    v29 = v37;
    swift_bridgeObjectRetain();
    sub_1BAD0D3CC(v28, v29, 1, 0, 0, v27, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v27, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = (uint64_t)v36;
    v40(v36, v26, v25);
    swift_storeEnumTagMultiPayload();
    v31 = v35;
    swift_bridgeObjectRetain();
    v32 = v34;
    swift_bridgeObjectRetain();
    sub_1BAD0D3CC(v31, v32, 2, 0, 0, v30, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v30, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BAE831E8);
}

uint64_t sub_1BAD8AF50()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD8AF7C + 4 * byte_1BB8AE356[*v0]))(0x746E696F70, 0xE500000000000000);
}

uint64_t sub_1BAD8AF7C()
{
  return 0x506C6F72746E6F63;
}

uint64_t sub_1BAD8AFB0()
{
  return 1885433183;
}

uint64_t sub_1BAD8AFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE858C8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8AFE4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72534A8;
}

uint64_t sub_1BAD8AFF4()
{
  sub_1BAE83160();
  return sub_1BB874710();
}

uint64_t sub_1BAD8B01C()
{
  sub_1BAE83160();
  return sub_1BB87471C();
}

uint64_t FormatBezierPathQuadCurveComponent.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v23;
  _OWORD *v24;
  uint64_t v25;
  _OWORD *v26;
  __int128 v27;
  char v28;
  __int128 v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE832D8();
  v6 = v5;
  v7 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE83350();
  sub_1BA4A2870(&qword_1EF2B2A60, (uint64_t (*)(uint64_t))sub_1BAE83350, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v17 = *((_QWORD *)v15 - 2);
      v18 = *((_QWORD *)v15 - 1);
      v26 = v6;
      swift_bridgeObjectRetain_n();
      v19 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v19);
      *(&v25 - 4) = (uint64_t)&_s10CodingKeysON_180;
      *(&v25 - 3) = sub_1BAE833D0();
      *(&v25 - 2) = sub_1BAE83414();
      *(&v25 - 1) = sub_1BAE83458();
      swift_getKeyPath();
      swift_retain();
      v20 = sub_1BAE71220((uint64_t)&unk_1E726A908);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v21 = v17;
      *(_QWORD *)(v21 + 8) = v18;
      *(_QWORD *)(v21 + 16) = v20;
      *(_OWORD *)(v21 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v17, v18, 1);
      (*(void (**)(char *, _OWORD *))(v7 + 8))(v12, v26);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA599590();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v16 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BB8740D4();
  (*(void (**)(char *, _OWORD *))(v7 + 8))(v9, v6);
  v23 = v29;
  v24 = v26;
  *v26 = v16;
  v24[1] = v23;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBezierPathQuadCurveComponent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;

  v3 = v2;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v34 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - v8;
  sub_1BAE8349C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *v1;
  v14 = v1[1];
  v15 = v1[2];
  v32 = v1[3];
  v33 = v15;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  v18 = sub_1BAE83350();
  v19 = sub_1BA4A2870(&qword_1EF2B2A60, (uint64_t (*)(uint64_t))sub_1BAE83350, (uint64_t)&unk_1BB8FFC6C);
  v35 = v12;
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBezierPathQuadCurveComponent, v20, v16, (uint64_t)&type metadata for FormatBezierPathQuadCurveComponent, v18, (uint64_t)&type metadata for FormatVersions.StarSky, v17, (uint64_t)v12, v19, (uint64_t)&off_1E734BDC0);
  v21 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v21 != -1)
    swift_once();
  v22 = sub_1BB86EB84();
  v23 = __swift_project_value_buffer(v22, (uint64_t)qword_1ED476C08);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
  v24(v9, v23, v22);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0AD38(v13, v14, 0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v3)
  {
    v25 = (uint64_t)v35;
  }
  else
  {
    v26 = (uint64_t)v34;
    v24(v34, v23, v22);
    swift_storeEnumTagMultiPayload();
    v27 = v33;
    swift_bridgeObjectRetain();
    v28 = v32;
    swift_bridgeObjectRetain();
    v29 = (uint64_t)v35;
    sub_1BAD0AD38(v27, v28, 1, 0, 0, v26, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v26, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v25 = v29;
  }
  return sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BAE8349C);
}

uint64_t sub_1BAD8B698()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x506C6F72746E6F63;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x746E696F70;
}

uint64_t sub_1BAD8B6F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE85AA8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8B714(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253800;
}

uint64_t sub_1BAD8B724()
{
  sub_1BAE83414();
  return sub_1BB874710();
}

uint64_t sub_1BAD8B74C()
{
  sub_1BAE83414();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8B774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE85BFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8B798(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251CF8;
}

uint64_t sub_1BAD8B7A8()
{
  sub_1BA60E564();
  return sub_1BB874710();
}

uint64_t sub_1BAD8B7D0()
{
  sub_1BA60E564();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8B7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE85DFC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8B81C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72530C8;
}

uint64_t sub_1BAD8B82C()
{
  sub_1BA5D25F4();
  return sub_1BB874710();
}

uint64_t sub_1BAD8B854()
{
  sub_1BA5D25F4();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8B87C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD8B8B0 + 4 * byte_1BB8AE35F[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAD8B8B0()
{
  return 1701667182;
}

uint64_t sub_1BAD8B8C0()
{
  return 0x7470697263736564;
}

uint64_t sub_1BAD8B8E0()
{
  return 0x746E65746E6F63;
}

uint64_t sub_1BAD8B8F8()
{
  return 1885433183;
}

uint64_t sub_1BAD8B908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE85F38(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8B92C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251D20;
}

uint64_t sub_1BAD8B93C()
{
  sub_1BAE77AAC();
  return sub_1BB874710();
}

uint64_t sub_1BAD8B964()
{
  sub_1BAE77AAC();
  return sub_1BB87471C();
}

uint64_t FormatBindingDateTimeExpression.encode(to:)(_QWORD *a1)
{
  unint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  __int128 v31;
  char v32;
  char *v33;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  sub_1BAE83C54(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = v1[2];
  v27 = v1[1];
  v28 = v13;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE83B4C();
  v17 = sub_1BA4A2870(&qword_1ED3D1350, (uint64_t (*)(uint64_t))sub_1BAE83B4C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingDateTimeExpression, v18, v14, (uint64_t)&type metadata for FormatBindingDateTimeExpression, v16, (uint64_t)&type metadata for FormatVersions.Dawnburst, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BDE0);
  sub_1BA739250(v12);
  if (qword_1ED3C6D88 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C80);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0C4B8(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  sub_1BA6F5D74(v12);
  if (!v2)
  {
    v22 = (uint64_t)v33;
    v21(v33, v20, v19);
    swift_storeEnumTagMultiPayload();
    v24 = v27;
    v23 = v28;
    v25 = v27;
    sub_1BA75D96C(v27, v28);
    if (v25 != 13 && (sub_1BAE41BDC(v22, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v31 = xmmword_1BB8A1A10;
      v32 = 0;
      v29 = v24;
      v30 = v23;
      sub_1BAE83CCC();
      sub_1BA4A2870(&qword_1ED3AF028, (uint64_t (*)(uint64_t))sub_1BAE83CCC, MEMORY[0x1E0DED188]);
      sub_1BA946D6C();
      sub_1BB874464();
    }
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    sub_1BA7DE08C(v24, v23);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE83C54);
}

uint64_t sub_1BAD8BCC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE86158(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8BCE8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72535C0;
}

uint64_t sub_1BAD8BCF8()
{
  sub_1BA509E9C();
  return sub_1BB874710();
}

uint64_t sub_1BAD8BD20()
{
  sub_1BA509E9C();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8BD48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7ED6D8(*a1, *a2);
}

uint64_t sub_1BAD8BD60()
{
  sub_1BA4A7534();
  return sub_1BB872D0C();
}

uint64_t sub_1BAD8BDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE86294(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8BDD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253A58;
}

uint64_t sub_1BAD8BDE0()
{
  sub_1BA509A38();
  return sub_1BB874710();
}

uint64_t sub_1BAD8BE08()
{
  sub_1BA509A38();
  return sub_1BB87471C();
}

void sub_1BAD8BE30(char *a1)
{
  sub_1BB7F6964(*a1);
}

void sub_1BAD8BE3C()
{
  char *v0;

  sub_1BAB08D7C(0, *v0);
}

void sub_1BAD8BE48(uint64_t a1)
{
  char *v1;

  sub_1BA9D25AC(a1, *v1);
}

void sub_1BAD8BE50(uint64_t a1)
{
  char *v1;

  sub_1BAB08D7C(a1, *v1);
}

uint64_t FormatBindingFloatExpression.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  char v33;
  __int128 v34;
  char v35;

  v3 = v2;
  v29 = a2;
  sub_1BAE83D88();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE83E00();
  sub_1BA4A2870(&qword_1ED3AD9A8, (uint64_t (*)(uint64_t))sub_1BAE83E00, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_11:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  v10 = v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  v13 = v29;
  v14 = v6;
  v15 = v9;
  if ((v12 & 1) != 0)
  {
    v16 = sub_1BB8740EC();
    v17 = *(_QWORD *)(v16 + 16);
    if (v17)
    {
      v18 = (_BYTE *)(v16 + 48);
      while (*v18 != 1)
      {
        v18 += 24;
        if (!--v17)
          goto LABEL_7;
      }
      v22 = *((_QWORD *)v18 - 1);
      v29 = *((_QWORD *)v18 - 2);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      MEMORY[0x1E0C80A78](v23);
      *((_QWORD *)&v28 - 4) = &_s10CodingKeysON_176;
      *((_QWORD *)&v28 - 3) = sub_1BAE83E80();
      *((_QWORD *)&v28 - 2) = sub_1BAE83EC4();
      *((_QWORD *)&v28 - 1) = sub_1BAE83F08();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71220((uint64_t)&unk_1E726A9F8);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      v25 = v29;
      *(_QWORD *)v26 = v29;
      *(_QWORD *)(v26 + 8) = v22;
      *(_QWORD *)(v26 + 16) = v24;
      *(_OWORD *)(v26 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v25, v22, 1);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v14);
      goto LABEL_11;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE83F4C();
  v34 = 0uLL;
  v35 = 0;
  sub_1BB8740D4();
  v19 = v32;
  v28 = xmmword_1BB8A1A10;
  v34 = xmmword_1BB8A1A10;
  v35 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v32 = v28;
    v33 = 0;
    sub_1BA946E1C();
    sub_1BB8740D4();
    v21 = v30;
    v20 = v31;
  }
  else
  {
    v20 = 0;
    v21 = 13;
  }
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v14);
  *(_BYTE *)v13 = v19;
  *(_QWORD *)(v13 + 8) = v21;
  *(_QWORD *)(v13 + 16) = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBindingFloatExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  char v32;
  char *v33;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v33 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - v7;
  sub_1BAE83F90(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v13 = *(_QWORD *)(v1 + 16);
  v27 = *(_QWORD *)(v1 + 8);
  v28 = v13;
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE83E00();
  v17 = sub_1BA4A2870(&qword_1ED3AD9A8, (uint64_t (*)(uint64_t))sub_1BAE83E00, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingFloatExpression, v18, v14, (uint64_t)&type metadata for FormatBindingFloatExpression, v16, (uint64_t)&type metadata for FormatVersions.DawnburstF, v15, (uint64_t)v11, v17, (uint64_t)&off_1E734BCE0);
  if (qword_1ED3C4168 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476900);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v8, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0E594(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v22 = (uint64_t)v33;
    v21(v33, v20, v19);
    swift_storeEnumTagMultiPayload();
    v24 = v27;
    v23 = v28;
    v25 = v27;
    sub_1BAC6535C(v27);
    if (v25 != 13 && (sub_1BAE42D04(v22, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v31 = xmmword_1BB8A1A10;
      v32 = 0;
      v29 = v24;
      v30 = v23;
      sub_1BAE84008();
      sub_1BA4A2870(&qword_1ED3AEF70, (uint64_t (*)(uint64_t))sub_1BAE84008, MEMORY[0x1E0DED188]);
      sub_1BA946E64();
      sub_1BB874464();
    }
    sub_1BA4A2E80(v22, type metadata accessor for FormatVersionRequirement);
    sub_1BAC653C4(v24);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE83F90);
}

void sub_1BAD8C4FC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253268;
}

uint64_t sub_1BAD8C50C()
{
  sub_1BAE83EC4();
  return sub_1BB874710();
}

uint64_t sub_1BAD8C534()
{
  sub_1BAE83EC4();
  return sub_1BB87471C();
}

uint64_t FormatBindingFloatExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v3 = v2;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
  {
LABEL_12:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v9;
  if ((v11 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (unint64_t *)(v13 + 40);
      while (1)
      {
        v16 = *v15;
        if (*v15 >= 4)
          break;
        v15 += 2;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *(v15 - 1);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v20 = v19;
      *(_QWORD *)(v20 + 8) = v16;
      *(_QWORD *)(v20 + 16) = &unk_1E726AA20;
      *(_OWORD *)(v20 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA98D234(v19, v16);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      goto LABEL_12;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BAE84080();
  v24 = 0;
  v25 = 0;
  sub_1BB8740D4();
  if ((_BYTE)v23)
  {
    if (v23 == 1)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v17 = 0;
      v18 = 12;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      v17 = 0;
      v18 = 13;
    }
  }
  else
  {
    v23 = xmmword_1BB87FC90;
    sub_1BAE840C4();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    v18 = v24;
    v17 = v25;
  }
  v22 = v26;
  *v26 = v18;
  v22[1] = v17;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBindingFloatExpressionLogic.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - v10;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v1;
  v16 = v1[1];
  v18 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v18);
  v19 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingFloatExpressionLogic, v20, v18, (uint64_t)&type metadata for FormatBindingFloatExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.DawnburstF, v17, (uint64_t)v14, v19, (uint64_t)&off_1E734BCE0);
  if (v15 == 12)
  {
    if (qword_1ED3C4168 != -1)
      swift_once();
    v24 = sub_1BB86EB84();
    v25 = __swift_project_value_buffer(v24, (uint64_t)qword_1ED476900);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v25, v24);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD74620(1, (uint64_t)v8);
    v23 = (uint64_t)v8;
    goto LABEL_9;
  }
  if (v15 == 13)
  {
    if (qword_1ED3C4168 != -1)
      swift_once();
    v21 = sub_1BB86EB84();
    v22 = __swift_project_value_buffer(v21, (uint64_t)qword_1ED476900);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v5, v22, v21);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD74620(2, (uint64_t)v5);
    v23 = (uint64_t)v5;
LABEL_9:
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    return sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  }
  v27 = qword_1ED3C4168;
  swift_retain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476900);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v11, v29, v28);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE0064(0, v15, v16, (uint64_t)v11);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatVersionRequirement);
  sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
  return sub_1BAC653C4(v15);
}

uint64_t sub_1BAD8CBB8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD8CC58()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD8CCD4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD8CD70@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA609110();
  *a1 = result;
  return result;
}

void sub_1BAD8CDA4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE700000000000000;
  v4 = 0xE700000000000000;
  v5 = 0x7974706D457369;
  if (v2 != 1)
  {
    v5 = 0x7974706D45746F6ELL;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x657261706D6F63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAD8CE04()
{
  sub_1BAEE2E60();
  return sub_1BB872D60();
}

uint64_t sub_1BAD8CE60()
{
  sub_1BAEE2E60();
  return sub_1BB872D0C();
}

uint64_t FormatBindingFloatExpressionLogicCompare.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  __int128 v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v26 = a2;
  sub_1BAE84108();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE84180();
  sub_1BA4A2870(&qword_1ED3ADA08, (uint64_t (*)(uint64_t))sub_1BAE84180, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v26;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v26 = v13;
      MEMORY[0x1E0C80A78](v21);
      *(&v26 - 4) = (uint64_t)&_s10CodingKeysON_175;
      *(&v26 - 3) = sub_1BAE84200();
      *(&v26 - 2) = sub_1BAE84244();
      *(&v26 - 1) = sub_1BAE84288();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726AA70);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA63BE34();
  v27 = 0uLL;
  v28 = 0;
  sub_1BB8740D4();
  v18 = v29;
  v27 = xmmword_1BB8A1A10;
  v28 = 0;
  sub_1BA61BC14();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  v25 = v29;
  *(_BYTE *)v12 = v18;
  *(_QWORD *)(v12 + 8) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBindingFloatExpressionLogicCompare.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  char *v26;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v26 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v24 - v7;
  sub_1BAE842CC(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v25 = *(_QWORD *)(v1 + 8);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE84180();
  v16 = sub_1BA4A2870(&qword_1ED3ADA08, (uint64_t (*)(uint64_t))sub_1BAE84180, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingFloatExpressionLogicCompare, v17, v13, (uint64_t)&type metadata for FormatBindingFloatExpressionLogicCompare, v15, (uint64_t)&type metadata for FormatVersions.DawnburstF, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BCE0);
  if (qword_1ED3C4168 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476900);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0940C(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v26;
    v20(v26, v19, v18);
    swift_storeEnumTagMultiPayload();
    v22 = v25;
    swift_retain();
    sub_1BAD09568(v22, 1, 0, 0, v21, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
    swift_release();
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE842CC);
}

uint64_t sub_1BAD8D4AC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x65756C6176;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x726F74617265706FLL;
}

uint64_t sub_1BAD8D4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE863D8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8D520(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253A30;
}

uint64_t sub_1BAD8D530()
{
  sub_1BAE84244();
  return sub_1BB874710();
}

uint64_t sub_1BAD8D558()
{
  sub_1BAE84244();
  return sub_1BB87471C();
}

void sub_1BAD8D580(char *a1)
{
  sub_1BB7FFECC(*a1);
}

void sub_1BAD8D58C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD8D5D8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD8D63C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD8D678()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD8D6C8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD8D710()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD8D774@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA5FB614();
  *a1 = result;
  return result;
}

uint64_t sub_1BAD8D7A8()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAD8D7D8 + 4 * byte_1BB8AE390[*v0]))();
}

void sub_1BAD8D7D8(_QWORD *a1@<X8>)
{
  *a1 = 0x6575737369;
  a1[1] = 0xE500000000000000;
}

void sub_1BAD8D7F0(_QWORD *a1@<X8>)
{
  *a1 = 0x70756F7267;
  a1[1] = 0xE500000000000000;
}

void sub_1BAD8D808(_QWORD *a1@<X8>)
{
  *a1 = 0x6E6F6974706FLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BAD8D820()
{
  sub_1BAEE1ED4();
  return sub_1BB872D60();
}

uint64_t sub_1BAD8D87C()
{
  sub_1BAEE1ED4();
  return sub_1BB872D0C();
}

uint64_t FormatBindingFontSize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  double v16;
  void *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  double v24;
  __int16 v25;
  __int128 v26;
  uint64_t v27;
  double v28;
  __int16 v29;
  __int128 v30;
  char v31;
  __int128 v32;
  char v33;

  v27 = a2;
  sub_1BAE843BC();
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE84434();
  sub_1BA4A2870(&qword_1ED3AD8B8, (uint64_t (*)(uint64_t))sub_1BAE84434, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
    v17 = v2;
LABEL_13:
    sub_1BA7F8B78(a1, (uint64_t)v17);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v9 = sub_1BB872874();
  v10 = Dictionary<>.errorOnUnknownKeys.getter(v9);
  swift_bridgeObjectRelease();
  v11 = v27;
  v12 = v8;
  if ((v10 & 1) != 0)
  {
    v13 = sub_1BB8740EC();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v15 = (_BYTE *)(v13 + 48);
      while (*v15 != 1)
      {
        v15 += 24;
        if (!--v14)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v15 - 2);
      v20 = *((_QWORD *)v15 - 1);
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v27 = v5;
      MEMORY[0x1E0C80A78](v21);
      *((_QWORD *)&v26 - 4) = &_s10CodingKeysON_174;
      *((_QWORD *)&v26 - 3) = sub_1BAE844B4();
      *((_QWORD *)&v26 - 2) = sub_1BAE844F8();
      *((_QWORD *)&v26 - 1) = sub_1BAE8453C();
      swift_getKeyPath();
      swift_retain();
      v22 = sub_1BAE71220((uint64_t)&unk_1E726AA98);
      swift_release_n();
      sub_1BA98D1F0();
      v17 = (void *)swift_allocError();
      *(_QWORD *)v23 = v19;
      *(_QWORD *)(v23 + 8) = v20;
      *(_QWORD *)(v23 + 16) = v22;
      *(_OWORD *)(v23 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v27);
      goto LABEL_13;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v32 = 0uLL;
  v33 = 0;
  v16 = 16.0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = 0uLL;
    v31 = 0;
    sub_1BA689CD8();
    sub_1BB8740D4();
    v16 = v28;
  }
  v26 = xmmword_1BB8A1A10;
  v32 = xmmword_1BB8A1A10;
  v33 = 0;
  if ((sub_1BB8740F8() & 1) != 0)
  {
    v30 = v26;
    v31 = 0;
    sub_1BA610304();
    sub_1BB8740D4();
    v24 = v28;
    v25 = v29;
  }
  else
  {
    v24 = 0.0;
    v25 = 3072;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  *(double *)v11 = v16;
  *(double *)(v11 + 8) = v24;
  *(_WORD *)(v11 + 16) = v25;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBindingFontSize.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  __int16 v22;
  uint64_t v24;
  int v25;
  uint64_t v26;
  __int16 v27;
  __int128 v28;
  char v29;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - v8;
  sub_1BAE84580(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(double *)v1;
  v24 = *(_QWORD *)(v1 + 8);
  v25 = *(unsigned __int16 *)(v1 + 16);
  v14 = a1[3];
  v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  v16 = sub_1BAE84434();
  v17 = sub_1BA4A2870(&qword_1ED3AD8B8, (uint64_t (*)(uint64_t))sub_1BAE84434, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingFontSize, v18, v14, (uint64_t)&type metadata for FormatBindingFontSize, v16, (uint64_t)&type metadata for FormatVersions.JazzkonC, v15, (uint64_t)v12, v17, (uint64_t)&off_1E734BD80);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v19 = sub_1BB86EB84();
  v20 = __swift_project_value_buffer(v19, (uint64_t)qword_1ED476C20);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21(v9, v20, v19);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD2BFA0(0, 0, 0, v13, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE4B9BC, (uint64_t (*)(uint64_t))sub_1BAE845F8, &qword_1ED3AEAE0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21(v6, v20, v19);
    swift_storeEnumTagMultiPayload();
    v22 = v25;
    if ((v25 & 0xFF00) != 0xC00 && (sub_1BAE4B9BC((uint64_t)v6, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v28 = xmmword_1BB8A1A10;
      v29 = 0;
      v26 = v24;
      v27 = v22;
      sub_1BAE845F8();
      sub_1BA4A2870(&qword_1ED3AEAE0, (uint64_t (*)(uint64_t))sub_1BAE845F8, MEMORY[0x1E0DED188]);
      sub_1BA6745B0();
      sub_1BB874464();
    }
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE84580);
}

uint64_t sub_1BAD8DFAC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x676E696C616373;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 1702521203;
}

uint64_t sub_1BAD8DFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE86514(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8E01C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252160;
}

uint64_t sub_1BAD8E02C()
{
  sub_1BAE844F8();
  return sub_1BB874710();
}

uint64_t sub_1BAD8E054()
{
  sub_1BAE844F8();
  return sub_1BB87471C();
}

void sub_1BAD8E07C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253290;
}

uint64_t sub_1BAD8E08C()
{
  sub_1BA58E7E8();
  return sub_1BB874710();
}

uint64_t sub_1BAD8E0B4()
{
  sub_1BA58E7E8();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8E0DC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7ED0E4(*a1, *a2);
}

void sub_1BAD8E0F4(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7974706D457369;
  if (*v1)
    v2 = 0x7974706D45746F6ELL;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAD8E134()
{
  sub_1BA820F34();
  return sub_1BB872D0C();
}

uint64_t FormatBindingLayeredMediaExpression.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v23;
  char *v24;
  __int128 v25;
  char v26;
  int v27;
  char v28;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v24 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BAE84A60(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_BYTE *)v1;
  v27 = *(unsigned __int8 *)(v1 + 1);
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE84958();
  v16 = sub_1BA4A2870(&qword_1ED3D1400, (uint64_t (*)(uint64_t))sub_1BAE84958, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingLayeredMediaExpression, v17, v13, (uint64_t)&type metadata for FormatBindingLayeredMediaExpression, v15, (uint64_t)&type metadata for FormatVersions.AzdenC, v14, (uint64_t)v11, v16, (uint64_t)&off_1E734BCC0);
  if (qword_1ED3C6D38 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476BA8);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v8, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD0AA7C(v12, 0, 0, 0, (uint64_t)v8, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v21 = (uint64_t)v24;
    v20(v24, v19, v18);
    swift_storeEnumTagMultiPayload();
    if ((v27 & 1) == 0 && (sub_1BAE41254(v21, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v25 = xmmword_1BB8A1A10;
      v26 = 0;
      v28 = 0;
      sub_1BAE84AD8();
      sub_1BA4A2870(&qword_1ED3AF118, (uint64_t (*)(uint64_t))sub_1BAE84AD8, MEMORY[0x1E0DED188]);
      sub_1BA946B50();
      v21 = (uint64_t)v24;
      sub_1BB874464();
    }
    sub_1BA4A2E80(v21, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BAE84A60);
}

void sub_1BAD8E48C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253850;
}

uint64_t sub_1BAD8E49C()
{
  sub_1BA4DDAFC();
  return sub_1BB874710();
}

uint64_t sub_1BAD8E4C4()
{
  sub_1BA4DDAFC();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8E4EC@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

uint64_t sub_1BAD8E4F8()
{
  sub_1BAEE2BB8();
  return sub_1BB872D60();
}

uint64_t sub_1BAD8E554()
{
  sub_1BAEE2BB8();
  return sub_1BB872D0C();
}

uint64_t FormatBindingShareAttributionExpression.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  __int128 v22;
  char v23;
  int v24;
  char v25;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - v8;
  sub_1BAE84CD0(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BAE84BC8();
  v16 = sub_1BA4A2870(&qword_1ED3D1440, (uint64_t (*)(uint64_t))sub_1BAE84BC8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingShareAttributionExpression, v17, v13, (uint64_t)&type metadata for FormatBindingShareAttributionExpression, v15, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v12, v16, (uint64_t)&off_1E734BDC0);
  if (qword_1ED3C6D58 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C08);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v9, v19, v18);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD09848(0, 0, 0, (uint64_t)v9, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
  if (!v2)
  {
    v20(v6, v19, v18);
    swift_storeEnumTagMultiPayload();
    if ((v24 & 1) == 0 && (sub_1BAE40AB4((uint64_t)v6, 1, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v22 = xmmword_1BB8A1A10;
      v23 = 0;
      v25 = 0;
      sub_1BAE84D48();
      sub_1BA4A2870(&qword_1ED3AF178, (uint64_t (*)(uint64_t))sub_1BAE84D48, MEMORY[0x1E0DED188]);
      sub_1BA946C48();
      sub_1BB874464();
    }
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FormatVersionRequirement);
  }
  return sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BAE84CD0);
}

void sub_1BAD8E898(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72539E0;
}

uint64_t sub_1BAD8E8A8()
{
  sub_1BA4DDF0C();
  return sub_1BB874710();
}

uint64_t sub_1BAD8E8D0()
{
  sub_1BA4DDF0C();
  return sub_1BB87471C();
}

uint64_t FormatBindingShareAttributionExpressionLogic.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BA58F088(a1, (uint64_t)sub_1BAE84DC0, (uint64_t)&_s10CodingTypeON_121, (uint64_t)&unk_1E726AB38, a2);
}

uint64_t FormatBindingShareAttributionExpressionLogic.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v23 - v7;
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v1;
  v13 = a1[3];
  v14 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v13);
  v15 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBindingShareAttributionExpressionLogic, v16, v13, (uint64_t)&type metadata for FormatBindingShareAttributionExpressionLogic, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v14, (uint64_t)v11, v15, (uint64_t)&off_1E734BDC0);
  if ((v12 & 1) != 0)
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v17 = sub_1BB86EB84();
    v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73BEC(1, (uint64_t)v5);
    v19 = (uint64_t)v5;
  }
  else
  {
    if (qword_1ED3C6D58 != -1)
      swift_once();
    v20 = sub_1BB86EB84();
    v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C08);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v8, v21, v20);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BAD73BEC(0, (uint64_t)v8);
    v19 = (uint64_t)v8;
  }
  sub_1BA4A2E80(v19, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

uint64_t sub_1BAD8EB80()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD8EC00()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD8EC5C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD8ECD8@<X0>(char *a1@<X8>)
{
  return sub_1BA4E2654(a1);
}

uint64_t sub_1BAD8ECE4()
{
  sub_1BAEE2EA4();
  return sub_1BB872D60();
}

uint64_t sub_1BAD8ED40()
{
  sub_1BAEE2EA4();
  return sub_1BB872D0C();
}

void sub_1BAD8ED8C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72530F0;
}

uint64_t sub_1BAD8ED9C()
{
  sub_1BA5B3FF0();
  return sub_1BB874710();
}

uint64_t sub_1BAD8EDC4()
{
  sub_1BA5B3FF0();
  return sub_1BB87471C();
}

void sub_1BAD8EDEC(char *a1)
{
  sub_1BB7EE9BC(*a1);
}

void sub_1BAD8EDF8()
{
  char *v0;

  sub_1BAB077FC(0, *v0);
}

void sub_1BAD8EE04(uint64_t a1)
{
  char *v1;

  sub_1BA9D12DC(a1, *v1);
}

void sub_1BAD8EE0C(uint64_t a1)
{
  char *v1;

  sub_1BAB077FC(a1, *v1);
}

uint64_t sub_1BAD8EE14()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x726F74617265706FLL;
  if (*v0 != 1)
    v1 = 1885433183;
  if (*v0)
    return v1;
  else
    return 0x676E69646E6962;
}

uint64_t sub_1BAD8EE68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE86648(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8EE8C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253648;
}

uint64_t sub_1BAD8EE9C()
{
  sub_1BAE79A84();
  return sub_1BB874710();
}

uint64_t sub_1BAD8EEC4()
{
  sub_1BAE79A84();
  return sub_1BB87471C();
}

void sub_1BAD8EEEC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253698;
}

uint64_t sub_1BAD8EEFC()
{
  sub_1BA4EBFD4();
  return sub_1BB874710();
}

uint64_t sub_1BAD8EF24()
{
  sub_1BA4EBFD4();
  return sub_1BB87471C();
}

void sub_1BAD8EF4C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253670;
}

uint64_t sub_1BAD8EF5C()
{
  sub_1BAE79560();
  return sub_1BB874710();
}

uint64_t sub_1BAD8EF84()
{
  sub_1BAE79560();
  return sub_1BB87471C();
}

uint64_t sub_1BAD8EFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8678C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8EFD0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252E50;
}

uint64_t sub_1BAD8EFE0()
{
  sub_1BA515960();
  return sub_1BB874710();
}

uint64_t sub_1BAD8F008()
{
  sub_1BA515960();
  return sub_1BB87471C();
}

void sub_1BAD8F030(char *a1)
{
  sub_1BB7EF818(*a1);
}

void sub_1BAD8F03C()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD8F088()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD8F0F0()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD8F12C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD8F180()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD8F1C8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t *FormatBlock.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5C050C(a1);
}

uint64_t sub_1BAD8F244@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE86D30(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8F268(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250890;
}

uint64_t sub_1BAD8F278()
{
  sub_1BA5C0BA0();
  return sub_1BB874710();
}

uint64_t sub_1BAD8F2A0()
{
  sub_1BA5C0BA0();
  return sub_1BB87471C();
}

uint64_t FormatBlockExpression.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE86C40(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAE86B38();
  v14 = sub_1BA4A2870(&qword_1ED3D0F60, (uint64_t (*)(uint64_t))sub_1BAE86B38, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBlockExpression, v15, v11, (uint64_t)&type metadata for FormatBlockExpression, v13, (uint64_t)&type metadata for FormatVersions.StarSky, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BDC0);
  v16 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C08);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD185AC(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE86C40);
}

uint64_t sub_1BAD8F4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE86F54(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8F4F0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252188;
}

uint64_t sub_1BAD8F500()
{
  sub_1BA4FC0EC();
  return sub_1BB874710();
}

uint64_t sub_1BAD8F528()
{
  sub_1BA4FC0EC();
  return sub_1BB87471C();
}

uint64_t FormatBlockNode.__allocating_init(from:)(_QWORD *a1)
{
  return sub_1BA5A3F28(a1);
}

uint64_t FormatBlockNode.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t *v55;
  char *v56;
  _QWORD *v57;
  __int128 v58;
  char v59;
  char v60;
  __int128 v61;
  char v62;
  uint64_t v63;

  v2 = v1;
  v4 = *v1;
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v52 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v53 = (char *)&v50 - v8;
  MEMORY[0x1E0C80A78](v9);
  v54 = (char *)&v50 - v10;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v50 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v50 - v15;
  sub_1BAE87058(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = a1[3];
  v21 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v20);
  v22 = sub_1BAE87148();
  v23 = sub_1BA4A2870(&qword_1ED3D15C0, (uint64_t (*)(uint64_t))sub_1BAE87148, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC(v4, v24, v20, v4, v22, (uint64_t)&type metadata for FormatVersions.StarSky, v21, (uint64_t)v19, v23, (uint64_t)&off_1E734BDC0);
  swift_beginAccess();
  v25 = v2[2];
  v26 = v2[3];
  v55 = v2;
  v27 = qword_1ED3C6D58;
  swift_bridgeObjectRetain();
  if (v27 != -1)
    swift_once();
  v28 = sub_1BB86EB84();
  v29 = __swift_project_value_buffer(v28, (uint64_t)qword_1ED476C08);
  v30 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
  v30(v16, v29, v28);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v31 = v25;
  v32 = (uint64_t)v19;
  v33 = v56;
  sub_1BAD265E8(v31, v26, 0, 0, 0, (uint64_t)v16, (uint64_t)sub_1BA90CF04, 0, (uint64_t)sub_1BAEFCC00, (uint64_t)sub_1BAE559DC, (uint64_t (*)(uint64_t))sub_1BAE870D0, &qword_1ED3AF320);
  if (v33)
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    v34 = (uint64_t)v13;
    v35 = v55;
    swift_beginAccess();
    v56 = v19;
    v36 = v29;
    v37 = v35[4];
    v38 = v35[5];
    v51 = v36;
    ((void (*)(uint64_t))v30)(v34);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    sub_1BAD217F8(v37, v38, 1, 0, 0, v34, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v34, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    LOBYTE(v37) = *((_BYTE *)v35 + 48);
    v40 = (uint64_t)v54;
    v30(v54, v51, v28);
    swift_storeEnumTagMultiPayload();
    if ((v37 & 1) == 0 && (sub_1BAE559DC(v40, 2, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v61 = xmmword_1BB8D2D60;
      v62 = 0;
      v60 = 0;
      sub_1BAE870D0();
      sub_1BA4A2870(&qword_1ED3AF320, (uint64_t (*)(uint64_t))sub_1BAE870D0, MEMORY[0x1E0DED188]);
      sub_1BB874464();
    }
    sub_1BA4A2E80(v40, type metadata accessor for FormatVersionRequirement);
    swift_beginAccess();
    v41 = (uint64_t)v53;
    v42 = v51;
    v30(v53, v51, v28);
    swift_storeEnumTagMultiPayload();
    v43 = swift_bridgeObjectRetain();
    v32 = (uint64_t)v56;
    sub_1BAD2D3A4(v43, 3, 0, 0);
    sub_1BA4A2E80(v41, type metadata accessor for FormatVersionRequirement);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v44 = v35[8];
    v45 = (uint64_t)v52;
    v30(v52, v42, v28);
    swift_storeEnumTagMultiPayload();
    v46 = *(_QWORD *)(v44 + 16);
    swift_bridgeObjectRetain();
    if (v46 && (sub_1BAE559DC(v45, 4, 0, 0, (uint64_t)sub_1BA90CF04, 0) & 1) != 0)
    {
      v58 = xmmword_1BB8D2D90;
      v59 = 0;
      v47 = swift_bridgeObjectRetain();
      v48 = sub_1BA67F4CC(v47);
      swift_bridgeObjectRelease();
      v57 = v48;
      swift_retain();
      sub_1BA67FABC((uint64_t *)&v57, sub_1BA67FB34, sub_1BA6801F8);
      swift_release();
      v63 = (uint64_t)v57;
      sub_1BAE870D0();
      sub_1BA4A2870(&qword_1ED3AF320, (uint64_t (*)(uint64_t))sub_1BAE870D0, MEMORY[0x1E0DED188]);
      v49 = MEMORY[0x1E0DEA968];
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA67F470((unint64_t *)&qword_1ED39DA10, (unint64_t *)&qword_1ED3B95C0, v49, MEMORY[0x1E0DEA970]);
      sub_1BB874464();
      swift_release();
      v32 = (uint64_t)v56;
      v45 = (uint64_t)v52;
    }
    sub_1BA4A2E80(v45, type metadata accessor for FormatVersionRequirement);
  }
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))sub_1BAE87058);
}

uint64_t sub_1BAD8FC80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8AECC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD8FCA4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250C68;
}

uint64_t sub_1BAD8FCB4()
{
  sub_1BA5A45C8();
  return sub_1BB874710();
}

uint64_t sub_1BAD8FCDC()
{
  sub_1BA5A45C8();
  return sub_1BB87471C();
}

uint64_t FormatBlurEffectStyle.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD v43[16];
  uint64_t v44;
  uint64_t v45;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v43[14] = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v43[13] = (char *)v43 - v6;
  MEMORY[0x1E0C80A78](v7);
  v43[12] = (char *)v43 - v8;
  MEMORY[0x1E0C80A78](v9);
  v43[11] = (char *)v43 - v10;
  MEMORY[0x1E0C80A78](v11);
  v43[10] = (char *)v43 - v12;
  MEMORY[0x1E0C80A78](v13);
  v43[9] = (char *)v43 - v14;
  MEMORY[0x1E0C80A78](v15);
  v43[8] = (char *)v43 - v16;
  MEMORY[0x1E0C80A78](v17);
  v43[7] = (char *)v43 - v18;
  MEMORY[0x1E0C80A78](v19);
  v43[6] = (char *)v43 - v20;
  MEMORY[0x1E0C80A78](v21);
  v43[5] = (char *)v43 - v22;
  MEMORY[0x1E0C80A78](v23);
  v43[4] = (char *)v43 - v24;
  MEMORY[0x1E0C80A78](v25);
  v43[3] = (char *)v43 - v26;
  MEMORY[0x1E0C80A78](v27);
  v43[2] = (char *)v43 - v28;
  MEMORY[0x1E0C80A78](v29);
  v43[1] = (char *)v43 - v30;
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  v34 = (char *)v43 - v33;
  v35 = *v1;
  v43[15] = a1;
  v44 = v35;
  v36 = a1[3];
  v37 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v36);
  if (qword_1ED3C6D40 != -1)
    swift_once();
  v38 = sub_1BB86EB84();
  v39 = __swift_project_value_buffer(v38, (uint64_t)qword_1ED476BC0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v34, v39, v38);
  v40 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v41 = v45;
  sub_1BA69F160((uint64_t)v34, (uint64_t)sub_1BA90CF04, 0, v36, v37);
  if (!v41)
  {
    v45 = v40;
    sub_1BA4A2E80((uint64_t)v34, type metadata accessor for FormatVersionRequirement);
    __asm { BR              X9 }
  }
  return sub_1BA4A2E80((uint64_t)v34, type metadata accessor for FormatVersionRequirement);
}

void sub_1BAD9060C(char *a1)
{
  sub_1BB7FFC9C(*a1);
}

void sub_1BAD90618()
{
  char *v0;

  sub_1BAB0ABC0(0, *v0);
}

void sub_1BAD90624(uint64_t a1)
{
  char *v1;

  sub_1BA9D3DEC(a1, *v1);
}

void sub_1BAD9062C(uint64_t a1)
{
  char *v1;

  sub_1BAB0ABC0(a1, *v1);
}

uint64_t sub_1BAD90634@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8B170(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD90658(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250938;
}

uint64_t sub_1BAD90668()
{
  sub_1BA61BBD0();
  return sub_1BB874710();
}

uint64_t sub_1BAD90690()
{
  sub_1BA61BBD0();
  return sub_1BB87471C();
}

uint64_t FormatBoxNodeResize.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  char v28;

  v3 = v2;
  v27[0] = a2;
  sub_1BAE87294();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE8730C();
  sub_1BA4A2870(&qword_1ED3AD878, (uint64_t (*)(uint64_t))sub_1BAE8730C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v27[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v27[0] = v13;
      MEMORY[0x1E0C80A78](v23);
      v27[-4] = &_s10CodingKeysON_166;
      v27[-3] = sub_1BAE8738C();
      v27[-2] = sub_1BAE873D0();
      v27[-1] = sub_1BAE87414();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71130((uint64_t)&unk_1E726ACF0);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v27[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27[1] = 0;
  v27[2] = 0;
  v28 = 0;
  v18 = sub_1BB874098();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  v12[1] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBoxNodeResize.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE87458(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAE8730C();
  v14 = sub_1BA4A2870(&qword_1ED3AD878, (uint64_t (*)(uint64_t))sub_1BAE8730C, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBoxNodeResize, v15, v11, (uint64_t)&type metadata for FormatBoxNodeResize, v13, (uint64_t)&type metadata for FormatVersions.DawnburstC, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BCA0);
  v16 = qword_1ED3C6D00;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476B48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD1C960(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE87458);
}

void sub_1BAD90BB0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251920;
}

uint64_t sub_1BAD90BC0()
{
  sub_1BAE873D0();
  return sub_1BB874710();
}

uint64_t sub_1BAD90BE8()
{
  sub_1BAE873D0();
  return sub_1BB87471C();
}

uint64_t sub_1BAD90C10()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD90C44 + 4 * byte_1BB8AE3FE[*v0]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAD90C44()
{
  return 1701734764;
}

uint64_t sub_1BAD90C54()
{
  return 0x6E6D756C6F63;
}

uint64_t sub_1BAD90C68()
{
  return 0x68746150656C6966;
}

uint64_t sub_1BAD90C80()
{
  return 0x646C696863;
}

uint64_t sub_1BAD90C94()
{
  return 1885433183;
}

uint64_t sub_1BAD90CA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8B43C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD90CC8(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251D48;
}

uint64_t sub_1BAD90CD8()
{
  sub_1BAE75AF0();
  return sub_1BB874710();
}

uint64_t sub_1BAD90D00()
{
  sub_1BAE75AF0();
  return sub_1BB87471C();
}

uint64_t FormatBundle.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  char v28;

  v3 = v2;
  v27[0] = a2;
  sub_1BAE87548();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE875C0();
  sub_1BA4A2870(&qword_1ED3D14E0, (uint64_t (*)(uint64_t))sub_1BAE875C0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (uint64_t *)v27[0];
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v21 = *((_QWORD *)v17 - 2);
      v22 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v23 = swift_bridgeObjectRelease();
      v27[0] = v13;
      MEMORY[0x1E0C80A78](v23);
      v27[-4] = &_s14descr1E72CC7B9O10CodingKeysON;
      v27[-3] = sub_1BAE87640();
      v27[-2] = sub_1BAE87684();
      v27[-1] = sub_1BAE876C8();
      swift_getKeyPath();
      swift_retain();
      v24 = sub_1BAE71130((uint64_t)&unk_1E726AD18);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v25 = v21;
      *(_QWORD *)(v25 + 8) = v22;
      *(_QWORD *)(v25 + 16) = v24;
      *(_OWORD *)(v25 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v21, v22, 1);
      (*(void (**)(char *, uint64_t))(v27[0] + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  v27[1] = 0;
  v27[2] = 0;
  v28 = 0;
  v18 = sub_1BB874098();
  v20 = v19;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v18;
  v12[1] = v20;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatBundle.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE8770C(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v9 = v1[1];
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BAE875C0();
  v14 = sub_1BA4A2870(&qword_1ED3D14E0, (uint64_t (*)(uint64_t))sub_1BAE875C0, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatBundle, v15, v11, (uint64_t)&type metadata for FormatBundle, v13, (uint64_t)&type metadata for FormatVersions.StarSkyE, v12, (uint64_t)v8, v14, (uint64_t)&off_1E734BDA0);
  v16 = qword_1ED3C6D78;
  swift_bridgeObjectRetain();
  if (v16 != -1)
    swift_once();
  v17 = sub_1BB86EB84();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476C68);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v5, v18, v17);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD23C7C(v10, v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE8770C);
}

uint64_t sub_1BAD91220()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BAD91258@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAEBFED4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD9127C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250960;
}

uint64_t sub_1BAD9128C()
{
  sub_1BAE87684();
  return sub_1BB874710();
}

uint64_t sub_1BAD912B4()
{
  sub_1BAE87684();
  return sub_1BB87471C();
}

uint64_t sub_1BAD912DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8B698(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD91300(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251230;
}

uint64_t sub_1BAD91310()
{
  sub_1BA525174();
  return sub_1BB874710();
}

uint64_t sub_1BAD91338()
{
  sub_1BA525174();
  return sub_1BB87471C();
}

uint64_t sub_1BAD91360(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F9DF0(*a1, *a2);
}

uint64_t sub_1BAD9136C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD91410()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAD91490()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD91530(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEB000000006F6974;
  v4 = 0xEA00000000006F69;
  v5 = 0x7461526874646977;
  if (v2 != 1)
  {
    v5 = 1702521203;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6152746867696568;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAD91594()
{
  sub_1BA4A5954();
  return sub_1BB872D0C();
}

uint64_t sub_1BAD915E0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD9161C + 4 * byte_1BB8AE408[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAD9161C()
{
  return 1702521203;
}

uint64_t sub_1BAD9162C()
{
  return 0x657A69736572;
}

uint64_t sub_1BAD91640()
{
  return 0x656D7473756A6461;
}

uint64_t sub_1BAD91664()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BAD91678()
{
  return 0x696C696269736976;
}

unint64_t sub_1BAD91694()
{
  return 0xD000000000000018;
}

unint64_t sub_1BAD91750()
{
  return 0xD000000000000011;
}

uint64_t sub_1BAD9176C()
{
  return 0x6F6974616D696E61;
}

uint64_t sub_1BAD9178C()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BAD917C8()
{
  return 0x7449656372756F73;
}

uint64_t sub_1BAD917E8()
{
  return 1885433183;
}

uint64_t sub_1BAD917F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8B818(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD9181C(_BYTE *a1@<X8>)
{
  *a1 = 20;
}

void sub_1BAD91828(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724D648;
}

uint64_t sub_1BAD91838()
{
  sub_1BA5C2B60();
  return sub_1BB874710();
}

uint64_t sub_1BAD91860()
{
  sub_1BA5C2B60();
  return sub_1BB87471C();
}

uint64_t sub_1BAD91888(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_1BADFFEB8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_1BA80CB88);
}

uint64_t sub_1BAD91894(uint64_t a1, uint64_t a2)
{
  return sub_1BADFFF50(a1, a2, (void (*)(uint64_t))sub_1BA80CB88);
}

uint64_t sub_1BAD918A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BADFFFC0(a1, a2, a3, (void (*)(_QWORD))sub_1BA80CB88);
}

uint64_t sub_1BAD918AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BAE0000C(a1, a2, a3, (void (*)(uint64_t))sub_1BA80CB88);
}

void FormatButtonNodeBinding.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v1;
  v11 = a1[3];
  v12 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v11);
  v13 = sub_1BA6B8518();
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatButtonNodeBinding, v14, v11, (uint64_t)&type metadata for FormatButtonNodeBinding, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t)&type metadata for FormatVersions.StarSky, v12, (uint64_t)v9, v13, (uint64_t)&off_1E734BDC0);
  __asm { BR              X10 }
}

uint64_t sub_1BAD91A14()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_1ED3C6D58 != -1)
    swift_once();
  v3 = sub_1BB86EB84();
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1ED476C08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(v2, v4, v3);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BACE9B40(0, v0 & 1, v2);
  sub_1BA4A2E80(v2, type metadata accessor for FormatVersionRequirement);
  return sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))sub_1BA6EE1B8);
}

void sub_1BAD91CB0(char *a1)
{
  sub_1BB7F6820(*a1);
}

void sub_1BAD91CBC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD91D08()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAD91D6C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAD91DA8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAD91DF8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAD91E40()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAD91EA4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAD91ED4 + 4 * byte_1BB8AE462[*v0]))();
}

void sub_1BAD91ED4(_QWORD *a1@<X8>)
{
  *a1 = 0x6575737369;
  a1[1] = 0xE500000000000000;
}

void sub_1BAD91EEC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6465626D45626577;
  a1[1] = v1;
}

void sub_1BAD91F04(_QWORD *a1@<X8>)
{
  *a1 = 0x656C7A7A7570;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BAD91F1C()
{
  sub_1BA4AB0C0();
  return sub_1BB872D0C();
}

uint64_t sub_1BAD91F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8C018(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD91F8C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252CD8;
}

uint64_t sub_1BAD91F9C()
{
  sub_1BA5426A4();
  return sub_1BB874710();
}

uint64_t sub_1BAD91FC4()
{
  sub_1BA5426A4();
  return sub_1BB87471C();
}

uint64_t FormatCellSelection.Background.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE v31[4];
  int v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  __int128 v36;
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 v41;

  v3 = v2;
  v35 = a2;
  sub_1BAE87BBC();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v31[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE87C34();
  sub_1BA4A2870(&qword_1EF2B2AC8, (uint64_t (*)(uint64_t))sub_1BAE87C34, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    v30 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v30);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = v7;
  v13 = v6;
  v14 = v9;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v19 = *((_QWORD *)v17 - 2);
      v20 = *((_QWORD *)v17 - 1);
      v35 = a1;
      swift_bridgeObjectRetain_n();
      v21 = swift_bridgeObjectRelease();
      v22 = v12;
      MEMORY[0x1E0C80A78](v21);
      *(_QWORD *)&v31[-32] = &_s10CodingKeysON_164;
      *(_QWORD *)&v31[-24] = sub_1BAE87CB4();
      *(_QWORD *)&v31[-16] = sub_1BAE87CF8();
      *(_QWORD *)&v31[-8] = sub_1BAE87D3C();
      swift_getKeyPath();
      swift_retain();
      v23 = sub_1BAE71220((uint64_t)&unk_1E726AE58);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v24 = v19;
      *(_QWORD *)(v24 + 8) = v20;
      *(_QWORD *)(v24 + 16) = v23;
      *(_OWORD *)(v24 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      a1 = v35;
      sub_1BA69C828(v19, v20, 1);
      (*(void (**)(_BYTE *, uint64_t))(v22 + 8))(v14, v13);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA62C9A0();
  v38 = 0uLL;
  LOBYTE(v39) = 0;
  sub_1BB874068();
  v18 = v36;
  v36 = xmmword_1BB8A1A10;
  v37 = 0;
  sub_1BA54515C();
  sub_1BB874068();
  v26 = v38;
  v33 = v40;
  v34 = v39;
  v32 = v41;
  v38 = xmmword_1BB8D2D60;
  LOBYTE(v39) = 0;
  sub_1BA61BC14();
  sub_1BB874068();
  (*(void (**)(_BYTE *, uint64_t))(v12 + 8))(v9, v6);
  v28 = v35;
  v27 = v36;
  *v35 = v18;
  *(_OWORD *)(v28 + 1) = v26;
  v29 = v33;
  v28[3] = v34;
  v28[4] = v29;
  *((_BYTE *)v28 + 40) = v32;
  v28[6] = v27;
  v30 = (uint64_t)a1;
  return __swift_destroy_boxed_opaque_existential_1(v30);
}

uint64_t FormatCellSelection.Background.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _BYTE v30[40];
  char *v31;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v29 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v31 = (char *)&v27 - v7;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v27 - v9;
  sub_1BAE87D80(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *v1;
  sub_1BA6A09F0((uint64_t)(v1 + 1), (uint64_t)v30, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  v28 = v1[6];
  v15 = a1[3];
  v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  v17 = sub_1BAE87C34();
  v18 = sub_1BA4A2870(&qword_1EF2B2AC8, (uint64_t (*)(uint64_t))sub_1BAE87C34, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCellSelection.Background, v19, v15, (uint64_t)&type metadata for FormatCellSelection.Background, v17, (uint64_t)&type metadata for FormatVersions.JazzkonC, v16, (uint64_t)v13, v18, (uint64_t)&off_1E734BD80);
  sub_1BA5E7FF4(v14);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v20 = sub_1BB86EB84();
  v21 = __swift_project_value_buffer(v20, (uint64_t)qword_1ED476C20);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v22(v10, v21, v20);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD60F3C(v14, 0, 0, 0, (uint64_t)v10, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
  sub_1BA5E800C(v14);
  if (!v2)
  {
    v23 = (uint64_t)v31;
    v22(v31, v21, v20);
    swift_storeEnumTagMultiPayload();
    sub_1BAD61154((uint64_t)v30, 1, 0, 0, v23, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v23, type metadata accessor for FormatVersionRequirement);
    v24 = (uint64_t)v29;
    v22(v29, v21, v20);
    swift_storeEnumTagMultiPayload();
    v25 = v28;
    sub_1BA6E6C68(v28);
    sub_1BAD61394(v25, 2, 0, 0, v24, (uint64_t)sub_1BA90CF04, 0);
    sub_1BA4A2E80(v24, type metadata accessor for FormatVersionRequirement);
    sub_1BA6E6CD8(v25);
  }
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BAE87D80);
}

uint64_t sub_1BAD92744()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAD92770 + 4 * byte_1BB8AE466[*v0]))(0x726F6C6F63, 0xE500000000000000);
}

uint64_t sub_1BAD92770()
{
  return 0x65736E4965676465;
}

uint64_t sub_1BAD9278C()
{
  return 0x615272656E726F63;
}

uint64_t sub_1BAD927AC()
{
  return 1885433183;
}

uint64_t sub_1BAD927BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8C0F0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD927E0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251948;
}

uint64_t sub_1BAD927F0()
{
  sub_1BAE87CF8();
  return sub_1BB874710();
}

uint64_t sub_1BAD92818()
{
  sub_1BAE87CF8();
  return sub_1BB87471C();
}

uint64_t FormatCellSelection.DimContent.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;

  v3 = v2;
  v25 = a2;
  sub_1BAE87E70();
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAE87EE8();
  sub_1BA4A2870(&qword_1EF2B2B10, (uint64_t (*)(uint64_t))sub_1BAE87EE8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BB87468C();
  if (v2)
  {
LABEL_10:
    sub_1BA7F8B78(a1, (uint64_t)v3);
    swift_willThrow();

    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v10 = sub_1BB872874();
  v11 = Dictionary<>.errorOnUnknownKeys.getter(v10);
  swift_bridgeObjectRelease();
  v12 = (_QWORD *)v25;
  v13 = v7;
  v14 = v6;
  if ((v11 & 1) != 0)
  {
    v15 = sub_1BB8740EC();
    v16 = *(_QWORD *)(v15 + 16);
    if (v16)
    {
      v17 = (_BYTE *)(v15 + 48);
      while (*v17 != 1)
      {
        v17 += 24;
        if (!--v16)
          goto LABEL_7;
      }
      v18 = *((_QWORD *)v17 - 2);
      v19 = *((_QWORD *)v17 - 1);
      swift_bridgeObjectRetain_n();
      v20 = swift_bridgeObjectRelease();
      v25 = v13;
      MEMORY[0x1E0C80A78](v20);
      *(&v24 - 4) = (uint64_t)&_s10CodingKeysON_163;
      *(&v24 - 3) = sub_1BAE87F68();
      *(&v24 - 2) = sub_1BAE87FAC();
      *(&v24 - 1) = sub_1BAE87FF0();
      swift_getKeyPath();
      swift_retain();
      v21 = sub_1BAE71130((uint64_t)&unk_1E726AE80);
      swift_release_n();
      sub_1BA98D1F0();
      v3 = (void *)swift_allocError();
      *(_QWORD *)v22 = v18;
      *(_QWORD *)(v22 + 8) = v19;
      *(_QWORD *)(v22 + 16) = v21;
      *(_OWORD *)(v22 + 24) = xmmword_1BB889D20;
      swift_willThrow();
      sub_1BA69C828(v18, v19, 1);
      (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v14);
      goto LABEL_10;
    }
LABEL_7:
    swift_bridgeObjectRelease();
  }
  sub_1BA61BC14();
  v26 = 0;
  v27 = 0;
  v28 = 0;
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v6);
  *v12 = v29;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatCellSelection.DimContent.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAE88034(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v1;
  v10 = a1[3];
  v11 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  v12 = sub_1BAE87EE8();
  v13 = sub_1BA4A2870(&qword_1EF2B2B10, (uint64_t (*)(uint64_t))sub_1BAE87EE8, (uint64_t)&unk_1BB8FFC6C);
  sub_1BA6EC1EC((uint64_t)&type metadata for FormatCellSelection.DimContent, v14, v10, (uint64_t)&type metadata for FormatCellSelection.DimContent, v12, (uint64_t)&type metadata for FormatVersions.JazzkonC, v11, (uint64_t)v8, v13, (uint64_t)&off_1E734BD80);
  sub_1BA6E6C68(v9);
  if (qword_1ED3C2478 != -1)
    swift_once();
  v15 = sub_1BB86EB84();
  v16 = __swift_project_value_buffer(v15, (uint64_t)qword_1ED476C20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v5, v16, v15);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BAD60D24(v9, 0, 0, 0, (uint64_t)v5, (uint64_t)sub_1BA90CF04, 0);
  sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FormatVersionRequirement);
  sub_1BA6E6CD8(v9);
  return sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BAE88034);
}

uint64_t sub_1BAD92D40()
{
  _BYTE *v0;

  if (*v0)
    return 1885433183;
  else
    return 0x6168706C61;
}

uint64_t sub_1BAD92D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAE8C2B4(a1, a2);
  *a3 = result;
  return result;
}

void sub_1BAD92D94(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251970;
}

uint64_t sub_1BAD92DA4()
{
  sub_1BAE87FAC();
  return sub_1BB874710();
}

uint64_t sub_1BAD92DCC()
{
  sub_1BAE87FAC();
  return sub_1BB87471C();
}

