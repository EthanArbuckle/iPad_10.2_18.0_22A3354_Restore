unint64_t sub_1BAEDFA74()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B52B8;
  if (!qword_1EF2B52B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B52C0, (uint64_t)&_s10CodingKeysON_202, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B52B8);
  }
  return result;
}

unint64_t sub_1BAEDFAD8()
{
  unint64_t result;

  result = qword_1EF2B52C8;
  if (!qword_1EF2B52C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3BB0, &_s10CodingKeysON_203);
    atomic_store(result, (unint64_t *)&qword_1EF2B52C8);
  }
  return result;
}

unint64_t sub_1BAEDFB20()
{
  unint64_t result;

  result = qword_1EF2B52D0;
  if (!qword_1EF2B52D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3BD8, &_s10CodingKeysON_203);
    atomic_store(result, (unint64_t *)&qword_1EF2B52D0);
  }
  return result;
}

unint64_t sub_1BAEDFB68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B52D8;
  if (!qword_1EF2B52D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B52E0, (uint64_t)&_s10CodingKeysON_203, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B52D8);
  }
  return result;
}

unint64_t sub_1BAEDFBCC()
{
  unint64_t result;

  result = qword_1ED3AFAB8;
  if (!qword_1ED3AFAB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3B20, &_s10CodingKeysON_204);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAB8);
  }
  return result;
}

unint64_t sub_1BAEDFC14()
{
  unint64_t result;

  result = qword_1ED3AFAB0;
  if (!qword_1ED3AFAB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3B48, &_s10CodingKeysON_204);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAB0);
  }
  return result;
}

unint64_t sub_1BAEDFC5C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B52E8;
  if (!qword_1EF2B52E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B52F0, (uint64_t)&_s10CodingKeysON_204, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B52E8);
  }
  return result;
}

unint64_t sub_1BAEDFCC0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B52F8;
  if (!qword_1EF2B52F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5300, (uint64_t)&_s10CodingKeysON_205, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B52F8);
  }
  return result;
}

unint64_t sub_1BAEDFD24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5308;
  if (!qword_1EF2B5308)
  {
    sub_1BA4AD288(255, &qword_1EF2B5310, (uint64_t)&_s10CodingKeysON_206, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5308);
  }
  return result;
}

unint64_t sub_1BAEDFD88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5318;
  if (!qword_1EF2B5318)
  {
    sub_1BA4AD288(255, &qword_1EF2B5320, (uint64_t)&_s10CodingKeysON_207, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5318);
  }
  return result;
}

unint64_t sub_1BAEDFDEC()
{
  unint64_t result;

  result = qword_1ED3A6D18;
  if (!qword_1ED3A6D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B35C0, &_s10CodingKeysON_208);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D18);
  }
  return result;
}

unint64_t sub_1BAEDFE34()
{
  unint64_t result;

  result = qword_1ED3A6D10;
  if (!qword_1ED3A6D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B35E8, &_s10CodingKeysON_208);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D10);
  }
  return result;
}

unint64_t sub_1BAEDFE7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5328;
  if (!qword_1EF2B5328)
  {
    sub_1BA4AD288(255, &qword_1EF2B5330, (uint64_t)&_s10CodingKeysON_208, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5328);
  }
  return result;
}

unint64_t sub_1BAEDFEE0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5338;
  if (!qword_1EF2B5338)
  {
    sub_1BA4AD288(255, &qword_1EF2B5340, (uint64_t)&_s10CodingKeysON_209, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5338);
  }
  return result;
}

unint64_t sub_1BAEDFF44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5348;
  if (!qword_1EF2B5348)
  {
    sub_1BA4AD288(255, &qword_1EF2B5350, (uint64_t)&_s10CodingKeysON_210, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5348);
  }
  return result;
}

unint64_t sub_1BAEDFFA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5358;
  if (!qword_1EF2B5358)
  {
    sub_1BA4AD288(255, &qword_1EF2B5360, (uint64_t)&_s10CodingKeysON_211, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5358);
  }
  return result;
}

unint64_t sub_1BAEE000C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5368;
  if (!qword_1EF2B5368)
  {
    sub_1BA4AD288(255, &qword_1EF2B5370, (uint64_t)&_s10CodingKeysON_212, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5368);
  }
  return result;
}

unint64_t sub_1BAEE0070()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5378;
  if (!qword_1EF2B5378)
  {
    sub_1BA4AD288(255, &qword_1EF2B5380, (uint64_t)&_s10CodingKeysON_213, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5378);
  }
  return result;
}

unint64_t sub_1BAEE00D4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5388;
  if (!qword_1EF2B5388)
  {
    sub_1BA4AD288(255, &qword_1EF2B5390, (uint64_t)&_s10CodingKeysON_214, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5388);
  }
  return result;
}

unint64_t sub_1BAEE0138()
{
  unint64_t result;

  result = qword_1ED3A9578;
  if (!qword_1ED3A9578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2E58, &_s10CodingKeysON_215);
    atomic_store(result, (unint64_t *)&qword_1ED3A9578);
  }
  return result;
}

unint64_t sub_1BAEE0180()
{
  unint64_t result;

  result = qword_1ED3A9570;
  if (!qword_1ED3A9570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2E80, &_s10CodingKeysON_215);
    atomic_store(result, (unint64_t *)&qword_1ED3A9570);
  }
  return result;
}

unint64_t sub_1BAEE01C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5398;
  if (!qword_1EF2B5398)
  {
    sub_1BA4AD288(255, &qword_1EF2B53A0, (uint64_t)&_s10CodingKeysON_215, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5398);
  }
  return result;
}

unint64_t sub_1BAEE022C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B53A8;
  if (!qword_1EF2B53A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B53B0, (uint64_t)&_s10CodingKeysON_216, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B53A8);
  }
  return result;
}

unint64_t sub_1BAEE0290()
{
  unint64_t result;

  result = qword_1EF2B53B8;
  if (!qword_1EF2B53B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2D38, &_s10CodingKeysON_217);
    atomic_store(result, (unint64_t *)&qword_1EF2B53B8);
  }
  return result;
}

unint64_t sub_1BAEE02D8()
{
  unint64_t result;

  result = qword_1EF2B53C0;
  if (!qword_1EF2B53C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2D60, &_s10CodingKeysON_217);
    atomic_store(result, (unint64_t *)&qword_1EF2B53C0);
  }
  return result;
}

unint64_t sub_1BAEE0320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B53C8;
  if (!qword_1EF2B53C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B53D0, (uint64_t)&_s10CodingKeysON_217, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B53C8);
  }
  return result;
}

unint64_t sub_1BAEE0384()
{
  unint64_t result;

  result = qword_1EF2B53D8;
  if (!qword_1EF2B53D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2CA8, &_s10CodingKeysON_218);
    atomic_store(result, (unint64_t *)&qword_1EF2B53D8);
  }
  return result;
}

unint64_t sub_1BAEE03CC()
{
  unint64_t result;

  result = qword_1EF2B53E0;
  if (!qword_1EF2B53E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2CD0, &_s10CodingKeysON_218);
    atomic_store(result, (unint64_t *)&qword_1EF2B53E0);
  }
  return result;
}

unint64_t sub_1BAEE0414()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B53E8;
  if (!qword_1EF2B53E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B53F0, (uint64_t)&_s10CodingKeysON_218, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B53E8);
  }
  return result;
}

unint64_t sub_1BAEE0478()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B53F8;
  if (!qword_1EF2B53F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5400, (uint64_t)&_s10CodingKeysON_219, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B53F8);
  }
  return result;
}

unint64_t sub_1BAEE04DC()
{
  unint64_t result;

  result = qword_1EF2B5408;
  if (!qword_1EF2B5408)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B29F8, &_s10CodingKeysON_220);
    atomic_store(result, (unint64_t *)&qword_1EF2B5408);
  }
  return result;
}

unint64_t sub_1BAEE0524()
{
  unint64_t result;

  result = qword_1EF2B5410;
  if (!qword_1EF2B5410)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2A20, &_s10CodingKeysON_220);
    atomic_store(result, (unint64_t *)&qword_1EF2B5410);
  }
  return result;
}

unint64_t sub_1BAEE056C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5418;
  if (!qword_1EF2B5418)
  {
    sub_1BA4AD288(255, &qword_1EF2B5420, (uint64_t)&_s10CodingKeysON_220, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5418);
  }
  return result;
}

unint64_t sub_1BAEE05D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5428;
  if (!qword_1EF2B5428)
  {
    sub_1BA4AD288(255, &qword_1EF2B5430, (uint64_t)&_s10CodingKeysON_221, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5428);
  }
  return result;
}

unint64_t sub_1BAEE0634()
{
  unint64_t result;

  result = qword_1ED3A6CF0;
  if (!qword_1ED3A6CF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2810, &_s10CodingKeysON_222);
    atomic_store(result, (unint64_t *)&qword_1ED3A6CF0);
  }
  return result;
}

unint64_t sub_1BAEE067C()
{
  unint64_t result;

  result = qword_1ED3A6CE8;
  if (!qword_1ED3A6CE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2838, &_s10CodingKeysON_222);
    atomic_store(result, (unint64_t *)&qword_1ED3A6CE8);
  }
  return result;
}

unint64_t sub_1BAEE06C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5438;
  if (!qword_1EF2B5438)
  {
    sub_1BA4AD288(255, &qword_1EF2B5440, (uint64_t)&_s10CodingKeysON_222, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5438);
  }
  return result;
}

unint64_t sub_1BAEE0728()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5448;
  if (!qword_1EF2B5448)
  {
    sub_1BA4AD288(255, &qword_1EF2B5450, (uint64_t)&_s10CodingKeysON_223, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5448);
  }
  return result;
}

unint64_t sub_1BAEE078C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5458;
  if (!qword_1EF2B5458)
  {
    sub_1BA4AD288(255, &qword_1EF2B5460, (uint64_t)&_s10CodingKeysON_224, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5458);
  }
  return result;
}

unint64_t sub_1BAEE07F0()
{
  unint64_t result;

  result = qword_1EF2B5468;
  if (!qword_1EF2B5468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2340, &_s10CodingKeysON_225);
    atomic_store(result, (unint64_t *)&qword_1EF2B5468);
  }
  return result;
}

unint64_t sub_1BAEE0838()
{
  unint64_t result;

  result = qword_1EF2B5470;
  if (!qword_1EF2B5470)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2368, &_s10CodingKeysON_225);
    atomic_store(result, (unint64_t *)&qword_1EF2B5470);
  }
  return result;
}

unint64_t sub_1BAEE0880()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5478;
  if (!qword_1EF2B5478)
  {
    sub_1BA4AD288(255, &qword_1EF2B5480, (uint64_t)&_s10CodingKeysON_225, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5478);
  }
  return result;
}

unint64_t sub_1BAEE08E4()
{
  unint64_t result;

  result = qword_1ED3CDDC8;
  if (!qword_1ED3CDDC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B22B0, &_s10CodingKeysON_226);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDC8);
  }
  return result;
}

unint64_t sub_1BAEE092C()
{
  unint64_t result;

  result = qword_1ED3CDDC0;
  if (!qword_1ED3CDDC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B22D8, &_s10CodingKeysON_226);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDC0);
  }
  return result;
}

unint64_t sub_1BAEE0974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5488;
  if (!qword_1EF2B5488)
  {
    sub_1BA4AD288(255, &qword_1EF2B5490, (uint64_t)&_s10CodingKeysON_226, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5488);
  }
  return result;
}

unint64_t sub_1BAEE09D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5498;
  if (!qword_1EF2B5498)
  {
    sub_1BA4AD288(255, &qword_1EF2B54A0, (uint64_t)&_s10CodingKeysON_227, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5498);
  }
  return result;
}

unint64_t sub_1BAEE0A3C()
{
  unint64_t result;

  result = qword_1EF2B54A8;
  if (!qword_1EF2B54A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2000, &_s10CodingKeysON_228);
    atomic_store(result, (unint64_t *)&qword_1EF2B54A8);
  }
  return result;
}

unint64_t sub_1BAEE0A84()
{
  unint64_t result;

  result = qword_1EF2B54B0;
  if (!qword_1EF2B54B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2028, &_s10CodingKeysON_228);
    atomic_store(result, (unint64_t *)&qword_1EF2B54B0);
  }
  return result;
}

unint64_t sub_1BAEE0ACC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B54B8;
  if (!qword_1EF2B54B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B54C0, (uint64_t)&_s10CodingKeysON_228, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B54B8);
  }
  return result;
}

unint64_t sub_1BAEE0B30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B54C8;
  if (!qword_1EF2B54C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B54D0, (uint64_t)&_s10CodingKeysON_229, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B54C8);
  }
  return result;
}

unint64_t sub_1BAEE0B94()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B54D8;
  if (!qword_1EF2B54D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B54E0, (uint64_t)&_s10CodingKeysON_230, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B54D8);
  }
  return result;
}

unint64_t sub_1BAEE0BF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B54E8;
  if (!qword_1EF2B54E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B54F0, (uint64_t)&_s10CodingKeysON_231, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B54E8);
  }
  return result;
}

unint64_t sub_1BAEE0C5C()
{
  unint64_t result;

  result = qword_1EF2B54F8;
  if (!qword_1EF2B54F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1CF8, &_s10CodingKeysON_232);
    atomic_store(result, (unint64_t *)&qword_1EF2B54F8);
  }
  return result;
}

unint64_t sub_1BAEE0CA4()
{
  unint64_t result;

  result = qword_1EF2B5500;
  if (!qword_1EF2B5500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1D20, &_s10CodingKeysON_232);
    atomic_store(result, (unint64_t *)&qword_1EF2B5500);
  }
  return result;
}

unint64_t sub_1BAEE0CEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5508;
  if (!qword_1EF2B5508)
  {
    sub_1BA4AD288(255, &qword_1EF2B5510, (uint64_t)&_s10CodingKeysON_232, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5508);
  }
  return result;
}

unint64_t sub_1BAEE0D50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5518;
  if (!qword_1EF2B5518)
  {
    sub_1BA4AD288(255, &qword_1EF2B5520, (uint64_t)&_s10CodingKeysON_233, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5518);
  }
  return result;
}

unint64_t sub_1BAEE0DB4()
{
  unint64_t result;

  result = qword_1ED3A5AD8;
  if (!qword_1ED3A5AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1BD8, &_s10CodingKeysON_234);
    atomic_store(result, (unint64_t *)&qword_1ED3A5AD8);
  }
  return result;
}

unint64_t sub_1BAEE0DFC()
{
  unint64_t result;

  result = qword_1ED3A5AD0;
  if (!qword_1ED3A5AD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1C00, &_s10CodingKeysON_234);
    atomic_store(result, (unint64_t *)&qword_1ED3A5AD0);
  }
  return result;
}

unint64_t sub_1BAEE0E44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5528;
  if (!qword_1EF2B5528)
  {
    sub_1BA4AD288(255, &qword_1EF2B5530, (uint64_t)&_s10CodingKeysON_234, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5528);
  }
  return result;
}

unint64_t sub_1BAEE0EA8()
{
  unint64_t result;

  result = qword_1EF2B5538;
  if (!qword_1EF2B5538)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1A80, &_s10CodingKeysON_235);
    atomic_store(result, (unint64_t *)&qword_1EF2B5538);
  }
  return result;
}

unint64_t sub_1BAEE0EF0()
{
  unint64_t result;

  result = qword_1EF2B5540;
  if (!qword_1EF2B5540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1AA8, &_s10CodingKeysON_235);
    atomic_store(result, (unint64_t *)&qword_1EF2B5540);
  }
  return result;
}

unint64_t sub_1BAEE0F38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5548;
  if (!qword_1EF2B5548)
  {
    sub_1BA4AD288(255, &qword_1EF2B5550, (uint64_t)&_s10CodingKeysON_235, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5548);
  }
  return result;
}

unint64_t sub_1BAEE0F9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5558;
  if (!qword_1EF2B5558)
  {
    sub_1BA4AD288(255, &qword_1EF2B5560, (uint64_t)&_s10CodingKeysON_236, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5558);
  }
  return result;
}

unint64_t sub_1BAEE1000()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5568;
  if (!qword_1EF2B5568)
  {
    sub_1BA4AD288(255, &qword_1EF2B5570, (uint64_t)&_s10CodingKeysON_237, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5568);
  }
  return result;
}

unint64_t sub_1BAEE1064()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5578;
  if (!qword_1EF2B5578)
  {
    sub_1BA4AD288(255, &qword_1EF2B5580, (uint64_t)&_s10CodingKeysON_238, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5578);
  }
  return result;
}

unint64_t sub_1BAEE10C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5588;
  if (!qword_1EF2B5588)
  {
    sub_1BA4AD288(255, &qword_1EF2B5590, (uint64_t)&_s10CodingKeysON_239, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5588);
  }
  return result;
}

unint64_t sub_1BAEE112C()
{
  unint64_t result;

  result = qword_1ED3C9B58;
  if (!qword_1ED3C9B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B16E8, &_s10CodingKeysON_240);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B58);
  }
  return result;
}

unint64_t sub_1BAEE1174()
{
  unint64_t result;

  result = qword_1ED3C9B50;
  if (!qword_1ED3C9B50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1710, &_s10CodingKeysON_240);
    atomic_store(result, (unint64_t *)&qword_1ED3C9B50);
  }
  return result;
}

unint64_t sub_1BAEE11BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5598;
  if (!qword_1EF2B5598)
  {
    sub_1BA4AD288(255, &qword_1EF2B55A0, (uint64_t)&_s10CodingKeysON_240, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5598);
  }
  return result;
}

unint64_t sub_1BAEE1220()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B55A8;
  if (!qword_1EF2B55A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B55B0, (uint64_t)&_s10CodingKeysON_241, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B55A8);
  }
  return result;
}

void sub_1BAEE1280()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAEE1290()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAEE12A4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B55B8;
  if (!qword_1EF2B55B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B55C0, (uint64_t)&_s10CodingKeysON_242, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B55B8);
  }
  return result;
}

unint64_t sub_1BAEE1308()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B55C8;
  if (!qword_1EF2B55C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B55D0, (uint64_t)&_s10CodingKeysON_243, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B55C8);
  }
  return result;
}

unint64_t sub_1BAEE136C()
{
  unint64_t result;

  result = qword_1EF2B55D8;
  if (!qword_1EF2B55D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1288, &_s10CodingKeysON_244);
    atomic_store(result, (unint64_t *)&qword_1EF2B55D8);
  }
  return result;
}

unint64_t sub_1BAEE13B4()
{
  unint64_t result;

  result = qword_1EF2B55E0;
  if (!qword_1EF2B55E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B12B0, &_s10CodingKeysON_244);
    atomic_store(result, (unint64_t *)&qword_1EF2B55E0);
  }
  return result;
}

unint64_t sub_1BAEE13FC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B55E8;
  if (!qword_1EF2B55E8)
  {
    sub_1BA4AD288(255, &qword_1EF2B55F0, (uint64_t)&_s10CodingKeysON_244, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B55E8);
  }
  return result;
}

unint64_t sub_1BAEE1460()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B55F8;
  if (!qword_1EF2B55F8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5600, (uint64_t)&_s10CodingKeysON_245, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B55F8);
  }
  return result;
}

unint64_t sub_1BAEE14C4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5608;
  if (!qword_1EF2B5608)
  {
    sub_1BA4AD288(255, &qword_1EF2B5610, (uint64_t)&_s10CodingKeysON_246, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5608);
  }
  return result;
}

unint64_t sub_1BAEE1528()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5618;
  if (!qword_1EF2B5618)
  {
    sub_1BA4AD288(255, &qword_1EF2B5620, (uint64_t)&_s10CodingKeysON_247, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5618);
  }
  return result;
}

unint64_t sub_1BAEE158C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5628;
  if (!qword_1EF2B5628)
  {
    sub_1BA4AD288(255, &qword_1EF2B5630, (uint64_t)&_s10CodingKeysON_248, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5628);
  }
  return result;
}

unint64_t sub_1BAEE15F0()
{
  unint64_t result;

  result = qword_1ED3A1370;
  if (!qword_1ED3A1370)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0D60, &_s10CodingKeysON_249);
    atomic_store(result, (unint64_t *)&qword_1ED3A1370);
  }
  return result;
}

unint64_t sub_1BAEE1638()
{
  unint64_t result;

  result = qword_1ED3A6880;
  if (!qword_1ED3A6880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0D88, &_s10CodingKeysON_249);
    atomic_store(result, (unint64_t *)&qword_1ED3A6880);
  }
  return result;
}

unint64_t sub_1BAEE1680()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5638;
  if (!qword_1EF2B5638)
  {
    sub_1BA4AD288(255, &qword_1EF2B5640, (uint64_t)&_s10CodingKeysON_249, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5638);
  }
  return result;
}

unint64_t sub_1BAEE16E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5648;
  if (!qword_1EF2B5648)
  {
    sub_1BA4AD288(255, &qword_1EF2B5650, (uint64_t)&_s10CodingKeysON_250, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5648);
  }
  return result;
}

unint64_t sub_1BAEE1748()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5658;
  if (!qword_1EF2B5658)
  {
    sub_1BA4AD288(255, &qword_1EF2B5660, (uint64_t)&_s10CodingKeysON_251, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5658);
  }
  return result;
}

unint64_t sub_1BAEE17AC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5668;
  if (!qword_1EF2B5668)
  {
    sub_1BA4AD288(255, &qword_1EF2B5670, (uint64_t)&_s10CodingKeysON_252, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5668);
  }
  return result;
}

unint64_t sub_1BAEE1810()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5678;
  if (!qword_1EF2B5678)
  {
    sub_1BA4AD288(255, &qword_1EF2B5680, (uint64_t)&_s10CodingKeysON_253, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5678);
  }
  return result;
}

unint64_t sub_1BAEE1874()
{
  unint64_t result;

  result = qword_1ED3A6308;
  if (!qword_1ED3A6308)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0388, &_s10CodingKeysON_254);
    atomic_store(result, (unint64_t *)&qword_1ED3A6308);
  }
  return result;
}

unint64_t sub_1BAEE18BC()
{
  unint64_t result;

  result = qword_1ED3A6300;
  if (!qword_1ED3A6300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B03B0, &_s10CodingKeysON_254);
    atomic_store(result, (unint64_t *)&qword_1ED3A6300);
  }
  return result;
}

unint64_t sub_1BAEE1904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5688;
  if (!qword_1EF2B5688)
  {
    sub_1BA4AD288(255, &qword_1EF2B5690, (uint64_t)&_s10CodingKeysON_254, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5688);
  }
  return result;
}

unint64_t sub_1BAEE1968()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5698;
  if (!qword_1EF2B5698)
  {
    sub_1BA4AD288(255, &qword_1EF2B56A0, (uint64_t)&_s10CodingKeysON_255, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5698);
  }
  return result;
}

unint64_t sub_1BAEE19CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B56A8;
  if (!qword_1EF2B56A8)
  {
    sub_1BA4AD288(255, &qword_1EF2B56B0, (uint64_t)&_s10CodingKeysON_256, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B56A8);
  }
  return result;
}

unint64_t sub_1BAEE1A30()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B56B8;
  if (!qword_1EF2B56B8)
  {
    sub_1BA4AD288(255, &qword_1EF2B56C0, (uint64_t)&_s10CodingKeysON_257, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B56B8);
  }
  return result;
}

unint64_t sub_1BAEE1A94()
{
  unint64_t result;

  result = qword_1ED3A7430;
  if (!qword_1ED3A7430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFE28, &_s10CodingKeysON_258);
    atomic_store(result, (unint64_t *)&qword_1ED3A7430);
  }
  return result;
}

unint64_t sub_1BAEE1ADC()
{
  unint64_t result;

  result = qword_1ED3A7428;
  if (!qword_1ED3A7428)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFE50, &_s10CodingKeysON_258);
    atomic_store(result, (unint64_t *)&qword_1ED3A7428);
  }
  return result;
}

unint64_t sub_1BAEE1B24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B56C8;
  if (!qword_1EF2B56C8)
  {
    sub_1BA4AD288(255, &qword_1EF2B56D0, (uint64_t)&_s10CodingKeysON_258, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B56C8);
  }
  return result;
}

unint64_t sub_1BAEE1B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B56D8;
  if (!qword_1EF2B56D8)
  {
    sub_1BA4AD288(255, &qword_1EF2B56E0, (uint64_t)&_s10CodingKeysON_259, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B56D8);
  }
  return result;
}

unint64_t sub_1BAEE1BE8()
{
  unint64_t result;

  result = qword_1ED3A4368;
  if (!qword_1ED3A4368)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFEE0, &_s10CodingTypeON_184);
    atomic_store(result, (unint64_t *)&qword_1ED3A4368);
  }
  return result;
}

unint64_t sub_1BAEE1C2C()
{
  unint64_t result;

  result = qword_1ED3A9BC0;
  if (!qword_1ED3A9BC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFFA8, &_s10CodingTypeON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BC0);
  }
  return result;
}

unint64_t sub_1BAEE1C70()
{
  unint64_t result;

  result = qword_1EF2B56E8;
  if (!qword_1EF2B56E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0258, &_s14descr1E72CCB69O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B56E8);
  }
  return result;
}

unint64_t sub_1BAEE1CB4()
{
  unint64_t result;

  result = qword_1ED3A69C0;
  if (!qword_1ED3A69C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0440, &_s10CodingTypeON_181);
    atomic_store(result, (unint64_t *)&qword_1ED3A69C0);
  }
  return result;
}

unint64_t sub_1BAEE1CF8()
{
  unint64_t result;

  result = qword_1ED3A6FF8;
  if (!qword_1ED3A6FF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B06B8, &_s10CodingTypeON_180);
    atomic_store(result, (unint64_t *)&qword_1ED3A6FF8);
  }
  return result;
}

unint64_t sub_1BAEE1D3C()
{
  unint64_t result;

  result = qword_1ED3AA638;
  if (!qword_1ED3AA638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B09A0, &_s10CodingTypeON_177);
    atomic_store(result, (unint64_t *)&qword_1ED3AA638);
  }
  return result;
}

unint64_t sub_1BAEE1D80()
{
  unint64_t result;

  result = qword_1ED3AAAC8;
  if (!qword_1ED3AAAC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0A68, &_s10CodingTypeON_176);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAC8);
  }
  return result;
}

unint64_t sub_1BAEE1DC4()
{
  unint64_t result;

  result = qword_1ED3AD768;
  if (!qword_1ED3AD768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0BF8, &_s10CodingTypeON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3AD768);
  }
  return result;
}

unint64_t sub_1BAEE1E08()
{
  unint64_t result;

  result = qword_1EF2B56F0;
  if (!qword_1EF2B56F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0E18, &_s14descr1E72CCB21V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B56F0);
  }
  return result;
}

unint64_t sub_1BAEE1E4C()
{
  unint64_t result;

  result = qword_1EF2B56F8;
  if (!qword_1EF2B56F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B17A0, &_s10CodingTypeON_168);
    atomic_store(result, (unint64_t *)&qword_1EF2B56F8);
  }
  return result;
}

unint64_t sub_1BAEE1E90()
{
  unint64_t result;

  result = qword_1ED3A7C48;
  if (!qword_1ED3A7C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2148, &_s10CodingTypeON_165);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C48);
  }
  return result;
}

unint64_t sub_1BAEE1ED4()
{
  unint64_t result;

  result = qword_1ED3A5B70;
  if (!qword_1ED3A5B70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2488, &_s10CodingTypeON_163);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B70);
  }
  return result;
}

unint64_t sub_1BAEE1F18()
{
  unint64_t result;

  result = qword_1ED3C90F8;
  if (!qword_1ED3C90F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2B40, &_s10CodingTypeON_158);
    atomic_store(result, (unint64_t *)&qword_1ED3C90F8);
  }
  return result;
}

unint64_t sub_1BAEE1F5C()
{
  unint64_t result;

  result = qword_1ED3A7FA0;
  if (!qword_1ED3A7FA0)
  {
    result = MEMORY[0x1BCCE5B24]("韡+", &_s10CodingTypeON_157);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FA0);
  }
  return result;
}

unint64_t sub_1BAEE1FA0()
{
  unint64_t result;

  result = qword_1EF2B5700;
  if (!qword_1EF2B5700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3520, &_s10CodingTypeON_154);
    atomic_store(result, (unint64_t *)&qword_1EF2B5700);
  }
  return result;
}

uint64_t sub_1BAEE1FE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001BB959E40 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6769666E6F63 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x657A69736572 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x656D7473756A6461 && a2 == 0xEB0000000073746ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 14;
    else
      return 15;
  }
}

uint64_t sub_1BAEE25BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7373616C63 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB96C760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB96A580 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1BAEE2904(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x615272656E726F63 && a2 == 0xEC00000073756964 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB96C760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB95D2E0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB96A580 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 1885433183 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 5;
    else
      return 6;
  }
}

unint64_t sub_1BAEE2B74()
{
  unint64_t result;

  result = qword_1EF2B5708;
  if (!qword_1EF2B5708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B39B8, &_s10CodingTypeON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B5708);
  }
  return result;
}

unint64_t sub_1BAEE2BB8()
{
  unint64_t result;

  result = qword_1EF2B5710;
  if (!qword_1EF2B5710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4000, &_s10CodingTypeON_148);
    atomic_store(result, (unint64_t *)&qword_1EF2B5710);
  }
  return result;
}

unint64_t sub_1BAEE2BFC()
{
  unint64_t result;

  result = qword_1ED3CDDD0;
  if (!qword_1ED3CDDD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4258, &_s10CodingTypeON_145);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDD0);
  }
  return result;
}

unint64_t sub_1BAEE2C40()
{
  unint64_t result;

  result = qword_1ED3A5C70;
  if (!qword_1ED3A5C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4660, &_s10CodingTypeON_142);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C70);
  }
  return result;
}

unint64_t sub_1BAEE2C84()
{
  unint64_t result;

  result = qword_1EF2B5718;
  if (!qword_1EF2B5718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4D50, &_s10CodingTypeON_136);
    atomic_store(result, (unint64_t *)&qword_1EF2B5718);
  }
  return result;
}

unint64_t sub_1BAEE2CC8()
{
  unint64_t result;

  result = qword_1EF2B5720;
  if (!qword_1EF2B5720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4EA8, &_s10CodingTypeON_135);
    atomic_store(result, (unint64_t *)&qword_1EF2B5720);
  }
  return result;
}

unint64_t sub_1BAEE2D0C()
{
  unint64_t result;

  result = qword_1EF2B5728;
  if (!qword_1EF2B5728)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5190, &_s10CodingTypeON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B5728);
  }
  return result;
}

unint64_t sub_1BAEE2D50()
{
  unint64_t result;

  result = qword_1EF2B5730;
  if (!qword_1EF2B5730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5258, &_s10CodingTypeON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B5730);
  }
  return result;
}

unint64_t sub_1BAEE2D94()
{
  unint64_t result;

  result = qword_1EF2B5738;
  if (!qword_1EF2B5738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5C18, &_s10CodingTypeON_126);
    atomic_store(result, (unint64_t *)&qword_1EF2B5738);
  }
  return result;
}

unint64_t sub_1BAEE2DD8()
{
  unint64_t result;

  result = qword_1EF2B5740;
  if (!qword_1EF2B5740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5CE0, &_s10CodingTypeON_125);
    atomic_store(result, (unint64_t *)&qword_1EF2B5740);
  }
  return result;
}

unint64_t sub_1BAEE2E1C()
{
  unint64_t result;

  result = qword_1ED3A7680;
  if (!qword_1ED3A7680)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6020, &_s10CodingTypeON_123);
    atomic_store(result, (unint64_t *)&qword_1ED3A7680);
  }
  return result;
}

unint64_t sub_1BAEE2E60()
{
  unint64_t result;

  result = qword_1ED3AE358;
  if (!qword_1ED3AE358)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6510, &_s14descr1E72CC821C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3AE358);
  }
  return result;
}

unint64_t sub_1BAEE2EA4()
{
  unint64_t result;

  result = qword_1ED3D2C28;
  if (!qword_1ED3D2C28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B68A8, &_s10CodingTypeON_121);
    atomic_store(result, (unint64_t *)&qword_1ED3D2C28);
  }
  return result;
}

unint64_t sub_1BAEE2EE8()
{
  unint64_t result;

  result = qword_1ED3D0178;
  if (!qword_1ED3D0178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7230, &_s10CodingTypeON_116);
    atomic_store(result, (unint64_t *)&qword_1ED3D0178);
  }
  return result;
}

unint64_t sub_1BAEE2F2C()
{
  unint64_t result;

  result = qword_1ED3A2A38;
  if (!qword_1ED3A2A38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8698, &_s10CodingTypeON_105);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A38);
  }
  return result;
}

unint64_t sub_1BAEE2F70()
{
  unint64_t result;

  result = qword_1EF2B5748;
  if (!qword_1EF2B5748)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8948, &_s10CodingTypeON_103);
    atomic_store(result, (unint64_t *)&qword_1EF2B5748);
  }
  return result;
}

unint64_t sub_1BAEE2FB4()
{
  unint64_t result;

  result = qword_1EF2B5750;
  if (!qword_1EF2B5750)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8A10, &_s10CodingTypeON_102);
    atomic_store(result, (unint64_t *)&qword_1EF2B5750);
  }
  return result;
}

unint64_t sub_1BAEE2FF8()
{
  unint64_t result;

  result = qword_1ED3A6178;
  if (!qword_1ED3A6178)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8EA8, &_s10CodingTypeON_99);
    atomic_store(result, (unint64_t *)&qword_1ED3A6178);
  }
  return result;
}

unint64_t sub_1BAEE303C()
{
  unint64_t result;

  result = qword_1EF2B5758;
  if (!qword_1EF2B5758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9000, &_s10CodingTypeON_98);
    atomic_store(result, (unint64_t *)&qword_1EF2B5758);
  }
  return result;
}

unint64_t sub_1BAEE3080()
{
  unint64_t result;

  result = qword_1ED3A61C0;
  if (!qword_1ED3A61C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9A38, &_s10CodingTypeON_95);
    atomic_store(result, (unint64_t *)&qword_1ED3A61C0);
  }
  return result;
}

unint64_t sub_1BAEE30C4()
{
  unint64_t result;

  result = qword_1EF2B5760;
  if (!qword_1EF2B5760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9B00, &_s10CodingTypeON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B5760);
  }
  return result;
}

unint64_t sub_1BAEE3108()
{
  unint64_t result;

  result = qword_1ED3A61A0;
  if (!qword_1ED3A61A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9BC8, &_s10CodingTypeON_93);
    atomic_store(result, (unint64_t *)&qword_1ED3A61A0);
  }
  return result;
}

unint64_t sub_1BAEE314C()
{
  unint64_t result;

  result = qword_1EF2B5768;
  if (!qword_1EF2B5768)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9D58, &_s10CodingTypeON_91);
    atomic_store(result, (unint64_t *)&qword_1EF2B5768);
  }
  return result;
}

unint64_t sub_1BAEE3190()
{
  unint64_t result;

  result = qword_1ED3D2AF8;
  if (!qword_1ED3D2AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9E20, &_s10CodingTypeON_90);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AF8);
  }
  return result;
}

unint64_t sub_1BAEE31D4()
{
  unint64_t result;

  result = qword_1EF2B5770;
  if (!qword_1EF2B5770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9EE8, &_s10CodingTypeON_89);
    atomic_store(result, (unint64_t *)&qword_1EF2B5770);
  }
  return result;
}

unint64_t sub_1BAEE3218()
{
  unint64_t result;

  result = qword_1ED3CA488;
  if (!qword_1ED3CA488)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9FB0, &_s10CodingTypeON_88);
    atomic_store(result, (unint64_t *)&qword_1ED3CA488);
  }
  return result;
}

unint64_t sub_1BAEE325C()
{
  unint64_t result;

  result = qword_1ED3C9DF0;
  if (!qword_1ED3C9DF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA2B8, &_s10CodingTypeON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3C9DF0);
  }
  return result;
}

unint64_t sub_1BAEE32A0()
{
  unint64_t result;

  result = qword_1EF2B5778;
  if (!qword_1EF2B5778)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA568, &_s10CodingTypeON_85);
    atomic_store(result, (unint64_t *)&qword_1EF2B5778);
  }
  return result;
}

unint64_t sub_1BAEE32E4()
{
  unint64_t result;

  result = qword_1EF2B5780;
  if (!qword_1EF2B5780)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA888, &_s10CodingTypeON_81);
    atomic_store(result, (unint64_t *)&qword_1EF2B5780);
  }
  return result;
}

unint64_t sub_1BAEE3328()
{
  unint64_t result;

  result = qword_1ED3A4588;
  if (!qword_1ED3A4588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAA18, &_s10CodingTypeON_79);
    atomic_store(result, (unint64_t *)&qword_1ED3A4588);
  }
  return result;
}

unint64_t sub_1BAEE336C()
{
  unint64_t result;

  result = qword_1EF2B5788;
  if (!qword_1EF2B5788)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BACC8, &_s10CodingTypeON_77);
    atomic_store(result, (unint64_t *)&qword_1EF2B5788);
  }
  return result;
}

unint64_t sub_1BAEE33B0()
{
  unint64_t result;

  result = qword_1EF2B5790;
  if (!qword_1EF2B5790)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB3D8, &_s10CodingTypeON_73);
    atomic_store(result, (unint64_t *)&qword_1EF2B5790);
  }
  return result;
}

unint64_t sub_1BAEE33F4()
{
  unint64_t result;

  result = qword_1EF2B5798;
  if (!qword_1EF2B5798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB4A0, &_s10CodingTypeON_72);
    atomic_store(result, (unint64_t *)&qword_1EF2B5798);
  }
  return result;
}

unint64_t sub_1BAEE3438()
{
  unint64_t result;

  result = qword_1EF2B57A0;
  if (!qword_1EF2B57A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB630, &_s10CodingTypeON_70);
    atomic_store(result, (unint64_t *)&qword_1EF2B57A0);
  }
  return result;
}

unint64_t sub_1BAEE347C()
{
  unint64_t result;

  result = qword_1ED3A8D68;
  if (!qword_1ED3A8D68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBC20, &_s10CodingTypeON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D68);
  }
  return result;
}

unint64_t sub_1BAEE34C0()
{
  unint64_t result;

  result = qword_1ED3D0AE0;
  if (!qword_1ED3D0AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBD78, &_s10CodingTypeON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3D0AE0);
  }
  return result;
}

unint64_t sub_1BAEE3504()
{
  unint64_t result;

  result = qword_1ED3C21A0;
  if (!qword_1ED3C21A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC330, &_s10CodingTypeON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3C21A0);
  }
  return result;
}

unint64_t sub_1BAEE3548()
{
  unint64_t result;

  result = qword_1EF2B57A8;
  if (!qword_1EF2B57A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC700, &_s10CodingTypeON_61);
    atomic_store(result, (unint64_t *)&qword_1EF2B57A8);
  }
  return result;
}

unint64_t sub_1BAEE358C()
{
  unint64_t result;

  result = qword_1EF2B57B0;
  if (!qword_1EF2B57B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC8E8, &_s10CodingTypeON_60);
    atomic_store(result, (unint64_t *)&qword_1EF2B57B0);
  }
  return result;
}

unint64_t sub_1BAEE35D0()
{
  unint64_t result;

  result = qword_1EF2B57B8;
  if (!qword_1EF2B57B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC9B0, &_s10CodingTypeON_59);
    atomic_store(result, (unint64_t *)&qword_1EF2B57B8);
  }
  return result;
}

unint64_t sub_1BAEE3614()
{
  unint64_t result;

  result = qword_1EF2B57C0;
  if (!qword_1EF2B57C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCB98, &_s10CodingTypeON_58);
    atomic_store(result, (unint64_t *)&qword_1EF2B57C0);
  }
  return result;
}

unint64_t sub_1BAEE3658()
{
  unint64_t result;

  result = qword_1ED3A54C8;
  if (!qword_1ED3A54C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCE48, &_s10CodingTypeON_56);
    atomic_store(result, (unint64_t *)&qword_1ED3A54C8);
  }
  return result;
}

unint64_t sub_1BAEE369C()
{
  unint64_t result;

  result = qword_1EF2B57C8;
  if (!qword_1EF2B57C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCF10, &_s10CodingTypeON_55);
    atomic_store(result, (unint64_t *)&qword_1EF2B57C8);
  }
  return result;
}

unint64_t sub_1BAEE36E0()
{
  unint64_t result;

  result = qword_1EF2B57D0;
  if (!qword_1EF2B57D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2930, &_s10CodingTypeON_187);
    atomic_store(result, (unint64_t *)&qword_1EF2B57D0);
  }
  return result;
}

unint64_t sub_1BAEE3724()
{
  unint64_t result;

  result = qword_1ED3A9BE0;
  if (!qword_1ED3A9BE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD400, &_s10CodingTypeON_53);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BE0);
  }
  return result;
}

unint64_t sub_1BAEE3768()
{
  unint64_t result;

  result = qword_1ED3A9BC8;
  if (!qword_1ED3A9BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD4C8, &_s14descr1E72CC479V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A9BC8);
  }
  return result;
}

unint64_t sub_1BAEE37AC()
{
  unint64_t result;

  result = qword_1ED3A6850;
  if (!qword_1ED3A6850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD860, &_s10CodingTypeON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3A6850);
  }
  return result;
}

unint64_t sub_1BAEE37F0()
{
  unint64_t result;

  result = qword_1EF2B57D8;
  if (!qword_1EF2B57D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD9B8, &_s10CodingTypeON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B57D8);
  }
  return result;
}

unint64_t sub_1BAEE3834()
{
  unint64_t result;

  result = qword_1ED3A62A8;
  if (!qword_1ED3A62A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDE70, &_s10CodingTypeON_50);
    atomic_store(result, (unint64_t *)&qword_1ED3A62A8);
  }
  return result;
}

unint64_t sub_1BAEE3878()
{
  unint64_t result;

  result = qword_1ED3A8D98;
  if (!qword_1ED3A8D98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE058, &_s10CodingTypeON_49);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D98);
  }
  return result;
}

unint64_t sub_1BAEE38BC()
{
  unint64_t result;

  result = qword_1ED3A6690;
  if (!qword_1ED3A6690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE3D0, &_s10CodingTypeON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3A6690);
  }
  return result;
}

unint64_t sub_1BAEE3900()
{
  unint64_t result;

  result = qword_1ED3A6658;
  if (!qword_1ED3A6658)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE498, &_s10CodingTypeON_45);
    atomic_store(result, (unint64_t *)&qword_1ED3A6658);
  }
  return result;
}

unint64_t sub_1BAEE3944()
{
  unint64_t result;

  result = qword_1ED3A8440;
  if (!qword_1ED3A8440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE5F0, &_s10CodingTypeON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3A8440);
  }
  return result;
}

unint64_t sub_1BAEE3988()
{
  unint64_t result;

  result = qword_1ED3A8458;
  if (!qword_1ED3A8458)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE6B8, &_s10CodingTypeON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3A8458);
  }
  return result;
}

unint64_t sub_1BAEE39CC()
{
  unint64_t result;

  result = qword_1EF2B57E0;
  if (!qword_1EF2B57E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE8A0, &_s10CodingTypeON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B57E0);
  }
  return result;
}

unint64_t sub_1BAEE3A10()
{
  unint64_t result;

  result = qword_1ED3A7220;
  if (!qword_1ED3A7220)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE968, &_s10CodingTypeON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3A7220);
  }
  return result;
}

unint64_t sub_1BAEE3A54()
{
  unint64_t result;

  result = qword_1EF2B57E8;
  if (!qword_1EF2B57E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF160, &_s10CodingTypeON_38);
    atomic_store(result, (unint64_t *)&qword_1EF2B57E8);
  }
  return result;
}

unint64_t sub_1BAEE3A98()
{
  unint64_t result;

  result = qword_1ED3A4300;
  if (!qword_1ED3A4300)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF2F0, &_s10CodingTypeON_36);
    atomic_store(result, (unint64_t *)&qword_1ED3A4300);
  }
  return result;
}

unint64_t sub_1BAEE3ADC()
{
  unint64_t result;

  result = qword_1ED3A4328;
  if (!qword_1ED3A4328)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF3B8, &_s10CodingTypeON_35);
    atomic_store(result, (unint64_t *)&qword_1ED3A4328);
  }
  return result;
}

unint64_t sub_1BAEE3B20()
{
  unint64_t result;

  result = qword_1EF2B57F0;
  if (!qword_1EF2B57F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF480, &_s10CodingTypeON_34);
    atomic_store(result, (unint64_t *)&qword_1EF2B57F0);
  }
  return result;
}

unint64_t sub_1BAEE3B64()
{
  unint64_t result;

  result = qword_1EF2B57F8;
  if (!qword_1EF2B57F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF888, &_s10CodingTypeON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B57F8);
  }
  return result;
}

unint64_t sub_1BAEE3BA8()
{
  unint64_t result;

  result = qword_1EF2B5800;
  if (!qword_1EF2B5800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF950, &_s14descr1E72CC351C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5800);
  }
  return result;
}

unint64_t sub_1BAEE3BEC()
{
  unint64_t result;

  result = qword_1EF2B5808;
  if (!qword_1EF2B5808)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFD20, &_s10CodingTypeON_29);
    atomic_store(result, (unint64_t *)&qword_1EF2B5808);
  }
  return result;
}

unint64_t sub_1BAEE3C30()
{
  unint64_t result;

  result = qword_1ED3AE390;
  if (!qword_1ED3AE390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFEB0, &_s10CodingTypeON_27);
    atomic_store(result, (unint64_t *)&qword_1ED3AE390);
  }
  return result;
}

unint64_t sub_1BAEE3C74()
{
  unint64_t result;

  result = qword_1EF2B5810;
  if (!qword_1EF2B5810)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFF78, &_s10CodingTypeON_26);
    atomic_store(result, (unint64_t *)&qword_1EF2B5810);
  }
  return result;
}

unint64_t sub_1BAEE3CB8()
{
  unint64_t result;

  result = qword_1ED3D2AC0;
  if (!qword_1ED3D2AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C03D8, &_s10CodingTypeON_24);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AC0);
  }
  return result;
}

unint64_t sub_1BAEE3CFC()
{
  unint64_t result;

  result = qword_1ED3D2B98;
  if (!qword_1ED3D2B98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0530, &_s10CodingTypeON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B98);
  }
  return result;
}

unint64_t sub_1BAEE3D40()
{
  unint64_t result;

  result = qword_1ED3D2B80;
  if (!qword_1ED3D2B80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C05F8, &_s10CodingTypeON_22);
    atomic_store(result, (unint64_t *)&qword_1ED3D2B80);
  }
  return result;
}

unint64_t sub_1BAEE3D84()
{
  unint64_t result;

  result = qword_1EF2B5818;
  if (!qword_1EF2B5818)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C06C0, &_s10CodingTypeON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B5818);
  }
  return result;
}

unint64_t sub_1BAEE3DC8()
{
  unint64_t result;

  result = qword_1EF2B5820;
  if (!qword_1EF2B5820)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0788, &_s10CodingTypeON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B5820);
  }
  return result;
}

unint64_t sub_1BAEE3E0C()
{
  unint64_t result;

  result = qword_1ED3A7890;
  if (!qword_1ED3A7890)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C08E0, &_s10CodingTypeON_19);
    atomic_store(result, (unint64_t *)&qword_1ED3A7890);
  }
  return result;
}

unint64_t sub_1BAEE3E50()
{
  unint64_t result;

  result = qword_1ED3C68A0;
  if (!qword_1ED3C68A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0EF0, &_s10CodingTypeON_17);
    atomic_store(result, (unint64_t *)&qword_1ED3C68A0);
  }
  return result;
}

unint64_t sub_1BAEE3E94()
{
  unint64_t result;

  result = qword_1ED3D2AD0;
  if (!qword_1ED3D2AD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1CA0, &_s10CodingTypeON_11);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AD0);
  }
  return result;
}

unint64_t sub_1BAEE3ED8()
{
  unint64_t result;

  result = qword_1ED3D2C18;
  if (!qword_1ED3D2C18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1D68, &_s10CodingTypeON_10);
    atomic_store(result, (unint64_t *)&qword_1ED3D2C18);
  }
  return result;
}

unint64_t sub_1BAEE3F1C()
{
  unint64_t result;

  result = qword_1EF2B5828;
  if (!qword_1EF2B5828)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2E40, &_s10CodingTypeON_5);
    atomic_store(result, (unint64_t *)&qword_1EF2B5828);
  }
  return result;
}

unint64_t sub_1BAEE3F60()
{
  unint64_t result;

  result = qword_1EF2B5830;
  if (!qword_1EF2B5830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C30F0, &_s10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5830);
  }
  return result;
}

unint64_t sub_1BAEE3FA4()
{
  unint64_t result;

  result = qword_1EF2B5838;
  if (!qword_1EF2B5838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C35E0, &_s14descr1E72CBDC1C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5838);
  }
  return result;
}

unint64_t sub_1BAEE3FE8()
{
  unint64_t result;

  result = qword_1ED3AD740;
  if (!qword_1ED3AD740)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3770, &_s14descr1E72CC159O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3AD740);
  }
  return result;
}

unint64_t sub_1BAEE402C()
{
  unint64_t result;

  result = qword_1EF2B5840;
  if (!qword_1EF2B5840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D27A8, &_s10CodingTypeON_186);
    atomic_store(result, (unint64_t *)&qword_1EF2B5840);
  }
  return result;
}

unint64_t sub_1BAEE4070()
{
  unint64_t result;

  result = qword_1ED3A01A8;
  if (!qword_1ED3A01A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuItemBinding, &type metadata for FormatMenuItemBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A01A8);
  }
  return result;
}

unint64_t sub_1BAEE40B4()
{
  unint64_t result;

  result = qword_1EF2B5848;
  if (!qword_1EF2B5848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92FB34, &type metadata for FormatMenuGroupable);
    atomic_store(result, (unint64_t *)&qword_1EF2B5848);
  }
  return result;
}

unint64_t sub_1BAEE40F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39FCE0;
  if (!qword_1ED39FCE0)
  {
    sub_1BA55B8C4(255, &qword_1ED39FCE8, (uint64_t (*)(void))sub_1BAEE40B4, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t)&type metadata for FormatMenuGroupableData);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39FCE0);
  }
  return result;
}

uint64_t sub_1BAEE4160()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1BAEE4198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39FCC0;
  if (!qword_1ED39FCC0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39FCC8, (uint64_t (*)(void))sub_1BAEE40B4, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39FCC0);
  }
  return result;
}

unint64_t sub_1BAEE4204()
{
  unint64_t result;

  result = qword_1ED39FA58;
  if (!qword_1ED39FA58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91EA8C, &type metadata for FormatMenuGroup);
    atomic_store(result, (unint64_t *)&qword_1ED39FA58);
  }
  return result;
}

uint64_t sub_1BAEE4248()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v1 = v0[3];
  if ((~v1 & 0xF000000000000007) != 0 || (v0[5] & 7) != 7)
    sub_1BA7CCC14(v0[2], v1, v0[4], v0[5]);
  v3 = v0[6];
  v4 = v0[8];
  if ((~(v3 & v4) & 0x3000000000000007) != 0)
    sub_1BA7CCC64(v3, v0[7], v4);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAEE42BC()
{
  uint64_t *v0;

  sub_1BA7CCC14(v0[2], v0[3], v0[4], v0[5]);
  sub_1BA7CCC64(v0[6], v0[7], v0[8]);
  swift_release();
  return swift_deallocObject();
}

void sub_1BAEE42FC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E58)
  {
    sub_1BAEE4374();
    sub_1BA4A2870(&qword_1ED3D1570, (uint64_t (*)(uint64_t))sub_1BAEE4374, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E58);
  }
}

uint64_t sub_1BAEE4374()
{
  uint64_t result;

  result = qword_1ED3D1578;
  if (!qword_1ED3D1578)
  {
    sub_1BAEE43F4();
    sub_1BA7B7038();
    sub_1BAEE4438();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE43F4()
{
  unint64_t result;

  result = qword_1ED3D02D8;
  if (!qword_1ED3D02D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2770, &_s10CodingKeysON_260);
    atomic_store(result, (unint64_t *)&qword_1ED3D02D8);
  }
  return result;
}

unint64_t sub_1BAEE4438()
{
  unint64_t result;

  result = qword_1ED3D02D0;
  if (!qword_1ED3D02D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D26F8, &_s10CodingKeysON_260);
    atomic_store(result, (unint64_t *)&qword_1ED3D02D0);
  }
  return result;
}

void sub_1BAEE447C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE290)
  {
    sub_1BAEE44F4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF2C0, (uint64_t (*)(uint64_t))sub_1BAEE44F4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE290);
  }
}

void sub_1BAEE44F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF2C8)
  {
    sub_1BAEE4374();
    sub_1BA4A2870(&qword_1ED3D1570, (uint64_t (*)(uint64_t))sub_1BAEE4374, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF2C8);
  }
}

uint64_t sub_1BAEE456C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE4578()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3EAD0);
}

uint64_t sub_1BAEE4584()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE4590()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE459C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE4374, &qword_1ED3D1570, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE45D0()
{
  uint64_t v0;

  return sub_1BB7E2AD8(*(uint64_t (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE45D8()
{
  unint64_t result;

  result = qword_1ED3A3258;
  if (!qword_1ED3A3258)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3A3258);
  }
  return result;
}

uint64_t sub_1BAEE462C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE4638()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t *sub_1BAEE4644(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  sub_1BAC68C90(*a1, a1[1], a1[2], a1[3]);
  sub_1BAC68CB0(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1BAEE46A4(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  sub_1BAC68C70(*a1, a1[1], a1[2], a1[3]);
  sub_1BAC68C54(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *sub_1BAEE4704(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  sub_1BA7CCBB4(*a1, a1[1], a1[2], a1[3]);
  sub_1BA7CCCA0(v2, v3, v4);
  swift_retain();
  return a1;
}

uint64_t *sub_1BAEE4764(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  sub_1BA7CCC14(*a1, a1[1], a1[2], a1[3]);
  sub_1BA7CCC64(v2, v3, v4);
  swift_release();
  return a1;
}

uint64_t sub_1BAEE47C4()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEE47D0()
{
  uint64_t v0;

  return sub_1BB7E2878(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

unint64_t sub_1BAEE47D8()
{
  unint64_t result;

  result = qword_1EF2B5850;
  if (!qword_1EF2B5850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D26D0, &_s10CodingTypeON_186);
    atomic_store(result, (unint64_t *)&qword_1EF2B5850);
  }
  return result;
}

uint64_t sub_1BAEE4828()
{
  uint64_t v0;

  return sub_1BAE6045C(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24));
}

uint64_t sub_1BAEE4844()
{
  uint64_t v0;

  return sub_1BAE32350(*(unsigned __int8 *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

unint64_t sub_1BAEE4864()
{
  unint64_t result;

  result = qword_1ED39FA50;
  if (!qword_1ED39FA50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91EA64, &type metadata for FormatMenuGroup);
    atomic_store(result, (unint64_t *)&qword_1ED39FA50);
  }
  return result;
}

unint64_t sub_1BAEE48A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39FCB8;
  if (!qword_1ED39FCB8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39FCC8, (uint64_t (*)(void))sub_1BAEE40B4, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39FCB8);
  }
  return result;
}

unint64_t sub_1BAEE4910()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39FCD8;
  if (!qword_1ED39FCD8)
  {
    sub_1BA55B8C4(255, &qword_1ED39FCE8, (uint64_t (*)(void))sub_1BAEE40B4, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t)&type metadata for FormatMenuGroupableData);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39FCD8);
  }
  return result;
}

unint64_t sub_1BAEE4978()
{
  unint64_t result;

  result = qword_1ED3A01A0;
  if (!qword_1ED3A01A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMenuItemBinding, &type metadata for FormatMenuItemBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A01A0);
  }
  return result;
}

uint64_t sub_1BAEE49BC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEE49C8()
{
  unint64_t result;

  result = qword_1EF2B5858;
  if (!qword_1EF2B5858)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D26A8, &_s10CodingTypeON_187);
    atomic_store(result, (unint64_t *)&qword_1EF2B5858);
  }
  return result;
}

uint64_t sub_1BAEE4A0C()
{
  uint64_t v0;

  return sub_1BAE322A0(*(unsigned __int8 *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1BAEE4A2C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE4A4C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B070;
  if (!qword_1ED39B070)
  {
    sub_1BA50CAA8(255, &qword_1ED3B34E0, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B070);
  }
  return result;
}

uint64_t sub_1BAEE4AB4()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE3DAB8);
}

uint64_t sub_1BAEE4AC0(uint64_t (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(unsigned __int8 *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BAEE4AD0()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatCountLimit.CodingKeys, (uint64_t (*)(void))sub_1BA4C783C);
}

uint64_t sub_1BAEE4AFC()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE3FC98);
}

uint64_t sub_1BAEE4B08()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatMenu.CodingKeys, (uint64_t (*)(void))sub_1BA531020);
}

unint64_t sub_1BAEE4B34()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A0880;
  if (!qword_1ED3A0880)
  {
    sub_1BA4AD288(255, &qword_1ED3C03B8, (uint64_t)&type metadata for FormatMenuGroupable, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEE4BAC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A0880);
  }
  return result;
}

unint64_t sub_1BAEE4BAC()
{
  unint64_t result;

  result = qword_1ED39FE78;
  if (!qword_1ED39FE78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92FB0C, &type metadata for FormatMenuGroupable);
    atomic_store(result, (unint64_t *)&qword_1ED39FE78);
  }
  return result;
}

uint64_t sub_1BAEE4BF0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE4BFC()
{
  unint64_t result;

  result = qword_1EF2B5860;
  if (!qword_1EF2B5860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92F974, &type metadata for FormatPostPurchase.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B5860);
  }
  return result;
}

void sub_1BAEE4C40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B5868)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5870, (uint64_t (*)(void))sub_1BAEE4CC0, (uint64_t)&type metadata for FormatPostPurchase.LegacyCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BAEE4D04();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B5868);
  }
}

unint64_t sub_1BAEE4CC0()
{
  unint64_t result;

  result = qword_1ED3C7E98;
  if (!qword_1ED3C7E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92FA64, &type metadata for FormatPostPurchase.LegacyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3C7E98);
  }
  return result;
}

unint64_t sub_1BAEE4D04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5878;
  if (!qword_1EF2B5878)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5870, (uint64_t (*)(void))sub_1BAEE4CC0, (uint64_t)&type metadata for FormatPostPurchase.LegacyCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5878);
  }
  return result;
}

uint64_t sub_1BAEE4D6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAE60530(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1BAEE4D74()
{
  uint64_t v0;

  return sub_1BAE605A0(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BAEE4D7C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE4D88()
{
  unint64_t result;

  result = qword_1ED3A2990;
  if (!qword_1ED3A2990)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatString, &type metadata for FormatString);
    atomic_store(result, (unint64_t *)&qword_1ED3A2990);
  }
  return result;
}

uint64_t sub_1BAEE4DCC(uint64_t a1, uint64_t a2)
{
  __swift_memcpy50_8(a2, a1);
  return a2;
}

uint64_t sub_1BAEE4E08()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE4E14()
{
  unint64_t result;

  result = qword_1ED3D2520;
  if (!qword_1ED3D2520)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextSize, &type metadata for FormatTextSize);
    atomic_store(result, (unint64_t *)&qword_1ED3D2520);
  }
  return result;
}

unint64_t sub_1BAEE4E58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD5A8;
  if (!qword_1ED3AD5A8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3D2AF0, (uint64_t (*)(void))sub_1BAEE4E14, (uint64_t)&type metadata for FormatTextSize, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5A8);
  }
  return result;
}

uint64_t sub_1BAEE4EC0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE4ECC()
{
  unint64_t result;

  result = qword_1ED3D2BB8;
  if (!qword_1ED3D2BB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryValue, &type metadata for FormatContentSizeCategoryValue);
    atomic_store(result, (unint64_t *)&qword_1ED3D2BB8);
  }
  return result;
}

unint64_t sub_1BAEE4F10()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2978;
  if (!qword_1ED3A2978)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3C4140, (uint64_t (*)(void))sub_1BAEE4ECC, (uint64_t)&type metadata for FormatContentSizeCategoryValue, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2978);
  }
  return result;
}

uint64_t sub_1BAEE4F78()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE34E00);
}

uint64_t sub_1BAEE4F84()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatStateMachineDefinition.CodingKeys, (uint64_t (*)(void))sub_1BA611314);
}

unint64_t sub_1BAEE4FB0()
{
  unint64_t result;

  result = qword_1ED39B8E0;
  if (!qword_1ED39B8E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineEvent, &type metadata for FormatStateMachineEvent);
    atomic_store(result, (unint64_t *)&qword_1ED39B8E0);
  }
  return result;
}

void sub_1BAEE4FF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3A9528)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C0E0, (uint64_t (*)(void))sub_1BA4FB65C, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BAEE5074();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3A9528);
  }
}

unint64_t sub_1BAEE5074()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AB5E0;
  if (!qword_1ED3AB5E0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C0E0, (uint64_t (*)(void))sub_1BA4FB65C, (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AB5E0);
  }
  return result;
}

uint64_t sub_1BAEE50DC()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE40210);
}

uint64_t sub_1BAEE50E8()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatStateViewNodeState.CodingKeys, (uint64_t (*)(void))sub_1BA4FB65C);
}

uint64_t objectdestroy_579Tm()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 32) >= 4uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAEE5150(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1A0)
  {
    sub_1BAEE51C8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF0E8, (uint64_t (*)(uint64_t))sub_1BAEE51C8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1A0);
  }
}

void sub_1BAEE51C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF0F0)
  {
    sub_1BAEE5240();
    sub_1BA4A2870(&qword_1ED3D13E0, (uint64_t (*)(uint64_t))sub_1BAEE5240, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF0F0);
  }
}

uint64_t sub_1BAEE5240()
{
  uint64_t result;

  result = qword_1ED3D13E8;
  if (!qword_1ED3D13E8)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0F8, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE52E4();
    sub_1BA7AE0E0();
    sub_1BAEE534C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE52E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18E8;
  if (!qword_1ED3D18E8)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0F8, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18E8);
  }
  return result;
}

unint64_t sub_1BAEE534C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18E0;
  if (!qword_1ED3D18E0)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0F8, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18E0);
  }
  return result;
}

uint64_t sub_1BAEE53B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE53C0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10E68, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE53D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE53E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE5240, &qword_1ED3D13E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE5414()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5420()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE542C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5438()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5444()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5450()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE545C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE190)
  {
    sub_1BAEE54D4();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF0C8, (uint64_t (*)(uint64_t))sub_1BAEE54D4, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE190);
  }
}

void sub_1BAEE54D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF0D0)
  {
    sub_1BAEE554C();
    sub_1BA4A2870(&qword_1ED3D13C0, (uint64_t (*)(uint64_t))sub_1BAEE554C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF0D0);
  }
}

uint64_t sub_1BAEE554C()
{
  uint64_t result;

  result = qword_1ED3D13C8;
  if (!qword_1ED3D13C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0D8, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE55F0();
    sub_1BAEE5658();
    sub_1BAEE56C0();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE55F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18C8;
  if (!qword_1ED3D18C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0D8, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18C8);
  }
  return result;
}

unint64_t sub_1BAEE5658()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CE0D0;
  if (!qword_1ED3CE0D0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0D8, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CE0D0);
  }
  return result;
}

unint64_t sub_1BAEE56C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18C0;
  if (!qword_1ED3D18C0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0D8, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18C0);
  }
  return result;
}

uint64_t sub_1BAEE5728()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5734()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5740()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE554C, &qword_1ED3D13C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE5774()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5780()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE578C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5798()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE57A4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE57B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE57BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B5880)
  {
    sub_1BAEE5834();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B58C0, (uint64_t (*)(uint64_t))sub_1BAEE5834, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B5880);
  }
}

void sub_1BAEE5834()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5888)
  {
    sub_1BAEE58AC();
    sub_1BA4A2870(&qword_1EF2B58B8, (uint64_t (*)(uint64_t))sub_1BAEE58AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5888);
  }
}

uint64_t sub_1BAEE58AC()
{
  uint64_t result;

  result = qword_1EF2B5890;
  if (!qword_1EF2B5890)
  {
    sub_1BAEE597C(255);
    sub_1BA4A2870(&qword_1EF2B58A0, (uint64_t (*)(uint64_t))sub_1BAEE597C, (uint64_t)&unk_1BB8C8120);
    sub_1BA4A2870(&qword_1EF2B58A8, (uint64_t (*)(uint64_t))sub_1BAEE597C, (uint64_t)&unk_1BB8C80D0);
    sub_1BA4A2870(&qword_1EF2B58B0, (uint64_t (*)(uint64_t))sub_1BAEE597C, (uint64_t)&unk_1BB8C80A8);
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

void sub_1BAEE597C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1EF2B5898)
  {
    v2 = sub_1BB86C8B0();
    v3 = sub_1BA4A2870((unint64_t *)&qword_1ED3C44F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t)&protocol conformance descriptor for Date);
    v5 = _s10CodingKeysOMa_86(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1EF2B5898);
  }
}

uint64_t sub_1BAEE59F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A00()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A0C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE58AC, &qword_1EF2B58B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE5A40()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A58()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A64()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A70()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5A7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE5A88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE180)
  {
    sub_1BAEE5B00();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF0A8, (uint64_t (*)(uint64_t))sub_1BAEE5B00, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE180);
  }
}

void sub_1BAEE5B00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF0B0)
  {
    sub_1BAEE5B78();
    sub_1BA4A2870(&qword_1ED3ABF48, (uint64_t (*)(uint64_t))sub_1BAEE5B78, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF0B0);
  }
}

uint64_t sub_1BAEE5B78()
{
  uint64_t result;

  result = qword_1ED3ABF50;
  if (!qword_1ED3ABF50)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A9948, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE5C1C();
    sub_1BAEE5C84();
    sub_1BAEE5CEC();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE5C1C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3ABFF0;
  if (!qword_1ED3ABFF0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A9948, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFF0);
  }
  return result;
}

unint64_t sub_1BAEE5C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A9940;
  if (!qword_1ED3A9940)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A9948, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A9940);
  }
  return result;
}

unint64_t sub_1BAEE5CEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3ABFE8;
  if (!qword_1ED3ABFE8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A9948, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFE8);
  }
  return result;
}

uint64_t sub_1BAEE5D54()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5D60()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5D6C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE5B78, &qword_1ED3ABF48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE5DA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5DAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5DB8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5DC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5DD0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE5DDC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE5DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE1A8)
  {
    sub_1BAEE5E60();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF0F8, (uint64_t (*)(uint64_t))sub_1BAEE5E60, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE1A8);
  }
}

void sub_1BAEE5E60()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF100)
  {
    sub_1BAEE5ED8();
    sub_1BA4A2870(&qword_1ED3ABF58, (uint64_t (*)(uint64_t))sub_1BAEE5ED8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF100);
  }
}

uint64_t sub_1BAEE5ED8()
{
  uint64_t result;

  result = qword_1ED3ABF60;
  if (!qword_1ED3ABF60)
  {
    sub_1BA50CAA8(255, &qword_1ED3A9958, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE5F7C();
    sub_1BAEE5FE4();
    sub_1BAEE604C();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE5F7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AC000;
  if (!qword_1ED3AC000)
  {
    sub_1BA50CAA8(255, &qword_1ED3A9958, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AC000);
  }
  return result;
}

unint64_t sub_1BAEE5FE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A9950;
  if (!qword_1ED3A9950)
  {
    sub_1BA50CAA8(255, &qword_1ED3A9958, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A9950);
  }
  return result;
}

unint64_t sub_1BAEE604C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3ABFF8;
  if (!qword_1ED3ABFF8)
  {
    sub_1BA50CAA8(255, &qword_1ED3A9958, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3ABFF8);
  }
  return result;
}

uint64_t sub_1BAEE60B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE60C0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE60CC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE5ED8, &qword_1ED3ABF58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE6100()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE610C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6118()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6124()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6130()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE613C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE6148(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE198)
  {
    sub_1BAEE61C0();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF0D8, (uint64_t (*)(uint64_t))sub_1BAEE61C0, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE198);
  }
}

void sub_1BAEE61C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF0E0)
  {
    sub_1BAEE6238();
    sub_1BA4A2870(&qword_1ED3D13D0, (uint64_t (*)(uint64_t))sub_1BAEE6238, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF0E0);
  }
}

uint64_t sub_1BAEE6238()
{
  uint64_t result;

  result = qword_1ED3D13D8;
  if (!qword_1ED3D13D8)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0E8, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE62DC();
    sub_1BA75FE70();
    sub_1BAEE6344();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE62DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18D8;
  if (!qword_1ED3D18D8)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0E8, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18D8);
  }
  return result;
}

unint64_t sub_1BAEE6344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18D0;
  if (!qword_1ED3D18D0)
  {
    sub_1BA50CAA8(255, &qword_1ED3CE0E8, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18D0);
  }
  return result;
}

uint64_t sub_1BAEE63AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE63B8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE63C4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE6238, &qword_1ED3D13D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE63F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6404()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6410()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE641C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6428()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6434()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE6440(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE178)
  {
    sub_1BAEE64B8();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF098, (uint64_t (*)(uint64_t))sub_1BAEE64B8, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE178);
  }
}

void sub_1BAEE64B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF0A0)
  {
    sub_1BAEE6530();
    sub_1BA4A2870(&qword_1ED3D13A0, (uint64_t (*)(uint64_t))sub_1BAEE6530, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF0A0);
  }
}

uint64_t sub_1BAEE6530()
{
  uint64_t result;

  result = qword_1ED3D13A8;
  if (!qword_1ED3D13A8)
  {
    sub_1BA68B0A4(255);
    sub_1BA4A2870(&qword_1ED3D18A8, (uint64_t (*)(uint64_t))sub_1BA68B0A4, (uint64_t)&unk_1BB8C8120);
    sub_1BA4A2870(&qword_1ED3CE0B0, (uint64_t (*)(uint64_t))sub_1BA68B0A4, (uint64_t)&unk_1BB8C80D0);
    sub_1BA4A2870(&qword_1ED3D18A0, (uint64_t (*)(uint64_t))sub_1BA68B0A4, (uint64_t)&unk_1BB8C80A8);
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

uint64_t sub_1BAEE6600()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE660C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6618()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE6530, &qword_1ED3D13A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE664C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6658()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6664()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6670()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE667C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6688()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE6694(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1ED3AE188)
  {
    sub_1BAEE670C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1ED3AF0B8, (uint64_t (*)(uint64_t))sub_1BAEE670C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1ED3AE188);
  }
}

void sub_1BAEE670C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF0C0)
  {
    sub_1BAEE6784();
    sub_1BA4A2870(&qword_1ED3D13B0, (uint64_t (*)(uint64_t))sub_1BAEE6784, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF0C0);
  }
}

uint64_t sub_1BAEE6784()
{
  uint64_t result;

  result = qword_1ED3D13B8;
  if (!qword_1ED3D13B8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0C8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE6828();
    sub_1BAEE6890();
    sub_1BAEE68F8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE6828()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18B8;
  if (!qword_1ED3D18B8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0C8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18B8);
  }
  return result;
}

unint64_t sub_1BAEE6890()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CE0C0;
  if (!qword_1ED3CE0C0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0C8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CE0C0);
  }
  return result;
}

unint64_t sub_1BAEE68F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D18B0;
  if (!qword_1ED3D18B0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CE0C8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D18B0);
  }
  return result;
}

uint64_t sub_1BAEE6960()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE696C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6978()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE6784, &qword_1ED3D13B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE69AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE69B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE69C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE69D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE69DC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE69E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE69F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B58C8)
  {
    sub_1BAEE6A6C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B5908, (uint64_t (*)(uint64_t))sub_1BAEE6A6C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B58C8);
  }
}

void sub_1BAEE6A6C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B58D0)
  {
    sub_1BAEE6AE4();
    sub_1BA4A2870(&qword_1EF2B5900, (uint64_t (*)(uint64_t))sub_1BAEE6AE4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B58D0);
  }
}

uint64_t sub_1BAEE6AE4()
{
  uint64_t result;

  result = qword_1EF2B58D8;
  if (!qword_1EF2B58D8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B58E0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE6B88();
    sub_1BAEE6BF0();
    sub_1BAEE6C58();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE6B88()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B58E8;
  if (!qword_1EF2B58E8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B58E0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B58E8);
  }
  return result;
}

unint64_t sub_1BAEE6BF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B58F0;
  if (!qword_1EF2B58F0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B58E0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B58F0);
  }
  return result;
}

unint64_t sub_1BAEE6C58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B58F8;
  if (!qword_1EF2B58F8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B58E0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B58F8);
  }
  return result;
}

uint64_t sub_1BAEE6CC0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6CCC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6CD8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE6AE4, &qword_1EF2B5900, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE6D0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6D18()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6D24()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6D30()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6D3C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE6D48()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE6D54(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B5910)
  {
    sub_1BAEE6DCC();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B5950, (uint64_t (*)(uint64_t))sub_1BAEE6DCC, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B5910);
  }
}

void sub_1BAEE6DCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5918)
  {
    sub_1BAEE6E44();
    sub_1BA4A2870(&qword_1EF2B5948, (uint64_t (*)(uint64_t))sub_1BAEE6E44, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5918);
  }
}

uint64_t sub_1BAEE6E44()
{
  uint64_t result;

  result = qword_1EF2B5920;
  if (!qword_1EF2B5920)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5928, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE6EE8();
    sub_1BAEE6F50();
    sub_1BAEE6FB8();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE6EE8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5930;
  if (!qword_1EF2B5930)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5928, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5930);
  }
  return result;
}

unint64_t sub_1BAEE6F50()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5938;
  if (!qword_1EF2B5938)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5928, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5938);
  }
  return result;
}

unint64_t sub_1BAEE6FB8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5940;
  if (!qword_1EF2B5940)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5928, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5940);
  }
  return result;
}

uint64_t sub_1BAEE7020()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE702C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7038()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE6E44, &qword_1EF2B5948, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE706C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7078()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7084()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7090()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE709C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE70A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE70B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B5958)
  {
    sub_1BAEE712C();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B5998, (uint64_t (*)(uint64_t))sub_1BAEE712C, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B5958);
  }
}

void sub_1BAEE712C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5960)
  {
    sub_1BAEE71A4();
    sub_1BA4A2870(&qword_1EF2B5990, (uint64_t (*)(uint64_t))sub_1BAEE71A4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5960);
  }
}

uint64_t sub_1BAEE71A4()
{
  uint64_t result;

  result = qword_1EF2B5968;
  if (!qword_1EF2B5968)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5970, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    sub_1BAEE7248();
    sub_1BAEE72B0();
    sub_1BAEE7318();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEE7248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5978;
  if (!qword_1EF2B5978)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5970, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C8120, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5978);
  }
  return result;
}

unint64_t sub_1BAEE72B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5980;
  if (!qword_1EF2B5980)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5970, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80D0, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5980);
  }
  return result;
}

unint64_t sub_1BAEE7318()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5988;
  if (!qword_1EF2B5988)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B5970, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))_s10CodingKeysOMa_86);
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C80A8, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5988);
  }
  return result;
}

uint64_t sub_1BAEE7380()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE738C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7398()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEE71A4, &qword_1EF2B5990, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE73CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE73D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE73E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE73F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE73FC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7408()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7414()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE339F0);
}

uint64_t sub_1BAEE7420()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAEE7444()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatColorConditionalProcessor.CodingKeys, (uint64_t (*)(void))sub_1BA582108);
}

void sub_1BAEE7470(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B59A0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    v3 = v2;
    v4 = sub_1BAEE7534();
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B59A0);
  }
}

unint64_t sub_1BAEE74F0()
{
  unint64_t result;

  result = qword_1ED3B3AE8;
  if (!qword_1ED3B3AE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6E8C, &type metadata for FormatPackage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3B3AE8);
  }
  return result;
}

unint64_t sub_1BAEE7534()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59B0;
  if (!qword_1EF2B59B0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B59A8, (uint64_t (*)(void))sub_1BAEE74F0, (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59B0);
  }
  return result;
}

uint64_t sub_1BAEE759C()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE3EFA4);
}

unint64_t sub_1BAEE75A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59B8;
  if (!qword_1EF2B59B8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83A8, (uint64_t (*)(void))sub_1BA89675C, (uint64_t)&type metadata for FormatLocalization, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59B8);
  }
  return result;
}

uint64_t sub_1BAEE7610()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatPackage.CodingKeys, (uint64_t (*)(void))sub_1BAEE74F0);
}

unint64_t sub_1BAEE763C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED3AAEA8;
  if (!qword_1ED3AAEA8)
  {
    sub_1BA4B07F0(255, &qword_1ED3B94F0, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3A6868, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinition, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAEA8);
  }
  return result;
}

unint64_t sub_1BAEE76CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59C0;
  if (!qword_1EF2B59C0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B8398, (uint64_t (*)(void))sub_1BA89682C, (uint64_t)&type metadata for FormatDecoration, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59C0);
  }
  return result;
}

unint64_t sub_1BAEE7734()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59C8;
  if (!qword_1EF2B59C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83D8, (uint64_t (*)(void))sub_1BA896870, (uint64_t)&type metadata for FormatType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59C8);
  }
  return result;
}

unint64_t sub_1BAEE779C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59D0;
  if (!qword_1EF2B59D0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83B8, (uint64_t (*)(void))sub_1BA8968B4, (uint64_t)&type metadata for FormatSupplementary, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59D0);
  }
  return result;
}

void sub_1BAEE7804(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3BFA88)
  {
    v2 = type metadata accessor for FormatSnippet();
    v3 = sub_1BA4A2870(&qword_1ED3D0280, (uint64_t (*)(uint64_t))type metadata accessor for FormatSnippet, (uint64_t)&protocol conformance descriptor for FormatSnippet);
    v5 = type metadata accessor for FormatFileReferenceCollection(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3BFA88);
  }
}

unint64_t sub_1BAEE787C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59E0;
  if (!qword_1EF2B59E0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83F8, (uint64_t (*)(void))sub_1BA896988, (uint64_t)&type metadata for FormatStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59E0);
  }
  return result;
}

unint64_t sub_1BAEE78E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59E8;
  if (!qword_1EF2B59E8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83C8, (uint64_t (*)(void))sub_1BA8969CC, (uint64_t)&type metadata for FormatItem, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59E8);
  }
  return result;
}

unint64_t sub_1BAEE794C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B59F0;
  if (!qword_1EF2B59F0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B83E8, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatFileReferenceCollection);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileReferenceCollection<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B59F0);
  }
  return result;
}

uint64_t sub_1BAEE79B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *(_QWORD *)(a1 + 104);
  v13 = *(_QWORD *)(a1 + 112);
  v2 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 136);
  v4 = *(_QWORD *)(a1 + 144);
  v5 = *(_QWORD *)(a1 + 152);
  v6 = *(_QWORD *)(a1 + 160);
  v11 = *(_OWORD *)(a1 + 168);
  v8 = *(_QWORD *)(a1 + 184);
  v7 = *(_QWORD *)(a1 + 192);
  v9 = *(_BYTE *)(a1 + 200);
  sub_1BAC68A98(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_BYTE *)(a1 + 96), (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C70);
  sub_1BAC68A98(v14, v13, v12, v2, v3, v4, v5, v6, v11, *((uint64_t *)&v11 + 1), v8, v7, v9, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BA796C70);
  return a1;
}

uint64_t *sub_1BAEE7A9C(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  v5 = a1[11];
  v6 = a1[12];
  v7 = a1[13];
  v8 = a1[14];
  sub_1BAC694A8(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  sub_1BAC694A8(v2, v3, v4, v5, v6, v7, v8);
  return a1;
}

uint64_t sub_1BAEE7B28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 80);
  v3 = *(_QWORD *)(a1 + 88);
  v4 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 104);
  v6 = *(_QWORD *)(a1 + 112);
  v7 = *(_QWORD *)(a1 + 120);
  v8 = *(_QWORD *)(a1 + 128);
  v9 = *(_BYTE *)(a1 + 136);
  v11 = *(_QWORD *)(a1 + 72);
  sub_1BA7643E8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64), (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  sub_1BA7643E8(v11, v2, v3, v4, v5, v6, v7, v8, v9, (void (*)(void))sub_1BA5E800C, (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA6E6CC4);
  return a1;
}

uint64_t sub_1BAEE7BF0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  sub_1BAEE7C2C(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_1BAEE7C2C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BA4B07F0(255, a3, a4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t sub_1BAEE7C98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_1BA7AF9E4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1BA7AF9E4(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1BAEE7D3C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE7D48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5A00;
  if (!qword_1EF2B5A00)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3A60, (uint64_t (*)(void))sub_1BAED0CE0, (uint64_t)&type metadata for FormatWebEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A00);
  }
  return result;
}

uint64_t sub_1BAEE7DB0()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEE7DBC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7DC8()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13528, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE7DDC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7DE8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7DF4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAED0BD8, &qword_1ED3D0D80, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE7E28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7E34()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEE7E40()
{
  unint64_t result;

  result = qword_1ED3A5600;
  if (!qword_1ED3A5600)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResize, &type metadata for FormatResize);
    atomic_store(result, (unint64_t *)&qword_1ED3A5600);
  }
  return result;
}

uint64_t sub_1BAEE7E84()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7E90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7E9C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7EA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7EB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE7EC0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE7ECC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A60)
  {
    sub_1BAED0BD8();
    sub_1BA4A2870(&qword_1ED3D0D80, (uint64_t (*)(uint64_t))sub_1BAED0BD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A60);
  }
}

uint64_t sub_1BAEE7F44()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEE7F50()
{
  unint64_t result;

  result = qword_1ED3A6D30;
  if (!qword_1ED3A6D30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9428, &_s4TextO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D30);
  }
  return result;
}

unint64_t sub_1BAEE7F94()
{
  unint64_t result;

  result = qword_1ED3A4310;
  if (!qword_1ED3A4310)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormat, &type metadata for FormatScoreMatchupFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A4310);
  }
  return result;
}

uint64_t sub_1BAEE7FD8()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE7FF8()
{
  unint64_t result;

  result = qword_1ED3AD738;
  if (!qword_1ED3AD738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3748, &_s14descr1E72CC159O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3AD738);
  }
  return result;
}

uint64_t sub_1BAEE803C()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEE8048()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE8068()
{
  unint64_t result;

  result = qword_1ED3A6D58;
  if (!qword_1ED3A6D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3680, &_s10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D58);
  }
  return result;
}

uint64_t sub_1BAEE80AC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE80B8()
{
  unint64_t result;

  result = qword_1ED3A69A0;
  if (!qword_1ED3A69A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E2D58, &_s4TextO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A69A0);
  }
  return result;
}

uint64_t sub_1BAEE80FC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE8108()
{
  unint64_t result;

  result = qword_1EF2B5A08;
  if (!qword_1EF2B5A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8ED920, &_s11TemperatureO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A08);
  }
  return result;
}

uint64_t sub_1BAEE814C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE816C()
{
  unint64_t result;

  result = qword_1ED3A69E0;
  if (!qword_1ED3A69E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F90E0, &_s7CommandO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A69E0);
  }
  return result;
}

uint64_t sub_1BAEE81B0()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE81D0()
{
  unint64_t result;

  result = qword_1EF2B5A10;
  if (!qword_1EF2B5A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C35B8, &_s14descr1E72CBDC1C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A10);
  }
  return result;
}

unint64_t sub_1BAEE8214()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5A18;
  if (!qword_1EF2B5A18)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3A40, (uint64_t (*)(void))sub_1BAED0148, (uint64_t)&type metadata for FormatBlurEffectStyle, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A18);
  }
  return result;
}

uint64_t sub_1BAEE827C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8288()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE1288C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE829C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE82A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE82B4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECFF0C, &qword_1ED3D0E80, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE82E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE82F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8300()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE830C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8318()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8324()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8330()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE833C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8348()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8354()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12748, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE8368()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8374()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8380()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECFD8C, &qword_1ED3D0E70, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE83B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE83C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE83CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE83D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE83E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE83F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE83FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8408()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE8414()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AD8)
  {
    sub_1BAECFD8C();
    sub_1BA4A2870(&qword_1ED3D0E70, (uint64_t (*)(uint64_t))sub_1BAECFD8C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AD8);
  }
}

unint64_t sub_1BAEE848C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4660;
  if (!qword_1ED3C4660)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4668, (void (*)(void))sub_1BA82DD08, (void (*)(void))sub_1BA82DD4C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4660);
  }
  return result;
}

uint64_t sub_1BAEE84F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8500()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE145A0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE8514()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8520()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE852C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8538()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECF684, &qword_1ED3D15B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE856C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8578()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8584()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8590()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE859C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE85A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE85B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E78)
  {
    sub_1BAECF684();
    sub_1BA4A2870(&qword_1ED3D15B0, (uint64_t (*)(uint64_t))sub_1BAECF684, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E78);
  }
}

uint64_t sub_1BAEE862C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8638()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11B6C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE864C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8658()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8664()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECE4FC, &qword_1ED3D1280, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE8698()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86A4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE86F8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8704()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8710()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11A08, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE8724()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8730()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE873C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECE37C, &qword_1ED3D1270, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE8770()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE877C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8788()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8794()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE87A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE87AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE87B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE87C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE87D0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE87DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CD8)
  {
    sub_1BAECE37C();
    sub_1BA4A2870(&qword_1ED3D1270, (uint64_t (*)(uint64_t))sub_1BAECE37C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CD8);
  }
}

unint64_t sub_1BAEE8854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4700;
  if (!qword_1ED3C4700)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4708, (void (*)(void))sub_1BA824A20, (void (*)(void))sub_1BA824A64);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4700);
  }
  return result;
}

uint64_t sub_1BAEE88BC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE88C8()
{
  unint64_t result;

  result = qword_1ED3A8478;
  if (!qword_1ED3A8478)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3220, &_s10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1ED3A8478);
  }
  return result;
}

unint64_t sub_1BAEE890C()
{
  unint64_t result;

  result = qword_1ED3A6B38;
  if (!qword_1ED3A6B38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.URL, &type metadata for FormatHeadlineBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B38);
  }
  return result;
}

uint64_t sub_1BAEE8950()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE895C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11630, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE8970()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE897C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8988()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8994()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECD9D4, &qword_1ED3D0FF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE89C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE89D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE89E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE89EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE89F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8A04()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8A10()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8A1C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8A28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8A34()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8A40()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE8A4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B98)
  {
    sub_1BAECD9D4();
    sub_1BA4A2870(&qword_1ED3D0FF0, (uint64_t (*)(uint64_t))sub_1BAECD9D4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B98);
  }
}

uint64_t sub_1BAEE8AC4()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE8AE4()
{
  unint64_t result;

  result = qword_1EF2B5A20;
  if (!qword_1EF2B5A20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C30C8, &_s10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A20);
  }
  return result;
}

uint64_t sub_1BAEE8B28()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEE8B34()
{
  unint64_t result;

  result = qword_1ED3A7460;
  if (!qword_1ED3A7460)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C3000, &_s10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1ED3A7460);
  }
  return result;
}

unint64_t sub_1BAEE8B78()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39FCD0;
  if (!qword_1ED39FCD0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3BE018, (uint64_t (*)(void))sub_1BA8266B0, (uint64_t)&type metadata for FormatVideoPlayerContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39FCD0);
  }
  return result;
}

unint64_t sub_1BAEE8BE0()
{
  unint64_t result;

  result = qword_1ED3A0508;
  if (!qword_1ED3A0508)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerNodeBinding, &type metadata for FormatVideoPlayerNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0508);
  }
  return result;
}

uint64_t sub_1BAEE8C24()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8C30()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8C3C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8C48()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECD608, &qword_1EF2B3A10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE8C7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8C88()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8C94()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CB8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CD0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CDC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CE8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8CF4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D00()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D0C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECD444, &qword_1EF2B39D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE8D40()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D58()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D64()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D70()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8D7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEE8D88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5A30;
  if (!qword_1EF2B5A30)
  {
    sub_1BA4AD288(255, &qword_1EF2B5A28, (uint64_t)&type metadata for FormatVideoNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEE8E00();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A30);
  }
  return result;
}

unint64_t sub_1BAEE8E00()
{
  unint64_t result;

  result = qword_1EF2B5A38;
  if (!qword_1EF2B5A38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeStyle.Selector, &type metadata for FormatVideoNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A38);
  }
  return result;
}

uint64_t sub_1BAEE8E44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8E50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8E5C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEE8E68()
{
  unint64_t result;

  result = qword_1EF2B5A48;
  if (!qword_1EF2B5A48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeStyle.Selector, &type metadata for FormatVideoNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A48);
  }
  return result;
}

void sub_1BAEE8EAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5A50)
  {
    sub_1BAECD444();
    sub_1BA4A2870(&qword_1EF2B39D8, (uint64_t (*)(uint64_t))sub_1BAECD444, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5A50);
  }
}

unint64_t sub_1BAEE8F24()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5A58;
  if (!qword_1EF2B5A58)
  {
    sub_1BAEFBAC0(255, &qword_1EF2B5A40, (void (*)(void))sub_1BAEE8E68, (void (*)(void))sub_1BAEE8E00);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A58);
  }
  return result;
}

uint64_t sub_1BAEE8F8C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE8FAC()
{
  unint64_t result;

  result = qword_1EF2B5A60;
  if (!qword_1EF2B5A60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C2E18, &_s10CodingTypeON_5);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A60);
  }
  return result;
}

uint64_t sub_1BAEE8FF0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE8FFC()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE140AC, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE9010()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE901C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9028()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9034()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECC048, &qword_1ED3ADA38, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9068()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9074()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9080()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE908C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9098()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE90A4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE90B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE90BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE678)
  {
    sub_1BAECC048();
    sub_1BA4A2870(&qword_1ED3ADA38, (uint64_t (*)(uint64_t))sub_1BAECC048, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE678);
  }
}

uint64_t sub_1BAEE9134()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9140()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE137D8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE9154()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9160()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECABCC, &qword_1ED3D0D70, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9194()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE91A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE91AC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE91B8(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    v3 = sub_1BB86DF60();
    if (!v4)
      atomic_store(v3, a2);
  }
}

void sub_1BAEE9204()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A58)
  {
    sub_1BAECABCC();
    sub_1BA4A2870(&qword_1ED3D0D70, (uint64_t (*)(uint64_t))sub_1BAECABCC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A58);
  }
}

unint64_t sub_1BAEE927C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBEB8;
  if (!qword_1ED3BBEB8)
  {
    sub_1BAEE91B8(255, (unint64_t *)&qword_1ED3BBEC0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBEB8);
  }
  return result;
}

uint64_t sub_1BAEE92E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE92F0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14C34, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

unint64_t sub_1BAEE9304()
{
  unint64_t result;

  result = qword_1EF2B5A70;
  if (!qword_1EF2B5A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoxNodeResize, &type metadata for FormatBoxNodeResize);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A70);
  }
  return result;
}

uint64_t sub_1BAEE9348()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9354()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9360()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAECA624, &qword_1ED3D15A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEE9394()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E70)
  {
    sub_1BAECA624();
    sub_1BA4A2870(&qword_1ED3D15A0, (uint64_t (*)(uint64_t))sub_1BAECA624, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E70);
  }
}

uint64_t sub_1BAEE940C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9418()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3DDCC);
}

uint64_t sub_1BAEE9424()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9430()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE943C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC9054, &qword_1ED3D1630, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9470()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE947C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9488()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C8F8);
}

uint64_t sub_1BAEE9494()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE94A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE94AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC8DD8, &qword_1ED3D1390, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE94E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE94EC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39C30);
}

uint64_t sub_1BAEE94F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9504()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9510()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC8B68, &qword_1ED3D0F50, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9544()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9550()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39D0C);
}

uint64_t sub_1BAEE955C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9568()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC88F8, &qword_1ED3D0F40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE959C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE95A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE95B4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE95C0()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEE95CC()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEE95D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE95E4()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12B78, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE95F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9604()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9610()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC867C, &qword_1ED3D0E60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9644()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9650()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE965C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9668()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9674()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9680()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE968C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9698()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE96A4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE96B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE96BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE96C8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE96D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE96E0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12998, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEE96F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9700()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE970C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC84FC, &qword_1ED3D0E50, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9740()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE974C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9758()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9764()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9770()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE977C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9788()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9794()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE97A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE97AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE97B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE97C4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEE97D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AC8)
  {
    sub_1BAEC84FC();
    sub_1BA4A2870(&qword_1ED3D0E50, (uint64_t (*)(uint64_t))sub_1BAEC84FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AC8);
  }
}

unint64_t sub_1BAEE9848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4650;
  if (!qword_1ED3C4650)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4658, (void (*)(void))sub_1BA82E00C, (void (*)(void))sub_1BA82E050);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4650);
  }
  return result;
}

uint64_t sub_1BAEE98B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE98BC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE98C8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC57B4, &qword_1EF2B3960, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE98FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9908()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9914()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE400E8);
}

uint64_t sub_1BAEE9920()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE992C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9938()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC54C4, &qword_1EF2B3918, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE996C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9978()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9984()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36884);
}

uint64_t sub_1BAEE9990()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE999C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC5254, &qword_1ED3D1180, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE99D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE99DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE99E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE99F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A00()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33E34);
}

uint64_t sub_1BAEE9A0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A18()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A24()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC4FE4, &qword_1ED3D1340, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9A58()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A64()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A70()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33BF4);
}

uint64_t sub_1BAEE9A7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A88()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9A94()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC4D30, &qword_1EF2B38D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9AC8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9AD4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33D20);
}

uint64_t sub_1BAEE9AE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9AEC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9AF8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC4A7C, &qword_1EF2B3888, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9B2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9B38()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE9B44()
{
  unint64_t result;

  result = qword_1EF2B5A78;
  if (!qword_1EF2B5A78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.AlternativeLogic, &type metadata for FormatTextNodeAlternativeLogic.AlternativeLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A78);
  }
  return result;
}

unint64_t sub_1BAEE9B88()
{
  unint64_t result;

  result = qword_1EF2B5A80;
  if (!qword_1EF2B5A80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeAlternativeLogic.LogicalOperator, &type metadata for FormatTextNodeAlternativeLogic.LogicalOperator);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A80);
  }
  return result;
}

uint64_t sub_1BAEE9BCC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE9BD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39C9D0;
  if (!qword_1ED39C9D0)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1ED3B34C0, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39C9D0);
  }
  return result;
}

unint64_t sub_1BAEE9C40()
{
  unint64_t result;

  result = qword_1EF2B5A90;
  if (!qword_1EF2B5A90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextNodeDateTimeFormat, &type metadata for FormatTextNodeDateTimeFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A90);
  }
  return result;
}

unint64_t sub_1BAEE9C84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A0EC8;
  if (!qword_1ED3A0EC8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A0ED0, (uint64_t (*)(void))sub_1BA830FA0, (uint64_t)&type metadata for FormatTextContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A0EC8);
  }
  return result;
}

uint64_t sub_1BAEE9CEC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9CF8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE332E8);
}

uint64_t sub_1BAEE9D04()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9D10()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9D1C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC4448, &qword_1ED3D13F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9D50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9D5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9D68()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE402B8);
}

uint64_t sub_1BAEE9D74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9D80()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9D8C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC4194, &qword_1ED3ADA48, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9DC0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9DCC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9DD8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC3F24, &qword_1ED3D0CE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEE9E0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9E18()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3BABC);
}

uint64_t sub_1BAEE9E24()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEE9E30()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC3C70, &qword_1ED3D0D60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

unint64_t sub_1BAEE9E64()
{
  unint64_t result;

  result = qword_1ED3A04F0;
  if (!qword_1ED3A04F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconPreferredSource, &type metadata for FormatTagIconPreferredSource);
    atomic_store(result, (unint64_t *)&qword_1ED3A04F0);
  }
  return result;
}

uint64_t sub_1BAEE9EA8()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEE9EB4()
{
  unint64_t result;

  result = qword_1EF2B5A98;
  if (!qword_1EF2B5A98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1D40, &_s10CodingTypeON_10);
    atomic_store(result, (unint64_t *)&qword_1EF2B5A98);
  }
  return result;
}

uint64_t sub_1BAEE9EF8()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEE9F04()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEE9F24()
{
  unint64_t result;

  result = qword_1ED3AD560;
  if (!qword_1ED3AD560)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1C78, &_s10CodingTypeON_11);
    atomic_store(result, (unint64_t *)&qword_1ED3AD560);
  }
  return result;
}

uint64_t sub_1BAEE9F68()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEE9F74()
{
  unint64_t result;

  result = qword_1ED3A5B30;
  if (!qword_1ED3A5B30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1BB0, &_s10CodingTypeON_12);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B30);
  }
  return result;
}

unint64_t sub_1BAEE9FB8()
{
  unint64_t result;

  result = qword_1ED39FE30;
  if (!qword_1ED39FE30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconStyle, &type metadata for FormatTagIconStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39FE30);
  }
  return result;
}

uint64_t sub_1BAEE9FFC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEA008()
{
  unint64_t result;

  result = qword_1ED39E148;
  if (!qword_1ED39E148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagMoreActions, &type metadata for FormatTagMoreActions);
    atomic_store(result, (unint64_t *)&qword_1ED39E148);
  }
  return result;
}

uint64_t sub_1BAEEA04C()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEEA058()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA064()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3CEB0);
}

unint64_t sub_1BAEEA070()
{
  unint64_t result;

  result = qword_1ED39FF78;
  if (!qword_1ED39FF78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontAttributes, &type metadata for FormatFontAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39FF78);
  }
  return result;
}

uint64_t sub_1BAEEA0B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA0C0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA0CC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC3934, &qword_1ED3D0C80, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA100()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA10C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3BD58);
}

uint64_t sub_1BAEEA118()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA124()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA130()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC3680, &qword_1EF2B3820, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA164()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA170()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA17C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA188()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA194()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3BC2C);
}

uint64_t sub_1BAEEA1A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA1AC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA1B8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC33CC, &qword_1EF2B37E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA1EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA1F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA204()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA210()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA21C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA228()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3BF98);
}

uint64_t sub_1BAEEA234()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA240()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA24C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC315C, &qword_1ED3D0D50, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA280()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA28C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA298()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA2A4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA2B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA2BC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3BE78);
}

uint64_t sub_1BAEEA2C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA2D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA2E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC2EA8, &qword_1ED3AD858, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA314()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA320()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA32C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA338()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA344()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C0AC);
}

uint64_t sub_1BAEEA350()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA35C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA368()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC2BF4, &qword_1EF2B3798, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA39C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA3A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA3B4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA3C0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEA3CC()
{
  unint64_t result;

  result = qword_1EF2B5AA0;
  if (!qword_1EF2B5AA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Font, &type metadata for FormatSymbolConfig.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AA0);
  }
  return result;
}

unint64_t sub_1BAEEA410()
{
  unint64_t result;

  result = qword_1EF2B5AA8;
  if (!qword_1EF2B5AA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.TextStyle, &type metadata for FormatSymbolConfig.TextStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AA8);
  }
  return result;
}

unint64_t sub_1BAEEA454()
{
  unint64_t result;

  result = qword_1ED3A0EB8;
  if (!qword_1ED3A0EB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Weight, &type metadata for FormatSymbolConfig.Weight);
    atomic_store(result, (unint64_t *)&qword_1ED3A0EB8);
  }
  return result;
}

unint64_t sub_1BAEEA498()
{
  unint64_t result;

  result = qword_1ED3A1348;
  if (!qword_1ED3A1348)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolConfig.Scale, &type metadata for FormatSymbolConfig.Scale);
    atomic_store(result, (unint64_t *)&qword_1ED3A1348);
  }
  return result;
}

uint64_t sub_1BAEEA4DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA4E8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39F74);
}

uint64_t sub_1BAEEA4F4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA500()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC2964, &qword_1ED3D0F30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA534()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA540()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA54C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEA558()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B38)
  {
    sub_1BAEC2964();
    sub_1BA4A2870(&qword_1ED3D0F30, (uint64_t (*)(uint64_t))sub_1BAEC2964, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B38);
  }
}

uint64_t sub_1BAEEA5D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA5DC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3CFF8);
}

uint64_t sub_1BAEEA5E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA5F4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC2508, &qword_1ED3D0C70, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA628()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA634()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA640()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA64C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA658()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEA664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19D8)
  {
    sub_1BAEC2508();
    sub_1BA4A2870(&qword_1ED3D0C70, (uint64_t (*)(uint64_t))sub_1BAEC2508, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19D8);
  }
}

uint64_t sub_1BAEEA6DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA6E8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34CA0);
}

uint64_t sub_1BAEEA6F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA700()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA70C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC1CF4, &qword_1ED3D1320, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA740()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA74C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA758()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA764()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA770()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA77C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA788()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34B00);
}

uint64_t sub_1BAEEA794()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA7A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA7AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC1B74, &qword_1ED3D1310, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEA7E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEA7EC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAFF8;
  if (!qword_1ED3AAFF8)
  {
    sub_1BA4AD288(255, &qword_1ED3AAFF0, (uint64_t)&type metadata for FormatSupplementaryNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA822F9C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAFF8);
  }
  return result;
}

uint64_t sub_1BAEEA864()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA870()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA87C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEA888()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEA894()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1D28)
  {
    sub_1BAEC1B74();
    sub_1BA4A2870(&qword_1ED3D1310, (uint64_t (*)(uint64_t))sub_1BAEC1B74, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1D28);
  }
}

unint64_t sub_1BAEEA90C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4740;
  if (!qword_1ED3C4740)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4748, (void (*)(void))sub_1BA822F58, (void (*)(void))sub_1BA822F9C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4740);
  }
  return result;
}

uint64_t sub_1BAEEA974()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEA980()
{
  unint64_t result;

  result = qword_1ED3AAAF8;
  if (!qword_1ED3AAAF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1240, &_s10CodingTypeON_14);
    atomic_store(result, (unint64_t *)&qword_1ED3AAAF8);
  }
  return result;
}

uint64_t sub_1BAEEA9C4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEA9D0()
{
  unint64_t result;

  result = qword_1ED3AA9C0;
  if (!qword_1ED3AA9C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C1178, &_s10CodingTypeON_15);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9C0);
  }
  return result;
}

unint64_t sub_1BAEEAA14()
{
  unint64_t result;

  result = qword_1ED3A0758;
  if (!qword_1ED3A0758)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistanceAdjustmentValue, &type metadata for FormatSupplementaryNodePinDistanceAdjustmentValue);
    atomic_store(result, (unint64_t *)&qword_1ED3A0758);
  }
  return result;
}

uint64_t sub_1BAEEAA58()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEAA64()
{
  unint64_t result;

  result = qword_1ED3A9CF8;
  if (!qword_1ED3A9CF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C10B0, &_s10CodingTypeON_16);
    atomic_store(result, (unint64_t *)&qword_1ED3A9CF8);
  }
  return result;
}

unint64_t sub_1BAEEAAA8()
{
  unint64_t result;

  result = qword_1ED3A0748;
  if (!qword_1ED3A0748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistanceAdjustment, &type metadata for FormatSupplementaryNodePinDistanceAdjustment);
    atomic_store(result, (unint64_t *)&qword_1ED3A0748);
  }
  return result;
}

uint64_t sub_1BAEEAAEC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAAF8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D164);
}

uint64_t sub_1BAEEAB04()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB10()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC0638, &qword_1ED3D0C60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEAB44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB5C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB68()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB80()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F790);
}

uint64_t sub_1BAEEAB8C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAB98()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC03C8, &qword_1ED3D14C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

unint64_t sub_1BAEEABCC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BDF0;
  if (!qword_1ED39BDF0)
  {
    sub_1BA4AD288(255, &qword_1ED3B9398, (uint64_t)&type metadata for FormatType, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8374F8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BDF0);
  }
  return result;
}

uint64_t sub_1BAEEAC44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAC50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAC5C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAC68()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEAC74()
{
  unint64_t result;

  result = qword_1ED3A2988;
  if (!qword_1ED3A2988)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0EC8, &_s10CodingTypeON_17);
    atomic_store(result, (unint64_t *)&qword_1ED3A2988);
  }
  return result;
}

uint64_t sub_1BAEEACB8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEACC4()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12E7C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEACD8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEACE4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED39BDD0;
  if (!qword_1ED39BDD0)
  {
    sub_1BA4AD288(255, &qword_1ED3B9340, (uint64_t)&type metadata for FormatStateViewNodeState, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEEAD5C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39BDD0);
  }
  return result;
}

unint64_t sub_1BAEEAD5C()
{
  unint64_t result;

  result = qword_1ED39A798[0];
  if (!qword_1ED39A798[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateViewNodeState, &type metadata for FormatStateViewNodeState);
    atomic_store(result, qword_1ED39A798);
  }
  return result;
}

uint64_t sub_1BAEEADA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEADAC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEADB8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEADC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEADD0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEADDC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEADE8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEC0204, &qword_1ED3D0E30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEEAE1C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1AB8)
  {
    sub_1BAEC0204();
    sub_1BA4A2870(&qword_1ED3D0E30, (uint64_t (*)(uint64_t))sub_1BAEC0204, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1AB8);
  }
}

uint64_t sub_1BAEEAE94()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEEAEA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAEAC()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F52C);
}

uint64_t sub_1BAEEAEB8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAEC4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAED0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBF330, &qword_1ED3D1300, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEAF04()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAF10()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37A3C);
}

uint64_t sub_1BAEEAF1C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAF28()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBF0C0, &qword_1ED3D10C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEAF5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAF68()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAF74()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAF80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAF8C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34734);
}

uint64_t sub_1BAEEAF98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAFA4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEAFB0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBEE0C, &qword_1EF2B3740, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEAFE4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEAFF0()
{
  unint64_t result;

  result = qword_1EF2B5AB0;
  if (!qword_1EF2B5AB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DD8B0, &_s4TextO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AB0);
  }
  return result;
}

unint64_t sub_1BAEEB034()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5AB8;
  if (!qword_1EF2B5AB8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3700, (uint64_t (*)(void))sub_1BAEBECE8, (uint64_t)&type metadata for FormatTagBinding.Text, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AB8);
  }
  return result;
}

uint64_t sub_1BAEEB09C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEB0A8()
{
  unint64_t result;

  result = qword_1EF2B5AC0;
  if (!qword_1EF2B5AC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94B914, &_s5ImageO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AC0);
  }
  return result;
}

unint64_t sub_1BAEEB0EC()
{
  unint64_t result;

  result = qword_1ED39FC88;
  if (!qword_1ED39FC88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Image, &type metadata for FormatTagBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED39FC88);
  }
  return result;
}

unint64_t sub_1BAEEB130()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5AC8;
  if (!qword_1EF2B5AC8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B36E0, (uint64_t (*)(void))sub_1BAEBEBF8, (uint64_t)&type metadata for FormatTagBinding.Image, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AC8);
  }
  return result;
}

uint64_t sub_1BAEEB198()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEB1B8()
{
  unint64_t result;

  result = qword_1EF2B5AD0;
  if (!qword_1EF2B5AD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9433AC, &_s8DateTimeO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AD0);
  }
  return result;
}

uint64_t sub_1BAEEB1FC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEB208()
{
  unint64_t result;

  result = qword_1EF2B5AD8;
  if (!qword_1EF2B5AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9219E0, &_s7CommandO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AD8);
  }
  return result;
}

unint64_t sub_1BAEEB24C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5AE0;
  if (!qword_1EF2B5AE0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B36B8, (uint64_t (*)(void))sub_1BAEBEAC4, (uint64_t)&type metadata for FormatTagBinding.Command, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AE0);
  }
  return result;
}

uint64_t sub_1BAEEB2B4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEB2C0()
{
  unint64_t result;

  result = qword_1EF2B5AE8;
  if (!qword_1EF2B5AE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC90C, &_s5ColorO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AE8);
  }
  return result;
}

unint64_t sub_1BAEEB304()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5AF0;
  if (!qword_1EF2B5AF0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B36A0, (uint64_t (*)(void))sub_1BA9BD17C, (uint64_t)&type metadata for FormatTagBinding.Color, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5AF0);
  }
  return result;
}

uint64_t sub_1BAEEB36C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB378()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35034);
}

uint64_t sub_1BAEEB384()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB390()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB39C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBE798, &qword_1ED3AD998, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEB3D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB3DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB3E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB3F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB400()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34104);
}

uint64_t sub_1BAEEB40C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB418()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB424()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBE4E4, &qword_1EF2B3668, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEB458()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB464()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB470()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB47C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB488()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB494()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33F5C);
}

uint64_t sub_1BAEEB4A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB4AC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB4B8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBE320, &qword_1ED3AD9C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEB4EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEB4F8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5B00;
  if (!qword_1EF2B5B00)
  {
    sub_1BA4AD288(255, &qword_1EF2B5AF8, (uint64_t)&type metadata for FormatSponsoredBannerNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEEB570();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B00);
  }
  return result;
}

unint64_t sub_1BAEEB570()
{
  unint64_t result;

  result = qword_1ED3ADC48;
  if (!qword_1ED3ADC48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerNodeStyle.Selector, &type metadata for FormatSponsoredBannerNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC48);
  }
  return result;
}

uint64_t sub_1BAEEB5B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB5C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB5CC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEB5D8()
{
  unint64_t result;

  result = qword_1ED3ADC50;
  if (!qword_1ED3ADC50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerNodeStyle.Selector, &type metadata for FormatSponsoredBannerNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3ADC50);
  }
  return result;
}

void sub_1BAEEB61C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE640)
  {
    sub_1BAEBE320();
    sub_1BA4A2870(&qword_1ED3AD9C8, (uint64_t (*)(uint64_t))sub_1BAEBE320, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE640);
  }
}

unint64_t sub_1BAEEB694()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5B08;
  if (!qword_1EF2B5B08)
  {
    sub_1BAEFBAC0(255, &qword_1ED3AD1B0, (void (*)(void))sub_1BAEEB5D8, (void (*)(void))sub_1BAEEB570);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B08);
  }
  return result;
}

uint64_t sub_1BAEEB6FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB708()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10980, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEB71C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB728()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB734()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB740()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBD6C0, &qword_1ED3AD968, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEB774()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB780()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB78C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB798()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEB7A4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE610)
  {
    sub_1BAEBD6C0();
    sub_1BA4A2870(&qword_1ED3AD968, (uint64_t (*)(uint64_t))sub_1BAEBD6C0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE610);
  }
}

uint64_t sub_1BAEEB81C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEB828()
{
  unint64_t result;

  result = qword_1ED3ABB10;
  if (!qword_1ED3ABB10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C08B8, &_s10CodingTypeON_19);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB10);
  }
  return result;
}

uint64_t sub_1BAEEB86C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB878()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3DEEC);
}

uint64_t sub_1BAEEB884()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB890()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB89C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBBED4, &qword_1EF2B35F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEB8D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEB8DC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEB8E8()
{
  unint64_t result;

  result = qword_1EF2B5B18;
  if (!qword_1EF2B5B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0760, &_s10CodingTypeON_20);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B18);
  }
  return result;
}

unint64_t sub_1BAEEB92C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5B20;
  if (!qword_1EF2B5B20)
  {
    sub_1BA4AD288(255, &qword_1EF2B0E50, (uint64_t)&type metadata for FormatSourceItemTipTrait, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEEB9A4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B20);
  }
  return result;
}

unint64_t sub_1BAEEB9A4()
{
  unint64_t result;

  result = qword_1EF2B5B28;
  if (!qword_1EF2B5B28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipTrait, &type metadata for FormatSourceItemTipTrait);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B28);
  }
  return result;
}

uint64_t sub_1BAEEB9E8()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEB9F4()
{
  unint64_t result;

  result = qword_1EF2B5B38;
  if (!qword_1EF2B5B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0698, &_s10CodingTypeON_21);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B38);
  }
  return result;
}

uint64_t sub_1BAEEBA38()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEBA58()
{
  unint64_t result;

  result = qword_1ED3ADA90;
  if (!qword_1ED3ADA90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C05D0, &_s10CodingTypeON_22);
    atomic_store(result, (unint64_t *)&qword_1ED3ADA90);
  }
  return result;
}

unint64_t sub_1BAEEBA9C()
{
  unint64_t result;

  result = qword_1ED3ADB28;
  if (!qword_1ED3ADB28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipBinding, &type metadata for FormatSourceItemTipBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB28);
  }
  return result;
}

uint64_t sub_1BAEEBAE0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEBAEC()
{
  unint64_t result;

  result = qword_1ED3ADB20;
  if (!qword_1ED3ADB20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C0508, &_s10CodingTypeON_23);
    atomic_store(result, (unint64_t *)&qword_1ED3ADB20);
  }
  return result;
}

unint64_t sub_1BAEEBB30()
{
  unint64_t result;

  result = qword_1ED3AD5B8;
  if (!qword_1ED3AD5B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.SourceItemTip, &type metadata for FormatGroupBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5B8);
  }
  return result;
}

unint64_t sub_1BAEEBB74()
{
  unint64_t result;

  result = qword_1ED3AD568;
  if (!qword_1ED3AD568)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.SourceItemTip, &type metadata for FormatTagBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3AD568);
  }
  return result;
}

unint64_t sub_1BAEEBBB8()
{
  unint64_t result;

  result = qword_1ED3AD750;
  if (!qword_1ED3AD750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.SourceItemTip, &type metadata for FormatWebEmbedBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3AD750);
  }
  return result;
}

unint64_t sub_1BAEEBBFC()
{
  unint64_t result;

  result = qword_1EF2B5B40;
  if (!qword_1EF2B5B40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipTraits, &type metadata for FormatSourceItemTipTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B40);
  }
  return result;
}

uint64_t sub_1BAEEBC40()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBC4C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3ADEC);
}

uint64_t sub_1BAEEBC58()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBC64()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBB810, &qword_1ED3D2B58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEBC98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEBCA4()
{
  unint64_t result;

  result = qword_1ED3ADA98;
  if (!qword_1ED3ADA98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTipObject, &type metadata for FormatSourceItemTipObject);
    atomic_store(result, (unint64_t *)&qword_1ED3ADA98);
  }
  return result;
}

uint64_t sub_1BAEEBCE8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBCF4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBD00()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEBD20()
{
  unint64_t result;

  result = qword_1ED3AD558;
  if (!qword_1ED3AD558)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8C03B0, &_s10CodingTypeON_24);
    atomic_store(result, (unint64_t *)&qword_1ED3AD558);
  }
  return result;
}

unint64_t sub_1BAEEBD64()
{
  unint64_t result;

  result = qword_1ED3AD630;
  if (!qword_1ED3AD630)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItemTip, &type metadata for FormatSourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1ED3AD630);
  }
  return result;
}

uint64_t sub_1BAEEBDA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBDB4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E020);
}

uint64_t sub_1BAEEBDC0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBDCC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBB518, &qword_1ED3D1610, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEBE00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBE0C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE1391C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEBE20()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBE2C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBB398, &qword_1ED3D0CC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEBE60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBE6C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBE78()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEBE84()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A00)
  {
    sub_1BAEBB398();
    sub_1BA4A2870(&qword_1ED3D0CC0, (uint64_t (*)(uint64_t))sub_1BAEBB398, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A00);
  }
}

uint64_t sub_1BAEEBEFC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEBF08()
{
  unint64_t result;

  result = qword_1EF2B5B48;
  if (!qword_1EF2B5B48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotExpireContent, &type metadata for FormatSlotExpireContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B48);
  }
  return result;
}

unint64_t sub_1BAEEBF4C()
{
  unint64_t result;

  result = qword_1EF2B5B50;
  if (!qword_1EF2B5B50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilter, &type metadata for FormatSlotItemTagFilter);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B50);
  }
  return result;
}

unint64_t sub_1BAEEBF90()
{
  unint64_t result;

  result = qword_1ED3AE3A0;
  if (!qword_1ED3AE3A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemPuzzleStatisticTransform, &type metadata for FormatSlotItemPuzzleStatisticTransform);
    atomic_store(result, (unint64_t *)&qword_1ED3AE3A0);
  }
  return result;
}

uint64_t sub_1BAEEBFD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBFE0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E954);
}

uint64_t sub_1BAEEBFEC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEBFF8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEBA9FC, &qword_1ED3D1580, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC02C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC038()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC044()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEC050()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E60)
  {
    sub_1BAEBA9FC();
    sub_1BA4A2870(&qword_1ED3D1580, (uint64_t (*)(uint64_t))sub_1BAEBA9FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E60);
  }
}

uint64_t sub_1BAEEC0C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC0D4()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33064);
}

uint64_t sub_1BAEEC0E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC0EC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC0F8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB8DFC, &qword_1EF2B3550, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC12C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC138()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC144()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC150()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB8B48, &qword_1EF2B3508, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC184()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEC190()
{
  unint64_t result;

  result = qword_1EF2B5B58;
  if (!qword_1EF2B5B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFF50, &_s10CodingTypeON_26);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B58);
  }
  return result;
}

uint64_t sub_1BAEEC1D4()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEC1E0()
{
  unint64_t result;

  result = qword_1ED3AE388;
  if (!qword_1ED3AE388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFE88, &_s10CodingTypeON_27);
    atomic_store(result, (unint64_t *)&qword_1ED3AE388);
  }
  return result;
}

uint64_t sub_1BAEEC224()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEEC230()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEC23C()
{
  unint64_t result;

  result = qword_1EF2B5B60;
  if (!qword_1EF2B5B60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BFCF8, &_s10CodingTypeON_29);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B60);
  }
  return result;
}

unint64_t sub_1BAEEC280()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5B68;
  if (!qword_1EF2B5B68)
  {
    sub_1BA50CAA8(255, (unint64_t *)&qword_1EF2B3158, MEMORY[0x1E0DEB070], (uint64_t)&protocol witness table for Double, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B68);
  }
  return result;
}

uint64_t sub_1BAEEC2E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC2F4()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE329DC);
}

uint64_t sub_1BAEEC300()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC30C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC318()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC324()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC330()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB87B0, &qword_1ED3D1430, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC364()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC370()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11C94, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEC384()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC390()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC39C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB849C, &qword_1ED3D0F20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC3D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC3DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC3E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC3F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC400()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC40C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEC418()
{
  unint64_t result;

  result = qword_1EF2B5B70;
  if (!qword_1EF2B5B70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontLineSizing, &type metadata for FormatFontLineSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B70);
  }
  return result;
}

unint64_t sub_1BAEEC45C()
{
  unint64_t result;

  result = qword_1EF2B5B78;
  if (!qword_1EF2B5B78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSponsoredBannerSizing, &type metadata for FormatSponsoredBannerSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B78);
  }
  return result;
}

unint64_t sub_1BAEEC4A0()
{
  unint64_t result;

  result = qword_1ED39B8C8;
  if (!qword_1ED39B8C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaRatio, &type metadata for FormatLayeredMediaRatio);
    atomic_store(result, (unint64_t *)&qword_1ED39B8C8);
  }
  return result;
}

uint64_t sub_1BAEEC4E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC4F0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE136D8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEC504()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC510()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC51C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB7F5C, &qword_1EF2B3498, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC550()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEC55C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5B80;
  if (!qword_1EF2B5B80)
  {
    sub_1BA4AD288(255, &qword_1EF2B34A0, (uint64_t)&type metadata for FormatShineBlend, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAAC2B4C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B80);
  }
  return result;
}

uint64_t sub_1BAEEC5D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEC5E0()
{
  unint64_t result;

  result = qword_1ED39B088;
  if (!qword_1ED39B088)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion, &type metadata for FormatMotion);
    atomic_store(result, (unint64_t *)&qword_1ED39B088);
  }
  return result;
}

uint64_t sub_1BAEEC624()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC630()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC63C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC648()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC654()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEC660()
{
  unint64_t result;

  result = qword_1EF2B5B88;
  if (!qword_1EF2B5B88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF928, &_s14descr1E72CC351C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B88);
  }
  return result;
}

uint64_t sub_1BAEEC6A4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEC6B0()
{
  unint64_t result;

  result = qword_1EF2B5B90;
  if (!qword_1EF2B5B90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF860, &_s10CodingTypeON_31);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B90);
  }
  return result;
}

unint64_t sub_1BAEEC6F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39F7D8;
  if (!qword_1ED39F7D8)
  {
    sub_1BA4CDF6C(255, &qword_1ED39F7E8, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39F7D8);
  }
  return result;
}

uint64_t sub_1BAEEC75C()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEEC768()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEC788()
{
  unint64_t result;

  result = qword_1ED3A9960;
  if (!qword_1ED3A9960)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF6D0, &_s10CodingTypeON_33);
    atomic_store(result, (unint64_t *)&qword_1ED3A9960);
  }
  return result;
}

unint64_t sub_1BAEEC7CC()
{
  unint64_t result;

  result = qword_1ED3A0168;
  if (!qword_1ED3A0168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.SharedItem, &type metadata for FormatHeadlineBinding.SharedItem);
    atomic_store(result, (unint64_t *)&qword_1ED3A0168);
  }
  return result;
}

uint64_t sub_1BAEEC810()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC81C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE106E0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEC830()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC83C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC848()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC854()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB7BFC, &qword_1ED3D1250, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC888()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC894()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC8A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC8AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC8B8()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F178);
}

uint64_t sub_1BAEEC8C4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC8D0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB798C, &qword_1ED3D1510, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC904()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC910()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F01C);
}

uint64_t sub_1BAEEC91C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC928()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEC934()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB771C, &qword_1ED3D1500, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEC968()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEC974()
{
  unint64_t result;

  result = qword_1EF2B5B98;
  if (!qword_1EF2B5B98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF458, &_s10CodingTypeON_34);
    atomic_store(result, (unint64_t *)&qword_1EF2B5B98);
  }
  return result;
}

uint64_t sub_1BAEEC9B8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEC9C4()
{
  unint64_t result;

  result = qword_1ED3A4320;
  if (!qword_1ED3A4320)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF390, &_s10CodingTypeON_35);
    atomic_store(result, (unint64_t *)&qword_1ED3A4320);
  }
  return result;
}

uint64_t sub_1BAEECA08()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEECA14()
{
  unint64_t result;

  result = qword_1ED3A42F8;
  if (!qword_1ED3A42F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF2C8, &_s10CodingTypeON_36);
    atomic_store(result, (unint64_t *)&qword_1ED3A42F8);
  }
  return result;
}

unint64_t sub_1BAEECA58()
{
  unint64_t result;

  result = qword_1ED3A4338;
  if (!qword_1ED3A4338)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormatName, &type metadata for FormatScoreMatchupFormatName);
    atomic_store(result, (unint64_t *)&qword_1ED3A4338);
  }
  return result;
}

uint64_t sub_1BAEECA9C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEECAA8()
{
  unint64_t result;

  result = qword_1ED3A5770;
  if (!qword_1ED3A5770)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF200, &_s10CodingTypeON_37);
    atomic_store(result, (unint64_t *)&qword_1ED3A5770);
  }
  return result;
}

unint64_t sub_1BAEECAEC()
{
  unint64_t result;

  result = qword_1ED39E590;
  if (!qword_1ED39E590)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPercentage, &type metadata for FormatPercentage);
    atomic_store(result, (unint64_t *)&qword_1ED39E590);
  }
  return result;
}

uint64_t sub_1BAEECB30()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEECB50()
{
  unint64_t result;

  result = qword_1EF2B5BA0;
  if (!qword_1EF2B5BA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BF138, &_s10CodingTypeON_38);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BA0);
  }
  return result;
}

uint64_t sub_1BAEECB94()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECBA0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3836C);
}

uint64_t sub_1BAEECBAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECBB8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECBC4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB7358, &qword_1ED3D1050, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEECBF8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECC04()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECC10()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D3EC);
}

uint64_t sub_1BAEECC1C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECC28()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB711C, &qword_1ED3ABEA8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEECC5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC050)
  {
    sub_1BAEB711C();
    sub_1BA4A2870(&qword_1ED3ABEA8, (uint64_t (*)(uint64_t))sub_1BAEB711C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC050);
  }
}

uint64_t sub_1BAEECCD4()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEECCF4()
{
  unint64_t result;

  result = qword_1ED3A55F8;
  if (!qword_1ED3A55F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BEF50, &_s10CodingTypeON_39);
    atomic_store(result, (unint64_t *)&qword_1ED3A55F8);
  }
  return result;
}

uint64_t sub_1BAEECD38()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECD44()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E158);
}

uint64_t sub_1BAEECD50()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECD5C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB686C, &qword_1ED3D1600, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEECD90()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1EA0)
  {
    sub_1BAEB686C();
    sub_1BA4A2870(&qword_1ED3D1600, (uint64_t (*)(uint64_t))sub_1BAEB686C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1EA0);
  }
}

uint64_t sub_1BAEECE08()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECE14()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34818);
}

uint64_t sub_1BAEECE20()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECE2C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB6148, &qword_1ED3AD9B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEECE60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECE6C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13D44, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEECE80()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECE8C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB5FC8, &qword_1ED3D0C50, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEECEC0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECECC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECED8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECEE4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECEF0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEECEFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19C8)
  {
    sub_1BAEB5FC8();
    sub_1BA4A2870(&qword_1ED3D0C50, (uint64_t (*)(uint64_t))sub_1BAEB5FC8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19C8);
  }
}

uint64_t sub_1BAEECF74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECF80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECF8C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECF98()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB3944, &qword_1ED3AD848, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEECFCC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECFD8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECFE4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECFF0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEECFFC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED008()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB369C, &qword_1ED3D0CB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED03C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED048()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED054()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEED060()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED06C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3584C);
}

uint64_t sub_1BAEED078()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED084()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED090()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB33AC, &qword_1ED3AD988, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED0C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED0D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED0DC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A090);
}

unint64_t sub_1BAEED0E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AC5C0;
  if (!qword_1ED3AC5C0)
  {
    sub_1BA4AD288(255, &qword_1ED3CF6C0, MEMORY[0x1E0DEF040], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA5ED248();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AC5C0);
  }
  return result;
}

uint64_t sub_1BAEED160()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED16C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED178()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB303C, &qword_1ED3AD898, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED1AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED1B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED1C4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED1D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEED1DC()
{
  unint64_t result;

  result = qword_1ED3AC2D0;
  if (!qword_1ED3AC2D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircle, &type metadata for FormatRadialGradientCircle);
    atomic_store(result, (unint64_t *)&qword_1ED3AC2D0);
  }
  return result;
}

uint64_t sub_1BAEED220()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED22C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E2C8);
}

uint64_t sub_1BAEED238()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED244()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED250()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB2D88, &qword_1ED3ADA28, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED284()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED290()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED29C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED2A8()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEED2B4()
{
  unint64_t result;

  result = qword_1ED3A2B80;
  if (!qword_1ED3A2B80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text.CodingType, &type metadata for FormatPuzzleTypeBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B80);
  }
  return result;
}

unint64_t sub_1BAEED2F8()
{
  unint64_t result;

  result = qword_1ED3A0E78;
  if (!qword_1ED3A0E78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArrayIndex, &type metadata for FormatArrayIndex);
    atomic_store(result, (unint64_t *)&qword_1ED3A0E78);
  }
  return result;
}

uint64_t sub_1BAEED33C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEED35C()
{
  unint64_t result;

  result = qword_1ED3A7218;
  if (!qword_1ED3A7218)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE940, &_s10CodingTypeON_41);
    atomic_store(result, (unint64_t *)&qword_1ED3A7218);
  }
  return result;
}

uint64_t sub_1BAEED3A0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEED3AC()
{
  unint64_t result;

  result = qword_1ED3A0FA8;
  if (!qword_1ED3A0FA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color.CodingType, &type metadata for FormatPuzzleTypeBinding.Color.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A0FA8);
  }
  return result;
}

uint64_t sub_1BAEED3F0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEED3FC()
{
  unint64_t result;

  result = qword_1ED3ADBB8;
  if (!qword_1ED3ADBB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text.CodingType, &type metadata for FormatPuzzleStatisticBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBB8);
  }
  return result;
}

uint64_t sub_1BAEED440()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEED44C()
{
  unint64_t result;

  result = qword_1EF2B5BA8;
  if (!qword_1EF2B5BA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE878, &_s10CodingTypeON_42);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BA8);
  }
  return result;
}

uint64_t sub_1BAEED490()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEED49C()
{
  unint64_t result;

  result = qword_1ED3ADBD0;
  if (!qword_1ED3ADBD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8DCF2C, &_s5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBD0);
  }
  return result;
}

uint64_t sub_1BAEED4E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED4EC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35AF0);
}

uint64_t sub_1BAEED4F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED504()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED510()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB28F8, &qword_1EF2B33C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED544()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED550()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED55C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED568()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEED574()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5BB8;
  if (!qword_1EF2B5BB8)
  {
    sub_1BA4AD288(255, &qword_1EF2B5BB0, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEB2520();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BB8);
  }
  return result;
}

uint64_t sub_1BAEED5EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED5F8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3596C);
}

uint64_t sub_1BAEED604()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED610()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB25DC, &qword_1ED3AD978, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED644()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED650()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED65C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED668()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED674()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED680()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEED68C()
{
  unint64_t result;

  result = qword_1ED3A2C70;
  if (!qword_1ED3A2C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE690, &_s10CodingTypeON_43);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C70);
  }
  return result;
}

unint64_t sub_1BAEED6D0()
{
  unint64_t result;

  result = qword_1ED3A2C68;
  if (!qword_1ED3A2C68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeBinding, &type metadata for FormatPuzzleEmbedNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C68);
  }
  return result;
}

unint64_t sub_1BAEED714()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5BC0;
  if (!qword_1EF2B5BC0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3390, (uint64_t (*)(void))sub_1BAEB23B8, (uint64_t)&type metadata for FormatPuzzleEmbedNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BC0);
  }
  return result;
}

uint64_t sub_1BAEED77C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEED79C()
{
  unint64_t result;

  result = qword_1ED3A2C60;
  if (!qword_1ED3A2C60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE5C8, &_s10CodingTypeON_44);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C60);
  }
  return result;
}

uint64_t sub_1BAEED7E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED7EC()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11860, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEED800()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEED80C()
{
  unint64_t result;

  result = qword_1ED3A2BE0;
  if (!qword_1ED3A2BE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle, &type metadata for FormatPuzzleEmbedNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3A2BE0);
  }
  return result;
}

uint64_t sub_1BAEED850()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED85C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEED868()
{
  unint64_t result;

  result = qword_1ED3A2C78;
  if (!qword_1ED3A2C78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeContent, &type metadata for FormatPuzzleEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C78);
  }
  return result;
}

uint64_t sub_1BAEED8AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED8B8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED8C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED8D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED8DC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEED8E8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEB21A8, &qword_1ED3AD8E8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEED91C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEED928()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5D8)
  {
    sub_1BAEB21A8();
    sub_1BA4A2870(&qword_1ED3AD8E8, (uint64_t (*)(uint64_t))sub_1BAEB21A8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5D8);
  }
}

unint64_t sub_1BAEED9A0()
{
  unint64_t result;

  result = qword_1ED3A8468;
  if (!qword_1ED3A8468)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeContent, &type metadata for FormatPuzzleEmbedNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A8468);
  }
  return result;
}

uint64_t sub_1BAEED9E4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEED9F0()
{
  unint64_t result;

  result = qword_1ED3A6628;
  if (!qword_1ED3A6628)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text.CodingType, &type metadata for FormatPuzzleBinding.Text.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A6628);
  }
  return result;
}

unint64_t sub_1BAEEDA34()
{
  unint64_t result;

  result = qword_1ED3A4578;
  if (!qword_1ED3A4578)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineTrackDurationFormat, &type metadata for FormatHeadlineTrackDurationFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A4578);
  }
  return result;
}

uint64_t sub_1BAEEDA78()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEDA84()
{
  unint64_t result;

  result = qword_1ED3A6650;
  if (!qword_1ED3A6650)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE470, &_s10CodingTypeON_45);
    atomic_store(result, (unint64_t *)&qword_1ED3A6650);
  }
  return result;
}

uint64_t sub_1BAEEDAC8()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEDAE8()
{
  unint64_t result;

  result = qword_1EF2B5BC8;
  if (!qword_1EF2B5BC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB948B00, &_s8DateTimeO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BC8);
  }
  return result;
}

uint64_t sub_1BAEEDB2C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEDB38()
{
  unint64_t result;

  result = qword_1ED3A6688;
  if (!qword_1ED3A6688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE3A8, &_s10CodingTypeON_46);
    atomic_store(result, (unint64_t *)&qword_1ED3A6688);
  }
  return result;
}

uint64_t sub_1BAEEDB7C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEDB9C()
{
  unint64_t result;

  result = qword_1EF2B5BD0;
  if (!qword_1EF2B5BD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB92169C, &_s4BoolO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BD0);
  }
  return result;
}

uint64_t sub_1BAEEDBE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDBEC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3642C);
}

uint64_t sub_1BAEEDBF8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDC04()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDC10()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAFE2C, &qword_1ED3D2B68, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEDC44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDC50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDC5C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDC68()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEEDC74()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEEDC80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDC8C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37B88);
}

uint64_t sub_1BAEEDC98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDCA4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDCB0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAFBBC, &qword_1ED3D10B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEDCE4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDCF0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDCFC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDD08()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDD14()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEDD20()
{
  unint64_t result;

  result = qword_1ED3A8D90;
  if (!qword_1ED3A8D90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BE030, &_s10CodingTypeON_49);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D90);
  }
  return result;
}

unint64_t sub_1BAEEDD64()
{
  unint64_t result;

  result = qword_1ED3A6188;
  if (!qword_1ED3A6188)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFloatBinding, &type metadata for FormatFloatBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A6188);
  }
  return result;
}

uint64_t sub_1BAEEDDA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDDB4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE348F4);
}

uint64_t sub_1BAEEDDC0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDDCC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDDD8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAF880, &qword_1ED3ABF28, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEDE0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEDE18()
{
  unint64_t result;

  result = qword_1ED3A8DA8;
  if (!qword_1ED3A8DA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressViewNodeDuration, &type metadata for FormatProgressViewNodeDuration);
    atomic_store(result, (unint64_t *)&qword_1ED3A8DA8);
  }
  return result;
}

uint64_t sub_1BAEEDE5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDE68()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE1120C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEDE7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDE88(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 88);
  v8 = *(_QWORD *)(a1 + 96);
  v9 = *(_QWORD *)(a1 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(unsigned __int8 *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned __int8 *)(a1 + 56));
  a2(v4, v5, v6, v7, v8, v9, v10, v11);
  return a1;
}

unint64_t sub_1BAEEDF1C()
{
  unint64_t result;

  result = qword_1ED3A62B8;
  if (!qword_1ED3A62B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressKind, &type metadata for FormatProgressKind);
    atomic_store(result, (unint64_t *)&qword_1ED3A62B8);
  }
  return result;
}

uint64_t sub_1BAEEDF60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDF6C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEDF78()
{
  unint64_t result;

  result = qword_1ED3A88E0;
  if (!qword_1ED3A88E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressViewNodeContent, &type metadata for FormatProgressViewNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A88E0);
  }
  return result;
}

uint64_t sub_1BAEEDFBC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDFC8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDFD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDFE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDFEC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEDFF8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAF5AC, &qword_1ED3ABED8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEEE02C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC068)
  {
    sub_1BAEAF5AC();
    sub_1BA4A2870(&qword_1ED3ABED8, (uint64_t (*)(uint64_t))sub_1BAEAF5AC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC068);
  }
}

unint64_t sub_1BAEEE0A4()
{
  unint64_t result;

  result = qword_1ED3A1620;
  if (!qword_1ED3A1620)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressViewNodeContent, &type metadata for FormatProgressViewNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A1620);
  }
  return result;
}

unint64_t sub_1BAEEE0E8()
{
  unint64_t result;

  result = qword_1ED3A62C0;
  if (!qword_1ED3A62C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressKind, &type metadata for FormatProgressKind);
    atomic_store(result, (unint64_t *)&qword_1ED3A62C0);
  }
  return result;
}

uint64_t sub_1BAEEE12C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEE138()
{
  unint64_t result;

  result = qword_1ED3A62A0;
  if (!qword_1ED3A62A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BDE48, &_s10CodingTypeON_50);
    atomic_store(result, (unint64_t *)&qword_1ED3A62A0);
  }
  return result;
}

unint64_t sub_1BAEEE17C()
{
  unint64_t result;

  result = qword_1ED3A2C30;
  if (!qword_1ED3A2C30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressCircleOptions, &type metadata for FormatProgressCircleOptions);
    atomic_store(result, (unint64_t *)&qword_1ED3A2C30);
  }
  return result;
}

uint64_t sub_1BAEEE1C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE1CC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35378);
}

uint64_t sub_1BAEEE1D8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE1E4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAD94C, &qword_1ED3ABEF8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE218()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE224()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A28C);
}

uint64_t sub_1BAEEE230()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE23C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE248()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAD6DC, &qword_1ED3D0F00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE27C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE288()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE294()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E400);
}

uint64_t sub_1BAEEE2A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE2AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAD45C, &qword_1EF2B3340, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE2E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEE2EC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5BE0)
  {
    sub_1BAEEE36C();
    sub_1BAEAD620();
    sub_1BA865DBC();
    v0 = sub_1BB86DD14();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5BE0);
  }
}

unint64_t sub_1BAEEE36C()
{
  unint64_t result;

  result = qword_1EF2B5BE8;
  if (!qword_1EF2B5BE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPrintNodeValue, &type metadata for FormatPrintNodeValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B5BE8);
  }
  return result;
}

void sub_1BAEEE3B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5BF0)
  {
    sub_1BAEAD45C();
    sub_1BA4A2870(&qword_1EF2B3340, (uint64_t (*)(uint64_t))sub_1BAEAD45C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5BF0);
  }
}

uint64_t sub_1BAEEE428()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE434()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37CBC);
}

uint64_t sub_1BAEEE440()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE44C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE458()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAB584, &qword_1ED3D10A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE48C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE498()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE4A4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE4B0()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F918);
}

uint64_t sub_1BAEEE4BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE4C8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE4D4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAB314, &qword_1ED3D0E20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE508()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE514()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D5BC);
}

uint64_t sub_1BAEEE520()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE52C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE538()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAB0A4, &qword_1ED3AD808, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE56C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEE578()
{
  unint64_t result;

  result = qword_1EF2B5C00;
  if (!qword_1EF2B5C00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91B528, &_s4TextO10CodingTypeON_4);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C00);
  }
  return result;
}

uint64_t sub_1BAEEE5BC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEE5C8()
{
  unint64_t result;

  result = qword_1EF2B5C08;
  if (!qword_1EF2B5C08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8E6180, &_s4BoolO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C08);
  }
  return result;
}

uint64_t sub_1BAEEE60C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEE62C()
{
  unint64_t result;

  result = qword_1EF2B5C10;
  if (!qword_1EF2B5C10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD990, &_s10CodingTypeON_51);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C10);
  }
  return result;
}

uint64_t sub_1BAEEE670()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE67C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38DC4);
}

unint64_t sub_1BAEEE688()
{
  unint64_t result;

  result = qword_1ED39BD20;
  if (!qword_1ED39BD20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionAdjustment, &type metadata for FormatPatternPositionAdjustment);
    atomic_store(result, (unint64_t *)&qword_1ED39BD20);
  }
  return result;
}

uint64_t sub_1BAEEE6CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE6D8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE6E4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAAC9C, &qword_1EF2B32E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE718()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEE724()
{
  unint64_t result;

  result = qword_1ED39BC20;
  if (!qword_1ED39BC20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPositionRelative, &type metadata for FormatPatternPositionRelative);
    atomic_store(result, (unint64_t *)&qword_1ED39BC20);
  }
  return result;
}

uint64_t sub_1BAEEE768()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE774()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE780()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEE78C()
{
  unint64_t result;

  result = qword_1ED3A6848;
  if (!qword_1ED3A6848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD838, &_s10CodingTypeON_52);
    atomic_store(result, (unint64_t *)&qword_1ED3A6848);
  }
  return result;
}

unint64_t sub_1BAEEE7D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B930;
  if (!qword_1ED39B930)
  {
    sub_1BA4CDF6C(255, &qword_1ED39D2D8, (uint64_t (*)(void))sub_1BAEAAB44, (uint64_t)&type metadata for FormatPatternContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B930);
  }
  return result;
}

uint64_t sub_1BAEEE838()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE844()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3EE88);
}

unint64_t sub_1BAEEE850()
{
  unint64_t result;

  result = qword_1ED39B800;
  if (!qword_1ED39B800)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternPosition, &type metadata for FormatPatternPosition);
    atomic_store(result, (unint64_t *)&qword_1ED39B800);
  }
  return result;
}

uint64_t sub_1BAEEE894()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE8A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE8AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAA83C, &qword_1ED3ADA18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEE8E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEE8EC()
{
  unint64_t result;

  result = qword_1ED39D008;
  if (!qword_1ED39D008)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPatternContent, &type metadata for FormatPatternContent);
    atomic_store(result, (unint64_t *)&qword_1ED39D008);
  }
  return result;
}

uint64_t sub_1BAEEE930()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE93C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE948()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE954()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEE960()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3CB18);
}

unint64_t sub_1BAEEE96C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1EF2B5C18;
  if (!qword_1EF2B5C18)
  {
    sub_1BA4B07F0(255, &qword_1EF2B3298, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED3B3B00, (uint64_t (*)(uint64_t))type metadata accessor for FormatPackage, (uint64_t)&protocol conformance descriptor for FormatPackage);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C18);
  }
  return result;
}

uint64_t sub_1BAEEE9FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEA08()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEA14()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAA4F8, &qword_1EF2B3290, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEA48()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEA54()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEA60()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33418);
}

uint64_t sub_1BAEEEA6C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEA78()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEAA244, &qword_1EF2B3248, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEAAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEAB8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE334F4);
}

uint64_t sub_1BAEEEAC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEAD0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEADC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA9F90, &qword_1EF2B3200, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEB10()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEB1C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEB28()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEB34()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEB40()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C2A0);
}

uint64_t sub_1BAEEEB4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEB58()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEB64()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA9D20, &qword_1ED3D0D40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEB98()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEEBA4()
{
  unint64_t result;

  result = qword_1ED3A2DA8;
  if (!qword_1ED3A2DA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD4A0, &_s14descr1E72CC479V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DA8);
  }
  return result;
}

uint64_t sub_1BAEEEBE8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEEBF4()
{
  unint64_t result;

  result = qword_1ED3A2DB8;
  if (!qword_1ED3A2DB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BD3D8, &_s10CodingTypeON_53);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DB8);
  }
  return result;
}

uint64_t sub_1BAEEEC38()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEEC44()
{
  unint64_t result;

  result = qword_1ED3A6B00;
  if (!qword_1ED3A6B00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateTimeBinding, &type metadata for FormatDateTimeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B00);
  }
  return result;
}

unint64_t sub_1BAEEEC88()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A2FA0;
  if (!qword_1ED3A2FA0)
  {
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3A1020, (uint64_t)&type metadata for FormatOptionsNodeStatementModifier, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8208E0();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A2FA0);
  }
  return result;
}

uint64_t sub_1BAEEED00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEED0C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35C3C);
}

uint64_t sub_1BAEEED18()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEED24()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA99A8, &qword_1ED3D1240, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEED58()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEED64()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEED70()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEED7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEED88()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3CC34);
}

uint64_t sub_1BAEEED94()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEDA0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA9828, &qword_1ED3D0CA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEEEDD4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19F0)
  {
    sub_1BAEA9828();
    sub_1BA4A2870(&qword_1ED3D0CA0, (uint64_t (*)(uint64_t))sub_1BAEA9828, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19F0);
  }
}

uint64_t sub_1BAEEEE4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEE58()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEE64()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEE70()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA85B4, &qword_1ED3ABF78, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEEA4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEEB0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D6A4);
}

uint64_t sub_1BAEEEEBC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEEC8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA8344, &qword_1ED3D0C40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEEFC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF08()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF14()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF20()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF2C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3AF04);
}

uint64_t sub_1BAEEEF38()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF44()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA806C, &qword_1ED3D0E10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEEF78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF84()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF90()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEF9C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEFA8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F298);
}

uint64_t sub_1BAEEEFB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEFC0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEEFCC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA7DFC, &qword_1ED3D14F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEF000()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEF00C()
{
  unint64_t result;

  result = qword_1EF2B5C20;
  if (!qword_1EF2B5C20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94F728, &type metadata for FormatOptionDependency);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C20);
  }
  return result;
}

uint64_t sub_1BAEEF050()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF05C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF068()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF074()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF080()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEF0A0()
{
  unint64_t result;

  result = qword_1EF2B5C28;
  if (!qword_1EF2B5C28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCEE8, &_s10CodingTypeON_55);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C28);
  }
  return result;
}

uint64_t sub_1BAEEF0E4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEF0F0()
{
  unint64_t result;

  result = qword_1ED3A1338;
  if (!qword_1ED3A1338)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCE20, &_s10CodingTypeON_56);
    atomic_store(result, (unint64_t *)&qword_1ED3A1338);
  }
  return result;
}

unint64_t sub_1BAEEF134()
{
  unint64_t result;

  result = qword_1EF2B5C30;
  if (!qword_1EF2B5C30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberBinding, &type metadata for FormatNumberBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C30);
  }
  return result;
}

uint64_t sub_1BAEEF178()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF184()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B028);
}

uint64_t sub_1BAEEF190()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF19C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF1A8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA7AC0, &qword_1ED3D0E00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEF1DC()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEEF1E8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEF1F4()
{
  unint64_t result;

  result = qword_1ED3A04C8;
  if (!qword_1ED3A04C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNode, &type metadata for FormatShareAttributionNode);
    atomic_store(result, (unint64_t *)&qword_1ED3A04C8);
  }
  return result;
}

uint64_t sub_1BAEEF238()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF244()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F418);
}

uint64_t sub_1BAEEF250()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF25C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF268()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA6ED4, &qword_1EF2B3190, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEF29C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF2A8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEF2B4()
{
  unint64_t result;

  result = qword_1EF2B5C68;
  if (!qword_1EF2B5C68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BCB70, &_s10CodingTypeON_58);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C68);
  }
  return result;
}

unint64_t sub_1BAEEF2F8()
{
  unint64_t result;

  result = qword_1EF2B5C78;
  if (!qword_1EF2B5C78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMotion.TranslateWithScale, &type metadata for FormatMotion.TranslateWithScale);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C78);
  }
  return result;
}

uint64_t sub_1BAEEF33C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF348()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B110);
}

uint64_t sub_1BAEEF354()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF360()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF36C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA6A7C, &qword_1EF2B3110, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEF3A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF3F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF400()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12FF0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEF414()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF420()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF42C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA68B8, &qword_1EF2B30D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEF460()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF46C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF478()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF484()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEF490()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5C88;
  if (!qword_1EF2B5C88)
  {
    sub_1BA4AD288(255, &qword_1EF2B5C80, (uint64_t)&type metadata for FormatMicaNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEEF508();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C88);
  }
  return result;
}

unint64_t sub_1BAEEF508()
{
  unint64_t result;

  result = qword_1EF2B5C90;
  if (!qword_1EF2B5C90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeStyle.Selector, &type metadata for FormatMicaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B5C90);
  }
  return result;
}

uint64_t sub_1BAEEF54C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF558()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF564()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEF570()
{
  unint64_t result;

  result = qword_1EF2B5CA0;
  if (!qword_1EF2B5CA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeStyle.Selector, &type metadata for FormatMicaNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CA0);
  }
  return result;
}

void sub_1BAEEF5B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5CA8)
  {
    sub_1BAEA68B8();
    sub_1BA4A2870(&qword_1EF2B30D8, (uint64_t (*)(uint64_t))sub_1BAEA68B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5CA8);
  }
}

unint64_t sub_1BAEEF62C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5CB0;
  if (!qword_1EF2B5CB0)
  {
    sub_1BAEFBAC0(255, &qword_1EF2B5C98, (void (*)(void))sub_1BAEEF570, (void (*)(void))sub_1BAEEF508);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CB0);
  }
  return result;
}

uint64_t sub_1BAEEF694()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEEF6A0()
{
  unint64_t result;

  result = qword_1EF2B5CB8;
  if (!qword_1EF2B5CB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC988, &_s10CodingTypeON_59);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CB8);
  }
  return result;
}

unint64_t sub_1BAEEF6E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5CC0;
  if (!qword_1EF2B5CC0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3098, (uint64_t (*)(void))sub_1BAEA5790, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CC0);
  }
  return result;
}

unint64_t sub_1BAEEF74C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5CC8;
  if (!qword_1EF2B5CC8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B3080, (uint64_t (*)(void))sub_1BAEA5790, (uint64_t)&type metadata for FormatMicaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CC8);
  }
  return result;
}

uint64_t sub_1BAEEF7B4()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEF7D4()
{
  unint64_t result;

  result = qword_1EF2B5CD0;
  if (!qword_1EF2B5CD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC8C0, &_s10CodingTypeON_60);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CD0);
  }
  return result;
}

uint64_t sub_1BAEEF818()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF824()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14904, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEF838()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF844()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF850()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA5578, &qword_1EF2B3060, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEF884()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEF890()
{
  unint64_t result;

  result = qword_1ED39E5A8;
  if (!qword_1ED39E5A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTiming, &type metadata for FormatMediaTiming);
    atomic_store(result, (unint64_t *)&qword_1ED39E5A8);
  }
  return result;
}

uint64_t sub_1BAEEF8D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEF8E0()
{
  unint64_t result;

  result = qword_1ED39E6B0;
  if (!qword_1ED39E6B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaNodeContent, &type metadata for FormatMicaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED39E6B0);
  }
  return result;
}

uint64_t sub_1BAEEF924()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF930()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF93C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF948()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF954()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEEF960()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5CD8)
  {
    sub_1BAEA5578();
    sub_1BA4A2870(&qword_1EF2B3060, (uint64_t (*)(uint64_t))sub_1BAEA5578, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5CD8);
  }
}

uint64_t sub_1BAEEF9D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF9E4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A3BC);
}

uint64_t sub_1BAEEF9F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEF9FC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFA08()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA247C, &qword_1EF2B3010, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFA3C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFA48()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFA54()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFA60()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEFA80()
{
  unint64_t result;

  result = qword_1EF2B5CE0;
  if (!qword_1EF2B5CE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC6D8, &_s10CodingTypeON_61);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CE0);
  }
  return result;
}

unint64_t sub_1BAEEFAC4()
{
  unint64_t result;

  result = qword_1ED3A0170;
  if (!qword_1ED3A0170)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.SharedMenuItem, &type metadata for FormatHeadlineBinding.SharedMenuItem);
    atomic_store(result, (unint64_t *)&qword_1ED3A0170);
  }
  return result;
}

uint64_t sub_1BAEEFB08()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEEFB14()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFB20()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32898);
}

uint64_t sub_1BAEEFB2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFB38()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFB44()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA2140, &qword_1EF2B2FC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFB78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFB84()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13BC8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEEFB98(uint64_t a1, uint64_t a2)
{
  __swift_memcpy33_8(a2, a1);
  return a2;
}

uint64_t sub_1BAEEFBD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFBE0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFBEC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA1ED0, &qword_1ED3AD838, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFC20()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFC2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEEFC38()
{
  unint64_t result;

  result = qword_1ED39E7F0;
  if (!qword_1ED39E7F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFillMode, &type metadata for FormatMediaTimingFillMode);
    atomic_store(result, (unint64_t *)&qword_1ED39E7F0);
  }
  return result;
}

uint64_t sub_1BAEEFC7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFC88()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFC94()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36D6C);
}

uint64_t sub_1BAEEFCA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFCAC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFCB8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA1C60, &qword_1ED3D1160, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFCEC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFCF8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFD04()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36C18);
}

uint64_t sub_1BAEEFD10()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFD1C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA1988, &qword_1ED3D1150, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFD50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFD5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFD68()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFD74()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEEFD94()
{
  unint64_t result;

  result = qword_1ED3A2BB0;
  if (!qword_1ED3A2BB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC308, &_s10CodingTypeON_63);
    atomic_store(result, (unint64_t *)&qword_1ED3A2BB0);
  }
  return result;
}

uint64_t sub_1BAEEFDD8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFDE4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE386D4);
}

uint64_t sub_1BAEEFDF0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFDFC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA1690, &qword_1ED3D1030, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFE30()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFE3C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFE48()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFE54()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEEFE60()
{
  unint64_t result;

  result = qword_1ED3A8D78;
  if (!qword_1ED3A8D78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BC1B0, &_s10CodingTypeON_64);
    atomic_store(result, (unint64_t *)&qword_1ED3A8D78);
  }
  return result;
}

unint64_t sub_1BAEEFEA4()
{
  unint64_t result;

  result = qword_1ED39B7C8;
  if (!qword_1ED39B7C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.LayeredMedia, &type metadata for FormatHeadlineBinding.LayeredMedia);
    atomic_store(result, (unint64_t *)&qword_1ED39B7C8);
  }
  return result;
}

unint64_t sub_1BAEEFEE8()
{
  unint64_t result;

  result = qword_1EF2B5CE8;
  if (!qword_1EF2B5CE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.LayeredMedia, &type metadata for FormatIssueBinding.LayeredMedia);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CE8);
  }
  return result;
}

uint64_t sub_1BAEEFF2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFF38()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37F3C);
}

unint64_t sub_1BAEEFF44()
{
  unint64_t result;

  result = qword_1ED39BCF0;
  if (!qword_1ED39BCF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaRatioBinding, &type metadata for FormatLayeredMediaRatioBinding);
    atomic_store(result, (unint64_t *)&qword_1ED39BCF0);
  }
  return result;
}

uint64_t sub_1BAEEFF88()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFF94()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFFA0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA1420, &qword_1ED3D1080, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEEFFD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEEFFE0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE1059C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

unint64_t sub_1BAEEFFF4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF18;
  if (!qword_1ED3AAF18)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7C0, (uint64_t)&type metadata for FormatLayeredMediaFilter, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA827028();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF18);
  }
  return result;
}

uint64_t sub_1BAEF006C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0078()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0084()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA116C, &qword_1ED3D12C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF00B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF00C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF00D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF00DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF00E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF00F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0100()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF010C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0118()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0124()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0130()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF013C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10420, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF0150()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF015C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0168()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA0FEC, &qword_1ED3D12B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF019C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF01FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0208()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF0214()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1CF8)
  {
    sub_1BAEA0FEC();
    sub_1BA4A2870(&qword_1ED3D12B0, (uint64_t (*)(uint64_t))sub_1BAEA0FEC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1CF8);
  }
}

unint64_t sub_1BAEF028C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4710;
  if (!qword_1ED3C4710)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4718, (void (*)(void))sub_1BA823E08, (void (*)(void))sub_1BA823E4C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4710);
  }
  return result;
}

uint64_t sub_1BAEF02F4()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF0300()
{
  unint64_t result;

  result = qword_1ED3A87B0;
  if (!qword_1ED3A87B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBF38, &_s10CodingTypeON_65);
    atomic_store(result, (unint64_t *)&qword_1ED3A87B0);
  }
  return result;
}

unint64_t sub_1BAEF0344()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5CF0;
  if (!qword_1EF2B5CF0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2F80, (uint64_t (*)(void))sub_1BAEA092C, (uint64_t)&type metadata for FormatLayeredMediaNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CF0);
  }
  return result;
}

uint64_t sub_1BAEF03AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF03B8()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11378, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF03CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF03D8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF03E4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA0824, &qword_1ED3D1020, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF0418()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0424()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0430()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF043C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0448()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0454()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0460()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF046C()
{
  unint64_t result;

  result = qword_1ED39BC18;
  if (!qword_1ED39BC18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLayeredMediaNodeContent, &type metadata for FormatLayeredMediaNodeContent);
    atomic_store(result, (unint64_t *)&qword_1ED39BC18);
  }
  return result;
}

void sub_1BAEF04B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BB0)
  {
    sub_1BAEA0824();
    sub_1BA4A2870(&qword_1ED3D1020, (uint64_t (*)(uint64_t))sub_1BAEA0824, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BB0);
  }
}

uint64_t sub_1BAEF0528()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0534()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36E94);
}

uint64_t sub_1BAEF0540()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF054C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0558()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA02DC, &qword_1ED3D1140, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF058C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0598()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF05B8()
{
  unint64_t result;

  result = qword_1ED3AD7B8;
  if (!qword_1ED3AD7B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBD50, &_s10CodingTypeON_66);
    atomic_store(result, (unint64_t *)&qword_1ED3AD7B8);
  }
  return result;
}

uint64_t sub_1BAEF05FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0608()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D7C0);
}

uint64_t sub_1BAEF0614()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0620()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEA00A0, &qword_1ED3D0C30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEF0654()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19B8)
  {
    sub_1BAEA00A0();
    sub_1BA4A2870(&qword_1ED3D0C30, (uint64_t (*)(uint64_t))sub_1BAEA00A0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19B8);
  }
}

uint64_t sub_1BAEF06CC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF06D8()
{
  unint64_t result;

  result = qword_1ED3A2D30;
  if (!qword_1ED3A2D30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BBBF8, &_s10CodingTypeON_67);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D30);
  }
  return result;
}

uint64_t sub_1BAEF071C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0728()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE1329C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

unint64_t sub_1BAEF073C()
{
  unint64_t result;

  result = qword_1ED3AD6B8;
  if (!qword_1ED3AD6B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusParameters, &type metadata for FormatFocusParameters);
    atomic_store(result, (unint64_t *)&qword_1ED3AD6B8);
  }
  return result;
}

uint64_t sub_1BAEF0780()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF078C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0798()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9F30C, &qword_1ED3D0DF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF07CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF07D8()
{
  unint64_t result;

  result = qword_1ED3A0FE8;
  if (!qword_1ED3A0FE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyle, &type metadata for FormatItemNodeSwipeActionStyle);
    atomic_store(result, (unint64_t *)&qword_1ED3A0FE8);
  }
  return result;
}

uint64_t sub_1BAEF081C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0828()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0834()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0840()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF084C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0858()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0864()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0870()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF087C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13114, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF0890()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF089C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF08A8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9F18C, &qword_1ED3D0DE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF08DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF08E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF08F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0900()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF090C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0918()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0924()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0930()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF093C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A90)
  {
    sub_1BAE9F18C();
    sub_1BA4A2870(&qword_1ED3D0DE0, (uint64_t (*)(uint64_t))sub_1BAE9F18C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A90);
  }
}

uint64_t sub_1BAEF09B4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF09C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AE4A8;
  if (!qword_1ED3AE4A8)
  {
    sub_1BA4AD288(255, &qword_1ED3AE4A0, (uint64_t)&type metadata for FormatSourceItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEF0A38();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AE4A8);
  }
  return result;
}

unint64_t sub_1BAEF0A38()
{
  unint64_t result;

  result = qword_1ED3D2AC8;
  if (!qword_1ED3D2AC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItem, &type metadata for FormatSourceItem);
    atomic_store(result, (unint64_t *)&qword_1ED3D2AC8);
  }
  return result;
}

uint64_t sub_1BAEF0A7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0A88()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14AA8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF0A9C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0AA8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9EA44, &qword_1ED3D1560, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF0ADC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0AE8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0AF4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0B00()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0B0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF0B18()
{
  unint64_t result;

  result = qword_1ED3D2438;
  if (!qword_1ED3D2438)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSourceItem, &type metadata for FormatSourceItem);
    atomic_store(result, (unint64_t *)&qword_1ED3D2438);
  }
  return result;
}

void sub_1BAEF0B5C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E50)
  {
    sub_1BAE9EA44();
    sub_1BA4A2870(&qword_1ED3D1560, (uint64_t (*)(uint64_t))sub_1BAE9EA44, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E50);
  }
}

unint64_t sub_1BAEF0BD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D2A00;
  if (!qword_1ED3D2A00)
  {
    sub_1BAEFBAC0(255, &qword_1ED3D2A08, (void (*)(void))sub_1BAEF0B18, (void (*)(void))sub_1BAEF0A38);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D2A00);
  }
  return result;
}

uint64_t sub_1BAEF0C3C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0C48()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE387FC);
}

uint64_t sub_1BAEF0C54()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0C60()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9E500, &qword_1ED3ABEC8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF0C94()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0CA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0CAC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF0CB8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC060)
  {
    sub_1BAE9E500();
    sub_1BA4A2870(&qword_1ED3ABEC8, (uint64_t (*)(uint64_t))sub_1BAE9E500, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC060);
  }
}

uint64_t sub_1BAEF0D30()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0D3C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE15014, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF0D50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0D5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0D68()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0D74()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9B9E8, &qword_1ED3D1470, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF0DA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0DB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0DC0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0DCC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF0DD8()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF0DE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5CF8;
  if (!qword_1EF2B5CF8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2F68, (uint64_t (*)(void))sub_1BAE9B8C0, (uint64_t)&type metadata for FormatIssueCoverContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5CF8);
  }
  return result;
}

uint64_t sub_1BAEF0E4C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF0E58()
{
  unint64_t result;

  result = qword_1EF2B5D00;
  if (!qword_1EF2B5D00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.IssueCover, &type metadata for FormatGroupBinding.IssueCover);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D00);
  }
  return result;
}

uint64_t sub_1BAEF0E9C()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF0EA8()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF0EC8()
{
  unint64_t result;

  result = qword_1EF2B5D08;
  if (!qword_1EF2B5D08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB608, &_s10CodingTypeON_70);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D08);
  }
  return result;
}

uint64_t sub_1BAEF0F0C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BAEF0F2C()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF0F38()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF0F58()
{
  unint64_t result;

  result = qword_1EF2B5D10;
  if (!qword_1EF2B5D10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB94B700, &_s4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D10);
  }
  return result;
}

unint64_t sub_1BAEF0F9C()
{
  unint64_t result;

  result = qword_1ED3A0F68;
  if (!qword_1ED3A0F68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFontSize, &type metadata for FormatBindingFontSize);
    atomic_store(result, (unint64_t *)&qword_1ED3A0F68);
  }
  return result;
}

uint64_t sub_1BAEF0FE0()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF0FEC()
{
  unint64_t result;

  result = qword_1EF2B5D18;
  if (!qword_1EF2B5D18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F6F48, &_s8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D18);
  }
  return result;
}

uint64_t sub_1BAEF1030()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF103C()
{
  unint64_t result;

  result = qword_1ED3A6200;
  if (!qword_1ED3A6200)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB900C88, &_s4BoolO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1ED3A6200);
  }
  return result;
}

uint64_t sub_1BAEF1080()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF10A0()
{
  unint64_t result;

  result = qword_1EF2B5D20;
  if (!qword_1EF2B5D20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB478, &_s10CodingTypeON_72);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D20);
  }
  return result;
}

uint64_t sub_1BAEF10E4()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF1104()
{
  unint64_t result;

  result = qword_1EF2B5D28;
  if (!qword_1EF2B5D28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BB3B0, &_s10CodingTypeON_73);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D28);
  }
  return result;
}

uint64_t sub_1BAEF1148()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF1154()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1160()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12334, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

unint64_t sub_1BAEF1174()
{
  unint64_t result;

  result = qword_1ED3A6DD8;
  if (!qword_1ED3A6DD8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequest, &type metadata for FormatImageNodeRequest);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DD8);
  }
  return result;
}

uint64_t sub_1BAEF11B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF11C4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF11D0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9B4F4, &qword_1ED3D0EE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF1204()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1210()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF121C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1228()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1234()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1240()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF124C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1258()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1264()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1270()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF127C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1288()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1294()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF12A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF12AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF12B8()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12120, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF12CC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF12D8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9B2FC, &qword_1ED3D0ED0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF130C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1318()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1324()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1330()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF133C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1348()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1354()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1360()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF136C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1378()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1384()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1390()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF139C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF13A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF13B4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF13C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B08)
  {
    sub_1BAE9B2FC();
    sub_1BA4A2870(&qword_1ED3D0ED0, (uint64_t (*)(uint64_t))sub_1BAE9B2FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B08);
  }
}

unint64_t sub_1BAEF1438()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C4678;
  if (!qword_1ED3C4678)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4680, (void (*)(void))sub_1BA82D260, (void (*)(void))sub_1BA82D2A4);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C4678);
  }
  return result;
}

unint64_t sub_1BAEF14A0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AB058;
  if (!qword_1ED3AB058)
  {
    sub_1BA4AD288(255, &qword_1ED3AB050, (uint64_t)&type metadata for FormatImageNodeRequestAdjustment, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA8210B4();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AB058);
  }
  return result;
}

uint64_t sub_1BAEF1518()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1524()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35D84);
}

uint64_t sub_1BAEF1530()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF153C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9A82C, &qword_1ED3D1230, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF1570()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF157C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1588()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9A554, &qword_1ED3D1220, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF15BC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF15C8()
{
  unint64_t result;

  result = qword_1ED3A9598;
  if (!qword_1ED3A9598)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BAFE0, &_s10CodingTypeON_75);
    atomic_store(result, (unint64_t *)&qword_1ED3A9598);
  }
  return result;
}

uint64_t sub_1BAEF160C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1618()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38998);
}

unint64_t sub_1BAEF1624()
{
  unint64_t result;

  result = qword_1ED3A7C60;
  if (!qword_1ED3A7C60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequestPath, &type metadata for FormatImageNodeRequestPath);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C60);
  }
  return result;
}

uint64_t sub_1BAEF1668()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1674()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1680()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9A2E4, &qword_1ED3D1010, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF16B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF16C0()
{
  unint64_t result;

  result = qword_1ED3A7C68;
  if (!qword_1ED3A7C68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageNodeRequestSize, &type metadata for FormatImageNodeRequestSize);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C68);
  }
  return result;
}

uint64_t sub_1BAEF1704()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF1710()
{
  unint64_t result;

  result = qword_1ED39FD10;
  if (!qword_1ED39FD10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Image, &type metadata for FormatGroupBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED39FD10);
  }
  return result;
}

unint64_t sub_1BAEF1754()
{
  unint64_t result;

  result = qword_1ED3A6668;
  if (!qword_1ED3A6668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Image, &type metadata for FormatPuzzleBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3A6668);
  }
  return result;
}

unint64_t sub_1BAEF1798()
{
  unint64_t result;

  result = qword_1ED3A7230;
  if (!qword_1ED3A7230)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Image, &type metadata for FormatPuzzleTypeBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1ED3A7230);
  }
  return result;
}

unint64_t sub_1BAEF17DC()
{
  unint64_t result;

  result = qword_1EF2B5D30;
  if (!qword_1EF2B5D30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Image, &type metadata for FormatPuzzleStatisticBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D30);
  }
  return result;
}

unint64_t sub_1BAEF1820()
{
  unint64_t result;

  result = qword_1EF2CCBD0;
  if (!qword_1EF2CCBD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Image, &type metadata for FormatSportsEventBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2CCBD0);
  }
  return result;
}

uint64_t sub_1BAEF1864()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1870()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14250, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF1884()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1890()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF189C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9A098, &qword_1ED3D15F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF18D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF18DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF18E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF18F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1900()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF190C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1918()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF1924()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E98)
  {
    sub_1BAE9A098();
    sub_1BA4A2870(&qword_1ED3D15F0, (uint64_t (*)(uint64_t))sub_1BAE9A098, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E98);
  }
}

uint64_t sub_1BAEF199C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF19A8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38EFC);
}

uint64_t sub_1BAEF19B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF19C0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF19CC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE99998, &qword_1ED3ABEB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF1A00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1A0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1A18()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1A24()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF1A44()
{
  unint64_t result;

  result = qword_1EF2B5D38;
  if (!qword_1EF2B5D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BACA0, &_s10CodingTypeON_77);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D38);
  }
  return result;
}

unint64_t sub_1BAEF1A88()
{
  unint64_t result;

  result = qword_1EF2B5D40;
  if (!qword_1EF2B5D40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDirectionalGradient, &type metadata for FormatDirectionalGradient);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D40);
  }
  return result;
}

uint64_t sub_1BAEF1ACC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1AD8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35FA0);
}

uint64_t sub_1BAEF1AE4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1AF0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1AFC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9965C, &qword_1EF2B2F00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF1B30()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1B3C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1B48()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35E70);
}

uint64_t sub_1BAEF1B54()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1B60()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1B6C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE993EC, &qword_1ED3D1210, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF1BA0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1BAC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF1BB8()
{
  unint64_t result;

  result = qword_1EF2B5D48;
  if (!qword_1EF2B5D48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentBlend.GradientData, &type metadata for FormatImageAdjustmentBlend.GradientData);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D48);
  }
  return result;
}

uint64_t sub_1BAEF1BFC()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF1C1C()
{
  unint64_t result;

  result = qword_1ED3A4580;
  if (!qword_1ED3A4580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA9F0, &_s10CodingTypeON_79);
    atomic_store(result, (unint64_t *)&qword_1ED3A4580);
  }
  return result;
}

uint64_t sub_1BAEF1C60()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF1C6C()
{
  unint64_t result;

  result = qword_1ED3A4570;
  if (!qword_1ED3A4570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA928, &_s10CodingTypeON_80);
    atomic_store(result, (unint64_t *)&qword_1ED3A4570);
  }
  return result;
}

uint64_t sub_1BAEF1CB0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF1CBC()
{
  unint64_t result;

  result = qword_1ED3A6B30;
  if (!qword_1ED3A6B30)
  {
    result = MEMORY[0x1BCCE5B24]("鄟+̥\v", &_s14descr1E72FBAF1C3URLO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B30);
  }
  return result;
}

uint64_t sub_1BAEF1D00()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF1D0C()
{
  unint64_t result;

  result = qword_1ED3A4598;
  if (!qword_1ED3A4598)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineTrackProgressFormat, &type metadata for FormatHeadlineTrackProgressFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A4598);
  }
  return result;
}

uint64_t sub_1BAEF1D50()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF1D5C()
{
  unint64_t result;

  result = qword_1EF2B5D50;
  if (!qword_1EF2B5D50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA860, &_s10CodingTypeON_81);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D50);
  }
  return result;
}

uint64_t sub_1BAEF1DA0()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF1DC0()
{
  unint64_t result;

  result = qword_1ED3A6B20;
  if (!qword_1ED3A6B20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA798, &_s10CodingTypeON_82);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B20);
  }
  return result;
}

uint64_t sub_1BAEF1E04()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF1E24()
{
  unint64_t result;

  result = qword_1ED3A6B28;
  if (!qword_1ED3A6B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA6D0, &_s10CodingTypeON_83);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B28);
  }
  return result;
}

uint64_t sub_1BAEF1E68()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF1E74()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF1E80()
{
  unint64_t result;

  result = qword_1ED3A2B28;
  if (!qword_1ED3A2B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB945B4C, &_s14descr1E733A881C4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B28);
  }
  return result;
}

uint64_t sub_1BAEF1EC4()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF1ED0()
{
  unint64_t result;

  result = qword_1ED3A6B70;
  if (!qword_1ED3A6B70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB9190EC, &_s14descr1E7310681C5FloatO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B70);
  }
  return result;
}

uint64_t sub_1BAEF1F14()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF1F20()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF1F2C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF1F4C()
{
  unint64_t result;

  result = qword_1EF2B5D58;
  if (!qword_1EF2B5D58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA540, &_s10CodingTypeON_85);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D58);
  }
  return result;
}

uint64_t sub_1BAEF1F90()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF1F9C()
{
  unint64_t result;

  result = qword_1ED3A6BA0;
  if (!qword_1ED3A6BA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA478, &_s10CodingTypeON_86);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BA0);
  }
  return result;
}

uint64_t sub_1BAEF1FE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1FEC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF1FF8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE99010, &qword_1ED3D0D20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF202C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2038()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2044()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF2050()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A30)
  {
    sub_1BAE99010();
    sub_1BA4A2870(&qword_1ED3D0D20, (uint64_t (*)(uint64_t))sub_1BAE99010, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A30);
  }
}

uint64_t sub_1BAEF20C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF20D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF20E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF20EC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE98448, &qword_1ED3D1550, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEF2120()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E48)
  {
    sub_1BAE98448();
    sub_1BA4A2870(&qword_1ED3D1550, (uint64_t (*)(uint64_t))sub_1BAE98448, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E48);
  }
}

uint64_t sub_1BAEF2198()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF21A4()
{
  unint64_t result;

  result = qword_1ED3A6DC8;
  if (!qword_1ED3A6DC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8BA290, &_s10CodingTypeON_87);
    atomic_store(result, (unint64_t *)&qword_1ED3A6DC8);
  }
  return result;
}

unint64_t sub_1BAEF21E8()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAE38;
  if (!qword_1ED3AAE38)
  {
    sub_1BA4AD288(255, &qword_1ED3CF728, (uint64_t)&type metadata for FormatBundle, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEF2260();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAE38);
  }
  return result;
}

unint64_t sub_1BAEF2260()
{
  unint64_t result;

  result = qword_1ED3A54C0;
  if (!qword_1ED3A54C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundle, &type metadata for FormatBundle);
    atomic_store(result, (unint64_t *)&qword_1ED3A54C0);
  }
  return result;
}

unint64_t sub_1BAEF22A4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5D60;
  if (!qword_1EF2B5D60)
  {
    sub_1BA4AD288(255, &qword_1EF2B2EA8, (uint64_t)&type metadata for FormatPlatform, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEF231C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D60);
  }
  return result;
}

unint64_t sub_1BAEF231C()
{
  unint64_t result;

  result = qword_1EF2B5D68;
  if (!qword_1EF2B5D68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPlatform, &type metadata for FormatPlatform);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D68);
  }
  return result;
}

unint64_t sub_1BAEF2360()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF90;
  if (!qword_1ED3AAF90)
  {
    sub_1BA4AD288(255, &qword_1ED3CF7E8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEF23D8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF90);
  }
  return result;
}

unint64_t sub_1BAEF23D8()
{
  unint64_t result;

  result = qword_1ED3CC060;
  if (!qword_1ED3CC060)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupColumnSystemKind, &type metadata for FormatGroupColumnSystemKind);
    atomic_store(result, (unint64_t *)&qword_1ED3CC060);
  }
  return result;
}

unint64_t sub_1BAEF241C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AC9F0;
  if (!qword_1ED3AC9F0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AD428, (uint64_t (*)(void))sub_1BAE97428, (uint64_t)&type metadata for FormatSelector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AC9F0);
  }
  return result;
}

uint64_t sub_1BAEF2484()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2490()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37150);
}

uint64_t sub_1BAEF249C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF24A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF24B4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE971EC, &qword_1ED3D1130, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF24E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF24F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2500(uint64_t a1, uint64_t a2)
{
  __swift_memcpy65_8(a2, a1);
  return a2;
}

uint64_t sub_1BAEF253C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2548()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2554()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2560()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF256C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36FCC);
}

uint64_t sub_1BAEF2578()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2584()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2590()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE9706C, &qword_1ED3D1120, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF25C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF25D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF25DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF25E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF25F4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF2600()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C30)
  {
    sub_1BAE9706C();
    sub_1BA4A2870(&qword_1ED3D1120, (uint64_t (*)(uint64_t))sub_1BAE9706C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C30);
  }
}

unint64_t sub_1BAEF2678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C46E0;
  if (!qword_1ED3C46E0)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C46E8, (void (*)(void))sub_1BA8275E0, (void (*)(void))sub_1BA827624);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C46E0);
  }
  return result;
}

uint64_t sub_1BAEF26E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF26EC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B29C);
}

uint64_t sub_1BAEF26F8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2704()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE96C5C, &qword_1ED3D0DD0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF2738()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2744()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF2750()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A88)
  {
    sub_1BAE96C5C();
    sub_1BA4A2870(&qword_1ED3D0DD0, (uint64_t (*)(uint64_t))sub_1BAE96C5C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A88);
  }
}

uint64_t sub_1BAEF27C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF27D4()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14404, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF27E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF27F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2800()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF280C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2818()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2824()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2830()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE964F0, &qword_1ED3D15E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEF2864()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E90)
  {
    sub_1BAE964F0();
    sub_1BA4A2870(&qword_1ED3D15E0, (uint64_t (*)(uint64_t))sub_1BAE964F0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E90);
  }
}

uint64_t sub_1BAEF28DC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF28E8()
{
  unint64_t result;

  result = qword_1ED3A13C0;
  if (!qword_1ED3A13C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9F88, &_s10CodingTypeON_88);
    atomic_store(result, (unint64_t *)&qword_1ED3A13C0);
  }
  return result;
}

unint64_t sub_1BAEF292C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A66E0;
  if (!qword_1ED3A66E0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3C85C8, (uint64_t (*)(void))sub_1BA9275C8, (uint64_t)&type metadata for FormatGroupColumnSystemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A66E0);
  }
  return result;
}

uint64_t sub_1BAEF2994()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF29B4()
{
  unint64_t result;

  result = qword_1EF2B5D70;
  if (!qword_1EF2B5D70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9EC0, &_s10CodingTypeON_89);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D70);
  }
  return result;
}

unint64_t sub_1BAEF29F8()
{
  unint64_t result;

  result = qword_1EF2B5D78;
  if (!qword_1EF2B5D78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Temperature, &type metadata for FormatWeatherBinding.Temperature);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D78);
  }
  return result;
}

uint64_t sub_1BAEF2A3C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF2A48()
{
  unint64_t result;

  result = qword_1ED3AD5B0;
  if (!qword_1ED3AD5B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9DF8, &_s10CodingTypeON_90);
    atomic_store(result, (unint64_t *)&qword_1ED3AD5B0);
  }
  return result;
}

uint64_t sub_1BAEF2A8C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF2AAC()
{
  unint64_t result;

  result = qword_1EF2B5D80;
  if (!qword_1EF2B5D80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9D30, &_s10CodingTypeON_91);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D80);
  }
  return result;
}

uint64_t sub_1BAEF2AF0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF2AFC()
{
  unint64_t result;

  result = qword_1ED3A61D8;
  if (!qword_1ED3A61D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9C68, &_s10CodingTypeON_92);
    atomic_store(result, (unint64_t *)&qword_1ED3A61D8);
  }
  return result;
}

uint64_t sub_1BAEF2B40()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF2B4C()
{
  unint64_t result;

  result = qword_1ED3A2A68;
  if (!qword_1ED3A2A68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9BA0, &_s10CodingTypeON_93);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A68);
  }
  return result;
}

unint64_t sub_1BAEF2B90()
{
  unint64_t result;

  result = qword_1ED3A2B30;
  if (!qword_1ED3A2B30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Font, &type metadata for FormatHeadlineBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B30);
  }
  return result;
}

unint64_t sub_1BAEF2BD4()
{
  unint64_t result;

  result = qword_1EF2B5D88;
  if (!qword_1EF2B5D88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Font, &type metadata for FormatIssueBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D88);
  }
  return result;
}

uint64_t sub_1BAEF2C18()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF2C24()
{
  unint64_t result;

  result = qword_1EF2B5D90;
  if (!qword_1EF2B5D90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9AD8, &_s10CodingTypeON_94);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D90);
  }
  return result;
}

unint64_t sub_1BAEF2C68()
{
  unint64_t result;

  result = qword_1EF2B5D98;
  if (!qword_1EF2B5D98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.DateTime, &type metadata for FormatPuzzleBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B5D98);
  }
  return result;
}

unint64_t sub_1BAEF2CAC()
{
  unint64_t result;

  result = qword_1EF2B5DA0;
  if (!qword_1EF2B5DA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.DateTime, &type metadata for FormatIssueBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DA0);
  }
  return result;
}

uint64_t sub_1BAEF2CF0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF2CFC()
{
  unint64_t result;

  result = qword_1ED3A61B8;
  if (!qword_1ED3A61B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B9A10, &_s10CodingTypeON_95);
    atomic_store(result, (unint64_t *)&qword_1ED3A61B8);
  }
  return result;
}

unint64_t sub_1BAEF2D40()
{
  unint64_t result;

  result = qword_1ED3A13C8;
  if (!qword_1ED3A13C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Color, &type metadata for FormatPuzzleTypeBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED3A13C8);
  }
  return result;
}

unint64_t sub_1BAEF2D84()
{
  unint64_t result;

  result = qword_1EF2BF170;
  if (!qword_1EF2BF170)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Color, &type metadata for FormatSportsEventBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BF170);
  }
  return result;
}

uint64_t sub_1BAEF2DC8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF2DD4()
{
  unint64_t result;

  result = qword_1ED39FD40;
  if (!qword_1ED39FD40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Bool, &type metadata for FormatIssueBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39FD40);
  }
  return result;
}

unint64_t sub_1BAEF2E18()
{
  unint64_t result;

  result = qword_1EF2B5DA8;
  if (!qword_1EF2B5DA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Bool, &type metadata for FormatPaywallBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DA8);
  }
  return result;
}

uint64_t sub_1BAEF2E5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2E68()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36574);
}

uint64_t sub_1BAEF2E74()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2E80()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE95084, &qword_1ED3D11B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

unint64_t sub_1BAEF2EB4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAEE8;
  if (!qword_1ED3AAEE8)
  {
    sub_1BA4AD288(255, &qword_1ED3AAEE0, (uint64_t)&type metadata for FormatGroupRequirement, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82A444();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAEE8);
  }
  return result;
}

uint64_t sub_1BAEF2F2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2F38()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14E58, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF2F4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2F58()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2F64()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE94DAC, &qword_1ED3D14A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF2F98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2FA4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2FB0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2FBC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2FC8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A4FC);
}

uint64_t sub_1BAEF2FD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2FE0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF2FEC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE94AF8, &qword_1EF2B2E58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3020()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF302C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3038()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3044()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3050()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38020);
}

uint64_t sub_1BAEF305C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3068()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3074()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE94888, &qword_1ED3D1070, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF30A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF30B4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3EC00);
}

uint64_t sub_1BAEF30C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF30CC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF30D8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE94618, &qword_1ED3D1540, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF310C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3118()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3124()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3130()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF313C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3148()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3154()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C558);
}

uint64_t sub_1BAEF3160()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF316C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE94498, &qword_1ED3D0D10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF31A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF31AC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A28)
  {
    sub_1BAE94498();
    sub_1BA4A2870(&qword_1ED3D0D10, (uint64_t (*)(uint64_t))sub_1BAE94498, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A28);
  }
}

uint64_t sub_1BAEF3224()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3230()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3729C);
}

uint64_t sub_1BAEF323C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3248()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3254()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE91A08, &qword_1EF2B2E10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3288()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3294()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32BD8);
}

uint64_t sub_1BAEF32A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF32AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE91754, &qword_1EF2B2DC8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF32E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF32EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF32F8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3304()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3310()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF331C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3328()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3334()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3340()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE914A0, &qword_1ED3AD9E8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3374()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3380()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF338C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39024);
}

uint64_t sub_1BAEF3398()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF33A4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF33B0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE911EC, &qword_1ED3AD8D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF33E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF33F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF33FC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39154);
}

uint64_t sub_1BAEF3408()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3414()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3420()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF342C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3438()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3444()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE90F7C, &qword_1ED3D0FD0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3478()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF3484()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3490()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38A68);
}

uint64_t sub_1BAEF349C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF34A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF34B4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE90D0C, &qword_1ED3D1000, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF34E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF34F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3500()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF350C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3518()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A61C);
}

uint64_t sub_1BAEF3524()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3530()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF353C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3548()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3554()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3560()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE90A58, &qword_1EF2B2D80, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3594()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF35A0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A75C);
}

uint64_t sub_1BAEF35AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF35B8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF35C4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE907E8, &qword_1ED3D0EB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF35F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3604()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3610()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF361C()
{
  unint64_t result;

  result = qword_1ED39FA28;
  if (!qword_1ED39FA28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontWidth, &type metadata for FormatFontWidth);
    atomic_store(result, (unint64_t *)&qword_1ED39FA28);
  }
  return result;
}

uint64_t sub_1BAEF3660()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF366C()
{
  unint64_t result;

  result = qword_1EF2B5DB0;
  if (!qword_1EF2B5DB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8FD8, &_s10CodingTypeON_98);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DB0);
  }
  return result;
}

uint64_t sub_1BAEF36B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF36BC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3927C);
}

unint64_t sub_1BAEF36C8()
{
  unint64_t result;

  result = qword_1EF2B5DB8;
  if (!qword_1EF2B5DB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusPosition, &type metadata for FormatFocusPosition);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DB8);
  }
  return result;
}

uint64_t sub_1BAEF370C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3718()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3724()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE904AC, &qword_1ED3AD8C8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3758()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3764()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF3770()
{
  unint64_t result;

  result = qword_1ED3A6170;
  if (!qword_1ED3A6170)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8E80, &_s10CodingTypeON_99);
    atomic_store(result, (unint64_t *)&qword_1ED3A6170);
  }
  return result;
}

unint64_t sub_1BAEF37B4()
{
  unint64_t result;

  result = qword_1ED3A6B88;
  if (!qword_1ED3A6B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Float, &type metadata for FormatHeadlineBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1ED3A6B88);
  }
  return result;
}

unint64_t sub_1BAEF37F8()
{
  unint64_t result;

  result = qword_1ED3ADBE8;
  if (!qword_1ED3ADBE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Float, &type metadata for FormatPuzzleStatisticBinding.Float);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBE8);
  }
  return result;
}

uint64_t sub_1BAEF383C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3848()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE373D0);
}

uint64_t sub_1BAEF3854()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3860()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF386C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE901F8, &qword_1EF2B2D30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF38A0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF38AC()
{
  unint64_t result;

  result = qword_1ED3AC1F0;
  if (!qword_1ED3AC1F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradient, &type metadata for FormatRadialGradient);
    atomic_store(result, (unint64_t *)&qword_1ED3AC1F0);
  }
  return result;
}

uint64_t sub_1BAEF38F0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF38FC()
{
  unint64_t result;

  result = qword_1EF2B5DC0;
  if (!qword_1EF2B5DC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFileKind, &type metadata for FormatFileKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DC0);
  }
  return result;
}

unint64_t sub_1BAEF3940()
{
  unint64_t result;

  result = qword_1EF2B5DC8;
  if (!qword_1EF2B5DC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageList, &type metadata for FormatPackageList);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DC8);
  }
  return result;
}

uint64_t sub_1BAEF3984()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF3990()
{
  unint64_t result;

  result = qword_1ED39BD68;
  if (!qword_1ED39BD68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSizeCategoryExpression, &type metadata for FormatContentSizeCategoryExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BD68);
  }
  return result;
}

unint64_t sub_1BAEF39D4()
{
  unint64_t result;

  result = qword_1ED39E168;
  if (!qword_1ED39E168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpression, &type metadata for FormatFrameExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39E168);
  }
  return result;
}

unint64_t sub_1BAEF3A18()
{
  unint64_t result;

  result = qword_1ED3A6A40;
  if (!qword_1ED3A6A40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBlockExpression, &type metadata for FormatBlockExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A40);
  }
  return result;
}

uint64_t sub_1BAEF3A5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3A68()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10CFC, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF3A7C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3A88()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8F9BC, &qword_1ED3D12F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3ABC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3AC8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3AD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3AE0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3AEC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3AF8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B04()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B10()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B1C()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D870);
}

uint64_t sub_1BAEF3B28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B34()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B40()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8F74C, &qword_1ED3D1110, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3B74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B8C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3B98()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8F4DC, &qword_1ED3D0C20, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3BCC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF3BD8()
{
  unint64_t result;

  result = qword_1EF2B5DD0;
  if (!qword_1EF2B5DD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B89E8, &_s10CodingTypeON_102);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DD0);
  }
  return result;
}

uint64_t sub_1BAEF3C1C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF3C28()
{
  unint64_t result;

  result = qword_1EF2B5DD8;
  if (!qword_1EF2B5DD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8920, &_s10CodingTypeON_103);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DD8);
  }
  return result;
}

uint64_t sub_1BAEF3C6C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3C78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3C84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3C90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8F1E4, &qword_1ED3D0FC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3CC4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF3CD0()
{
  unint64_t result;

  result = qword_1ED39B1E8;
  if (!qword_1ED39B1E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPattern, &type metadata for FormatPattern);
    atomic_store(result, (unint64_t *)&qword_1ED39B1E8);
  }
  return result;
}

unint64_t sub_1BAEF3D14()
{
  unint64_t result;

  result = qword_1EF2B5DE0;
  if (!qword_1EF2B5DE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMicaBackground, &type metadata for FormatMicaBackground);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DE0);
  }
  return result;
}

uint64_t sub_1BAEF3D58()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3D64()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13E38, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF3D78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3D84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3D90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8ED98, &qword_1ED3D0C10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3DC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3DD0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3DDC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3DE8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3DF4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF3E00()
{
  unint64_t result;

  result = qword_1ED3A2A30;
  if (!qword_1ED3A2A30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B8670, &_s10CodingTypeON_105);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A30);
  }
  return result;
}

uint64_t sub_1BAEF3E44()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF3E50()
{
  unint64_t result;

  result = qword_1ED3A6AF8;
  if (!qword_1ED3A6AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B85A8, &_s10CodingTypeON_106);
    atomic_store(result, (unint64_t *)&qword_1ED3A6AF8);
  }
  return result;
}

unint64_t sub_1BAEF3E94()
{
  unint64_t result;

  result = qword_1EF2B5DF0;
  if (!qword_1EF2B5DF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.DateTime, &type metadata for FormatGroupBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DF0);
  }
  return result;
}

unint64_t sub_1BAEF3ED8()
{
  unint64_t result;

  result = qword_1EF2B5DF8;
  if (!qword_1EF2B5DF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.DateTime, &type metadata for FormatSportsEventBinding.DateTime);
    atomic_store(result, (unint64_t *)&qword_1EF2B5DF8);
  }
  return result;
}

uint64_t sub_1BAEF3F1C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3F28()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE4074C);
}

unint64_t sub_1BAEF3F34()
{
  unint64_t result;

  result = qword_1ED3A41D0;
  if (!qword_1ED3A41D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Context, &type metadata for FormatDateFormat.Context);
    atomic_store(result, (unint64_t *)&qword_1ED3A41D0);
  }
  return result;
}

uint64_t sub_1BAEF3F78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3F84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3F90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3F9C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3FA8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF3FB4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8E908, &qword_1ED3ADA68, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF3FE8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF3FF4()
{
  unint64_t result;

  result = qword_1EF2B5E00;
  if (!qword_1EF2B5E00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Style, &type metadata for FormatDateFormat.Style);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E00);
  }
  return result;
}

uint64_t sub_1BAEF4038()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF4044()
{
  unint64_t result;

  result = qword_1ED3A41C8;
  if (!qword_1ED3A41C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDateFormat.Custom, &type metadata for FormatDateFormat.Custom);
    atomic_store(result, (unint64_t *)&qword_1ED3A41C8);
  }
  return result;
}

uint64_t sub_1BAEF4088()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4094()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3FD70);
}

uint64_t sub_1BAEF40A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF40AC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF40B8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8E654, &qword_1ED3D1200, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF40EC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF40F8()
{
  unint64_t result;

  result = qword_1EF2B5E08;
  if (!qword_1EF2B5E08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F967C, &_s4TextO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E08);
  }
  return result;
}

uint64_t sub_1BAEF413C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4148()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C6D4);
}

uint64_t sub_1BAEF4154()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4160()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8E3A0, &qword_1ED3D0D00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4194()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF41A0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C810);
}

uint64_t sub_1BAEF41AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF41B8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF41C4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8E130, &qword_1ED3D0CF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF41F8()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF4204()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4210()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32D24);
}

uint64_t sub_1BAEF421C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4228()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4234()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8DE7C, &qword_1ED3AD9F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4268()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4274()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38138);
}

uint64_t sub_1BAEF4280()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF428C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8DCA0, &qword_1EF2B2CA8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEF42C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5E10)
  {
    sub_1BAE8DCA0();
    sub_1BA4A2870(&qword_1EF2B2CA8, (uint64_t (*)(uint64_t))sub_1BAE8DCA0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5E10);
  }
}

uint64_t sub_1BAEF4338()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF4344()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4350()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF435C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8AC90, &qword_1EF2B2C58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4390()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF439C()
{
  unint64_t result;

  result = qword_1EF2B5E18;
  if (!qword_1EF2B5E18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliaryItemSet);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E18);
  }
  return result;
}

uint64_t sub_1BAEF43E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF43EC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF43F8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8A998, &qword_1ED3D1460, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF442C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4438()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32E00);
}

uint64_t sub_1BAEF4444()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4450()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF445C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8A6A0, &qword_1ED3D1420, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4490()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF449C()
{
  unint64_t result;

  result = qword_1ED3AA9B8;
  if (!qword_1ED3AA9B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerSlotDefinitionItemSetAuxiliary, &type metadata for FormatCompilerSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9B8);
  }
  return result;
}

uint64_t sub_1BAEF44E0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF44EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A90E8;
  if (!qword_1ED3A90E8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A90E8);
  }
  return result;
}

unint64_t sub_1BAEF4554()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2D38;
  if (!qword_1ED3A2D38)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040], (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D38);
  }
  return result;
}

unint64_t sub_1BAEF45BC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2D40;
  if (!qword_1ED3A2D40)
  {
    sub_1BA50CAA8(255, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2D40);
  }
  return result;
}

unint64_t sub_1BAEF4624()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5E28;
  if (!qword_1EF2B5E28)
  {
    sub_1BA4CDF6C(255, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E28);
  }
  return result;
}

unint64_t sub_1BAEF468C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A90E0;
  if (!qword_1ED3A90E0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatCompilerPrimitiveProperty);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCompilerPrimitiveProperty<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A90E0);
  }
  return result;
}

uint64_t sub_1BAEF46F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4700()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10838, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF4714()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4720()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF472C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4738()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8A184, &qword_1ED3D11F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF476C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4778()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4784()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4790()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF479C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B068;
  if (!qword_1ED39B068)
  {
    sub_1BA50CAA8(255, &qword_1ED3B34D0, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool, (uint64_t (*)(_QWORD, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B068);
  }
  return result;
}

uint64_t sub_1BAEF4804()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF4810()
{
  unint64_t result;

  result = qword_1ED39B8B0;
  if (!qword_1ED39B8B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrackBinding.Command, &type metadata for FormatAudioTrackBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED39B8B0);
  }
  return result;
}

unint64_t sub_1BAEF4854()
{
  unint64_t result;

  result = qword_1ED3A66A0;
  if (!qword_1ED3A66A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Command, &type metadata for FormatPuzzleBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3A66A0);
  }
  return result;
}

unint64_t sub_1BAEF4898()
{
  unint64_t result;

  result = qword_1EF2C62D0;
  if (!qword_1EF2C62D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Command, &type metadata for FormatSportsEventBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2C62D0);
  }
  return result;
}

unint64_t sub_1BAEF48DC()
{
  unint64_t result;

  result = qword_1ED3A2BB8;
  if (!qword_1ED3A2BB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLiveActivityBinding.Command, &type metadata for FormatLiveActivityBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3A2BB8);
  }
  return result;
}

uint64_t sub_1BAEF4920()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BAEF4940()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF494C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B3F0);
}

uint64_t sub_1BAEF4958()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4964()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4970()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE89DA0, &qword_1ED3D0DC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF49A4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF49B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF49BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF49C8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF49D4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE89AEC, &qword_1EF2B2C00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4A08()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4A14()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4A20()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4A2C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE89838, &qword_1EF2B2BB8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4A60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4A6C()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32F50);
}

uint64_t sub_1BAEF4A78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4A84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4A90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE895C8, &qword_1ED3ABF68, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4AC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4AD0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF4ADC()
{
  unint64_t result;

  result = qword_1EF2B5E30;
  if (!qword_1EF2B5E30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorOrExpression, &type metadata for FormatColorOrExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E30);
  }
  return result;
}

unint64_t sub_1BAEF4B20()
{
  unint64_t result;

  result = qword_1EF2B5E38;
  if (!qword_1EF2B5E38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorNotExpression, &type metadata for FormatColorNotExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E38);
  }
  return result;
}

uint64_t sub_1BAEF4B64()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4B70()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34274);
}

uint64_t sub_1BAEF4B7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4B88()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4B94()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE89268, &qword_1ED3ABF38, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4BC8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4BD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4BE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4BEC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE4061C);
}

uint64_t sub_1BAEF4BF8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4C04()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4C10()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE88FF8, &qword_1ED3ABF88, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4C44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4C50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4C5C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36688);
}

uint64_t sub_1BAEF4C68()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4C74()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4C80()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE88D88, &qword_1ED3D11A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4CB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4CC0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4CCC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4CD8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF4CE4()
{
  unint64_t result;

  result = qword_1ED3A61D0;
  if (!qword_1ED3A61D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Color, &type metadata for FormatGroupBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1ED3A61D0);
  }
  return result;
}

uint64_t sub_1BAEF4D28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4D34()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4D40()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4D4C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE88A4C, &qword_1ED3D1410, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4D80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4D8C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4D98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4DA4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF4DB0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE887DC, &qword_1ED3ABEE8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF4DE4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF4DF0()
{
  unint64_t result;

  result = qword_1ED3AD408;
  if (!qword_1ED3AD408)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B7208, &_s10CodingTypeON_116);
    atomic_store(result, (unint64_t *)&qword_1ED3AD408);
  }
  return result;
}

unint64_t sub_1BAEF4E34()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AD4C8;
  if (!qword_1ED3AD4C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3D04B0, (uint64_t (*)(void))sub_1BAE886B8, (uint64_t)&type metadata for FormatSystemColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AD4C8);
  }
  return result;
}

unint64_t sub_1BAEF4E9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5E40;
  if (!qword_1EF2B5E40)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AD4C0, (uint64_t (*)(void))sub_1BAE8860C, (uint64_t)&type metadata for FormatFixedColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAlphaColor);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAlphaColor<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E40);
  }
  return result;
}

unint64_t sub_1BAEF4F04()
{
  unint64_t result;

  result = qword_1EF2B5E48;
  if (!qword_1EF2B5E48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGrayscaleColor, &type metadata for FormatGrayscaleColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E48);
  }
  return result;
}

unint64_t sub_1BAEF4F48()
{
  unint64_t result;

  result = qword_1ED39B2A8;
  if (!qword_1ED39B2A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRGBAColor, &type metadata for FormatRGBAColor);
    atomic_store(result, (unint64_t *)&qword_1ED39B2A8);
  }
  return result;
}

unint64_t sub_1BAEF4F8C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5E50;
  if (!qword_1EF2B5E50)
  {
    v1 = sub_1BAE88274(255, &qword_1EF2B2B60, (void (*)(void))sub_1BAE88390);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnboundValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E50);
  }
  return result;
}

unint64_t sub_1BAEF4FEC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5E58;
  if (!qword_1EF2B5E58)
  {
    v1 = sub_1BAE88274(255, &qword_1EF2B2B48, (void (*)(void))sub_1BAE882E8);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnboundValue<A, B>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E58);
  }
  return result;
}

uint64_t sub_1BAEF504C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5058()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B4C4);
}

uint64_t sub_1BAEF5064()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5070()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF507C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE87EE8, &qword_1EF2B2B10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF50B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF50BC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B5A0);
}

uint64_t sub_1BAEF50C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF50D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF50E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE87C34, &qword_1EF2B2AC8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5114()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5120()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF512C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF5138()
{
  unint64_t result;

  result = qword_1ED3A6600;
  if (!qword_1ED3A6600)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCellSelection.DimContent, &type metadata for FormatCellSelection.DimContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A6600);
  }
  return result;
}

uint64_t sub_1BAEF517C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5188()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE367A8);
}

uint64_t sub_1BAEF5194()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF51A0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE87980, &qword_1ED3D1190, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF51D4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF51E0()
{
  unint64_t result;

  result = qword_1ED3A70C8;
  if (!qword_1ED3A70C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6F90, &_s10CodingTypeON_117);
    atomic_store(result, (unint64_t *)&qword_1ED3A70C8);
  }
  return result;
}

unint64_t sub_1BAEF5224()
{
  unint64_t result;

  result = qword_1ED3A0190;
  if (!qword_1ED3A0190)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Action, &type metadata for FormatHeadlineBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1ED3A0190);
  }
  return result;
}

unint64_t sub_1BAEF5268()
{
  unint64_t result;

  result = qword_1EF2B5E68;
  if (!qword_1EF2B5E68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Action, &type metadata for FormatIssueBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E68);
  }
  return result;
}

unint64_t sub_1BAEF52AC()
{
  unint64_t result;

  result = qword_1ED3A6D60;
  if (!qword_1ED3A6D60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Action, &type metadata for FormatWebEmbedBinding.Action);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D60);
  }
  return result;
}

uint64_t sub_1BAEF52F0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF52FC()
{
  unint64_t result;

  result = qword_1ED39E830;
  if (!qword_1ED39E830)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatStateMachineActionEvent, &type metadata for FormatStateMachineActionEvent);
    atomic_store(result, (unint64_t *)&qword_1ED39E830);
  }
  return result;
}

unint64_t sub_1BAEF5340()
{
  unint64_t result;

  result = qword_1ED3A0228;
  if (!qword_1ED3A0228)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatButtonNodeBinding, &type metadata for FormatButtonNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0228);
  }
  return result;
}

unint64_t sub_1BAEF5384()
{
  unint64_t result;

  result = qword_1ED3A2A48;
  if (!qword_1ED3A2A48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDebugAction, &type metadata for FormatDebugAction);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A48);
  }
  return result;
}

uint64_t sub_1BAEF53C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF53D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF53E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF53EC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE875C0, &qword_1ED3D14E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5420()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF542C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5438()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5444()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8730C, &qword_1ED3AD878, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5478()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF5484()
{
  unint64_t result;

  result = qword_1EF2B5E70;
  if (!qword_1EF2B5E70)
  {
    result = MEMORY[0x1BCCE5B24]("遟+ ?\n", &type metadata for FormatPuzzleBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E70);
  }
  return result;
}

uint64_t sub_1BAEF54C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF54D4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E7D0);
}

uint64_t sub_1BAEF54E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF54EC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE87148, &qword_1ED3D15C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5520()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF552C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5538()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF5544()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E80)
  {
    sub_1BAE87148();
    sub_1BA4A2870(&qword_1ED3D15C0, (uint64_t (*)(uint64_t))sub_1BAE87148, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E80);
  }
}

uint64_t sub_1BAEF55BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF55C8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39A68);
}

uint64_t sub_1BAEF55D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF55E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF55EC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE86B38, &qword_1ED3D0F60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5620()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF562C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3FA0C);
}

uint64_t sub_1BAEF5638()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5644()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE869B8, &qword_1ED3D1490, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5678()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5684()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5690()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF569C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1DE8)
  {
    sub_1BAE869B8();
    sub_1BA4A2870(&qword_1ED3D1490, (uint64_t (*)(uint64_t))sub_1BAE869B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1DE8);
  }
}

uint64_t sub_1BAEF5714()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF5720()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF572C()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE360D8);
}

uint64_t sub_1BAEF5738()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5744()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE850EC, &qword_1ED3D11E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5778()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5784()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5790()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF579C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF57A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF57B4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE84E7C, &qword_1ED3D12A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF57E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF57F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5800()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF580C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF5818()
{
  unint64_t result;

  result = qword_1EF2B5E78;
  if (!qword_1EF2B5E78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B6880, &_s10CodingTypeON_121);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E78);
  }
  return result;
}

uint64_t sub_1BAEF585C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5868()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5874()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE84BC8, &qword_1ED3D1440, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF58A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF58B4()
{
  unint64_t result;

  result = qword_1ED3A0668;
  if (!qword_1ED3A0668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNodeBinding, &type metadata for FormatShareAttributionNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0668);
  }
  return result;
}

uint64_t sub_1BAEF58F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5904()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5910()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF591C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5928()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE84958, &qword_1ED3D1400, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF595C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5968()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5974()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5980()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF598C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5998()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE846E8, &qword_1ED3D12D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF59CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF59D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF59E4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF59F0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF59FC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39B58);
}

uint64_t sub_1BAEF5A08()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5A14()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE84434, &qword_1ED3AD8B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5A48()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5A54()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32644);
}

uint64_t sub_1BAEF5A60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5A6C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5A78()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE84180, &qword_1ED3ADA08, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5AAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5AB8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF5AC4()
{
  unint64_t result;

  result = qword_1ED3AE350;
  if (!qword_1ED3AE350)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B64E8, &_s14descr1E72CC821C10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3AE350);
  }
  return result;
}

unint64_t sub_1BAEF5B08()
{
  unint64_t result;

  result = qword_1ED3AE400;
  if (!qword_1ED3AE400)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpressionLogicCompare, &type metadata for FormatBindingFloatExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1ED3AE400);
  }
  return result;
}

uint64_t sub_1BAEF5B4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5B58()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5B64()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE83E00, &qword_1ED3AD9A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5B98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5BA4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5BB0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5BBC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF5BC8()
{
  unint64_t result;

  result = qword_1ED39BD50;
  if (!qword_1ED39BD50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingLayeredMediaExpression, &type metadata for FormatBindingLayeredMediaExpression);
    atomic_store(result, (unint64_t *)&qword_1ED39BD50);
  }
  return result;
}

unint64_t sub_1BAEF5C0C()
{
  unint64_t result;

  result = qword_1ED3A0730;
  if (!qword_1ED3A0730)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingShareAttributionExpression, &type metadata for FormatBindingShareAttributionExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A0730);
  }
  return result;
}

unint64_t sub_1BAEF5C50()
{
  unint64_t result;

  result = qword_1ED3A9008;
  if (!qword_1ED3A9008)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingDateTimeExpression, &type metadata for FormatBindingDateTimeExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3A9008);
  }
  return result;
}

unint64_t sub_1BAEF5C94()
{
  unint64_t result;

  result = qword_1ED3ADBA8;
  if (!qword_1ED3ADBA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingFloatExpression, &type metadata for FormatBindingFloatExpression);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBA8);
  }
  return result;
}

uint64_t sub_1BAEF5CD8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5CE4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33ACC);
}

uint64_t sub_1BAEF5CF0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5CFC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE83B4C, &qword_1ED3D1350, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5D30()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5D3C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5D48()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5D54()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5D60()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE355EC);
}

uint64_t sub_1BAEF5D6C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5D78()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE838DC, &qword_1ED3D1290, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5DAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5DB8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5DC4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5DD0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5DDC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3AC98);
}

uint64_t sub_1BAEF5DE8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5DF4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE83604, &qword_1ED3D0E90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5E28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5E34()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE331B0);
}

uint64_t sub_1BAEF5E40()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5E4C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5E58()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE83350, &qword_1EF2B2A60, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5E8C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5E98()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE343B8);
}

uint64_t sub_1BAEF5EA4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5EB0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF5EBC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE8309C, &qword_1EF2B2A18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF5EF0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF5EFC()
{
  unint64_t result;

  result = qword_1ED3A7678;
  if (!qword_1ED3A7678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5FF8, &_s10CodingTypeON_123);
    atomic_store(result, (unint64_t *)&qword_1ED3A7678);
  }
  return result;
}

unint64_t sub_1BAEF5F40()
{
  unint64_t result;

  result = qword_1EF2B5E80;
  if (!qword_1EF2B5E80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathCurveComponent, &type metadata for FormatBezierPathCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E80);
  }
  return result;
}

unint64_t sub_1BAEF5F84()
{
  unint64_t result;

  result = qword_1EF2B5E88;
  if (!qword_1EF2B5E88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathQuadCurveComponent, &type metadata for FormatBezierPathQuadCurveComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E88);
  }
  return result;
}

unint64_t sub_1BAEF5FC8()
{
  unint64_t result;

  result = qword_1EF2B5E90;
  if (!qword_1EF2B5E90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathArcComponent, &type metadata for FormatBezierPathArcComponent);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E90);
  }
  return result;
}

uint64_t sub_1BAEF600C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6018()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34EC8);
}

uint64_t sub_1BAEF6024()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6030()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE82CD8, &qword_1EF2B29B8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF6064()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6070()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF607C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6088()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6094()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF60A0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3DC08);
}

unint64_t sub_1BAEF60AC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF28;
  if (!qword_1ED3AAF28)
  {
    sub_1BA4AD288(255, &qword_1ED3AAF20, (uint64_t)&type metadata for FormatBezierPathComponent, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BAEF6124();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF28);
  }
  return result;
}

unint64_t sub_1BAEF6124()
{
  unint64_t result;

  result = qword_1ED3A7690;
  if (!qword_1ED3A7690)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPathComponent, &type metadata for FormatBezierPathComponent);
    atomic_store(result, (unint64_t *)&qword_1ED3A7690);
  }
  return result;
}

uint64_t sub_1BAEF6168()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6174()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6180()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE82968, &qword_1ED3ABE98, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF61B4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF61C0()
{
  unint64_t result;

  result = qword_1ED3A0198;
  if (!qword_1ED3A0198)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageBackground, &type metadata for FormatImageBackground);
    atomic_store(result, (unint64_t *)&qword_1ED3A0198);
  }
  return result;
}

unint64_t sub_1BAEF6204()
{
  unint64_t result;

  result = qword_1EF2B5E98;
  if (!qword_1EF2B5E98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisualEffect, &type metadata for FormatVisualEffect);
    atomic_store(result, (unint64_t *)&qword_1EF2B5E98);
  }
  return result;
}

uint64_t sub_1BAEF6248()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6254()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B6E4);
}

uint64_t sub_1BAEF6260()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF626C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE82524, &qword_1ED3D0DB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEF62A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A78)
  {
    sub_1BAE82524();
    sub_1BA4A2870(&qword_1ED3D0DB0, (uint64_t (*)(uint64_t))sub_1BAE82524, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A78);
  }
}

uint64_t sub_1BAEF6318()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF6324()
{
  unint64_t result;

  result = qword_1EF2B5EA0;
  if (!qword_1EF2B5EA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5CB8, &_s10CodingTypeON_125);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EA0);
  }
  return result;
}

unint64_t sub_1BAEF6368()
{
  unint64_t result;

  result = qword_1ED39A780;
  if (!qword_1ED39A780)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDurationFormat, &type metadata for FormatDurationFormat);
    atomic_store(result, (unint64_t *)&qword_1ED39A780);
  }
  return result;
}

uint64_t sub_1BAEF63AC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF63B8()
{
  unint64_t result;

  result = qword_1EF2B5EA8;
  if (!qword_1EF2B5EA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5BF0, &_s10CodingTypeON_126);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EA8);
  }
  return result;
}

uint64_t sub_1BAEF63FC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF6408()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B450;
  if (!qword_1ED39B450)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B50E0, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B450);
  }
  return result;
}

unint64_t sub_1BAEF6470()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B938;
  if (!qword_1ED39B938)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B79D0, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B938);
  }
  return result;
}

unint64_t sub_1BAEF64D8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A66C8;
  if (!qword_1ED3A66C8)
  {
    sub_1BA4CDF6C(255, &qword_1ED3A66D8, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A66C8);
  }
  return result;
}

uint64_t sub_1BAEF6540()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF654C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6558()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE818B4, &qword_1ED3D1530, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF658C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6598()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF65A4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF65B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF65BC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3DCF0);
}

uint64_t sub_1BAEF65C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF65D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF65E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE815F4, &qword_1ED3ABE88, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF6614()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6620()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37670);
}

uint64_t sub_1BAEF662C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6638()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6644()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE81384, &qword_1ED3AD928, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF6678()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6684()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6690()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF669C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF66A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF66B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF66C0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE374B8);
}

uint64_t sub_1BAEF66CC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF66D8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE81070, &qword_1ED3AD918, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

unint64_t sub_1BAEF670C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A08C0;
  if (!qword_1ED3A08C0)
  {
    sub_1BA4AD288(255, &qword_1ED3A08B8, (uint64_t)&type metadata for FormatAnimationNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA828230();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A08C0);
  }
  return result;
}

uint64_t sub_1BAEF6784()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6790()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF679C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF67A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF67B4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF67C0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5F0)
  {
    sub_1BAE81070();
    sub_1BA4A2870(&qword_1ED3AD918, (uint64_t (*)(uint64_t))sub_1BAE81070, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5F0);
  }
}

unint64_t sub_1BAEF6838()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EDF8;
  if (!qword_1ED39EDF8)
  {
    sub_1BAEFBAC0(255, &qword_1ED39EE00, (void (*)(void))sub_1BA8281EC, (void (*)(void))sub_1BA828230);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EDF8);
  }
  return result;
}

uint64_t sub_1BAEF68A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF68AC()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE15184, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF68C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF68CC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF68D8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE80A98, &qword_1ED3ADA58, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF690C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6918()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6924()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF6930()
{
  unint64_t result;

  result = qword_1ED3A0498;
  if (!qword_1ED3A0498)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeKeyPath, &type metadata for FormatAnimationNodeKeyPath);
    atomic_store(result, (unint64_t *)&qword_1ED3A0498);
  }
  return result;
}

uint64_t sub_1BAEF6974()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6980()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF698C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE688)
  {
    sub_1BAE80A98();
    sub_1BA4A2870(&qword_1ED3ADA58, (uint64_t (*)(uint64_t))sub_1BAE80A98, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE688);
  }
}

uint64_t sub_1BAEF6A04()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF6A10()
{
  unint64_t result;

  result = qword_1ED3A7B28;
  if (!qword_1ED3A7B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5670, &_s10CodingTypeON_128);
    atomic_store(result, (unint64_t *)&qword_1ED3A7B28);
  }
  return result;
}

unint64_t sub_1BAEF6A54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5EB0;
  if (!qword_1EF2B5EB0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2950, (uint64_t (*)(void))sub_1BAB1DDC8, (uint64_t)&type metadata for FormatSizeEquation, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeKeyPathAnimation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeKeyPathAnimation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EB0);
  }
  return result;
}

uint64_t sub_1BAEF6ABC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6AC8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3FF84);
}

uint64_t sub_1BAEF6AD4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6AE0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6AEC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE80420, &qword_1EF2B2940, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF6B20()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6B2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6B38()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6B44()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF6B50()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5EB8)
  {
    sub_1BAE80420();
    sub_1BA4A2870(&qword_1EF2B2940, (uint64_t (*)(uint64_t))sub_1BAE80420, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5EB8);
  }
}

uint64_t sub_1BAEF6BC8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF6BD4()
{
  unint64_t result;

  result = qword_1ED3A4348;
  if (!qword_1ED3A4348)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5518, &_s10CodingTypeON_129);
    atomic_store(result, (unint64_t *)&qword_1ED3A4348);
  }
  return result;
}

uint64_t sub_1BAEF6C18()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BAEF6C38()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BAEF6C58()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF6C78()
{
  unint64_t result;

  result = qword_1EF2B5EC8;
  if (!qword_1EF2B5EC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5230, &_s10CodingTypeON_131);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EC8);
  }
  return result;
}

unint64_t sub_1BAEF6CBC()
{
  unint64_t result;

  result = qword_1ED3A0488;
  if (!qword_1ED3A0488)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatActivityItemsBinding, &type metadata for FormatActivityItemsBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A0488);
  }
  return result;
}

uint64_t sub_1BAEF6D00()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF6D0C()
{
  unint64_t result;

  result = qword_1EF2B5ED0;
  if (!qword_1EF2B5ED0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B5168, &_s10CodingTypeON_132);
    atomic_store(result, (unint64_t *)&qword_1EF2B5ED0);
  }
  return result;
}

unint64_t sub_1BAEF6D50()
{
  unint64_t result;

  result = qword_1ED3A0180;
  if (!qword_1ED3A0180)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.ActivityItemsConfiguration, &type metadata for FormatHeadlineBinding.ActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1ED3A0180);
  }
  return result;
}

unint64_t sub_1BAEF6D94()
{
  unint64_t result;

  result = qword_1EF2B5ED8;
  if (!qword_1EF2B5ED8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.ActivityItemsConfiguration, &type metadata for FormatIssueBinding.ActivityItemsConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B5ED8);
  }
  return result;
}

uint64_t sub_1BAEF6DD8()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF6DE4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B048;
  if (!qword_1ED39B048)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B3480, (uint64_t (*)(void))sub_1BAE7D638, (uint64_t)&type metadata for FormatAccessibilityTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B048);
  }
  return result;
}

uint64_t sub_1BAEF6E4C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6E58()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34508);
}

uint64_t sub_1BAEF6E64()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6E70()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6E7C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7F418, &qword_1EF2B28E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF6EB0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF6EBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5EE0)
  {
    sub_1BAE7F418();
    sub_1BA4A2870(&qword_1EF2B28E0, (uint64_t (*)(uint64_t))sub_1BAE7F418, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5EE0);
  }
}

uint64_t sub_1BAEF6F34()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF6F40()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF6F4C()
{
  unint64_t result;

  result = qword_1EF2B5EE8;
  if (!qword_1EF2B5EE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4E80, &_s10CodingTypeON_135);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EE8);
  }
  return result;
}

uint64_t sub_1BAEF6F90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6F9C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6FA8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7EC80, &qword_1ED3AD828, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF6FDC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6FE8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF6FF4()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF7014()
{
  unint64_t result;

  result = qword_1EF2B5EF0;
  if (!qword_1EF2B5EF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4D28, &_s10CodingTypeON_136);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EF0);
  }
  return result;
}

uint64_t sub_1BAEF7058()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF7064()
{
  unint64_t result;

  result = qword_1EF2B5EF8;
  if (!qword_1EF2B5EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AD3FC, &_s5ColorO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5EF8);
  }
  return result;
}

uint64_t sub_1BAEF70A8()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF70B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF70C0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35508);
}

uint64_t sub_1BAEF70CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF70D8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF70E4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7E944, &qword_1EF2B2878, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7118()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF7124()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF7130()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF713C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE13F68, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF7150()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF715C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7E780, &qword_1ED3D0C00, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7190()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF719C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF71A8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF71B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF71C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF71CC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF71D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF71E4()
{
  unint64_t result;

  result = qword_1ED3AD638;
  if (!qword_1ED3AD638)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomNodeName, &type metadata for FormatCustomNodeName);
    atomic_store(result, (unint64_t *)&qword_1ED3AD638);
  }
  return result;
}

void sub_1BAEF7228()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D19A0)
  {
    sub_1BAE7E780();
    sub_1BA4A2870(&qword_1ED3D0C00, (uint64_t (*)(uint64_t))sub_1BAE7E780, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D19A0);
  }
}

unint64_t sub_1BAEF72A0()
{
  unint64_t result;

  result = qword_1ED3D07F8;
  if (!qword_1ED3D07F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomNodeName, &type metadata for FormatCustomNodeName);
    atomic_store(result, (unint64_t *)&qword_1ED3D07F8);
  }
  return result;
}

uint64_t sub_1BAEF72E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF72F0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3276C);
}

uint64_t sub_1BAEF72FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7308()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7314()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7DA68, &qword_1EF2B2830, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7348()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF7354()
{
  unint64_t result;

  result = qword_1ED3A6A48;
  if (!qword_1ED3A6A48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4920, &_s10CodingTypeON_139);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A48);
  }
  return result;
}

uint64_t sub_1BAEF7398()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF73B8()
{
  unint64_t result;

  result = qword_1ED3A6678;
  if (!qword_1ED3A6678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4858, &_s10CodingTypeON_140);
    atomic_store(result, (unint64_t *)&qword_1ED3A6678);
  }
  return result;
}

uint64_t sub_1BAEF73FC()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF741C()
{
  unint64_t result;

  result = qword_1ED3A9968;
  if (!qword_1ED3A9968)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4790, &_s10CodingTypeON_141);
    atomic_store(result, (unint64_t *)&qword_1ED3A9968);
  }
  return result;
}

uint64_t sub_1BAEF7460()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF746C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE110C4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF7480()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF748C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7498()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7D8E8, &qword_1ED3D10D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF74CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF74D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF74E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF74F0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF74FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF7508()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C08)
  {
    sub_1BAE7D8E8();
    sub_1BA4A2870(&qword_1ED3D10D0, (uint64_t (*)(uint64_t))sub_1BAE7D8E8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C08);
  }
}

uint64_t sub_1BAEF7580()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF758C()
{
  unint64_t result;

  result = qword_1ED3A5C68;
  if (!qword_1ED3A5C68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4638, &_s10CodingTypeON_142);
    atomic_store(result, (unint64_t *)&qword_1ED3A5C68);
  }
  return result;
}

unint64_t sub_1BAEF75D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B040;
  if (!qword_1ED39B040)
  {
    sub_1BA4CDF6C(255, &qword_1ED39C9C8, (uint64_t (*)(void))sub_1BAA4B038, (uint64_t)&type metadata for FormatPatternAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B040);
  }
  return result;
}

unint64_t sub_1BAEF7638()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39F7F0;
  if (!qword_1ED39F7F0)
  {
    sub_1BA4CDF6C(255, &qword_1ED39F800, (uint64_t (*)(void))sub_1BA98FDF8, (uint64_t)&type metadata for FormatPatternDirection, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39F7F0);
  }
  return result;
}

uint64_t sub_1BAEF76A0()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF76AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF76B8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32514);
}

uint64_t sub_1BAEF76C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF76D0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF76DC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7D440, &qword_1ED3D1450, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7710()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF771C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF7728()
{
  unint64_t result;

  result = qword_1ED3AA298;
  if (!qword_1ED3AA298)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B44E0, &_s10CodingTypeON_143);
    atomic_store(result, (unint64_t *)&qword_1ED3AA298);
  }
  return result;
}

uint64_t sub_1BAEF776C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF7778()
{
  unint64_t result;

  result = qword_1ED3A69F8;
  if (!qword_1ED3A69F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Command, &type metadata for FormatWeatherBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1ED3A69F8);
  }
  return result;
}

uint64_t sub_1BAEF77BC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF77C8()
{
  unint64_t result;

  result = qword_1EF2B5F00;
  if (!qword_1EF2B5F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A5044, &_s7CommandO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F00);
  }
  return result;
}

uint64_t sub_1BAEF780C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7818()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE4039C);
}

uint64_t sub_1BAEF7824()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7830()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF783C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7D104, &qword_1ED3D1640, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7870()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF787C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7888()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE404BC);
}

uint64_t sub_1BAEF7894()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF78A0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7CE94, &qword_1ED3D1650, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF78D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF78E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF78EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF78F8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7904()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7910()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF791C()
{
  unint64_t result;

  result = qword_1EF2B5F08;
  if (!qword_1EF2B5F08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B4230, &_s10CodingTypeON_145);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F08);
  }
  return result;
}

uint64_t sub_1BAEF7960()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF796C()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BAEF798C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF7998()
{
  unint64_t result;

  result = qword_1EF2B5F10;
  if (!qword_1EF2B5F10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3FD8, &_s10CodingTypeON_148);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F10);
  }
  return result;
}

uint64_t sub_1BAEF79DC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF79E8()
{
  unint64_t result;

  result = qword_1ED3AFAC0;
  if (!qword_1ED3AFAC0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A23A0, &_s4BoolO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAC0);
  }
  return result;
}

uint64_t sub_1BAEF7A2C()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF7A38()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF7A44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7A50()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE34A24);
}

uint64_t sub_1BAEF7A5C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7A68()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7A74()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7CABC, &qword_1ED3D1330, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7AA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7AB4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37958);
}

uint64_t sub_1BAEF7AC0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7ACC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7C93C, &qword_1ED3D10E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEF7B00()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C10)
  {
    sub_1BAE7C93C();
    sub_1BA4A2870(&qword_1ED3D10E0, (uint64_t (*)(uint64_t))sub_1BAE7C93C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C10);
  }
}

uint64_t sub_1BAEF7B78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7B84()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33860);
}

uint64_t sub_1BAEF7B90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7B9C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7BA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7BB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7BC0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7BCC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7C654, &qword_1ED3D1360, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7C00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7C0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7C18()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7C28()
{
  uint64_t v0;

  return sub_1BAE32400(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

unint64_t sub_1BAEF7C34()
{
  unint64_t result;

  result = qword_1EF2B5F18;
  if (!qword_1EF2B5F18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirectionHorizontal, &type metadata for FormatPackageDirectionHorizontal);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F18);
  }
  return result;
}

uint64_t sub_1BAEF7C78()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF7C84()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7C90()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3CD9C);
}

uint64_t sub_1BAEF7C9C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7CA8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7CB4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7C3E4, &qword_1ED3D0C90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7CE8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7CF4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D0C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D18()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D24()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12D20, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF7D38()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D50()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D5C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7C0A4, &qword_1ED3D0E40, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7D90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7D9C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7DA8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7DB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7DC0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C180);
}

uint64_t sub_1BAEF7DCC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7DD8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7DE4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7BDF0, &qword_1EF2B27D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7E18()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7E24()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE152B0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF7E38()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7E44()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7E50()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7BAB4, &qword_1EF2B2788, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF7E84()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF7E90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF7E9C()
{
  unint64_t result;

  result = qword_1ED39A770;
  if (!qword_1ED39A770)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatRoundingMode, &type metadata for FormatNumberFormatRoundingMode);
    atomic_store(result, (unint64_t *)&qword_1ED39A770);
  }
  return result;
}

uint64_t sub_1BAEF7EE0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF7EEC()
{
  unint64_t result;

  result = qword_1ED39A778;
  if (!qword_1ED39A778)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormatStyle, &type metadata for FormatNumberFormatStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39A778);
  }
  return result;
}

uint64_t sub_1BAEF7F30()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF7F3C()
{
  unint64_t result;

  result = qword_1EF2B5F20;
  if (!qword_1EF2B5F20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89F800, &_s4BoolO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F20);
  }
  return result;
}

uint64_t sub_1BAEF7F80()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF7F8C()
{
  unint64_t result;

  result = qword_1ED3A5900;
  if (!qword_1ED3A5900)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBezierPath, &type metadata for FormatBezierPath);
    atomic_store(result, (unint64_t *)&qword_1ED3A5900);
  }
  return result;
}

uint64_t sub_1BAEF7FD0()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF7FDC()
{
  unint64_t result;

  result = qword_1EF2B5F28;
  if (!qword_1EF2B5F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3990, &_s10CodingTypeON_151);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F28);
  }
  return result;
}

uint64_t sub_1BAEF8020()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF802C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE377D4);
}

uint64_t sub_1BAEF8038()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8044()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8050()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7B778, &qword_1ED3D1100, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8084()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8090()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF809C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF80A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF80B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF80C0()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10FA8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF80D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF80E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7B5F8, &qword_1ED3D10F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8114()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8120()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF812C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8138()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8144()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF8150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1C18)
  {
    sub_1BAE7B5F8();
    sub_1BA4A2870(&qword_1ED3D10F0, (uint64_t (*)(uint64_t))sub_1BAE7B5F8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1C18);
  }
}

unint64_t sub_1BAEF81C8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C46D0;
  if (!qword_1ED3C46D0)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C46D8, (void (*)(void))sub_1BA828874, (void (*)(void))sub_1BA8288B8);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C46D0);
  }
  return result;
}

uint64_t sub_1BAEF8230()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEF823C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF8248()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39B050;
  if (!qword_1ED39B050)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B3490, (uint64_t (*)(void))sub_1BAE7B3E8, (uint64_t)&type metadata for FormatAnchor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39B050);
  }
  return result;
}

unint64_t sub_1BAEF82B0()
{
  unint64_t result;

  result = qword_1EF2B5F30;
  if (!qword_1EF2B5F30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGeometryAdjustment, &type metadata for FormatGeometryAdjustment);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F30);
  }
  return result;
}

uint64_t sub_1BAEF82F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8300()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3FB70);
}

uint64_t sub_1BAEF830C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8318()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8324()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7B094, &qword_1ED3D1480, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8358()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8364()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8370()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11504, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

unint64_t sub_1BAEF8384()
{
  unint64_t result;

  result = qword_1EF2B5F38;
  if (!qword_1EF2B5F38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoEndAction, &type metadata for FormatVideoEndAction);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F38);
  }
  return result;
}

uint64_t sub_1BAEF83C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF83D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF83E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7ACD0, &qword_1ED3AD908, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8414()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF8420()
{
  unint64_t result;

  result = qword_1EF2B5F40;
  if (!qword_1EF2B5F40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageGravity, &type metadata for FormatImageGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F40);
  }
  return result;
}

uint64_t sub_1BAEF8464()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF8470()
{
  unint64_t result;

  result = qword_1EF2B5F48;
  if (!qword_1EF2B5F48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayback, &type metadata for FormatVideoPlayback);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F48);
  }
  return result;
}

uint64_t sub_1BAEF84B4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF84C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF84CC()
{
  unint64_t result;

  result = qword_1EF2B5F50;
  if (!qword_1EF2B5F50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoGravity, &type metadata for FormatVideoGravity);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F50);
  }
  return result;
}

uint64_t sub_1BAEF8510()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF851C()
{
  unint64_t result;

  result = qword_1EF2B5F58;
  if (!qword_1EF2B5F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B34F8, &_s10CodingTypeON_154);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F58);
  }
  return result;
}

unint64_t sub_1BAEF8560()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5F60;
  if (!qword_1EF2B5F60)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2720, (uint64_t (*)(void))sub_1BAE7ABAC, (uint64_t)&type metadata for FormatMediaTimingFunctionName, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F60);
  }
  return result;
}

unint64_t sub_1BAEF85C8()
{
  unint64_t result;

  result = qword_1EF2B5F68;
  if (!qword_1EF2B5F68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunctionControlPoints, &type metadata for FormatMediaTimingFunctionControlPoints);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F68);
  }
  return result;
}

uint64_t sub_1BAEF860C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8618()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3F614);
}

uint64_t sub_1BAEF8624()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8630()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7A8C4, &qword_1ED3D14D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8664()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8670()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF867C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8688()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8694()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF86A0()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE351F8);
}

uint64_t sub_1BAEF86AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF86B8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF86C4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7A654, &qword_1ED3ABF18, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF86F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8704()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8710()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF871C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8728()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8734()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8740()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE1030C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF8754()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8760()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF876C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7A4D4, &qword_1ED3ABF08, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF87A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF87AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF87B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF87C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF87D0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF87DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AC080)
  {
    sub_1BAE7A4D4();
    sub_1BA4A2870(&qword_1ED3ABF08, (uint64_t (*)(uint64_t))sub_1BAE7A4D4, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AC080);
  }
}

unint64_t sub_1BAEF8854()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A37F8;
  if (!qword_1ED3A37F8)
  {
    sub_1BAEFBAC0(255, &qword_1ED3A3800, (void (*)(void))sub_1BA823B60, (void (*)(void))sub_1BA823BA4);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A37F8);
  }
  return result;
}

uint64_t sub_1BAEF88BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF88C8()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10BF8, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

unint64_t sub_1BAEF88DC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3A08A8;
  if (!qword_1ED3A08A8)
  {
    sub_1BA4AD288(255, &qword_1ED3A08A0, (uint64_t)&type metadata for FormatIssueCoverTraits, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82A224();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3A08A8);
  }
  return result;
}

uint64_t sub_1BAEF8954()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8960()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF896C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7A1EC, &qword_1ED3AD958, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF89A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF89F4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A0C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE10AC0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF8A20()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A2C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7A06C, &qword_1ED3AD948, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8A60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A6C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A84()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8A90()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF8A9C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3AAF40;
  if (!qword_1ED3AAF40)
  {
    sub_1BA4AD288(255, &qword_1ED3AAF38, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA825FD8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3AAF40);
  }
  return result;
}

uint64_t sub_1BAEF8B14()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8B20()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8B2C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF8B38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3ACAA8)
  {
    sub_1BAE7A06C();
    sub_1BA4A2870(&qword_1ED3AD948, (uint64_t (*)(uint64_t))sub_1BAE7A06C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3ACAA8);
  }
}

unint64_t sub_1BAEF8BB0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39EDE8;
  if (!qword_1ED39EDE8)
  {
    sub_1BAEFBAC0(255, &qword_1ED39EDF0, (void (*)(void))sub_1BA82A1E0, (void (*)(void))sub_1BA82A224);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39EDE8);
  }
  return result;
}

unint64_t sub_1BAEF8C18()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A37C0;
  if (!qword_1ED3A37C0)
  {
    sub_1BAEFBAC0(255, &qword_1ED3A37C8, (void (*)(void))sub_1BA825F94, (void (*)(void))sub_1BA825FD8);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A37C0);
  }
  return result;
}

uint64_t sub_1BAEF8C80()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF8C8C()
{
  unint64_t result;

  result = qword_1ED3A5B40;
  if (!qword_1ED3A5B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B3040, &_s10CodingTypeON_155);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B40);
  }
  return result;
}

unint64_t sub_1BAEF8CD0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A66B0;
  if (!qword_1ED3A66B0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3A66C0, (uint64_t (*)(void))sub_1BAADB198, (uint64_t)&type metadata for FormatVisibility, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A66B0);
  }
  return result;
}

uint64_t sub_1BAEF8D38()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8D44()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3954C);
}

uint64_t sub_1BAEF8D50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8D5C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8D68()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE79CF0, &qword_1ED3D0FB0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8D9C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8DA8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8DB4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8DC0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8DCC()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE39398);
}

uint64_t sub_1BAEF8DD8()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatCustomNodeStyle.CodingKeys, (uint64_t (*)(void))sub_1BA539ACC);
}

uint64_t sub_1BAEF8E04()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF8E10()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8E1C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE33730);
}

uint64_t sub_1BAEF8E28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8E34()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8E40()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE799C0, &qword_1ED3AD9D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8E74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8E80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8E8C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8E98()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8EA4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE79750, &qword_1ED3D1370, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8ED8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8EE4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8EF0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8EFC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8F08()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7949C, &qword_1EF2B26E8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8F3C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8F48()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8F54()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE32AF0);
}

uint64_t sub_1BAEF8F60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8F6C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF8F78()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE791E8, &qword_1EF2B26A0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF8FAC()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEF8FCC()
{
  unint64_t result;

  result = qword_1ED3A7F98;
  if (!qword_1ED3A7F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2BE0, &_s10CodingTypeON_157);
    atomic_store(result, (unint64_t *)&qword_1ED3A7F98);
  }
  return result;
}

uint64_t sub_1BAEF9010()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF901C()
{
  unint64_t result;

  result = qword_1EF2B5F70;
  if (!qword_1EF2B5F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2B18, &_s10CodingTypeON_158);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F70);
  }
  return result;
}

uint64_t sub_1BAEF9060()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF906C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C3F8);
}

uint64_t sub_1BAEF9078()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9084()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9090()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF909C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF90A8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE78EF0, &qword_1ED3D0D30, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF90DC()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF90E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF90F4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D2A4);
}

unint64_t sub_1BAEF9100()
{
  unint64_t result;

  result = qword_1EF2B5F88;
  if (!qword_1EF2B5F88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineAlphaProcessor, &type metadata for FormatShineAlphaProcessor);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F88);
  }
  return result;
}

uint64_t sub_1BAEF9144()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9150()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF915C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE78B78, &qword_1EF2B2640, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9190()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF919C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEF91A8()
{
  unint64_t result;

  result = qword_1EF2B5F90;
  if (!qword_1EF2B5F90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineColor, &type metadata for FormatShineColor);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F90);
  }
  return result;
}

uint64_t sub_1BAEF91EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF91F8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9204()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF9210()
{
  unint64_t result;

  result = qword_1EF2B5F98;
  if (!qword_1EF2B5F98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89A1A0, &_s14descr1E728EA89V8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B5F98);
  }
  return result;
}

uint64_t sub_1BAEF9254()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9260()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3D9A8);
}

uint64_t sub_1BAEF926C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9278()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE788C4, &qword_1EF2B25F0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF92AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF92B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF92C4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF92D0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF92DC()
{
  unint64_t result;

  result = qword_1ED3A9158;
  if (!qword_1ED3A9158)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B28A0, &_s10CodingTypeON_159);
    atomic_store(result, (unint64_t *)&qword_1ED3A9158);
  }
  return result;
}

unint64_t sub_1BAEF9320()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5FA0;
  if (!qword_1EF2B5FA0)
  {
    sub_1BA4CDF6C(255, &qword_1ED3AD418, (uint64_t (*)(void))sub_1BAE787A0, (uint64_t)&type metadata for FormatSupplementaryNodePinEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FA0);
  }
  return result;
}

unint64_t sub_1BAEF9388()
{
  unint64_t result;

  result = qword_1ED3A0678;
  if (!qword_1ED3A0678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementaryNodePinDistance, &type metadata for FormatSupplementaryNodePinDistance);
    atomic_store(result, (unint64_t *)&qword_1ED3A0678);
  }
  return result;
}

uint64_t sub_1BAEF93CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF93D8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38C68);
}

unint64_t sub_1BAEF93E4()
{
  unint64_t result;

  result = qword_1ED3ABB18;
  if (!qword_1ED3ABB18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSplitBackgroundSide, &type metadata for FormatSplitBackgroundSide);
    atomic_store(result, (unint64_t *)&qword_1ED3ABB18);
  }
  return result;
}

uint64_t sub_1BAEF9428()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9434()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9440()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE784E4, &qword_1ED3AD8F8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9474()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9480()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

uint64_t sub_1BAEF94A0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF94AC()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14724, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEF94C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF94CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF94D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF94E4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF94F0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE78364, &qword_1ED3D1590, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9524()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9530()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF953C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9548()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9554()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9560()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF956C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9578()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF9584()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E68)
  {
    sub_1BAE78364();
    sub_1BA4A2870(&qword_1ED3D1590, (uint64_t (*)(uint64_t))sub_1BAE78364, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E68);
  }
}

uint64_t sub_1BAEF95FC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF9608()
{
  unint64_t result;

  result = qword_1ED39B1F0;
  if (!qword_1ED39B1F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAssetURL, &type metadata for FormatAssetURL);
    atomic_store(result, (unint64_t *)&qword_1ED39B1F0);
  }
  return result;
}

uint64_t sub_1BAEF964C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEF9658()
{
  unint64_t result;

  result = qword_1ED3A01B0;
  if (!qword_1ED3A01B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89598C, &type metadata for FormatVideoPlayerLive.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A01B0);
  }
  return result;
}

unint64_t sub_1BAEF969C()
{
  unint64_t result;

  result = qword_1ED3A04F8;
  if (!qword_1ED3A04F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerLiveBinding, &type metadata for FormatVideoPlayerLiveBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A04F8);
  }
  return result;
}

uint64_t sub_1BAEF96E0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF96EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5FB8;
  if (!qword_1EF2B5FB8)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2598, (uint64_t (*)(void))sub_1BAE78098, (uint64_t)&type metadata for FormatOptionType, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FB8);
  }
  return result;
}

uint64_t sub_1BAEF9754()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEF9760()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF976C()
{
  unint64_t result;

  result = qword_1ED3A0E98;
  if (!qword_1ED3A0E98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2460, &_s10CodingTypeON_163);
    atomic_store(result, (unint64_t *)&qword_1ED3A0E98);
  }
  return result;
}

unint64_t sub_1BAEF97B0()
{
  unint64_t result;

  result = qword_1ED3A2A70;
  if (!qword_1ED3A2A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Font, &type metadata for FormatGroupBinding.Font);
    atomic_store(result, (unint64_t *)&qword_1ED3A2A70);
  }
  return result;
}

uint64_t sub_1BAEF97F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9800()
{
  return sub_1BAE7EEF8((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E688);
}

uint64_t sub_1BAEF980C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9818()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE77E54, &qword_1ED3D15D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF984C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9858()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9864()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF9870()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E88)
  {
    sub_1BAE77E54();
    sub_1BA4A2870(&qword_1ED3D15D0, (uint64_t (*)(uint64_t))sub_1BAE77E54, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E88);
  }
}

uint64_t sub_1BAEF98E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF98F4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3AB38);
}

uint64_t sub_1BAEF9900()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF990C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9918()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9924()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9930()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE779E8, &qword_1EF2B2568, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9964()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9970()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF997C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3361C);
}

uint64_t sub_1BAEF9988()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9994()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE77734, &qword_1ED3D1380, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF99C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF99D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF99E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF99EC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF99F8()
{
  unint64_t result;

  result = qword_1ED39E150;
  if (!qword_1ED39E150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Text, &type metadata for FormatWeatherBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39E150);
  }
  return result;
}

unint64_t sub_1BAEF9A3C()
{
  unint64_t result;

  result = qword_1EF2B5FC0;
  if (!qword_1EF2B5FC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPaywallBinding.Text, &type metadata for FormatPaywallBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FC0);
  }
  return result;
}

unint64_t sub_1BAEF9A80()
{
  unint64_t result;

  result = qword_1ED3A6D48;
  if (!qword_1ED3A6D48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Text, &type metadata for FormatWebEmbedBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D48);
  }
  return result;
}

unint64_t sub_1BAEF9AC4()
{
  unint64_t result;

  result = qword_1EF2B8250;
  if (!qword_1EF2B8250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Text, &type metadata for FormatSportsEventBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B8250);
  }
  return result;
}

unint64_t sub_1BAEF9B08()
{
  unint64_t result;

  result = qword_1ED3A6640;
  if (!qword_1ED3A6640)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Text, &type metadata for FormatPuzzleBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A6640);
  }
  return result;
}

unint64_t sub_1BAEF9B4C()
{
  unint64_t result;

  result = qword_1ED3A2B90;
  if (!qword_1ED3A2B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleTypeBinding.Text, &type metadata for FormatPuzzleTypeBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B90);
  }
  return result;
}

unint64_t sub_1BAEF9B90()
{
  unint64_t result;

  result = qword_1ED3ADBC8;
  if (!qword_1ED3ADBC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Text, &type metadata for FormatPuzzleStatisticBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3ADBC8);
  }
  return result;
}

uint64_t sub_1BAEF9BD4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF9BE0()
{
  unint64_t result;

  result = qword_1ED3A7C40;
  if (!qword_1ED3A7C40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B2120, &_s10CodingTypeON_165);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C40);
  }
  return result;
}

unint64_t sub_1BAEF9C24()
{
  unint64_t result;

  result = qword_1ED39E8F0;
  if (!qword_1ED39E8F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicCompare, &type metadata for FormatFrameExpressionLogicCompare);
    atomic_store(result, (unint64_t *)&qword_1ED39E8F0);
  }
  return result;
}

unint64_t sub_1BAEF9C68()
{
  unint64_t result;

  result = qword_1EF2B5FC8;
  if (!qword_1EF2B5FC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFrameExpressionLogicTextLines, &type metadata for FormatFrameExpressionLogicTextLines);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FC8);
  }
  return result;
}

uint64_t sub_1BAEF9CAC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9CB8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38594);
}

uint64_t sub_1BAEF9CC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9CD0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9CDC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE773B4, &qword_1ED3D1040, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9D10()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9D1C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9D28()
{
  return sub_1BAEE4AC0((uint64_t (*)(_QWORD, _QWORD, _QWORD))sub_1BAE38490);
}

uint64_t sub_1BAEF9D34()
{
  uint64_t v0;

  return sub_1BAE60660(*(_QWORD *)(v0 + 16), (char *)(v0 + 24), (uint64_t)&type metadata for FormatOptionExpression.Compare.CodingKeys, (uint64_t (*)(void))sub_1BA63BB38);
}

uint64_t sub_1BAEF9D60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9D6C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3FE58);
}

uint64_t sub_1BAEF9D78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9D84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9D90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE771F0, &qword_1EF2B2528, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9DC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9DD0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9DDC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF9DE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5FD0)
  {
    sub_1BAE771F0();
    sub_1BA4A2870(&qword_1EF2B2528, (uint64_t (*)(uint64_t))sub_1BAE771F0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5FD0);
  }
}

uint64_t sub_1BAEF9E60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9E6C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3821C);
}

uint64_t sub_1BAEF9E78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9E84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9E90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE76C24, &qword_1ED3D1060, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9EC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9ED0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9EDC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEF9EE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1BD0)
  {
    sub_1BAE76C24();
    sub_1BA4A2870(&qword_1ED3D1060, (uint64_t (*)(uint64_t))sub_1BAE76C24, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1BD0);
  }
}

uint64_t sub_1BAEF9F60()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9F6C()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A8A0);
}

uint64_t sub_1BAEF9F78()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9F84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9F90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7693C, &qword_1ED3D0EA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEF9FC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEF9FD0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEF9FDC()
{
  unint64_t result;

  result = qword_1ED3A5830;
  if (!qword_1ED3A5830)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1E18, &_s10CodingTypeON_166);
    atomic_store(result, (unint64_t *)&qword_1ED3A5830);
  }
  return result;
}

uint64_t sub_1BAEFA020()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA02C()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE101F0, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFA040()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA04C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA058()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA064()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE76594, &qword_1ED3D12E0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA098()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA0A4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA0B0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA0BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA0C8()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE12634, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFA0DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA0E8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA0F4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE762E0, &qword_1EF2B24D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA128()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA134()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA140()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA14C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA158()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA164()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA170()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA17C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA188()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE124EC, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFA19C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA1A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA1B4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE76160, &qword_1ED3D0EC0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA1E8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA1F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA200()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA20C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEFA218()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B5FE0;
  if (!qword_1EF2B5FE0)
  {
    sub_1BA4AD288(255, &qword_1EF2B5FD8, (uint64_t)&type metadata for FormatGroupNodeStyle.Selector, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA82D498();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FE0);
  }
  return result;
}

uint64_t sub_1BAEFA290()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA29C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA2A8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEFA2B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1B00)
  {
    sub_1BAE76160();
    sub_1BA4A2870(&qword_1ED3D0EC0, (uint64_t (*)(uint64_t))sub_1BAE76160, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1B00);
  }
}

unint64_t sub_1BAEFA32C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B5FE8;
  if (!qword_1EF2B5FE8)
  {
    sub_1BAEFBAC0(255, &qword_1ED3C4670, (void (*)(void))sub_1BA82D454, (void (*)(void))sub_1BA82D498);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FE8);
  }
  return result;
}

uint64_t sub_1BAEFA394()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA3A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA3AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE75E10, &qword_1ED3AD818, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA3E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA3EC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA3F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA404()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFA410()
{
  unint64_t result;

  result = qword_1ED39B8A8;
  if (!qword_1ED39B8A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAudioTrackBinding.Text, &type metadata for FormatAudioTrackBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1ED39B8A8);
  }
  return result;
}

unint64_t sub_1BAEFA454()
{
  unint64_t result;

  result = qword_1EF2B5FF0;
  if (!qword_1EF2B5FF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.Text, &type metadata for FormatCustomItemBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2B5FF0);
  }
  return result;
}

uint64_t sub_1BAEFA498()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4A4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A9D0);
}

uint64_t sub_1BAEFA4B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4BC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4EC()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA4F8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE75A2C, &qword_1EF2B2490, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEFA52C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B5FF8)
  {
    sub_1BAE75A2C();
    sub_1BA4A2870(&qword_1EF2B2490, (uint64_t (*)(uint64_t))sub_1BAE75A2C, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B5FF8);
  }
}

uint64_t sub_1BAEFA5A4()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEFA5B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA5BC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39690);
}

uint64_t sub_1BAEFA5C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA5D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA5E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7531C, &qword_1ED3D0F70, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA614()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA620()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39814);
}

uint64_t sub_1BAEFA62C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA638()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA644()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE750AC, &qword_1ED3D0F80, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA678()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA684()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA690()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA69C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA6A8()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE74E3C, &qword_1ED3D0F90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA6DC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA6E8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3993C);
}

uint64_t sub_1BAEFA6F4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA700()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA70C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE74BCC, &qword_1ED3D0FA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA740()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFA74C()
{
  unint64_t result;

  result = qword_1EF2B6000;
  if (!qword_1EF2B6000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1778, &_s10CodingTypeON_168);
    atomic_store(result, (unint64_t *)&qword_1EF2B6000);
  }
  return result;
}

unint64_t sub_1BAEFA790()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6008;
  if (!qword_1EF2B6008)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2450, (uint64_t (*)(void))sub_1BA9AEC44, (uint64_t)&type metadata for FormatSymbolImageColor, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6008);
  }
  return result;
}

uint64_t sub_1BAEFA7F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA804()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE38B3C);
}

uint64_t sub_1BAEFA810()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA81C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA828()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE74840, &qword_1ED3D0FE0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA85C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA868()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3C9E0);
}

uint64_t sub_1BAEFA874()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA880()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA88C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE745D0, &qword_1ED3D0CD0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA8C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA8CC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA8D8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA8E4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA8F0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA8FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA908()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3A1B8);
}

uint64_t sub_1BAEFA914()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA920()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA92C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE74354, &qword_1ED3D0F10, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFA960()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFA96C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFA978()
{
  unint64_t result;

  result = qword_1ED3A7C38;
  if (!qword_1ED3A7C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B1470, &_s10CodingTypeON_169);
    atomic_store(result, (unint64_t *)&qword_1ED3A7C38);
  }
  return result;
}

uint64_t sub_1BAEFA9BC()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFA9C8()
{
  unint64_t result;

  result = qword_1ED3A5960[0];
  if (!qword_1ED3A5960[0])
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B13A8, &_s10CodingTypeON_170);
    atomic_store(result, qword_1ED3A5960);
  }
  return result;
}

uint64_t sub_1BAEFAA0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAA18()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE35714);
}

uint64_t sub_1BAEFAA24()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAA30()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAA3C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE740E4, &qword_1ED3D1260, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFAA70()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAA7C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAA88(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 208);
  v12 = *(_OWORD *)(a1 + 192);
  v10 = *(_OWORD *)(a1 + 224);
  sub_1BA6E8B94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1BA6E8B94(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((unint64_t *)&v10 + 1));
  return a1;
}

uint64_t sub_1BAEFAB68()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEFAB74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAB80()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3461C);
}

uint64_t sub_1BAEFAB8C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAB98()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE73E30, &qword_1EF2B2428, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFABCC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFABD8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFABE4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFABF0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFABFC()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11F70, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFAC10()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC1C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC28()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC34()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC40()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC4C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE73CB0, &qword_1ED3AD888, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFAC80()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC8C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAC98()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFACA4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFACB0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEFACBC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE5A8)
  {
    sub_1BAE73CB0();
    sub_1BA4A2870(&qword_1ED3AD888, (uint64_t (*)(uint64_t))sub_1BAE73CB0, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE5A8);
  }
}

uint64_t sub_1BAEFAD34()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFAD40()
{
  unint64_t result;

  result = qword_1EF2B6010;
  if (!qword_1EF2B6010)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageAdjustmentMask, &type metadata for FormatImageAdjustmentMask);
    atomic_store(result, (unint64_t *)&qword_1EF2B6010);
  }
  return result;
}

uint64_t sub_1BAEFAD84()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAD90()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36200);
}

uint64_t sub_1BAEFAD9C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFADA8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFADB4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE73928, &qword_1ED3D11D0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFADE8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFADF4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAE00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAE0C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAE18()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAE24()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE736B8, &qword_1ED3D14B0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFAE58()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEFAE64()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAE70()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE133EC, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFAE84()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAE90()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE73434, &qword_1ED3D0D90, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFAEC4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAED0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAEDC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAEE8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAEF4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFAF00()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEFAF0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1A68)
  {
    sub_1BAE73434();
    sub_1BA4A2870(&qword_1ED3D0D90, (uint64_t (*)(uint64_t))sub_1BAE73434, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1A68);
  }
}

uint64_t sub_1BAEFAF84()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFAF90()
{
  unint64_t result;

  result = qword_1EF2B6020;
  if (!qword_1EF2B6020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0DF0, &_s14descr1E72CCB21V10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B6020);
  }
  return result;
}

unint64_t sub_1BAEFAFD4()
{
  unint64_t result;

  result = qword_1EF2B6028;
  if (!qword_1EF2B6028)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterAndCondition, &type metadata for FormatSlotItemTagFilterAndCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2B6028);
  }
  return result;
}

unint64_t sub_1BAEFB018()
{
  unint64_t result;

  result = qword_1EF2B6030;
  if (!qword_1EF2B6030)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterOrCondition, &type metadata for FormatSlotItemTagFilterOrCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2B6030);
  }
  return result;
}

uint64_t sub_1BAEFB05C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB068()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE39E54);
}

uint64_t sub_1BAEFB074()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB080()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB08C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE72FBC, &qword_1ED3AD8A8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFB0C0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEFB0CC()
{
  unint64_t result;

  result = qword_1ED39B098[0];
  if (!qword_1ED39B098[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumber, &type metadata for FormatNumber);
    atomic_store(result, qword_1ED39B098);
  }
  return result;
}

uint64_t sub_1BAEFB110()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB11C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB128()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAEFB14C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFB158()
{
  unint64_t result;

  result = qword_1ED3A87A8;
  if (!qword_1ED3A87A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0C98, &_s10CodingTypeON_173);
    atomic_store(result, (unint64_t *)&qword_1ED3A87A8);
  }
  return result;
}

uint64_t sub_1BAEFB19C()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFB1A8()
{
  unint64_t result;

  result = qword_1ED3AD760;
  if (!qword_1ED3AD760)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0BD0, &_s10CodingTypeON_174);
    atomic_store(result, (unint64_t *)&qword_1ED3AD760);
  }
  return result;
}

uint64_t sub_1BAEFB1EC()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEFB1F8()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFB204()
{
  unint64_t result;

  result = qword_1EF2B6038;
  if (!qword_1EF2B6038)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0A40, &_s10CodingTypeON_176);
    atomic_store(result, (unint64_t *)&qword_1EF2B6038);
  }
  return result;
}

uint64_t sub_1BAEFB248()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFB254()
{
  unint64_t result;

  result = qword_1ED3AA630;
  if (!qword_1ED3AA630)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0978, &_s10CodingTypeON_177);
    atomic_store(result, (unint64_t *)&qword_1ED3AA630);
  }
  return result;
}

uint64_t sub_1BAEFB298()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB2A4()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE11D9C, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFB2B8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB2C4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB2D0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE72BD4, &qword_1ED3D0EF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFB304()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEFB310()
{
  unint64_t result;

  result = qword_1ED3A0F90;
  if (!qword_1ED3A0F90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatLineBreakStrategy, &type metadata for FormatLineBreakStrategy);
    atomic_store(result, (unint64_t *)&qword_1ED3A0F90);
  }
  return result;
}

uint64_t sub_1BAEFB354()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB360()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB36C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB378()
{
  return sub_1BAEE4844();
}

uint64_t sub_1BAEFB384()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFB390()
{
  unint64_t result;

  result = qword_1ED3A9910;
  if (!qword_1ED3A9910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0758, &_s10CodingTypeON_179);
    atomic_store(result, (unint64_t *)&qword_1ED3A9910);
  }
  return result;
}

uint64_t sub_1BAEFB3D4()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFB3E0()
{
  unint64_t result;

  result = qword_1EF2B6040;
  if (!qword_1EF2B6040)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0690, &_s10CodingTypeON_180);
    atomic_store(result, (unint64_t *)&qword_1EF2B6040);
  }
  return result;
}

unint64_t sub_1BAEFB424()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6050;
  if (!qword_1EF2B6050)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B23C0, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSwitchValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSwitchValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6050);
  }
  return result;
}

unint64_t sub_1BAEFB48C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6058;
  if (!qword_1EF2B6058)
  {
    sub_1BA4CDF6C(255, qword_1ED3A02A8, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatUserInterfaceValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUserInterfaceValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6058);
  }
  return result;
}

unint64_t sub_1BAEFB4F4()
{
  unint64_t result;

  result = qword_1EF2B6060;
  if (!qword_1EF2B6060)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoNodeBinding, &type metadata for FormatVideoNodeBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2B6060);
  }
  return result;
}

unint64_t sub_1BAEFB538()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6068;
  if (!qword_1EF2B6068)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B23A8, (uint64_t (*)(void))sub_1BA829B34, (uint64_t)&type metadata for FormatVideoNodeContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6068);
  }
  return result;
}

uint64_t sub_1BAEFB5A0()
{
  return sub_1BAEE4A0C();
}

uint64_t sub_1BAEFB5AC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB5B8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB5C4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE72828, &qword_1ED3D1620, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFB5F8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB604()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB610()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEFB61C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1EB0)
  {
    sub_1BAE72828();
    sub_1BA4A2870(&qword_1ED3D1620, (uint64_t (*)(uint64_t))sub_1BAE72828, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1EB0);
  }
}

uint64_t sub_1BAEFB694()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFB6A0()
{
  unint64_t result;

  result = qword_1EF2B6070;
  if (!qword_1EF2B6070)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8819C0, &_s4BoolO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B6070);
  }
  return result;
}

unint64_t sub_1BAEFB6E4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6078;
  if (!qword_1EF2B6078)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2390, (uint64_t (*)(void))sub_1BAE7268C, (uint64_t)&type metadata for FormatTagBinding.Bool, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatArraySubscript);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatArraySubscript<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6078);
  }
  return result;
}

uint64_t sub_1BAEFB74C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB758()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36344);
}

uint64_t sub_1BAEFB764()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB770()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB77C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE72450, &qword_1ED3D11C0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFB7B0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB7BC()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE369BC);
}

uint64_t sub_1BAEFB7C8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB7D4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB7E0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE721E0, &qword_1ED3D1170, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFB814()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAEFB838()
{
  uint64_t v0;

  return sub_1BAE321FC(*(void (**)(void))(v0 + 16));
}

unint64_t sub_1BAEFB858()
{
  unint64_t result;

  result = qword_1ED3A69B8;
  if (!qword_1ED3A69B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0418, &_s10CodingTypeON_181);
    atomic_store(result, (unint64_t *)&qword_1ED3A69B8);
  }
  return result;
}

uint64_t sub_1BAEFB89C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB8A8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3B85C);
}

uint64_t sub_1BAEFB8B4()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFB8C0()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE71FD8, &qword_1ED3AD868, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEFB8F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AE598)
  {
    sub_1BAE71FD8();
    sub_1BA4A2870(&qword_1ED3AD868, (uint64_t (*)(uint64_t))sub_1BAE71FD8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AE598);
  }
}

unint64_t sub_1BAEFB96C()
{
  unint64_t result;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  result = qword_1EF2B6088;
  if (!qword_1EF2B6088)
  {
    v1 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0];
    sub_1BA4B07F0(255, &qword_1EF2B6080, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB48B0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v3 = v2;
    v4 = sub_1BA4A2870((unint64_t *)&qword_1ED3C47D0, v1, MEMORY[0x1E0DB48C0]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v3, &v4);
    atomic_store(result, (unint64_t *)&qword_1EF2B6088);
  }
  return result;
}

uint64_t sub_1BAEFB9FC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA08()
{
  return sub_1BAEB3B98((void (*)(uint64_t))sub_1BAD915E0);
}

uint64_t sub_1BAEFBA14()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA20()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA2C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA38()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA44()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA50()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA5C()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA68()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA80()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBA8C()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE719B8, &qword_1ED3D0BF0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

void sub_1BAEFBAC0(uint64_t a1, unint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3();
    a4();
    v6 = sub_1BB86DF60();
    if (!v7)
      atomic_store(v6, a2);
  }
}

void sub_1BAEFBB30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1998)
  {
    sub_1BAE719B8();
    sub_1BA4A2870(&qword_1ED3D0BF0, (uint64_t (*)(uint64_t))sub_1BAE719B8, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1998);
  }
}

unint64_t sub_1BAEFBBA8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BBE98;
  if (!qword_1ED3BBE98)
  {
    sub_1BAEFBAC0(255, &qword_1ED3BBEA0, (void (*)(void))sub_1BA826260, (void (*)(void))sub_1BA82632C);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BBE98);
  }
  return result;
}

uint64_t sub_1BAEFBC10()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFBC1C()
{
  unint64_t result;

  result = qword_1ED3A29F0;
  if (!qword_1ED3A29F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB880854, &_s14descr1E7276531V4FontO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A29F0);
  }
  return result;
}

uint64_t sub_1BAEFBC60()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFBC6C()
{
  unint64_t result;

  result = qword_1EF2B6098;
  if (!qword_1EF2B6098)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8B0230, &_s14descr1E72CCB69O10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B6098);
  }
  return result;
}

uint64_t sub_1BAEFBCB0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBCBC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBCC8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBCD4()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE7157C, &qword_1ED3D0DA0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFBD08()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBD14()
{
  return sub_1BAEFBD80((uint64_t)sub_1BAE14D50, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))sub_1BAE3515C);
}

uint64_t sub_1BAEFBD28()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBD34()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE713FC, &qword_1ED3D1520, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFBD68()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBD74()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBD80(uint64_t a1, uint64_t (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, uint64_t))
{
  uint64_t v2;

  return a2(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), a1);
}

uint64_t sub_1BAEFBDA8()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

void sub_1BAEFBDB4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D1E30)
  {
    sub_1BAE713FC();
    sub_1BA4A2870(&qword_1ED3D1520, (uint64_t (*)(uint64_t))sub_1BAE713FC, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D1E30);
  }
}

uint64_t sub_1BAEFBE2C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFBE38()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B60A0;
  if (!qword_1EF2B60A0)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B2370, (uint64_t (*)(void))sub_1BA829C74, (uint64_t)&type metadata for FormatSyncImageContent, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B60A0);
  }
  return result;
}

uint64_t sub_1BAEFBEA0()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFBEAC()
{
  unint64_t result;

  result = qword_1ED3A1000;
  if (!qword_1ED3A1000)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFF80, &_s10CodingTypeON_183);
    atomic_store(result, (unint64_t *)&qword_1ED3A1000);
  }
  return result;
}

unint64_t sub_1BAEFBEF0()
{
  unint64_t result;

  result = qword_1ED3A2DC0;
  if (!qword_1ED3A2DC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Float, &type metadata for FormatOptionsNodeStatementModifier.Float);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DC0);
  }
  return result;
}

unint64_t sub_1BAEFBF34()
{
  unint64_t result;

  result = qword_1ED3A2DB0;
  if (!qword_1ED3A2DB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionsNodeStatementModifier.Text, &type metadata for FormatOptionsNodeStatementModifier.Text);
    atomic_store(result, (unint64_t *)&qword_1ED3A2DB0);
  }
  return result;
}

uint64_t sub_1BAEFBF78()
{
  return sub_1BAEE4A0C();
}

unint64_t sub_1BAEFBF84()
{
  unint64_t result;

  result = qword_1ED3A4360;
  if (!qword_1ED3A4360)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFEB8, &_s10CodingTypeON_184);
    atomic_store(result, (unint64_t *)&qword_1ED3A4360);
  }
  return result;
}

uint64_t sub_1BAEFBFC8()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBFD4()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE36AA0);
}

uint64_t sub_1BAEFBFE0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFBFEC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE70B00, &qword_1ED3AD938, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFC020()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC02C()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFC038()
{
  unint64_t result;

  result = qword_1ED3A7418;
  if (!qword_1ED3A7418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8AFD60, &_s10CodingTypeON_185);
    atomic_store(result, (unint64_t *)&qword_1ED3A7418);
  }
  return result;
}

uint64_t sub_1BAEFC07C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC088()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE37E20);
}

uint64_t sub_1BAEFC094()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC0A0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC0AC()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAE70840, &qword_1ED3D1090, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFC0E0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC0EC()
{
  return sub_1BAEE4844();
}

unint64_t sub_1BAEFC0F8()
{
  unint64_t result;

  result = qword_1ED3A6BA8;
  if (!qword_1ED3A6BA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB87CD7C, &_s14descr1E7272991C8DateTimeO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A6BA8);
  }
  return result;
}

ValueMetadata *_s10CodingKeysOMa_278()
{
  return &_s10CodingKeysON_260;
}

ValueMetadata *_s10CodingTypeOMa_186()
{
  return &_s10CodingTypeON_186;
}

ValueMetadata *_s10CodingTypeOMa_187()
{
  return &_s10CodingTypeON_187;
}

uint64_t _s14descr1E72CC159O10CodingTypeOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAEFC1AC + 4 * byte_1BB8AFB30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAEFC1CC + 4 * byte_1BB8AFB35[v4]))();
}

_BYTE *sub_1BAEFC1AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAEFC1CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAEFC1D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAEFC1DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAEFC1E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAEFC1EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s10CodingTypeOMa_188()
{
  return &_s10CodingTypeON_188;
}

void sub_1BAEFC208()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAEFC218()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAEFC22C()
{
  unint64_t result;

  result = qword_1EF2B60A8;
  if (!qword_1EF2B60A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2368, &_s10CodingTypeON_188);
    atomic_store(result, (unint64_t *)&qword_1EF2B60A8);
  }
  return result;
}

unint64_t sub_1BAEFC274()
{
  unint64_t result;

  result = qword_1EF2B60B0;
  if (!qword_1EF2B60B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2408, &_s10CodingTypeON_187);
    atomic_store(result, (unint64_t *)&qword_1EF2B60B0);
  }
  return result;
}

void sub_1BAEFC2B8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAEFC2C8()
{
  JUMPOUT(0x1BCCE5B24);
}

unint64_t sub_1BAEFC2DC()
{
  unint64_t result;

  result = qword_1EF2B60B8;
  if (!qword_1EF2B60B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D25C8, &_s10CodingTypeON_186);
    atomic_store(result, (unint64_t *)&qword_1EF2B60B8);
  }
  return result;
}

unint64_t sub_1BAEFC328()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B60C0;
  if (!qword_1EF2B60C0)
  {
    sub_1BA4AD288(255, &qword_1EF2B60C8, (uint64_t)&_s10CodingKeysON_260, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B60C0);
  }
  return result;
}

unint64_t sub_1BAEFC388()
{
  unint64_t result;

  result = qword_1EF2B60D0;
  if (!qword_1EF2B60D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2390, &_s10CodingTypeON_187);
    atomic_store(result, (unint64_t *)&qword_1EF2B60D0);
  }
  return result;
}

unint64_t sub_1BAEFC3CC()
{
  unint64_t result;

  result = qword_1EF2B60D8;
  if (!qword_1EF2B60D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2550, &_s10CodingTypeON_186);
    atomic_store(result, (unint64_t *)&qword_1EF2B60D8);
  }
  return result;
}

void sub_1BAEFC410()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B60E0)
  {
    sub_1BAEFC488();
    sub_1BA4A2870(&qword_1EF2B6108, (uint64_t (*)(uint64_t))sub_1BAEFC488, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB874104();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B60E0);
  }
}

uint64_t sub_1BAEFC488()
{
  uint64_t result;

  result = qword_1EF2B60E8;
  if (!qword_1EF2B60E8)
  {
    sub_1BAEFC508();
    sub_1BAEFC54C();
    sub_1BAEFC590();
    type metadata accessor for FormatCodingKeysContainer();
  }
  return result;
}

unint64_t sub_1BAEFC508()
{
  unint64_t result;

  result = qword_1EF2B60F0;
  if (!qword_1EF2B60F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2CD8, &_s10CodingKeysON_261);
    atomic_store(result, (unint64_t *)&qword_1EF2B60F0);
  }
  return result;
}

unint64_t sub_1BAEFC54C()
{
  unint64_t result;

  result = qword_1EF2B60F8;
  if (!qword_1EF2B60F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2C88, &_s10CodingKeysON_261);
    atomic_store(result, (unint64_t *)&qword_1EF2B60F8);
  }
  return result;
}

unint64_t sub_1BAEFC590()
{
  unint64_t result;

  result = qword_1EF2B6100;
  if (!qword_1EF2B6100)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2C60, &_s10CodingKeysON_261);
    atomic_store(result, (unint64_t *)&qword_1EF2B6100);
  }
  return result;
}

unint64_t sub_1BAEFC5D4()
{
  unint64_t result;

  result = qword_1ED39FA78;
  if (!qword_1ED39FA78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921C08, &type metadata for FormatMenuStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39FA78);
  }
  return result;
}

unint64_t sub_1BAEFC618()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1ED3B9460;
  if (!qword_1ED3B9460)
  {
    sub_1BA4AD288(255, &qword_1ED3B9458, (uint64_t)&type metadata for FormatMenuItem, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA835294();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF40], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED3B9460);
  }
  return result;
}

uint64_t sub_1BAEFC690()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAEFC6C0()
{
  return sub_1BAEE4844();
}

void sub_1BAEFC6CC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!qword_1EF2B6110)
  {
    sub_1BAEFC744();
    v3 = v2;
    v4 = sub_1BA4A2870(&qword_1EF2B6120, (uint64_t (*)(uint64_t))sub_1BAEFC744, MEMORY[0x1E0DED188]);
    v6 = type metadata accessor for VersionedKeyedEncodingContainer(a1, v3, v4, v5);
    if (!v7)
      atomic_store(v6, (unint64_t *)&qword_1EF2B6110);
  }
}

void sub_1BAEFC744()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B6118)
  {
    sub_1BAEFC488();
    sub_1BA4A2870(&qword_1EF2B6108, (uint64_t (*)(uint64_t))sub_1BAEFC488, (uint64_t)&unk_1BB8FFC6C);
    v0 = sub_1BB8741D0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B6118);
  }
}

uint64_t sub_1BAEFC7BC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC7C8()
{
  return sub_1BAEFC910((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAE3E544);
}

uint64_t sub_1BAEFC7D4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC7E0()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC7EC()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

unint64_t sub_1BAEFC7F8()
{
  unint64_t result;

  result = qword_1ED39FA68;
  if (!qword_1ED39FA68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB921BE0, &type metadata for FormatMenuStyle);
    atomic_store(result, (unint64_t *)&qword_1ED39FA68);
  }
  return result;
}

uint64_t sub_1BAEFC83C()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC848()
{
  return objectdestroy_562Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t objectdestroy_562Tm(void (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  a1(*(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
  return swift_deallocObject();
}

uint64_t sub_1BAEFC890()
{
  uint64_t v0;

  return sub_1BAE60350(*(_QWORD *)(v0 + 16), (uint64_t *)(v0 + 24), (uint64_t (*)(uint64_t))sub_1BAEFC488, &qword_1EF2B6108, (void (*)(uint64_t, uint64_t, uint64_t))sub_1BAEFDBD4);
}

uint64_t sub_1BAEFC8C4()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t sub_1BAEFC8D0()
{
  return objectdestroy_61Tm((void (*)(_QWORD, _QWORD, _QWORD))sub_1BAEFDBD0);
}

uint64_t objectdestroy_61Tm(void (*a1)(_QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAEFC910(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v1;

  return a1(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

uint64_t _s10CodingKeysOwst_7_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAEFC970 + 4 * byte_1BB8AFB53[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAEFC9A4 + 4 * byte_1BB8AFB4E[v4]))();
}

uint64_t sub_1BAEFC9A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAEFC9AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAEFC9B4);
  return result;
}

uint64_t sub_1BAEFC9C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAEFC9C8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAEFC9CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAEFC9D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingTypeOMa_189()
{
  return &_s10CodingTypeON_189;
}

uint64_t _s10CodingKeysOwst_9_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAEFCA3C + 4 * byte_1BB8AFB5D[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAEFCA70 + 4 * byte_1BB8AFB58[v4]))();
}

uint64_t sub_1BAEFCA70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAEFCA78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAEFCA80);
  return result;
}

uint64_t sub_1BAEFCA8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAEFCA94);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAEFCA98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAEFCAA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s10CodingKeysOMa_283()
{
  return &_s10CodingKeysON_261;
}

unint64_t sub_1BAEFCAC4()
{
  unint64_t result;

  result = qword_1EF2B6128;
  if (!qword_1EF2B6128)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2BE8, &_s10CodingTypeON_189);
    atomic_store(result, (unint64_t *)&qword_1EF2B6128);
  }
  return result;
}

unint64_t sub_1BAEFCB0C()
{
  unint64_t result;

  result = qword_1EF2B6130;
  if (!qword_1EF2B6130)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2AE0, &_s10CodingKeysON_261);
    atomic_store(result, (unint64_t *)&qword_1EF2B6130);
  }
  return result;
}

unint64_t sub_1BAEFCB54()
{
  unint64_t result;

  result = qword_1EF2B6138;
  if (!qword_1EF2B6138)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D2B08, &_s10CodingKeysON_261);
    atomic_store(result, (unint64_t *)&qword_1EF2B6138);
  }
  return result;
}

unint64_t sub_1BAEFCB9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6140;
  if (!qword_1EF2B6140)
  {
    sub_1BA4AD288(255, &qword_1EF2B6148, (uint64_t)&_s10CodingKeysON_261, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6140);
  }
  return result;
}

void sub_1BAEFDBE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[17];
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v20 = a4;
  v21 = a3;
  v19 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v19);
  v18 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v17 = (char *)v15 - v7;
  sub_1BA7A2B00();
  MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v16 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v15[16] = (char *)v15 - v13;
  v14 = type metadata accessor for FormatDerivedDataFile();
  MEMORY[0x1E0C80A78](v14);
  __asm { BR              X10 }
}

uint64_t sub_1BAEFDDA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = *(unsigned __int16 *)(v2 + 60);
  v7 = *(unsigned int *)(v2 + 56);
  v8 = *(_QWORD *)(v2 + 64);
  v9 = *(_QWORD *)v1;
  v10 = *(_QWORD *)(v1 + 8);
  v11 = *(_BYTE *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v12 = *(_QWORD *)(v1 + 32);
  v15 = *(_QWORD *)(v1 + 40);
  v14 = *(_QWORD *)(v1 + 48);
  v16 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v0 + 400) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 408) = v10;
  *(_BYTE *)(v0 + 416) = v11;
  *(_QWORD *)(v0 + 424) = v13;
  *(_QWORD *)(v0 + 432) = v12;
  *(_QWORD *)(v0 + 440) = v15;
  *(_QWORD *)(v0 + 448) = v14;
  *(_QWORD *)(v0 + 456) = v16;
  if (v6 >> 9 <= 0x7EuLL)
  {
    *(_QWORD *)(v0 + 144) = v15;
    *(_QWORD *)(v0 + 152) = v5;
    v18 = (char *)&loc_1BAEFE8A8
        + dword_1BAF00D54[(v7 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v6 << 32)) >> 45];
    *(_QWORD *)(v0 + 160) = v4;
    __asm { BR              X10 }
  }
  sub_1BA8D4E00(v9, v10, v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = *(_QWORD *)(v0 + 176);
  v19 = *(_QWORD *)(v3 - 72);
  v20 = *(_QWORD *)(v8 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    v21 = 0;
    while (1)
    {
      v22 = *(_QWORD *)(v8 + 8 * v21 + 32);
      swift_retain();
      sub_1BAEFDBE0(v22, v0 + 400, v19, *(_QWORD *)(v0 + 192));
      if (v17)
        break;
      ++v21;
      swift_release();
      if (v20 == v21)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
LABEL_10:
  sub_1BA8D5088(*(_QWORD *)(v0 + 400), *(_QWORD *)(v0 + 408), *(_BYTE *)(v0 + 416));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF00D70(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t (*v16)(uint64_t);
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  BOOL v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  unint64_t v30;
  char *v31;
  uint64_t (*v32)(uint64_t);
  uint64_t v33;
  unint64_t v34;
  int64_t v35;
  int64_t v36;
  char isUniquelyReferenced_nonNull_native;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t result;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  __int128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56[4];
  int64_t v57;

  v4 = v3;
  v51 = a2;
  v52 = a3;
  v47 = type metadata accessor for FormatDerivedDataResultOptionReference(0);
  v54 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v50 = (uint64_t)&v46 - v9;
  v10 = *(_QWORD *)(a1 + 56);
  v48 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v49 = (unint64_t)(v11 + 63) >> 6;
  v53 = a1;
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x1E0DEE9D8];
  v16 = type metadata accessor for FormatDerivedDataResultOptionReference;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v18 = (v13 - 1) & v13;
      v19 = v17 | (v14 << 6);
    }
    else
    {
      v20 = __OFADD__(v14++, 1);
      if (v20)
        goto LABEL_45;
      if (v14 >= v49)
        goto LABEL_41;
      v21 = *(_QWORD *)(v48 + 8 * v14);
      if (!v21)
      {
        v22 = v14 + 1;
        if (v14 + 1 >= v49)
          goto LABEL_41;
        v21 = *(_QWORD *)(v48 + 8 * v22);
        if (!v21)
        {
          v22 = v14 + 2;
          if (v14 + 2 >= v49)
            goto LABEL_41;
          v21 = *(_QWORD *)(v48 + 8 * v22);
          if (!v21)
          {
            v22 = v14 + 3;
            if (v14 + 3 >= v49)
              goto LABEL_41;
            v21 = *(_QWORD *)(v48 + 8 * v22);
            if (!v21)
            {
              v22 = v14 + 4;
              if (v14 + 4 >= v49)
                goto LABEL_41;
              v21 = *(_QWORD *)(v48 + 8 * v22);
              if (!v21)
              {
                while (1)
                {
                  v14 = v22 + 1;
                  if (__OFADD__(v22, 1))
                    goto LABEL_47;
                  if (v14 >= v49)
                    goto LABEL_41;
                  v21 = *(_QWORD *)(v48 + 8 * v14);
                  ++v22;
                  if (v21)
                    goto LABEL_20;
                }
              }
            }
          }
        }
        v14 = v22;
      }
LABEL_20:
      v18 = (v21 - 1) & v21;
      v19 = __clz(__rbit64(v21)) + (v14 << 6);
    }
    v23 = *(_QWORD *)(v54 + 72);
    v24 = v50;
    sub_1BA4C2DD8(*(_QWORD *)(v53 + 48) + v23 * v19, v50, v16);
    sub_1BA5193C4(v24, (uint64_t)v7, v16);
    v25 = v51[1];
    v56[0] = *v51;
    v56[1] = v25;
    v26 = v51[3];
    v56[2] = v51[2];
    v56[3] = v26;
    v27 = sub_1BA8D7560(v56, v52);
    if (v4)
    {
      sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FormatDerivedDataResultOptionReference);
      swift_bridgeObjectRelease();
LABEL_41:
      swift_release();
      return v15;
    }
    v28 = v27;
    v29 = v16;
    v30 = v18;
    v57 = v14;
    v55 = 0;
    v31 = v7;
    v32 = v29;
    sub_1BA4A2E80((uint64_t)v7, v29);
    v33 = *(_QWORD *)(v28 + 16);
    v34 = v15;
    v35 = *(_QWORD *)(v15 + 16);
    v36 = v35 + v33;
    if (__OFADD__(v35, v33))
      break;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v36 > *(_QWORD *)(v34 + 24) >> 1)
    {
      if (v35 <= v36)
        v38 = v35 + v33;
      else
        v38 = v35;
      v34 = sub_1BB390D24(isUniquelyReferenced_nonNull_native, v38, 1, v34);
    }
    v39 = v32;
    v13 = v30;
    if (*(_QWORD *)(v28 + 16))
    {
      v40 = *(_QWORD *)(v34 + 16);
      if ((*(_QWORD *)(v34 + 24) >> 1) - v40 < v33)
        goto LABEL_44;
      v41 = (*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80);
      v15 = v34;
      v42 = v34 + v41 + v40 * v23;
      v16 = v39;
      if (v28 + v41 < v42 + v33 * v23 && v42 < v28 + v41 + v33 * v23)
        goto LABEL_48;
      swift_arrayInitWithCopy();
      if (v33)
      {
        v43 = *(_QWORD *)(v34 + 16);
        v20 = __OFADD__(v43, v33);
        v44 = v43 + v33;
        if (v20)
          goto LABEL_46;
        *(_QWORD *)(v34 + 16) = v44;
      }
    }
    else
    {
      v15 = v34;
      v16 = v39;
      if (v33)
        goto LABEL_43;
    }
    swift_bridgeObjectRelease();
    v7 = v31;
    v4 = v55;
    v14 = v57;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  sub_1BAF024B8((uint64_t)v51);
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BAF01170(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v24 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A8A8(0, v2, 0);
    v3 = v24;
    v20 = *(_QWORD *)(a2 + 32);
    v21 = *(_QWORD *)(a2 + 24);
    v22 = *(_QWORD *)(v20 + 16);
    v23 = *(_QWORD *)(v21 + 16);
    v6 = (unint64_t *)(a1 + 56);
    do
    {
      v8 = *(v6 - 3);
      v7 = *(v6 - 2);
      v9 = *(v6 - 1);
      v10 = *v6;
      v11 = *(_QWORD *)(v8 + 16);
      if (v23)
      {
        if (v11)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA682148(v9, v10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BB3844C0(v8);
          v12 = v21;
          goto LABEL_10;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA682148(v9, v10);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA682148(v9, v10);
        if (v11)
        {
          swift_bridgeObjectRetain();
          v12 = v8;
          goto LABEL_10;
        }
      }
      v12 = swift_bridgeObjectRetain();
LABEL_10:
      v13 = *(_QWORD *)(v7 + 16);
      if (v22)
      {
        if (!v13)
          goto LABEL_15;
        swift_bridgeObjectRetain();
        v14 = swift_bridgeObjectRetain();
        sub_1BB387220(v14);
        v15 = v20;
      }
      else
      {
        if (!v13)
        {
LABEL_15:
          v15 = v20;
          swift_bridgeObjectRetain();
          goto LABEL_16;
        }
        swift_bridgeObjectRetain();
        v15 = v7;
      }
LABEL_16:
      sub_1BA682148(v9, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA766C18(v9, v10);
      v17 = *(_QWORD *)(v24 + 16);
      v16 = *(_QWORD *)(v24 + 24);
      if (v17 >= v16 >> 1)
        sub_1BAC7A8A8(v16 > 1, v17 + 1, 1);
      v6 += 4;
      *(_QWORD *)(v24 + 16) = v17 + 1;
      v18 = (_QWORD *)(v24 + 32 * v17);
      v18[4] = v12;
      v18[5] = v15;
      v18[6] = v9;
      v18[7] = v10;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1BAF013A0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  __int128 *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  unsigned __int8 v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  _QWORD *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  _QWORD v75[2];
  unsigned __int8 v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102[5];
  uint64_t v103;

  v6 = v5;
  v65 = result;
  v7 = *(_QWORD *)(a3 + 16);
  if (!v7)
    return result;
  v61 = *(_QWORD *)(a4 + 8);
  v62 = *(_QWORD *)a4;
  v60 = *(_BYTE *)(a4 + 16);
  v10 = *(_QWORD *)(a4 + 40);
  v58 = *(_QWORD *)(a4 + 32);
  v59 = *(_QWORD *)(a4 + 24);
  v56 = *(_QWORD *)(a4 + 56);
  v57 = *(_QWORD *)(a4 + 48);
  swift_bridgeObjectRetain();
  v11 = v10;
  v12 = a3 + 56;
  v63 = a5;
  v55 = v10;
  while (1)
  {
    v103 = v6;
    v66 = v12;
    v67 = v7;
    v15 = *(_QWORD *)(v12 - 16);
    v64 = *(_BYTE *)(v12 - 8);
    v16 = *(_QWORD *)v12;
    v17 = *(_QWORD *)(v12 + 8);
    v18 = *(_BYTE *)(v12 + 16);
    v20 = *(_QWORD *)(v12 + 24);
    v19 = *(_QWORD *)(v12 + 32);
    v21 = *(_QWORD *)(v12 + 40);
    v22 = *(_QWORD *)(v12 + 48);
    v23 = *(_QWORD *)(v12 + 56);
    v68 = *(_QWORD *)(v11 + 16);
    v70 = *(_QWORD *)(v12 - 24);
    v24 = v11;
    swift_bridgeObjectRetain();
    v73 = v16;
    v74 = v18;
    sub_1BA8D4E00(v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v68)
      goto LABEL_22;
    swift_bridgeObjectRetain();
    v25 = sub_1BA6E35A8(v70, v15);
    if ((v26 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      *(_QWORD *)&v98 = v16;
      *((_QWORD *)&v98 + 1) = v17;
      LOBYTE(v99) = v18;
      *((_QWORD *)&v99 + 1) = v20;
      *(_QWORD *)&v100 = v19;
      *((_QWORD *)&v100 + 1) = v21;
      *(_QWORD *)&v101 = v22;
      *((_QWORD *)&v101 + 1) = v23;
      v90 = v62;
      v91 = v61;
      v92 = v60;
      v93 = v59;
      v94 = v58;
      v95 = v24;
      v96 = v57;
      v97 = v56;
      sub_1BA8D4E00(v16, v17, v18);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45 = v103;
      sub_1BB27ED5C((uint64_t)&v90, v63, (uint64_t)&v82);
      if (v45)
      {
        swift_bridgeObjectRelease();
        sub_1BA8D5088(v16, v17, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA8D5088(v16, v17, v74);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      v103 = 0;
      sub_1BA8D5088(v16, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v82;
      v47 = v83;
      v48 = *((_QWORD *)&v83 + 1);
      v49 = v84;
      v50 = v85;
      v51 = *(_QWORD **)(v65 + 24);
      swift_bridgeObjectRetain();
      sub_1BA8D4E00(v46, *((uint64_t *)&v46 + 1), v47);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v51 = sub_1BB390AC8(0, v51[2] + 1, 1, v51);
      v53 = v51[2];
      v52 = v51[3];
      if (v53 >= v52 >> 1)
        v51 = sub_1BB390AC8((_QWORD *)(v52 > 1), v53 + 1, 1, v51);
      v51[2] = v49 + 1;
      v13 = &v51[11 * v49];
      v13[4] = v70;
      v13[5] = v15;
      *((_BYTE *)v13 + 48) = v64;
      *(_OWORD *)(v13 + 7) = v46;
      *((_BYTE *)v13 + 72) = v47;
      v13[10] = v48;
      *(_OWORD *)(v13 + 11) = v49;
      *(_OWORD *)(v13 + 13) = v50;
      swift_bridgeObjectRelease();
      sub_1BA8D5088(v73, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA8D5088(v46, *((uint64_t *)&v46 + 1), v47);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v65 + 24) = v51;
      v6 = v103;
      v14 = v67;
      v11 = v55;
      goto LABEL_4;
    }
    v27 = (__int128 *)(*(_QWORD *)(v24 + 56) + (v25 << 7));
    v29 = v27[2];
    v28 = v27[3];
    v30 = v27[1];
    v82 = *v27;
    v83 = v30;
    v84 = v29;
    v85 = v28;
    v31 = v27[4];
    v32 = v27[5];
    v33 = v27[7];
    v88 = v27[6];
    v89 = v33;
    v86 = v31;
    v87 = v32;
    sub_1BAF020A4((uint64_t)&v82);
    swift_bridgeObjectRelease();
    v90 = v16;
    v91 = v17;
    v92 = v18;
    v93 = v20;
    v94 = v19;
    v95 = v21;
    v96 = v22;
    v97 = v23;
    v75[0] = v62;
    v75[1] = v61;
    v76 = v60;
    v77 = v59;
    v78 = v58;
    v79 = v24;
    v80 = v57;
    v81 = v56;
    sub_1BA8D4E00(v16, v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34 = v103;
    sub_1BB27ED5C((uint64_t)v75, v63, (uint64_t)&v98);
    if (v34)
    {
      swift_bridgeObjectRelease();
      sub_1BA8D5088(v16, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BAF0218C((uint64_t)&v82);
      sub_1BA8D5088(v16, v17, v74);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    v103 = 0;
    swift_bridgeObjectRelease();
    sub_1BA8D5088(v16, v17, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v35 = v87;
    v69 = *((_QWORD *)&v88 + 1);
    v36 = *((_QWORD *)&v89 + 1);
    v71 = v89;
    v72 = v88;
    sub_1BA8D5088(v16, v17, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v102[2] = v100;
    v102[3] = v101;
    v102[0] = v98;
    v102[1] = v99;
    if (*(_QWORD *)(v35 + 16))
    {
      v37 = swift_bridgeObjectRetain();
      sub_1BA6E3FB8(v37);
    }
    if (*(_QWORD *)(*((_QWORD *)&v35 + 1) + 16))
    {
      v38 = swift_bridgeObjectRetain();
      sub_1BA6E3FB8(v38);
    }
    v6 = v103;
    if (*(_QWORD *)(v72 + 16))
    {
      v39 = swift_bridgeObjectRetain();
      sub_1BB55245C(v39);
    }
    if (*(_QWORD *)(v36 + 16))
    {
      sub_1BAF02444((uint64_t)v102);
      v40 = swift_bridgeObjectRetain();
      v41 = sub_1BAF01170(v40, (uint64_t)v102);
      sub_1BAF024B8((uint64_t)v102);
      swift_bridgeObjectRelease();
      sub_1BB384928(v41);
    }
    if (*(_QWORD *)(v71 + 16))
      break;
LABEL_19:
    sub_1BAF024B8((uint64_t)v102);
    *(_QWORD *)&v98 = v62;
    *((_QWORD *)&v98 + 1) = v61;
    LOBYTE(v99) = v60;
    *((_QWORD *)&v99 + 1) = v59;
    *(_QWORD *)&v100 = v58;
    *((_QWORD *)&v100 + 1) = v55;
    *(_QWORD *)&v101 = v57;
    *((_QWORD *)&v101 + 1) = v56;
    sub_1BAF013A0(v65, a2, v69, &v98, v63);
    if (v6)
    {
      sub_1BAF0218C((uint64_t)&v82);
      return swift_bridgeObjectRelease();
    }
    sub_1BAF0218C((uint64_t)&v82);
    v14 = v67;
    v11 = v55;
LABEL_4:
    v12 = v66 + 88;
    v7 = v14 - 1;
    if (!v7)
      return swift_bridgeObjectRelease();
  }
  sub_1BAF02444((uint64_t)v102);
  swift_retain();
  v42 = swift_bridgeObjectRetain();
  v43 = sub_1BAF00D70(v42, v102, v63);
  if (!v6)
  {
    v44 = v43;
    swift_release();
    sub_1BAF024B8((uint64_t)v102);
    swift_bridgeObjectRelease();
    sub_1BB553198(v44);
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  swift_release();
  sub_1BAF024B8((uint64_t)v102);
  swift_bridgeObjectRelease();
  sub_1BAF0218C((uint64_t)&v82);
  sub_1BAF024B8((uint64_t)v102);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF01C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD v36[2];
  char v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v35 = a3;
  v6 = type metadata accessor for FormatDerivedDataFile();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = (uint64_t *)(a2 + 40);
  v12 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  v13 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(v13 + 16);
  sub_1BA987528(v9, v10, v12);
  if (v14 && (v15 = sub_1BB4AB4B4(v9, v10, v12), (v16 & 1) != 0))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v13 + 56) + 48 * v15);
    v19 = *v17;
    v18 = v17[1];
    v20 = v17[2];
    v21 = v17[3];
    v22 = v17[4];
    v32 = v17[5];
    swift_endAccess();
    swift_bridgeObjectRetain();
    v33 = v18;
    swift_bridgeObjectRetain();
    v23 = v20;
    swift_bridgeObjectRetain();
    v24 = v21;
    swift_bridgeObjectRetain();
    v34 = v22;
    v25 = v19;
    v26 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = sub_1BA986FA0(v9, v10, v12);
  }
  else
  {
    swift_endAccess();
    sub_1BA986FA0(v9, v10, v12);
    v36[0] = v9;
    v36[1] = v10;
    v37 = v12;
    result = sub_1BB149D20((uint64_t)v36, (uint64_t)v8);
    if (v3)
      return result;
    sub_1BB73FBD8(a2, &v38);
    swift_beginAccess();
    v25 = v38;
    v31 = v39;
    v32 = v40;
    v33 = *((_QWORD *)&v38 + 1);
    v26 = v42;
    v34 = v41;
    sub_1BA987528(v9, v10, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v43 = *v11;
    *v11 = 0x8000000000000000;
    sub_1BB4BF374(&v38, v9, v10, v12, isUniquelyReferenced_nonNull_native);
    *v11 = v43;
    v24 = v32;
    swift_bridgeObjectRelease();
    sub_1BA986FA0(v9, v10, v12);
    swift_endAccess();
    v23 = v31;
    result = sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataFile);
  }
  v29 = v35;
  v30 = v33;
  *v35 = v25;
  v29[1] = v30;
  v29[2] = v23;
  v29[3] = v24;
  v29[4] = v34;
  v29[5] = v26;
  return result;
}

uint64_t sub_1BAF01F30(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRetain();
  sub_1BA8EBBDC(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_1BAF01FC0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B6150)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B6150);
  }
}

uint64_t sub_1BAF02014(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRelease();
  sub_1BA8EBC64(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAF020A4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRetain();
  sub_1BA8EBBDC(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAF0218C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
  swift_bridgeObjectRelease();
  sub_1BA8EBC64(v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAF02274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_1BA8EBBDC(a3, a4, a5, a6, a7, a8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BAF0235C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_1BA8EBC64(a3, a4, a5, a6, a7, a8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAF02444(uint64_t a1)
{
  sub_1BA8D4E00(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAF024B8(uint64_t a1)
{
  sub_1BA8D5088(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *FeedGroupSlots.init(from:)(_QWORD *a1)
{
  return sub_1BA55DD24(a1);
}

uint64_t FeedGroupSlots.encode(to:)(_QWORD *a1, uint64_t a2)
{
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  if (a2)
  {
    v6 = a2;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1BA55DE98();
    sub_1BA55DE3C((unint64_t *)&qword_1ED39BF68, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1BB874404();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL static FeedGroupSlots.== infix(_:_:)(unint64_t a1, unint64_t a2)
{
  if (a1 && a2)
    return sub_1BA8950E8((_QWORD *)a1, (_QWORD *)a2);
  else
    return (a1 | a2) == 0;
}

BOOL sub_1BAF02628(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  BOOL v4;

  v2 = *a1;
  v3 = *a2;
  if (v2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return (v2 | v3) == 0;
  else
    return sub_1BA8950E8((_QWORD *)v2, (_QWORD *)v3);
}

uint64_t sub_1BAF02654(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  if (v2)
  {
    v6 = v2;
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
    sub_1BA55DE98();
    sub_1BA55DE3C((unint64_t *)&qword_1ED39BF68, MEMORY[0x1E0DEB420], MEMORY[0x1E0DEAF10]);
    sub_1BB874404();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t FeedGroupSlots.intersects(_:)(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = (a2 | a1) == 0;
  if (a2 && a1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_1BAC86C9C(a2);
    swift_bridgeObjectRelease();
    v6 = sub_1BAC86C9C(a1);
    swift_bridgeObjectRelease();
    v7 = sub_1BAF027B8(v6, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 = v7 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1BAF027B8(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return 1;
  v4 = 0;
  if (v2 >= v3)
    v5 = result;
  else
    v5 = a2;
  if (v2 >= v3)
    v6 = a2;
  else
    v6 = result;
  v7 = v5 + 56;
  v8 = -1 << *(_BYTE *)(v5 + 32);
  if (-v8 < 64)
    v9 = ~(-1 << -(char)v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(v5 + 56);
  v11 = (unint64_t)(63 - v8) >> 6;
  v12 = v6 + 56;
  while (1)
  {
    while (1)
    {
      v13 = v4;
      if (!v10)
        break;
      v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v15 = v14 | (v4 << 6);
      if (*(_QWORD *)(v6 + 16))
      {
LABEL_29:
        v19 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * v15);
        result = sub_1BB8745C0();
        v20 = -1 << *(_BYTE *)(v6 + 32);
        v21 = result & ~v20;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) != 0)
        {
          v22 = *(_QWORD *)(v6 + 48);
          if (*(_QWORD *)(v22 + 8 * v21) == v19)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            v24 = 0;
LABEL_35:
            sub_1BA6EBD18();
            return v24;
          }
          v23 = ~v20;
          while (1)
          {
            v21 = (v21 + 1) & v23;
            if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
              break;
            if (*(_QWORD *)(v22 + 8 * v21) == v19)
              goto LABEL_34;
          }
        }
      }
    }
    v16 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v11)
      goto LABEL_38;
    v17 = *(_QWORD *)(v7 + 8 * v16);
    ++v4;
    if (!v17)
    {
      v4 = v13 + 2;
      if (v13 + 2 >= v11)
        goto LABEL_38;
      v17 = *(_QWORD *)(v7 + 8 * v4);
      if (!v17)
      {
        v4 = v13 + 3;
        if (v13 + 3 >= v11)
          goto LABEL_38;
        v17 = *(_QWORD *)(v7 + 8 * v4);
        if (!v17)
        {
          v18 = v13 + 4;
          if (v13 + 4 >= v11)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            v24 = 1;
            goto LABEL_35;
          }
          v17 = *(_QWORD *)(v7 + 8 * v18);
          v4 = v13 + 4;
          if (!v17)
            break;
        }
      }
    }
LABEL_28:
    v10 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v4 << 6);
    if (*(_QWORD *)(v6 + 16))
      goto LABEL_29;
  }
  while (1)
  {
    v4 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v4 >= v11)
      goto LABEL_38;
    v17 = *(_QWORD *)(v7 + 8 * v4);
    ++v18;
    if (v17)
      goto LABEL_28;
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1BAF029DC(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  int64_t v10;
  int64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  char v28;
  uint64_t v29;
  uint64_t v31;
  unint64_t v32;
  int64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 1;
  v3 = *(_QWORD *)(a1 + 16);
  if (!v3)
    return 1;
  if (v2 >= v3)
    v4 = a1;
  else
    v4 = a2;
  if (v2 >= v3)
    v5 = a2;
  else
    v5 = a1;
  v35 = v4;
  v36 = v4 + 56;
  v6 = -1 << *(_BYTE *)(v4 + 32);
  if (-v6 < 64)
    v7 = ~(-1 << -(char)v6);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v4 + 56);
  v33 = (unint64_t)(63 - v6) >> 6;
  v9 = v5 + 56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    do
    {
      while (1)
      {
        v11 = v10;
        if (!v8)
          break;
        v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v13 = v12 | (v10 << 6);
        if (*(_QWORD *)(v5 + 16))
          goto LABEL_31;
      }
      v14 = v10 + 1;
      if (__OFADD__(v10, 1))
      {
        __break(1u);
        goto LABEL_87;
      }
      if (v14 >= v33)
        goto LABEL_83;
      v15 = *(_QWORD *)(v36 + 8 * v14);
      ++v10;
      if (!v15)
      {
        v10 = v11 + 2;
        if (v11 + 2 >= v33)
          goto LABEL_83;
        v15 = *(_QWORD *)(v36 + 8 * v10);
        if (!v15)
        {
          v10 = v11 + 3;
          if (v11 + 3 >= v33)
            goto LABEL_83;
          v15 = *(_QWORD *)(v36 + 8 * v10);
          if (!v15)
          {
            v16 = v11 + 4;
            if (v11 + 4 >= v33)
            {
LABEL_83:
              swift_bridgeObjectRelease();
              v29 = 1;
              goto LABEL_81;
            }
            v15 = *(_QWORD *)(v36 + 8 * v16);
            if (!v15)
            {
              while (1)
              {
                v10 = v16 + 1;
                if (__OFADD__(v16, 1))
                  break;
                if (v10 >= v33)
                  goto LABEL_83;
                v15 = *(_QWORD *)(v36 + 8 * v10);
                ++v16;
                if (v15)
                  goto LABEL_30;
              }
LABEL_87:
              __break(1u);
              JUMPOUT(0x1BAF02F7CLL);
            }
            v10 = v11 + 4;
          }
        }
      }
LABEL_30:
      v8 = (v15 - 1) & v15;
      v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    while (!*(_QWORD *)(v5 + 16));
LABEL_31:
    v17 = (uint64_t *)(*(_QWORD *)(v35 + 48) + 16 * v13);
    v18 = *v17;
    v19 = v17[1];
    sub_1BB8745CC();
    v34 = v8;
    switch(v19)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
      case 8uLL:
      case 9uLL:
      case 0xAuLL:
      case 0xBuLL:
      case 0xCuLL:
      case 0xDuLL:
      case 0xEuLL:
        sub_1BB8745D8();
        break;
      default:
        sub_1BB8745D8();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        break;
    }
    v20 = sub_1BB874608();
    v21 = -1 << *(_BYTE *)(v5 + 32);
    v22 = v20 & ~v21;
    if (((*(_QWORD *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) != 0)
      break;
LABEL_13:
    sub_1BA766C18(v18, v19);
    v8 = v34;
  }
  v23 = ~v21;
  while (2)
  {
    v24 = (uint64_t *)(*(_QWORD *)(v5 + 48) + 16 * v22);
    v26 = *v24;
    v25 = v24[1];
    switch(v25)
    {
      case 0uLL:
        if (!v19)
          goto LABEL_77;
        goto LABEL_73;
      case 1uLL:
        if (v19 == 1)
          goto LABEL_77;
        goto LABEL_73;
      case 2uLL:
        if (v19 == 2)
          goto LABEL_77;
        goto LABEL_73;
      case 3uLL:
        if (v19 == 3)
          goto LABEL_77;
        goto LABEL_73;
      case 4uLL:
        if (v19 == 4)
          goto LABEL_77;
        goto LABEL_73;
      case 5uLL:
        if (v19 == 5)
          goto LABEL_77;
        goto LABEL_73;
      case 6uLL:
        if (v19 == 6)
          goto LABEL_77;
        goto LABEL_73;
      case 7uLL:
        if (v19 == 7)
          goto LABEL_77;
        goto LABEL_73;
      case 8uLL:
        if (v19 == 8)
          goto LABEL_77;
        goto LABEL_73;
      case 9uLL:
        if (v19 != 9)
          goto LABEL_73;
LABEL_77:
        v31 = *v24;
        v32 = v24[1];
        goto LABEL_78;
      case 0xAuLL:
        if (v19 != 10)
          goto LABEL_73;
        v25 = 10;
        v31 = *v24;
        v32 = 10;
        goto LABEL_78;
      case 0xBuLL:
        if (v19 != 11)
          goto LABEL_73;
        v25 = 11;
        v31 = *v24;
        v32 = 11;
        goto LABEL_78;
      case 0xCuLL:
        if (v19 != 12)
          goto LABEL_73;
        v25 = 12;
        v31 = *v24;
        v32 = 12;
        goto LABEL_78;
      case 0xDuLL:
        if (v19 != 13)
          goto LABEL_73;
        v25 = 13;
        v31 = *v24;
        v32 = 13;
        goto LABEL_78;
      case 0xEuLL:
        if (v19 != 14)
          goto LABEL_73;
        v25 = 14;
        v31 = *v24;
        v32 = 14;
LABEL_78:
        sub_1BA766C18(v31, v32);
        goto LABEL_79;
      default:
        if (v19 < 0xF)
        {
LABEL_73:
          sub_1BA682148(v18, v19);
          sub_1BA682148(v26, v25);
          sub_1BA766C18(v26, v25);
          sub_1BA766C18(v18, v19);
LABEL_74:
          v22 = (v22 + 1) & v23;
          if (((*(_QWORD *)(v9 + ((v22 >> 3) & 0xFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
            goto LABEL_13;
          continue;
        }
        if (v26 != v18 || v25 != v19)
        {
          v28 = sub_1BB874398();
          sub_1BA682148(v18, v19);
          sub_1BA682148(v26, v25);
          sub_1BA766C18(v26, v25);
          sub_1BA766C18(v18, v19);
          if ((v28 & 1) != 0)
            goto LABEL_80;
          goto LABEL_74;
        }
        sub_1BA682148(v18, v19);
        sub_1BA682148(v18, v19);
        sub_1BA766C18(v18, v19);
        v25 = v19;
LABEL_79:
        sub_1BA766C18(v18, v25);
        v19 = v25;
LABEL_80:
        swift_bridgeObjectRelease();
        sub_1BA766C18(v18, v19);
        v29 = 0;
LABEL_81:
        sub_1BA6EBD18();
        return v29;
    }
  }
}

ValueMetadata *type metadata accessor for FeedGroupSlots()
{
  return &type metadata for FeedGroupSlots;
}

void FeedSportsEvent.init(sportsEvent:)(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = objc_msgSend(a1, sel_identifier);
  v5 = sub_1BB8729A0();
  v7 = v6;

  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v7;
  *(_QWORD *)(a2 + 16) = a1;
  *(_QWORD *)(a2 + 24) = 0;
  *(_BYTE *)(a2 + 32) = 0;
}

uint64_t FeedSportsEvent.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedSportsEvent.sportsEvent.getter()
{
  return swift_unknownObjectRetain();
}

void FeedSportsEvent.layoutDirection.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FeedSportsEvent.init(identifier:sportsEvent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_QWORD *)(a4 + 24) = 0;
  *(_BYTE *)(a4 + 32) = 0;
  return result;
}

uint64_t FeedSportsEvent.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v5;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BAF03120@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v5 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = v5;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

void FeedSportsEvent.traits.getter(_QWORD *a1@<X8>)
{
  *a1 = 0x2000000000;
}

double FeedSportsEvent.kind.getter@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB8D3010;
  return result;
}

void sub_1BAF031A0(_QWORD *a1@<X8>)
{
  *a1 = 0x2000000000;
}

void sub_1BAF031B0(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 24);
  *(_BYTE *)(a1 + 8) = v2;
}

double sub_1BAF031C4@<D0>(_OWORD *a1@<X8>)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1BB8D3010;
  return result;
}

uint64_t FeedSportsEvent.debugIdentifier.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_identifier);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedSportsEvent.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedSportsEvent.debugTitle.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*(id *)(v0 + 16), sel_name);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedSportsEvent.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedSportsEvent.debugScoreProfile.getter()
{
  return 0;
}

uint64_t sub_1BAF03298()
{
  uint64_t v0;
  void *v1;
  unint64_t v2;
  uint64_t ObjectType;
  _QWORD *v4;
  id v5;
  uint64_t v6;
  _QWORD *v7;
  id v8;
  void *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t i;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  _QWORD *v26;

  v1 = *(void **)(v0 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  v26 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  ObjectType = swift_getObjectType();
  v4 = sub_1BA781D28(0x652D7374726F7073, 0xED00002D746E6576, ObjectType);
  sub_1BA6E9BD8((uint64_t)v4);
  v5 = objc_msgSend(v1, sel_eventLeagueTag);
  v6 = swift_getObjectType();
  v7 = sub_1BA781D28(0xD000000000000014, 0x80000001BB971950, v6);
  swift_unknownObjectRelease();
  sub_1BA6E9BD8((uint64_t)v7);
  v8 = objc_msgSend(v1, sel_eventCompetitorTags);
  if (v8)
  {
    v9 = v8;
    sub_1BA8EB1C8();
    v2 = sub_1BB872DB4();

  }
  v10 = v2 >> 62;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1BB873F30();
    v11 = result;
    if (result)
      goto LABEL_5;
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v11 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v11)
    goto LABEL_13;
LABEL_5:
  if (v11 < 1)
  {
    __break(1u);
    return result;
  }
  for (i = 0; i != v11; ++i)
  {
    if ((v2 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](i, v2);
    else
      swift_unknownObjectRetain();
    v14 = swift_getObjectType();
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB87420C();
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v16);
    v17 = sub_1BA781D28(0xD000000000000018, 0x80000001BB971970, v14);
    swift_bridgeObjectRelease();
    sub_1BA6E9BD8((uint64_t)v17);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  v10 = v2 >> 62;
LABEL_14:
  v18 = v26;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BA6EA0D0(0, v26[2] + 1, 1, v26);
  v20 = v18[2];
  v19 = v18[3];
  if (v20 >= v19 >> 1)
    v18 = sub_1BA6EA0D0((_QWORD *)(v19 > 1), v20 + 1, 1, v18);
  v18[2] = v20 + 1;
  v21 = &v18[2 * v20];
  v21[4] = 0xD00000000000001FLL;
  v21[5] = 0x80000001BB971990;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  if (v10)
  {
    swift_bridgeObjectRetain();
    sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  sub_1BB87420C();
  sub_1BB872AFC(v22);
  swift_bridgeObjectRelease();
  v24 = v18[2];
  v23 = v18[3];
  if (v24 >= v23 >> 1)
    v18 = sub_1BA6EA0D0((_QWORD *)(v23 > 1), v24 + 1, 1, v18);
  v18[2] = v24 + 1;
  v25 = &v18[2 * v24];
  v25[4] = 0xD00000000000001FLL;
  v25[5] = 0x80000001BB9719B0;
  return (uint64_t)v18;
}

uint64_t sub_1BAF03684()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v0 = sub_1BAF03298();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v9;
    v3 = v0 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v4);
      swift_bridgeObjectRelease();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA7447E8(v5 > 1, v6 + 1, 1);
      v3 += 16;
      *(_QWORD *)(v9 + 16) = v6 + 1;
      v7 = v9 + 16 * v6;
      *(_QWORD *)(v7 + 32) = 0x2D64656566;
      *(_QWORD *)(v7 + 40) = 0xE500000000000000;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
  return v2;
}

unint64_t sub_1BAF037D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF037FC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAF037FC()
{
  unint64_t result;

  result = qword_1ED3A4A50;
  if (!qword_1ED3A4A50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedSportsEvent, &type metadata for FeedSportsEvent);
    atomic_store(result, (unint64_t *)&qword_1ED3A4A50);
  }
  return result;
}

uint64_t destroy for FeedSportsEvent()
{
  swift_bridgeObjectRelease();
  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for FeedSportsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedSportsEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  return a1;
}

uint64_t assignWithTake for FeedSportsEvent(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for FeedSportsEvent()
{
  return &type metadata for FeedSportsEvent;
}

void static FeedGroupTopicDiversityRequirements.noRequirements.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0x3FF0000000000000;
  *(_BYTE *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 1;
  *(_BYTE *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = MEMORY[0x1E0DEE9E8];
}

uint64_t FeedGroupTopicDiversityRequirements.threshold.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FeedGroupTopicDiversityRequirements.windowSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t FeedGroupTopicDiversityRequirements.allowedTopicIDs.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedGroupTopicDiversityRequirements.init(threshold:windowSize:allowedTopicIDs:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_QWORD *)a6 = result;
  *(_BYTE *)(a6 + 8) = a2 & 1;
  *(_QWORD *)(a6 + 16) = a3;
  *(_BYTE *)(a6 + 24) = a4 & 1;
  *(_QWORD *)(a6 + 32) = a5;
  return result;
}

uint64_t sub_1BAF039F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF03EAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF03A14()
{
  sub_1BA4D4470();
  return sub_1BB874710();
}

uint64_t sub_1BAF03A3C()
{
  sub_1BA4D4470();
  return sub_1BB87471C();
}

uint64_t FeedGroupTopicDiversityRequirements.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  int v13;
  char v14;
  char v15;
  char v16;

  sub_1BA4D4414(0, &qword_1ED3AB608, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = *(_QWORD *)(v1 + 16);
  v13 = *(unsigned __int8 *)(v1 + 24);
  v12[0] = *(_QWORD *)(v1 + 32);
  v12[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA4D4470();
  sub_1BB8746C8();
  v16 = 0;
  v9 = v12[2];
  sub_1BB874134();
  if (!v9)
  {
    v10 = v12[0];
    v15 = 1;
    sub_1BB874140();
    v12[3] = v10;
    v14 = 2;
    sub_1BA6BCC84();
    sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BAF03C08(_QWORD *a1)
{
  return FeedGroupTopicDiversityRequirements.encode(to:)(a1);
}

BOOL _s8NewsFeed0B31GroupTopicDiversityRequirementsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;

  v2 = *(_BYTE *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      return 0;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v2 = 1;
    if ((v2 & 1) != 0)
      return 0;
  }
  if ((*(_BYTE *)(a1 + 24) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 24))
      return 0;
  }
  else
  {
    if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16))
      v4 = *(_BYTE *)(a2 + 24);
    else
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  if (*(_QWORD *)(a1 + 32))
  {
    if (!v3)
      return 0;
    swift_bridgeObjectRetain();
    v5 = swift_bridgeObjectRetain();
    v6 = sub_1BA6EB330(v5, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v6 & 1) != 0;
  }
  return !v3;
}

uint64_t assignWithCopy for FeedGroupTopicDiversityRequirements(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v3;
  v4 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedGroupTopicDiversityRequirements(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupTopicDiversityRequirements()
{
  return &type metadata for FeedGroupTopicDiversityRequirements;
}

uint64_t storeEnumTagSinglePayload for FeedGroupTopicDiversityRequirements.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF03DE4 + 4 * byte_1BB8D30D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF03E18 + 4 * asc_1BB8D30D0[v4]))();
}

uint64_t sub_1BAF03E18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF03E20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF03E28);
  return result;
}

uint64_t sub_1BAF03E34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF03E3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF03E40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF03E48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupTopicDiversityRequirements.CodingKeys()
{
  return &type metadata for FeedGroupTopicDiversityRequirements.CodingKeys;
}

unint64_t sub_1BAF03E68()
{
  unint64_t result;

  result = qword_1EF2B6158;
  if (!qword_1EF2B6158)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D3220, &type metadata for FeedGroupTopicDiversityRequirements.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6158);
  }
  return result;
}

uint64_t sub_1BAF03EAC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6953776F646E6977 && a2 == 0xEA0000000000657ALL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x546465776F6C6C61 && a2 == 0xEF7344496369706FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAF0403C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  id *v10;
  int v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  __int128 v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t *, uint64_t);
  char *v20;
  char *v21;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_QWORD *)a1 = *a2;
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)a1 = *a2;
      v7 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
      v8 = v7[5];
      v9 = (_QWORD *)(a1 + v8);
      v10 = (id *)((char *)a2 + v8);
      type metadata accessor for DebugFormatCompilerResultOutput();
      swift_retain();
      v11 = swift_getEnumCaseMultiPayload();
      if (v11 == 2)
      {
        type metadata accessor for FormatFile();
        v20 = (char *)&loc_1BAF041B8 + 4 * word_1BB8D32A0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      if (v11 != 1)
      {
        type metadata accessor for FormatFile();
        v21 = (char *)&loc_1BAF04340 + 4 * word_1BB8D32B8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v12 = *v10;
      v13 = *v10;
      *v9 = v12;
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)(a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      *(_QWORD *)(a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      *(_QWORD *)(a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v15 = a2[1];
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = v15;
      v16 = a2 + 2;
      v17 = *(_OWORD *)(a2 + 5);
      *(_OWORD *)(a1 + 40) = v17;
      v18 = v17;
      v19 = **(void (***)(uint64_t, uint64_t *, uint64_t))(v17 - 8);
      swift_bridgeObjectRetain();
      v19(a1 + 16, v16, v18);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1BAF05E00()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BE470)
  {
    type metadata accessor for FormatFile();
    sub_1BA8EBDF8();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BE470);
  }
}

uint64_t sub_1BAF05E70(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  result = swift_getEnumCaseMultiPayload();
  switch((_DWORD)result)
  {
    case 2:
      return swift_release();
    case 1:
      swift_release();
      v3 = a1 + *(int *)(type metadata accessor for DebugFormatCompilerResultEntry() + 20);
      type metadata accessor for DebugFormatCompilerResultOutput();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        type metadata accessor for FormatFile();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            v11 = type metadata accessor for FormatContent(0);
            v12 = v3 + *(int *)(v11 + 20);
            v13 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v14 = v3 + *(int *)(v11 + 40);
            v15 = sub_1BB871E24();
            v16 = *(_QWORD *)(v15 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
              (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
            goto LABEL_72;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(unsigned __int8 *)(v3 + 106) != 255)
            {
              v38 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
              sub_1BA77A170(*(_QWORD *)(v3 + 96), v38, SBYTE2(v38), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
            }
            break;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v3 + 72) >= 3uLL)
              swift_bridgeObjectRelease();
            goto LABEL_72;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v3 + 56) >= 0xFuLL)
              swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_73;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_73;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(_QWORD *)(v3 + 168) >= 3uLL)
              swift_bridgeObjectRelease();
            v39 = (int *)type metadata accessor for FormatPackage();
            v40 = v3 + v39[23];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v41 = type metadata accessor for FormatCompilerOptions(0);
            v42 = v40 + *(int *)(v41 + 24);
            if (*(_QWORD *)(v42 + 8) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v43 = v42 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
            v44 = sub_1BB86E710();
            v45 = *(_QWORD *)(v44 - 8);
            v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
            if (!v46(v43, 1, v44))
              (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v44);
            v47 = v40 + *(int *)(v41 + 28);
            if (!v46(v47, 1, v44))
              (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v44);
            swift_bridgeObjectRelease();
            v48 = v3 + v39[24];
            v49 = sub_1BB86EB84();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v48, v49);
            v50 = v3 + v39[25];
            if (!v46(v50, 1, v44))
              (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v50, v44);
            break;
          case 6u:
            swift_bridgeObjectRelease();
            goto LABEL_73;
          case 7u:
            swift_release();
            break;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_73;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_73;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA6C0C20(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80));
            break;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v51 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
            swift_bridgeObjectRelease();
            v52 = type metadata accessor for FormatContent(0);
            v53 = v51 + *(int *)(v52 + 20);
            v54 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v55 = v51 + *(int *)(v52 + 40);
            v56 = sub_1BB871E24();
            v57 = *(_QWORD *)(v56 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
              (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v56);
LABEL_72:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_73:
            swift_bridgeObjectRelease();
            break;
          default:
            break;
        }
        sub_1BAF05E00();
        v17 = *(void **)(v3 + *(int *)(v58 + 48));
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          if (!EnumCaseMultiPayload)
          {
            type metadata accessor for FormatFile();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                v5 = type metadata accessor for FormatContent(0);
                v6 = v3 + *(int *)(v5 + 20);
                v7 = sub_1BB86C8B0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v8 = v3 + *(int *)(v5 + 40);
                v9 = sub_1BB871E24();
                v10 = *(_QWORD *)(v9 - 8);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
                  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
                goto LABEL_45;
              case 1u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(unsigned __int8 *)(v3 + 106) != 255)
                {
                  v18 = *(unsigned __int16 *)(v3 + 104) | (*(unsigned __int8 *)(v3 + 106) << 16);
                  sub_1BA77A170(*(_QWORD *)(v3 + 96), v18, SBYTE2(v18), (uint64_t (*)(uint64_t, uint64_t, _QWORD))sub_1BA7AAE54, (uint64_t (*)(void))sub_1BA7AAE60);
                }
                goto LABEL_76;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v3 + 72) >= 3uLL)
                  swift_bridgeObjectRelease();
                goto LABEL_45;
              case 3u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v3 + 56) >= 0xFuLL)
                  swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_76;
              case 4u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_76;
              case 5u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(_QWORD *)(v3 + 168) >= 3uLL)
                  swift_bridgeObjectRelease();
                v19 = (int *)type metadata accessor for FormatPackage();
                v20 = v3 + v19[23];
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v21 = type metadata accessor for FormatCompilerOptions(0);
                v22 = v20 + *(int *)(v21 + 24);
                if (*(_QWORD *)(v22 + 8) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v23 = v22 + *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
                v24 = sub_1BB86E710();
                v25 = *(_QWORD *)(v24 - 8);
                v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
                if (!v26(v23, 1, v24))
                  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
                v27 = v20 + *(int *)(v21 + 28);
                if (!v26(v27, 1, v24))
                  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v24);
                swift_bridgeObjectRelease();
                v28 = v3 + v19[24];
                v29 = sub_1BB86EB84();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
                v30 = v3 + v19[25];
                if (!v26(v30, 1, v24))
                  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v30, v24);
                goto LABEL_76;
              case 6u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_76;
              case 7u:
                swift_release();
                goto LABEL_76;
              case 8u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_76;
              case 9u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_76;
              case 0xAu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_1BA6C0C20(*(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(_QWORD *)(v3 + 72), *(_BYTE *)(v3 + 80));
                goto LABEL_76;
              case 0xBu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v31 = v3 + *(int *)(type metadata accessor for FormatBindingContent() + 28);
                swift_bridgeObjectRelease();
                v32 = type metadata accessor for FormatContent(0);
                v33 = v31 + *(int *)(v32 + 20);
                v34 = sub_1BB86C8B0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(v33, v34);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v35 = v31 + *(int *)(v32 + 40);
                v36 = sub_1BB871E24();
                v37 = *(_QWORD *)(v36 - 8);
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
                  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
LABEL_45:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                break;
              default:
                goto LABEL_76;
            }
          }
          goto LABEL_76;
        }
        v17 = *(void **)v3;
      }

LABEL_76:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 0:
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  }
  return result;
}

uint64_t sub_1BAF06C54(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  id *v8;
  int v9;
  id v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  char *v17;
  char *v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v5 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
    v6 = v5[5];
    v7 = (_QWORD *)(a1 + v6);
    v8 = (id *)(a2 + v6);
    type metadata accessor for DebugFormatCompilerResultOutput();
    swift_retain();
    v9 = swift_getEnumCaseMultiPayload();
    if (v9 == 2)
    {
      type metadata accessor for FormatFile();
      v17 = (char *)&loc_1BAF06D90 + 4 * word_1BB8D3300[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    if (v9 != 1)
    {
      type metadata accessor for FormatFile();
      v18 = (char *)&loc_1BAF06F14 + 4 * word_1BB8D3318[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v10 = *v8;
    v11 = *v8;
    *v7 = v10;
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)(a1 + v5[6]) = *(_QWORD *)(a2 + v5[6]);
    *(_QWORD *)(a1 + v5[7]) = *(_QWORD *)(a2 + v5[7]);
    *(_QWORD *)(a1 + v5[8]) = *(_QWORD *)(a2 + v5[8]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v12 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v12;
    v13 = a2 + 16;
    v14 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v14;
    v15 = v14;
    v16 = **(void (***)(uint64_t, uint64_t, uint64_t))(v14 - 8);
    swift_bridgeObjectRetain();
    v16(a1 + 16, v13, v15);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BAF08A0C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  id *v8;
  int v9;
  id v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  void (*v14)(_QWORD *, _QWORD *, uint64_t);
  char *v15;
  char *v16;

  if (a1 != a2)
  {
    sub_1BAF0ABA0((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      v5 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
      v6 = v5[5];
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (id *)((char *)a2 + v6);
      type metadata accessor for DebugFormatCompilerResultOutput();
      swift_retain();
      v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 2)
      {
        type metadata accessor for FormatFile();
        v15 = (char *)&loc_1BAF08B64 + 4 * word_1BB8D3330[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      if (v9 != 1)
      {
        type metadata accessor for FormatFile();
        v16 = (char *)&loc_1BAF08D10 + 4 * word_1BB8D3348[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v10 = *v8;
      v11 = *v8;
      *v7 = v10;
      swift_storeEnumTagMultiPayload();
      *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
      *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
      *(_QWORD *)((char *)a1 + v5[8]) = *(_QWORD *)((char *)a2 + v5[8]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v12 = a2 + 2;
      v13 = a2[5];
      a1[5] = v13;
      a1[6] = a2[6];
      v14 = **(void (***)(_QWORD *, _QWORD *, uint64_t))(v13 - 8);
      swift_bridgeObjectRetain();
      v14(a1 + 2, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BAF0ABA0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatCompilerItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugFormatCompilerItem()
{
  uint64_t result;

  result = qword_1EF2B61D0;
  if (!qword_1EF2B61D0)
    return swift_getSingletonMetadata();
  return result;
}

_QWORD *sub_1BAF0AC18(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  __int128 v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v120;
  uint64_t v121;
  int *v122;
  int *v123;
  int *v124;
  int *v125;
  unsigned int (*v126)(char *, uint64_t, uint64_t);
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  int *v132;
  int *v133;
  int *v134;
  int *v135;
  int *v136;
  int *v137;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
    v7 = v6[5];
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for DebugFormatCompilerResultOutput();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 2)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_52:
        *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
        *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
        *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v12 = type metadata accessor for FormatFile();
      v13 = swift_getEnumCaseMultiPayload();
      if (v13 == 11)
      {
        v134 = v6;
        v38 = v9[1];
        *v8 = *v9;
        v8[1] = v38;
        v8[2] = v9[2];
        v39 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        v40 = (char *)v8 + v39;
        v41 = (char *)v9 + v39;
        *(_OWORD *)((char *)v8 + v39) = *(_OWORD *)((char *)v9 + v39);
        v42 = (int *)type metadata accessor for FormatContent(0);
        v43 = v42[5];
        v44 = &v40[v43];
        v45 = &v41[v43];
        v46 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
        *(_OWORD *)&v40[v42[6]] = *(_OWORD *)&v41[v42[6]];
        *(_OWORD *)&v40[v42[7]] = *(_OWORD *)&v41[v42[7]];
        *(_OWORD *)&v40[v42[8]] = *(_OWORD *)&v41[v42[8]];
        *(_OWORD *)&v40[v42[9]] = *(_OWORD *)&v41[v42[9]];
        v47 = v42[10];
        __dst = &v40[v47];
        v48 = &v41[v47];
        v49 = sub_1BB871E24();
        v50 = *(_QWORD *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v50 + 32))(__dst, v48, v49);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
        }
        v6 = v134;
        *(_QWORD *)&v40[v42[11]] = *(_QWORD *)&v41[v42[11]];
        *(_QWORD *)&v40[v42[12]] = *(_QWORD *)&v41[v42[12]];
        *(_QWORD *)&v40[v42[13]] = *(_QWORD *)&v41[v42[13]];
        *(_QWORD *)&v40[v42[14]] = *(_QWORD *)&v41[v42[14]];
        *(_QWORD *)&v40[v42[15]] = *(_QWORD *)&v41[v42[15]];
        *(_QWORD *)&v40[v42[16]] = *(_QWORD *)&v41[v42[16]];
        *(_QWORD *)&v40[v42[17]] = *(_QWORD *)&v41[v42[17]];
      }
      else if (v13 == 5)
      {
        v135 = v6;
        v52 = v9[1];
        *v8 = *v9;
        v8[1] = v52;
        v8[2] = v9[2];
        *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
        *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
        *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
        *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
        *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
        *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
        v8[10] = v9[10];
        v122 = (int *)type metadata accessor for FormatPackage();
        v53 = v122[23];
        v54 = (char *)v8 + v53;
        v55 = (char *)v9 + v53;
        *(_OWORD *)((char *)v8 + v53) = *(_OWORD *)((char *)v9 + v53);
        v124 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v56 = v124[6];
        v57 = &v54[v56];
        __dsta = v55;
        v58 = &v55[v56];
        v59 = *(_OWORD *)&v55[v56 + 16];
        *(_OWORD *)v57 = *(_OWORD *)&v55[v56];
        *((_OWORD *)v57 + 1) = v59;
        *((_OWORD *)v57 + 2) = *(_OWORD *)&v55[v56 + 32];
        v60 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v61 = &v57[v60];
        v62 = &v58[v60];
        v63 = sub_1BB86E710();
        v64 = *(_QWORD *)(v63 - 8);
        v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        v120 = v64;
        if (v126(v62, 1, v63))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        v94 = v124[7];
        v95 = &v54[v94];
        v96 = &__dsta[v94];
        v6 = v135;
        if (v126(&__dsta[v94], 1, v63))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v95, v96, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v95, 0, 1, v63);
        }
        *(_QWORD *)&v54[v124[8]] = *(_QWORD *)&__dsta[v124[8]];
        v102 = v122[24];
        v103 = (char *)v8 + v102;
        v104 = (char *)v9 + v102;
        v105 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 32))(v103, v104, v105);
        v106 = v122[25];
        v107 = (char *)v8 + v106;
        v108 = (char *)v9 + v106;
        if (v126(v108, 1, v63))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v107, v108, v63);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v107, 0, 1, v63);
        }
      }
      else
      {
        if (v13)
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_51:
          swift_storeEnumTagMultiPayload();
          goto LABEL_52;
        }
        v132 = v6;
        *v8 = *v9;
        v14 = (int *)type metadata accessor for FormatContent(0);
        v15 = v14[5];
        v16 = (char *)v8 + v15;
        v17 = (char *)v9 + v15;
        v18 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)v8 + v14[6]) = *(_OWORD *)((char *)v9 + v14[6]);
        *(_OWORD *)((char *)v8 + v14[7]) = *(_OWORD *)((char *)v9 + v14[7]);
        *(_OWORD *)((char *)v8 + v14[8]) = *(_OWORD *)((char *)v9 + v14[8]);
        *(_OWORD *)((char *)v8 + v14[9]) = *(_OWORD *)((char *)v9 + v14[9]);
        v19 = v14[10];
        v20 = (char *)v8 + v19;
        v21 = (char *)v9 + v19;
        v22 = sub_1BB871E24();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        }
        v6 = v132;
        *(_QWORD *)((char *)v8 + v14[11]) = *(_QWORD *)((char *)v9 + v14[11]);
        *(_QWORD *)((char *)v8 + v14[12]) = *(_QWORD *)((char *)v9 + v14[12]);
        *(_QWORD *)((char *)v8 + v14[13]) = *(_QWORD *)((char *)v9 + v14[13]);
        *(_QWORD *)((char *)v8 + v14[14]) = *(_QWORD *)((char *)v9 + v14[14]);
        *(_QWORD *)((char *)v8 + v14[15]) = *(_QWORD *)((char *)v9 + v14[15]);
        *(_QWORD *)((char *)v8 + v14[16]) = *(_QWORD *)((char *)v9 + v14[16]);
        *(_QWORD *)((char *)v8 + v14[17]) = *(_QWORD *)((char *)v9 + v14[17]);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
    }
    v25 = type metadata accessor for FormatFile();
    v26 = swift_getEnumCaseMultiPayload();
    if (v26 == 11)
    {
      v136 = v6;
      v66 = v9[1];
      *v8 = *v9;
      v8[1] = v66;
      v8[2] = v9[2];
      v67 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
      v68 = (char *)v8 + v67;
      v69 = (char *)v9 + v67;
      *(_OWORD *)((char *)v8 + v67) = *(_OWORD *)((char *)v9 + v67);
      v70 = (int *)type metadata accessor for FormatContent(0);
      v71 = v70[5];
      v72 = &v68[v71];
      v73 = &v69[v71];
      v74 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
      *(_OWORD *)&v68[v70[6]] = *(_OWORD *)&v69[v70[6]];
      *(_OWORD *)&v68[v70[7]] = *(_OWORD *)&v69[v70[7]];
      *(_OWORD *)&v68[v70[8]] = *(_OWORD *)&v69[v70[8]];
      *(_OWORD *)&v68[v70[9]] = *(_OWORD *)&v69[v70[9]];
      v75 = v70[10];
      __dstb = &v68[v75];
      v76 = &v69[v75];
      v77 = sub_1BB871E24();
      v78 = *(_QWORD *)(v77 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v76, 1, v77))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(__dstb, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v78 + 32))(__dstb, v76, v77);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v78 + 56))(__dstb, 0, 1, v77);
      }
      *(_QWORD *)&v68[v70[11]] = *(_QWORD *)&v69[v70[11]];
      *(_QWORD *)&v68[v70[12]] = *(_QWORD *)&v69[v70[12]];
      *(_QWORD *)&v68[v70[13]] = *(_QWORD *)&v69[v70[13]];
      *(_QWORD *)&v68[v70[14]] = *(_QWORD *)&v69[v70[14]];
      *(_QWORD *)&v68[v70[15]] = *(_QWORD *)&v69[v70[15]];
      *(_QWORD *)&v68[v70[16]] = *(_QWORD *)&v69[v70[16]];
      *(_QWORD *)&v68[v70[17]] = *(_QWORD *)&v69[v70[17]];
      swift_storeEnumTagMultiPayload();
      v6 = v136;
      goto LABEL_50;
    }
    if (v26 == 5)
    {
      v137 = v6;
      v80 = v9[1];
      *v8 = *v9;
      v8[1] = v80;
      v8[2] = v9[2];
      *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
      *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
      *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
      *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
      *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
      *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
      *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
      *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
      v8[10] = v9[10];
      v123 = (int *)type metadata accessor for FormatPackage();
      v81 = v123[23];
      v82 = (char *)v8 + v81;
      v83 = (char *)v9 + v81;
      *(_OWORD *)((char *)v8 + v81) = *(_OWORD *)((char *)v9 + v81);
      v125 = (int *)type metadata accessor for FormatCompilerOptions(0);
      v84 = v125[6];
      v85 = &v82[v84];
      __dstc = v83;
      v86 = &v83[v84];
      v87 = *(_OWORD *)&v83[v84 + 16];
      *(_OWORD *)v85 = *(_OWORD *)&v83[v84];
      *((_OWORD *)v85 + 1) = v87;
      *((_OWORD *)v85 + 2) = *(_OWORD *)&v83[v84 + 32];
      v88 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
      v89 = &v85[v88];
      v90 = &v86[v88];
      v91 = sub_1BB86E710();
      v92 = *(_QWORD *)(v91 - 8);
      v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48);
      v121 = v92;
      if (v127(v90, 1, v91))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v89, v90, v91);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
      }
      v98 = v125[7];
      v99 = &v82[v98];
      v100 = &__dstc[v98];
      v6 = v137;
      if (v127(&__dstc[v98], 1, v91))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v99, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v99, v100, v91);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v99, 0, 1, v91);
      }
      *(_QWORD *)&v82[v125[8]] = *(_QWORD *)&__dstc[v125[8]];
      v110 = v123[24];
      v111 = (char *)v8 + v110;
      v112 = (char *)v9 + v110;
      v113 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 32))(v111, v112, v113);
      v114 = v123[25];
      v115 = (char *)v8 + v114;
      v116 = (char *)v9 + v114;
      if (v127((char *)v9 + v114, 1, v91))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
        memcpy(v115, v116, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v115, v116, v91);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v115, 0, 1, v91);
      }
    }
    else
    {
      if (v26)
      {
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_50:
        sub_1BAF05E00();
        *(_QWORD *)((char *)v8 + *(int *)(v118 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v118 + 48));
        goto LABEL_51;
      }
      v133 = v6;
      *v8 = *v9;
      v27 = (int *)type metadata accessor for FormatContent(0);
      v28 = v27[5];
      v29 = (char *)v8 + v28;
      v30 = (char *)v9 + v28;
      v31 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      *(_OWORD *)((char *)v8 + v27[6]) = *(_OWORD *)((char *)v9 + v27[6]);
      *(_OWORD *)((char *)v8 + v27[7]) = *(_OWORD *)((char *)v9 + v27[7]);
      *(_OWORD *)((char *)v8 + v27[8]) = *(_OWORD *)((char *)v9 + v27[8]);
      *(_OWORD *)((char *)v8 + v27[9]) = *(_OWORD *)((char *)v9 + v27[9]);
      v32 = v27[10];
      v33 = (char *)v8 + v32;
      v34 = (char *)v9 + v32;
      v35 = sub_1BB871E24();
      v36 = *(_QWORD *)(v35 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
      }
      v6 = v133;
      *(_QWORD *)((char *)v8 + v27[11]) = *(_QWORD *)((char *)v9 + v27[11]);
      *(_QWORD *)((char *)v8 + v27[12]) = *(_QWORD *)((char *)v9 + v27[12]);
      *(_QWORD *)((char *)v8 + v27[13]) = *(_QWORD *)((char *)v9 + v27[13]);
      *(_QWORD *)((char *)v8 + v27[14]) = *(_QWORD *)((char *)v9 + v27[14]);
      *(_QWORD *)((char *)v8 + v27[15]) = *(_QWORD *)((char *)v9 + v27[15]);
      *(_QWORD *)((char *)v8 + v27[16]) = *(_QWORD *)((char *)v9 + v27[16]);
      *(_QWORD *)((char *)v8 + v27[17]) = *(_QWORD *)((char *)v9 + v27[17]);
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *sub_1BAF0B970(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  int v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  __int128 v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  __int128 v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v119;
  uint64_t v120;
  int *v121;
  int *v122;
  int *v123;
  uint64_t v124;
  int *v125;
  unsigned int (*v126)(char *, uint64_t, uint64_t);
  unsigned int (*v127)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;
  int *v132;
  int *v133;
  int *v134;
  int *v135;
  int *v136;
  int *v137;

  if (a1 != a2)
  {
    sub_1BAF0ABA0((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for DebugFormatCompilerResultEntry();
      v7 = v6[5];
      v8 = (_OWORD *)((char *)a1 + v7);
      v9 = (_OWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for DebugFormatCompilerResultOutput();
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 2)
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_53:
          *(_QWORD *)((char *)a1 + v6[6]) = *(_QWORD *)((char *)a2 + v6[6]);
          *(_QWORD *)((char *)a1 + v6[7]) = *(_QWORD *)((char *)a2 + v6[7]);
          *(_QWORD *)((char *)a1 + v6[8]) = *(_QWORD *)((char *)a2 + v6[8]);
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v12 = type metadata accessor for FormatFile();
        v13 = swift_getEnumCaseMultiPayload();
        if (v13 == 11)
        {
          v134 = v6;
          v38 = v9[1];
          *v8 = *v9;
          v8[1] = v38;
          v8[2] = v9[2];
          v39 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
          v40 = (char *)v8 + v39;
          v41 = (char *)v9 + v39;
          *(_OWORD *)((char *)v8 + v39) = *(_OWORD *)((char *)v9 + v39);
          v42 = (int *)type metadata accessor for FormatContent(0);
          v43 = v42[5];
          v44 = &v40[v43];
          v45 = &v41[v43];
          v46 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 32))(v44, v45, v46);
          *(_OWORD *)&v40[v42[6]] = *(_OWORD *)&v41[v42[6]];
          *(_OWORD *)&v40[v42[7]] = *(_OWORD *)&v41[v42[7]];
          *(_OWORD *)&v40[v42[8]] = *(_OWORD *)&v41[v42[8]];
          *(_OWORD *)&v40[v42[9]] = *(_OWORD *)&v41[v42[9]];
          v47 = v42[10];
          __dst = &v40[v47];
          v48 = &v41[v47];
          v49 = sub_1BB871E24();
          v50 = *(_QWORD *)(v49 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
            memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v50 + 32))(__dst, v48, v49);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(__dst, 0, 1, v49);
          }
          v6 = v134;
          *(_QWORD *)&v40[v42[11]] = *(_QWORD *)&v41[v42[11]];
          *(_QWORD *)&v40[v42[12]] = *(_QWORD *)&v41[v42[12]];
          *(_QWORD *)&v40[v42[13]] = *(_QWORD *)&v41[v42[13]];
          *(_QWORD *)&v40[v42[14]] = *(_QWORD *)&v41[v42[14]];
          *(_QWORD *)&v40[v42[15]] = *(_QWORD *)&v41[v42[15]];
          *(_QWORD *)&v40[v42[16]] = *(_QWORD *)&v41[v42[16]];
          *(_QWORD *)&v40[v42[17]] = *(_QWORD *)&v41[v42[17]];
        }
        else if (v13 == 5)
        {
          v135 = v6;
          v52 = v9[1];
          *v8 = *v9;
          v8[1] = v52;
          v8[2] = v9[2];
          *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
          *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
          *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
          *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
          *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
          *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
          *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
          *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
          v8[10] = v9[10];
          v121 = (int *)type metadata accessor for FormatPackage();
          v53 = v121[23];
          v54 = (char *)v8 + v53;
          v55 = (char *)v9 + v53;
          *(_OWORD *)((char *)v8 + v53) = *(_OWORD *)((char *)v9 + v53);
          v123 = (int *)type metadata accessor for FormatCompilerOptions(0);
          v56 = v123[6];
          v57 = &v54[v56];
          __dsta = v55;
          v58 = &v55[v56];
          v59 = *(_OWORD *)&v55[v56 + 16];
          *(_OWORD *)v57 = *(_OWORD *)&v55[v56];
          *((_OWORD *)v57 + 1) = v59;
          *((_OWORD *)v57 + 2) = *(_OWORD *)&v55[v56 + 32];
          v60 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
          v61 = &v57[v60];
          v62 = &v58[v60];
          v63 = sub_1BB86E710();
          v64 = *(_QWORD *)(v63 - 8);
          v126 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
          v119 = v64;
          if (v126(v62, 1, v63))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v62, v63);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
          }
          v93 = v123[7];
          v94 = &v54[v93];
          v95 = &__dsta[v93];
          v6 = v135;
          if (v126(&__dsta[v93], 1, v63))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v94, v95, v63);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v94, 0, 1, v63);
          }
          *(_QWORD *)&v54[v123[8]] = *(_QWORD *)&__dsta[v123[8]];
          v101 = v121[24];
          v102 = (char *)v8 + v101;
          v103 = (char *)v9 + v101;
          v104 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
          v105 = v121[25];
          v106 = (char *)v8 + v105;
          v107 = (char *)v9 + v105;
          if (v126(v107, 1, v63))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
            memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v119 + 32))(v106, v107, v63);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v106, 0, 1, v63);
          }
        }
        else
        {
          if (v13)
          {
            memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
LABEL_52:
            swift_storeEnumTagMultiPayload();
            goto LABEL_53;
          }
          v132 = v6;
          *v8 = *v9;
          v14 = (int *)type metadata accessor for FormatContent(0);
          v15 = v14[5];
          v16 = (char *)v8 + v15;
          v17 = (char *)v9 + v15;
          v18 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
          *(_OWORD *)((char *)v8 + v14[6]) = *(_OWORD *)((char *)v9 + v14[6]);
          *(_OWORD *)((char *)v8 + v14[7]) = *(_OWORD *)((char *)v9 + v14[7]);
          *(_OWORD *)((char *)v8 + v14[8]) = *(_OWORD *)((char *)v9 + v14[8]);
          *(_OWORD *)((char *)v8 + v14[9]) = *(_OWORD *)((char *)v9 + v14[9]);
          v19 = v14[10];
          v20 = (char *)v8 + v19;
          v21 = (char *)v9 + v19;
          v22 = sub_1BB871E24();
          v23 = *(_QWORD *)(v22 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
          }
          v6 = v132;
          *(_QWORD *)((char *)v8 + v14[11]) = *(_QWORD *)((char *)v9 + v14[11]);
          *(_QWORD *)((char *)v8 + v14[12]) = *(_QWORD *)((char *)v9 + v14[12]);
          *(_QWORD *)((char *)v8 + v14[13]) = *(_QWORD *)((char *)v9 + v14[13]);
          *(_QWORD *)((char *)v8 + v14[14]) = *(_QWORD *)((char *)v9 + v14[14]);
          *(_QWORD *)((char *)v8 + v14[15]) = *(_QWORD *)((char *)v9 + v14[15]);
          *(_QWORD *)((char *)v8 + v14[16]) = *(_QWORD *)((char *)v9 + v14[16]);
          *(_QWORD *)((char *)v8 + v14[17]) = *(_QWORD *)((char *)v9 + v14[17]);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_52;
      }
      v25 = type metadata accessor for FormatFile();
      v26 = swift_getEnumCaseMultiPayload();
      if (v26 == 11)
      {
        v136 = v6;
        v66 = v9[1];
        *v8 = *v9;
        v8[1] = v66;
        v8[2] = v9[2];
        v67 = *(int *)(type metadata accessor for FormatBindingContent() + 28);
        v68 = (char *)v8 + v67;
        v69 = (char *)v9 + v67;
        *(_OWORD *)((char *)v8 + v67) = *(_OWORD *)((char *)v9 + v67);
        v70 = (int *)type metadata accessor for FormatContent(0);
        v71 = v70[5];
        v72 = &v68[v71];
        v73 = &v69[v71];
        v74 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 32))(v72, v73, v74);
        *(_OWORD *)&v68[v70[6]] = *(_OWORD *)&v69[v70[6]];
        *(_OWORD *)&v68[v70[7]] = *(_OWORD *)&v69[v70[7]];
        *(_OWORD *)&v68[v70[8]] = *(_OWORD *)&v69[v70[8]];
        *(_OWORD *)&v68[v70[9]] = *(_OWORD *)&v69[v70[9]];
        v75 = v70[10];
        __dstb = &v68[v75];
        v76 = &v69[v75];
        v77 = sub_1BB871E24();
        v124 = *(_QWORD *)(v77 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v124 + 48))(v76, 1, v77))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(__dstb, v76, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v124 + 32))(__dstb, v76, v77);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v124 + 56))(__dstb, 0, 1, v77);
        }
        *(_QWORD *)&v68[v70[11]] = *(_QWORD *)&v69[v70[11]];
        *(_QWORD *)&v68[v70[12]] = *(_QWORD *)&v69[v70[12]];
        *(_QWORD *)&v68[v70[13]] = *(_QWORD *)&v69[v70[13]];
        *(_QWORD *)&v68[v70[14]] = *(_QWORD *)&v69[v70[14]];
        *(_QWORD *)&v68[v70[15]] = *(_QWORD *)&v69[v70[15]];
        *(_QWORD *)&v68[v70[16]] = *(_QWORD *)&v69[v70[16]];
        *(_QWORD *)&v68[v70[17]] = *(_QWORD *)&v69[v70[17]];
        swift_storeEnumTagMultiPayload();
        v6 = v136;
        goto LABEL_51;
      }
      if (v26 == 5)
      {
        v137 = v6;
        v79 = v9[1];
        *v8 = *v9;
        v8[1] = v79;
        v8[2] = v9[2];
        *((_WORD *)v8 + 24) = *((_WORD *)v9 + 24);
        *(_OWORD *)((char *)v8 + 56) = *(_OWORD *)((char *)v9 + 56);
        *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
        *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
        *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
        *(_OWORD *)((char *)v8 + 120) = *(_OWORD *)((char *)v9 + 120);
        *(_OWORD *)((char *)v8 + 136) = *(_OWORD *)((char *)v9 + 136);
        *((_QWORD *)v8 + 19) = *((_QWORD *)v9 + 19);
        v8[10] = v9[10];
        v122 = (int *)type metadata accessor for FormatPackage();
        v80 = v122[23];
        v81 = (char *)v8 + v80;
        v82 = (char *)v9 + v80;
        *(_OWORD *)((char *)v8 + v80) = *(_OWORD *)((char *)v9 + v80);
        v125 = (int *)type metadata accessor for FormatCompilerOptions(0);
        v83 = v125[6];
        v84 = &v81[v83];
        __dstc = v82;
        v85 = &v82[v83];
        v86 = *(_OWORD *)&v82[v83 + 16];
        *(_OWORD *)v84 = *(_OWORD *)&v82[v83];
        *((_OWORD *)v84 + 1) = v86;
        *((_OWORD *)v84 + 2) = *(_OWORD *)&v82[v83 + 32];
        v87 = *(int *)(type metadata accessor for FormatCompilerOptions.Newsroom(0) + 20);
        v88 = &v84[v87];
        v89 = &v85[v87];
        v90 = sub_1BB86E710();
        v91 = *(_QWORD *)(v90 - 8);
        v127 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
        v120 = v91;
        if (v127(v89, 1, v90))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
        }
        v97 = v125[7];
        v98 = &v81[v97];
        v99 = &__dstc[v97];
        v6 = v137;
        if (v127(&__dstc[v97], 1, v90))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v98, v99, v90);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v98, 0, 1, v90);
        }
        *(_QWORD *)&v81[v125[8]] = *(_QWORD *)&__dstc[v125[8]];
        v109 = v122[24];
        v110 = (char *)v8 + v109;
        v111 = (char *)v9 + v109;
        v112 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
        v113 = v122[25];
        v114 = (char *)v8 + v113;
        v115 = (char *)v9 + v113;
        if (v127((char *)v9 + v113, 1, v90))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
          memcpy(v114, v115, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v114, v115, v90);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v114, 0, 1, v90);
        }
      }
      else
      {
        if (v26)
        {
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
LABEL_51:
          sub_1BAF05E00();
          *(_QWORD *)((char *)v8 + *(int *)(v117 + 48)) = *(_QWORD *)((char *)v9 + *(int *)(v117 + 48));
          goto LABEL_52;
        }
        v133 = v6;
        *v8 = *v9;
        v27 = (int *)type metadata accessor for FormatContent(0);
        v28 = v27[5];
        v29 = (char *)v8 + v28;
        v30 = (char *)v9 + v28;
        v31 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        *(_OWORD *)((char *)v8 + v27[6]) = *(_OWORD *)((char *)v9 + v27[6]);
        *(_OWORD *)((char *)v8 + v27[7]) = *(_OWORD *)((char *)v9 + v27[7]);
        *(_OWORD *)((char *)v8 + v27[8]) = *(_OWORD *)((char *)v9 + v27[8]);
        *(_OWORD *)((char *)v8 + v27[9]) = *(_OWORD *)((char *)v9 + v27[9]);
        v32 = v27[10];
        v33 = (char *)v8 + v32;
        v34 = (char *)v9 + v32;
        v35 = sub_1BB871E24();
        v36 = *(_QWORD *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C20E0, (void (*)(uint64_t))MEMORY[0x1E0D52E40]);
          memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
        }
        v6 = v133;
        *(_QWORD *)((char *)v8 + v27[11]) = *(_QWORD *)((char *)v9 + v27[11]);
        *(_QWORD *)((char *)v8 + v27[12]) = *(_QWORD *)((char *)v9 + v27[12]);
        *(_QWORD *)((char *)v8 + v27[13]) = *(_QWORD *)((char *)v9 + v27[13]);
        *(_QWORD *)((char *)v8 + v27[14]) = *(_QWORD *)((char *)v9 + v27[14]);
        *(_QWORD *)((char *)v8 + v27[15]) = *(_QWORD *)((char *)v9 + v27[15]);
        *(_QWORD *)((char *)v8 + v27[16]) = *(_QWORD *)((char *)v9 + v27[16]);
        *(_QWORD *)((char *)v8 + v27[17]) = *(_QWORD *)((char *)v9 + v27[17]);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_51;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BAF0C6D0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatCompilerResultEntry();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1BAF0C74C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v8;

  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = a2;
  sub_1BAF1E5D8(a1, (uint64_t)sub_1BAF1E574, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  if (v2)
    swift_bridgeObjectRelease();
  return v6;
}

uint64_t FeedClusteringOptions.min.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FeedClusteringOptions.minDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 20), a1, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
}

uint64_t type metadata accessor for FeedClusteringOptions(uint64_t a1)
{
  return sub_1BA4B8364(a1, qword_1ED3A0DB8);
}

uint64_t FeedClusteringOptions.max.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 24));
}

uint64_t FeedClusteringOptions.maxDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 28), a1, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
}

uint64_t FeedClusteringOptions.bundleArticleQuotas.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 32), a1, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
}

uint64_t FeedClusteringOptions.maxInaccessibleHeadlines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 36));
}

uint64_t FeedClusteringOptions.maxInaccessibleHeadlinesDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAF0CDD4(type metadata accessor for FeedClusteringOptions, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848], a1);
}

uint64_t FeedClusteringOptions.maxEvergreenHeadlines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 44));
}

uint64_t FeedClusteringOptions.maxEvergreenHeadlinesDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 48), a1, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
}

uint64_t FeedClusteringOptions.maxPublisherOccurrences.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 52));
}

uint64_t FeedClusteringOptions.maxPublisherOccurrencesDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAF0CEFC(type metadata accessor for FeedClusteringOptions, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848], a1);
}

uint64_t FeedClusteringOptions.maxAIGeneratedContent.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 60));
}

uint64_t FeedClusteringOptions.maxAIGeneratedContentDepthTransform.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 64), a1, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
}

uint64_t FeedClusteringOptions.topicDiversity.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 68));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  return sub_1BAF0CA80(v4, v5, v6, v7, v8);
}

uint64_t sub_1BAF0CA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result;

  if (a5 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t FeedClusteringOptions.minTagScoreRelativeToBaseline.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedClusteringOptions(0) + 72));
}

uint64_t FeedClusteringOptions.splittingConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringOptions(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 76), a1, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
}

uint64_t FeedClusteringOptions.init(min:minDepthTransform:max:maxDepthTransform:bundleArticleQuotas:maxInaccessibleHeadlines:maxInaccessibleHeadlinesDepthTransform:maxEvergreenHeadlines:maxEvergreenHeadlinesDepthTransform:maxPublisherOccurrences:maxPublisherOccurrencesDepthTransform:maxAIGeneratedContent:maxAIGeneratedContentDepthTransform:topicDiversity:minTagScoreRelativeToBaseline:splittingConfiguration:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,__int128 *a21,uint64_t a22,char a23,uint64_t a24)
{
  int *v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v41;
  __int128 v42;
  __int128 v43;

  v42 = a21[1];
  v43 = *a21;
  v41 = *((_QWORD *)a21 + 4);
  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  v29 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v30 = (void (*)(uint64_t))MEMORY[0x1E0DDA848];
  sub_1BA5D5518(a3, a9 + v29[5], (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
  v31 = a9 + v29[6];
  *(_QWORD *)v31 = a4;
  *(_BYTE *)(v31 + 8) = a5 & 1;
  sub_1BA5D5518(a6, a9 + v29[7], (unint64_t *)&qword_1ED3A2500, v30);
  sub_1BA5D5518(a7, a9 + v29[8], (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
  v32 = a9 + v29[9];
  *(_QWORD *)v32 = a8;
  *(_BYTE *)(v32 + 8) = a10 & 1;
  sub_1BA5D5518(a11, a9 + v29[10], (unint64_t *)&qword_1ED3A2500, v30);
  v33 = a9 + v29[11];
  *(_QWORD *)v33 = a12;
  *(_BYTE *)(v33 + 8) = a13 & 1;
  sub_1BA5D5518(a14, a9 + v29[12], (unint64_t *)&qword_1ED3A2500, v30);
  v34 = a9 + v29[13];
  *(_QWORD *)v34 = a15;
  *(_BYTE *)(v34 + 8) = a16 & 1;
  sub_1BA5D5518(a17, a9 + v29[14], (unint64_t *)&qword_1ED3A2500, v30);
  v35 = a9 + v29[15];
  *(_QWORD *)v35 = a18;
  *(_BYTE *)(v35 + 8) = a19 & 1;
  sub_1BA5D5518(a20, a9 + v29[16], (unint64_t *)&qword_1ED3A2500, v30);
  v36 = a9 + v29[17];
  *(_OWORD *)v36 = v43;
  *(_OWORD *)(v36 + 16) = v42;
  *(_QWORD *)(v36 + 32) = v41;
  v37 = a9 + v29[18];
  *(_QWORD *)v37 = a22;
  *(_BYTE *)(v37 + 8) = a23 & 1;
  return sub_1BA5D5518(a24, a9 + v29[19], &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
}

uint64_t FeedClusteringRequest.scoredItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.configuration.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FeedClusteringRequest.scores.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.limitUnpaidArticles.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FeedClusteringRequest.hardPaywallBundleArticleLimit.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FeedClusteringRequest.autoFavoritesTopicClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAF0CDD4(type metadata accessor for FeedClusteringRequest, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions, a1);
}

uint64_t sub_1BAF0CDD4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return sub_1BA57B488(v4 + *(int *)(v8 + 40), a4, a2, a3);
}

uint64_t type metadata accessor for FeedClusteringRequest(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A2880);
}

uint64_t FeedClusteringRequest.channelClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringRequest(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 44), a1, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
}

uint64_t FeedClusteringRequest.customClusteringOptions.getter()
{
  type metadata accessor for FeedClusteringRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.generalTopicClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedClusteringRequest(0);
  return sub_1BA57B488(v1 + *(int *)(v3 + 52), a1, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
}

uint64_t FeedClusteringRequest.moreForYouClusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAF0CEFC(type metadata accessor for FeedClusteringRequest, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions, a1);
}

uint64_t sub_1BAF0CEFC@<X0>(uint64_t (*a1)(_QWORD)@<X0>, unint64_t *a2@<X1>, void (*a3)(uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;

  v8 = a1(0);
  return sub_1BA57B488(v4 + *(int *)(v8 + 56), a4, a2, a3);
}

uint64_t FeedClusteringRequest.ignoreTagIDs.getter()
{
  type metadata accessor for FeedClusteringRequest(0);
  return swift_bridgeObjectRetain();
}

uint64_t FeedClusteringRequest.clusterOrderingMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedClusteringRequest(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 64));
  return result;
}

uint64_t FeedClusteringRequest.considerRejectedHeadlinesInMoreForYou.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 68));
}

double FeedClusteringRequest.minChannelGroupRatio.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 72));
}

double FeedClusteringRequest.minTopicGroupRatio.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 76));
}

uint64_t FeedClusteringRequest.keepOverflowTopicHeadlinesInInventory.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeedClusteringRequest(0) + 80));
}

uint64_t FeedClusteringRequest.channelClusteringOption.getter@<X0>(_WORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedClusteringRequest(0);
  *a1 = *(_WORD *)(v1 + *(int *)(result + 84));
  return result;
}

uint64_t FeedClusteringRequest.init(scoredItems:configuration:limitUnpaidArticles:hardPaywallBundleArticleLimit:autoFavoritesTopicClusteringOptions:channelClusteringOptions:customChannelClusteringOptions:customTopicClusteringOptions:generalTopicClusteringOptions:moreForYouClusteringOptions:ignoreTagIDs:clusterOrderingMode:considerRejectedHeadlinesInMoreForYou:minChannelGroupRatio:minTopicGroupRatio:keepOverflowTopicHeadlinesInInventory:channelClusteringOption:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, unint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, char *a15, char a16, char a17, __int16 *a18)
{
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  id *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  double v40;
  double v41;
  id v42;
  id v43;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  char v46;
  unint64_t v47;
  uint64_t v48;
  _BOOL8 v49;
  uint64_t v50;
  char v51;
  unint64_t v52;
  char v53;
  unint64_t v54;
  char v55;
  char v56;
  void *v57;
  uint64_t *v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  int *v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t result;
  _QWORD *v67;
  char v73;
  __int16 v74;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  uint64_t v80;

  v21 = a9;
  v73 = *a15;
  v74 = *a18;
  *a9 = a1;
  v22 = *(_QWORD *)(a1 + 16);
  if (!v22)
  {
    a9[1] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    goto LABEL_28;
  }
  v80 = MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BB873DD4();
  v23 = 32;
  do
  {
    swift_unknownObjectRetain();
    sub_1BB873DB0();
    sub_1BB873DE0();
    sub_1BB873DEC();
    sub_1BB873DBC();
    v23 += 24;
    --v22;
  }
  while (v22);
  v24 = *(_QWORD *)(a1 + 16);
  v21[1] = v80;
  v77 = v24;
  if (!v24)
  {
LABEL_28:
    v26 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_29:
    swift_bridgeObjectRelease();
    v21[2] = a2;
    v21[3] = v26;
    *((_BYTE *)v21 + 32) = a3 & 1;
    v21[5] = a4;
    v62 = (int *)type metadata accessor for FeedClusteringRequest(0);
    sub_1BA57B488(a5, (uint64_t)v21 + v62[10], &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    sub_1BA57B488(a6, (uint64_t)v21 + v62[11], &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    v63 = a7;
    swift_unknownObjectRetain();
    if (!a7)
      v63 = sub_1BA8F3B04(MEMORY[0x1E0DEE9D8]);
    v64 = a8;
    if (!a8)
      v64 = sub_1BA8F3B04(MEMORY[0x1E0DEE9D8]);
    v65 = sub_1BAF0C74C(v64, v63);
    swift_unknownObjectRelease();
    sub_1BAF0D93C(a6);
    sub_1BAF0D93C(a5);
    *(_QWORD *)((char *)v21 + v62[12]) = v65;
    sub_1BA5D5518(a12, (uint64_t)v21 + v62[13], &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    result = sub_1BA5D5518(a13, (uint64_t)v21 + v62[14], &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    *(_QWORD *)((char *)v21 + v62[15]) = a14;
    *((_BYTE *)v21 + v62[16]) = v73;
    *((_BYTE *)v21 + v62[17]) = a16 & 1;
    *(double *)((char *)v21 + v62[18]) = a10;
    *(double *)((char *)v21 + v62[19]) = a11;
    *((_BYTE *)v21 + v62[20]) = a17 & 1;
    *(_WORD *)((char *)v21 + v62[21]) = v74;
    return result;
  }
  v67 = v21;
  swift_bridgeObjectRetain();
  v25 = 0;
  v26 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v27 = (id *)(a1 + 48);
  while (1)
  {
    v29 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    v78 = v25;
    v31 = *(v27 - 2);
    v30 = *(v27 - 1);
    v32 = *v27;
    swift_unknownObjectRetain();
    v33 = v30;
    v34 = v32;
    swift_unknownObjectRetain();
    v35 = v33;
    v36 = objc_msgSend(v31, sel_itemID);
    v37 = sub_1BB8729A0();
    v39 = v38;

    objc_msgSend(v35, sel_sortingScore);
    v41 = v40;
    v79 = v34;

    swift_unknownObjectRelease();
    v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v41);
    if (v42)
    {
      v43 = v42;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v45 = v37;
      v47 = sub_1BA6E35A8(v37, v39);
      v48 = v26[2];
      v49 = (v46 & 1) == 0;
      v50 = v48 + v49;
      if (__OFADD__(v48, v49))
        goto LABEL_35;
      v51 = v46;
      if (v26[3] >= v50)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C7160();
      }
      else
      {
        sub_1BB4B5D90(v50, isUniquelyReferenced_nonNull_native);
        v52 = sub_1BA6E35A8(v45, v39);
        if ((v51 & 1) != (v53 & 1))
          goto LABEL_37;
        v47 = v52;
      }
      if ((v51 & 1) != 0)
      {
        v28 = v26[7];

        *(_QWORD *)(v28 + 8 * v47) = v43;
      }
      else
      {
        v26[(v47 >> 6) + 8] |= 1 << v47;
        v58 = (uint64_t *)(v26[6] + 16 * v47);
        *v58 = v45;
        v58[1] = v39;
        *(_QWORD *)(v26[7] + 8 * v47) = v43;
        v59 = v26[2];
        v60 = __OFADD__(v59, 1);
        v61 = v59 + 1;
        if (v60)
          goto LABEL_36;
        v26[2] = v61;
        swift_bridgeObjectRetain();
      }

      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      v54 = sub_1BA6E35A8(v37, v39);
      v56 = v55;
      swift_bridgeObjectRelease();
      if ((v56 & 1) != 0)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1BB4C7160();
        swift_bridgeObjectRelease();
        v57 = *(void **)(v26[7] + 8 * v54);
        sub_1BA81C0AC(v54, (uint64_t)v26);

        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    v27 += 3;
    v25 = v78 + 1;
    if (v29 == v77)
    {
      swift_bridgeObjectRelease();
      v21 = v67;
      goto LABEL_29;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t FeedClusteringRequest.init(scoredHeadlines:configuration:limitUnpaidArticles:hardPaywallBundleArticleLimit:autoFavoritesTopicClusteringOptions:channelClusteringOptions:customChannelClusteringOptions:generalTopicClusteringOptions:moreForYouClusteringOptions:ignoreTagIDs:clusterOrderingMode:considerRejectedHeadlinesInMoreForYou:minChannelGroupRatio:minTopicGroupRatio:keepOverflowTopicHeadlinesInInventory:channelClusteringOption:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, _QWORD *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, unsigned __int8 *a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int16 *a17)
{
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  int v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  uint64_t v56;
  int v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int16 v65;
  char v66;
  uint64_t v67;

  v60 = a2;
  v61 = a4;
  v57 = a3;
  v58 = a9;
  v54 = a16;
  v55 = a15;
  v56 = a13;
  v59 = a12;
  sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  MEMORY[0x1E0C80A78](v24);
  v53 = (uint64_t)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v26);
  v52 = (uint64_t)&v48 - v27;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v48 - v29;
  MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v48 - v32;
  v34 = *a14;
  v50 = *a17;
  v51 = v34;
  v35 = *(_QWORD *)(a1 + 16);
  v62 = a7;
  v63 = a5;
  if (v35)
  {
    v48 = a8;
    v49 = a6;
    v67 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A4C0(0, v35, 0);
    v36 = 0;
    v37 = v67;
    do
    {
      v64 = *(_OWORD *)(a1 + 16 * v36 + 32);
      v67 = v37;
      v38 = *(_QWORD *)(v37 + 16);
      v39 = *(_QWORD *)(v37 + 24);
      swift_unknownObjectRetain();
      v40 = *((id *)&v64 + 1);
      if (v38 >= v39 >> 1)
      {
        sub_1BAC7A4C0(v39 > 1, v38 + 1, 1);
        v37 = v67;
      }
      ++v36;
      *(_QWORD *)(v37 + 16) = v38 + 1;
      v41 = v37 + 24 * v38;
      *(_OWORD *)(v41 + 32) = v64;
      *(_QWORD *)(v41 + 48) = 0;
    }
    while (v35 != v36);
    swift_bridgeObjectRelease();
    a5 = v63;
    a8 = v48;
    a6 = v49;
  }
  else
  {
    swift_bridgeObjectRelease();
    v37 = MEMORY[0x1E0DEE9D8];
  }
  v42 = a5;
  v43 = (uint64_t)v33;
  sub_1BA57B488(v42, (uint64_t)v33, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  sub_1BA57B488(a6, (uint64_t)v30, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  v44 = v52;
  sub_1BA57B488(a8, v52, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  v45 = v59;
  v46 = v53;
  sub_1BA57B488(v59, v53, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  v66 = v51;
  v65 = v50;
  FeedClusteringRequest.init(scoredItems:configuration:limitUnpaidArticles:hardPaywallBundleArticleLimit:autoFavoritesTopicClusteringOptions:channelClusteringOptions:customChannelClusteringOptions:customTopicClusteringOptions:generalTopicClusteringOptions:moreForYouClusteringOptions:ignoreTagIDs:clusterOrderingMode:considerRejectedHeadlinesInMoreForYou:minChannelGroupRatio:minTopicGroupRatio:keepOverflowTopicHeadlinesInInventory:channelClusteringOption:)(v37, v60, v57 & 1, v61, v43, (uint64_t)v30, v62, 0, v58, a10, a11, v44, v46, v56, &v66, v55 & 1, v54 & 1, &v65);
  sub_1BAF0D93C(v45);
  sub_1BAF0D93C(a8);
  sub_1BAF0D93C(a6);
  return sub_1BAF0D93C(v63);
}

uint64_t sub_1BAF0D93C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BAF0D988(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v10 = sub_1BB874608();
        result = swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8)
            goto LABEL_5;
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(a2 + 48);
          v13 = (_OWORD *)(v12 + 16 * v3);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1)
            *v13 = *v14;
          v15 = *(_QWORD *)(a2 + 56);
          v16 = (_OWORD *)(v15 + 32 * v3);
          v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (v3 = v6, v16 >= v17 + 2))
          {
            v9 = v17[1];
            *v16 = *v17;
            v16[1] = v9;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1BAF0DB5C(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, unint64_t, uint64_t);
  unint64_t v34;
  uint64_t v35;

  v4 = sub_1BB873E58();
  v35 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1BB873BD0();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v34 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v35 + 72);
      v33 = *(void (**)(char *, unint64_t, uint64_t))(v35 + 16);
      v13 = v10;
      do
      {
        v14 = v7;
        v15 = v12;
        v16 = v12 * v9;
        v17 = v13;
        v33(v6, *(_QWORD *)(a2 + 48) + v12 * v9, v4);
        v18 = sub_1BB87285C();
        (*(void (**)(char *, uint64_t))(v35 + 8))(v6, v4);
        v13 = v17;
        v19 = v18 & v17;
        if (a1 >= (uint64_t)v34)
        {
          if (v19 >= v34 && a1 >= (uint64_t)v19)
          {
LABEL_16:
            v7 = v14;
            if (v15 * a1 < v16
              || (v12 = v15, *(_QWORD *)(a2 + 48) + v15 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v16 + v15)))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_21:
              v12 = v15;
              v13 = v17;
            }
            else if (v15 * a1 != v16)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_21;
            }
            v22 = *(_QWORD *)(a2 + 56);
            v23 = (_OWORD *)(v22 + 32 * a1);
            v24 = (_OWORD *)(v22 + 32 * v9);
            if (a1 != v9 || (a1 = v9, v23 >= v24 + 2))
            {
              v25 = v24[1];
              *v23 = *v24;
              v23[1] = v25;
              a1 = v9;
            }
            goto LABEL_5;
          }
        }
        else if (v19 >= v34 || a1 >= (uint64_t)v19)
        {
          goto LABEL_16;
        }
        v7 = v14;
        v12 = v15;
LABEL_5:
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v27 = *v26;
    v28 = (-1 << a1) - 1;
  }
  else
  {
    v26 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v28 = *v26;
    v27 = (-1 << a1) - 1;
  }
  *v26 = v28 & v27;
  v29 = *(_QWORD *)(a2 + 16);
  v30 = __OFSUB__(v29, 1);
  v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BAF0DDE0(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
}

unint64_t sub_1BAF0DDEC(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v9 = sub_1BB874608();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          v15 = (_OWORD *)(v14 + 16 * v3);
          v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (v3 = v6, v15 >= v16 + 1))
          {
            *v15 = *v16;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0DFC0(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatNodeStateData.Data);
}

void sub_1BAF0DFCC(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, unint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;

  v4 = sub_1BB86C67C();
  v30 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = (a1 + 1) & ~v7;
  if (((1 << v8) & *(_QWORD *)(a2 + 64 + 8 * (v8 >> 6))) != 0)
  {
    v9 = ~v7;
    v31 = a2 + 64;
    v10 = sub_1BB873BD0();
    v11 = v31;
    if ((*(_QWORD *)(v31 + 8 * (v8 >> 6)) & (1 << v8)) != 0)
    {
      v12 = (v10 + 1) & v9;
      v13 = *(_QWORD *)(v30 + 72);
      v29 = *(void (**)(char *, unint64_t, uint64_t))(v30 + 16);
      do
      {
        v14 = v13 * v8;
        v29(v6, *(_QWORD *)(a2 + 48) + v13 * v8, v4);
        sub_1BA56BF28();
        v15 = sub_1BB87285C();
        (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
        v16 = v15 & v9;
        if (a1 >= (uint64_t)v12)
        {
          if (v16 >= v12 && a1 >= (uint64_t)v16)
          {
LABEL_17:
            if (v13 * a1 < v14
              || *(_QWORD *)(a2 + 48) + v13 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v14 + v13))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v13 * a1 != v14)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * a1);
            v21 = (_QWORD *)(v19 + 8 * v8);
            v11 = v31;
            if (a1 != v8 || (a1 = v8, v20 >= v21 + 1))
            {
              *v20 = *v21;
              a1 = v8;
            }
            goto LABEL_5;
          }
        }
        else if (v16 >= v12 || a1 >= (uint64_t)v16)
        {
          goto LABEL_17;
        }
        v11 = v31;
LABEL_5:
        v8 = (v8 + 1) & v9;
      }
      while (((*(_QWORD *)(v11 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
    }
    v22 = (uint64_t *)(v11 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BAF0E230(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v9 = sub_1BB874608();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + 104 * v3;
          v15 = (const void *)(v14 + 104 * v6);
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 104))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x68uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0E410(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0870]);
}

unint64_t sub_1BAF0E41C(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
}

unint64_t sub_1BAF0E428(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataBindingSlotResult);
}

void sub_1BAF0E434(int64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31[72];

  v29 = type metadata accessor for WebEmbedDatastoreCacheKey();
  v4 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a2 + 64;
  v8 = -1 << *(_BYTE *)(a2 + 32);
  v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(_QWORD *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    v10 = ~v8;
    v11 = sub_1BB873BD0();
    if ((*(_QWORD *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      v30 = (v11 + 1) & v10;
      v12 = *(_QWORD *)(v4 + 72);
      v13 = v10;
      do
      {
        v14 = v12;
        v15 = v12 * v9;
        v16 = v13;
        sub_1BA4C2DD8(*(_QWORD *)(a2 + 48) + v12 * v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        sub_1BB8745CC();
        sub_1BB41AD48((uint64_t)v31);
        v17 = sub_1BB874608();
        sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreCacheKey);
        v13 = v16;
        v18 = v17 & v16;
        if (a1 >= (uint64_t)v30)
        {
          if (v18 < v30)
          {
            v12 = v14;
          }
          else
          {
            v12 = v14;
            if (a1 >= (uint64_t)v18)
              goto LABEL_12;
          }
        }
        else
        {
          v12 = v14;
          if (v18 >= v30 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            if (v12 * a1 < v15
              || *(_QWORD *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(_QWORD *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
LABEL_17:
              v13 = v16;
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
              goto LABEL_17;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_QWORD *)(v19 + 8 * a1);
            v21 = (_QWORD *)(v19 + 8 * v9);
            if (a1 != v9 || (a1 = v9, v20 >= v21 + 1))
            {
              *v20 = *v21;
              a1 = v9;
            }
          }
        }
        v9 = (v9 + 1) & v13;
      }
      while (((*(_QWORD *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
    }
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v23 = *v22;
    v24 = (-1 << a1) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v7 + 8 * ((unint64_t)a1 >> 6));
    v24 = *v22;
    v23 = (-1 << a1) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1BAF0E6C0(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  unint64_t v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BYTE v28[40];

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BAF1E538(*(_QWORD *)(a2 + 48) + 40 * v6, (uint64_t)v28);
        v10 = sub_1BB873C30();
        result = sub_1BA9ECE7C((uint64_t)v28);
        v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = *(_QWORD *)(a2 + 48);
            v15 = v14 + 40 * v3;
            v16 = (__int128 *)(v14 + 40 * v6);
            if (v3 != v6 || v15 >= (unint64_t)v16 + 40)
            {
              v17 = *v16;
              v18 = v16[1];
              *(_QWORD *)(v15 + 32) = *((_QWORD *)v16 + 4);
              *(_OWORD *)v15 = v17;
              *(_OWORD *)(v15 + 16) = v18;
            }
            v19 = *(_QWORD *)(a2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0E888(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v22;
  uint64_t v23;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1BB8745C0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            v14 = (_QWORD *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1)
              *v14 = *v10;
            v15 = *(_QWORD *)(a2 + 56);
            v16 = (_QWORD *)(v15 + 8 * v3);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v3 != v6 || (v3 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v19 = *v18;
    v20 = (-1 << v3) - 1;
  }
  else
  {
    v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    v20 = *v18;
    v19 = (-1 << result) - 1;
  }
  *v18 = v20 & v19;
  v21 = *(_QWORD *)(a2 + 16);
  v22 = __OFSUB__(v21, 1);
  v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0EA1C(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
}

unint64_t sub_1BAF0EA28(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilingPackage);
}

unint64_t sub_1BAF0EA34(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
}

unint64_t sub_1BAF0EA40(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  int64_t v15;
  int64_t v16;
  unint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      while (1)
      {
        sub_1BB8745CC();
        sub_1BB872A90();
        swift_bridgeObjectRelease();
        result = sub_1BB874608();
        v9 = result & v7;
        if (v3 >= (uint64_t)v8)
          break;
        if (v9 < v8)
          goto LABEL_11;
LABEL_12:
        v10 = *(_QWORD *)(a2 + 48);
        v11 = (_BYTE *)(v10 + v3);
        v12 = (_BYTE *)(v10 + v6);
        if (v3 != v6 || v11 >= v12 + 1)
          *v11 = *v12;
        v13 = *(_QWORD *)(a2 + 56);
        v14 = *(_QWORD *)(*(_QWORD *)(sub_1BB86C67C() - 8) + 72);
        v15 = v14 * v3;
        result = v13 + v14 * v3;
        v16 = v14 * v6;
        v17 = v13 + v14 * v6 + v14;
        if (v15 < v16 || result >= v17)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v3 = v6;
          if (v15 == v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          goto LABEL_21;
      }
      if (v9 < v8)
        goto LABEL_6;
LABEL_11:
      if (v3 < (uint64_t)v9)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0EC58(unint64_t a1, uint64_t a2)
{
  return sub_1BAF0EC64(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
}

unint64_t sub_1BAF0EC64(unint64_t result, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;

  v4 = result;
  v5 = a2 + 64;
  v6 = -1 << *(_BYTE *)(a2 + 32);
  v7 = (result + 1) & ~v6;
  if (((1 << v7) & *(_QWORD *)(a2 + 64 + 8 * (v7 >> 6))) != 0)
  {
    v9 = ~v6;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v5 + 8 * (v7 >> 6)) & (1 << v7)) != 0)
    {
      v10 = (result + 1) & v9;
      while (1)
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v11 = sub_1BB874608();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v9;
        if (v4 >= (uint64_t)v10)
          break;
        if (v12 < v10)
          goto LABEL_11;
LABEL_12:
        v13 = *(_QWORD *)(a2 + 48);
        v14 = (_OWORD *)(v13 + 16 * v4);
        v15 = (_OWORD *)(v13 + 16 * v7);
        if (v4 != v7 || v14 >= v15 + 1)
          *v14 = *v15;
        v16 = *(_QWORD *)(a2 + 56);
        v17 = *(_QWORD *)(*(_QWORD *)(a3(0) - 8) + 72);
        v18 = v17 * v4;
        result = v16 + v17 * v4;
        v19 = v17 * v7;
        v20 = v16 + v17 * v7 + v17;
        if (v18 < v19 || result >= v20)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v4 = v7;
          if (v18 == v19)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v4 = v7;
LABEL_6:
        v7 = (v7 + 1) & v9;
        if (((*(_QWORD *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
          goto LABEL_21;
      }
      if (v12 < v10)
        goto LABEL_6;
LABEL_11:
      if (v4 < (uint64_t)v12)
        goto LABEL_6;
      goto LABEL_12;
    }
LABEL_21:
    v22 = (uint64_t *)(v5 + 8 * ((unint64_t)v4 >> 6));
    v23 = *v22;
    v24 = (-1 << v4) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v5 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(a2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0EE6C(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  uint64_t v14;
  const void *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v9 = sub_1BB874608();
        result = swift_bridgeObjectRelease();
        v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8)
            goto LABEL_5;
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          v11 = *(_QWORD *)(a2 + 48);
          v12 = (_OWORD *)(v11 + 16 * v3);
          v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1)
            *v12 = *v13;
          v14 = *(_QWORD *)(a2 + 56);
          result = v14 + (v3 << 7);
          v15 = (const void *)(v14 + (v6 << 7));
          if (v3 != v6 || (v3 = v6, result >= (unint64_t)v15 + 128))
          {
            result = (unint64_t)memmove((void *)result, v15, 0x80uLL);
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v17 = *v16;
    v18 = (-1 << v3) - 1;
  }
  else
  {
    v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    v18 = *v16;
    v17 = (-1 << result) - 1;
  }
  *v16 = v18 & v17;
  v19 = *(_QWORD *)(a2 + 16);
  v20 = __OFSUB__(v19, 1);
  v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v21;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0F040(unint64_t result, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;

  v2 = a2;
  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      v28 = v4;
      do
      {
        v10 = 24 * v6;
        v11 = v2;
        v12 = v8;
        sub_1BB8745CC();
        sub_1BB8745D8();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v13 = sub_1BB874608();
        result = sub_1BAA49EA8();
        v8 = v12;
        v14 = v13 & v7;
        if (v3 >= (uint64_t)v12)
        {
          if (v14 < v12)
          {
            v4 = v28;
            v2 = v11;
          }
          else
          {
            v4 = v28;
            v2 = v11;
            if (v3 >= (uint64_t)v14)
              goto LABEL_12;
          }
        }
        else
        {
          v4 = v28;
          v2 = v11;
          if (v14 >= v8 || v3 >= (uint64_t)v14)
          {
LABEL_12:
            v15 = *(_QWORD *)(v2 + 48);
            v16 = v15 + 24 * v3;
            v17 = (__int128 *)(v15 + v10);
            if (24 * v3 < v10 || v16 >= (unint64_t)v17 + 24 || v3 != v6)
            {
              v18 = *v17;
              *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
              *(_OWORD *)v16 = v18;
            }
            v19 = *(_QWORD *)(v2 + 56);
            v20 = (_OWORD *)(v19 + 32 * v3);
            v21 = (_OWORD *)(v19 + 32 * v6);
            if (v3 != v6 || (v3 = v6, v20 >= v21 + 2))
            {
              v9 = v21[1];
              *v20 = *v21;
              v20[1] = v9;
              v3 = v6;
            }
          }
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v23 = *v22;
    v24 = (-1 << v3) - 1;
  }
  else
  {
    v22 = (uint64_t *)(v4 + 8 * (result >> 6));
    v24 = *v22;
    v23 = (-1 << result) - 1;
  }
  *v22 = v24 & v23;
  v25 = *(_QWORD *)(v2 + 16);
  v26 = __OFSUB__(v25, 1);
  v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v2 + 16) = v27;
    ++*(_DWORD *)(v2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0F290(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  uint64_t v16;
  unint64_t v17;
  __int128 *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        sub_1BB8745CC();
        swift_bridgeObjectRetain();
        sub_1BB872A90();
        v11 = sub_1BB874608();
        result = swift_bridgeObjectRelease();
        v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8)
            goto LABEL_5;
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          v13 = *(_QWORD *)(a2 + 48);
          v14 = (_OWORD *)(v13 + 16 * v3);
          v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1)
            *v14 = *v15;
          v16 = *(_QWORD *)(a2 + 56);
          v17 = v16 + 40 * v3;
          v18 = (__int128 *)(v16 + 40 * v6);
          if (v3 != v6 || (v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            v9 = *v18;
            v10 = v18[1];
            *(_QWORD *)(v17 + 32) = *((_QWORD *)v18 + 4);
            *(_OWORD *)v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            v3 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v20 = *v19;
    v21 = (-1 << v3) - 1;
  }
  else
  {
    v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    v21 = *v19;
    v20 = (-1 << result) - 1;
  }
  *v19 = v21 & v20;
  v22 = *(_QWORD *)(a2 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1BAF0F478(unint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;

  v3 = result;
  v4 = a2 + 64;
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    result = sub_1BB873BD0();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v8 = (result + 1) & v7;
      do
      {
        v9 = *(_QWORD *)(a2 + 48);
        v10 = (_QWORD *)(v9 + 8 * v6);
        result = sub_1BB8745C0();
        v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8 || v3 < (uint64_t)v11)
            goto LABEL_6;
        }
        else if (v11 < v8 && v3 < (uint64_t)v11)
        {
          goto LABEL_6;
        }
        v14 = (_QWORD *)(v9 + 8 * v3);
        if (v3 != v6 || v14 >= v10 + 1)
          *v14 = *v10;
        v15 = *(_QWORD *)(a2 + 56);
        result = v15 + 16 * v3;
        if (v3 < (uint64_t)v6 || result >= v15 + 16 * v6 + 16)
        {
          result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          v16 = v3 == v6;
          v3 = v6;
          if (v16)
            goto LABEL_6;
          result = swift_arrayInitWithTakeBackToFront();
        }
        v3 = v6;
LABEL_6:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    v18 = *v17;
    v19 = (-1 << v3) - 1;
  }
  else
  {
    v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    v19 = *v17;
    v18 = (-1 << result) - 1;
  }
  *v17 = v19 & v18;
  v20 = *(_QWORD *)(a2 + 16);
  v21 = __OFSUB__(v20, 1);
  v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedClusteringOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  __int128 v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v76;
  void (*v77)(char *, char *, uint64_t);
  unsigned int (*v78)(char *, uint64_t, uint64_t);

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = (void *)(a1 + v7);
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86D078();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v12(v9, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[6];
    v16 = a3[7];
    v17 = (char *)v4 + v15;
    v18 = (uint64_t)a2 + v15;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = *(_BYTE *)(v18 + 8);
    v19 = (char *)v4 + v16;
    v20 = (char *)a2 + v16;
    if (v12((char *)a2 + v16, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v19, v20, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v19, 0, 1, v10);
    }
    v22 = a3[8];
    v23 = (_QWORD *)((char *)v4 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v28 = v24[1];
      *v23 = *v24;
      v23[1] = v28;
      v29 = *(int *)(v25 + 24);
      v78 = v12;
      v30 = (char *)v24 + v29;
      v76 = (char *)v23 + v29;
      v77 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      swift_bridgeObjectRetain();
      v31 = v30;
      v12 = v78;
      v77(v76, v31, v10);
      *(_QWORD *)((char *)v23 + *(int *)(v25 + 28)) = *(_QWORD *)((char *)v24 + *(int *)(v25 + 28));
      v32 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56);
      swift_bridgeObjectRetain();
      v32(v23, 0, 1, v25);
    }
    v33 = a3[9];
    v34 = a3[10];
    v35 = (char *)v4 + v33;
    v36 = (uint64_t)a2 + v33;
    *(_QWORD *)v35 = *(_QWORD *)v36;
    v35[8] = *(_BYTE *)(v36 + 8);
    v37 = (char *)v4 + v34;
    v38 = (char *)a2 + v34;
    if (v12((char *)a2 + v34, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v37, v38, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v37, 0, 1, v10);
    }
    v40 = a3[11];
    v41 = a3[12];
    v42 = (char *)v4 + v40;
    v43 = (uint64_t)a2 + v40;
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = *(_BYTE *)(v43 + 8);
    v44 = (char *)v4 + v41;
    v45 = (char *)a2 + v41;
    if (v12((char *)a2 + v41, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v44, v45, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v44, 0, 1, v10);
    }
    v47 = a3[13];
    v48 = a3[14];
    v49 = (char *)v4 + v47;
    v50 = (uint64_t)a2 + v47;
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = *(_BYTE *)(v50 + 8);
    v51 = (char *)v4 + v48;
    v52 = (char *)a2 + v48;
    if (v12((char *)a2 + v48, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v51, v52, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v51, 0, 1, v10);
    }
    v54 = a3[15];
    v55 = a3[16];
    v56 = (char *)v4 + v54;
    v57 = (uint64_t)a2 + v54;
    *(_QWORD *)v56 = *(_QWORD *)v57;
    v56[8] = *(_BYTE *)(v57 + 8);
    v58 = (char *)v4 + v55;
    v59 = (char *)a2 + v55;
    if (v12((char *)a2 + v55, 1, v10))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v58, v59, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v58, 0, 1, v10);
    }
    v61 = a3[17];
    v62 = (char *)v4 + v61;
    v63 = (uint64_t)a2 + v61;
    v64 = *(_QWORD *)(v63 + 32);
    if (v64 == 1)
    {
      v65 = *(_OWORD *)(v63 + 16);
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v65;
      *((_QWORD *)v62 + 4) = *(_QWORD *)(v63 + 32);
    }
    else
    {
      *(_QWORD *)v62 = *(_QWORD *)v63;
      v62[8] = *(_BYTE *)(v63 + 8);
      *((_QWORD *)v62 + 2) = *(_QWORD *)(v63 + 16);
      v62[24] = *(_BYTE *)(v63 + 24);
      *((_QWORD *)v62 + 4) = v64;
      swift_bridgeObjectRetain();
    }
    v66 = a3[18];
    v67 = a3[19];
    v68 = (char *)v4 + v66;
    v69 = (uint64_t)a2 + v66;
    *(_QWORD *)v68 = *(_QWORD *)v69;
    v68[8] = *(_BYTE *)(v69 + 8);
    v70 = (char *)v4 + v67;
    v71 = (char *)a2 + v67;
    v72 = sub_1BB86D024();
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v70, v71, v72);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
  }
  return v4;
}

uint64_t destroy for FeedClusteringOptions(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v4 = a1 + a2[5];
  v5 = sub_1BB86D078();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[7];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[8];
  v10 = type metadata accessor for FeedGroupBundleArticleQuotas();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
  {
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9 + *(int *)(v10 + 24), v5);
    swift_bridgeObjectRelease();
  }
  v11 = a1 + a2[10];
  if (!v7(v11, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  v12 = a1 + a2[12];
  if (!v7(v12, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  v13 = a1 + a2[14];
  if (!v7(v13, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v13, v5);
  v14 = a1 + a2[16];
  if (!v7(v14, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v14, v5);
  if (*(_QWORD *)(a1 + a2[17] + 32) != 1)
    swift_bridgeObjectRelease();
  v15 = a1 + a2[19];
  v16 = sub_1BB86D024();
  v17 = *(_QWORD *)(v16 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  return result;
}

uint64_t initializeWithCopy for FeedClusteringOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  void (*v30)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  const void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  const void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  const void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  const void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v74;
  void (*v75)(char *, char *, uint64_t);
  unsigned int (*v76)(const void *, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BB86D078();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = (void *)(a1 + v14);
  v18 = (const void *)(a2 + v14);
  if (v11((const void *)(a2 + v14), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v17, v18, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v26 = v22[1];
    *v21 = *v22;
    v21[1] = v26;
    v27 = *(int *)(v23 + 24);
    v76 = v11;
    v28 = (char *)v22 + v27;
    v74 = (char *)v21 + v27;
    v75 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v29 = v28;
    v11 = v76;
    v75(v74, v29, v9);
    *(_QWORD *)((char *)v21 + *(int *)(v23 + 28)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 28));
    v30 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56);
    swift_bridgeObjectRetain();
    v30(v21, 0, 1, v23);
  }
  v31 = a3[9];
  v32 = a3[10];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_BYTE *)(v33 + 8) = *(_BYTE *)(v34 + 8);
  v35 = (void *)(a1 + v32);
  v36 = (const void *)(a2 + v32);
  if (v11((const void *)(a2 + v32), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v35, v36, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
  }
  v38 = a3[11];
  v39 = a3[12];
  v40 = a1 + v38;
  v41 = a2 + v38;
  *(_QWORD *)v40 = *(_QWORD *)v41;
  *(_BYTE *)(v40 + 8) = *(_BYTE *)(v41 + 8);
  v42 = (void *)(a1 + v39);
  v43 = (const void *)(a2 + v39);
  if (v11((const void *)(a2 + v39), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v42, v43, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v42, 0, 1, v9);
  }
  v45 = a3[13];
  v46 = a3[14];
  v47 = a1 + v45;
  v48 = a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  v49 = (void *)(a1 + v46);
  v50 = (const void *)(a2 + v46);
  if (v11((const void *)(a2 + v46), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v49, v50, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v49, 0, 1, v9);
  }
  v52 = a3[15];
  v53 = a3[16];
  v54 = a1 + v52;
  v55 = a2 + v52;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  v56 = (void *)(a1 + v53);
  v57 = (const void *)(a2 + v53);
  if (v11((const void *)(a2 + v53), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 16))(v56, v57, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v56, 0, 1, v9);
  }
  v59 = a3[17];
  v60 = a1 + v59;
  v61 = a2 + v59;
  v62 = *(_QWORD *)(v61 + 32);
  if (v62 == 1)
  {
    v63 = *(_OWORD *)(v61 + 16);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *(_OWORD *)(v60 + 16) = v63;
    *(_QWORD *)(v60 + 32) = *(_QWORD *)(v61 + 32);
  }
  else
  {
    *(_QWORD *)v60 = *(_QWORD *)v61;
    *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
    *(_QWORD *)(v60 + 16) = *(_QWORD *)(v61 + 16);
    *(_BYTE *)(v60 + 24) = *(_BYTE *)(v61 + 24);
    *(_QWORD *)(v60 + 32) = v62;
    swift_bridgeObjectRetain();
  }
  v64 = a3[18];
  v65 = a3[19];
  v66 = a1 + v64;
  v67 = a2 + v64;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *(_BYTE *)(v66 + 8) = *(_BYTE *)(v67 + 8);
  v68 = (void *)(a1 + v65);
  v69 = (const void *)(a2 + v65);
  v70 = sub_1BB86D024();
  v71 = *(_QWORD *)(v70 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v71 + 16))(v68, v69, v70);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
  }
  return a1;
}

uint64_t assignWithCopy for FeedClusteringOptions(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  void (*v37)(char *, char *, uint64_t);
  void (*v38)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  char *v56;
  int v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  char *v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int128 *v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t (*v102)(void *, uint64_t, uint64_t);
  int v103;
  int v104;
  uint64_t v105;
  char *v107;
  int *v108;
  uint64_t v109;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86D078();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = (uint64_t *)((char *)a2 + v16);
  v19 = *v18;
  *(_BYTE *)(v17 + 8) = *((_BYTE *)v18 + 8);
  *(_QWORD *)v17 = v19;
  v20 = a3[7];
  v21 = (void *)(a1 + v20);
  v22 = (char *)a2 + v20;
  v23 = v12((void *)(a1 + v20), 1, v10);
  v24 = v12(v22, 1, v10);
  v109 = v11;
  if (v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v21, v22, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v21, v10);
LABEL_12:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v21, v22, v10);
LABEL_13:
  v108 = a3;
  v26 = a3[8];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  v29 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v30 + 48);
  v32 = v31(v27, 1, v29);
  v33 = v31(v28, 1, v29);
  if (v32)
  {
    if (v33)
      goto LABEL_18;
    *v27 = *v28;
    v27[1] = v28[1];
    v35 = *(int *)(v29 + 24);
    v36 = (char *)v27 + v35;
    v107 = (char *)v28 + v35;
    v37 = *(void (**)(char *, char *, uint64_t))(v109 + 16);
    swift_bridgeObjectRetain();
    v37(v36, v107, v10);
    *(_QWORD *)((char *)v27 + *(int *)(v29 + 28)) = *(_QWORD *)((char *)v28 + *(int *)(v29 + 28));
    v38 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56);
    swift_bridgeObjectRetain();
    v38(v27, 0, 1, v29);
  }
  else
  {
    if (v33)
    {
      sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_18:
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      goto LABEL_23;
    }
    *v27 = *v28;
    v27[1] = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, char *, uint64_t))(v109 + 24))((char *)v27 + *(int *)(v29 + 24), (char *)v28 + *(int *)(v29 + 24), v10);
    *(_QWORD *)((char *)v27 + *(int *)(v29 + 28)) = *(_QWORD *)((char *)v28 + *(int *)(v29 + 28));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_23:
  v39 = v108[9];
  v40 = a1 + v39;
  v41 = (uint64_t *)((char *)a2 + v39);
  v42 = *v41;
  *(_BYTE *)(v40 + 8) = *((_BYTE *)v41 + 8);
  *(_QWORD *)v40 = v42;
  v43 = v108[10];
  v44 = (void *)(a1 + v43);
  v45 = (char *)a2 + v43;
  v46 = v12((void *)(a1 + v43), 1, v10);
  v47 = v12(v45, 1, v10);
  if (v46)
  {
    v48 = v109;
    if (!v47)
    {
      (*(void (**)(void *, char *, uint64_t))(v109 + 16))(v44, v45, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v44, 0, 1, v10);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  v48 = v109;
  if (v47)
  {
    (*(void (**)(void *, uint64_t))(v109 + 8))(v44, v10);
LABEL_28:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(void *, char *, uint64_t))(v109 + 24))(v44, v45, v10);
LABEL_29:
  v50 = v108[11];
  v51 = a1 + v50;
  v52 = (uint64_t *)((char *)a2 + v50);
  v53 = *v52;
  *(_BYTE *)(v51 + 8) = *((_BYTE *)v52 + 8);
  *(_QWORD *)v51 = v53;
  v54 = v108[12];
  v55 = (void *)(a1 + v54);
  v56 = (char *)a2 + v54;
  v57 = v12((void *)(a1 + v54), 1, v10);
  v58 = v12(v56, 1, v10);
  if (v57)
  {
    if (!v58)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v55, v56, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v55, 0, 1, v10);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v58)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v55, v10);
LABEL_34:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v55, v56, v10);
LABEL_35:
  v60 = v108[13];
  v61 = a1 + v60;
  v62 = (uint64_t *)((char *)a2 + v60);
  v63 = *v62;
  *(_BYTE *)(v61 + 8) = *((_BYTE *)v62 + 8);
  *(_QWORD *)v61 = v63;
  v64 = v108[14];
  v65 = (void *)(a1 + v64);
  v66 = (char *)a2 + v64;
  v67 = v12((void *)(a1 + v64), 1, v10);
  v68 = v12(v66, 1, v10);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v65, v66, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v65, 0, 1, v10);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v65, v10);
LABEL_40:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v65, v66, v10);
LABEL_41:
  v70 = v108[15];
  v71 = a1 + v70;
  v72 = (uint64_t *)((char *)a2 + v70);
  v73 = *v72;
  *(_BYTE *)(v71 + 8) = *((_BYTE *)v72 + 8);
  *(_QWORD *)v71 = v73;
  v74 = v108[16];
  v75 = (void *)(a1 + v74);
  v76 = (char *)a2 + v74;
  v77 = v12((void *)(a1 + v74), 1, v10);
  v78 = v12(v76, 1, v10);
  if (v77)
  {
    if (!v78)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v75, v76, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v75, 0, 1, v10);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v78)
  {
    (*(void (**)(void *, uint64_t))(v48 + 8))(v75, v10);
LABEL_46:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v75, v76, v10);
LABEL_47:
  v80 = v108[17];
  v81 = a1 + v80;
  v82 = (__int128 *)((char *)a2 + v80);
  v83 = *(_QWORD *)(a1 + v80 + 32);
  v84 = *(uint64_t *)((char *)a2 + v80 + 32);
  if (v83 == 1)
  {
    if (v84 == 1)
    {
      v85 = *v82;
      v86 = v82[1];
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      *(_OWORD *)v81 = v85;
      *(_OWORD *)(v81 + 16) = v86;
    }
    else
    {
      v89 = *(_QWORD *)v82;
      *(_BYTE *)(v81 + 8) = *((_BYTE *)v82 + 8);
      *(_QWORD *)v81 = v89;
      v90 = *((_QWORD *)v82 + 2);
      *(_BYTE *)(v81 + 24) = *((_BYTE *)v82 + 24);
      *(_QWORD *)(v81 + 16) = v90;
      *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
      swift_bridgeObjectRetain();
    }
  }
  else if (v84 == 1)
  {
    sub_1BAF10C4C(v81);
    v87 = *((_QWORD *)v82 + 4);
    v88 = v82[1];
    *(_OWORD *)v81 = *v82;
    *(_OWORD *)(v81 + 16) = v88;
    *(_QWORD *)(v81 + 32) = v87;
  }
  else
  {
    v91 = *(_QWORD *)v82;
    *(_BYTE *)(v81 + 8) = *((_BYTE *)v82 + 8);
    *(_QWORD *)v81 = v91;
    v92 = *((_QWORD *)v82 + 2);
    *(_BYTE *)(v81 + 24) = *((_BYTE *)v82 + 24);
    *(_QWORD *)(v81 + 16) = v92;
    *(_QWORD *)(v81 + 32) = *((_QWORD *)v82 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v93 = v108[18];
  v94 = a1 + v93;
  v95 = (uint64_t *)((char *)a2 + v93);
  v96 = *v95;
  *(_BYTE *)(v94 + 8) = *((_BYTE *)v95 + 8);
  *(_QWORD *)v94 = v96;
  v97 = v108[19];
  v98 = (void *)(a1 + v97);
  v99 = (char *)a2 + v97;
  v100 = sub_1BB86D024();
  v101 = *(_QWORD *)(v100 - 8);
  v102 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v101 + 48);
  v103 = v102(v98, 1, v100);
  v104 = v102(v99, 1, v100);
  if (!v103)
  {
    if (!v104)
    {
      (*(void (**)(void *, char *, uint64_t))(v101 + 24))(v98, v99, v100);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v101 + 8))(v98, v100);
    goto LABEL_59;
  }
  if (v104)
  {
LABEL_59:
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, char *, uint64_t))(v101 + 16))(v98, v99, v100);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
  return a1;
}

uint64_t sub_1BAF10C4C(uint64_t a1)
{
  destroy for FeedGroupTopicDiversityRequirements();
  return a1;
}

uint64_t initializeWithTake for FeedClusteringOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(const void *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  const void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  const void *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void *v51;
  const void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void *v62;
  const void *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BB86D078();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  v17 = (void *)(a1 + v14);
  v18 = (const void *)(a2 + v14);
  if (v11((const void *)(a2 + v14), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v17, v18, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
  }
  v20 = a3[8];
  v21 = (_OWORD *)(a1 + v20);
  v22 = (_OWORD *)(a2 + v20);
  v23 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v21 + *(int *)(v23 + 24), (char *)v22 + *(int *)(v23 + 24), v9);
    *(_QWORD *)((char *)v21 + *(int *)(v23 + 28)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v26 = a3[9];
  v27 = a3[10];
  v28 = a1 + v26;
  v29 = a2 + v26;
  *(_QWORD *)v28 = *(_QWORD *)v29;
  *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  v30 = (void *)(a1 + v27);
  v31 = (const void *)(a2 + v27);
  if (v11((const void *)(a2 + v27), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v30, v31, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v30, 0, 1, v9);
  }
  v33 = a3[11];
  v34 = a3[12];
  v35 = a1 + v33;
  v36 = a2 + v33;
  *(_QWORD *)v35 = *(_QWORD *)v36;
  *(_BYTE *)(v35 + 8) = *(_BYTE *)(v36 + 8);
  v37 = (void *)(a1 + v34);
  v38 = (const void *)(a2 + v34);
  if (v11((const void *)(a2 + v34), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v37, v38, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v37, 0, 1, v9);
  }
  v40 = a3[13];
  v41 = a3[14];
  v42 = a1 + v40;
  v43 = a2 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *(_BYTE *)(v42 + 8) = *(_BYTE *)(v43 + 8);
  v44 = (void *)(a1 + v41);
  v45 = (const void *)(a2 + v41);
  if (v11((const void *)(a2 + v41), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v44, v45, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v44, 0, 1, v9);
  }
  v47 = a3[15];
  v48 = a3[16];
  v49 = a1 + v47;
  v50 = a2 + v47;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  *(_BYTE *)(v49 + 8) = *(_BYTE *)(v50 + 8);
  v51 = (void *)(a1 + v48);
  v52 = (const void *)(a2 + v48);
  if (v11((const void *)(a2 + v48), 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v51, v52, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v51, 0, 1, v9);
  }
  v54 = a3[17];
  v55 = a3[18];
  v56 = a1 + v54;
  v57 = a2 + v54;
  v58 = *(_OWORD *)(v57 + 16);
  *(_OWORD *)v56 = *(_OWORD *)v57;
  *(_OWORD *)(v56 + 16) = v58;
  *(_QWORD *)(v56 + 32) = *(_QWORD *)(v57 + 32);
  v59 = a1 + v55;
  v60 = a2 + v55;
  *(_BYTE *)(v59 + 8) = *(_BYTE *)(v60 + 8);
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v61 = a3[19];
  v62 = (void *)(a1 + v61);
  v63 = (const void *)(a2 + v61);
  v64 = sub_1BB86D024();
  v65 = *(_QWORD *)(v64 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v65 + 32))(v62, v63, v64);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
  }
  return a1;
}

uint64_t assignWithTake for FeedClusteringOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  void *v38;
  const void *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  const void *v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void *v56;
  const void *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  const void *v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void *v79;
  void *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t (*v83)(void *, uint64_t, uint64_t);
  int v84;
  int v85;
  uint64_t v86;
  uint64_t (*v88)(uint64_t, uint64_t, uint64_t);
  uint64_t v89;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BB86D078();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_BYTE *)(v17 + 8) = *(_BYTE *)(v18 + 8);
  v19 = (void *)(a1 + v16);
  v20 = (void *)(a2 + v16);
  v21 = v11((void *)(a1 + v16), 1, v9);
  v22 = v11(v20, 1, v9);
  v88 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v11;
  v89 = v10;
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v19, v20, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v19, v9);
LABEL_12:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v19, v20, v9);
LABEL_13:
  v24 = a3[8];
  v25 = (char *)(a1 + v24);
  v26 = (char *)(a2 + v24);
  v27 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v28 = *(_QWORD *)(v27 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  v30 = v29(v25, 1, v27);
  v31 = v29(v26, 1, v27);
  if (v30)
  {
    if (v31)
      goto LABEL_18;
    *(_OWORD *)v25 = *(_OWORD *)v26;
    v33 = v89;
    (*(void (**)(char *, char *, uint64_t))(v89 + 32))(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v9);
    *(_QWORD *)&v25[*(int *)(v27 + 28)] = *(_QWORD *)&v26[*(int *)(v27 + 28)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  else
  {
    if (v31)
    {
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_18:
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      v33 = v89;
      goto LABEL_23;
    }
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
    swift_bridgeObjectRelease();
    v33 = v89;
    (*(void (**)(char *, char *, uint64_t))(v89 + 40))(&v25[*(int *)(v27 + 24)], &v26[*(int *)(v27 + 24)], v9);
    *(_QWORD *)&v25[*(int *)(v27 + 28)] = *(_QWORD *)&v26[*(int *)(v27 + 28)];
    swift_bridgeObjectRelease();
  }
LABEL_23:
  v34 = a3[9];
  v35 = a3[10];
  v36 = a1 + v34;
  v37 = a2 + v34;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  *(_BYTE *)(v36 + 8) = *(_BYTE *)(v37 + 8);
  v38 = (void *)(a1 + v35);
  v39 = (const void *)(a2 + v35);
  v40 = v88(a1 + v35, 1, v9);
  v41 = v88((uint64_t)v39, 1, v9);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v38, v39, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v38, 0, 1, v9);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v41)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v38, v9);
LABEL_28:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 40))(v38, v39, v9);
LABEL_29:
  v43 = a3[11];
  v44 = a3[12];
  v45 = a1 + v43;
  v46 = a2 + v43;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  v47 = (void *)(a1 + v44);
  v48 = (const void *)(a2 + v44);
  v49 = v88(a1 + v44, 1, v9);
  v50 = v88((uint64_t)v48, 1, v9);
  if (v49)
  {
    if (!v50)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v47, v48, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v47, 0, 1, v9);
      goto LABEL_35;
    }
    goto LABEL_34;
  }
  if (v50)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v47, v9);
LABEL_34:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 40))(v47, v48, v9);
LABEL_35:
  v52 = a3[13];
  v53 = a3[14];
  v54 = a1 + v52;
  v55 = a2 + v52;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  v56 = (void *)(a1 + v53);
  v57 = (const void *)(a2 + v53);
  v58 = v88(a1 + v53, 1, v9);
  v59 = v88((uint64_t)v57, 1, v9);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v56, v57, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v56, 0, 1, v9);
      goto LABEL_41;
    }
    goto LABEL_40;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v56, v9);
LABEL_40:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 40))(v56, v57, v9);
LABEL_41:
  v61 = a3[15];
  v62 = a3[16];
  v63 = a1 + v61;
  v64 = a2 + v61;
  *(_QWORD *)v63 = *(_QWORD *)v64;
  *(_BYTE *)(v63 + 8) = *(_BYTE *)(v64 + 8);
  v65 = (void *)(a1 + v62);
  v66 = (const void *)(a2 + v62);
  v67 = v88(a1 + v62, 1, v9);
  v68 = v88((uint64_t)v66, 1, v9);
  if (v67)
  {
    if (!v68)
    {
      (*(void (**)(void *, const void *, uint64_t))(v33 + 32))(v65, v66, v9);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v65, 0, 1, v9);
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v68)
  {
    (*(void (**)(void *, uint64_t))(v33 + 8))(v65, v9);
LABEL_46:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
    goto LABEL_47;
  }
  (*(void (**)(void *, const void *, uint64_t))(v33 + 40))(v65, v66, v9);
LABEL_47:
  v70 = a3[17];
  v71 = a1 + v70;
  v72 = a2 + v70;
  if (*(_QWORD *)(a1 + v70 + 32) == 1)
  {
LABEL_50:
    v74 = *(_OWORD *)(v72 + 16);
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_OWORD *)(v71 + 16) = v74;
    *(_QWORD *)(v71 + 32) = *(_QWORD *)(v72 + 32);
    goto LABEL_52;
  }
  v73 = *(_QWORD *)(v72 + 32);
  if (v73 == 1)
  {
    sub_1BAF10C4C(v71);
    goto LABEL_50;
  }
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *(_BYTE *)(v71 + 8) = *(_BYTE *)(v72 + 8);
  *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
  *(_BYTE *)(v71 + 24) = *(_BYTE *)(v72 + 24);
  *(_QWORD *)(v71 + 32) = v73;
  swift_bridgeObjectRelease();
LABEL_52:
  v75 = a3[18];
  v76 = a3[19];
  v77 = a1 + v75;
  v78 = a2 + v75;
  *(_QWORD *)v77 = *(_QWORD *)v78;
  *(_BYTE *)(v77 + 8) = *(_BYTE *)(v78 + 8);
  v79 = (void *)(a1 + v76);
  v80 = (void *)(a2 + v76);
  v81 = sub_1BB86D024();
  v82 = *(_QWORD *)(v81 - 8);
  v83 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v82 + 48);
  v84 = v83(v79, 1, v81);
  v85 = v83(v80, 1, v81);
  if (!v84)
  {
    if (!v85)
    {
      (*(void (**)(void *, void *, uint64_t))(v82 + 40))(v79, v80, v81);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v82 + 8))(v79, v81);
    goto LABEL_57;
  }
  if (v85)
  {
LABEL_57:
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v82 + 32))(v79, v80, v81);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v82 + 56))(v79, 0, 1, v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedClusteringOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF119CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
  v7 = *(_QWORD *)(v10 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v10;
    v9 = a3[8];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483645)
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    v8 = v13;
    v7 = *(_QWORD *)(v13 - 8);
    v9 = a3[19];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[17] + 32);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return ((_DWORD)v11 - 1) & ~(((int)v11 - 1) >> 31);
}

uint64_t storeEnumTagSinglePayload for FeedClusteringOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BAF11ADC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = a4[5];
  }
  else
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[8];
    }
    else
    {
      if (a3 == 2147483645)
      {
        *(_QWORD *)(a1 + a4[17] + 32) = (a2 + 1);
        return;
      }
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      v10 = v13;
      v9 = *(_QWORD *)(v13 - 8);
      v11 = a4[19];
    }
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1BAF11BD8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA4A3FB4(319, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
  if (v0 <= 0x3F)
  {
    sub_1BA4A3FB4(319, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    if (v1 <= 0x3F)
    {
      sub_1BA4A3FB4(319, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for FeedClusteringRequest(uint64_t a1, uint64_t *a2, int *a3)
{
  int v3;
  uint64_t v4;
  int *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  unsigned int (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  void (*v39)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  _BYTE *v41;
  _BYTE *v42;
  uint64_t v43;
  _BYTE *v44;
  _BYTE *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  uint64_t v65;
  _BYTE *v66;
  _BYTE *v67;
  uint64_t v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(_BYTE *, uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  _BYTE *v98;
  _BYTE *v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  void (*v111)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  uint64_t v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  _BYTE *v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  _BYTE *v147;
  _BYTE *v148;
  uint64_t v149;
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int (*v164)(_BYTE *, uint64_t, uint64_t);
  uint64_t v165;
  uint64_t v166;
  _BYTE *v167;
  _BYTE *v168;
  uint64_t v169;
  _BYTE *v170;
  _BYTE *v171;
  uint64_t v172;
  uint64_t v173;
  _QWORD *v174;
  _QWORD *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  void (*v183)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v184;
  _BYTE *v185;
  _BYTE *v186;
  uint64_t v187;
  _BYTE *v188;
  _BYTE *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _BYTE *v193;
  _BYTE *v194;
  uint64_t v195;
  _BYTE *v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  _BYTE *v200;
  _BYTE *v201;
  uint64_t v202;
  _BYTE *v203;
  _BYTE *v204;
  uint64_t v205;
  uint64_t v206;
  _BYTE *v207;
  _BYTE *v208;
  uint64_t v209;
  _BYTE *v210;
  _BYTE *v211;
  uint64_t v212;
  uint64_t v213;
  _BYTE *v214;
  _BYTE *v215;
  uint64_t v216;
  __int128 v217;
  uint64_t v218;
  _BYTE *v219;
  _BYTE *v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  _BYTE *v228;
  _BYTE *v229;
  uint64_t v230;
  uint64_t v231;
  _BYTE *v232;
  _BYTE *v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int (*v236)(_BYTE *, uint64_t, uint64_t);
  uint64_t v237;
  uint64_t v238;
  _BYTE *v239;
  _BYTE *v240;
  uint64_t v241;
  _BYTE *v242;
  _BYTE *v243;
  uint64_t v244;
  uint64_t v245;
  _QWORD *v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  void (*v255)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v256;
  _BYTE *v257;
  _BYTE *v258;
  uint64_t v259;
  _BYTE *v260;
  _BYTE *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  _BYTE *v265;
  _BYTE *v266;
  uint64_t v267;
  _BYTE *v268;
  _BYTE *v269;
  uint64_t v270;
  uint64_t v271;
  _BYTE *v272;
  _BYTE *v273;
  uint64_t v274;
  _BYTE *v275;
  _BYTE *v276;
  uint64_t v277;
  uint64_t v278;
  _BYTE *v279;
  _BYTE *v280;
  uint64_t v281;
  _BYTE *v282;
  _BYTE *v283;
  uint64_t v284;
  uint64_t v285;
  _BYTE *v286;
  _BYTE *v287;
  uint64_t v288;
  __int128 v289;
  uint64_t v290;
  _BYTE *v291;
  _BYTE *v292;
  uint64_t v293;
  _BYTE *v294;
  _BYTE *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  char *v303;
  char *v304;
  char *v305;
  void (*v306)(char *, char *, uint64_t);
  void (*v307)(char *, char *, uint64_t);
  void (*v308)(char *, char *, uint64_t);
  char *v309;
  unsigned int (*v310)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v311)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v312)(_BYTE *, uint64_t, uint64_t);
  void (*v313)(char *, char *, uint64_t);
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unsigned int (*v317)(_BYTE *, uint64_t, uint64_t);
  uint64_t *v318;
  uint64_t *v319;
  uint64_t *v320;
  uint64_t *v321;
  unsigned int (*v322)(_QWORD, _QWORD, _QWORD);
  uint64_t v323;
  uint64_t v324;
  int *v325;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v7 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a3;
    v6 = a2;
    v7 = a1;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = a2[3];
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v9 = a3[10];
    v10 = (_BYTE *)(a1 + v9);
    v11 = (char *)a2 + v9;
    *(_QWORD *)(a1 + 40) = a2[5];
    v12 = (int *)type metadata accessor for FeedClusteringOptions(0);
    v324 = *((_QWORD *)v12 - 1);
    v13 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v324 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v325 = v5;
    v322 = v13;
    if (v13(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v10[8] = v11[8];
      v15 = v12[5];
      v16 = &v10[v15];
      v17 = &v11[v15];
      v18 = sub_1BB86D078();
      v19 = *(_QWORD *)(v18 - 8);
      v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
      if (v20(v17, 1, v18))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v16, v17, v18);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
      v22 = v12[6];
      v23 = &v10[v22];
      v24 = &v11[v22];
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v12[7];
      v26 = &v10[v25];
      v27 = &v11[v25];
      v310 = v20;
      v314 = v19;
      if (v20(&v11[v25], 1, v18))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v26, v27, v18);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
      }
      v29 = v12[8];
      v30 = &v10[v29];
      v31 = &v11[v29];
      v32 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v33 = *(_QWORD *)(v32 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v35 = v31[1];
        *v30 = *v31;
        v30[1] = v35;
        v36 = *(int *)(v32 + 24);
        v318 = v6;
        v37 = (char *)v30 + v36;
        v303 = (char *)v31 + v36;
        v306 = *(void (**)(char *, char *, uint64_t))(v314 + 16);
        swift_bridgeObjectRetain();
        v38 = v37;
        v6 = v318;
        v306(v38, v303, v18);
        *(_QWORD *)((char *)v30 + *(int *)(v32 + 28)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 28));
        v39 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
        swift_bridgeObjectRetain();
        v39(v30, 0, 1, v32);
      }
      v40 = v12[9];
      v41 = &v10[v40];
      v42 = &v11[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      v41[8] = v42[8];
      v43 = v12[10];
      v44 = &v10[v43];
      v45 = &v11[v43];
      if (v310(&v11[v43], 1, v18))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
        v47 = v314;
      }
      else
      {
        v47 = v314;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v314 + 16))(v44, v45, v18);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v314 + 56))(v44, 0, 1, v18);
      }
      v48 = v12[11];
      v49 = &v10[v48];
      v50 = &v11[v48];
      *(_QWORD *)v49 = *(_QWORD *)v50;
      v49[8] = v50[8];
      v51 = v12[12];
      v52 = &v10[v51];
      v53 = &v11[v51];
      if (v310(&v11[v51], 1, v18))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v52, v53, v18);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v52, 0, 1, v18);
      }
      v55 = v12[13];
      v56 = &v10[v55];
      v57 = &v11[v55];
      *(_QWORD *)v56 = *(_QWORD *)v57;
      v56[8] = v57[8];
      v58 = v12[14];
      v59 = &v10[v58];
      v60 = &v11[v58];
      if (v310(&v11[v58], 1, v18))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v59, v60, v18);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v59, 0, 1, v18);
      }
      v62 = v12[15];
      v63 = &v10[v62];
      v64 = &v11[v62];
      *(_QWORD *)v63 = *(_QWORD *)v64;
      v63[8] = v64[8];
      v65 = v12[16];
      v66 = &v10[v65];
      v67 = &v11[v65];
      if (v310(&v11[v65], 1, v18))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v47 + 16))(v66, v67, v18);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v66, 0, 1, v18);
      }
      v69 = v12[17];
      v70 = &v10[v69];
      v71 = &v11[v69];
      v72 = *((_QWORD *)v71 + 4);
      if (v72 == 1)
      {
        v73 = *((_OWORD *)v71 + 1);
        *(_OWORD *)v70 = *(_OWORD *)v71;
        *((_OWORD *)v70 + 1) = v73;
        *((_QWORD *)v70 + 4) = *((_QWORD *)v71 + 4);
      }
      else
      {
        *(_QWORD *)v70 = *(_QWORD *)v71;
        v70[8] = v71[8];
        *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
        v70[24] = v71[24];
        *((_QWORD *)v70 + 4) = v72;
        swift_bridgeObjectRetain();
      }
      v74 = v12[18];
      v75 = &v10[v74];
      v76 = &v11[v74];
      *(_QWORD *)v75 = *(_QWORD *)v76;
      v75[8] = v76[8];
      v77 = v12[19];
      v78 = &v10[v77];
      v79 = &v11[v77];
      v80 = sub_1BB86D024();
      v81 = *(_QWORD *)(v80 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
      {
        sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v81 + 16))(v78, v79, v80);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
      }
      v5 = v325;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v324 + 56))(v10, 0, 1, v12);
      v13 = v322;
    }
    v83 = v5[11];
    v84 = (_BYTE *)(v7 + v83);
    v85 = (char *)v6 + v83;
    if (v13((char *)v6 + v83, 1, v12))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v84 = *(_QWORD *)v85;
      v84[8] = v85[8];
      v87 = v12[5];
      v88 = &v84[v87];
      v89 = &v85[v87];
      v90 = sub_1BB86D078();
      v91 = *(_QWORD *)(v90 - 8);
      v92 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v91 + 48);
      if (v92(v89, 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 16))(v88, v89, v90);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
      }
      v94 = v12[6];
      v95 = &v84[v94];
      v96 = &v85[v94];
      *(_QWORD *)v95 = *(_QWORD *)v96;
      v95[8] = v96[8];
      v97 = v12[7];
      v98 = &v84[v97];
      v99 = &v85[v97];
      v311 = v92;
      v315 = v91;
      if (v92(&v85[v97], 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v91 + 16))(v98, v99, v90);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v98, 0, 1, v90);
      }
      v101 = v12[8];
      v102 = &v84[v101];
      v103 = &v85[v101];
      v104 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v105 = *(_QWORD *)(v104 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
      }
      else
      {
        v107 = v103[1];
        *v102 = *v103;
        v102[1] = v107;
        v108 = *(int *)(v104 + 24);
        v319 = v6;
        v109 = (char *)v103 + v108;
        v304 = (char *)v102 + v108;
        v307 = *(void (**)(char *, char *, uint64_t))(v315 + 16);
        swift_bridgeObjectRetain();
        v110 = v109;
        v6 = v319;
        v307(v304, v110, v90);
        *(_QWORD *)((char *)v102 + *(int *)(v104 + 28)) = *(_QWORD *)((char *)v103 + *(int *)(v104 + 28));
        v111 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v105 + 56);
        swift_bridgeObjectRetain();
        v111(v102, 0, 1, v104);
      }
      v112 = v12[9];
      v113 = &v84[v112];
      v114 = &v85[v112];
      *(_QWORD *)v113 = *(_QWORD *)v114;
      v113[8] = v114[8];
      v115 = v12[10];
      v116 = &v84[v115];
      v117 = &v85[v115];
      if (v311(&v85[v115], 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
        v119 = v315;
      }
      else
      {
        v119 = v315;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v315 + 16))(v116, v117, v90);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v315 + 56))(v116, 0, 1, v90);
      }
      v120 = v12[11];
      v121 = &v84[v120];
      v122 = &v85[v120];
      *(_QWORD *)v121 = *(_QWORD *)v122;
      v121[8] = v122[8];
      v123 = v12[12];
      v124 = &v84[v123];
      v125 = &v85[v123];
      if (v311(&v85[v123], 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v126 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v119 + 16))(v124, v125, v90);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v124, 0, 1, v90);
      }
      v127 = v12[13];
      v128 = &v84[v127];
      v129 = &v85[v127];
      *(_QWORD *)v128 = *(_QWORD *)v129;
      v128[8] = v129[8];
      v130 = v12[14];
      v131 = &v84[v130];
      v132 = &v85[v130];
      if (v311(&v85[v130], 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v119 + 16))(v131, v132, v90);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v131, 0, 1, v90);
      }
      v134 = v12[15];
      v135 = &v84[v134];
      v136 = &v85[v134];
      *(_QWORD *)v135 = *(_QWORD *)v136;
      v135[8] = v136[8];
      v137 = v12[16];
      v138 = &v84[v137];
      v139 = &v85[v137];
      if (v311(&v85[v137], 1, v90))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v138, v139, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v119 + 16))(v138, v139, v90);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v138, 0, 1, v90);
      }
      v141 = v12[17];
      v142 = &v84[v141];
      v143 = &v85[v141];
      v144 = *((_QWORD *)v143 + 4);
      if (v144 == 1)
      {
        v145 = *((_OWORD *)v143 + 1);
        *(_OWORD *)v142 = *(_OWORD *)v143;
        *((_OWORD *)v142 + 1) = v145;
        *((_QWORD *)v142 + 4) = *((_QWORD *)v143 + 4);
      }
      else
      {
        *(_QWORD *)v142 = *(_QWORD *)v143;
        v142[8] = v143[8];
        *((_QWORD *)v142 + 2) = *((_QWORD *)v143 + 2);
        v142[24] = v143[24];
        *((_QWORD *)v142 + 4) = v144;
        swift_bridgeObjectRetain();
      }
      v146 = v12[18];
      v147 = &v84[v146];
      v148 = &v85[v146];
      *(_QWORD *)v147 = *(_QWORD *)v148;
      v147[8] = v148[8];
      v149 = v12[19];
      v150 = &v84[v149];
      v151 = &v85[v149];
      v152 = sub_1BB86D024();
      v153 = *(_QWORD *)(v152 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
      {
        sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
        memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v153 + 16))(v150, v151, v152);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v152);
      }
      v5 = v325;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v324 + 56))(v84, 0, 1, v12);
      v13 = v322;
    }
    v155 = v5[13];
    *(_QWORD *)(v7 + v5[12]) = *(uint64_t *)((char *)v6 + v5[12]);
    v156 = (_BYTE *)(v7 + v155);
    v157 = (char *)v6 + v155;
    swift_bridgeObjectRetain();
    if (v13(v157, 1, v12))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v156 = *(_QWORD *)v157;
      v156[8] = v157[8];
      v159 = v12[5];
      v160 = &v156[v159];
      v161 = &v157[v159];
      v162 = sub_1BB86D078();
      v163 = *(_QWORD *)(v162 - 8);
      v164 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v163 + 48);
      if (v164(v161, 1, v162))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v165 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v163 + 16))(v160, v161, v162);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
      }
      v166 = v12[6];
      v167 = &v156[v166];
      v168 = &v157[v166];
      *(_QWORD *)v167 = *(_QWORD *)v168;
      v167[8] = v168[8];
      v169 = v12[7];
      v170 = &v156[v169];
      v171 = &v157[v169];
      v312 = v164;
      v316 = v163;
      if (v164(&v157[v169], 1, v162))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v170, v171, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v163 + 16))(v170, v171, v162);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v170, 0, 1, v162);
      }
      v173 = v12[8];
      v174 = &v156[v173];
      v175 = &v157[v173];
      v176 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v177 = *(_QWORD *)(v176 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v177 + 48))(v175, 1, v176))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
      }
      else
      {
        v179 = v175[1];
        *v174 = *v175;
        v174[1] = v179;
        v180 = *(int *)(v176 + 24);
        v320 = v6;
        v181 = (char *)v175 + v180;
        v305 = (char *)v174 + v180;
        v308 = *(void (**)(char *, char *, uint64_t))(v316 + 16);
        swift_bridgeObjectRetain();
        v182 = v181;
        v6 = v320;
        v308(v305, v182, v162);
        *(_QWORD *)((char *)v174 + *(int *)(v176 + 28)) = *(_QWORD *)((char *)v175 + *(int *)(v176 + 28));
        v183 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v177 + 56);
        swift_bridgeObjectRetain();
        v183(v174, 0, 1, v176);
      }
      v184 = v12[9];
      v185 = &v156[v184];
      v186 = &v157[v184];
      *(_QWORD *)v185 = *(_QWORD *)v186;
      v185[8] = v186[8];
      v187 = v12[10];
      v188 = &v156[v187];
      v189 = &v157[v187];
      if (v312(&v157[v187], 1, v162))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v188, v189, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
        v191 = v316;
      }
      else
      {
        v191 = v316;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v316 + 16))(v188, v189, v162);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v316 + 56))(v188, 0, 1, v162);
      }
      v192 = v12[11];
      v193 = &v156[v192];
      v194 = &v157[v192];
      *(_QWORD *)v193 = *(_QWORD *)v194;
      v193[8] = v194[8];
      v195 = v12[12];
      v196 = &v156[v195];
      v197 = &v157[v195];
      if (v312(&v157[v195], 1, v162))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v191 + 16))(v196, v197, v162);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v196, 0, 1, v162);
      }
      v199 = v12[13];
      v200 = &v156[v199];
      v201 = &v157[v199];
      *(_QWORD *)v200 = *(_QWORD *)v201;
      v200[8] = v201[8];
      v202 = v12[14];
      v203 = &v156[v202];
      v204 = &v157[v202];
      if (v312(&v157[v202], 1, v162))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v191 + 16))(v203, v204, v162);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v203, 0, 1, v162);
      }
      v206 = v12[15];
      v207 = &v156[v206];
      v208 = &v157[v206];
      *(_QWORD *)v207 = *(_QWORD *)v208;
      v207[8] = v208[8];
      v209 = v12[16];
      v210 = &v156[v209];
      v211 = &v157[v209];
      if (v312(&v157[v209], 1, v162))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v191 + 16))(v210, v211, v162);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v191 + 56))(v210, 0, 1, v162);
      }
      v213 = v12[17];
      v214 = &v156[v213];
      v215 = &v157[v213];
      v216 = *((_QWORD *)v215 + 4);
      if (v216 == 1)
      {
        v217 = *((_OWORD *)v215 + 1);
        *(_OWORD *)v214 = *(_OWORD *)v215;
        *((_OWORD *)v214 + 1) = v217;
        *((_QWORD *)v214 + 4) = *((_QWORD *)v215 + 4);
      }
      else
      {
        *(_QWORD *)v214 = *(_QWORD *)v215;
        v214[8] = v215[8];
        *((_QWORD *)v214 + 2) = *((_QWORD *)v215 + 2);
        v214[24] = v215[24];
        *((_QWORD *)v214 + 4) = v216;
        swift_bridgeObjectRetain();
      }
      v218 = v12[18];
      v219 = &v156[v218];
      v220 = &v157[v218];
      *(_QWORD *)v219 = *(_QWORD *)v220;
      v219[8] = v220[8];
      v221 = v12[19];
      v222 = &v156[v221];
      v223 = &v157[v221];
      v224 = sub_1BB86D024();
      v225 = *(_QWORD *)(v224 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v225 + 48))(v223, 1, v224))
      {
        sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
        memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v225 + 16))(v222, v223, v224);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
      }
      v5 = v325;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v324 + 56))(v156, 0, 1, v12);
      v13 = v322;
    }
    v227 = v5[14];
    v228 = (_BYTE *)(v7 + v227);
    v229 = (char *)v6 + v227;
    if (v13((char *)v6 + v227, 1, v12))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v228 = *(_QWORD *)v229;
      v228[8] = v229[8];
      v231 = v12[5];
      v232 = &v228[v231];
      v233 = &v229[v231];
      v234 = sub_1BB86D078();
      v235 = *(_QWORD *)(v234 - 8);
      v236 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v235 + 48);
      if (v236(v233, 1, v234))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v232, v233, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v235 + 16))(v232, v233, v234);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v235 + 56))(v232, 0, 1, v234);
      }
      v238 = v12[6];
      v239 = &v228[v238];
      v240 = &v229[v238];
      *(_QWORD *)v239 = *(_QWORD *)v240;
      v239[8] = v240[8];
      v241 = v12[7];
      v242 = &v228[v241];
      v243 = &v229[v241];
      v323 = v235;
      v317 = v236;
      if (v236(&v229[v241], 1, v234))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v242, v243, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v235 + 16))(v242, v243, v234);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v235 + 56))(v242, 0, 1, v234);
      }
      v245 = v12[8];
      v246 = &v228[v245];
      v247 = &v229[v245];
      v248 = type metadata accessor for FeedGroupBundleArticleQuotas();
      v249 = *(_QWORD *)(v248 - 8);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v249 + 48))(v247, 1, v248))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
        memcpy(v246, v247, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
      }
      else
      {
        v251 = v247[1];
        *v246 = *v247;
        v246[1] = v251;
        v252 = *(int *)(v248 + 24);
        v321 = v6;
        v253 = (char *)v247 + v252;
        v309 = (char *)v246 + v252;
        v313 = *(void (**)(char *, char *, uint64_t))(v323 + 16);
        swift_bridgeObjectRetain();
        v254 = v253;
        v6 = v321;
        v313(v309, v254, v234);
        *(_QWORD *)((char *)v246 + *(int *)(v248 + 28)) = *(_QWORD *)((char *)v247 + *(int *)(v248 + 28));
        v255 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v249 + 56);
        swift_bridgeObjectRetain();
        v255(v246, 0, 1, v248);
      }
      v256 = v12[9];
      v257 = &v228[v256];
      v258 = &v229[v256];
      *(_QWORD *)v257 = *(_QWORD *)v258;
      v257[8] = v258[8];
      v259 = v12[10];
      v260 = &v228[v259];
      v261 = &v229[v259];
      if (v317(&v229[v259], 1, v234))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v260, v261, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
        v263 = v323;
      }
      else
      {
        v263 = v323;
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v323 + 16))(v260, v261, v234);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v323 + 56))(v260, 0, 1, v234);
      }
      v264 = v12[11];
      v265 = &v228[v264];
      v266 = &v229[v264];
      *(_QWORD *)v265 = *(_QWORD *)v266;
      v265[8] = v266[8];
      v267 = v12[12];
      v268 = &v228[v267];
      v269 = &v229[v267];
      if (v317(&v229[v267], 1, v234))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v263 + 16))(v268, v269, v234);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v268, 0, 1, v234);
      }
      v271 = v12[13];
      v272 = &v228[v271];
      v273 = &v229[v271];
      *(_QWORD *)v272 = *(_QWORD *)v273;
      v272[8] = v273[8];
      v274 = v12[14];
      v275 = &v228[v274];
      v276 = &v229[v274];
      if (v317(&v229[v274], 1, v234))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v275, v276, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v263 + 16))(v275, v276, v234);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v275, 0, 1, v234);
      }
      v278 = v12[15];
      v279 = &v228[v278];
      v280 = &v229[v278];
      *(_QWORD *)v279 = *(_QWORD *)v280;
      v279[8] = v280[8];
      v281 = v12[16];
      v282 = &v228[v281];
      v283 = &v229[v281];
      if (v317(&v229[v281], 1, v234))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v263 + 16))(v282, v283, v234);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v263 + 56))(v282, 0, 1, v234);
      }
      v285 = v12[17];
      v286 = &v228[v285];
      v287 = &v229[v285];
      v288 = *((_QWORD *)v287 + 4);
      if (v288 == 1)
      {
        v289 = *((_OWORD *)v287 + 1);
        *(_OWORD *)v286 = *(_OWORD *)v287;
        *((_OWORD *)v286 + 1) = v289;
        *((_QWORD *)v286 + 4) = *((_QWORD *)v287 + 4);
      }
      else
      {
        *(_QWORD *)v286 = *(_QWORD *)v287;
        v286[8] = v287[8];
        *((_QWORD *)v286 + 2) = *((_QWORD *)v287 + 2);
        v286[24] = v287[24];
        *((_QWORD *)v286 + 4) = v288;
        swift_bridgeObjectRetain();
      }
      v290 = v12[18];
      v291 = &v228[v290];
      v292 = &v229[v290];
      *(_QWORD *)v291 = *(_QWORD *)v292;
      v291[8] = v292[8];
      v293 = v12[19];
      v294 = &v228[v293];
      v295 = &v229[v293];
      v296 = sub_1BB86D024();
      v297 = *(_QWORD *)(v296 - 8);
      if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v297 + 48))(v295, 1, v296))
      {
        sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
        memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
      }
      else
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v297 + 16))(v294, v295, v296);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v297 + 56))(v294, 0, 1, v296);
      }
      v5 = v325;
      (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v324 + 56))(v228, 0, 1, v12);
    }
    v299 = v5[16];
    *(_QWORD *)(v7 + v5[15]) = *(uint64_t *)((char *)v6 + v5[15]);
    *(_BYTE *)(v7 + v299) = *((_BYTE *)v6 + v299);
    v300 = v5[18];
    *(_BYTE *)(v7 + v5[17]) = *((_BYTE *)v6 + v5[17]);
    *(_QWORD *)(v7 + v300) = *(uint64_t *)((char *)v6 + v300);
    v301 = v5[20];
    *(_QWORD *)(v7 + v5[19]) = *(uint64_t *)((char *)v6 + v5[19]);
    *(_BYTE *)(v7 + v301) = *((_BYTE *)v6 + v301);
    *(_WORD *)(v7 + v5[21]) = *(_WORD *)((char *)v6 + v5[21]);
    swift_bridgeObjectRetain();
  }
  return v7;
}

uint64_t destroy for FeedClusteringRequest(uint64_t a1, int *a2)
{
  uint64_t v4;
  int *v5;
  unsigned int (*v6)(uint64_t, uint64_t, int *);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[10];
  v5 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v6 = *(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v5 - 1) + 48);
  if (!v6(v4, 1, v5))
  {
    v7 = v4 + v5[5];
    v8 = sub_1BB86D078();
    v9 = *(_QWORD *)(v8 - 8);
    v10 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (!v10(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    v11 = v4 + v5[7];
    if (!v10(v11, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v11, v8);
    v12 = v4 + v5[8];
    v13 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v12, 1, v13))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12 + *(int *)(v13 + 24), v8);
      swift_bridgeObjectRelease();
    }
    v14 = v4 + v5[10];
    if (!v10(v14, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v8);
    v15 = v4 + v5[12];
    if (!v10(v15, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v15, v8);
    v16 = v4 + v5[14];
    if (!v10(v16, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v16, v8);
    v17 = v4 + v5[16];
    if (!v10(v17, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v17, v8);
    if (*(_QWORD *)(v4 + v5[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v18 = v4 + v5[19];
    v19 = sub_1BB86D024();
    v20 = *(_QWORD *)(v19 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
  }
  v21 = a1 + a2[11];
  if (!v6(v21, 1, v5))
  {
    v22 = v21 + v5[5];
    v23 = sub_1BB86D078();
    v24 = *(_QWORD *)(v23 - 8);
    v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    if (!v25(v22, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    v26 = v21 + v5[7];
    if (!v25(v26, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v26, v23);
    v27 = v21 + v5[8];
    v28 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 48))(v27, 1, v28))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v27 + *(int *)(v28 + 24), v23);
      swift_bridgeObjectRelease();
    }
    v29 = v21 + v5[10];
    if (!v25(v29, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v29, v23);
    v30 = v21 + v5[12];
    if (!v25(v30, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v30, v23);
    v31 = v21 + v5[14];
    if (!v25(v31, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v31, v23);
    v32 = v21 + v5[16];
    if (!v25(v32, 1, v23))
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v32, v23);
    if (*(_QWORD *)(v21 + v5[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v33 = v21 + v5[19];
    v34 = sub_1BB86D024();
    v35 = *(_QWORD *)(v34 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v33, v34);
  }
  swift_bridgeObjectRelease();
  v36 = a1 + a2[13];
  if (!v6(v36, 1, v5))
  {
    v37 = v36 + v5[5];
    v38 = sub_1BB86D078();
    v39 = *(_QWORD *)(v38 - 8);
    v40 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48);
    if (!v40(v37, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    v41 = v36 + v5[7];
    if (!v40(v41, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v38);
    v42 = v36 + v5[8];
    v43 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v42, 1, v43))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v42 + *(int *)(v43 + 24), v38);
      swift_bridgeObjectRelease();
    }
    v44 = v36 + v5[10];
    if (!v40(v44, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v44, v38);
    v45 = v36 + v5[12];
    if (!v40(v45, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v45, v38);
    v46 = v36 + v5[14];
    if (!v40(v46, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v46, v38);
    v47 = v36 + v5[16];
    if (!v40(v47, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v47, v38);
    if (*(_QWORD *)(v36 + v5[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v48 = v36 + v5[19];
    v49 = sub_1BB86D024();
    v50 = *(_QWORD *)(v49 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v49);
  }
  v51 = a1 + a2[14];
  if (!v6(v51, 1, v5))
  {
    v52 = v51 + v5[5];
    v53 = sub_1BB86D078();
    v54 = *(_QWORD *)(v53 - 8);
    v55 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (!v55(v52, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v52, v53);
    v56 = v51 + v5[7];
    if (!v55(v56, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v56, v53);
    v57 = v51 + v5[8];
    v58 = type metadata accessor for FeedGroupBundleArticleQuotas();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58))
    {
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v57 + *(int *)(v58 + 24), v53);
      swift_bridgeObjectRelease();
    }
    v59 = v51 + v5[10];
    if (!v55(v59, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v59, v53);
    v60 = v51 + v5[12];
    if (!v55(v60, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v60, v53);
    v61 = v51 + v5[14];
    if (!v55(v61, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v61, v53);
    v62 = v51 + v5[16];
    if (!v55(v62, 1, v53))
      (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v62, v53);
    if (*(_QWORD *)(v51 + v5[17] + 32) != 1)
      swift_bridgeObjectRelease();
    v63 = v51 + v5[19];
    v64 = sub_1BB86D024();
    v65 = *(_QWORD *)(v64 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedClusteringRequest(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  int *v12;
  unsigned int (*v13)(_QWORD, _QWORD, _QWORD);
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  void (*v41)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v42;
  _BYTE *v43;
  _BYTE *v44;
  uint64_t v45;
  _BYTE *v46;
  _BYTE *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  _BYTE *v52;
  uint64_t v53;
  _BYTE *v54;
  _BYTE *v55;
  uint64_t v56;
  uint64_t v57;
  _BYTE *v58;
  _BYTE *v59;
  uint64_t v60;
  _BYTE *v61;
  _BYTE *v62;
  uint64_t v63;
  uint64_t v64;
  _BYTE *v65;
  _BYTE *v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  _BYTE *v77;
  _BYTE *v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _BYTE *v86;
  _BYTE *v87;
  uint64_t v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  unsigned int (*v94)(_BYTE *, uint64_t, uint64_t);
  uint64_t v95;
  uint64_t v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  _QWORD *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  char *v113;
  char *v114;
  void (*v115)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v116;
  _BYTE *v117;
  _BYTE *v118;
  uint64_t v119;
  _BYTE *v120;
  _BYTE *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  _BYTE *v128;
  _BYTE *v129;
  uint64_t v130;
  uint64_t v131;
  _BYTE *v132;
  _BYTE *v133;
  uint64_t v134;
  _BYTE *v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  _BYTE *v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  _BYTE *v147;
  uint64_t v148;
  __int128 v149;
  uint64_t v150;
  _BYTE *v151;
  _BYTE *v152;
  uint64_t v153;
  _BYTE *v154;
  _BYTE *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  _BYTE *v161;
  uint64_t v162;
  uint64_t v163;
  _BYTE *v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;
  unsigned int (*v168)(_BYTE *, uint64_t, uint64_t);
  uint64_t v169;
  uint64_t v170;
  _BYTE *v171;
  _BYTE *v172;
  uint64_t v173;
  _BYTE *v174;
  _BYTE *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  char *v187;
  char *v188;
  void (*v189)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v190;
  _BYTE *v191;
  _BYTE *v192;
  uint64_t v193;
  _BYTE *v194;
  _BYTE *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _BYTE *v199;
  _BYTE *v200;
  uint64_t v201;
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  _BYTE *v206;
  _BYTE *v207;
  uint64_t v208;
  _BYTE *v209;
  _BYTE *v210;
  uint64_t v211;
  uint64_t v212;
  _BYTE *v213;
  _BYTE *v214;
  uint64_t v215;
  _BYTE *v216;
  _BYTE *v217;
  uint64_t v218;
  uint64_t v219;
  _BYTE *v220;
  _BYTE *v221;
  uint64_t v222;
  __int128 v223;
  uint64_t v224;
  _BYTE *v225;
  _BYTE *v226;
  uint64_t v227;
  _BYTE *v228;
  _BYTE *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  _BYTE *v234;
  _BYTE *v235;
  uint64_t v236;
  uint64_t v237;
  _BYTE *v238;
  _BYTE *v239;
  uint64_t v240;
  uint64_t v241;
  unsigned int (*v242)(_BYTE *, uint64_t, uint64_t);
  uint64_t v243;
  uint64_t v244;
  _BYTE *v245;
  _BYTE *v246;
  uint64_t v247;
  _BYTE *v248;
  _BYTE *v249;
  uint64_t v250;
  uint64_t v251;
  _QWORD *v252;
  _QWORD *v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char *v259;
  char *v260;
  char *v261;
  char *v262;
  void (*v263)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v264;
  _BYTE *v265;
  _BYTE *v266;
  uint64_t v267;
  _BYTE *v268;
  _BYTE *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _BYTE *v273;
  _BYTE *v274;
  uint64_t v275;
  _BYTE *v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE *v280;
  _BYTE *v281;
  uint64_t v282;
  _BYTE *v283;
  _BYTE *v284;
  uint64_t v285;
  uint64_t v286;
  _BYTE *v287;
  _BYTE *v288;
  uint64_t v289;
  _BYTE *v290;
  _BYTE *v291;
  uint64_t v292;
  uint64_t v293;
  _BYTE *v294;
  _BYTE *v295;
  uint64_t v296;
  __int128 v297;
  uint64_t v298;
  _BYTE *v299;
  _BYTE *v300;
  uint64_t v301;
  _BYTE *v302;
  _BYTE *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  void (*v311)(char *, char *, uint64_t);
  void (*v312)(char *, char *, uint64_t);
  void (*v313)(char *, char *, uint64_t);
  unsigned int (*v314)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v315)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v316)(_BYTE *, uint64_t, uint64_t);
  void (*v317)(char *, char *, uint64_t);
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  unsigned int (*v321)(_BYTE *, uint64_t, uint64_t);
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  unsigned int (*v330)(_QWORD, _QWORD, _QWORD);
  uint64_t v331;
  uint64_t v332;
  int *v333;

  v3 = a3;
  v4 = a2;
  v5 = a1;
  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v9 = a3[10];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  v12 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v332 = *((_QWORD *)v12 - 1);
  v13 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v332 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  v333 = v3;
  v330 = v13;
  if (v13(v11, 1, v12))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v15 = v12[5];
    v16 = &v10[v15];
    v17 = &v11[v15];
    v18 = sub_1BB86D078();
    v19 = *(_QWORD *)(v18 - 8);
    v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
    if (v20(v17, 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v16, v17, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    v22 = v12[6];
    v23 = &v10[v22];
    v24 = &v11[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v12[7];
    v26 = &v10[v25];
    v27 = &v11[v25];
    v314 = v20;
    v318 = v19;
    if (v20(&v11[v25], 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v26, v27, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v26, 0, 1, v18);
    }
    v29 = v12[8];
    v30 = &v10[v29];
    v31 = &v11[v29];
    v32 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v35 = v31[1];
      *v30 = *v31;
      v30[1] = v35;
      v36 = *(int *)(v32 + 24);
      v322 = v4;
      v326 = v5;
      v37 = (char *)v30 + v36;
      v38 = (char *)v31 + v36;
      v311 = *(void (**)(char *, char *, uint64_t))(v318 + 16);
      swift_bridgeObjectRetain();
      v39 = v37;
      v40 = v38;
      v4 = v322;
      v5 = v326;
      v311(v39, v40, v18);
      *(_QWORD *)((char *)v30 + *(int *)(v32 + 28)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 28));
      v41 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
      swift_bridgeObjectRetain();
      v41(v30, 0, 1, v32);
    }
    v42 = v12[9];
    v43 = &v10[v42];
    v44 = &v11[v42];
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = v44[8];
    v45 = v12[10];
    v46 = &v10[v45];
    v47 = &v11[v45];
    if (v314(&v11[v45], 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      v49 = v318;
    }
    else
    {
      v49 = v318;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v318 + 16))(v46, v47, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v318 + 56))(v46, 0, 1, v18);
    }
    v50 = v12[11];
    v51 = &v10[v50];
    v52 = &v11[v50];
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v51[8] = v52[8];
    v53 = v12[12];
    v54 = &v10[v53];
    v55 = &v11[v53];
    if (v314(&v11[v53], 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v54, v55, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v54, v55, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v54, 0, 1, v18);
    }
    v57 = v12[13];
    v58 = &v10[v57];
    v59 = &v11[v57];
    *(_QWORD *)v58 = *(_QWORD *)v59;
    v58[8] = v59[8];
    v60 = v12[14];
    v61 = &v10[v60];
    v62 = &v11[v60];
    if (v314(&v11[v60], 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v61, v62, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v61, 0, 1, v18);
    }
    v64 = v12[15];
    v65 = &v10[v64];
    v66 = &v11[v64];
    *(_QWORD *)v65 = *(_QWORD *)v66;
    v65[8] = v66[8];
    v67 = v12[16];
    v68 = &v10[v67];
    v69 = &v11[v67];
    if (v314(&v11[v67], 1, v18))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v49 + 16))(v68, v69, v18);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v68, 0, 1, v18);
    }
    v71 = v12[17];
    v72 = &v10[v71];
    v73 = &v11[v71];
    v74 = *((_QWORD *)v73 + 4);
    if (v74 == 1)
    {
      v75 = *((_OWORD *)v73 + 1);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_OWORD *)v72 + 1) = v75;
      *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
    }
    else
    {
      *(_QWORD *)v72 = *(_QWORD *)v73;
      v72[8] = v73[8];
      *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
      v72[24] = v73[24];
      *((_QWORD *)v72 + 4) = v74;
      swift_bridgeObjectRetain();
    }
    v76 = v12[18];
    v77 = &v10[v76];
    v78 = &v11[v76];
    *(_QWORD *)v77 = *(_QWORD *)v78;
    v77[8] = v78[8];
    v79 = v12[19];
    v80 = &v10[v79];
    v81 = &v11[v79];
    v82 = sub_1BB86D024();
    v83 = *(_QWORD *)(v82 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v83 + 48))(v81, 1, v82))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v83 + 16))(v80, v81, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v3 = v333;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v332 + 56))(v10, 0, 1, v12);
    v13 = v330;
  }
  v85 = v3[11];
  v86 = (_BYTE *)(v5 + v85);
  v87 = (_BYTE *)(v4 + v85);
  if (v13(v4 + v85, 1, v12))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v86 = *(_QWORD *)v87;
    v86[8] = v87[8];
    v89 = v12[5];
    v90 = &v86[v89];
    v91 = &v87[v89];
    v92 = sub_1BB86D078();
    v93 = *(_QWORD *)(v92 - 8);
    v94 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v93 + 48);
    if (v94(v91, 1, v92))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v93 + 16))(v90, v91, v92);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
    }
    v96 = v12[6];
    v97 = &v86[v96];
    v98 = &v87[v96];
    *(_QWORD *)v97 = *(_QWORD *)v98;
    v97[8] = v98[8];
    v99 = v12[7];
    v100 = &v86[v99];
    v101 = &v87[v99];
    v315 = v94;
    v319 = v93;
    if (v94(&v87[v99], 1, v92))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v93 + 16))(v100, v101, v92);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v100, 0, 1, v92);
    }
    v103 = v12[8];
    v104 = &v86[v103];
    v105 = &v87[v103];
    v106 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v107 = *(_QWORD *)(v106 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v107 + 48))(v105, 1, v106))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      v109 = v105[1];
      *v104 = *v105;
      v104[1] = v109;
      v110 = *(int *)(v106 + 24);
      v323 = v4;
      v327 = v5;
      v111 = (char *)v104 + v110;
      v112 = (char *)v105 + v110;
      v312 = *(void (**)(char *, char *, uint64_t))(v319 + 16);
      swift_bridgeObjectRetain();
      v113 = v111;
      v114 = v112;
      v4 = v323;
      v5 = v327;
      v312(v113, v114, v92);
      *(_QWORD *)((char *)v104 + *(int *)(v106 + 28)) = *(_QWORD *)((char *)v105 + *(int *)(v106 + 28));
      v115 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v107 + 56);
      swift_bridgeObjectRetain();
      v115(v104, 0, 1, v106);
    }
    v116 = v12[9];
    v117 = &v86[v116];
    v118 = &v87[v116];
    *(_QWORD *)v117 = *(_QWORD *)v118;
    v117[8] = v118[8];
    v119 = v12[10];
    v120 = &v86[v119];
    v121 = &v87[v119];
    if (v315(&v87[v119], 1, v92))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      v123 = v319;
    }
    else
    {
      v123 = v319;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v319 + 16))(v120, v121, v92);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v319 + 56))(v120, 0, 1, v92);
    }
    v124 = v12[11];
    v125 = &v86[v124];
    v126 = &v87[v124];
    *(_QWORD *)v125 = *(_QWORD *)v126;
    v125[8] = v126[8];
    v127 = v12[12];
    v128 = &v86[v127];
    v129 = &v87[v127];
    if (v315(&v87[v127], 1, v92))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v123 + 16))(v128, v129, v92);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v128, 0, 1, v92);
    }
    v131 = v12[13];
    v132 = &v86[v131];
    v133 = &v87[v131];
    *(_QWORD *)v132 = *(_QWORD *)v133;
    v132[8] = v133[8];
    v134 = v12[14];
    v135 = &v86[v134];
    v136 = &v87[v134];
    if (v315(&v87[v134], 1, v92))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v123 + 16))(v135, v136, v92);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v135, 0, 1, v92);
    }
    v138 = v12[15];
    v139 = &v86[v138];
    v140 = &v87[v138];
    *(_QWORD *)v139 = *(_QWORD *)v140;
    v139[8] = v140[8];
    v141 = v12[16];
    v142 = &v86[v141];
    v143 = &v87[v141];
    if (v315(&v87[v141], 1, v92))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v123 + 16))(v142, v143, v92);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v142, 0, 1, v92);
    }
    v145 = v12[17];
    v146 = &v86[v145];
    v147 = &v87[v145];
    v148 = *((_QWORD *)v147 + 4);
    if (v148 == 1)
    {
      v149 = *((_OWORD *)v147 + 1);
      *(_OWORD *)v146 = *(_OWORD *)v147;
      *((_OWORD *)v146 + 1) = v149;
      *((_QWORD *)v146 + 4) = *((_QWORD *)v147 + 4);
    }
    else
    {
      *(_QWORD *)v146 = *(_QWORD *)v147;
      v146[8] = v147[8];
      *((_QWORD *)v146 + 2) = *((_QWORD *)v147 + 2);
      v146[24] = v147[24];
      *((_QWORD *)v146 + 4) = v148;
      swift_bridgeObjectRetain();
    }
    v150 = v12[18];
    v151 = &v86[v150];
    v152 = &v87[v150];
    *(_QWORD *)v151 = *(_QWORD *)v152;
    v151[8] = v152[8];
    v153 = v12[19];
    v154 = &v86[v153];
    v155 = &v87[v153];
    v156 = sub_1BB86D024();
    v157 = *(_QWORD *)(v156 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v157 + 16))(v154, v155, v156);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v157 + 56))(v154, 0, 1, v156);
    }
    v3 = v333;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v332 + 56))(v86, 0, 1, v12);
    v13 = v330;
  }
  v159 = v3[13];
  *(_QWORD *)(v5 + v3[12]) = *(_QWORD *)(v4 + v3[12]);
  v160 = (_BYTE *)(v5 + v159);
  v161 = (_BYTE *)(v4 + v159);
  swift_bridgeObjectRetain();
  if (v13(v161, 1, v12))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v160 = *(_QWORD *)v161;
    v160[8] = v161[8];
    v163 = v12[5];
    v164 = &v160[v163];
    v165 = &v161[v163];
    v166 = sub_1BB86D078();
    v167 = *(_QWORD *)(v166 - 8);
    v168 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v167 + 48);
    if (v168(v165, 1, v166))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v169 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v167 + 16))(v164, v165, v166);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
    }
    v170 = v12[6];
    v171 = &v160[v170];
    v172 = &v161[v170];
    *(_QWORD *)v171 = *(_QWORD *)v172;
    v171[8] = v172[8];
    v173 = v12[7];
    v174 = &v160[v173];
    v175 = &v161[v173];
    v316 = v168;
    v320 = v167;
    if (v168(&v161[v173], 1, v166))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v167 + 16))(v174, v175, v166);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v174, 0, 1, v166);
    }
    v177 = v12[8];
    v178 = &v160[v177];
    v179 = &v161[v177];
    v180 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v181 = *(_QWORD *)(v180 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v181 + 48))(v179, 1, v180))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
    }
    else
    {
      v183 = v179[1];
      *v178 = *v179;
      v178[1] = v183;
      v184 = *(int *)(v180 + 24);
      v324 = v4;
      v328 = v5;
      v185 = (char *)v178 + v184;
      v186 = (char *)v179 + v184;
      v313 = *(void (**)(char *, char *, uint64_t))(v320 + 16);
      swift_bridgeObjectRetain();
      v187 = v185;
      v188 = v186;
      v4 = v324;
      v5 = v328;
      v313(v187, v188, v166);
      *(_QWORD *)((char *)v178 + *(int *)(v180 + 28)) = *(_QWORD *)((char *)v179 + *(int *)(v180 + 28));
      v189 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v181 + 56);
      swift_bridgeObjectRetain();
      v189(v178, 0, 1, v180);
    }
    v190 = v12[9];
    v191 = &v160[v190];
    v192 = &v161[v190];
    *(_QWORD *)v191 = *(_QWORD *)v192;
    v191[8] = v192[8];
    v193 = v12[10];
    v194 = &v160[v193];
    v195 = &v161[v193];
    if (v316(&v161[v193], 1, v166))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      v197 = v320;
    }
    else
    {
      v197 = v320;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v320 + 16))(v194, v195, v166);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v320 + 56))(v194, 0, 1, v166);
    }
    v198 = v12[11];
    v199 = &v160[v198];
    v200 = &v161[v198];
    *(_QWORD *)v199 = *(_QWORD *)v200;
    v199[8] = v200[8];
    v201 = v12[12];
    v202 = &v160[v201];
    v203 = &v161[v201];
    if (v316(&v161[v201], 1, v166))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v197 + 16))(v202, v203, v166);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v202, 0, 1, v166);
    }
    v205 = v12[13];
    v206 = &v160[v205];
    v207 = &v161[v205];
    *(_QWORD *)v206 = *(_QWORD *)v207;
    v206[8] = v207[8];
    v208 = v12[14];
    v209 = &v160[v208];
    v210 = &v161[v208];
    if (v316(&v161[v208], 1, v166))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v197 + 16))(v209, v210, v166);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v209, 0, 1, v166);
    }
    v212 = v12[15];
    v213 = &v160[v212];
    v214 = &v161[v212];
    *(_QWORD *)v213 = *(_QWORD *)v214;
    v213[8] = v214[8];
    v215 = v12[16];
    v216 = &v160[v215];
    v217 = &v161[v215];
    if (v316(&v161[v215], 1, v166))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v197 + 16))(v216, v217, v166);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v216, 0, 1, v166);
    }
    v219 = v12[17];
    v220 = &v160[v219];
    v221 = &v161[v219];
    v222 = *((_QWORD *)v221 + 4);
    if (v222 == 1)
    {
      v223 = *((_OWORD *)v221 + 1);
      *(_OWORD *)v220 = *(_OWORD *)v221;
      *((_OWORD *)v220 + 1) = v223;
      *((_QWORD *)v220 + 4) = *((_QWORD *)v221 + 4);
    }
    else
    {
      *(_QWORD *)v220 = *(_QWORD *)v221;
      v220[8] = v221[8];
      *((_QWORD *)v220 + 2) = *((_QWORD *)v221 + 2);
      v220[24] = v221[24];
      *((_QWORD *)v220 + 4) = v222;
      swift_bridgeObjectRetain();
    }
    v224 = v12[18];
    v225 = &v160[v224];
    v226 = &v161[v224];
    *(_QWORD *)v225 = *(_QWORD *)v226;
    v225[8] = v226[8];
    v227 = v12[19];
    v228 = &v160[v227];
    v229 = &v161[v227];
    v230 = sub_1BB86D024();
    v231 = *(_QWORD *)(v230 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v231 + 48))(v229, 1, v230))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v231 + 16))(v228, v229, v230);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v231 + 56))(v228, 0, 1, v230);
    }
    v3 = v333;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v332 + 56))(v160, 0, 1, v12);
    v13 = v330;
  }
  v233 = v3[14];
  v234 = (_BYTE *)(v5 + v233);
  v235 = (_BYTE *)(v4 + v233);
  if (v13(v4 + v233, 1, v12))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v236 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v234 = *(_QWORD *)v235;
    v234[8] = v235[8];
    v237 = v12[5];
    v238 = &v234[v237];
    v239 = &v235[v237];
    v240 = sub_1BB86D078();
    v241 = *(_QWORD *)(v240 - 8);
    v242 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v241 + 48);
    if (v242(v239, 1, v240))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v241 + 16))(v238, v239, v240);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v241 + 56))(v238, 0, 1, v240);
    }
    v244 = v12[6];
    v245 = &v234[v244];
    v246 = &v235[v244];
    *(_QWORD *)v245 = *(_QWORD *)v246;
    v245[8] = v246[8];
    v247 = v12[7];
    v248 = &v234[v247];
    v249 = &v235[v247];
    v331 = v241;
    v321 = v242;
    if (v242(&v235[v247], 1, v240))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v241 + 16))(v248, v249, v240);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v241 + 56))(v248, 0, 1, v240);
    }
    v251 = v12[8];
    v252 = &v234[v251];
    v253 = &v235[v251];
    v254 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v255 = *(_QWORD *)(v254 - 8);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v255 + 48))(v253, 1, v254))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v252, v253, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
    }
    else
    {
      v257 = v253[1];
      *v252 = *v253;
      v252[1] = v257;
      v258 = *(int *)(v254 + 24);
      v325 = v4;
      v329 = v5;
      v259 = (char *)v252 + v258;
      v260 = (char *)v253 + v258;
      v317 = *(void (**)(char *, char *, uint64_t))(v331 + 16);
      swift_bridgeObjectRetain();
      v261 = v259;
      v262 = v260;
      v4 = v325;
      v5 = v329;
      v317(v261, v262, v240);
      *(_QWORD *)((char *)v252 + *(int *)(v254 + 28)) = *(_QWORD *)((char *)v253 + *(int *)(v254 + 28));
      v263 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v255 + 56);
      swift_bridgeObjectRetain();
      v263(v252, 0, 1, v254);
    }
    v264 = v12[9];
    v265 = &v234[v264];
    v266 = &v235[v264];
    *(_QWORD *)v265 = *(_QWORD *)v266;
    v265[8] = v266[8];
    v267 = v12[10];
    v268 = &v234[v267];
    v269 = &v235[v267];
    if (v321(&v235[v267], 1, v240))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
      v271 = v331;
    }
    else
    {
      v271 = v331;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v331 + 16))(v268, v269, v240);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v331 + 56))(v268, 0, 1, v240);
    }
    v272 = v12[11];
    v273 = &v234[v272];
    v274 = &v235[v272];
    *(_QWORD *)v273 = *(_QWORD *)v274;
    v273[8] = v274[8];
    v275 = v12[12];
    v276 = &v234[v275];
    v277 = &v235[v275];
    if (v321(&v235[v275], 1, v240))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v278 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v271 + 16))(v276, v277, v240);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v276, 0, 1, v240);
    }
    v279 = v12[13];
    v280 = &v234[v279];
    v281 = &v235[v279];
    *(_QWORD *)v280 = *(_QWORD *)v281;
    v280[8] = v281[8];
    v282 = v12[14];
    v283 = &v234[v282];
    v284 = &v235[v282];
    if (v321(&v235[v282], 1, v240))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v283, v284, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v271 + 16))(v283, v284, v240);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v283, 0, 1, v240);
    }
    v286 = v12[15];
    v287 = &v234[v286];
    v288 = &v235[v286];
    *(_QWORD *)v287 = *(_QWORD *)v288;
    v287[8] = v288[8];
    v289 = v12[16];
    v290 = &v234[v289];
    v291 = &v235[v289];
    if (v321(&v235[v289], 1, v240))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v290, v291, *(_QWORD *)(*(_QWORD *)(v292 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v271 + 16))(v290, v291, v240);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v290, 0, 1, v240);
    }
    v293 = v12[17];
    v294 = &v234[v293];
    v295 = &v235[v293];
    v296 = *((_QWORD *)v295 + 4);
    if (v296 == 1)
    {
      v297 = *((_OWORD *)v295 + 1);
      *(_OWORD *)v294 = *(_OWORD *)v295;
      *((_OWORD *)v294 + 1) = v297;
      *((_QWORD *)v294 + 4) = *((_QWORD *)v295 + 4);
    }
    else
    {
      *(_QWORD *)v294 = *(_QWORD *)v295;
      v294[8] = v295[8];
      *((_QWORD *)v294 + 2) = *((_QWORD *)v295 + 2);
      v294[24] = v295[24];
      *((_QWORD *)v294 + 4) = v296;
      swift_bridgeObjectRetain();
    }
    v298 = v12[18];
    v299 = &v234[v298];
    v300 = &v235[v298];
    *(_QWORD *)v299 = *(_QWORD *)v300;
    v299[8] = v300[8];
    v301 = v12[19];
    v302 = &v234[v301];
    v303 = &v235[v301];
    v304 = sub_1BB86D024();
    v305 = *(_QWORD *)(v304 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v305 + 48))(v303, 1, v304))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v302, v303, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v305 + 16))(v302, v303, v304);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v305 + 56))(v302, 0, 1, v304);
    }
    v3 = v333;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v332 + 56))(v234, 0, 1, v12);
  }
  v307 = v3[16];
  *(_QWORD *)(v5 + v3[15]) = *(_QWORD *)(v4 + v3[15]);
  *(_BYTE *)(v5 + v307) = *(_BYTE *)(v4 + v307);
  v308 = v3[18];
  *(_BYTE *)(v5 + v3[17]) = *(_BYTE *)(v4 + v3[17]);
  *(_QWORD *)(v5 + v308) = *(_QWORD *)(v4 + v308);
  v309 = v3[20];
  *(_QWORD *)(v5 + v3[19]) = *(_QWORD *)(v4 + v3[19]);
  *(_BYTE *)(v5 + v309) = *(_BYTE *)(v4 + v309);
  *(_WORD *)(v5 + v3[21]) = *(_WORD *)(v4 + v3[21]);
  swift_bridgeObjectRetain();
  return v5;
}

_QWORD *assignWithCopy for FeedClusteringRequest(_QWORD *a1, uint64_t a2, int *a3)
{
  _QWORD *v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t (*v10)(_BYTE *, uint64_t, int *);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int (*v20)(_BYTE *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(_BYTE *, uint64_t, uint64_t);
  int v29;
  int v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  void (*v50)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  _BYTE *v72;
  _BYTE *v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  _BYTE *v84;
  _BYTE *v85;
  __int128 v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  _BYTE *v92;
  uint64_t v93;
  uint64_t v94;
  _BYTE *v95;
  _BYTE *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  _BYTE *v103;
  uint64_t v104;
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t (*v116)(_QWORD *, uint64_t, uint64_t);
  int v117;
  int v118;
  uint64_t (*v119)(_BYTE *, uint64_t, uint64_t);
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  void (*v125)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  _BYTE *v132;
  int v133;
  int v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BYTE *v138;
  _BYTE *v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  _BYTE *v148;
  _BYTE *v149;
  uint64_t v150;
  uint64_t v151;
  _BYTE *v152;
  _BYTE *v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  _BYTE *v158;
  _BYTE *v159;
  uint64_t v160;
  uint64_t v161;
  _BYTE *v162;
  _BYTE *v163;
  int v164;
  int v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _BYTE *v169;
  uint64_t v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  __int128 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  _BYTE *v182;
  uint64_t v183;
  uint64_t v184;
  _BYTE *v185;
  _BYTE *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t (*v189)(_BYTE *, uint64_t, uint64_t);
  int v190;
  int v191;
  uint64_t v192;
  uint64_t v193;
  _BYTE *v194;
  _BYTE *v195;
  int v196;
  int v197;
  unint64_t *v198;
  void (*v199)(uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  _BYTE *v203;
  _BYTE *v204;
  uint64_t v205;
  uint64_t v206;
  unsigned int (*v207)(_BYTE *, uint64_t, uint64_t);
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _BYTE *v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t (*v215)(_BYTE *, uint64_t, uint64_t);
  int v216;
  int v217;
  uint64_t v218;
  _BYTE *v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  _BYTE *v223;
  _BYTE *v224;
  uint64_t v225;
  uint64_t v226;
  _QWORD *v227;
  _QWORD *v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  char *v235;
  char *v236;
  void (*v237)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v238;
  _BYTE *v239;
  _BYTE *v240;
  uint64_t v241;
  uint64_t v242;
  _BYTE *v243;
  _BYTE *v244;
  uint64_t v245;
  uint64_t v246;
  _BYTE *v247;
  _BYTE *v248;
  uint64_t v249;
  uint64_t v250;
  _BYTE *v251;
  _BYTE *v252;
  uint64_t v253;
  uint64_t v254;
  _BYTE *v255;
  _BYTE *v256;
  uint64_t v257;
  uint64_t v258;
  _BYTE *v259;
  _BYTE *v260;
  uint64_t v261;
  uint64_t v262;
  _BYTE *v263;
  _BYTE *v264;
  uint64_t v265;
  uint64_t v266;
  _BYTE *v267;
  _BYTE *v268;
  uint64_t v269;
  uint64_t v270;
  _BYTE *v271;
  _BYTE *v272;
  __int128 v273;
  __int128 v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _BYTE *v278;
  _BYTE *v279;
  uint64_t v280;
  uint64_t v281;
  _BYTE *v282;
  _BYTE *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  _BYTE *v288;
  _BYTE *v289;
  int v290;
  int v291;
  unint64_t *v292;
  void (*v293)(uint64_t);
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  _BYTE *v297;
  _BYTE *v298;
  uint64_t v299;
  uint64_t v300;
  unsigned int (*v301)(_BYTE *, uint64_t, uint64_t);
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  _BYTE *v305;
  _BYTE *v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t (*v309)(_BYTE *, uint64_t, uint64_t);
  int v310;
  int v311;
  uint64_t v312;
  _BYTE *v313;
  _BYTE *v314;
  uint64_t v315;
  uint64_t v316;
  _BYTE *v317;
  _BYTE *v318;
  uint64_t v319;
  uint64_t v320;
  _QWORD *v321;
  _QWORD *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  char *v329;
  char *v330;
  void (*v331)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v332;
  _BYTE *v333;
  _BYTE *v334;
  uint64_t v335;
  uint64_t v336;
  _BYTE *v337;
  _BYTE *v338;
  uint64_t v339;
  uint64_t v340;
  _BYTE *v341;
  _BYTE *v342;
  uint64_t v343;
  uint64_t v344;
  _BYTE *v345;
  _BYTE *v346;
  uint64_t v347;
  uint64_t v348;
  _BYTE *v349;
  _BYTE *v350;
  uint64_t v351;
  uint64_t v352;
  _BYTE *v353;
  _BYTE *v354;
  uint64_t v355;
  uint64_t v356;
  _BYTE *v357;
  _BYTE *v358;
  uint64_t v359;
  uint64_t v360;
  _BYTE *v361;
  _BYTE *v362;
  uint64_t v363;
  uint64_t v364;
  _BYTE *v365;
  _BYTE *v366;
  __int128 v367;
  __int128 v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  _BYTE *v372;
  _BYTE *v373;
  uint64_t v374;
  uint64_t v375;
  _BYTE *v376;
  _BYTE *v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  _BYTE *v383;
  int v384;
  int v385;
  uint64_t v386;
  size_t v387;
  void *v388;
  const void *v389;
  uint64_t v390;
  uint64_t v391;
  void *v392;
  _BYTE *v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int (*v396)(_BYTE *, uint64_t, uint64_t);
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  void *v400;
  _BYTE *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t (*v404)(void *, uint64_t, uint64_t);
  int v405;
  int v406;
  uint64_t v407;
  uint64_t v408;
  _BYTE *v409;
  uint64_t v410;
  uint64_t v411;
  void *v412;
  _BYTE *v413;
  uint64_t v414;
  uint64_t v415;
  _QWORD *v416;
  _QWORD *v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  char *v422;
  char *v423;
  char *v424;
  void (*v425)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v426;
  uint64_t v427;
  _BYTE *v428;
  uint64_t v429;
  uint64_t v430;
  void *v431;
  _BYTE *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  _BYTE *v436;
  uint64_t v437;
  uint64_t v438;
  void *v439;
  _BYTE *v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  _BYTE *v444;
  uint64_t v445;
  uint64_t v446;
  void *v447;
  _BYTE *v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  _BYTE *v452;
  uint64_t v453;
  uint64_t v454;
  void *v455;
  _BYTE *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  _BYTE *v460;
  __int128 v461;
  __int128 v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  _BYTE *v467;
  uint64_t v468;
  uint64_t v469;
  void *v470;
  _BYTE *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v476;
  uint64_t v477;
  _BYTE *v478;
  _BYTE *v479;
  uint64_t v480;
  uint64_t v481;
  _BYTE *v482;
  _BYTE *v483;
  int v484;
  int v485;
  uint64_t v486;
  uint64_t v487;
  _BYTE *v488;
  _BYTE *v489;
  uint64_t v490;
  uint64_t v491;
  _BYTE *v492;
  _BYTE *v493;
  int v494;
  int v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  _BYTE *v499;
  uint64_t v500;
  uint64_t v501;
  void *v502;
  _BYTE *v503;
  int v504;
  int v505;
  uint64_t v506;
  uint64_t v507;
  _QWORD *v508;
  _QWORD *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t (*v512)(_QWORD *, uint64_t, uint64_t);
  int v513;
  int v514;
  uint64_t (*v515)(_BYTE *, uint64_t, uint64_t);
  uint64_t v516;
  uint64_t v517;
  _QWORD *v518;
  _QWORD *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t (*v522)(_QWORD *, uint64_t, uint64_t);
  int v523;
  int v524;
  uint64_t (*v525)(_BYTE *, uint64_t, uint64_t);
  uint64_t v526;
  uint64_t v527;
  _QWORD *v528;
  _QWORD *v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t (*v532)(_QWORD *, uint64_t, uint64_t);
  int v533;
  int v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  char *v539;
  char *v540;
  void (*v541)(char *, char *, uint64_t);
  void (*v542)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v543;
  char *v544;
  char *v545;
  void (*v546)(char *, char *, uint64_t);
  void (*v547)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v548;
  char *v549;
  void (*v550)(char *, char *, uint64_t);
  void (*v551)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v552;
  _BYTE *v553;
  _BYTE *v554;
  uint64_t v555;
  uint64_t v556;
  _BYTE *v557;
  _BYTE *v558;
  int v559;
  int v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  _BYTE *v564;
  _BYTE *v565;
  uint64_t v566;
  uint64_t v567;
  _BYTE *v568;
  _BYTE *v569;
  int v570;
  int v571;
  uint64_t v572;
  uint64_t v573;
  _BYTE *v574;
  _BYTE *v575;
  uint64_t v576;
  uint64_t v577;
  _BYTE *v578;
  _BYTE *v579;
  int v580;
  int v581;
  uint64_t v582;
  uint64_t v583;
  _BYTE *v584;
  _BYTE *v585;
  uint64_t v586;
  uint64_t v587;
  _BYTE *v588;
  _BYTE *v589;
  int v590;
  int v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  _BYTE *v595;
  uint64_t v596;
  uint64_t v597;
  __int128 v598;
  __int128 v599;
  uint64_t v600;
  __int128 v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  _BYTE *v607;
  _BYTE *v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t (*v613)(_BYTE *, uint64_t, uint64_t);
  int v614;
  int v615;
  uint64_t v616;
  _BYTE *v617;
  _BYTE *v618;
  uint64_t v619;
  uint64_t v620;
  _BYTE *v621;
  _BYTE *v622;
  int v623;
  int v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  _BYTE *v628;
  _BYTE *v629;
  uint64_t v630;
  uint64_t v631;
  _BYTE *v632;
  _BYTE *v633;
  int v634;
  int v635;
  uint64_t v636;
  uint64_t v637;
  _BYTE *v638;
  _BYTE *v639;
  uint64_t v640;
  uint64_t v641;
  _BYTE *v642;
  _BYTE *v643;
  int v644;
  int v645;
  uint64_t v646;
  uint64_t v647;
  _BYTE *v648;
  _BYTE *v649;
  uint64_t v650;
  uint64_t v651;
  _BYTE *v652;
  _BYTE *v653;
  int v654;
  int v655;
  uint64_t v656;
  uint64_t v657;
  uint64_t v658;
  _BYTE *v659;
  uint64_t v660;
  uint64_t v661;
  __int128 v662;
  __int128 v663;
  uint64_t v664;
  __int128 v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  _BYTE *v671;
  _BYTE *v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  uint64_t (*v677)(_BYTE *, uint64_t, uint64_t);
  int v678;
  int v679;
  uint64_t v680;
  uint64_t v681;
  _BYTE *v682;
  uint64_t v683;
  uint64_t v684;
  void *v685;
  _BYTE *v686;
  int v687;
  int v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  _BYTE *v693;
  uint64_t v694;
  uint64_t v695;
  void *v696;
  _BYTE *v697;
  int v698;
  int v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  _BYTE *v703;
  uint64_t v704;
  uint64_t v705;
  void *v706;
  _BYTE *v707;
  int v708;
  int v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  _BYTE *v713;
  uint64_t v714;
  uint64_t v715;
  void *v716;
  _BYTE *v717;
  int v718;
  int v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  _BYTE *v723;
  uint64_t v724;
  uint64_t v725;
  __int128 v726;
  __int128 v727;
  uint64_t v728;
  __int128 v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  uint64_t v735;
  _BYTE *v736;
  uint64_t v737;
  uint64_t v738;
  void *v739;
  _BYTE *v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t (*v743)(void *, uint64_t, uint64_t);
  int v744;
  int v745;
  uint64_t v746;
  void (*v747)(char *, char *, uint64_t);
  uint64_t (*v748)(_BYTE *, uint64_t, uint64_t);
  void (*v749)(char *, char *, uint64_t);
  void (*v750)(char *, char *, uint64_t);
  uint64_t v751;
  uint64_t v752;
  unsigned int (*v753)(_BYTE *, uint64_t, uint64_t);
  uint64_t v754;
  uint64_t (*v755)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v756)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v757)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v758)(_BYTE *, uint64_t, uint64_t);
  void (*v759)(char *, char *, uint64_t);
  char *v760;
  _QWORD *v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t (*v764)(_BYTE *, uint64_t, int *);
  unsigned int (*v765)(_BYTE *, uint64_t, uint64_t);
  int *v766;
  int *v767;
  uint64_t v768;

  v5 = a1;
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[2] = *(_QWORD *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v5[3] = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + 32) = *(_BYTE *)(a2 + 32);
  v5[5] = *(_QWORD *)(a2 + 40);
  v6 = a3[10];
  v7 = (char *)v5 + v6;
  v768 = a2;
  v8 = (_BYTE *)(a2 + v6);
  v9 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v762 = *((_QWORD *)v9 - 1);
  v10 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v762 + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  v766 = a3;
  v767 = v9;
  v761 = v5;
  v764 = v10;
  if (!v11)
  {
    if (v12)
    {
      sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FeedClusteringOptions);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_95;
    }
    v22 = *(_QWORD *)v8;
    v7[8] = v8[8];
    *(_QWORD *)v7 = v22;
    v23 = v9[5];
    v24 = &v7[v23];
    v25 = &v8[v23];
    v26 = sub_1BB86D078();
    v27 = *(_QWORD *)(v26 - 8);
    v28 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v27 + 48);
    v29 = v28(v24, 1, v26);
    v30 = v28(v25, 1, v26);
    if (v29)
    {
      if (!v30)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        goto LABEL_41;
      }
    }
    else
    {
      if (!v30)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 24))(v24, v25, v26);
LABEL_41:
        v101 = v767[6];
        v102 = &v7[v101];
        v103 = &v8[v101];
        v104 = *(_QWORD *)v103;
        v102[8] = v103[8];
        *(_QWORD *)v102 = v104;
        v105 = v767[7];
        v106 = &v7[v105];
        v107 = &v8[v105];
        v108 = v28(&v7[v105], 1, v26);
        v109 = v28(v107, 1, v26);
        v748 = v28;
        v754 = v27;
        if (v108)
        {
          if (!v109)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 16))(v106, v107, v26);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v106, 0, 1, v26);
            goto LABEL_47;
          }
        }
        else
        {
          if (!v109)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v27 + 24))(v106, v107, v26);
LABEL_47:
            v111 = v767[8];
            v112 = &v7[v111];
            v113 = &v8[v111];
            v114 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v115 = *(_QWORD *)(v114 - 8);
            v116 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v115 + 48);
            v117 = v116(v112, 1, v114);
            v118 = v116(v113, 1, v114);
            if (v117)
            {
              v119 = v748;
              if (v118)
                goto LABEL_52;
              *v112 = *v113;
              v112[1] = v113[1];
              v121 = *(int *)(v114 + 24);
              v122 = (char *)v112 + v121;
              v123 = (char *)v113 + v121;
              v124 = *(void (**)(char *, char *, uint64_t))(v754 + 16);
              swift_bridgeObjectRetain();
              v124(v122, v123, v26);
              v119 = v748;
              *(_QWORD *)((char *)v112 + *(int *)(v114 + 28)) = *(_QWORD *)((char *)v113 + *(int *)(v114 + 28));
              v125 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v115 + 56);
              swift_bridgeObjectRetain();
              v125(v112, 0, 1, v114);
            }
            else
            {
              v119 = v748;
              if (v118)
              {
                sub_1BA4A2E80((uint64_t)v112, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_52:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v112, v113, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
                goto LABEL_57;
              }
              *v112 = *v113;
              v112[1] = v113[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v754 + 24))((char *)v112 + *(int *)(v114 + 24), (char *)v113 + *(int *)(v114 + 24), v26);
              *(_QWORD *)((char *)v112 + *(int *)(v114 + 28)) = *(_QWORD *)((char *)v113 + *(int *)(v114 + 28));
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
LABEL_57:
            v9 = v767;
            v126 = v767[9];
            v127 = &v7[v126];
            v128 = &v8[v126];
            v129 = *(_QWORD *)v128;
            v127[8] = v128[8];
            *(_QWORD *)v127 = v129;
            v130 = v767[10];
            v131 = &v7[v130];
            v132 = &v8[v130];
            v133 = v119(&v7[v130], 1, v26);
            v134 = v119(v132, 1, v26);
            if (v133)
            {
              v135 = v754;
              if (!v134)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v754 + 16))(v131, v132, v26);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v754 + 56))(v131, 0, 1, v26);
                goto LABEL_63;
              }
            }
            else
            {
              v135 = v754;
              if (!v134)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v754 + 24))(v131, v132, v26);
LABEL_63:
                v137 = v767[11];
                v138 = &v7[v137];
                v139 = &v8[v137];
                v140 = *(_QWORD *)v139;
                v138[8] = v139[8];
                *(_QWORD *)v138 = v140;
                v141 = v767[12];
                v142 = &v7[v141];
                v143 = &v8[v141];
                v144 = v119(&v7[v141], 1, v26);
                v145 = v119(v143, 1, v26);
                if (v144)
                {
                  if (!v145)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v135 + 16))(v142, v143, v26);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v142, 0, 1, v26);
                    goto LABEL_69;
                  }
                }
                else
                {
                  if (!v145)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v135 + 24))(v142, v143, v26);
LABEL_69:
                    v147 = v767[13];
                    v148 = &v7[v147];
                    v149 = &v8[v147];
                    v150 = *(_QWORD *)v149;
                    v148[8] = v149[8];
                    *(_QWORD *)v148 = v150;
                    v151 = v767[14];
                    v152 = &v7[v151];
                    v153 = &v8[v151];
                    v154 = v119(&v7[v151], 1, v26);
                    v155 = v119(v153, 1, v26);
                    if (v154)
                    {
                      if (!v155)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v135 + 16))(v152, v153, v26);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v152, 0, 1, v26);
                        goto LABEL_75;
                      }
                    }
                    else
                    {
                      if (!v155)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v135 + 24))(v152, v153, v26);
LABEL_75:
                        v157 = v767[15];
                        v158 = &v7[v157];
                        v159 = &v8[v157];
                        v160 = *(_QWORD *)v159;
                        v158[8] = v159[8];
                        *(_QWORD *)v158 = v160;
                        v161 = v767[16];
                        v162 = &v7[v161];
                        v163 = &v8[v161];
                        v164 = v119(&v7[v161], 1, v26);
                        v165 = v119(v163, 1, v26);
                        if (v164)
                        {
                          if (!v165)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v135 + 16))(v162, v163, v26);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v162, 0, 1, v26);
                            goto LABEL_81;
                          }
                        }
                        else
                        {
                          if (!v165)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v135 + 24))(v162, v163, v26);
LABEL_81:
                            v167 = v767[17];
                            v168 = (uint64_t)&v7[v167];
                            v169 = &v8[v167];
                            v170 = *(_QWORD *)&v7[v167 + 32];
                            v171 = *(_QWORD *)&v8[v167 + 32];
                            v10 = v764;
                            if (v170 == 1)
                            {
                              if (v171 == 1)
                              {
                                v172 = *(_OWORD *)v169;
                                v173 = *((_OWORD *)v169 + 1);
                                *(_QWORD *)(v168 + 32) = *((_QWORD *)v169 + 4);
                                *(_OWORD *)v168 = v172;
                                *(_OWORD *)(v168 + 16) = v173;
                              }
                              else
                              {
                                v176 = *(_QWORD *)v169;
                                *(_BYTE *)(v168 + 8) = v169[8];
                                *(_QWORD *)v168 = v176;
                                v177 = *((_QWORD *)v169 + 2);
                                *(_BYTE *)(v168 + 24) = v169[24];
                                *(_QWORD *)(v168 + 16) = v177;
                                *(_QWORD *)(v168 + 32) = *((_QWORD *)v169 + 4);
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v171 == 1)
                            {
                              sub_1BAF10C4C(v168);
                              v174 = *((_QWORD *)v169 + 4);
                              v175 = *((_OWORD *)v169 + 1);
                              *(_OWORD *)v168 = *(_OWORD *)v169;
                              *(_OWORD *)(v168 + 16) = v175;
                              *(_QWORD *)(v168 + 32) = v174;
                            }
                            else
                            {
                              v178 = *(_QWORD *)v169;
                              *(_BYTE *)(v168 + 8) = v169[8];
                              *(_QWORD *)v168 = v178;
                              v179 = *((_QWORD *)v169 + 2);
                              *(_BYTE *)(v168 + 24) = v169[24];
                              *(_QWORD *)(v168 + 16) = v179;
                              *(_QWORD *)(v168 + 32) = *((_QWORD *)v169 + 4);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                            }
                            a3 = v766;
                            v180 = v767[18];
                            v181 = &v7[v180];
                            v182 = &v8[v180];
                            v183 = *(_QWORD *)v182;
                            v181[8] = v182[8];
                            *(_QWORD *)v181 = v183;
                            v184 = v767[19];
                            v185 = &v7[v184];
                            v186 = &v8[v184];
                            v187 = sub_1BB86D024();
                            v188 = *(_QWORD *)(v187 - 8);
                            v189 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v188 + 48);
                            v190 = v189(v185, 1, v187);
                            v191 = v189(v186, 1, v187);
                            if (v190)
                            {
                              if (!v191)
                              {
                                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v188 + 16))(v185, v186, v187);
                                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v188 + 56))(v185, 0, 1, v187);
LABEL_94:
                                v5 = v761;
                                goto LABEL_95;
                              }
                            }
                            else
                            {
                              if (!v191)
                              {
                                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v188 + 24))(v185, v186, v187);
                                goto LABEL_94;
                              }
                              (*(void (**)(_BYTE *, uint64_t))(v188 + 8))(v185, v187);
                            }
                            sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
                            memcpy(v185, v186, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
                            goto LABEL_94;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v135 + 8))(v162, v26);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v166 - 8) + 64));
                        goto LABEL_81;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v135 + 8))(v152, v26);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
                    goto LABEL_75;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v135 + 8))(v142, v26);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
                goto LABEL_69;
              }
              (*(void (**)(_BYTE *, uint64_t))(v754 + 8))(v131, v26);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
            goto LABEL_63;
          }
          (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v106, v26);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
        goto LABEL_47;
      }
      (*(void (**)(_BYTE *, uint64_t))(v27 + 8))(v24, v26);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
    goto LABEL_41;
  }
  if (v12)
    goto LABEL_6;
  v14 = *(_QWORD *)v8;
  v7[8] = v8[8];
  *(_QWORD *)v7 = v14;
  v15 = v9[5];
  v16 = &v7[v15];
  v17 = &v8[v15];
  v18 = sub_1BB86D078();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v19 + 48);
  if (v20(v17, 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v16, v17, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  v31 = v9[6];
  v32 = &v7[v31];
  v33 = &v8[v31];
  v34 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *(_QWORD *)v32 = v34;
  v35 = v9[7];
  v36 = &v7[v35];
  v37 = &v8[v35];
  if (v20(&v8[v35], 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v36, v37, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v36, 0, 1, v18);
  }
  v39 = v9[8];
  v40 = &v7[v39];
  v41 = &v8[v39];
  v42 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v43 = *(_QWORD *)(v42 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
  }
  else
  {
    *v40 = *v41;
    v40[1] = v41[1];
    v45 = *(int *)(v42 + 24);
    v46 = (char *)v40 + v45;
    v753 = v20;
    v47 = (char *)v41 + v45;
    v747 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    swift_bridgeObjectRetain();
    v48 = v46;
    v49 = v47;
    v20 = v753;
    v5 = v761;
    v747(v48, v49, v18);
    *(_QWORD *)((char *)v40 + *(int *)(v42 + 28)) = *(_QWORD *)((char *)v41 + *(int *)(v42 + 28));
    v50 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v43 + 56);
    swift_bridgeObjectRetain();
    v50(v40, 0, 1, v42);
  }
  v9 = v767;
  v51 = v767[9];
  v52 = &v7[v51];
  v53 = &v8[v51];
  v54 = *(_QWORD *)v53;
  v52[8] = v53[8];
  *(_QWORD *)v52 = v54;
  v55 = v767[10];
  v56 = &v7[v55];
  v57 = &v8[v55];
  if (v20(&v8[v55], 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v56, v57, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v56, 0, 1, v18);
  }
  v59 = v767[11];
  v60 = &v7[v59];
  v61 = &v8[v59];
  v62 = *(_QWORD *)v61;
  v60[8] = v61[8];
  *(_QWORD *)v60 = v62;
  v63 = v767[12];
  v64 = &v7[v63];
  v65 = &v8[v63];
  if (v20(&v8[v63], 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v64, v65, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v64, 0, 1, v18);
  }
  v67 = v767[13];
  v68 = &v7[v67];
  v69 = &v8[v67];
  v70 = *(_QWORD *)v69;
  v68[8] = v69[8];
  *(_QWORD *)v68 = v70;
  v71 = v767[14];
  v72 = &v7[v71];
  v73 = &v8[v71];
  if (v20(&v8[v71], 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v72, v73, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v72, 0, 1, v18);
  }
  v75 = v767[15];
  v76 = &v7[v75];
  v77 = &v8[v75];
  v78 = *(_QWORD *)v77;
  v76[8] = v77[8];
  *(_QWORD *)v76 = v78;
  v79 = v767[16];
  v80 = &v7[v79];
  v81 = &v8[v79];
  if (v20(&v8[v79], 1, v18))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v19 + 16))(v80, v81, v18);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v80, 0, 1, v18);
  }
  v83 = v767[17];
  v84 = &v7[v83];
  v85 = &v8[v83];
  v10 = v764;
  if (*((_QWORD *)v85 + 4) == 1)
  {
    v86 = *(_OWORD *)v85;
    v87 = *((_OWORD *)v85 + 1);
    *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    *(_OWORD *)v84 = v86;
    *((_OWORD *)v84 + 1) = v87;
  }
  else
  {
    v88 = *(_QWORD *)v85;
    v84[8] = v85[8];
    *(_QWORD *)v84 = v88;
    v89 = *((_QWORD *)v85 + 2);
    v84[24] = v85[24];
    *((_QWORD *)v84 + 2) = v89;
    *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    swift_bridgeObjectRetain();
  }
  v90 = v767[18];
  v91 = &v7[v90];
  v92 = &v8[v90];
  v93 = *(_QWORD *)v92;
  v91[8] = v92[8];
  *(_QWORD *)v91 = v93;
  v94 = v767[19];
  v95 = &v7[v94];
  v96 = &v8[v94];
  v97 = sub_1BB86D024();
  v98 = *(_QWORD *)(v97 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v98 + 16))(v95, v96, v97);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v95, 0, 1, v97);
  }
  a3 = v766;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v762 + 56))(v7, 0, 1, v767);
LABEL_95:
  v193 = a3[11];
  v194 = (char *)v5 + v193;
  v195 = (_BYTE *)(v768 + v193);
  v196 = v10((_BYTE *)v5 + v193, 1, v9);
  v197 = v10(v195, 1, v9);
  if (!v196)
  {
    if (v197)
    {
      sub_1BA4A2E80((uint64_t)v194, type metadata accessor for FeedClusteringOptions);
      v198 = &qword_1ED3A4D70;
      v199 = (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions;
      goto LABEL_100;
    }
    v209 = *(_QWORD *)v195;
    v194[8] = v195[8];
    *(_QWORD *)v194 = v209;
    v210 = v9[5];
    v211 = &v194[v210];
    v212 = &v195[v210];
    v213 = sub_1BB86D078();
    v214 = *(_QWORD *)(v213 - 8);
    v215 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v214 + 48);
    v216 = v215(v211, 1, v213);
    v755 = v215;
    v217 = v215(v212, 1, v213);
    if (v216)
    {
      if (!v217)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v214 + 16))(v211, v212, v213);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v211, 0, 1, v213);
        goto LABEL_211;
      }
    }
    else
    {
      if (!v217)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v214 + 24))(v211, v212, v213);
LABEL_211:
        v477 = v9[6];
        v478 = &v194[v477];
        v479 = &v195[v477];
        v480 = *(_QWORD *)v479;
        v478[8] = v479[8];
        *(_QWORD *)v478 = v480;
        v481 = v9[7];
        v482 = &v194[v481];
        v483 = &v195[v481];
        v484 = v215(&v194[v481], 1, v213);
        v485 = v215(v483, 1, v213);
        v751 = v214;
        if (v484)
        {
          if (!v485)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v214 + 16))(v482, v483, v213);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v482, 0, 1, v213);
            goto LABEL_229;
          }
        }
        else
        {
          if (!v485)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v214 + 24))(v482, v483, v213);
LABEL_229:
            v507 = v9[8];
            v508 = &v194[v507];
            v509 = &v195[v507];
            v510 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v511 = *(_QWORD *)(v510 - 8);
            v512 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v511 + 48);
            v513 = v512(v508, 1, v510);
            v514 = v512(v509, 1, v510);
            if (v513)
            {
              v515 = v215;
              if (v514)
                goto LABEL_246;
              *v508 = *v509;
              v508[1] = v509[1];
              v538 = *(int *)(v510 + 24);
              v539 = (char *)v508 + v538;
              v540 = (char *)v509 + v538;
              v541 = *(void (**)(char *, char *, uint64_t))(v751 + 16);
              swift_bridgeObjectRetain();
              v541(v539, v540, v213);
              v515 = v755;
              *(_QWORD *)((char *)v508 + *(int *)(v510 + 28)) = *(_QWORD *)((char *)v509 + *(int *)(v510 + 28));
              v542 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v511 + 56);
              swift_bridgeObjectRetain();
              v542(v508, 0, 1, v510);
            }
            else
            {
              v515 = v215;
              if (v514)
              {
                sub_1BA4A2E80((uint64_t)v508, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_246:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v508, v509, *(_QWORD *)(*(_QWORD *)(v535 - 8) + 64));
                goto LABEL_268;
              }
              *v508 = *v509;
              v508[1] = v509[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v751 + 24))((char *)v508 + *(int *)(v510 + 24), (char *)v509 + *(int *)(v510 + 24), v213);
              *(_QWORD *)((char *)v508 + *(int *)(v510 + 28)) = *(_QWORD *)((char *)v509 + *(int *)(v510 + 28));
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
LABEL_268:
            v9 = v767;
            v552 = v767[9];
            v553 = &v194[v552];
            v554 = &v195[v552];
            v555 = *(_QWORD *)v554;
            v553[8] = v554[8];
            *(_QWORD *)v553 = v555;
            v556 = v767[10];
            v557 = &v194[v556];
            v558 = &v195[v556];
            v559 = v515(&v194[v556], 1, v213);
            v560 = v515(v558, 1, v213);
            if (v559)
            {
              v561 = v751;
              if (!v560)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v751 + 16))(v557, v558, v213);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v557, 0, 1, v213);
                goto LABEL_274;
              }
            }
            else
            {
              v561 = v751;
              if (!v560)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v751 + 24))(v557, v558, v213);
LABEL_274:
                v563 = v767[11];
                v564 = &v194[v563];
                v565 = &v195[v563];
                v566 = *(_QWORD *)v565;
                v564[8] = v565[8];
                *(_QWORD *)v564 = v566;
                v567 = v767[12];
                v568 = &v194[v567];
                v569 = &v195[v567];
                v570 = v515(&v194[v567], 1, v213);
                v571 = v515(v569, 1, v213);
                if (v570)
                {
                  if (!v571)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v561 + 16))(v568, v569, v213);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v561 + 56))(v568, 0, 1, v213);
                    goto LABEL_280;
                  }
                }
                else
                {
                  if (!v571)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v561 + 24))(v568, v569, v213);
LABEL_280:
                    v573 = v767[13];
                    v574 = &v194[v573];
                    v575 = &v195[v573];
                    v576 = *(_QWORD *)v575;
                    v574[8] = v575[8];
                    *(_QWORD *)v574 = v576;
                    v577 = v767[14];
                    v578 = &v194[v577];
                    v579 = &v195[v577];
                    v580 = v515(&v194[v577], 1, v213);
                    v581 = v515(v579, 1, v213);
                    if (v580)
                    {
                      if (!v581)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v561 + 16))(v578, v579, v213);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v561 + 56))(v578, 0, 1, v213);
                        goto LABEL_286;
                      }
                    }
                    else
                    {
                      if (!v581)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v561 + 24))(v578, v579, v213);
LABEL_286:
                        v583 = v767[15];
                        v584 = &v194[v583];
                        v585 = &v195[v583];
                        v586 = *(_QWORD *)v585;
                        v584[8] = v585[8];
                        *(_QWORD *)v584 = v586;
                        v587 = v767[16];
                        v588 = &v194[v587];
                        v589 = &v195[v587];
                        v590 = v515(&v194[v587], 1, v213);
                        v591 = v515(v589, 1, v213);
                        if (v590)
                        {
                          if (!v591)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v561 + 16))(v588, v589, v213);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v561 + 56))(v588, 0, 1, v213);
                            goto LABEL_292;
                          }
                        }
                        else
                        {
                          if (!v591)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v561 + 24))(v588, v589, v213);
LABEL_292:
                            v593 = v767[17];
                            v594 = (uint64_t)&v194[v593];
                            v595 = &v195[v593];
                            v596 = *(_QWORD *)&v194[v593 + 32];
                            v597 = *(_QWORD *)&v195[v593 + 32];
                            v10 = v764;
                            if (v596 == 1)
                            {
                              if (v597 == 1)
                              {
                                v598 = *(_OWORD *)v595;
                                v599 = *((_OWORD *)v595 + 1);
                                *(_QWORD *)(v594 + 32) = *((_QWORD *)v595 + 4);
                                *(_OWORD *)v594 = v598;
                                *(_OWORD *)(v594 + 16) = v599;
                              }
                              else
                              {
                                v602 = *(_QWORD *)v595;
                                *(_BYTE *)(v594 + 8) = v595[8];
                                *(_QWORD *)v594 = v602;
                                v603 = *((_QWORD *)v595 + 2);
                                *(_BYTE *)(v594 + 24) = v595[24];
                                *(_QWORD *)(v594 + 16) = v603;
                                *(_QWORD *)(v594 + 32) = *((_QWORD *)v595 + 4);
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v597 == 1)
                            {
                              sub_1BAF10C4C(v594);
                              v600 = *((_QWORD *)v595 + 4);
                              v601 = *((_OWORD *)v595 + 1);
                              *(_OWORD *)v594 = *(_OWORD *)v595;
                              *(_OWORD *)(v594 + 16) = v601;
                              *(_QWORD *)(v594 + 32) = v600;
                            }
                            else
                            {
                              v604 = *(_QWORD *)v595;
                              *(_BYTE *)(v594 + 8) = v595[8];
                              *(_QWORD *)v594 = v604;
                              v605 = *((_QWORD *)v595 + 2);
                              *(_BYTE *)(v594 + 24) = v595[24];
                              *(_QWORD *)(v594 + 16) = v605;
                              *(_QWORD *)(v594 + 32) = *((_QWORD *)v595 + 4);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                            }
                            a3 = v766;
                            v606 = v767[18];
                            v607 = &v194[v606];
                            v608 = &v195[v606];
                            v609 = *(_QWORD *)v608;
                            v607[8] = v608[8];
                            *(_QWORD *)v607 = v609;
                            v610 = v767[19];
                            v194 += v610;
                            v195 += v610;
                            v611 = sub_1BB86D024();
                            v612 = *(_QWORD *)(v611 - 8);
                            v613 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v612 + 48);
                            v614 = v613(v194, 1, v611);
                            v615 = v613(v195, 1, v611);
                            if (v614)
                            {
                              v5 = v761;
                              if (!v615)
                              {
                                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v612 + 16))(v194, v195, v611);
                                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v612 + 56))(v194, 0, 1, v611);
                                goto LABEL_132;
                              }
                            }
                            else
                            {
                              v5 = v761;
                              if (!v615)
                              {
                                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v612 + 24))(v194, v195, v611);
                                goto LABEL_132;
                              }
                              (*(void (**)(_BYTE *, uint64_t))(v612 + 8))(v194, v611);
                            }
                            v198 = &qword_1ED3A24E0;
                            v199 = (void (*)(uint64_t))MEMORY[0x1E0DDA7E8];
                            goto LABEL_100;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v561 + 8))(v588, v213);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v588, v589, *(_QWORD *)(*(_QWORD *)(v592 - 8) + 64));
                        goto LABEL_292;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v561 + 8))(v578, v213);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v578, v579, *(_QWORD *)(*(_QWORD *)(v582 - 8) + 64));
                    goto LABEL_286;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v561 + 8))(v568, v213);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v568, v569, *(_QWORD *)(*(_QWORD *)(v572 - 8) + 64));
                goto LABEL_280;
              }
              (*(void (**)(_BYTE *, uint64_t))(v751 + 8))(v557, v213);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v557, v558, *(_QWORD *)(*(_QWORD *)(v562 - 8) + 64));
            goto LABEL_274;
          }
          (*(void (**)(_BYTE *, uint64_t))(v214 + 8))(v482, v213);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v482, v483, *(_QWORD *)(*(_QWORD *)(v506 - 8) + 64));
        goto LABEL_229;
      }
      (*(void (**)(_BYTE *, uint64_t))(v214 + 8))(v211, v213);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v476 - 8) + 64));
    goto LABEL_211;
  }
  if (v197)
  {
    v198 = &qword_1ED3A4D70;
    v199 = (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions;
LABEL_100:
    sub_1BA4A3FB4(0, v198, v199);
    memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
    goto LABEL_132;
  }
  v201 = *(_QWORD *)v195;
  v194[8] = v195[8];
  *(_QWORD *)v194 = v201;
  v202 = v9[5];
  v203 = &v194[v202];
  v204 = &v195[v202];
  v205 = sub_1BB86D078();
  v206 = *(_QWORD *)(v205 - 8);
  v207 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v206 + 48);
  if (v207(v204, 1, v205))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v206 + 16))(v203, v204, v205);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
  }
  v218 = v9[6];
  v219 = &v194[v218];
  v220 = &v195[v218];
  v221 = *(_QWORD *)v220;
  v219[8] = v220[8];
  *(_QWORD *)v219 = v221;
  v222 = v9[7];
  v223 = &v194[v222];
  v224 = &v195[v222];
  if (v207(&v195[v222], 1, v205))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v206 + 16))(v223, v224, v205);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v223, 0, 1, v205);
  }
  v226 = v9[8];
  v227 = &v194[v226];
  v228 = &v195[v226];
  v229 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v230 = *(_QWORD *)(v229 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v230 + 48))(v228, 1, v229))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v227, v228, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
  }
  else
  {
    *v227 = *v228;
    v227[1] = v228[1];
    v232 = *(int *)(v229 + 24);
    v756 = v207;
    v233 = (char *)v227 + v232;
    v234 = (char *)v228 + v232;
    v749 = *(void (**)(char *, char *, uint64_t))(v206 + 16);
    swift_bridgeObjectRetain();
    v235 = v233;
    v236 = v234;
    v207 = v756;
    v5 = v761;
    v749(v235, v236, v205);
    *(_QWORD *)((char *)v227 + *(int *)(v229 + 28)) = *(_QWORD *)((char *)v228 + *(int *)(v229 + 28));
    v237 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v230 + 56);
    swift_bridgeObjectRetain();
    v237(v227, 0, 1, v229);
  }
  v9 = v767;
  v238 = v767[9];
  v239 = &v194[v238];
  v240 = &v195[v238];
  v241 = *(_QWORD *)v240;
  v239[8] = v240[8];
  *(_QWORD *)v239 = v241;
  v242 = v767[10];
  v243 = &v194[v242];
  v244 = &v195[v242];
  if (v207(&v195[v242], 1, v205))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v206 + 16))(v243, v244, v205);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v243, 0, 1, v205);
  }
  v246 = v767[11];
  v247 = &v194[v246];
  v248 = &v195[v246];
  v249 = *(_QWORD *)v248;
  v247[8] = v248[8];
  *(_QWORD *)v247 = v249;
  v250 = v767[12];
  v251 = &v194[v250];
  v252 = &v195[v250];
  if (v207(&v195[v250], 1, v205))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v206 + 16))(v251, v252, v205);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v251, 0, 1, v205);
  }
  v254 = v767[13];
  v255 = &v194[v254];
  v256 = &v195[v254];
  v257 = *(_QWORD *)v256;
  v255[8] = v256[8];
  *(_QWORD *)v255 = v257;
  v258 = v767[14];
  v259 = &v194[v258];
  v260 = &v195[v258];
  if (v207(&v195[v258], 1, v205))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v259, v260, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v206 + 16))(v259, v260, v205);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v259, 0, 1, v205);
  }
  v262 = v767[15];
  v263 = &v194[v262];
  v264 = &v195[v262];
  v265 = *(_QWORD *)v264;
  v263[8] = v264[8];
  *(_QWORD *)v263 = v265;
  v266 = v767[16];
  v267 = &v194[v266];
  v268 = &v195[v266];
  if (v207(&v195[v266], 1, v205))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v267, v268, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v206 + 16))(v267, v268, v205);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v267, 0, 1, v205);
  }
  v270 = v767[17];
  v271 = &v194[v270];
  v272 = &v195[v270];
  v10 = v764;
  if (*((_QWORD *)v272 + 4) == 1)
  {
    v273 = *(_OWORD *)v272;
    v274 = *((_OWORD *)v272 + 1);
    *((_QWORD *)v271 + 4) = *((_QWORD *)v272 + 4);
    *(_OWORD *)v271 = v273;
    *((_OWORD *)v271 + 1) = v274;
  }
  else
  {
    v275 = *(_QWORD *)v272;
    v271[8] = v272[8];
    *(_QWORD *)v271 = v275;
    v276 = *((_QWORD *)v272 + 2);
    v271[24] = v272[24];
    *((_QWORD *)v271 + 2) = v276;
    *((_QWORD *)v271 + 4) = *((_QWORD *)v272 + 4);
    swift_bridgeObjectRetain();
  }
  v277 = v767[18];
  v278 = &v194[v277];
  v279 = &v195[v277];
  v280 = *(_QWORD *)v279;
  v278[8] = v279[8];
  *(_QWORD *)v278 = v280;
  v281 = v767[19];
  v282 = &v194[v281];
  v283 = &v195[v281];
  v284 = sub_1BB86D024();
  v285 = *(_QWORD *)(v284 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v285 + 48))(v283, 1, v284))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v285 + 16))(v282, v283, v284);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v285 + 56))(v282, 0, 1, v284);
  }
  a3 = v766;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v762 + 56))(v194, 0, 1, v767);
LABEL_132:
  *(_QWORD *)((char *)v5 + a3[12]) = *(_QWORD *)(v768 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v287 = a3[13];
  v288 = (char *)v5 + v287;
  v289 = (_BYTE *)(v768 + v287);
  v290 = v10((_BYTE *)v5 + v287, 1, v9);
  v291 = v10(v289, 1, v9);
  if (!v290)
  {
    if (v291)
    {
      sub_1BA4A2E80((uint64_t)v288, type metadata accessor for FeedClusteringOptions);
      v292 = &qword_1ED3A4D70;
      v293 = (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions;
      goto LABEL_137;
    }
    v303 = *(_QWORD *)v289;
    v288[8] = v289[8];
    *(_QWORD *)v288 = v303;
    v304 = v9[5];
    v305 = &v288[v304];
    v306 = &v289[v304];
    v307 = sub_1BB86D078();
    v308 = *(_QWORD *)(v307 - 8);
    v309 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v308 + 48);
    v310 = v309(v305, 1, v307);
    v757 = v309;
    v311 = v309(v306, 1, v307);
    if (v310)
    {
      if (!v311)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v308 + 16))(v305, v306, v307);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v308 + 56))(v305, 0, 1, v307);
        goto LABEL_217;
      }
    }
    else
    {
      if (!v311)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v308 + 24))(v305, v306, v307);
LABEL_217:
        v487 = v9[6];
        v488 = &v288[v487];
        v489 = &v289[v487];
        v490 = *(_QWORD *)v489;
        v488[8] = v489[8];
        *(_QWORD *)v488 = v490;
        v491 = v9[7];
        v492 = &v288[v491];
        v493 = &v289[v491];
        v494 = v309(&v288[v491], 1, v307);
        v495 = v309(v493, 1, v307);
        v752 = v308;
        if (v494)
        {
          if (!v495)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v308 + 16))(v492, v493, v307);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v308 + 56))(v492, 0, 1, v307);
            goto LABEL_235;
          }
        }
        else
        {
          if (!v495)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v308 + 24))(v492, v493, v307);
LABEL_235:
            v517 = v9[8];
            v518 = &v288[v517];
            v519 = &v289[v517];
            v520 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v521 = *(_QWORD *)(v520 - 8);
            v522 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v521 + 48);
            v523 = v522(v518, 1, v520);
            v524 = v522(v519, 1, v520);
            if (v523)
            {
              v525 = v309;
              if (v524)
                goto LABEL_249;
              *v518 = *v519;
              v518[1] = v519[1];
              v543 = *(int *)(v520 + 24);
              v544 = (char *)v518 + v543;
              v545 = (char *)v519 + v543;
              v546 = *(void (**)(char *, char *, uint64_t))(v752 + 16);
              swift_bridgeObjectRetain();
              v546(v544, v545, v307);
              v525 = v757;
              *(_QWORD *)((char *)v518 + *(int *)(v520 + 28)) = *(_QWORD *)((char *)v519 + *(int *)(v520 + 28));
              v547 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v521 + 56);
              swift_bridgeObjectRetain();
              v547(v518, 0, 1, v520);
            }
            else
            {
              v525 = v309;
              if (v524)
              {
                sub_1BA4A2E80((uint64_t)v518, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_249:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v518, v519, *(_QWORD *)(*(_QWORD *)(v536 - 8) + 64));
                goto LABEL_306;
              }
              *v518 = *v519;
              v518[1] = v519[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v752 + 24))((char *)v518 + *(int *)(v520 + 24), (char *)v519 + *(int *)(v520 + 24), v307);
              *(_QWORD *)((char *)v518 + *(int *)(v520 + 28)) = *(_QWORD *)((char *)v519 + *(int *)(v520 + 28));
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
LABEL_306:
            v9 = v767;
            v616 = v767[9];
            v617 = &v288[v616];
            v618 = &v289[v616];
            v619 = *(_QWORD *)v618;
            v617[8] = v618[8];
            *(_QWORD *)v617 = v619;
            v620 = v767[10];
            v621 = &v288[v620];
            v622 = &v289[v620];
            v623 = v525(&v288[v620], 1, v307);
            v624 = v525(v622, 1, v307);
            if (v623)
            {
              v625 = v752;
              if (!v624)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v752 + 16))(v621, v622, v307);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v752 + 56))(v621, 0, 1, v307);
                goto LABEL_312;
              }
            }
            else
            {
              v625 = v752;
              if (!v624)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v752 + 24))(v621, v622, v307);
LABEL_312:
                v627 = v767[11];
                v628 = &v288[v627];
                v629 = &v289[v627];
                v630 = *(_QWORD *)v629;
                v628[8] = v629[8];
                *(_QWORD *)v628 = v630;
                v631 = v767[12];
                v632 = &v288[v631];
                v633 = &v289[v631];
                v634 = v525(&v288[v631], 1, v307);
                v635 = v525(v633, 1, v307);
                if (v634)
                {
                  if (!v635)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v625 + 16))(v632, v633, v307);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v625 + 56))(v632, 0, 1, v307);
                    goto LABEL_318;
                  }
                }
                else
                {
                  if (!v635)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v625 + 24))(v632, v633, v307);
LABEL_318:
                    v637 = v767[13];
                    v638 = &v288[v637];
                    v639 = &v289[v637];
                    v640 = *(_QWORD *)v639;
                    v638[8] = v639[8];
                    *(_QWORD *)v638 = v640;
                    v641 = v767[14];
                    v642 = &v288[v641];
                    v643 = &v289[v641];
                    v644 = v525(&v288[v641], 1, v307);
                    v645 = v525(v643, 1, v307);
                    if (v644)
                    {
                      if (!v645)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v625 + 16))(v642, v643, v307);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v625 + 56))(v642, 0, 1, v307);
                        goto LABEL_324;
                      }
                    }
                    else
                    {
                      if (!v645)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v625 + 24))(v642, v643, v307);
LABEL_324:
                        v647 = v767[15];
                        v648 = &v288[v647];
                        v649 = &v289[v647];
                        v650 = *(_QWORD *)v649;
                        v648[8] = v649[8];
                        *(_QWORD *)v648 = v650;
                        v651 = v767[16];
                        v652 = &v288[v651];
                        v653 = &v289[v651];
                        v654 = v525(&v288[v651], 1, v307);
                        v655 = v525(v653, 1, v307);
                        if (v654)
                        {
                          if (!v655)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v625 + 16))(v652, v653, v307);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v625 + 56))(v652, 0, 1, v307);
                            goto LABEL_330;
                          }
                        }
                        else
                        {
                          if (!v655)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v625 + 24))(v652, v653, v307);
LABEL_330:
                            v657 = v767[17];
                            v658 = (uint64_t)&v288[v657];
                            v659 = &v289[v657];
                            v660 = *(_QWORD *)&v288[v657 + 32];
                            v661 = *(_QWORD *)&v289[v657 + 32];
                            v10 = v764;
                            if (v660 == 1)
                            {
                              if (v661 == 1)
                              {
                                v662 = *(_OWORD *)v659;
                                v663 = *((_OWORD *)v659 + 1);
                                *(_QWORD *)(v658 + 32) = *((_QWORD *)v659 + 4);
                                *(_OWORD *)v658 = v662;
                                *(_OWORD *)(v658 + 16) = v663;
                              }
                              else
                              {
                                v666 = *(_QWORD *)v659;
                                *(_BYTE *)(v658 + 8) = v659[8];
                                *(_QWORD *)v658 = v666;
                                v667 = *((_QWORD *)v659 + 2);
                                *(_BYTE *)(v658 + 24) = v659[24];
                                *(_QWORD *)(v658 + 16) = v667;
                                *(_QWORD *)(v658 + 32) = *((_QWORD *)v659 + 4);
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v661 == 1)
                            {
                              sub_1BAF10C4C(v658);
                              v664 = *((_QWORD *)v659 + 4);
                              v665 = *((_OWORD *)v659 + 1);
                              *(_OWORD *)v658 = *(_OWORD *)v659;
                              *(_OWORD *)(v658 + 16) = v665;
                              *(_QWORD *)(v658 + 32) = v664;
                            }
                            else
                            {
                              v668 = *(_QWORD *)v659;
                              *(_BYTE *)(v658 + 8) = v659[8];
                              *(_QWORD *)v658 = v668;
                              v669 = *((_QWORD *)v659 + 2);
                              *(_BYTE *)(v658 + 24) = v659[24];
                              *(_QWORD *)(v658 + 16) = v669;
                              *(_QWORD *)(v658 + 32) = *((_QWORD *)v659 + 4);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                            }
                            a3 = v766;
                            v670 = v767[18];
                            v671 = &v288[v670];
                            v672 = &v289[v670];
                            v673 = *(_QWORD *)v672;
                            v671[8] = v672[8];
                            *(_QWORD *)v671 = v673;
                            v674 = v767[19];
                            v288 += v674;
                            v289 += v674;
                            v675 = sub_1BB86D024();
                            v676 = *(_QWORD *)(v675 - 8);
                            v677 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v676 + 48);
                            v678 = v677(v288, 1, v675);
                            v679 = v677(v289, 1, v675);
                            if (v678)
                            {
                              v5 = v761;
                              if (!v679)
                              {
                                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v676 + 16))(v288, v289, v675);
                                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v676 + 56))(v288, 0, 1, v675);
                                goto LABEL_169;
                              }
                            }
                            else
                            {
                              v5 = v761;
                              if (!v679)
                              {
                                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v676 + 24))(v288, v289, v675);
                                goto LABEL_169;
                              }
                              (*(void (**)(_BYTE *, uint64_t))(v676 + 8))(v288, v675);
                            }
                            v292 = &qword_1ED3A24E0;
                            v293 = (void (*)(uint64_t))MEMORY[0x1E0DDA7E8];
                            goto LABEL_137;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v625 + 8))(v652, v307);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v652, v653, *(_QWORD *)(*(_QWORD *)(v656 - 8) + 64));
                        goto LABEL_330;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v625 + 8))(v642, v307);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v642, v643, *(_QWORD *)(*(_QWORD *)(v646 - 8) + 64));
                    goto LABEL_324;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v625 + 8))(v632, v307);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v632, v633, *(_QWORD *)(*(_QWORD *)(v636 - 8) + 64));
                goto LABEL_318;
              }
              (*(void (**)(_BYTE *, uint64_t))(v752 + 8))(v621, v307);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v621, v622, *(_QWORD *)(*(_QWORD *)(v626 - 8) + 64));
            goto LABEL_312;
          }
          (*(void (**)(_BYTE *, uint64_t))(v308 + 8))(v492, v307);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v492, v493, *(_QWORD *)(*(_QWORD *)(v516 - 8) + 64));
        goto LABEL_235;
      }
      (*(void (**)(_BYTE *, uint64_t))(v308 + 8))(v305, v307);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v305, v306, *(_QWORD *)(*(_QWORD *)(v486 - 8) + 64));
    goto LABEL_217;
  }
  if (v291)
  {
    v292 = &qword_1ED3A4D70;
    v293 = (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions;
LABEL_137:
    sub_1BA4A3FB4(0, v292, v293);
    memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
    goto LABEL_169;
  }
  v295 = *(_QWORD *)v289;
  v288[8] = v289[8];
  *(_QWORD *)v288 = v295;
  v296 = v9[5];
  v297 = &v288[v296];
  v298 = &v289[v296];
  v299 = sub_1BB86D078();
  v300 = *(_QWORD *)(v299 - 8);
  v301 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v300 + 48);
  if (v301(v298, 1, v299))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v297, v298, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v300 + 16))(v297, v298, v299);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v297, 0, 1, v299);
  }
  v312 = v9[6];
  v313 = &v288[v312];
  v314 = &v289[v312];
  v315 = *(_QWORD *)v314;
  v313[8] = v314[8];
  *(_QWORD *)v313 = v315;
  v316 = v9[7];
  v317 = &v288[v316];
  v318 = &v289[v316];
  if (v301(&v289[v316], 1, v299))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v317, v318, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v300 + 16))(v317, v318, v299);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v317, 0, 1, v299);
  }
  v320 = v9[8];
  v321 = &v288[v320];
  v322 = &v289[v320];
  v323 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v324 = *(_QWORD *)(v323 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v324 + 48))(v322, 1, v323))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v321, v322, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
  }
  else
  {
    *v321 = *v322;
    v321[1] = v322[1];
    v326 = *(int *)(v323 + 24);
    v758 = v301;
    v327 = (char *)v321 + v326;
    v328 = (char *)v322 + v326;
    v750 = *(void (**)(char *, char *, uint64_t))(v300 + 16);
    swift_bridgeObjectRetain();
    v329 = v327;
    v330 = v328;
    v301 = v758;
    v5 = v761;
    v750(v329, v330, v299);
    *(_QWORD *)((char *)v321 + *(int *)(v323 + 28)) = *(_QWORD *)((char *)v322 + *(int *)(v323 + 28));
    v331 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v324 + 56);
    swift_bridgeObjectRetain();
    v331(v321, 0, 1, v323);
  }
  v9 = v767;
  v332 = v767[9];
  v333 = &v288[v332];
  v334 = &v289[v332];
  v335 = *(_QWORD *)v334;
  v333[8] = v334[8];
  *(_QWORD *)v333 = v335;
  v336 = v767[10];
  v337 = &v288[v336];
  v338 = &v289[v336];
  if (v301(&v289[v336], 1, v299))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v337, v338, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v300 + 16))(v337, v338, v299);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v337, 0, 1, v299);
  }
  v340 = v767[11];
  v341 = &v288[v340];
  v342 = &v289[v340];
  v343 = *(_QWORD *)v342;
  v341[8] = v342[8];
  *(_QWORD *)v341 = v343;
  v344 = v767[12];
  v345 = &v288[v344];
  v346 = &v289[v344];
  if (v301(&v289[v344], 1, v299))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v345, v346, *(_QWORD *)(*(_QWORD *)(v347 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v300 + 16))(v345, v346, v299);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v345, 0, 1, v299);
  }
  v348 = v767[13];
  v349 = &v288[v348];
  v350 = &v289[v348];
  v351 = *(_QWORD *)v350;
  v349[8] = v350[8];
  *(_QWORD *)v349 = v351;
  v352 = v767[14];
  v353 = &v288[v352];
  v354 = &v289[v352];
  if (v301(&v289[v352], 1, v299))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v353, v354, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v300 + 16))(v353, v354, v299);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v353, 0, 1, v299);
  }
  v356 = v767[15];
  v357 = &v288[v356];
  v358 = &v289[v356];
  v359 = *(_QWORD *)v358;
  v357[8] = v358[8];
  *(_QWORD *)v357 = v359;
  v360 = v767[16];
  v361 = &v288[v360];
  v362 = &v289[v360];
  if (v301(&v289[v360], 1, v299))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v361, v362, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v300 + 16))(v361, v362, v299);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v300 + 56))(v361, 0, 1, v299);
  }
  v364 = v767[17];
  v365 = &v288[v364];
  v366 = &v289[v364];
  v10 = v764;
  if (*((_QWORD *)v366 + 4) == 1)
  {
    v367 = *(_OWORD *)v366;
    v368 = *((_OWORD *)v366 + 1);
    *((_QWORD *)v365 + 4) = *((_QWORD *)v366 + 4);
    *(_OWORD *)v365 = v367;
    *((_OWORD *)v365 + 1) = v368;
  }
  else
  {
    v369 = *(_QWORD *)v366;
    v365[8] = v366[8];
    *(_QWORD *)v365 = v369;
    v370 = *((_QWORD *)v366 + 2);
    v365[24] = v366[24];
    *((_QWORD *)v365 + 2) = v370;
    *((_QWORD *)v365 + 4) = *((_QWORD *)v366 + 4);
    swift_bridgeObjectRetain();
  }
  v371 = v767[18];
  v372 = &v288[v371];
  v373 = &v289[v371];
  v374 = *(_QWORD *)v373;
  v372[8] = v373[8];
  *(_QWORD *)v372 = v374;
  v375 = v767[19];
  v376 = &v288[v375];
  v377 = &v289[v375];
  v378 = sub_1BB86D024();
  v379 = *(_QWORD *)(v378 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v379 + 48))(v377, 1, v378))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v376, v377, *(_QWORD *)(*(_QWORD *)(v380 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v379 + 16))(v376, v377, v378);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v379 + 56))(v376, 0, 1, v378);
  }
  a3 = v766;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v762 + 56))(v288, 0, 1, v767);
LABEL_169:
  v381 = a3[14];
  v382 = (uint64_t)v5 + v381;
  v383 = (_BYTE *)(v768 + v381);
  v384 = v10((_BYTE *)v5 + v381, 1, v9);
  v385 = v10(v383, 1, v9);
  if (!v384)
  {
    if (v385)
    {
      sub_1BA4A2E80(v382, type metadata accessor for FeedClusteringOptions);
LABEL_174:
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      v387 = *(_QWORD *)(*(_QWORD *)(v386 - 8) + 64);
      v388 = (void *)v382;
      v389 = v383;
LABEL_175:
      memcpy(v388, v389, v387);
      goto LABEL_207;
    }
    v398 = *(_QWORD *)v383;
    *(_BYTE *)(v382 + 8) = v383[8];
    *(_QWORD *)v382 = v398;
    v399 = v9[5];
    v400 = (void *)(v382 + v399);
    v401 = &v383[v399];
    v402 = sub_1BB86D078();
    v403 = *(_QWORD *)(v402 - 8);
    v404 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v403 + 48);
    v405 = v404(v400, 1, v402);
    v406 = v404(v401, 1, v402);
    if (v405)
    {
      if (!v406)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v403 + 16))(v400, v401, v402);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v403 + 56))(v400, 0, 1, v402);
        goto LABEL_223;
      }
    }
    else
    {
      if (!v406)
      {
        (*(void (**)(void *, _BYTE *, uint64_t))(v403 + 24))(v400, v401, v402);
LABEL_223:
        v497 = v9[6];
        v498 = v382 + v497;
        v499 = &v383[v497];
        v500 = *(_QWORD *)v499;
        *(_BYTE *)(v498 + 8) = v499[8];
        *(_QWORD *)v498 = v500;
        v501 = v9[7];
        v502 = (void *)(v382 + v501);
        v503 = &v383[v501];
        v504 = v404((void *)(v382 + v501), 1, v402);
        v505 = v404(v503, 1, v402);
        v763 = v403;
        if (v504)
        {
          if (!v505)
          {
            (*(void (**)(void *, _BYTE *, uint64_t))(v403 + 16))(v502, v503, v402);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v403 + 56))(v502, 0, 1, v402);
            goto LABEL_241;
          }
        }
        else
        {
          if (!v505)
          {
            (*(void (**)(void *, _BYTE *, uint64_t))(v403 + 24))(v502, v503, v402);
LABEL_241:
            v527 = v9[8];
            v528 = (_QWORD *)(v382 + v527);
            v529 = &v383[v527];
            v530 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v531 = *(_QWORD *)(v530 - 8);
            v532 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v531 + 48);
            v533 = v532(v528, 1, v530);
            v534 = v532(v529, 1, v530);
            if (v533)
            {
              if (v534)
                goto LABEL_252;
              *v528 = *v529;
              v528[1] = v529[1];
              v548 = *(int *)(v530 + 24);
              v549 = (char *)v528 + v548;
              v760 = (char *)v529 + v548;
              v550 = *(void (**)(char *, char *, uint64_t))(v763 + 16);
              swift_bridgeObjectRetain();
              v550(v549, v760, v402);
              *(_QWORD *)((char *)v528 + *(int *)(v530 + 28)) = *(_QWORD *)((char *)v529 + *(int *)(v530 + 28));
              v551 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v531 + 56);
              swift_bridgeObjectRetain();
              v551(v528, 0, 1, v530);
            }
            else
            {
              if (v534)
              {
                sub_1BA4A2E80((uint64_t)v528, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_252:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v528, v529, *(_QWORD *)(*(_QWORD *)(v537 - 8) + 64));
                goto LABEL_344;
              }
              *v528 = *v529;
              v528[1] = v529[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v763 + 24))((char *)v528 + *(int *)(v530 + 24), (char *)v529 + *(int *)(v530 + 24), v402);
              *(_QWORD *)((char *)v528 + *(int *)(v530 + 28)) = *(_QWORD *)((char *)v529 + *(int *)(v530 + 28));
              swift_bridgeObjectRetain();
              swift_bridgeObjectRelease();
            }
LABEL_344:
            v680 = v767[9];
            v681 = v382 + v680;
            v682 = &v383[v680];
            v683 = *(_QWORD *)v682;
            *(_BYTE *)(v681 + 8) = v682[8];
            *(_QWORD *)v681 = v683;
            v684 = v767[10];
            v685 = (void *)(v382 + v684);
            v686 = &v383[v684];
            v687 = v404((void *)(v382 + v684), 1, v402);
            v688 = v404(v686, 1, v402);
            if (v687)
            {
              v689 = v763;
              if (!v688)
              {
                (*(void (**)(void *, _BYTE *, uint64_t))(v763 + 16))(v685, v686, v402);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v763 + 56))(v685, 0, 1, v402);
                goto LABEL_350;
              }
            }
            else
            {
              v689 = v763;
              if (!v688)
              {
                (*(void (**)(void *, _BYTE *, uint64_t))(v763 + 24))(v685, v686, v402);
LABEL_350:
                v691 = v767[11];
                v692 = v382 + v691;
                v693 = &v383[v691];
                v694 = *(_QWORD *)v693;
                *(_BYTE *)(v692 + 8) = v693[8];
                *(_QWORD *)v692 = v694;
                v695 = v767[12];
                v696 = (void *)(v382 + v695);
                v697 = &v383[v695];
                v698 = v404((void *)(v382 + v695), 1, v402);
                v699 = v404(v697, 1, v402);
                if (v698)
                {
                  if (!v699)
                  {
                    (*(void (**)(void *, _BYTE *, uint64_t))(v689 + 16))(v696, v697, v402);
                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v689 + 56))(v696, 0, 1, v402);
                    goto LABEL_356;
                  }
                }
                else
                {
                  if (!v699)
                  {
                    (*(void (**)(void *, _BYTE *, uint64_t))(v689 + 24))(v696, v697, v402);
LABEL_356:
                    v701 = v767[13];
                    v702 = v382 + v701;
                    v703 = &v383[v701];
                    v704 = *(_QWORD *)v703;
                    *(_BYTE *)(v702 + 8) = v703[8];
                    *(_QWORD *)v702 = v704;
                    v705 = v767[14];
                    v706 = (void *)(v382 + v705);
                    v707 = &v383[v705];
                    v708 = v404((void *)(v382 + v705), 1, v402);
                    v709 = v404(v707, 1, v402);
                    if (v708)
                    {
                      if (!v709)
                      {
                        (*(void (**)(void *, _BYTE *, uint64_t))(v689 + 16))(v706, v707, v402);
                        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v689 + 56))(v706, 0, 1, v402);
                        goto LABEL_362;
                      }
                    }
                    else
                    {
                      if (!v709)
                      {
                        (*(void (**)(void *, _BYTE *, uint64_t))(v689 + 24))(v706, v707, v402);
LABEL_362:
                        v711 = v767[15];
                        v712 = v382 + v711;
                        v713 = &v383[v711];
                        v714 = *(_QWORD *)v713;
                        *(_BYTE *)(v712 + 8) = v713[8];
                        *(_QWORD *)v712 = v714;
                        v715 = v767[16];
                        v716 = (void *)(v382 + v715);
                        v717 = &v383[v715];
                        v718 = v404((void *)(v382 + v715), 1, v402);
                        v719 = v404(v717, 1, v402);
                        if (v718)
                        {
                          if (!v719)
                          {
                            (*(void (**)(void *, _BYTE *, uint64_t))(v689 + 16))(v716, v717, v402);
                            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v689 + 56))(v716, 0, 1, v402);
LABEL_368:
                            v721 = v767[17];
                            v722 = v382 + v721;
                            v723 = &v383[v721];
                            v724 = *(_QWORD *)(v382 + v721 + 32);
                            v725 = *(_QWORD *)&v383[v721 + 32];
                            if (v724 == 1)
                            {
                              if (v725 == 1)
                              {
                                v726 = *(_OWORD *)v723;
                                v727 = *((_OWORD *)v723 + 1);
                                *(_QWORD *)(v722 + 32) = *((_QWORD *)v723 + 4);
                                *(_OWORD *)v722 = v726;
                                *(_OWORD *)(v722 + 16) = v727;
                              }
                              else
                              {
                                v730 = *(_QWORD *)v723;
                                *(_BYTE *)(v722 + 8) = v723[8];
                                *(_QWORD *)v722 = v730;
                                v731 = *((_QWORD *)v723 + 2);
                                *(_BYTE *)(v722 + 24) = v723[24];
                                *(_QWORD *)(v722 + 16) = v731;
                                *(_QWORD *)(v722 + 32) = *((_QWORD *)v723 + 4);
                                swift_bridgeObjectRetain();
                              }
                            }
                            else if (v725 == 1)
                            {
                              sub_1BAF10C4C(v722);
                              v728 = *((_QWORD *)v723 + 4);
                              v729 = *((_OWORD *)v723 + 1);
                              *(_OWORD *)v722 = *(_OWORD *)v723;
                              *(_OWORD *)(v722 + 16) = v729;
                              *(_QWORD *)(v722 + 32) = v728;
                            }
                            else
                            {
                              v732 = *(_QWORD *)v723;
                              *(_BYTE *)(v722 + 8) = v723[8];
                              *(_QWORD *)v722 = v732;
                              v733 = *((_QWORD *)v723 + 2);
                              *(_BYTE *)(v722 + 24) = v723[24];
                              *(_QWORD *)(v722 + 16) = v733;
                              *(_QWORD *)(v722 + 32) = *((_QWORD *)v723 + 4);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRelease();
                            }
                            a3 = v766;
                            v734 = v767[18];
                            v735 = v382 + v734;
                            v736 = &v383[v734];
                            v737 = *(_QWORD *)v736;
                            *(_BYTE *)(v735 + 8) = v736[8];
                            *(_QWORD *)v735 = v737;
                            v738 = v767[19];
                            v739 = (void *)(v382 + v738);
                            v740 = &v383[v738];
                            v741 = sub_1BB86D024();
                            v742 = *(_QWORD *)(v741 - 8);
                            v743 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v742 + 48);
                            v744 = v743(v739, 1, v741);
                            v745 = v743(v740, 1, v741);
                            if (v744)
                            {
                              v5 = v761;
                              if (!v745)
                              {
                                (*(void (**)(void *, _BYTE *, uint64_t))(v742 + 16))(v739, v740, v741);
                                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v742 + 56))(v739, 0, 1, v741);
                                goto LABEL_207;
                              }
                            }
                            else
                            {
                              v5 = v761;
                              if (!v745)
                              {
                                (*(void (**)(void *, _BYTE *, uint64_t))(v742 + 24))(v739, v740, v741);
                                goto LABEL_207;
                              }
                              (*(void (**)(void *, uint64_t))(v742 + 8))(v739, v741);
                            }
                            sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
                            v387 = *(_QWORD *)(*(_QWORD *)(v746 - 8) + 64);
                            v388 = v739;
                            v389 = v740;
                            goto LABEL_175;
                          }
                        }
                        else
                        {
                          if (!v719)
                          {
                            (*(void (**)(void *, _BYTE *, uint64_t))(v689 + 24))(v716, v717, v402);
                            goto LABEL_368;
                          }
                          (*(void (**)(void *, uint64_t))(v689 + 8))(v716, v402);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v716, v717, *(_QWORD *)(*(_QWORD *)(v720 - 8) + 64));
                        goto LABEL_368;
                      }
                      (*(void (**)(void *, uint64_t))(v689 + 8))(v706, v402);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v706, v707, *(_QWORD *)(*(_QWORD *)(v710 - 8) + 64));
                    goto LABEL_362;
                  }
                  (*(void (**)(void *, uint64_t))(v689 + 8))(v696, v402);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v696, v697, *(_QWORD *)(*(_QWORD *)(v700 - 8) + 64));
                goto LABEL_356;
              }
              (*(void (**)(void *, uint64_t))(v763 + 8))(v685, v402);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v685, v686, *(_QWORD *)(*(_QWORD *)(v690 - 8) + 64));
            goto LABEL_350;
          }
          (*(void (**)(void *, uint64_t))(v403 + 8))(v502, v402);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v502, v503, *(_QWORD *)(*(_QWORD *)(v526 - 8) + 64));
        goto LABEL_241;
      }
      (*(void (**)(void *, uint64_t))(v403 + 8))(v400, v402);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v400, v401, *(_QWORD *)(*(_QWORD *)(v496 - 8) + 64));
    goto LABEL_223;
  }
  if (v385)
    goto LABEL_174;
  v390 = *(_QWORD *)v383;
  *(_BYTE *)(v382 + 8) = v383[8];
  *(_QWORD *)v382 = v390;
  v391 = v9[5];
  v392 = (void *)(v382 + v391);
  v393 = &v383[v391];
  v394 = sub_1BB86D078();
  v395 = *(_QWORD *)(v394 - 8);
  v396 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v395 + 48);
  if (v396(v393, 1, v394))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v392, v393, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v395 + 16))(v392, v393, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v392, 0, 1, v394);
  }
  v407 = v9[6];
  v408 = v382 + v407;
  v409 = &v383[v407];
  v410 = *(_QWORD *)v409;
  *(_BYTE *)(v408 + 8) = v409[8];
  *(_QWORD *)v408 = v410;
  v411 = v9[7];
  v412 = (void *)(v382 + v411);
  v413 = &v383[v411];
  v765 = v396;
  if (v396(&v383[v411], 1, v394))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v412, v413, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v395 + 16))(v412, v413, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v412, 0, 1, v394);
  }
  v415 = v9[8];
  v416 = (_QWORD *)(v382 + v415);
  v417 = &v383[v415];
  v418 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v419 = *(_QWORD *)(v418 - 8);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v419 + 48))(v417, 1, v418))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v416, v417, *(_QWORD *)(*(_QWORD *)(v420 - 8) + 64));
  }
  else
  {
    *v416 = *v417;
    v416[1] = v417[1];
    v421 = *(int *)(v418 + 24);
    v422 = (char *)v416 + v421;
    v423 = (char *)v417 + v421;
    v759 = *(void (**)(char *, char *, uint64_t))(v395 + 16);
    swift_bridgeObjectRetain();
    v424 = v423;
    v5 = v761;
    v759(v422, v424, v394);
    *(_QWORD *)((char *)v416 + *(int *)(v418 + 28)) = *(_QWORD *)((char *)v417 + *(int *)(v418 + 28));
    v425 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v419 + 56);
    swift_bridgeObjectRetain();
    v425(v416, 0, 1, v418);
  }
  v426 = v767[9];
  v427 = v382 + v426;
  v428 = &v383[v426];
  v429 = *(_QWORD *)v428;
  *(_BYTE *)(v427 + 8) = v428[8];
  *(_QWORD *)v427 = v429;
  v430 = v767[10];
  v431 = (void *)(v382 + v430);
  v432 = &v383[v430];
  if (v765(&v383[v430], 1, v394))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v431, v432, *(_QWORD *)(*(_QWORD *)(v433 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v395 + 16))(v431, v432, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v431, 0, 1, v394);
  }
  v434 = v767[11];
  v435 = v382 + v434;
  v436 = &v383[v434];
  v437 = *(_QWORD *)v436;
  *(_BYTE *)(v435 + 8) = v436[8];
  *(_QWORD *)v435 = v437;
  v438 = v767[12];
  v439 = (void *)(v382 + v438);
  v440 = &v383[v438];
  if (v765(&v383[v438], 1, v394))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v439, v440, *(_QWORD *)(*(_QWORD *)(v441 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v395 + 16))(v439, v440, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v439, 0, 1, v394);
  }
  v442 = v767[13];
  v443 = v382 + v442;
  v444 = &v383[v442];
  v445 = *(_QWORD *)v444;
  *(_BYTE *)(v443 + 8) = v444[8];
  *(_QWORD *)v443 = v445;
  v446 = v767[14];
  v447 = (void *)(v382 + v446);
  v448 = &v383[v446];
  if (v765(&v383[v446], 1, v394))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v447, v448, *(_QWORD *)(*(_QWORD *)(v449 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v395 + 16))(v447, v448, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v447, 0, 1, v394);
  }
  v450 = v767[15];
  v451 = v382 + v450;
  v452 = &v383[v450];
  v453 = *(_QWORD *)v452;
  *(_BYTE *)(v451 + 8) = v452[8];
  *(_QWORD *)v451 = v453;
  v454 = v767[16];
  v455 = (void *)(v382 + v454);
  v456 = &v383[v454];
  if (v765(&v383[v454], 1, v394))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v455, v456, *(_QWORD *)(*(_QWORD *)(v457 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v395 + 16))(v455, v456, v394);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v395 + 56))(v455, 0, 1, v394);
  }
  v458 = v767[17];
  v459 = v382 + v458;
  v460 = &v383[v458];
  if (*((_QWORD *)v460 + 4) == 1)
  {
    v461 = *(_OWORD *)v460;
    v462 = *((_OWORD *)v460 + 1);
    *(_QWORD *)(v459 + 32) = *((_QWORD *)v460 + 4);
    *(_OWORD *)v459 = v461;
    *(_OWORD *)(v459 + 16) = v462;
  }
  else
  {
    v463 = *(_QWORD *)v460;
    *(_BYTE *)(v459 + 8) = v460[8];
    *(_QWORD *)v459 = v463;
    v464 = *((_QWORD *)v460 + 2);
    *(_BYTE *)(v459 + 24) = v460[24];
    *(_QWORD *)(v459 + 16) = v464;
    *(_QWORD *)(v459 + 32) = *((_QWORD *)v460 + 4);
    swift_bridgeObjectRetain();
  }
  v465 = v767[18];
  v466 = v382 + v465;
  v467 = &v383[v465];
  v468 = *(_QWORD *)v467;
  *(_BYTE *)(v466 + 8) = v467[8];
  *(_QWORD *)v466 = v468;
  v469 = v767[19];
  v470 = (void *)(v382 + v469);
  v471 = &v383[v469];
  v472 = sub_1BB86D024();
  v473 = *(_QWORD *)(v472 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v473 + 48))(v471, 1, v472))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v470, v471, *(_QWORD *)(*(_QWORD *)(v474 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, _BYTE *, uint64_t))(v473 + 16))(v470, v471, v472);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v473 + 56))(v470, 0, 1, v472);
  }
  a3 = v766;
  (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v762 + 56))(v382, 0, 1, v767);
LABEL_207:
  *(_QWORD *)((char *)v5 + a3[15]) = *(_QWORD *)(v768 + a3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)v5 + a3[16]) = *(_BYTE *)(v768 + a3[16]);
  *((_BYTE *)v5 + a3[17]) = *(_BYTE *)(v768 + a3[17]);
  *(_QWORD *)((char *)v5 + a3[18]) = *(_QWORD *)(v768 + a3[18]);
  *(_QWORD *)((char *)v5 + a3[19]) = *(_QWORD *)(v768 + a3[19]);
  *((_BYTE *)v5 + a3[20]) = *(_BYTE *)(v768 + a3[20]);
  *(_WORD *)((char *)v5 + a3[21]) = *(_WORD *)(v768 + a3[21]);
  return v5;
}

uint64_t initializeWithTake for FeedClusteringRequest(uint64_t a1, uint64_t a2, int *a3)
{
  int *v3;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  int *v10;
  unsigned int (*v11)(_QWORD, _QWORD, _QWORD);
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(_BYTE *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  _BYTE *v35;
  uint64_t v36;
  _BYTE *v37;
  _BYTE *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  _BYTE *v49;
  _BYTE *v50;
  uint64_t v51;
  _BYTE *v52;
  _BYTE *v53;
  uint64_t v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  _BYTE *v60;
  uint64_t v61;
  uint64_t v62;
  _BYTE *v63;
  _BYTE *v64;
  __int128 v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  _BYTE *v70;
  _BYTE *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _BYTE *v76;
  _BYTE *v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  _BYTE *v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int (*v84)(_BYTE *, uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  uint64_t v89;
  _BYTE *v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  _OWORD *v94;
  _OWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _BYTE *v100;
  _BYTE *v101;
  uint64_t v102;
  _BYTE *v103;
  _BYTE *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _BYTE *v108;
  _BYTE *v109;
  uint64_t v110;
  _BYTE *v111;
  _BYTE *v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  _BYTE *v123;
  uint64_t v124;
  _BYTE *v125;
  _BYTE *v126;
  uint64_t v127;
  uint64_t v128;
  _BYTE *v129;
  _BYTE *v130;
  __int128 v131;
  uint64_t v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _BYTE *v142;
  _BYTE *v143;
  uint64_t v144;
  uint64_t v145;
  _BYTE *v146;
  _BYTE *v147;
  uint64_t v148;
  uint64_t v149;
  unsigned int (*v150)(_BYTE *, uint64_t, uint64_t);
  uint64_t v151;
  uint64_t v152;
  _BYTE *v153;
  _BYTE *v154;
  uint64_t v155;
  _BYTE *v156;
  _BYTE *v157;
  uint64_t v158;
  uint64_t v159;
  _OWORD *v160;
  _OWORD *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  _BYTE *v166;
  _BYTE *v167;
  uint64_t v168;
  _BYTE *v169;
  _BYTE *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  _BYTE *v174;
  _BYTE *v175;
  uint64_t v176;
  _BYTE *v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t v180;
  _BYTE *v181;
  _BYTE *v182;
  uint64_t v183;
  _BYTE *v184;
  _BYTE *v185;
  uint64_t v186;
  uint64_t v187;
  _BYTE *v188;
  _BYTE *v189;
  uint64_t v190;
  _BYTE *v191;
  _BYTE *v192;
  uint64_t v193;
  uint64_t v194;
  _BYTE *v195;
  _BYTE *v196;
  __int128 v197;
  uint64_t v198;
  _BYTE *v199;
  _BYTE *v200;
  uint64_t v201;
  _BYTE *v202;
  _BYTE *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  _BYTE *v208;
  _BYTE *v209;
  uint64_t v210;
  uint64_t v211;
  _BYTE *v212;
  _BYTE *v213;
  uint64_t v214;
  uint64_t v215;
  unsigned int (*v216)(_BYTE *, uint64_t, uint64_t);
  uint64_t v217;
  uint64_t v218;
  _BYTE *v219;
  _BYTE *v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  uint64_t v224;
  uint64_t v225;
  _OWORD *v226;
  _OWORD *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _BYTE *v232;
  _BYTE *v233;
  uint64_t v234;
  _BYTE *v235;
  _BYTE *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  _BYTE *v240;
  _BYTE *v241;
  uint64_t v242;
  _BYTE *v243;
  _BYTE *v244;
  uint64_t v245;
  uint64_t v246;
  _BYTE *v247;
  _BYTE *v248;
  uint64_t v249;
  _BYTE *v250;
  _BYTE *v251;
  uint64_t v252;
  uint64_t v253;
  _BYTE *v254;
  _BYTE *v255;
  uint64_t v256;
  _BYTE *v257;
  _BYTE *v258;
  uint64_t v259;
  uint64_t v260;
  _BYTE *v261;
  _BYTE *v262;
  __int128 v263;
  uint64_t v264;
  _BYTE *v265;
  _BYTE *v266;
  uint64_t v267;
  _BYTE *v268;
  _BYTE *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  unsigned int (*v277)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v278)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v279)(_BYTE *, uint64_t, uint64_t);
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  unsigned int (*v283)(_BYTE *, uint64_t, uint64_t);
  unsigned int (*v284)(_QWORD, _QWORD, _QWORD);
  uint64_t v285;
  uint64_t v286;
  int *v287;

  v3 = a3;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v7 = a3[10];
  v8 = (_BYTE *)(a1 + v7);
  v9 = (_BYTE *)(a2 + v7);
  v10 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v286 = *((_QWORD *)v10 - 1);
  v11 = *(unsigned int (**)(_QWORD, _QWORD, _QWORD))(v286 + 48);
  v287 = v3;
  v284 = v11;
  if (v11(v9, 1, v10))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    v8[8] = v9[8];
    v13 = v10[5];
    v14 = &v8[v13];
    v15 = &v9[v13];
    v16 = sub_1BB86D078();
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v17 + 48);
    if (v18(v15, 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v14, v15, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    v20 = v10[6];
    v21 = &v8[v20];
    v22 = &v9[v20];
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v10[7];
    v24 = &v8[v23];
    v25 = &v9[v23];
    v277 = v18;
    v280 = v17;
    if (v18(&v9[v23], 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v17 + 32))(v24, v25, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v16);
    }
    v27 = v10[8];
    v28 = &v8[v27];
    v29 = &v9[v27];
    v30 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      *v28 = *v29;
      (*(void (**)(char *, char *, uint64_t))(v280 + 32))((char *)v28 + *(int *)(v30 + 24), (char *)v29 + *(int *)(v30 + 24), v16);
      *(_QWORD *)((char *)v28 + *(int *)(v30 + 28)) = *(_QWORD *)((char *)v29 + *(int *)(v30 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v10[9];
    v34 = &v8[v33];
    v35 = &v9[v33];
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    v36 = v10[10];
    v37 = &v8[v36];
    v38 = &v9[v36];
    if (v277(&v9[v36], 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      v40 = v280;
    }
    else
    {
      v40 = v280;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v280 + 32))(v37, v38, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v37, 0, 1, v16);
    }
    v41 = v10[11];
    v42 = &v8[v41];
    v43 = &v9[v41];
    *(_QWORD *)v42 = *(_QWORD *)v43;
    v42[8] = v43[8];
    v44 = v10[12];
    v45 = &v8[v44];
    v46 = &v9[v44];
    if (v277(&v9[v44], 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v40 + 32))(v45, v46, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v45, 0, 1, v16);
    }
    v48 = v10[13];
    v49 = &v8[v48];
    v50 = &v9[v48];
    *(_QWORD *)v49 = *(_QWORD *)v50;
    v49[8] = v50[8];
    v51 = v10[14];
    v52 = &v8[v51];
    v53 = &v9[v51];
    if (v277(&v9[v51], 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v40 + 32))(v52, v53, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v52, 0, 1, v16);
    }
    v55 = v10[15];
    v56 = &v8[v55];
    v57 = &v9[v55];
    *(_QWORD *)v56 = *(_QWORD *)v57;
    v56[8] = v57[8];
    v58 = v10[16];
    v59 = &v8[v58];
    v60 = &v9[v58];
    if (v277(&v9[v58], 1, v16))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v59, v60, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v40 + 32))(v59, v60, v16);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v59, 0, 1, v16);
    }
    v62 = v10[17];
    v63 = &v8[v62];
    v64 = &v9[v62];
    v65 = *((_OWORD *)v64 + 1);
    *(_OWORD *)v63 = *(_OWORD *)v64;
    *((_OWORD *)v63 + 1) = v65;
    *((_QWORD *)v63 + 4) = *((_QWORD *)v64 + 4);
    v66 = v10[18];
    v67 = &v8[v66];
    v68 = &v9[v66];
    v67[8] = v68[8];
    *(_QWORD *)v67 = *(_QWORD *)v68;
    v69 = v10[19];
    v70 = &v8[v69];
    v71 = &v9[v69];
    v72 = sub_1BB86D024();
    v73 = *(_QWORD *)(v72 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v73 + 48))(v71, 1, v72))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v70, v71, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v73 + 32))(v70, v71, v72);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
    }
    v3 = v287;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v286 + 56))(v8, 0, 1, v10);
    v11 = v284;
  }
  v75 = v3[11];
  v76 = (_BYTE *)(a1 + v75);
  v77 = (_BYTE *)(a2 + v75);
  if (v11(a2 + v75, 1, v10))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v76, v77, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v76 = *(_QWORD *)v77;
    v76[8] = v77[8];
    v79 = v10[5];
    v80 = &v76[v79];
    v81 = &v77[v79];
    v82 = sub_1BB86D078();
    v83 = *(_QWORD *)(v82 - 8);
    v84 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v83 + 48);
    if (v84(v81, 1, v82))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v80, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v83 + 32))(v80, v81, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v80, 0, 1, v82);
    }
    v86 = v10[6];
    v87 = &v76[v86];
    v88 = &v77[v86];
    *(_QWORD *)v87 = *(_QWORD *)v88;
    v87[8] = v88[8];
    v89 = v10[7];
    v90 = &v76[v89];
    v91 = &v77[v89];
    v278 = v84;
    v281 = v83;
    if (v84(&v77[v89], 1, v82))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v83 + 32))(v90, v91, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v90, 0, 1, v82);
    }
    v93 = v10[8];
    v94 = &v76[v93];
    v95 = &v77[v93];
    v96 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v97 = *(_QWORD *)(v96 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v97 + 48))(v95, 1, v96))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    }
    else
    {
      *v94 = *v95;
      (*(void (**)(char *, char *, uint64_t))(v281 + 32))((char *)v94 + *(int *)(v96 + 24), (char *)v95 + *(int *)(v96 + 24), v82);
      *(_QWORD *)((char *)v94 + *(int *)(v96 + 28)) = *(_QWORD *)((char *)v95 + *(int *)(v96 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
    }
    v99 = v10[9];
    v100 = &v76[v99];
    v101 = &v77[v99];
    *(_QWORD *)v100 = *(_QWORD *)v101;
    v100[8] = v101[8];
    v102 = v10[10];
    v103 = &v76[v102];
    v104 = &v77[v102];
    if (v278(&v77[v102], 1, v82))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
      v106 = v281;
    }
    else
    {
      v106 = v281;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v281 + 32))(v103, v104, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v103, 0, 1, v82);
    }
    v107 = v10[11];
    v108 = &v76[v107];
    v109 = &v77[v107];
    *(_QWORD *)v108 = *(_QWORD *)v109;
    v108[8] = v109[8];
    v110 = v10[12];
    v111 = &v76[v110];
    v112 = &v77[v110];
    if (v278(&v77[v110], 1, v82))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v106 + 32))(v111, v112, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v111, 0, 1, v82);
    }
    v114 = v10[13];
    v115 = &v76[v114];
    v116 = &v77[v114];
    *(_QWORD *)v115 = *(_QWORD *)v116;
    v115[8] = v116[8];
    v117 = v10[14];
    v118 = &v76[v117];
    v119 = &v77[v117];
    if (v278(&v77[v117], 1, v82))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v120 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v106 + 32))(v118, v119, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v118, 0, 1, v82);
    }
    v121 = v10[15];
    v122 = &v76[v121];
    v123 = &v77[v121];
    *(_QWORD *)v122 = *(_QWORD *)v123;
    v122[8] = v123[8];
    v124 = v10[16];
    v125 = &v76[v124];
    v126 = &v77[v124];
    if (v278(&v77[v124], 1, v82))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v106 + 32))(v125, v126, v82);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v106 + 56))(v125, 0, 1, v82);
    }
    v128 = v10[17];
    v129 = &v76[v128];
    v130 = &v77[v128];
    v131 = *((_OWORD *)v130 + 1);
    *(_OWORD *)v129 = *(_OWORD *)v130;
    *((_OWORD *)v129 + 1) = v131;
    *((_QWORD *)v129 + 4) = *((_QWORD *)v130 + 4);
    v132 = v10[18];
    v133 = &v76[v132];
    v134 = &v77[v132];
    v133[8] = v134[8];
    *(_QWORD *)v133 = *(_QWORD *)v134;
    v135 = v10[19];
    v136 = &v76[v135];
    v137 = &v77[v135];
    v138 = sub_1BB86D024();
    v139 = *(_QWORD *)(v138 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v139 + 48))(v137, 1, v138))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v139 + 32))(v136, v137, v138);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v139 + 56))(v136, 0, 1, v138);
    }
    v3 = v287;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v286 + 56))(v76, 0, 1, v10);
    v11 = v284;
  }
  v141 = v3[13];
  *(_QWORD *)(a1 + v3[12]) = *(_QWORD *)(a2 + v3[12]);
  v142 = (_BYTE *)(a1 + v141);
  v143 = (_BYTE *)(a2 + v141);
  if (v11(a2 + v141, 1, v10))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v142, v143, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v142 = *(_QWORD *)v143;
    v142[8] = v143[8];
    v145 = v10[5];
    v146 = &v142[v145];
    v147 = &v143[v145];
    v148 = sub_1BB86D078();
    v149 = *(_QWORD *)(v148 - 8);
    v150 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v149 + 48);
    if (v150(v147, 1, v148))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v146, v147, *(_QWORD *)(*(_QWORD *)(v151 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v149 + 32))(v146, v147, v148);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v146, 0, 1, v148);
    }
    v152 = v10[6];
    v153 = &v142[v152];
    v154 = &v143[v152];
    *(_QWORD *)v153 = *(_QWORD *)v154;
    v153[8] = v154[8];
    v155 = v10[7];
    v156 = &v142[v155];
    v157 = &v143[v155];
    v279 = v150;
    v282 = v149;
    if (v150(&v143[v155], 1, v148))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v156, v157, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v149 + 32))(v156, v157, v148);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v156, 0, 1, v148);
    }
    v159 = v10[8];
    v160 = &v142[v159];
    v161 = &v143[v159];
    v162 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v163 = *(_QWORD *)(v162 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v163 + 48))(v161, 1, v162))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
    }
    else
    {
      *v160 = *v161;
      (*(void (**)(char *, char *, uint64_t))(v282 + 32))((char *)v160 + *(int *)(v162 + 24), (char *)v161 + *(int *)(v162 + 24), v148);
      *(_QWORD *)((char *)v160 + *(int *)(v162 + 28)) = *(_QWORD *)((char *)v161 + *(int *)(v162 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v163 + 56))(v160, 0, 1, v162);
    }
    v165 = v10[9];
    v166 = &v142[v165];
    v167 = &v143[v165];
    *(_QWORD *)v166 = *(_QWORD *)v167;
    v166[8] = v167[8];
    v168 = v10[10];
    v169 = &v142[v168];
    v170 = &v143[v168];
    if (v279(&v143[v168], 1, v148))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v171 - 8) + 64));
      v172 = v282;
    }
    else
    {
      v172 = v282;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v282 + 32))(v169, v170, v148);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v282 + 56))(v169, 0, 1, v148);
    }
    v173 = v10[11];
    v174 = &v142[v173];
    v175 = &v143[v173];
    *(_QWORD *)v174 = *(_QWORD *)v175;
    v174[8] = v175[8];
    v176 = v10[12];
    v177 = &v142[v176];
    v178 = &v143[v176];
    if (v279(&v143[v176], 1, v148))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v172 + 32))(v177, v178, v148);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v177, 0, 1, v148);
    }
    v180 = v10[13];
    v181 = &v142[v180];
    v182 = &v143[v180];
    *(_QWORD *)v181 = *(_QWORD *)v182;
    v181[8] = v182[8];
    v183 = v10[14];
    v184 = &v142[v183];
    v185 = &v143[v183];
    if (v279(&v143[v183], 1, v148))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v184, v185, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v172 + 32))(v184, v185, v148);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v184, 0, 1, v148);
    }
    v187 = v10[15];
    v188 = &v142[v187];
    v189 = &v143[v187];
    *(_QWORD *)v188 = *(_QWORD *)v189;
    v188[8] = v189[8];
    v190 = v10[16];
    v191 = &v142[v190];
    v192 = &v143[v190];
    if (v279(&v143[v190], 1, v148))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v191, v192, *(_QWORD *)(*(_QWORD *)(v193 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v172 + 32))(v191, v192, v148);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v172 + 56))(v191, 0, 1, v148);
    }
    v194 = v10[17];
    v195 = &v142[v194];
    v196 = &v143[v194];
    v197 = *((_OWORD *)v196 + 1);
    *(_OWORD *)v195 = *(_OWORD *)v196;
    *((_OWORD *)v195 + 1) = v197;
    *((_QWORD *)v195 + 4) = *((_QWORD *)v196 + 4);
    v198 = v10[18];
    v199 = &v142[v198];
    v200 = &v143[v198];
    v199[8] = v200[8];
    *(_QWORD *)v199 = *(_QWORD *)v200;
    v201 = v10[19];
    v202 = &v142[v201];
    v203 = &v143[v201];
    v204 = sub_1BB86D024();
    v205 = *(_QWORD *)(v204 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v205 + 48))(v203, 1, v204))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v205 + 32))(v202, v203, v204);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v205 + 56))(v202, 0, 1, v204);
    }
    v3 = v287;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v286 + 56))(v142, 0, 1, v10);
    v11 = v284;
  }
  v207 = v3[14];
  v208 = (_BYTE *)(a1 + v207);
  v209 = (_BYTE *)(a2 + v207);
  if (v11(a2 + v207, 1, v10))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v208 = *(_QWORD *)v209;
    v208[8] = v209[8];
    v211 = v10[5];
    v212 = &v208[v211];
    v213 = &v209[v211];
    v214 = sub_1BB86D078();
    v215 = *(_QWORD *)(v214 - 8);
    v216 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v215 + 48);
    if (v216(v213, 1, v214))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v212, v213, *(_QWORD *)(*(_QWORD *)(v217 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v215 + 32))(v212, v213, v214);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v212, 0, 1, v214);
    }
    v218 = v10[6];
    v219 = &v208[v218];
    v220 = &v209[v218];
    *(_QWORD *)v219 = *(_QWORD *)v220;
    v219[8] = v220[8];
    v221 = v10[7];
    v222 = &v208[v221];
    v223 = &v209[v221];
    v283 = v216;
    v285 = v215;
    if (v216(&v209[v221], 1, v214))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v215 + 32))(v222, v223, v214);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v215 + 56))(v222, 0, 1, v214);
    }
    v225 = v10[8];
    v226 = &v208[v225];
    v227 = &v209[v225];
    v228 = type metadata accessor for FeedGroupBundleArticleQuotas();
    v229 = *(_QWORD *)(v228 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v229 + 48))(v227, 1, v228))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
      memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
    }
    else
    {
      *v226 = *v227;
      (*(void (**)(char *, char *, uint64_t))(v285 + 32))((char *)v226 + *(int *)(v228 + 24), (char *)v227 + *(int *)(v228 + 24), v214);
      *(_QWORD *)((char *)v226 + *(int *)(v228 + 28)) = *(_QWORD *)((char *)v227 + *(int *)(v228 + 28));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v229 + 56))(v226, 0, 1, v228);
    }
    v231 = v10[9];
    v232 = &v208[v231];
    v233 = &v209[v231];
    *(_QWORD *)v232 = *(_QWORD *)v233;
    v232[8] = v233[8];
    v234 = v10[10];
    v235 = &v208[v234];
    v236 = &v209[v234];
    if (v283(&v209[v234], 1, v214))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v235, v236, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
      v238 = v285;
    }
    else
    {
      v238 = v285;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v285 + 32))(v235, v236, v214);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v285 + 56))(v235, 0, 1, v214);
    }
    v239 = v10[11];
    v240 = &v208[v239];
    v241 = &v209[v239];
    *(_QWORD *)v240 = *(_QWORD *)v241;
    v240[8] = v241[8];
    v242 = v10[12];
    v243 = &v208[v242];
    v244 = &v209[v242];
    if (v283(&v209[v242], 1, v214))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v245 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v238 + 32))(v243, v244, v214);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v243, 0, 1, v214);
    }
    v246 = v10[13];
    v247 = &v208[v246];
    v248 = &v209[v246];
    *(_QWORD *)v247 = *(_QWORD *)v248;
    v247[8] = v248[8];
    v249 = v10[14];
    v250 = &v208[v249];
    v251 = &v209[v249];
    if (v283(&v209[v249], 1, v214))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v238 + 32))(v250, v251, v214);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v250, 0, 1, v214);
    }
    v253 = v10[15];
    v254 = &v208[v253];
    v255 = &v209[v253];
    *(_QWORD *)v254 = *(_QWORD *)v255;
    v254[8] = v255[8];
    v256 = v10[16];
    v257 = &v208[v256];
    v258 = &v209[v256];
    if (v283(&v209[v256], 1, v214))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
      memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v238 + 32))(v257, v258, v214);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v238 + 56))(v257, 0, 1, v214);
    }
    v260 = v10[17];
    v261 = &v208[v260];
    v262 = &v209[v260];
    v263 = *((_OWORD *)v262 + 1);
    *(_OWORD *)v261 = *(_OWORD *)v262;
    *((_OWORD *)v261 + 1) = v263;
    *((_QWORD *)v261 + 4) = *((_QWORD *)v262 + 4);
    v264 = v10[18];
    v265 = &v208[v264];
    v266 = &v209[v264];
    v265[8] = v266[8];
    *(_QWORD *)v265 = *(_QWORD *)v266;
    v267 = v10[19];
    v268 = &v208[v267];
    v269 = &v209[v267];
    v270 = sub_1BB86D024();
    v271 = *(_QWORD *)(v270 - 8);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v271 + 48))(v269, 1, v270))
    {
      sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
      memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v271 + 32))(v268, v269, v270);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v271 + 56))(v268, 0, 1, v270);
    }
    v3 = v287;
    (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v286 + 56))(v208, 0, 1, v10);
  }
  v273 = v3[16];
  *(_QWORD *)(a1 + v3[15]) = *(_QWORD *)(a2 + v3[15]);
  *(_BYTE *)(a1 + v273) = *(_BYTE *)(a2 + v273);
  v274 = v3[18];
  *(_BYTE *)(a1 + v3[17]) = *(_BYTE *)(a2 + v3[17]);
  *(_QWORD *)(a1 + v274) = *(_QWORD *)(a2 + v274);
  v275 = v3[20];
  *(_QWORD *)(a1 + v3[19]) = *(_QWORD *)(a2 + v3[19]);
  *(_BYTE *)(a1 + v275) = *(_BYTE *)(a2 + v275);
  *(_WORD *)(a1 + v3[21]) = *(_WORD *)(a2 + v3[21]);
  return a1;
}

uint64_t assignWithTake for FeedClusteringRequest(uint64_t a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  int *v9;
  uint64_t (*v10)(_BYTE *, uint64_t, int *);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(_BYTE *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t (*v25)(_BYTE *, uint64_t, uint64_t);
  int v26;
  int v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _BYTE *v42;
  _BYTE *v43;
  uint64_t v44;
  _BYTE *v45;
  _BYTE *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _BYTE *v50;
  _BYTE *v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  _BYTE *v58;
  uint64_t v59;
  _BYTE *v60;
  _BYTE *v61;
  uint64_t v62;
  uint64_t v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  _BYTE *v67;
  _BYTE *v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _BYTE *v72;
  __int128 v73;
  uint64_t v74;
  _BYTE *v75;
  _BYTE *v76;
  uint64_t v77;
  _BYTE *v78;
  _BYTE *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  _BYTE *v86;
  uint64_t v87;
  _BYTE *v88;
  _BYTE *v89;
  int v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v105;
  _BYTE *v106;
  _BYTE *v107;
  uint64_t v108;
  _BYTE *v109;
  _BYTE *v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  _BYTE *v115;
  _BYTE *v116;
  uint64_t v117;
  _BYTE *v118;
  _BYTE *v119;
  int v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  _BYTE *v128;
  int v129;
  int v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  _BYTE *v137;
  int v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _BYTE *v143;
  uint64_t v144;
  __int128 v145;
  uint64_t v146;
  _BYTE *v147;
  _BYTE *v148;
  uint64_t v149;
  _BYTE *v150;
  _BYTE *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t (*v154)(_BYTE *, uint64_t, uint64_t);
  int v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  _BYTE *v159;
  _BYTE *v160;
  int v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  _BYTE *v165;
  _BYTE *v166;
  uint64_t v167;
  uint64_t v168;
  unsigned int (*v169)(_BYTE *, uint64_t, uint64_t);
  uint64_t v170;
  uint64_t v171;
  _BYTE *v172;
  _BYTE *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t (*v176)(_BYTE *, uint64_t, uint64_t);
  int v177;
  int v178;
  uint64_t v179;
  _BYTE *v180;
  _BYTE *v181;
  uint64_t v182;
  _BYTE *v183;
  _BYTE *v184;
  uint64_t v185;
  uint64_t v186;
  _OWORD *v187;
  _OWORD *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _BYTE *v193;
  _BYTE *v194;
  uint64_t v195;
  _BYTE *v196;
  _BYTE *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _BYTE *v201;
  _BYTE *v202;
  uint64_t v203;
  _BYTE *v204;
  _BYTE *v205;
  uint64_t v206;
  uint64_t v207;
  _BYTE *v208;
  _BYTE *v209;
  uint64_t v210;
  _BYTE *v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  _BYTE *v216;
  uint64_t v217;
  _BYTE *v218;
  _BYTE *v219;
  uint64_t v220;
  uint64_t v221;
  _BYTE *v222;
  _BYTE *v223;
  __int128 v224;
  uint64_t v225;
  _BYTE *v226;
  _BYTE *v227;
  uint64_t v228;
  _BYTE *v229;
  _BYTE *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  _BYTE *v236;
  _BYTE *v237;
  uint64_t v238;
  _BYTE *v239;
  _BYTE *v240;
  int v241;
  int v242;
  uint64_t v243;
  uint64_t v244;
  char *v245;
  char *v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t (*v249)(char *, uint64_t, uint64_t);
  int v250;
  int v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _BYTE *v255;
  _BYTE *v256;
  uint64_t v257;
  _BYTE *v258;
  _BYTE *v259;
  int v260;
  int v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  _BYTE *v265;
  _BYTE *v266;
  uint64_t v267;
  _BYTE *v268;
  _BYTE *v269;
  int v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  _BYTE *v274;
  _BYTE *v275;
  uint64_t v276;
  _BYTE *v277;
  _BYTE *v278;
  int v279;
  int v280;
  uint64_t v281;
  uint64_t v282;
  _BYTE *v283;
  _BYTE *v284;
  uint64_t v285;
  _BYTE *v286;
  _BYTE *v287;
  int v288;
  int v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  _BYTE *v293;
  uint64_t v294;
  __int128 v295;
  uint64_t v296;
  _BYTE *v297;
  _BYTE *v298;
  uint64_t v299;
  _BYTE *v300;
  _BYTE *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t (*v304)(_BYTE *, uint64_t, uint64_t);
  int v305;
  int v306;
  uint64_t v307;
  uint64_t v308;
  _BYTE *v309;
  _BYTE *v310;
  int v311;
  int v312;
  uint64_t v313;
  uint64_t v314;
  _BYTE *v315;
  _BYTE *v316;
  uint64_t v317;
  uint64_t v318;
  unsigned int (*v319)(_BYTE *, uint64_t, uint64_t);
  uint64_t v320;
  uint64_t v321;
  _BYTE *v322;
  _BYTE *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t (*v326)(_BYTE *, uint64_t, uint64_t);
  int v327;
  int v328;
  uint64_t v329;
  _BYTE *v330;
  _BYTE *v331;
  uint64_t v332;
  _BYTE *v333;
  _BYTE *v334;
  uint64_t v335;
  uint64_t v336;
  _OWORD *v337;
  _OWORD *v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _BYTE *v343;
  _BYTE *v344;
  uint64_t v345;
  _BYTE *v346;
  _BYTE *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  _BYTE *v351;
  _BYTE *v352;
  uint64_t v353;
  _BYTE *v354;
  _BYTE *v355;
  uint64_t v356;
  uint64_t v357;
  _BYTE *v358;
  _BYTE *v359;
  uint64_t v360;
  _BYTE *v361;
  _BYTE *v362;
  uint64_t v363;
  uint64_t v364;
  _BYTE *v365;
  _BYTE *v366;
  uint64_t v367;
  _BYTE *v368;
  _BYTE *v369;
  uint64_t v370;
  uint64_t v371;
  _BYTE *v372;
  _BYTE *v373;
  __int128 v374;
  uint64_t v375;
  _BYTE *v376;
  _BYTE *v377;
  uint64_t v378;
  _BYTE *v379;
  _BYTE *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  _BYTE *v386;
  _BYTE *v387;
  uint64_t v388;
  _BYTE *v389;
  _BYTE *v390;
  int v391;
  int v392;
  uint64_t v393;
  uint64_t v394;
  char *v395;
  char *v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t (*v399)(char *, uint64_t, uint64_t);
  int v400;
  int v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  _BYTE *v405;
  _BYTE *v406;
  uint64_t v407;
  _BYTE *v408;
  _BYTE *v409;
  int v410;
  int v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  _BYTE *v415;
  _BYTE *v416;
  uint64_t v417;
  _BYTE *v418;
  _BYTE *v419;
  int v420;
  int v421;
  uint64_t v422;
  uint64_t v423;
  _BYTE *v424;
  _BYTE *v425;
  uint64_t v426;
  _BYTE *v427;
  _BYTE *v428;
  int v429;
  int v430;
  uint64_t v431;
  uint64_t v432;
  _BYTE *v433;
  _BYTE *v434;
  uint64_t v435;
  _BYTE *v436;
  _BYTE *v437;
  int v438;
  int v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  _BYTE *v443;
  uint64_t v444;
  __int128 v445;
  uint64_t v446;
  _BYTE *v447;
  _BYTE *v448;
  uint64_t v449;
  _BYTE *v450;
  _BYTE *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t (*v454)(_BYTE *, uint64_t, uint64_t);
  int v455;
  int v456;
  uint64_t v457;
  uint64_t v458;
  _BYTE *v459;
  _BYTE *v460;
  int v461;
  int v462;
  uint64_t v463;
  uint64_t v464;
  _BYTE *v465;
  _BYTE *v466;
  uint64_t v467;
  uint64_t v468;
  unsigned int (*v469)(_BYTE *, uint64_t, uint64_t);
  uint64_t v470;
  uint64_t v471;
  _BYTE *v472;
  _BYTE *v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t (*v476)(_BYTE *, uint64_t, uint64_t);
  int v477;
  int v478;
  uint64_t v479;
  _BYTE *v480;
  _BYTE *v481;
  uint64_t v482;
  _BYTE *v483;
  _BYTE *v484;
  uint64_t v485;
  uint64_t v486;
  _OWORD *v487;
  _OWORD *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  _BYTE *v493;
  _BYTE *v494;
  uint64_t v495;
  _BYTE *v496;
  _BYTE *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  _BYTE *v501;
  _BYTE *v502;
  uint64_t v503;
  _BYTE *v504;
  _BYTE *v505;
  uint64_t v506;
  uint64_t v507;
  _BYTE *v508;
  _BYTE *v509;
  uint64_t v510;
  _BYTE *v511;
  _BYTE *v512;
  uint64_t v513;
  uint64_t v514;
  _BYTE *v515;
  _BYTE *v516;
  uint64_t v517;
  _BYTE *v518;
  _BYTE *v519;
  uint64_t v520;
  uint64_t v521;
  _BYTE *v522;
  _BYTE *v523;
  __int128 v524;
  uint64_t v525;
  _BYTE *v526;
  _BYTE *v527;
  uint64_t v528;
  _BYTE *v529;
  _BYTE *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  _BYTE *v536;
  _BYTE *v537;
  uint64_t v538;
  _BYTE *v539;
  _BYTE *v540;
  int v541;
  int v542;
  uint64_t v543;
  uint64_t v544;
  char *v545;
  char *v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t (*v549)(char *, uint64_t, uint64_t);
  int v550;
  int v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  _BYTE *v555;
  _BYTE *v556;
  uint64_t v557;
  _BYTE *v558;
  _BYTE *v559;
  int v560;
  int v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  _BYTE *v565;
  _BYTE *v566;
  uint64_t v567;
  _BYTE *v568;
  _BYTE *v569;
  int v570;
  int v571;
  uint64_t v572;
  uint64_t v573;
  _BYTE *v574;
  _BYTE *v575;
  uint64_t v576;
  _BYTE *v577;
  _BYTE *v578;
  int v579;
  int v580;
  uint64_t v581;
  uint64_t v582;
  _BYTE *v583;
  _BYTE *v584;
  uint64_t v585;
  _BYTE *v586;
  _BYTE *v587;
  int v588;
  int v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  _BYTE *v593;
  uint64_t v594;
  __int128 v595;
  uint64_t v596;
  _BYTE *v597;
  _BYTE *v598;
  uint64_t v599;
  _BYTE *v600;
  _BYTE *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t (*v604)(_BYTE *, uint64_t, uint64_t);
  int v605;
  int v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v612;
  uint64_t (*v613)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v614)(_BYTE *, uint64_t, uint64_t);
  uint64_t (*v615)(_BYTE *, uint64_t, uint64_t);
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t (*v624)(_BYTE *, uint64_t, uint64_t);
  uint64_t v625;
  uint64_t v626;
  uint64_t (*v627)(_BYTE *, uint64_t, int *);
  uint64_t v628;
  uint64_t v629;
  _QWORD *v630;
  int *v631;

  v4 = a2;
  *(_QWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = v4[1];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v4[2];
  swift_unknownObjectRelease();
  *(_QWORD *)(a1 + 24) = v4[3];
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)v4 + 32);
  *(_QWORD *)(a1 + 40) = v4[5];
  v6 = a3[10];
  v7 = (_BYTE *)(a1 + v6);
  v8 = (char *)v4 + v6;
  v9 = (int *)type metadata accessor for FeedClusteringOptions(0);
  v625 = *((_QWORD *)v9 - 1);
  v10 = *(uint64_t (**)(_BYTE *, uint64_t, int *))(v625 + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  v630 = v4;
  v631 = a3;
  v627 = v10;
  if (!v11)
  {
    if (v12)
    {
      sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FeedClusteringOptions);
LABEL_6:
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_90;
    }
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v7[8] = v8[8];
    v21 = v9[5];
    v22 = &v7[v21];
    v23 = &v8[v21];
    v24 = sub_1BB86D078();
    v618 = *(_QWORD *)(v24 - 8);
    v25 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v618 + 48);
    v26 = v25(v22, 1, v24);
    v615 = v25;
    v27 = v25(v23, 1, v24);
    if (v26)
    {
      if (!v27)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v618 + 32))(v22, v23, v24);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v618 + 56))(v22, 0, 1, v24);
        goto LABEL_38;
      }
    }
    else
    {
      if (!v27)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v618 + 40))(v22, v23, v24);
LABEL_38:
        v84 = v9[6];
        v85 = &v7[v84];
        v86 = &v8[v84];
        *(_QWORD *)v85 = *(_QWORD *)v86;
        v85[8] = v86[8];
        v87 = v9[7];
        v88 = &v7[v87];
        v89 = &v8[v87];
        v90 = v25(&v7[v87], 1, v24);
        v91 = v25(v89, 1, v24);
        v612 = v24;
        if (v90)
        {
          if (!v91)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v618 + 32))(v88, v89, v24);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v618 + 56))(v88, 0, 1, v24);
            goto LABEL_44;
          }
        }
        else
        {
          if (!v91)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v618 + 40))(v88, v89, v24);
LABEL_44:
            v93 = v9[8];
            v94 = &v7[v93];
            v95 = &v8[v93];
            v96 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v97 = *(_QWORD *)(v96 - 8);
            v98 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v97 + 48);
            v99 = v98(v94, 1, v96);
            v100 = v98(v95, 1, v96);
            if (v99)
            {
              v101 = v612;
              if (v100)
                goto LABEL_49;
              *(_OWORD *)v94 = *(_OWORD *)v95;
              (*(void (**)(char *, char *, uint64_t))(v618 + 32))(&v94[*(int *)(v96 + 24)], &v95[*(int *)(v96 + 24)], v612);
              *(_QWORD *)&v94[*(int *)(v96 + 28)] = *(_QWORD *)&v95[*(int *)(v96 + 28)];
              v104 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56);
              v103 = v618;
              v104(v94, 0, 1, v96);
            }
            else
            {
              v101 = v612;
              if (v100)
              {
                sub_1BA4A2E80((uint64_t)v94, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_49:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
                v103 = v618;
                goto LABEL_54;
              }
              *(_QWORD *)v94 = *(_QWORD *)v95;
              *((_QWORD *)v94 + 1) = *((_QWORD *)v95 + 1);
              swift_bridgeObjectRelease();
              v103 = v618;
              (*(void (**)(char *, char *, uint64_t))(v618 + 40))(&v94[*(int *)(v96 + 24)], &v95[*(int *)(v96 + 24)], v612);
              *(_QWORD *)&v94[*(int *)(v96 + 28)] = *(_QWORD *)&v95[*(int *)(v96 + 28)];
              swift_bridgeObjectRelease();
            }
LABEL_54:
            v105 = v9[9];
            v106 = &v7[v105];
            v107 = &v8[v105];
            *(_QWORD *)v106 = *(_QWORD *)v107;
            v106[8] = v107[8];
            v108 = v9[10];
            v109 = &v7[v108];
            v110 = &v8[v108];
            v111 = v615(&v7[v108], 1, v101);
            v112 = v615(v110, 1, v101);
            if (v111)
            {
              if (!v112)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 32))(v109, v110, v101);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v109, 0, 1, v101);
                goto LABEL_60;
              }
            }
            else
            {
              if (!v112)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 40))(v109, v110, v101);
LABEL_60:
                v114 = v9[11];
                v115 = &v7[v114];
                v116 = &v8[v114];
                *(_QWORD *)v115 = *(_QWORD *)v116;
                v115[8] = v116[8];
                v117 = v9[12];
                v118 = &v7[v117];
                v119 = &v8[v117];
                v120 = v615(&v7[v117], 1, v101);
                v121 = v615(v119, 1, v101);
                if (v120)
                {
                  if (!v121)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 32))(v118, v119, v101);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v118, 0, 1, v101);
                    goto LABEL_66;
                  }
                }
                else
                {
                  if (!v121)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 40))(v118, v119, v101);
LABEL_66:
                    v123 = v9[13];
                    v124 = &v7[v123];
                    v125 = &v8[v123];
                    *(_QWORD *)v124 = *(_QWORD *)v125;
                    v124[8] = v125[8];
                    v126 = v9[14];
                    v127 = &v7[v126];
                    v128 = &v8[v126];
                    v129 = v615(&v7[v126], 1, v101);
                    v130 = v615(v128, 1, v101);
                    if (v129)
                    {
                      if (!v130)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 32))(v127, v128, v101);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v127, 0, 1, v101);
                        goto LABEL_72;
                      }
                    }
                    else
                    {
                      if (!v130)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 40))(v127, v128, v101);
LABEL_72:
                        v132 = v9[15];
                        v133 = &v7[v132];
                        v134 = &v8[v132];
                        *(_QWORD *)v133 = *(_QWORD *)v134;
                        v133[8] = v134[8];
                        v135 = v9[16];
                        v136 = &v7[v135];
                        v137 = &v8[v135];
                        v138 = v615(&v7[v135], 1, v101);
                        v139 = v615(v137, 1, v101);
                        if (v138)
                        {
                          if (!v139)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 32))(v136, v137, v101);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v136, 0, 1, v101);
                            goto LABEL_78;
                          }
                        }
                        else
                        {
                          if (!v139)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v103 + 40))(v136, v137, v101);
LABEL_78:
                            v141 = v9[17];
                            v142 = (uint64_t)&v7[v141];
                            v143 = &v8[v141];
                            v10 = v627;
                            if (*(_QWORD *)&v7[v141 + 32] != 1)
                            {
                              v144 = *((_QWORD *)v143 + 4);
                              if (v144 != 1)
                              {
                                *(_QWORD *)v142 = *(_QWORD *)v143;
                                *(_BYTE *)(v142 + 8) = v143[8];
                                *(_QWORD *)(v142 + 16) = *((_QWORD *)v143 + 2);
                                *(_BYTE *)(v142 + 24) = v143[24];
                                *(_QWORD *)(v142 + 32) = v144;
                                swift_bridgeObjectRelease();
LABEL_83:
                                v146 = v9[18];
                                v147 = &v7[v146];
                                v148 = &v8[v146];
                                *(_QWORD *)v147 = *(_QWORD *)v148;
                                v147[8] = v148[8];
                                v149 = v9[19];
                                v150 = &v7[v149];
                                v151 = &v8[v149];
                                v152 = sub_1BB86D024();
                                v153 = *(_QWORD *)(v152 - 8);
                                v154 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v153 + 48);
                                v155 = v154(v150, 1, v152);
                                v156 = v154(v151, 1, v152);
                                if (v155)
                                {
                                  a3 = v631;
                                  if (!v156)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v153 + 32))(v150, v151, v152);
                                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v152);
LABEL_89:
                                    v4 = v630;
                                    goto LABEL_90;
                                  }
                                }
                                else
                                {
                                  a3 = v631;
                                  if (!v156)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v153 + 40))(v150, v151, v152);
                                    goto LABEL_89;
                                  }
                                  (*(void (**)(_BYTE *, uint64_t))(v153 + 8))(v150, v152);
                                }
                                sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
                                memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
                                goto LABEL_89;
                              }
                              sub_1BAF10C4C(v142);
                            }
                            v145 = *((_OWORD *)v143 + 1);
                            *(_OWORD *)v142 = *(_OWORD *)v143;
                            *(_OWORD *)(v142 + 16) = v145;
                            *(_QWORD *)(v142 + 32) = *((_QWORD *)v143 + 4);
                            goto LABEL_83;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v103 + 8))(v136, v101);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v136, v137, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
                        goto LABEL_78;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v103 + 8))(v127, v101);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v131 - 8) + 64));
                    goto LABEL_72;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v103 + 8))(v118, v101);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
                goto LABEL_66;
              }
              (*(void (**)(_BYTE *, uint64_t))(v103 + 8))(v109, v101);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
            goto LABEL_60;
          }
          (*(void (**)(_BYTE *, uint64_t))(v618 + 8))(v88, v24);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
        goto LABEL_44;
      }
      (*(void (**)(_BYTE *, uint64_t))(v618 + 8))(v22, v24);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v83 - 8) + 64));
    goto LABEL_38;
  }
  if (v12)
    goto LABEL_6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  v7[8] = v8[8];
  v14 = v9[5];
  v15 = &v7[v14];
  v16 = &v8[v14];
  v17 = sub_1BB86D078();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v18 + 48);
  if (v19(v16, 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v15, v16, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  v28 = v9[6];
  v29 = &v7[v28];
  v30 = &v8[v28];
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = v9[7];
  v32 = &v7[v31];
  v33 = &v8[v31];
  v619 = v18;
  if (v19(&v8[v31], 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v18 + 32))(v32, v33, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v32, 0, 1, v17);
  }
  v35 = v9[8];
  v36 = &v7[v35];
  v37 = &v8[v35];
  v38 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    *v36 = *v37;
    (*(void (**)(char *, char *, uint64_t))(v619 + 32))((char *)v36 + *(int *)(v38 + 24), (char *)v37 + *(int *)(v38 + 24), v17);
    *(_QWORD *)((char *)v36 + *(int *)(v38 + 28)) = *(_QWORD *)((char *)v37 + *(int *)(v38 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  v41 = v9[9];
  v42 = &v7[v41];
  v43 = &v8[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v43[8];
  v44 = v9[10];
  v45 = &v7[v44];
  v46 = &v8[v44];
  if (v19(&v8[v44], 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    v48 = v619;
  }
  else
  {
    v48 = v619;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v619 + 32))(v45, v46, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v619 + 56))(v45, 0, 1, v17);
  }
  v49 = v9[11];
  v50 = &v7[v49];
  v51 = &v8[v49];
  *(_QWORD *)v50 = *(_QWORD *)v51;
  v50[8] = v51[8];
  v52 = v9[12];
  v53 = &v7[v52];
  v54 = &v8[v52];
  if (v19(&v8[v52], 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(v53, v54, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v53, 0, 1, v17);
  }
  v56 = v9[13];
  v57 = &v7[v56];
  v58 = &v8[v56];
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  v59 = v9[14];
  v60 = &v7[v59];
  v61 = &v8[v59];
  if (v19(&v8[v59], 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(v60, v61, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v60, 0, 1, v17);
  }
  v63 = v9[15];
  v64 = &v7[v63];
  v65 = &v8[v63];
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = v65[8];
  v66 = v9[16];
  v67 = &v7[v66];
  v68 = &v8[v66];
  if (v19(&v8[v66], 1, v17))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v48 + 32))(v67, v68, v17);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v67, 0, 1, v17);
  }
  v70 = v9[17];
  v71 = &v7[v70];
  v72 = &v8[v70];
  v73 = *((_OWORD *)v72 + 1);
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *((_OWORD *)v71 + 1) = v73;
  *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
  v74 = v9[18];
  v75 = &v7[v74];
  v76 = &v8[v74];
  v75[8] = v76[8];
  *(_QWORD *)v75 = *(_QWORD *)v76;
  v77 = v9[19];
  v78 = &v7[v77];
  v79 = &v8[v77];
  v80 = sub_1BB86D024();
  v81 = *(_QWORD *)(v80 - 8);
  v10 = v627;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v81 + 32))(v78, v79, v80);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v81 + 56))(v78, 0, 1, v80);
  }
  v4 = v630;
  a3 = v631;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v625 + 56))(v7, 0, 1, v9);
LABEL_90:
  v158 = a3[11];
  v159 = (_BYTE *)(a1 + v158);
  v160 = (char *)v4 + v158;
  v161 = v10((_BYTE *)(a1 + v158), 1, v9);
  v162 = v10(v160, 1, v9);
  if (!v161)
  {
    if (v162)
    {
      sub_1BA4A2E80((uint64_t)v159, type metadata accessor for FeedClusteringOptions);
LABEL_95:
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      goto LABEL_184;
    }
    *(_QWORD *)v159 = *(_QWORD *)v160;
    v159[8] = v160[8];
    v171 = v9[5];
    v172 = &v159[v171];
    v173 = &v160[v171];
    v174 = sub_1BB86D078();
    v175 = *(_QWORD *)(v174 - 8);
    v176 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v175 + 48);
    v177 = v176(v172, 1, v174);
    v178 = v176(v173, 1, v174);
    if (v177)
    {
      if (!v178)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v175 + 32))(v172, v173, v174);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
        goto LABEL_127;
      }
    }
    else
    {
      if (!v178)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v175 + 40))(v172, v173, v174);
LABEL_127:
        v235 = v9[6];
        v236 = &v159[v235];
        v237 = &v160[v235];
        *(_QWORD *)v236 = *(_QWORD *)v237;
        v236[8] = v237[8];
        v238 = v9[7];
        v239 = &v159[v238];
        v240 = &v160[v238];
        v241 = v176(&v159[v238], 1, v174);
        v242 = v176(v240, 1, v174);
        v616 = v174;
        v621 = v175;
        v613 = v176;
        if (v241)
        {
          if (!v242)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v175 + 32))(v239, v240, v174);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v239, 0, 1, v174);
            goto LABEL_133;
          }
        }
        else
        {
          if (!v242)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v175 + 40))(v239, v240, v174);
LABEL_133:
            v244 = v9[8];
            v245 = &v159[v244];
            v246 = &v160[v244];
            v247 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v248 = *(_QWORD *)(v247 - 8);
            v249 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v248 + 48);
            v250 = v249(v245, 1, v247);
            v251 = v249(v246, 1, v247);
            if (v250)
            {
              v252 = v616;
              if (v251)
                goto LABEL_138;
              *(_OWORD *)v245 = *(_OWORD *)v246;
              (*(void (**)(char *, char *, uint64_t))(v621 + 32))(&v245[*(int *)(v247 + 24)], &v246[*(int *)(v247 + 24)], v616);
              *(_QWORD *)&v245[*(int *)(v247 + 28)] = *(_QWORD *)&v246[*(int *)(v247 + 28)];
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v248 + 56))(v245, 0, 1, v247);
            }
            else
            {
              v252 = v616;
              if (v251)
              {
                sub_1BA4A2E80((uint64_t)v245, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_138:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
                goto LABEL_148;
              }
              *(_QWORD *)v245 = *(_QWORD *)v246;
              *((_QWORD *)v245 + 1) = *((_QWORD *)v246 + 1);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v621 + 40))(&v245[*(int *)(v247 + 24)], &v246[*(int *)(v247 + 24)], v616);
              *(_QWORD *)&v245[*(int *)(v247 + 28)] = *(_QWORD *)&v246[*(int *)(v247 + 28)];
              swift_bridgeObjectRelease();
            }
LABEL_148:
            v254 = v9[9];
            v255 = &v159[v254];
            v256 = &v160[v254];
            *(_QWORD *)v255 = *(_QWORD *)v256;
            v255[8] = v256[8];
            v257 = v9[10];
            v258 = &v159[v257];
            v259 = &v160[v257];
            v260 = v613(&v159[v257], 1, v252);
            v261 = v613(v259, 1, v252);
            if (v260)
            {
              v262 = v621;
              if (!v261)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v621 + 32))(v258, v259, v252);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v621 + 56))(v258, 0, 1, v252);
                goto LABEL_154;
              }
            }
            else
            {
              v262 = v621;
              if (!v261)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v621 + 40))(v258, v259, v252);
LABEL_154:
                v264 = v9[11];
                v265 = &v159[v264];
                v266 = &v160[v264];
                *(_QWORD *)v265 = *(_QWORD *)v266;
                v265[8] = v266[8];
                v267 = v9[12];
                v268 = &v159[v267];
                v269 = &v160[v267];
                v270 = v613(&v159[v267], 1, v252);
                v271 = v613(v269, 1, v252);
                if (v270)
                {
                  if (!v271)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v262 + 32))(v268, v269, v252);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v262 + 56))(v268, 0, 1, v252);
                    goto LABEL_160;
                  }
                }
                else
                {
                  if (!v271)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v262 + 40))(v268, v269, v252);
LABEL_160:
                    v273 = v9[13];
                    v274 = &v159[v273];
                    v275 = &v160[v273];
                    *(_QWORD *)v274 = *(_QWORD *)v275;
                    v274[8] = v275[8];
                    v276 = v9[14];
                    v277 = &v159[v276];
                    v278 = &v160[v276];
                    v279 = v613(&v159[v276], 1, v252);
                    v280 = v613(v278, 1, v252);
                    if (v279)
                    {
                      if (!v280)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v262 + 32))(v277, v278, v252);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v262 + 56))(v277, 0, 1, v252);
                        goto LABEL_166;
                      }
                    }
                    else
                    {
                      if (!v280)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v262 + 40))(v277, v278, v252);
LABEL_166:
                        v282 = v9[15];
                        v283 = &v159[v282];
                        v284 = &v160[v282];
                        *(_QWORD *)v283 = *(_QWORD *)v284;
                        v283[8] = v284[8];
                        v285 = v9[16];
                        v286 = &v159[v285];
                        v287 = &v160[v285];
                        v288 = v613(&v159[v285], 1, v252);
                        v289 = v613(v287, 1, v252);
                        if (v288)
                        {
                          if (!v289)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v262 + 32))(v286, v287, v252);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v262 + 56))(v286, 0, 1, v252);
                            goto LABEL_172;
                          }
                        }
                        else
                        {
                          if (!v289)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v262 + 40))(v286, v287, v252);
LABEL_172:
                            v291 = v9[17];
                            v292 = (uint64_t)&v159[v291];
                            v293 = &v160[v291];
                            v10 = v627;
                            if (*(_QWORD *)&v159[v291 + 32] != 1)
                            {
                              v294 = *((_QWORD *)v293 + 4);
                              if (v294 != 1)
                              {
                                *(_QWORD *)v292 = *(_QWORD *)v293;
                                *(_BYTE *)(v292 + 8) = v293[8];
                                *(_QWORD *)(v292 + 16) = *((_QWORD *)v293 + 2);
                                *(_BYTE *)(v292 + 24) = v293[24];
                                *(_QWORD *)(v292 + 32) = v294;
                                swift_bridgeObjectRelease();
LABEL_177:
                                v296 = v9[18];
                                v297 = &v159[v296];
                                v298 = &v160[v296];
                                *(_QWORD *)v297 = *(_QWORD *)v298;
                                v297[8] = v298[8];
                                v299 = v9[19];
                                v300 = &v159[v299];
                                v301 = &v160[v299];
                                v302 = sub_1BB86D024();
                                v303 = *(_QWORD *)(v302 - 8);
                                v304 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v303 + 48);
                                v305 = v304(v300, 1, v302);
                                v306 = v304(v301, 1, v302);
                                if (v305)
                                {
                                  a3 = v631;
                                  if (!v306)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v303 + 32))(v300, v301, v302);
                                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v303 + 56))(v300, 0, 1, v302);
LABEL_183:
                                    v4 = v630;
                                    goto LABEL_184;
                                  }
                                }
                                else
                                {
                                  a3 = v631;
                                  if (!v306)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v303 + 40))(v300, v301, v302);
                                    goto LABEL_183;
                                  }
                                  (*(void (**)(_BYTE *, uint64_t))(v303 + 8))(v300, v302);
                                }
                                sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
                                memcpy(v300, v301, *(_QWORD *)(*(_QWORD *)(v307 - 8) + 64));
                                goto LABEL_183;
                              }
                              sub_1BAF10C4C(v292);
                            }
                            v295 = *((_OWORD *)v293 + 1);
                            *(_OWORD *)v292 = *(_OWORD *)v293;
                            *(_OWORD *)(v292 + 16) = v295;
                            *(_QWORD *)(v292 + 32) = *((_QWORD *)v293 + 4);
                            goto LABEL_177;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v262 + 8))(v286, v252);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
                        goto LABEL_172;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v262 + 8))(v277, v252);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
                    goto LABEL_166;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v262 + 8))(v268, v252);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
                goto LABEL_160;
              }
              (*(void (**)(_BYTE *, uint64_t))(v621 + 8))(v258, v252);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v263 - 8) + 64));
            goto LABEL_154;
          }
          (*(void (**)(_BYTE *, uint64_t))(v175 + 8))(v239, v174);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v239, v240, *(_QWORD *)(*(_QWORD *)(v243 - 8) + 64));
        goto LABEL_133;
      }
      (*(void (**)(_BYTE *, uint64_t))(v175 + 8))(v172, v174);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
    goto LABEL_127;
  }
  if (v162)
    goto LABEL_95;
  *(_QWORD *)v159 = *(_QWORD *)v160;
  v159[8] = v160[8];
  v164 = v9[5];
  v165 = &v159[v164];
  v166 = &v160[v164];
  v167 = sub_1BB86D078();
  v168 = *(_QWORD *)(v167 - 8);
  v169 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v168 + 48);
  if (v169(v166, 1, v167))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v170 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v168 + 32))(v165, v166, v167);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v165, 0, 1, v167);
  }
  v179 = v9[6];
  v180 = &v159[v179];
  v181 = &v160[v179];
  *(_QWORD *)v180 = *(_QWORD *)v181;
  v180[8] = v181[8];
  v182 = v9[7];
  v183 = &v159[v182];
  v184 = &v160[v182];
  v620 = v168;
  if (v169(&v160[v182], 1, v167))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v183, v184, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v168 + 32))(v183, v184, v167);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v183, 0, 1, v167);
  }
  v186 = v9[8];
  v187 = &v159[v186];
  v188 = &v160[v186];
  v189 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v190 = *(_QWORD *)(v189 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
  }
  else
  {
    *v187 = *v188;
    (*(void (**)(char *, char *, uint64_t))(v620 + 32))((char *)v187 + *(int *)(v189 + 24), (char *)v188 + *(int *)(v189 + 24), v167);
    *(_QWORD *)((char *)v187 + *(int *)(v189 + 28)) = *(_QWORD *)((char *)v188 + *(int *)(v189 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v190 + 56))(v187, 0, 1, v189);
  }
  v192 = v9[9];
  v193 = &v159[v192];
  v194 = &v160[v192];
  *(_QWORD *)v193 = *(_QWORD *)v194;
  v193[8] = v194[8];
  v195 = v9[10];
  v196 = &v159[v195];
  v197 = &v160[v195];
  if (v169(&v160[v195], 1, v167))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
    v199 = v620;
  }
  else
  {
    v199 = v620;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v620 + 32))(v196, v197, v167);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v620 + 56))(v196, 0, 1, v167);
  }
  v200 = v9[11];
  v201 = &v159[v200];
  v202 = &v160[v200];
  *(_QWORD *)v201 = *(_QWORD *)v202;
  v201[8] = v202[8];
  v203 = v9[12];
  v204 = &v159[v203];
  v205 = &v160[v203];
  if (v169(&v160[v203], 1, v167))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v199 + 32))(v204, v205, v167);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v204, 0, 1, v167);
  }
  v207 = v9[13];
  v208 = &v159[v207];
  v209 = &v160[v207];
  *(_QWORD *)v208 = *(_QWORD *)v209;
  v208[8] = v209[8];
  v210 = v9[14];
  v211 = &v159[v210];
  v212 = &v160[v210];
  if (v169(&v160[v210], 1, v167))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v199 + 32))(v211, v212, v167);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v211, 0, 1, v167);
  }
  v214 = v9[15];
  v215 = &v159[v214];
  v216 = &v160[v214];
  *(_QWORD *)v215 = *(_QWORD *)v216;
  v215[8] = v216[8];
  v217 = v9[16];
  v218 = &v159[v217];
  v219 = &v160[v217];
  if (v169(&v160[v217], 1, v167))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v199 + 32))(v218, v219, v167);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v199 + 56))(v218, 0, 1, v167);
  }
  v221 = v9[17];
  v222 = &v159[v221];
  v223 = &v160[v221];
  v224 = *((_OWORD *)v223 + 1);
  *(_OWORD *)v222 = *(_OWORD *)v223;
  *((_OWORD *)v222 + 1) = v224;
  *((_QWORD *)v222 + 4) = *((_QWORD *)v223 + 4);
  v225 = v9[18];
  v226 = &v159[v225];
  v227 = &v160[v225];
  v226[8] = v227[8];
  *(_QWORD *)v226 = *(_QWORD *)v227;
  v228 = v9[19];
  v229 = &v159[v228];
  v230 = &v160[v228];
  v231 = sub_1BB86D024();
  v232 = *(_QWORD *)(v231 - 8);
  v10 = v627;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v232 + 48))(v230, 1, v231))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v229, v230, *(_QWORD *)(*(_QWORD *)(v233 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v232 + 32))(v229, v230, v231);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v232 + 56))(v229, 0, 1, v231);
  }
  v4 = v630;
  a3 = v631;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v625 + 56))(v159, 0, 1, v9);
LABEL_184:
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)((char *)v4 + a3[12]);
  swift_bridgeObjectRelease();
  v308 = a3[13];
  v309 = (_BYTE *)(a1 + v308);
  v310 = (char *)v4 + v308;
  v311 = v10((_BYTE *)(a1 + v308), 1, v9);
  v312 = v10(v310, 1, v9);
  if (!v311)
  {
    if (v312)
    {
      sub_1BA4A2E80((uint64_t)v309, type metadata accessor for FeedClusteringOptions);
LABEL_189:
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
      goto LABEL_278;
    }
    *(_QWORD *)v309 = *(_QWORD *)v310;
    v309[8] = v310[8];
    v321 = v9[5];
    v322 = &v309[v321];
    v323 = &v310[v321];
    v324 = sub_1BB86D078();
    v325 = *(_QWORD *)(v324 - 8);
    v326 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v325 + 48);
    v327 = v326(v322, 1, v324);
    v328 = v326(v323, 1, v324);
    if (v327)
    {
      if (!v328)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v325 + 32))(v322, v323, v324);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v325 + 56))(v322, 0, 1, v324);
        goto LABEL_221;
      }
    }
    else
    {
      if (!v328)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v325 + 40))(v322, v323, v324);
LABEL_221:
        v385 = v9[6];
        v386 = &v309[v385];
        v387 = &v310[v385];
        *(_QWORD *)v386 = *(_QWORD *)v387;
        v386[8] = v387[8];
        v388 = v9[7];
        v389 = &v309[v388];
        v390 = &v310[v388];
        v391 = v326(&v309[v388], 1, v324);
        v392 = v326(v390, 1, v324);
        v617 = v324;
        v623 = v325;
        v614 = v326;
        if (v391)
        {
          if (!v392)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v325 + 32))(v389, v390, v324);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v325 + 56))(v389, 0, 1, v324);
            goto LABEL_227;
          }
        }
        else
        {
          if (!v392)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v325 + 40))(v389, v390, v324);
LABEL_227:
            v394 = v9[8];
            v395 = &v309[v394];
            v396 = &v310[v394];
            v397 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v398 = *(_QWORD *)(v397 - 8);
            v399 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v398 + 48);
            v400 = v399(v395, 1, v397);
            v401 = v399(v396, 1, v397);
            if (v400)
            {
              v402 = v617;
              if (v401)
                goto LABEL_232;
              *(_OWORD *)v395 = *(_OWORD *)v396;
              (*(void (**)(char *, char *, uint64_t))(v623 + 32))(&v395[*(int *)(v397 + 24)], &v396[*(int *)(v397 + 24)], v617);
              *(_QWORD *)&v395[*(int *)(v397 + 28)] = *(_QWORD *)&v396[*(int *)(v397 + 28)];
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v398 + 56))(v395, 0, 1, v397);
            }
            else
            {
              v402 = v617;
              if (v401)
              {
                sub_1BA4A2E80((uint64_t)v395, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_232:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v395, v396, *(_QWORD *)(*(_QWORD *)(v403 - 8) + 64));
                goto LABEL_242;
              }
              *(_QWORD *)v395 = *(_QWORD *)v396;
              *((_QWORD *)v395 + 1) = *((_QWORD *)v396 + 1);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v623 + 40))(&v395[*(int *)(v397 + 24)], &v396[*(int *)(v397 + 24)], v617);
              *(_QWORD *)&v395[*(int *)(v397 + 28)] = *(_QWORD *)&v396[*(int *)(v397 + 28)];
              swift_bridgeObjectRelease();
            }
LABEL_242:
            v404 = v9[9];
            v405 = &v309[v404];
            v406 = &v310[v404];
            *(_QWORD *)v405 = *(_QWORD *)v406;
            v405[8] = v406[8];
            v407 = v9[10];
            v408 = &v309[v407];
            v409 = &v310[v407];
            v410 = v614(&v309[v407], 1, v402);
            v411 = v614(v409, 1, v402);
            if (v410)
            {
              v412 = v623;
              if (!v411)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v623 + 32))(v408, v409, v402);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v623 + 56))(v408, 0, 1, v402);
                goto LABEL_248;
              }
            }
            else
            {
              v412 = v623;
              if (!v411)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v623 + 40))(v408, v409, v402);
LABEL_248:
                v414 = v9[11];
                v415 = &v309[v414];
                v416 = &v310[v414];
                *(_QWORD *)v415 = *(_QWORD *)v416;
                v415[8] = v416[8];
                v417 = v9[12];
                v418 = &v309[v417];
                v419 = &v310[v417];
                v420 = v614(&v309[v417], 1, v402);
                v421 = v614(v419, 1, v402);
                if (v420)
                {
                  if (!v421)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v412 + 32))(v418, v419, v402);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v412 + 56))(v418, 0, 1, v402);
                    goto LABEL_254;
                  }
                }
                else
                {
                  if (!v421)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v412 + 40))(v418, v419, v402);
LABEL_254:
                    v423 = v9[13];
                    v424 = &v309[v423];
                    v425 = &v310[v423];
                    *(_QWORD *)v424 = *(_QWORD *)v425;
                    v424[8] = v425[8];
                    v426 = v9[14];
                    v427 = &v309[v426];
                    v428 = &v310[v426];
                    v429 = v614(&v309[v426], 1, v402);
                    v430 = v614(v428, 1, v402);
                    if (v429)
                    {
                      if (!v430)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v412 + 32))(v427, v428, v402);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v412 + 56))(v427, 0, 1, v402);
                        goto LABEL_260;
                      }
                    }
                    else
                    {
                      if (!v430)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v412 + 40))(v427, v428, v402);
LABEL_260:
                        v432 = v9[15];
                        v433 = &v309[v432];
                        v434 = &v310[v432];
                        *(_QWORD *)v433 = *(_QWORD *)v434;
                        v433[8] = v434[8];
                        v435 = v9[16];
                        v436 = &v309[v435];
                        v437 = &v310[v435];
                        v438 = v614(&v309[v435], 1, v402);
                        v439 = v614(v437, 1, v402);
                        if (v438)
                        {
                          if (!v439)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v412 + 32))(v436, v437, v402);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v412 + 56))(v436, 0, 1, v402);
                            goto LABEL_266;
                          }
                        }
                        else
                        {
                          if (!v439)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v412 + 40))(v436, v437, v402);
LABEL_266:
                            v441 = v9[17];
                            v442 = (uint64_t)&v309[v441];
                            v443 = &v310[v441];
                            v10 = v627;
                            if (*(_QWORD *)&v309[v441 + 32] != 1)
                            {
                              v444 = *((_QWORD *)v443 + 4);
                              if (v444 != 1)
                              {
                                *(_QWORD *)v442 = *(_QWORD *)v443;
                                *(_BYTE *)(v442 + 8) = v443[8];
                                *(_QWORD *)(v442 + 16) = *((_QWORD *)v443 + 2);
                                *(_BYTE *)(v442 + 24) = v443[24];
                                *(_QWORD *)(v442 + 32) = v444;
                                swift_bridgeObjectRelease();
LABEL_271:
                                v446 = v9[18];
                                v447 = &v309[v446];
                                v448 = &v310[v446];
                                *(_QWORD *)v447 = *(_QWORD *)v448;
                                v447[8] = v448[8];
                                v449 = v9[19];
                                v450 = &v309[v449];
                                v451 = &v310[v449];
                                v452 = sub_1BB86D024();
                                v453 = *(_QWORD *)(v452 - 8);
                                v454 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v453 + 48);
                                v455 = v454(v450, 1, v452);
                                v456 = v454(v451, 1, v452);
                                if (v455)
                                {
                                  a3 = v631;
                                  if (!v456)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v453 + 32))(v450, v451, v452);
                                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v453 + 56))(v450, 0, 1, v452);
LABEL_277:
                                    v4 = v630;
                                    goto LABEL_278;
                                  }
                                }
                                else
                                {
                                  a3 = v631;
                                  if (!v456)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v453 + 40))(v450, v451, v452);
                                    goto LABEL_277;
                                  }
                                  (*(void (**)(_BYTE *, uint64_t))(v453 + 8))(v450, v452);
                                }
                                sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
                                memcpy(v450, v451, *(_QWORD *)(*(_QWORD *)(v457 - 8) + 64));
                                goto LABEL_277;
                              }
                              sub_1BAF10C4C(v442);
                            }
                            v445 = *((_OWORD *)v443 + 1);
                            *(_OWORD *)v442 = *(_OWORD *)v443;
                            *(_OWORD *)(v442 + 16) = v445;
                            *(_QWORD *)(v442 + 32) = *((_QWORD *)v443 + 4);
                            goto LABEL_271;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v412 + 8))(v436, v402);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v436, v437, *(_QWORD *)(*(_QWORD *)(v440 - 8) + 64));
                        goto LABEL_266;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v412 + 8))(v427, v402);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v427, v428, *(_QWORD *)(*(_QWORD *)(v431 - 8) + 64));
                    goto LABEL_260;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v412 + 8))(v418, v402);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v418, v419, *(_QWORD *)(*(_QWORD *)(v422 - 8) + 64));
                goto LABEL_254;
              }
              (*(void (**)(_BYTE *, uint64_t))(v623 + 8))(v408, v402);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v408, v409, *(_QWORD *)(*(_QWORD *)(v413 - 8) + 64));
            goto LABEL_248;
          }
          (*(void (**)(_BYTE *, uint64_t))(v325 + 8))(v389, v324);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v389, v390, *(_QWORD *)(*(_QWORD *)(v393 - 8) + 64));
        goto LABEL_227;
      }
      (*(void (**)(_BYTE *, uint64_t))(v325 + 8))(v322, v324);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v322, v323, *(_QWORD *)(*(_QWORD *)(v384 - 8) + 64));
    goto LABEL_221;
  }
  if (v312)
    goto LABEL_189;
  *(_QWORD *)v309 = *(_QWORD *)v310;
  v309[8] = v310[8];
  v314 = v9[5];
  v315 = &v309[v314];
  v316 = &v310[v314];
  v317 = sub_1BB86D078();
  v318 = *(_QWORD *)(v317 - 8);
  v319 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v318 + 48);
  if (v319(v316, 1, v317))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v315, v316, *(_QWORD *)(*(_QWORD *)(v320 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v318 + 32))(v315, v316, v317);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v318 + 56))(v315, 0, 1, v317);
  }
  v329 = v9[6];
  v330 = &v309[v329];
  v331 = &v310[v329];
  *(_QWORD *)v330 = *(_QWORD *)v331;
  v330[8] = v331[8];
  v332 = v9[7];
  v333 = &v309[v332];
  v334 = &v310[v332];
  v622 = v318;
  if (v319(&v310[v332], 1, v317))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v333, v334, *(_QWORD *)(*(_QWORD *)(v335 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v318 + 32))(v333, v334, v317);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v318 + 56))(v333, 0, 1, v317);
  }
  v336 = v9[8];
  v337 = &v309[v336];
  v338 = &v310[v336];
  v339 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v340 = *(_QWORD *)(v339 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v340 + 48))(v338, 1, v339))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v337, v338, *(_QWORD *)(*(_QWORD *)(v341 - 8) + 64));
  }
  else
  {
    *v337 = *v338;
    (*(void (**)(char *, char *, uint64_t))(v622 + 32))((char *)v337 + *(int *)(v339 + 24), (char *)v338 + *(int *)(v339 + 24), v317);
    *(_QWORD *)((char *)v337 + *(int *)(v339 + 28)) = *(_QWORD *)((char *)v338 + *(int *)(v339 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v340 + 56))(v337, 0, 1, v339);
  }
  v342 = v9[9];
  v343 = &v309[v342];
  v344 = &v310[v342];
  *(_QWORD *)v343 = *(_QWORD *)v344;
  v343[8] = v344[8];
  v345 = v9[10];
  v346 = &v309[v345];
  v347 = &v310[v345];
  if (v319(&v310[v345], 1, v317))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v346, v347, *(_QWORD *)(*(_QWORD *)(v348 - 8) + 64));
    v349 = v622;
  }
  else
  {
    v349 = v622;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v622 + 32))(v346, v347, v317);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v622 + 56))(v346, 0, 1, v317);
  }
  v350 = v9[11];
  v351 = &v309[v350];
  v352 = &v310[v350];
  *(_QWORD *)v351 = *(_QWORD *)v352;
  v351[8] = v352[8];
  v353 = v9[12];
  v354 = &v309[v353];
  v355 = &v310[v353];
  if (v319(&v310[v353], 1, v317))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v354, v355, *(_QWORD *)(*(_QWORD *)(v356 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v349 + 32))(v354, v355, v317);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v349 + 56))(v354, 0, 1, v317);
  }
  v357 = v9[13];
  v358 = &v309[v357];
  v359 = &v310[v357];
  *(_QWORD *)v358 = *(_QWORD *)v359;
  v358[8] = v359[8];
  v360 = v9[14];
  v361 = &v309[v360];
  v362 = &v310[v360];
  if (v319(&v310[v360], 1, v317))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v361, v362, *(_QWORD *)(*(_QWORD *)(v363 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v349 + 32))(v361, v362, v317);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v349 + 56))(v361, 0, 1, v317);
  }
  v364 = v9[15];
  v365 = &v309[v364];
  v366 = &v310[v364];
  *(_QWORD *)v365 = *(_QWORD *)v366;
  v365[8] = v366[8];
  v367 = v9[16];
  v368 = &v309[v367];
  v369 = &v310[v367];
  if (v319(&v310[v367], 1, v317))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v368, v369, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v349 + 32))(v368, v369, v317);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v349 + 56))(v368, 0, 1, v317);
  }
  v371 = v9[17];
  v372 = &v309[v371];
  v373 = &v310[v371];
  v374 = *((_OWORD *)v373 + 1);
  *(_OWORD *)v372 = *(_OWORD *)v373;
  *((_OWORD *)v372 + 1) = v374;
  *((_QWORD *)v372 + 4) = *((_QWORD *)v373 + 4);
  v375 = v9[18];
  v376 = &v309[v375];
  v377 = &v310[v375];
  v376[8] = v377[8];
  *(_QWORD *)v376 = *(_QWORD *)v377;
  v378 = v9[19];
  v379 = &v309[v378];
  v380 = &v310[v378];
  v381 = sub_1BB86D024();
  v382 = *(_QWORD *)(v381 - 8);
  v10 = v627;
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v379, v380, *(_QWORD *)(*(_QWORD *)(v383 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v382 + 32))(v379, v380, v381);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v382 + 56))(v379, 0, 1, v381);
  }
  v4 = v630;
  a3 = v631;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v625 + 56))(v309, 0, 1, v9);
LABEL_278:
  v458 = a3[14];
  v459 = (_BYTE *)(a1 + v458);
  v460 = (char *)v4 + v458;
  v461 = v10((_BYTE *)(a1 + v458), 1, v9);
  v462 = v10(v460, 1, v9);
  if (!v461)
  {
    if (v462)
    {
      sub_1BA4A2E80((uint64_t)v459, type metadata accessor for FeedClusteringOptions);
LABEL_283:
      sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
      memcpy(v459, v460, *(_QWORD *)(*(_QWORD *)(v463 - 8) + 64));
      goto LABEL_372;
    }
    *(_QWORD *)v459 = *(_QWORD *)v460;
    v459[8] = v460[8];
    v471 = v9[5];
    v472 = &v459[v471];
    v473 = &v460[v471];
    v474 = sub_1BB86D078();
    v475 = *(_QWORD *)(v474 - 8);
    v476 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v475 + 48);
    v477 = v476(v472, 1, v474);
    v478 = v476(v473, 1, v474);
    if (v477)
    {
      if (!v478)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v475 + 32))(v472, v473, v474);
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v475 + 56))(v472, 0, 1, v474);
        goto LABEL_315;
      }
    }
    else
    {
      if (!v478)
      {
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v475 + 40))(v472, v473, v474);
LABEL_315:
        v535 = v9[6];
        v536 = &v459[v535];
        v537 = &v460[v535];
        *(_QWORD *)v536 = *(_QWORD *)v537;
        v536[8] = v537[8];
        v538 = v9[7];
        v539 = &v459[v538];
        v540 = &v460[v538];
        v541 = v476(&v459[v538], 1, v474);
        v542 = v476(v540, 1, v474);
        v626 = v474;
        v629 = v475;
        v624 = v476;
        if (v541)
        {
          if (!v542)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v475 + 32))(v539, v540, v474);
            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v475 + 56))(v539, 0, 1, v474);
            goto LABEL_321;
          }
        }
        else
        {
          if (!v542)
          {
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v475 + 40))(v539, v540, v474);
LABEL_321:
            v544 = v9[8];
            v545 = &v459[v544];
            v546 = &v460[v544];
            v547 = type metadata accessor for FeedGroupBundleArticleQuotas();
            v548 = *(_QWORD *)(v547 - 8);
            v549 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v548 + 48);
            v550 = v549(v545, 1, v547);
            v551 = v549(v546, 1, v547);
            if (v550)
            {
              v552 = v626;
              if (v551)
                goto LABEL_326;
              *(_OWORD *)v545 = *(_OWORD *)v546;
              (*(void (**)(char *, char *, uint64_t))(v629 + 32))(&v545[*(int *)(v547 + 24)], &v546[*(int *)(v547 + 24)], v626);
              *(_QWORD *)&v545[*(int *)(v547 + 28)] = *(_QWORD *)&v546[*(int *)(v547 + 28)];
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v548 + 56))(v545, 0, 1, v547);
            }
            else
            {
              v552 = v626;
              if (v551)
              {
                sub_1BA4A2E80((uint64_t)v545, (uint64_t (*)(_QWORD))type metadata accessor for FeedGroupBundleArticleQuotas);
LABEL_326:
                sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
                memcpy(v545, v546, *(_QWORD *)(*(_QWORD *)(v553 - 8) + 64));
                goto LABEL_336;
              }
              *(_QWORD *)v545 = *(_QWORD *)v546;
              *((_QWORD *)v545 + 1) = *((_QWORD *)v546 + 1);
              swift_bridgeObjectRelease();
              (*(void (**)(char *, char *, uint64_t))(v629 + 40))(&v545[*(int *)(v547 + 24)], &v546[*(int *)(v547 + 24)], v626);
              *(_QWORD *)&v545[*(int *)(v547 + 28)] = *(_QWORD *)&v546[*(int *)(v547 + 28)];
              swift_bridgeObjectRelease();
            }
LABEL_336:
            v554 = v9[9];
            v555 = &v459[v554];
            v556 = &v460[v554];
            *(_QWORD *)v555 = *(_QWORD *)v556;
            v555[8] = v556[8];
            v557 = v9[10];
            v558 = &v459[v557];
            v559 = &v460[v557];
            v560 = v624(&v459[v557], 1, v552);
            v561 = v624(v559, 1, v552);
            if (v560)
            {
              v562 = v629;
              if (!v561)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v629 + 32))(v558, v559, v552);
                (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v629 + 56))(v558, 0, 1, v552);
                goto LABEL_342;
              }
            }
            else
            {
              v562 = v629;
              if (!v561)
              {
                (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v629 + 40))(v558, v559, v552);
LABEL_342:
                v564 = v9[11];
                v565 = &v459[v564];
                v566 = &v460[v564];
                *(_QWORD *)v565 = *(_QWORD *)v566;
                v565[8] = v566[8];
                v567 = v9[12];
                v568 = &v459[v567];
                v569 = &v460[v567];
                v570 = v624(&v459[v567], 1, v552);
                v571 = v624(v569, 1, v552);
                if (v570)
                {
                  if (!v571)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v562 + 32))(v568, v569, v552);
                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v562 + 56))(v568, 0, 1, v552);
                    goto LABEL_348;
                  }
                }
                else
                {
                  if (!v571)
                  {
                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v562 + 40))(v568, v569, v552);
LABEL_348:
                    v573 = v9[13];
                    v574 = &v459[v573];
                    v575 = &v460[v573];
                    *(_QWORD *)v574 = *(_QWORD *)v575;
                    v574[8] = v575[8];
                    v576 = v9[14];
                    v577 = &v459[v576];
                    v578 = &v460[v576];
                    v579 = v624(&v459[v576], 1, v552);
                    v580 = v624(v578, 1, v552);
                    if (v579)
                    {
                      if (!v580)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v562 + 32))(v577, v578, v552);
                        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v562 + 56))(v577, 0, 1, v552);
                        goto LABEL_354;
                      }
                    }
                    else
                    {
                      if (!v580)
                      {
                        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v562 + 40))(v577, v578, v552);
LABEL_354:
                        v582 = v9[15];
                        v583 = &v459[v582];
                        v584 = &v460[v582];
                        *(_QWORD *)v583 = *(_QWORD *)v584;
                        v583[8] = v584[8];
                        v585 = v9[16];
                        v586 = &v459[v585];
                        v587 = &v460[v585];
                        v588 = v624(&v459[v585], 1, v552);
                        v589 = v624(v587, 1, v552);
                        if (v588)
                        {
                          if (!v589)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v562 + 32))(v586, v587, v552);
                            (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v562 + 56))(v586, 0, 1, v552);
                            goto LABEL_360;
                          }
                        }
                        else
                        {
                          if (!v589)
                          {
                            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v562 + 40))(v586, v587, v552);
LABEL_360:
                            v591 = v9[17];
                            v592 = (uint64_t)&v459[v591];
                            v593 = &v460[v591];
                            a3 = v631;
                            if (*(_QWORD *)&v459[v591 + 32] != 1)
                            {
                              v594 = *((_QWORD *)v593 + 4);
                              if (v594 != 1)
                              {
                                *(_QWORD *)v592 = *(_QWORD *)v593;
                                *(_BYTE *)(v592 + 8) = v593[8];
                                *(_QWORD *)(v592 + 16) = *((_QWORD *)v593 + 2);
                                *(_BYTE *)(v592 + 24) = v593[24];
                                *(_QWORD *)(v592 + 32) = v594;
                                swift_bridgeObjectRelease();
LABEL_365:
                                v596 = v9[18];
                                v597 = &v459[v596];
                                v598 = &v460[v596];
                                *(_QWORD *)v597 = *(_QWORD *)v598;
                                v597[8] = v598[8];
                                v599 = v9[19];
                                v600 = &v459[v599];
                                v601 = &v460[v599];
                                v602 = sub_1BB86D024();
                                v603 = *(_QWORD *)(v602 - 8);
                                v604 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v603 + 48);
                                v605 = v604(v600, 1, v602);
                                v606 = v604(v601, 1, v602);
                                if (v605)
                                {
                                  if (!v606)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v603 + 32))(v600, v601, v602);
                                    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v603 + 56))(v600, 0, 1, v602);
LABEL_371:
                                    v4 = v630;
                                    goto LABEL_372;
                                  }
                                }
                                else
                                {
                                  if (!v606)
                                  {
                                    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v603 + 40))(v600, v601, v602);
                                    goto LABEL_371;
                                  }
                                  (*(void (**)(_BYTE *, uint64_t))(v603 + 8))(v600, v602);
                                }
                                sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
                                memcpy(v600, v601, *(_QWORD *)(*(_QWORD *)(v607 - 8) + 64));
                                goto LABEL_371;
                              }
                              sub_1BAF10C4C(v592);
                            }
                            v595 = *((_OWORD *)v593 + 1);
                            *(_OWORD *)v592 = *(_OWORD *)v593;
                            *(_OWORD *)(v592 + 16) = v595;
                            *(_QWORD *)(v592 + 32) = *((_QWORD *)v593 + 4);
                            goto LABEL_365;
                          }
                          (*(void (**)(_BYTE *, uint64_t))(v562 + 8))(v586, v552);
                        }
                        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                        memcpy(v586, v587, *(_QWORD *)(*(_QWORD *)(v590 - 8) + 64));
                        goto LABEL_360;
                      }
                      (*(void (**)(_BYTE *, uint64_t))(v562 + 8))(v577, v552);
                    }
                    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                    memcpy(v577, v578, *(_QWORD *)(*(_QWORD *)(v581 - 8) + 64));
                    goto LABEL_354;
                  }
                  (*(void (**)(_BYTE *, uint64_t))(v562 + 8))(v568, v552);
                }
                sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
                memcpy(v568, v569, *(_QWORD *)(*(_QWORD *)(v572 - 8) + 64));
                goto LABEL_348;
              }
              (*(void (**)(_BYTE *, uint64_t))(v629 + 8))(v558, v552);
            }
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
            memcpy(v558, v559, *(_QWORD *)(*(_QWORD *)(v563 - 8) + 64));
            goto LABEL_342;
          }
          (*(void (**)(_BYTE *, uint64_t))(v475 + 8))(v539, v474);
        }
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
        memcpy(v539, v540, *(_QWORD *)(*(_QWORD *)(v543 - 8) + 64));
        goto LABEL_321;
      }
      (*(void (**)(_BYTE *, uint64_t))(v475 + 8))(v472, v474);
    }
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v472, v473, *(_QWORD *)(*(_QWORD *)(v534 - 8) + 64));
    goto LABEL_315;
  }
  if (v462)
    goto LABEL_283;
  *(_QWORD *)v459 = *(_QWORD *)v460;
  v459[8] = v460[8];
  v464 = v9[5];
  v465 = &v459[v464];
  v466 = &v460[v464];
  v467 = sub_1BB86D078();
  v468 = *(_QWORD *)(v467 - 8);
  v469 = *(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v468 + 48);
  if (v469(v466, 1, v467))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v465, v466, *(_QWORD *)(*(_QWORD *)(v470 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v468 + 32))(v465, v466, v467);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v468 + 56))(v465, 0, 1, v467);
  }
  v479 = v9[6];
  v480 = &v459[v479];
  v481 = &v460[v479];
  *(_QWORD *)v480 = *(_QWORD *)v481;
  v480[8] = v481[8];
  v482 = v9[7];
  v483 = &v459[v482];
  v484 = &v460[v482];
  v628 = v468;
  if (v469(&v460[v482], 1, v467))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v483, v484, *(_QWORD *)(*(_QWORD *)(v485 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v468 + 32))(v483, v484, v467);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v468 + 56))(v483, 0, 1, v467);
  }
  v486 = v9[8];
  v487 = &v459[v486];
  v488 = &v460[v486];
  v489 = type metadata accessor for FeedGroupBundleArticleQuotas();
  v490 = *(_QWORD *)(v489 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C40F0, (void (*)(uint64_t))type metadata accessor for FeedGroupBundleArticleQuotas);
    memcpy(v487, v488, *(_QWORD *)(*(_QWORD *)(v491 - 8) + 64));
  }
  else
  {
    *v487 = *v488;
    (*(void (**)(char *, char *, uint64_t))(v628 + 32))((char *)v487 + *(int *)(v489 + 24), (char *)v488 + *(int *)(v489 + 24), v467);
    *(_QWORD *)((char *)v487 + *(int *)(v489 + 28)) = *(_QWORD *)((char *)v488 + *(int *)(v489 + 28));
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v490 + 56))(v487, 0, 1, v489);
  }
  v492 = v9[9];
  v493 = &v459[v492];
  v494 = &v460[v492];
  *(_QWORD *)v493 = *(_QWORD *)v494;
  v493[8] = v494[8];
  v495 = v9[10];
  v496 = &v459[v495];
  v497 = &v460[v495];
  if (v469(&v460[v495], 1, v467))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v496, v497, *(_QWORD *)(*(_QWORD *)(v498 - 8) + 64));
    v499 = v628;
  }
  else
  {
    v499 = v628;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v628 + 32))(v496, v497, v467);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v628 + 56))(v496, 0, 1, v467);
  }
  v500 = v9[11];
  v501 = &v459[v500];
  v502 = &v460[v500];
  *(_QWORD *)v501 = *(_QWORD *)v502;
  v501[8] = v502[8];
  v503 = v9[12];
  v504 = &v459[v503];
  v505 = &v460[v503];
  if (v469(&v460[v503], 1, v467))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v504, v505, *(_QWORD *)(*(_QWORD *)(v506 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v499 + 32))(v504, v505, v467);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v499 + 56))(v504, 0, 1, v467);
  }
  v507 = v9[13];
  v508 = &v459[v507];
  v509 = &v460[v507];
  *(_QWORD *)v508 = *(_QWORD *)v509;
  v508[8] = v509[8];
  v510 = v9[14];
  v511 = &v459[v510];
  v512 = &v460[v510];
  if (v469(&v460[v510], 1, v467))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v511, v512, *(_QWORD *)(*(_QWORD *)(v513 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v499 + 32))(v511, v512, v467);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v499 + 56))(v511, 0, 1, v467);
  }
  v514 = v9[15];
  v515 = &v459[v514];
  v516 = &v460[v514];
  *(_QWORD *)v515 = *(_QWORD *)v516;
  v515[8] = v516[8];
  v517 = v9[16];
  v518 = &v459[v517];
  v519 = &v460[v517];
  if (v469(&v460[v517], 1, v467))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3A2500, (void (*)(uint64_t))MEMORY[0x1E0DDA848]);
    memcpy(v518, v519, *(_QWORD *)(*(_QWORD *)(v520 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v499 + 32))(v518, v519, v467);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v499 + 56))(v518, 0, 1, v467);
  }
  v521 = v9[17];
  v522 = &v459[v521];
  v523 = &v460[v521];
  v524 = *((_OWORD *)v523 + 1);
  *(_OWORD *)v522 = *(_OWORD *)v523;
  *((_OWORD *)v522 + 1) = v524;
  *((_QWORD *)v522 + 4) = *((_QWORD *)v523 + 4);
  v525 = v9[18];
  v526 = &v459[v525];
  v527 = &v460[v525];
  v526[8] = v527[8];
  *(_QWORD *)v526 = *(_QWORD *)v527;
  v528 = v9[19];
  v529 = &v459[v528];
  v530 = &v460[v528];
  v531 = sub_1BB86D024();
  v532 = *(_QWORD *)(v531 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v532 + 48))(v530, 1, v531))
  {
    sub_1BA4A3FB4(0, &qword_1ED3A24E0, (void (*)(uint64_t))MEMORY[0x1E0DDA7E8]);
    memcpy(v529, v530, *(_QWORD *)(*(_QWORD *)(v533 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v532 + 32))(v529, v530, v531);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v532 + 56))(v529, 0, 1, v531);
  }
  v4 = v630;
  a3 = v631;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, int *))(v625 + 56))(v459, 0, 1, v9);
LABEL_372:
  *(_QWORD *)(a1 + a3[15]) = *(_QWORD *)((char *)v4 + a3[15]);
  swift_bridgeObjectRelease();
  v608 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *((_BYTE *)v4 + a3[16]);
  *(_BYTE *)(a1 + v608) = *((_BYTE *)v4 + v608);
  v609 = a3[19];
  *(_QWORD *)(a1 + a3[18]) = *(_QWORD *)((char *)v4 + a3[18]);
  *(_QWORD *)(a1 + v609) = *(_QWORD *)((char *)v4 + v609);
  v610 = a3[21];
  *(_BYTE *)(a1 + a3[20]) = *((_BYTE *)v4 + a3[20]);
  *(_WORD *)(a1 + v610) = *(_WORD *)((char *)v4 + v610);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedClusteringRequest()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF1E178(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 40)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedClusteringRequest()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAF1E210(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    sub_1BA4A3FB4(0, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 40)], a2, a2, v7);
  }
  return result;
}

void sub_1BAF1E294()
{
  unint64_t v0;

  sub_1BA4A3FB4(319, &qword_1ED3A4D70, (void (*)(uint64_t))type metadata accessor for FeedClusteringOptions);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t getEnumTagSinglePayload for FeedClusteringRequest.ChannelClusteringOption(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
  {
    v6 = *a1;
    v7 = v6 >= 2;
    v8 = (v6 + 2147483646) & 0x7FFFFFFF;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF)
      v3 = 2;
    else
      v3 = 4;
    if (v2 < 0xFF0000)
      v3 = 1;
    if (v2 >= 0x10000)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BAF1E3BC + 4 * byte_1BB8D3390[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for FeedClusteringRequest.ChannelClusteringOption(_WORD *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF)
    v4 = 2;
  else
    v4 = 4;
  if (v3 < 0xFF0000)
    v4 = 1;
  if (v3 >= 0x10000)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFE)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF1E478 + 4 * byte_1BB8D339A[v5]))();
  *a1 = a2 - 254;
  return ((uint64_t (*)(void))((char *)sub_1BAF1E4AC + 4 * byte_1BB8D3395[v5]))();
}

uint64_t sub_1BAF1E4AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAF1E4B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BAF1E4BCLL);
  return result;
}

uint64_t sub_1BAF1E4C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BAF1E4D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF1E4D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAF1E4DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BAF1E4E8(unsigned __int8 *a1)
{
  unsigned int v1;
  BOOL v2;
  int v3;

  v1 = *a1;
  v2 = v1 >= 2;
  v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2)
    return (v3 + 1);
  else
    return 0;
}

_WORD *sub_1BAF1E504(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *result = a2 - 255;
  }
  else if (a2)
  {
    *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedClusteringRequest.ChannelClusteringOption()
{
  return &type metadata for FeedClusteringRequest.ChannelClusteringOption;
}

uint64_t sub_1BAF1E538(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(MEMORY[0x1E0DEC198] - 8) + 16))(a2, a1);
  return a2;
}

uint64_t sub_1BAF1E574@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_1BAF1E984();
  v5 = (uint64_t)a1 + *(int *)(v4 + 48);
  sub_1BAF1E9EC();
  v8 = *a1;
  v7 = a1[1];
  sub_1BA4C2DD8(v5, (uint64_t)a2 + *(int *)(v6 + 48), type metadata accessor for FeedClusteringOptions);
  *a2 = v8;
  a2[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF1E5D8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, _QWORD *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  _BOOL8 v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  char v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  _QWORD v54[2];
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int (*v58)(uint64_t *, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v10 = type metadata accessor for FeedClusteringOptions(0);
  v66 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v56 = (uint64_t)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v55 = (uint64_t)v54 - v13;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v54 - v15;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3A2EC0, (void (*)(uint64_t))sub_1BAF1E9EC);
  MEMORY[0x1E0C80A78](v17);
  v19 = (_QWORD *)((char *)v54 - v18);
  v20 = -1 << *(_BYTE *)(a1 + 32);
  v21 = ~v20;
  v22 = *(_QWORD *)(a1 + 64);
  v23 = -v20;
  v59 = a1;
  v60 = a1 + 64;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  else
    v24 = -1;
  v61 = v21;
  v62 = 0;
  v63 = v24 & v22;
  v64 = a2;
  v65 = a3;
  v54[1] = a1;
  swift_bridgeObjectRetain();
  v54[0] = a3;
  swift_retain();
  sub_1BB29F4B4((uint64_t)v19);
  sub_1BAF1E9EC();
  v26 = v25;
  v58 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48);
  if (v58(v19, 1, v25) == 1)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA6EBD18();
    return swift_release();
  }
  v57 = v26;
  while (1)
  {
    v33 = (uint64_t)v19 + *(int *)(v26 + 48);
    v34 = *v19;
    v35 = v19[1];
    v36 = (uint64_t)v19;
    v37 = (uint64_t)v16;
    sub_1BAF1EA50(v33, (uint64_t)v16);
    v38 = a5;
    v39 = *a5;
    v41 = sub_1BA6E35A8(v34, v35);
    v42 = *(_QWORD *)(v39 + 16);
    v43 = (v40 & 1) == 0;
    v44 = v42 + v43;
    if (__OFADD__(v42, v43))
      break;
    v45 = v40;
    if (*(_QWORD *)(v39 + 24) >= v44)
    {
      if ((a4 & 1) != 0)
      {
        v48 = (_QWORD *)*v38;
        if ((v40 & 1) != 0)
          goto LABEL_7;
      }
      else
      {
        sub_1BB4C713C();
        v48 = (_QWORD *)*v38;
        if ((v45 & 1) != 0)
          goto LABEL_7;
      }
    }
    else
    {
      sub_1BB4B5D6C(v44, a4 & 1);
      v46 = sub_1BA6E35A8(v34, v35);
      if ((v45 & 1) != (v47 & 1))
        goto LABEL_22;
      v41 = v46;
      v48 = (_QWORD *)*v38;
      if ((v45 & 1) != 0)
      {
LABEL_7:
        v28 = v38;
        v29 = v48[7];
        v30 = *(_QWORD *)(v66 + 72) * v41;
        v31 = v56;
        sub_1BA4C2DD8(v29 + v30, v56, type metadata accessor for FeedClusteringOptions);
        v32 = v55;
        sub_1BA4C2DD8(v31, v55, type metadata accessor for FeedClusteringOptions);
        sub_1BA4A2E80(v31, type metadata accessor for FeedClusteringOptions);
        v16 = (char *)v37;
        sub_1BA4A2E80(v37, type metadata accessor for FeedClusteringOptions);
        swift_bridgeObjectRelease();
        sub_1BAF1EA94(v32, *(_QWORD *)(*v28 + 56) + v30);
        a5 = v28;
        goto LABEL_8;
      }
    }
    v48[(v41 >> 6) + 8] |= 1 << v41;
    v49 = (uint64_t *)(v48[6] + 16 * v41);
    *v49 = v34;
    v49[1] = v35;
    v50 = v48[7] + *(_QWORD *)(v66 + 72) * v41;
    v16 = (char *)v37;
    sub_1BAF1EA50(v37, v50);
    v51 = v48[2];
    v52 = __OFADD__(v51, 1);
    v53 = v51 + 1;
    if (v52)
      goto LABEL_21;
    v48[2] = v53;
    a5 = v38;
LABEL_8:
    v19 = (uint64_t *)v36;
    sub_1BB29F4B4(v36);
    a4 = 1;
    v26 = v57;
    if (v58((uint64_t *)v36, 1, v57) == 1)
      goto LABEL_5;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

void sub_1BAF1E984()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A2EB0)
  {
    type metadata accessor for FeedClusteringOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A2EB0);
  }
}

void sub_1BAF1E9EC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A1008)
  {
    type metadata accessor for FeedClusteringOptions(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A1008);
  }
}

uint64_t sub_1BAF1EA50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedClusteringOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF1EA94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedClusteringOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BAF1EAD8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;

  v1 = v0;
  v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856F0;
  v4 = (void *)objc_opt_self();
  v5 = v4;
  if (v2 == 1)
  {
    *(_QWORD *)(v3 + 32) = objc_msgSend(v4, sel_whiteColor);
    *(_QWORD *)(v3 + 40) = objc_msgSend(v5, sel_systemGreenColor);
    v15 = v3;
    sub_1BB872DCC();
    sub_1BA748DB8();
    v6 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v6);

    v8 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton);
    v9 = (void *)sub_1BB872970();
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    if (v10)
      goto LABEL_5;
LABEL_6:
    v13 = 0;
    goto LABEL_7;
  }
  *(_QWORD *)(v3 + 32) = objc_msgSend(v4, sel_systemGray2Color);
  *(_QWORD *)(v3 + 40) = objc_msgSend(v5, sel_systemGray2Color);
  v15 = v3;
  sub_1BB872DCC();
  sub_1BA748DB8();
  v11 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPaletteColors_, v11);

  v8 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton);
  v12 = (void *)sub_1BB872970();
  v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v12);

  if (!v10)
    goto LABEL_6;
LABEL_5:
  v13 = objc_msgSend(v10, sel_imageWithConfiguration_, v7);

LABEL_7:
  objc_msgSend(v8, sel_setImage_forState_, v13, 0, v13, v15);

}

uint64_t type metadata accessor for DebugFormatUploadEntryTableViewCell()
{
  return objc_opt_self();
}

char *sub_1BAF1EECC(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v6;
  Class v7;
  id v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  char *v20;
  id v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  id v31;
  objc_super v33;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v6 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  v8 = objc_allocWithZone(v7);
  v9 = v3;
  *(_QWORD *)&v3[v6] = objc_msgSend(v8, sel_init);
  v9[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_showDiff] = 1;
  v9[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected] = 0;
  v10 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton;
  sub_1BB870078();
  *(_QWORD *)&v9[v10] = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);

  if (a2)
  {
    v11 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  v33.receiver = v9;
  v33.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v33, sel_initWithStyle_reuseIdentifier_, 3, v11);

  v13 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v14 = v12;
  v15 = objc_msgSend(v13, sel_init);
  objc_msgSend(v14, sel_setSelectedBackgroundView_, v15);

  v16 = objc_msgSend(v14, sel_selectedBackgroundView);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(v17, sel_setBackgroundColor_, v18);

  }
  v19 = (void *)objc_opt_self();
  v20 = (char *)v14;
  v21 = objc_msgSend(v19, sel_systemBlueColor);
  objc_msgSend(v20, sel_setTintColor_, v21);

  v22 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton;
  v23 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton];
  v24 = (void *)sub_1BB872970();
  v25 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v24);

  objc_msgSend(v23, sel_setImage_forState_, v25, 0);
  v26 = *(void **)&v20[v22];
  objc_msgSend(v26, sel_setFrame_, 0.0, 0.0, 25.0, 25.0);
  objc_msgSend(v26, sel_setContentHorizontalAlignment_, 3);
  objc_msgSend(v26, sel_setContentVerticalAlignment_, 3);
  v27 = objc_msgSend(v26, sel_imageView);
  if (v27)
  {
    v28 = v27;
    objc_msgSend(v27, sel_setContentMode_, 1);

  }
  v29 = *(void **)&v20[v22];
  objc_msgSend(v20, sel_setEditingAccessoryView_, v29);
  v30 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap];
  v31 = v29;
  sub_1BB871368();

  return v20;
}

void sub_1BAF1F248()
{
  _BYTE *v0;
  uint64_t v1;
  Class v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_onDiffTap;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0A50, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC348]);
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_showDiff] = 1;
  v0[OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_isDiffSelected] = 0;
  v3 = OBJC_IVAR____TtC8NewsFeed35DebugFormatUploadEntryTableViewCell_diffButton;
  sub_1BB870078();
  *(_QWORD *)&v0[v3] = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_buttonWithType_, 0);

  sub_1BB873EAC();
  __break(1u);
}

uint64_t URL.dataSourceId.getter()
{
  return sub_1BB86C4FC();
}

_QWORD *WebEmbedDataSourceService.__allocating_init(appConfigurationManager:resourceService:sceneStateManager:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v6;

  swift_allocObject();
  v6 = sub_1BAF1FC90(a1, a2, a3);
  swift_unknownObjectRelease();
  return v6;
}

_QWORD *WebEmbedDataSourceService.init(appConfigurationManager:resourceService:sceneStateManager:)(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;

  v3 = sub_1BAF1FC90(a1, a2, a3);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t WebEmbedDataSourceService.fetchDataVisualizationsConfiguration()()
{
  void *v0;
  uint64_t v1;

  sub_1BA81E3D0();
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  v1 = sub_1BB86EA1C();
  swift_release();

  return v1;
}

uint64_t WebEmbedDataSourceService.unsafeFetchDataVisualizationsConfiguration()()
{
  uint64_t v0;
  uint64_t v2;
  unsigned __int8 v3;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  if (v3 == 255)
    goto LABEL_5;
  if ((v3 & 1) != 0)
  {
    sub_1BAF1FEB4(v2, v3);
LABEL_5:
    v0 = sub_1BB86E0EC();
    swift_bridgeObjectRelease();
    return v0;
  }
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4860, (uint64_t (*)(uint64_t))sub_1BA81E3D0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

unint64_t sub_1BAF1F534@<X0>(unint64_t *a1@<X8>)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t result;

  if (qword_1ED3BA7F8 != -1)
    swift_once();
  v2 = (id)qword_1ED476860;
  v3 = sub_1BB8732F4();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  swift_getErrorValue();
  v5 = sub_1BB87456C();
  v7 = v6;
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v7;
  sub_1BB86EF44("Failed to fetch web embed data source configuration; error=%{public}@",
    69,
    2,
    &dword_1BA493000,
    v2,
    v3,
    v4);

  swift_bridgeObjectRelease();
  result = sub_1BA8F2AEC(MEMORY[0x1E0DEE9D8]);
  *a1 = result;
  return result;
}

uint64_t sub_1BAF1F678()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_1BA53FAC4();
  sub_1BB86EC14();
  swift_retain();
  v0 = (void *)sub_1BB86E854();
  sub_1BA9881CC();
  sub_1BB86E968();
  swift_release();
  swift_release();

  swift_retain();
  v1 = (void *)sub_1BB86E854();
  sub_1BA81E3D0();
  v2 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v2;
}

uint64_t sub_1BAF1F754(id *a1, uint64_t a2)
{
  id v3;
  id v4;
  void *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v12;

  v3 = *a1;
  if ((objc_msgSend(*a1, sel_respondsToSelector_, sel_webEmbedDataSourcesConfigurationResourceId) & 1) != 0)
  {
    v4 = objc_msgSend(v3, sel_webEmbedDataSourcesConfigurationResourceId);
    if (v4)
    {
      v5 = v4;
      v6 = sub_1BB8729A0();
      v8 = v7;

      if (v8)
      {
        v9 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0)
          v9 = v6 & 0xFFFFFFFFFFFFLL;
        if (v9)
        {
          __swift_project_boxed_opaque_existential_1((_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 48));
          v10 = ResourceServiceType.fetchResource(identifier:)(v6, v8);
          sub_1BA6E3730(v6, v8);
          return v10;
        }
        sub_1BA6E3730(v6, v8);
      }
    }
  }
  sub_1BAF1FF5C();
  swift_allocError();
  *v12 = 0;
  return swift_willThrow();
}

uint64_t sub_1BAF1F868@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  void *v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  unint64_t v20;
  uint64_t result;
  _BYTE *v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - v6;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v27 - v14;
  v16 = objc_msgSend(*a1, sel_fileURL, v13);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
    goto LABEL_6;
  }
  v17 = v16;
  sub_1BB86C5EC();

  v18 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  v18(v7, v11, v8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
LABEL_6:
    sub_1BA7F0A80((uint64_t)v7);
    sub_1BAF1FF5C();
    swift_allocError();
    *v22 = 1;
    return swift_willThrow();
  }
  v18(v15, v7, v8);
  v19 = sub_1BB86C694();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  v23 = v19;
  v24 = v20;
  sub_1BB86DC9C();
  swift_allocObject();
  sub_1BB86DC90();
  sub_1BAF1FFA0();
  sub_1BB86DC78();
  swift_release();
  v31 = v29;
  sub_1BAAC3B0C();
  v28 = v25;
  v27 = sub_1BA50AD30(&qword_1EF2B6268, 255, (uint64_t (*)(uint64_t))sub_1BAAC3B0C, MEMORY[0x1E0DEAF38]);
  sub_1BAF1FFE4();
  v28 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v29 = v28;
  v30 = 0;
  v26 = v28;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB86E884();
  swift_release();
  sub_1BA69D314(v23, v24);
  result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, v8);
  *a2 = v26;
  return result;
}

uint64_t WebEmbedDataSourceService.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return v0;
}

uint64_t WebEmbedDataSourceService.__deallocating_deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF1FC00()
{
  void *v0;
  uint64_t v1;

  sub_1BA81E3D0();
  sub_1BB86EC14();
  v0 = (void *)sub_1BB86E854();
  v1 = sub_1BB86EA1C();
  swift_release();

  return v1;
}

uint64_t sub_1BAF1FC70()
{
  return WebEmbedDataSourceService.unsafeFetchDataVisualizationsConfiguration()();
}

_QWORD *sub_1BAF1FC90(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v11;
  char v12;

  v7 = sub_1BB86E50C();
  MEMORY[0x1E0C80A78](v7);
  sub_1BA50AD30(&qword_1ED3B07F0, 255, v8, MEMORY[0x1E0DB41A8]);
  sub_1BA539E4C(0);
  sub_1BA50AD30((unint64_t *)&qword_1ED3B9250, 255, (uint64_t (*)(uint64_t))sub_1BA539E4C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  sub_1BA520714();
  swift_allocObject();
  v3[8] = sub_1BB86E0E0();
  v11 = 0;
  v12 = -1;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4850, (uint64_t (*)(uint64_t))sub_1BA824838, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4AE8]);
  swift_allocObject();
  v3[9] = sub_1BB86E86C();
  v3[2] = a1;
  sub_1BA4C010C(a2, (uint64_t)(v3 + 3));
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  sub_1BA50AD30(&qword_1ED3CB4F8, v9, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataSourceService, (uint64_t)&protocol conformance descriptor for WebEmbedDataSourceService);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB86E5F0();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  return v3;
}

uint64_t sub_1BAF1FE88()
{
  return WebEmbedDataSourceService.unsafeFetchDataVisualizationsConfiguration()();
}

uint64_t sub_1BAF1FEAC()
{
  return sub_1BAF1F678();
}

uint64_t sub_1BAF1FEB4(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255)
    return j__swift_bridgeObjectRelease(result);
  return result;
}

uint64_t dispatch thunk of WebEmbedDataSourceServiceType.fetchDataVisualizationsConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WebEmbedDataSourceServiceType.unsafeFetchDataVisualizationsConfiguration()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t method lookup function for WebEmbedDataSourceService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WebEmbedDataSourceService.__allocating_init(appConfigurationManager:resourceService:sceneStateManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BAF1FEF4()
{
  swift_getObjectType();
  return FCNewsAppConfigurationManager.fetchConfiguration(cachedOnly:)();
}

uint64_t sub_1BAF1FF2C(id *a1)
{
  uint64_t v1;

  return sub_1BAF1F754(a1, v1);
}

uint64_t sub_1BAF1FF44@<X0>(id *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1BAF1F868(a1, a2);
}

unint64_t sub_1BAF1FF5C()
{
  unint64_t result;

  result = qword_1EF2B6250;
  if (!qword_1EF2B6250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataSourceServiceError, &type metadata for WebEmbedDataSourceServiceError);
    atomic_store(result, (unint64_t *)&qword_1EF2B6250);
  }
  return result;
}

unint64_t sub_1BAF1FFA0()
{
  unint64_t result;

  result = qword_1EF2B6258;
  if (!qword_1EF2B6258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for WebEmbedDataSourcesConfiguration, &type metadata for WebEmbedDataSourcesConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B6258);
  }
  return result;
}

unint64_t sub_1BAF1FFE4()
{
  unint64_t result;

  result = qword_1EF2B6270;
  if (!qword_1EF2B6270)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for GenericDataVisualizationResponseItem, &type metadata for GenericDataVisualizationResponseItem);
    atomic_store(result, (unint64_t *)&qword_1EF2B6270);
  }
  return result;
}

uint64_t sub_1BAF20028()
{
  return sub_1BAF1FE88();
}

uint64_t sub_1BAF2003C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  if (v0[14])
  {
    v1 = v0[13];
  }
  else
  {
    v1 = sub_1BA717D44(v0[2], v0[3]);
    v0[13] = v1;
    v0[14] = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAF200B0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v7 = *a5;
  v6 = a5[1];
  v8 = *((_OWORD *)a5 + 1);
  *(_QWORD *)(v5 + 88) = 0;
  *(_BYTE *)(v5 + 96) = 1;
  *(_QWORD *)(v5 + 104) = 0;
  *(_QWORD *)(v5 + 112) = 0;
  *(_QWORD *)(v5 + 120) = 0;
  *(_QWORD *)(v5 + 128) = 1;
  if (v6)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_QWORD *)(v5 + 24) = a2;
    *(_BYTE *)(v5 + 40) = a3;
    *(_QWORD *)(v5 + 32) = a4;
    *(_QWORD *)(v5 + 56) = v7;
    *(_QWORD *)(v5 + 64) = v6;
    *(_OWORD *)(v5 + 72) = v8;
    *(CFTimeInterval *)(v5 + 48) = CACurrentMediaTime();
    *(_QWORD *)(v5 + 88) = 0;
    *(_BYTE *)(v5 + 96) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA6E3730(*(_QWORD *)(v5 + 120), *(_QWORD *)(v5 + 128));
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v5;
}

uint64_t sub_1BAF2015C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E3730(*(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatNodeDebugRecord()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for FormatNodeDebugRecords()
{
  return objc_opt_self();
}

uint64_t initializeWithCopy for DebugInspectionTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v5 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_DWORD *)(a1 + 92) = *(_DWORD *)(a2 + 92);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(_BYTE *)(a1 + 109) = *(_BYTE *)(a2 + 109);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectionTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v6;
  v7 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 92);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v7;
  LODWORD(v7) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_DWORD *)(a1 + 100) = v7;
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_BYTE *)(a1 + 107) = *(_BYTE *)(a2 + 107);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_BYTE *)(a1 + 109) = *(_BYTE *)(a2 + 109);
  return a1;
}

__n128 __swift_memcpy110_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 94) = *(__int128 *)((char *)a2 + 94);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for DebugInspectionTagMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(_DWORD *)(a2 + 92);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_DWORD *)(a1 + 92) = v6;
  *(_DWORD *)(a1 + 100) = *(_DWORD *)(a2 + 100);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  *(_BYTE *)(a1 + 107) = *(_BYTE *)(a2 + 107);
  *(_BYTE *)(a1 + 108) = *(_BYTE *)(a2 + 108);
  *(_BYTE *)(a1 + 109) = *(_BYTE *)(a2 + 109);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectionTagMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 110))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectionTagMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 108) = 0;
    *(_DWORD *)(result + 104) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 110) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 110) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionTagMetadata()
{
  return &type metadata for DebugInspectionTagMetadata;
}

uint64_t sub_1BAF20530(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF20568 + 4 * aU[a1]))(0x696669746E656469, 0xEA00000000007265);
}

uint64_t sub_1BAF20568()
{
  return 1701667182;
}

uint64_t sub_1BAF20578()
{
  return 0x65746152776F6C66;
}

unint64_t sub_1BAF20590()
{
  return 0xD000000000000010;
}

uint64_t sub_1BAF205AC()
{
  return 0x7974696C617571;
}

uint64_t sub_1BAF205C4()
{
  return 0x79676F6C6F746E6FLL;
}

uint64_t sub_1BAF205E8()
{
  return 0x52746E65746E6F63;
}

uint64_t sub_1BAF2060C()
{
  return 0x636E6176656C6572;
}

uint64_t sub_1BAF20630()
{
  return 0x646567616E616DLL;
}

uint64_t sub_1BAF20648()
{
  return 0x57646567616E616DLL;
}

uint64_t sub_1BAF2066C()
{
  return 0x6C626170756F7267;
}

unint64_t sub_1BAF20688()
{
  return 0xD000000000000014;
}

uint64_t sub_1BAF206C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  char v11;
  _BYTE v13[32];

  v3 = v1;
  sub_1BAF215A4(0, &qword_1EF2B6400, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v13[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF21560();
  sub_1BB8746C8();
  v13[31] = 0;
  sub_1BB87417C();
  if (!v2)
  {
    v13[30] = 1;
    sub_1BB87411C();
    v13[29] = 2;
    sub_1BB874134();
    v13[28] = 3;
    sub_1BB874134();
    v13[27] = 4;
    sub_1BB874134();
    v13[26] = 5;
    sub_1BB874140();
    v10 = *(_BYTE *)(v3 + 96);
    v13[25] = 6;
    v13[24] = v10;
    sub_1BB874158();
    v11 = *(_BYTE *)(v3 + 104);
    v13[23] = 7;
    v13[20] = v11;
    sub_1BB874158();
    v13[19] = 8;
    sub_1BB874188();
    v13[18] = 9;
    sub_1BB874188();
    v13[17] = 10;
    sub_1BB874188();
    v13[16] = 11;
    sub_1BB874188();
    v13[15] = 12;
    sub_1BB874188();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAF209C4()
{
  unsigned __int8 *v0;

  return sub_1BAF20530(*v0);
}

uint64_t sub_1BAF209CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF20AA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF209F0()
{
  sub_1BAF21560();
  return sub_1BB874710();
}

uint64_t sub_1BAF20A18()
{
  sub_1BAF21560();
  return sub_1BB87471C();
}

__n128 sub_1BAF20A40@<Q0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  __n128 result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[5];
  _OWORD v8[2];

  sub_1BAF21060(a1, (uint64_t)v7);
  if (!v2)
  {
    v5 = v8[0];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(_OWORD *)(a2 + 94) = *(_OWORD *)((char *)v8 + 14);
    v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_1BAF20A90(_QWORD *a1)
{
  return sub_1BAF206C0(a1);
}

uint64_t sub_1BAF20AA4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65746152776F6C66 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB971C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7974696C617571 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x79676F6C6F746E6FLL && a2 == 0xED00006C6576654CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x52746E65746E6F63 && a2 == 0xED0000676E697461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x636E6176656C6572 && a2 == 0xEF676E6974615265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x646567616E616DLL && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x57646567616E616DLL && a2 == 0xED000072656E6E69 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x6C626170756F7267 && a2 == 0xE900000000000065 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB971C40 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB971C60)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 12;
    else
      return 13;
  }
}

uint64_t sub_1BAF21060@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  char v28;
  char v29;
  uint64_t v30;
  int v31;
  int v32;
  int v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  char v54;
  char v55;
  char v56;
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;

  sub_1BAF215A4(0, &qword_1EF2B63F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF21560();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v61 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v48 = v10;
  v60 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB87402C();
  v15 = v14;
  v46 = v13;
  v47 = v12;
  v59 = 2;
  swift_bridgeObjectRetain();
  v16 = sub_1BB874044();
  v43 = v17;
  v44 = v16;
  v45 = v15;
  v58 = 3;
  v18 = sub_1BB874044();
  v41 = v19;
  v42 = v18;
  v57 = 4;
  v20 = sub_1BB874044();
  v39 = v21;
  v40 = v20;
  v56 = 5;
  v22 = sub_1BB874050();
  v37 = v23;
  v38 = v22;
  v55 = 6;
  v36 = sub_1BB874074();
  v54 = 7;
  v35 = sub_1BB874074();
  v53 = 8;
  v34 = sub_1BB8740A4();
  v52 = 9;
  v24 = sub_1BB8740A4();
  v51 = 10;
  LOBYTE(v12) = sub_1BB8740A4();
  v50 = 11;
  v33 = sub_1BB8740A4();
  v49 = 12;
  LOBYTE(v15) = sub_1BB8740A4();
  v34 &= 1u;
  v31 = v12 & 1;
  v32 = v24 & 1;
  LOBYTE(v24) = v33 & 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v25 = v45;
  swift_bridgeObjectRelease();
  v26 = v47;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v48;
  *(_QWORD *)(a2 + 8) = v26;
  *(_QWORD *)(a2 + 16) = v46;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = v44;
  *(_BYTE *)(a2 + 40) = v43 & 1;
  *(_QWORD *)(a2 + 48) = v42;
  *(_BYTE *)(a2 + 56) = v41 & 1;
  *(_QWORD *)(a2 + 64) = v40;
  *(_BYTE *)(a2 + 72) = v39 & 1;
  *(_QWORD *)(a2 + 80) = v38;
  *(_BYTE *)(a2 + 88) = v37 & 1;
  v28 = BYTE4(v36);
  *(_DWORD *)(a2 + 92) = v36;
  *(_BYTE *)(a2 + 96) = v28 & 1;
  v29 = BYTE4(v35);
  *(_DWORD *)(a2 + 100) = v35;
  *(_BYTE *)(a2 + 104) = v29 & 1;
  *(_BYTE *)(a2 + 105) = v34;
  *(_BYTE *)(a2 + 106) = v32;
  *(_BYTE *)(a2 + 107) = v31;
  *(_BYTE *)(a2 + 108) = v24;
  *(_BYTE *)(a2 + 109) = v15 & 1;
  return result;
}

unint64_t sub_1BAF21560()
{
  unint64_t result;

  result = qword_1EF2B63F8;
  if (!qword_1EF2B63F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D3890, &type metadata for DebugInspectionTagMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B63F8);
  }
  return result;
}

void sub_1BAF215A4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF21560();
    v7 = a3(a1, &type metadata for DebugInspectionTagMetadata.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionTagMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1BAF2164C + 4 * byte_1BB8D3752[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1BAF21680 + 4 * byte_1BB8D374D[v4]))();
}

uint64_t sub_1BAF21680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF21688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF21690);
  return result;
}

uint64_t sub_1BAF2169C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF216A4);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1BAF216A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF216B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionTagMetadata.CodingKeys()
{
  return &type metadata for DebugInspectionTagMetadata.CodingKeys;
}

unint64_t sub_1BAF216D0()
{
  unint64_t result;

  result = qword_1EF2B6408;
  if (!qword_1EF2B6408)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D3868, &type metadata for DebugInspectionTagMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6408);
  }
  return result;
}

unint64_t sub_1BAF21718()
{
  unint64_t result;

  result = qword_1EF2B6410;
  if (!qword_1EF2B6410)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D37D8, &type metadata for DebugInspectionTagMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6410);
  }
  return result;
}

unint64_t sub_1BAF21760()
{
  unint64_t result;

  result = qword_1EF2B6418;
  if (!qword_1EF2B6418)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D3800, &type metadata for DebugInspectionTagMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6418);
  }
  return result;
}

uint64_t FeedCustomItem.action.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  v4 = type metadata accessor for FormatCustomItem.Resolved();
  return sub_1BA4C2DD8(v3 + *(int *)(v4 + 24), a1, (uint64_t (*)(_QWORD))sub_1BA648404);
}

uint64_t FeedCustomItem.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedCustomItem() + 20) + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCustomItem.options.getter()
{
  type metadata accessor for FeedCustomItem();
  type metadata accessor for FormatCustomItem.Resolved();
  return swift_bridgeObjectRetain();
}

uint64_t FeedCustomItem.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedCustomItem.customItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedCustomItem();
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Resolved);
}

uint64_t FeedCustomItem.init(identifier:customItem:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  *a4 = a1;
  a4[1] = a2;
  v5 = (uint64_t)a4 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  return sub_1BAF21904(a3, v5);
}

uint64_t sub_1BAF21904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCustomItem.Resolved();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t FeedCustomItem.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1BAF2198C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void FeedCustomItem.traits.getter(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void FeedCustomItem.layoutDirection.getter(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t FeedCustomItem.kind.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  v4 = *(_QWORD *)(v3 + 24);
  *a1 = *(_QWORD *)(v3 + 16);
  a1[1] = v4;
  return swift_bridgeObjectRetain();
}

void sub_1BAF21A14(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1BAF21A24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = v2 + *(int *)(a1 + 20);
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t FeedCustomItem.debugSourceName.getter()
{
  return 0;
}

uint64_t FeedCustomItem.debugTitle.getter()
{
  return 0;
}

uint64_t FeedCustomItem.debugAssetHandle.getter()
{
  return 0;
}

uint64_t FeedCustomItem.debugScoreProfile.getter()
{
  return 0;
}

BOOL FeedCustomItem.isSelectable.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 v7;
  uint64_t v9;

  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = v0 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  v5 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BA4C2DD8(v4 + *(int *)(v5 + 24), (uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA648404);
  v6 = type metadata accessor for FormatCustomItem.Action();
  v7 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v3, 1, v6) != 1;
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA648404);
  return v7;
}

uint64_t FeedCustomItem.keyCommands.getter()
{
  return MEMORY[0x1E0DEE9D8];
}

BOOL sub_1BAF21B30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v11;

  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(a1 + 20);
  v7 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BA4C2DD8(v6 + *(int *)(v7 + 24), (uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA648404);
  v8 = type metadata accessor for FormatCustomItem.Action();
  v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v5, 1, v8) != 1;
  sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA648404);
  return v9;
}

uint64_t FeedCustomItem.selectionStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAF21C4C((uint64_t (*)(_QWORD))MEMORY[0x1E0DB7528], MEMORY[0x1E0DB7518], MEMORY[0x1E0DB7520], a1);
}

uint64_t sub_1BAF21C14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAF21D6C(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB7528], MEMORY[0x1E0DB7518], MEMORY[0x1E0DB7520], a2);
}

uint64_t FeedCustomItem.highlightStyle.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAF21C4C((uint64_t (*)(_QWORD))MEMORY[0x1E0DB7430], MEMORY[0x1E0DB7420], MEMORY[0x1E0DB7428], a1);
}

uint64_t sub_1BAF21C4C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, unsigned int *a2@<X1>, unsigned int *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t v18;

  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v4 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
  v13 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BA4C2DD8(v12 + *(int *)(v13 + 24), (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA648404);
  v14 = type metadata accessor for FormatCustomItem.Action();
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v11, 1, v14);
  sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA648404);
  v15 = a1(0);
  if ((_DWORD)v12 == 1)
    v16 = a2;
  else
    v16 = a3;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(a4, *v16, v15);
}

uint64_t sub_1BAF21D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAF21D6C(a1, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB7430], MEMORY[0x1E0DB7420], MEMORY[0x1E0DB7428], a2);
}

uint64_t sub_1BAF21D6C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, unsigned int *a3@<X3>, unsigned int *a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int *v18;
  uint64_t v20;

  sub_1BA648404(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v5 + *(int *)(a1 + 20);
  v15 = type metadata accessor for FormatCustomItem.Resolved();
  sub_1BA4C2DD8(v14 + *(int *)(v15 + 24), (uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA648404);
  v16 = type metadata accessor for FormatCustomItem.Action();
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 48))(v13, 1, v16);
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA648404);
  v17 = a2(0);
  if ((_DWORD)v14 == 1)
    v18 = a3;
  else
    v18 = a4;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a5, *v18, v17);
}

uint64_t _s8NewsFeed0B10CustomItemV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v11;
  char v12;
  uint64_t v14;

  v4 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v14 - v8;
  if (*a1 == *a2 && a1[1] == a2[1])
  {
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)&v14 - v8, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  }
  else
  {
    v11 = sub_1BB874398();
    sub_1BA4C2DD8((uint64_t)a1, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
    v12 = 0;
    if ((v11 & 1) == 0)
      goto LABEL_9;
  }
  v12 = _s8NewsFeed16FormatCustomItemV8ResolvedV2eeoiySbAE_AEtFZ_0(&v9[*(int *)(v4 + 20)], &v6[*(int *)(v4 + 20)]);
LABEL_9:
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedCustomItem);
  return v12 & 1;
}

unint64_t sub_1BAF21FB0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF21FD4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAF21FD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39E458;
  if (!qword_1ED39E458)
  {
    v1 = type metadata accessor for FeedCustomItem();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCustomItem, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39E458);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedCustomItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *__dst;
  uint64_t v22;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v18 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v18 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (uint64_t *)((char *)a1 + v6);
    v8 = (char *)a2 + v6;
    v9 = *(uint64_t *)((char *)a2 + v6 + 8);
    *v7 = *(uint64_t *)((char *)a2 + v6);
    v7[1] = v9;
    v10 = *(uint64_t *)((char *)a2 + v6 + 24);
    v7[2] = *(uint64_t *)((char *)a2 + v6 + 16);
    v7[3] = v10;
    v11 = type metadata accessor for FormatCustomItem.Resolved();
    v12 = *(int *)(v11 + 24);
    __dst = (char *)v7 + v12;
    v22 = v11;
    v13 = &v8[v12];
    v14 = type metadata accessor for FormatCustomItem.Action();
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16(v13, 1, v14))
    {
      sub_1BA648404(0);
      memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v19 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(__dst, v13, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v14);
    }
    *(_QWORD *)((char *)v7 + *(int *)(v22 + 28)) = *(_QWORD *)&v8[*(int *)(v22 + 28)];
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t destroy for FeedCustomItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = v4 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
  v6 = type metadata accessor for FormatCustomItem.Action();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(v5, 1, v6))
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FeedCustomItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *__dst;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (char *)a2 + v5;
  v8 = *(_QWORD *)((char *)a2 + v5 + 8);
  *v6 = *(_QWORD *)((char *)a2 + v5);
  v6[1] = v8;
  v9 = *(_QWORD *)((char *)a2 + v5 + 24);
  v6[2] = *(_QWORD *)((char *)a2 + v5 + 16);
  v6[3] = v9;
  v10 = type metadata accessor for FormatCustomItem.Resolved();
  v11 = *(int *)(v10 + 24);
  __dst = (char *)v6 + v11;
  v20 = v10;
  v12 = &v7[v11];
  v13 = type metadata accessor for FormatCustomItem.Action();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15(v12, 1, v13))
  {
    sub_1BA648404(0);
    memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(__dst, v12, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
  }
  *(_QWORD *)((char *)v6 + *(int *)(v20 + 28)) = *(_QWORD *)&v7[*(int *)(v20 + 28)];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeedCustomItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (char *)a2 + v6;
  *v7 = *(_QWORD *)((char *)a2 + v6);
  v7[1] = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7[2] = *((_QWORD *)v8 + 2);
  v7[3] = *((_QWORD *)v8 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = type metadata accessor for FormatCustomItem.Resolved();
  v10 = *(int *)(v9 + 24);
  v11 = (char *)v7 + v10;
  v12 = &v8[v10];
  v13 = type metadata accessor for FormatCustomItem.Action();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      v21 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v11, v12, v21);
      goto LABEL_7;
    }
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    sub_1BA648404(0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  v18 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v11, v12, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  *(_QWORD *)((char *)v7 + *(int *)(v9 + 28)) = *(_QWORD *)&v8[*(int *)(v9 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for FeedCustomItem(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  char *v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  v7 = *(_OWORD *)((char *)a2 + v4 + 16);
  *v5 = *(_OWORD *)((char *)a2 + v4);
  v5[1] = v7;
  v8 = type metadata accessor for FormatCustomItem.Resolved();
  v9 = *(int *)(v8 + 24);
  v10 = (char *)v5 + v9;
  v11 = &v6[v9];
  v12 = type metadata accessor for FormatCustomItem.Action();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1BA648404(0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v10, v11, v15);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  *(_QWORD *)((char *)v5 + *(int *)(v8 + 28)) = *(_QWORD *)&v6[*(int *)(v8 + 28)];
  return a1;
}

_QWORD *assignWithTake for FeedCustomItem(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(char *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)((char *)a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = *(_QWORD *)((char *)a2 + v7 + 8);
  *v8 = *(_QWORD *)((char *)a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v11 = *((_QWORD *)v9 + 3);
  v8[2] = *((_QWORD *)v9 + 2);
  v8[3] = v11;
  swift_bridgeObjectRelease();
  v12 = type metadata accessor for FormatCustomItem.Resolved();
  v13 = *(int *)(v12 + 24);
  v14 = (char *)v8 + v13;
  v15 = &v9[v13];
  v16 = type metadata accessor for FormatCustomItem.Action();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      v24 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v14, v15, v24);
      goto LABEL_7;
    }
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatCustomItem.Action);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    sub_1BA648404(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v21 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v14, v15, v21);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  *(_QWORD *)((char *)v8 + *(int *)(v12 + 28)) = *(_QWORD *)&v9[*(int *)(v12 + 28)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedCustomItem()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF22790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FormatCustomItem.Resolved();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FeedCustomItem()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF22818(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FormatCustomItem.Resolved();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t (*FormatVideoPlayerProvider.load(with:)(uint64_t (*a1)(char *)))()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v2 = v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  v7 = v1 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data;
  v8 = v7 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v6, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  v11 = a1(v6);
  sub_1BA7F0A80((uint64_t)v6);
  *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata) = v11;
  swift_unknownObjectRelease();
  return nullsub_1;
}

double FormatVideoPlayerProvider.impressionThreshold.getter()
{
  return 2.0;
}

uint64_t sub_1BAF22BAC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  unint64_t v14;
  int v15;
  double v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  double v20;
  unint64_t v21;
  int v22;
  int *v23;
  uint64_t result;
  uint64_t v25;
  int v26;

  v3 = v2;
  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a1[1];
  v25 = *a1;
  v11 = a1[6];
  v12 = type metadata accessor for FormatVideoPlayerData();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)a1 + *(int *)(v12 + 36), v6);
  v26 = *((unsigned __int8 *)a1 + 56);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  objc_msgSend(v3, sel_time);
  v14 = sub_1BAF23934(v13);
  if ((v14 & 0x100000000) != 0)
    v15 = 0;
  else
    v15 = v14;
  objc_msgSend(v3, sel_timePlayed);
  v17 = sub_1BAF239C0(v16);
  if ((v18 & 1) != 0)
    v19 = 0;
  else
    v19 = v17;
  objc_msgSend(v3, sel_duration);
  v21 = sub_1BAF23934(v20);
  if ((v21 & 0x100000000) != 0)
    v22 = 0;
  else
    v22 = v21;
  *(_QWORD *)a2 = v25;
  *((_QWORD *)a2 + 1) = v10;
  *((_QWORD *)a2 + 2) = v11;
  v23 = (int *)type metadata accessor for FormatVideoPlayerSession();
  result = (*(uint64_t (**)(char *, char *, uint64_t))(v7 + 32))(&a2[v23[6]], v9, v6);
  a2[v23[7]] = v26;
  *(_DWORD *)&a2[v23[8]] = v15;
  *(_QWORD *)&a2[v23[9]] = v19;
  *(_DWORD *)&a2[v23[10]] = v22;
  return result;
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackReadyToStart()()
{
  void *v0;
  uint64_t v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED3BB670 != -1)
    swift_once();
  v0 = (void *)qword_1ED4768A8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1BB87CE70;
  type metadata accessor for FormatVideoPlayerData();
  v2 = v0;
  v3 = sub_1BB86C538();
  v5 = v4;
  *(_QWORD *)(v1 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v1 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v1 + 32) = v3;
  *(_QWORD *)(v1 + 40) = v5;
  v6 = sub_1BB87330C();
  sub_1BB86EF44("Video playback ready to start for %{public}@", 44, 2, &dword_1BA493000, v2, v6, v1);

  swift_bridgeObjectRelease();
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackStarted()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v7, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 96))(v6, v9, v10);
    v11 = v8[3];
    v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 40))(v6, v11, v12);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackPaused()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v7, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator), v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, v8, v9);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackResumed()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v7, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 96))(v6, v9, v10);
    v11 = v8[3];
    v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 56))(v6, v11, v12);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.playbackFinished()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v7, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 72))(v6, v9, v10);
    v11 = v8[3];
    v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.startedPictureInPicture()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v7, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v8 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator), v8);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 80))(v6, v8, v9);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

Swift::Void __swiftcall FormatVideoPlayerProvider.stoppedPictureInPicture()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - v5;
  v7 = OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v8, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v9 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v11 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator), v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 88))(v6, v10, v11);
    v12 = *(void **)(v0 + v7);
    if (v12)
    {
      if (objc_msgSend(v12, sel_playbackState) != (id)3)
      {
        v13 = v9[3];
        v14 = v9[4];
        __swift_project_boxed_opaque_existential_1(v9, v13);
        (*(void (**)(uint64_t, uint64_t))(v14 + 104))(v13, v14);
      }
    }
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

id FormatVideoPlayerProvider.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void FormatVideoPlayerProvider.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id FormatVideoPlayerProvider.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1BAF23934(double a1)
{
  BOOL v1;
  uint64_t v2;
  unint64_t result;

  v1 = a1 > 2147483650.0;
  if (a1 < -2147483650.0)
    v1 = 1;
  if (v1)
  {
    v2 = 0;
    return v2 | ((unint64_t)v1 << 32);
  }
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a1 <= -2147483650.0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 2147483650.0)
  {
    v2 = (int)a1;
    return v2 | ((unint64_t)v1 << 32);
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1BAF239C0(double a1)
{
  uint64_t result;

  if (a1 < -9.22337204e18 || a1 > 9.22337204e18)
    return 0;
  if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (a1 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (a1 < 9.22337204e18)
    return (uint64_t)a1;
LABEL_12:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed25FormatVideoPlayerProviderC17playbackInitiated16withButtonTappedySb_tF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v1 = v0;
  v2 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v22 - v6;
  if (qword_1ED3BB670 != -1)
    swift_once();
  v8 = (void *)qword_1ED4768A8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
  type metadata accessor for FormatVideoPlayerData();
  v11 = v8;
  v12 = sub_1BB86C538();
  v14 = v13;
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v9 + 32) = v12;
  *(_QWORD *)(v9 + 40) = v14;
  v15 = sub_1BB87330C();
  sub_1BB86EF44("Video playback initiated for %{public}@", 39, 2, &dword_1BA493000, v11, v15, v9);

  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v10, v4);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v4, (uint64_t)v7);
    v17 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    v18 = v17[3];
    v19 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v18);
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 96))(v7, v18, v19);
    v20 = v17[3];
    v21 = v17[4];
    __swift_project_boxed_opaque_existential_1(v17, v20);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 32))(v7, v20, v21);
    return sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
  return result;
}

uint64_t sub_1BAF23C5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVideoPlayerSession();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void _s8NewsFeed25FormatVideoPlayerProviderC23playbackFailedWithErroryys0J0_pSgF_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = type metadata accessor for FormatVideoPlayerSession();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_metadata))
  {
    swift_getObjectType();
    v7 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_data);
    swift_unknownObjectRetain();
    sub_1BAF22BAC(v7, v3);
    swift_unknownObjectRelease();
    sub_1BAF23C5C((uint64_t)v3, (uint64_t)v6);
    v8 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator);
    v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 24);
    v10 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed25FormatVideoPlayerProvider_coordinator + 32);
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 64))(v6, v9, v10);
    v11 = v8[3];
    v12 = v8[4];
    __swift_project_boxed_opaque_existential_1(v8, v11);
    (*(void (**)(uint64_t, uint64_t))(v12 + 104))(v11, v12);
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerSession);
  }
}

uint64_t sub_1BAF23DDC()
{
  return type metadata accessor for FormatVideoPlayerProvider();
}

uint64_t type metadata accessor for FormatVideoPlayerProvider()
{
  uint64_t result;

  result = qword_1EF2B64D0;
  if (!qword_1EF2B64D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF23E20()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatVideoPlayerData();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FormatVideoPlayerProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAF23EAC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  unint64_t v11;
  uint64_t *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return v2;
  v30 = MEMORY[0x1E0DEE9D8];
  sub_1BA7447E8(0, v1, 0);
  v2 = v30;
  result = sub_1BA6AFD6C(a1);
  v6 = result;
  v7 = 0;
  v8 = a1 + 64;
  v24 = v1;
  v25 = v5;
  v26 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(_BYTE *)(a1 + 32))
  {
    v11 = (unint64_t)v6 >> 6;
    if ((*(_QWORD *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0)
      goto LABEL_23;
    if (*(_DWORD *)(a1 + 36) != v5)
      goto LABEL_24;
    v27 = v7;
    v12 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v6);
    v28 = *v12;
    v29 = v12[1];
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v13);
    sub_1BB872AFC(v14);
    sub_1BB872AFC(v15);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    v16 = *(_QWORD *)(v30 + 16);
    v17 = *(_QWORD *)(v30 + 24);
    if (v16 >= v17 >> 1)
      result = sub_1BA7447E8(v17 > 1, v16 + 1, 1);
    *(_QWORD *)(v30 + 16) = v16 + 1;
    v18 = v30 + 16 * v16;
    *(_QWORD *)(v18 + 32) = v28;
    *(_QWORD *)(v18 + 40) = v29;
    v9 = 1 << *(_BYTE *)(a1 + 32);
    if (v6 >= v9)
      goto LABEL_25;
    v8 = a1 + 64;
    v19 = *(_QWORD *)(v26 + 8 * v11);
    if ((v19 & (1 << v6)) == 0)
      goto LABEL_26;
    v5 = v25;
    if (*(_DWORD *)(a1 + 36) != v25)
      goto LABEL_27;
    v20 = v19 & (-2 << (v6 & 0x3F));
    if (v20)
    {
      v9 = __clz(__rbit64(v20)) | v6 & 0xFFFFFFFFFFFFFFC0;
      v10 = v24;
    }
    else
    {
      v21 = v11 + 1;
      v22 = (unint64_t)(v9 + 63) >> 6;
      v10 = v24;
      if (v11 + 1 < v22)
      {
        v23 = *(_QWORD *)(v26 + 8 * v21);
        if (v23)
        {
LABEL_20:
          v9 = __clz(__rbit64(v23)) + (v21 << 6);
        }
        else
        {
          while (v22 - 2 != v11)
          {
            v23 = *(_QWORD *)(a1 + 80 + 8 * v11++);
            if (v23)
            {
              v21 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    v7 = v27 + 1;
    v6 = v9;
    if (v27 + 1 == v10)
      return v2;
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1BAF24120()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  int64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;

  if (!*(_QWORD *)(*(_QWORD *)(v0 + 32) + 16))
    return MEMORY[0x1E0DEE9D8];
  sub_1BA6E35A8(0x7373616C63, 0xE500000000000000);
  v1 = MEMORY[0x1E0DEE9D8];
  if ((v2 & 1) != 0)
  {
    sub_1BA7114A0();
    swift_bridgeObjectRetain();
    v3 = sub_1BB873B4C();
    swift_bridgeObjectRelease();
    v4 = *(_QWORD *)(v3 + 16);
    if (v4)
    {
      sub_1BA7447E8(0, v4, 0);
      v5 = (uint64_t *)(v3 + 56);
      do
      {
        v6 = *(v5 - 3);
        v7 = *(v5 - 2);
        v8 = *(v5 - 1);
        v9 = *v5;
        swift_bridgeObjectRetain();
        v10 = MEMORY[0x1BCCE334C](v6, v7, v8, v9);
        v12 = v11;
        swift_bridgeObjectRelease();
        v14 = *(_QWORD *)(v1 + 16);
        v13 = *(_QWORD *)(v1 + 24);
        if (v14 >= v13 >> 1)
          sub_1BA7447E8(v13 > 1, v14 + 1, 1);
        *(_QWORD *)(v1 + 16) = v14 + 1;
        v15 = v1 + 16 * v14;
        *(_QWORD *)(v15 + 32) = v10;
        *(_QWORD *)(v15 + 40) = v12;
        v5 += 4;
        --v4;
      }
      while (v4);
    }
    swift_bridgeObjectRelease();
  }
  return v1;
}

uint64_t sub_1BAF242A0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDOMTag()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for FormatDOMTagKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF24338 + 4 * byte_1BB8D3AE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF2436C + 4 * byte_1BB8D3AE0[v4]))();
}

uint64_t sub_1BAF2436C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF24374(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF2437CLL);
  return result;
}

uint64_t sub_1BAF24388(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF24390);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF24394(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF2439C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDOMTagKind()
{
  return &type metadata for FormatDOMTagKind;
}

unint64_t sub_1BAF243BC()
{
  unint64_t result;

  result = qword_1EF2B65A0;
  if (!qword_1EF2B65A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D3B34, &type metadata for FormatDOMTagKind);
    atomic_store(result, (unint64_t *)&qword_1EF2B65A0);
  }
  return result;
}

BOOL sub_1BAF24400(uint64_t *a1, uint64_t *a2)
{
  return sub_1BAF24630(*a1, *a2);
}

uint64_t sub_1BAF2440C()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v7;

  if (!*(_BYTE *)(v0 + 40))
  {
    v7 = 60;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v4);
    swift_bridgeObjectRelease();
    sub_1BAF2452C(*(_QWORD *)(v0 + 32));
LABEL_6:
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (*(_BYTE *)(v0 + 40) != 1)
  {
    v7 = 12092;
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  v7 = 60;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  sub_1BAF2452C(*(_QWORD *)(v0 + 32));
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
LABEL_7:
  sub_1BB872AFC(v3);
  return v7;
}

uint64_t sub_1BAF2452C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3[2];

  if (!*(_QWORD *)(a1 + 16))
    return 0;
  v3[0] = sub_1BAF23EAC(a1);
  swift_bridgeObjectRetain();
  sub_1BA5BBDDC(v3);
  swift_bridgeObjectRelease();
  sub_1BA6D249C();
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_release();
  v3[0] = 32;
  v3[1] = 0xE100000000000000;
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  return v3[0];
}

uint64_t sub_1BAF24610()
{
  return sub_1BAF2440C();
}

BOOL sub_1BAF24630(uint64_t a1, uint64_t a2)
{
  char v5;
  _BOOL8 result;

  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && *(_QWORD *)(a1 + 24) == *(_QWORD *)(a2 + 24))
    return (sub_1BA9D0488(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
        && *(unsigned __int8 *)(a1 + 40) == *(unsigned __int8 *)(a2 + 40);
  v5 = sub_1BB874398();
  result = 0;
  if ((v5 & 1) != 0)
    return (sub_1BA9D0488(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)) & 1) != 0
        && *(unsigned __int8 *)(a1 + 40) == *(unsigned __int8 *)(a2 + 40);
  return result;
}

uint64_t sub_1BAF246A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BAF246FC + 4 * byte_1BB8D3BF0[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1BAF24884(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      result = swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40))
        result = __swift_destroy_boxed_opaque_existential_1(a1 + 16);
      break;
    case 1:
      swift_bridgeObjectRelease();
      result = sub_1BA5F1DE8(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
      break;
    case 2:
      swift_bridgeObjectRelease();
      sub_1BAAC18F4();
      v4 = a1 + *(int *)(v3 + 48);
      v5 = sub_1BB8714E8();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(a1);
      result = swift_release();
      break;
    case 4:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BAF24968()
{
  char *v0;

  v0 = (char *)sub_1BAF249B4 + 4 * byte_1BB8D3BFA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAF249B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;

  v2 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)v0 = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 8) = v2;
  v3 = *(_QWORD *)(v1 + 40);
  swift_bridgeObjectRetain();
  if (v3)
  {
    v4 = *(_QWORD *)(v1 + 48);
    *(_QWORD *)(v0 + 40) = v3;
    *(_QWORD *)(v0 + 48) = v4;
    (**(void (***)(uint64_t, uint64_t, uint64_t))(v3 - 8))(v0 + 16, v1 + 16, v3);
  }
  else
  {
    v5 = *(_OWORD *)(v1 + 32);
    *(_OWORD *)(v0 + 16) = *(_OWORD *)(v1 + 16);
    *(_OWORD *)(v0 + 32) = v5;
    *(_QWORD *)(v0 + 48) = *(_QWORD *)(v1 + 48);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t sub_1BAF24B1C(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BAF24D08(result);
    v2 = (char *)&loc_1BAF24B78 + 4 * byte_1BB8D3BFF[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BAF24D08(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugJournalGroupItem();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for DebugJournalGroupItem()
{
  uint64_t result;

  result = qword_1EF2B6618;
  if (!qword_1EF2B6618)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BAF24D80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *a1 = *a2;
    sub_1BAAC18F4();
    v7 = *(int *)(v6 + 48);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB8714E8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1BAF24E28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  if (a1 != a2)
  {
    sub_1BAF24D08((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *a1 = *a2;
      sub_1BAAC18F4();
      v7 = *(int *)(v6 + 48);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1BB8714E8();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BAF24EE0()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  const char *v3;
  void *v4;
  char *v5;
  void *v6;
  void *v7;

  v3 = "8";
  v4 = &unk_1BB8D3C40;
  result = sub_1BB8714E8();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v5 = &v2;
    v6 = &unk_1BB8D3C70;
    v7 = &unk_1BB8D3C58;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

id sub_1BAF24F88(id result, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 6:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 3:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

void destroy for FeedDatabaseError(uint64_t a1)
{
  sub_1BAF24FD0(*(void **)a1, *(id *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1BAF24FD0(void *a1, id a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 4:
    case 5:
    case 6:
      swift_bridgeObjectRelease();
      break;
    case 3:

      break;
    default:
      return;
  }
}

uint64_t _s8NewsFeed17FeedDatabaseErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAF24F88(*(id *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FeedDatabaseError(uint64_t a1, uint64_t a2)
{
  id v3;
  void *v4;
  char v5;
  void *v6;
  void *v7;
  char v8;

  v3 = *(id *)a2;
  v4 = *(void **)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAF24F88(*(id *)a2, v4, v5);
  v6 = *(void **)a1;
  v7 = *(void **)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAF24FD0(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FeedDatabaseError(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  void *v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(void **)a1;
  v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAF24FD0(v4, v5, v6);
  return a1;
}

uint64_t sub_1BAF250E8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 6u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 7);
}

uint64_t sub_1BAF25100(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(_QWORD *)result = a2 - 7;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 7;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FeedDatabaseError()
{
  return &type metadata for FeedDatabaseError;
}

_QWORD *sub_1BAF25128(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_16:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    v7 = a2[1];
    *a1 = *a2;
    swift_retain();
    if (v7 != 1)
      swift_bridgeObjectRetain();
    a1[1] = v7;
    v8 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = type metadata accessor for FormatVersionRequirement(0);
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      sub_1BA8E5458();
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      goto LABEL_16;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = sub_1BB86EB84();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      v19(v9, v10, v18);
      sub_1BA6F3F88();
      v21 = v20;
      v19(&v9[*(int *)(v20 + 48)], &v10[*(int *)(v20 + 48)], v18);
      v17 = *(int *)(v21 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v25 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v9, v10, v25);
        goto LABEL_15;
      }
      v15 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v9, v10, v15);
      sub_1BA8D4E7C();
      v17 = *(int *)(v16 + 48);
    }
    v22 = &v9[v17];
    v23 = &v10[v17];
    v24 = *((_QWORD *)v23 + 1);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
LABEL_15:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    goto LABEL_16;
  }
  v6 = *a2;
  *a1 = *a2;
  a1 = (_QWORD *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_1BAF25370(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;

  if (swift_getEnumCaseMultiPayload() == 1)
    return swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 8) != 1)
    swift_bridgeObjectRelease();
  v3 = a1 + *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
  v4 = type metadata accessor for FormatVersionRequirement(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4);
  if (!(_DWORD)result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    result = swift_getEnumCaseMultiPayload();
    switch((_DWORD)result)
    {
      case 2:
        v6 = sub_1BB86EB84();
        v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
        v7(v3, v6);
        sub_1BA6F3F88();
        v7(v3 + *(int *)(v8 + 48), v6);
        break;
      case 1:
        v9 = sub_1BB86EB84();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v3, v9);
        sub_1BA8D4E7C();
        break;
      case 0:
        v5 = sub_1BB86EB84();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
      default:
        return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BAF254CC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v4 = a2[1];
    *a1 = *a2;
    swift_retain();
    if (v4 != 1)
      swift_bridgeObjectRetain();
    a1[1] = v4;
    v5 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for FormatVersionRequirement(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1BA8E5458();
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_14;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_1BB86EB84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v6, v7, v15);
      sub_1BA6F3F88();
      v18 = v17;
      v16(&v6[*(int *)(v17 + 48)], &v7[*(int *)(v17 + 48)], v15);
      v14 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v22 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v6, v7, v22);
        goto LABEL_13;
      }
      v12 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      sub_1BA8D4E7C();
      v14 = *(int *)(v13 + 48);
    }
    v19 = &v6[v14];
    v20 = &v7[v14];
    v21 = *((_QWORD *)v20 + 1);
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = v21;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    goto LABEL_14;
  }
  *a1 = *a2;
  swift_bridgeObjectRetain();
LABEL_14:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_1BAF256E0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_1BAF25910((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    *a1 = *a2;
    v4 = a2[1];
    swift_retain();
    if (v4 != 1)
      swift_bridgeObjectRetain();
    a1[1] = v4;
    v5 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = type metadata accessor for FormatVersionRequirement(0);
    v9 = *(_QWORD *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      sub_1BA8E5458();
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      goto LABEL_15;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v15 = sub_1BB86EB84();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      v16(v6, v7, v15);
      sub_1BA6F3F88();
      v18 = v17;
      v16(&v6[*(int *)(v17 + 48)], &v7[*(int *)(v17 + 48)], v15);
      v14 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v21 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v6, v7, v21);
        goto LABEL_14;
      }
      v12 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v6, v7, v12);
      sub_1BA8D4E7C();
      v14 = *(int *)(v13 + 48);
    }
    v19 = &v6[v14];
    v20 = &v7[v14];
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *((_QWORD *)v19 + 1) = *((_QWORD *)v20 + 1);
    swift_bridgeObjectRetain();
LABEL_14:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    goto LABEL_15;
  }
  return a1;
}

uint64_t sub_1BAF25910(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatOptionsNodeStatementEvaluation();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatOptionsNodeStatementEvaluation()
{
  uint64_t result;

  result = qword_1ED3D2578;
  if (!qword_1ED3D2578)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *sub_1BAF25988(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t);

  if (!swift_getEnumCaseMultiPayload())
  {
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for FormatVersionRequirement(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1BA8E5458();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_1BB86EB84();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v21(v7, v8, v16);
      sub_1BA6F3F88();
      v18 = v17;
      v21(&v7[*(int *)(v17 + 48)], &v8[*(int *)(v17 + 48)], v16);
      v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v19 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_11;
      }
      v13 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      sub_1BA8D4E7C();
      v15 = *(int *)(v14 + 48);
    }
    *(_OWORD *)&v7[v15] = *(_OWORD *)&v8[v15];
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    goto LABEL_12;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *sub_1BAF25B74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v21)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1BAF25910((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    *a1 = *a2;
    v6 = *(int *)(type metadata accessor for FormatOptionsNodeStatementResult() + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = type metadata accessor for FormatVersionRequirement(0);
    v10 = *(_QWORD *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      sub_1BA8E5458();
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v16 = sub_1BB86EB84();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32);
      v21(v7, v8, v16);
      sub_1BA6F3F88();
      v18 = v17;
      v21(&v7[*(int *)(v17 + 48)], &v8[*(int *)(v17 + 48)], v16);
      v15 = *(int *)(v18 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v19 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v7, v8, v19);
        goto LABEL_12;
      }
      v13 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v7, v8, v13);
      sub_1BA8D4E7C();
      v15 = *(int *)(v14 + 48);
    }
    *(_OWORD *)&v7[v15] = *(_OWORD *)&v8[v15];
LABEL_12:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    goto LABEL_13;
  }
  return a1;
}

uint64_t sub_1BAF25D70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatOptionsNodeStatementResult();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of FeedItemDimmingEvaluatorType.shouldDim(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t initializeBufferWithCopyOfBuffer for FeedItemDimmingType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1BAF25E48 + 4 * byte_1BB8D3D70[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

void destroy for FeedItemDimmingType(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  int EnumCaseMultiPayload;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int (*v60)(uint64_t, uint64_t, uint64_t);
  uint64_t v61;
  uint64_t v62;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 48) >= 0x11uLL)
            goto LABEL_5;
          return;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 80) < 0x11uLL)
            return;
          goto LABEL_5;
        case 2u:
          swift_bridgeObjectRelease();
          v2 = type metadata accessor for FeedBannerAd();
          v3 = a1 + *(int *)(v2 + 20);
          v4 = sub_1BB8721C0();
          goto LABEL_55;
        case 3u:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v5 = (int *)type metadata accessor for FeedHeadline(0);
          v6 = a1 + v5[10];
          v7 = v6 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v8 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
          {
            v9 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v7, v9);

            v10 = v7 + *(int *)(v8 + 28);
            v11 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
          }
          v12 = a1 + v5[11];
          v13 = sub_1BB871B24();
          v14 = *(_QWORD *)(v13 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
            (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
          if (*(_QWORD *)(a1 + v5[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + v5[13]) >= 3uLL)
            swift_unknownObjectRelease();

          return;
        case 4u:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v15 = (int *)type metadata accessor for FeedWebEmbed();
          v16 = a1 + v15[8];
          v17 = sub_1BB86C67C();
          v18 = *(_QWORD *)(v17 - 8);
          v19 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
          v19(v16, v17);
          v20 = a1 + v15[9];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v20, 1, v17))
            v19(v20, v17);
          swift_release();
          swift_release();
          v21 = a1 + v15[12];
          v22 = (int *)type metadata accessor for FeedHeadline(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v22 - 1) + 48))(v21, 1, v22))
          {
            swift_bridgeObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            v23 = v22[10];
            v24 = v21 + v23 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
            v25 = type metadata accessor for SharedItem();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 48))(v24, 1, v25))
            {
              v26 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v24, v26);

              v19(v24 + *(int *)(v25 + 28), v17);
            }
            v27 = v21 + v22[11];
            v28 = sub_1BB871B24();
            v29 = *(_QWORD *)(v28 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
              (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
            if (*(_QWORD *)(v21 + v22[12] + 8) >= 0x11uLL)
              swift_bridgeObjectRelease();
            if (*(_QWORD *)(v21 + v22[13]) >= 3uLL)
              swift_unknownObjectRelease();

          }
          v30 = a1 + v15[13];
          v31 = type metadata accessor for WebEmbedDataVisualization();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
            return;
          if (swift_getEnumCaseMultiPayload() != 1)
            goto LABEL_57;
          swift_bridgeObjectRelease();
          v32 = type metadata accessor for GenericDataVisualization();
          v19(v30 + *(int *)(v32 + 20), v17);
          goto LABEL_5;
        case 5u:
          goto LABEL_38;
        case 6u:
          v33 = *(unsigned __int8 *)(a1 + 281);
          if (v33 == 2)
            goto LABEL_42;
          if (v33 == 1)
          {

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
              swift_bridgeObjectRelease();
            v41 = *(void **)(a1 + 144);
            if (v41)
            {

              swift_bridgeObjectRelease();
              if (*(_QWORD *)(a1 + 224) != 1)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

              }
              if (*(_QWORD *)(a1 + 272) >= 0x11uLL)
                goto LABEL_5;
            }
          }
          else
          {
            if (*(_BYTE *)(a1 + 281))
              return;
LABEL_38:

            swift_bridgeObjectRelease();
            if (*(_QWORD *)(a1 + 80) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

            }
            if (*(_QWORD *)(a1 + 128) >= 0x11uLL)
              goto LABEL_5;
          }
          break;
        case 7u:
LABEL_42:
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 88) == 1)
            return;
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)(a1 + 120))
            return;
          v34 = a1 + 96;
          goto LABEL_64;
        case 8u:
          swift_bridgeObjectRelease();
          v35 = a1 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v36 = v35 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
          v37 = type metadata accessor for FormatCustomItem.Action();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48))(v36, 1, v37))
          {
            v38 = sub_1BB86C67C();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v36, v38);
          }
          goto LABEL_5;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 56))
            __swift_destroy_boxed_opaque_existential_1(a1 + 32);
          if (*(_QWORD *)(a1 + 96))
            __swift_destroy_boxed_opaque_existential_1(a1 + 72);
          if (!*(_QWORD *)(a1 + 136))
            return;
          v34 = a1 + 112;
          goto LABEL_64;
        case 0xAu:
          swift_bridgeObjectRelease();
          v2 = type metadata accessor for FeedEngagementBanner();
          v3 = a1 + *(int *)(v2 + 20);
          v4 = sub_1BB86EDAC();
LABEL_55:
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
          if (*(_QWORD *)(a1 + *(int *)(v2 + 32) + 8) < 0x11uLL)
            return;
          goto LABEL_5;
        case 0xBu:
LABEL_57:
          swift_release();
          return;
        case 0xCu:
          goto LABEL_67;
        case 0xDu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 112))
            __swift_destroy_boxed_opaque_existential_1(a1 + 88);
          if (!*(_QWORD *)(a1 + 152))
            return;
          v34 = a1 + 128;
LABEL_64:
          __swift_destroy_boxed_opaque_existential_1(v34);
          return;
        case 0xEu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
LABEL_67:
          swift_bridgeObjectRelease();
          goto LABEL_2;
        case 0xFu:
          if (*(_QWORD *)(a1 + 32) >= 0x11uLL)
            swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v39 = a1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          swift_unknownObjectRelease();
          v40 = v39 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
          type metadata accessor for PuzzleStatisticCategory(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              type metadata accessor for PuzzleStatisticValue(0);
              goto LABEL_92;
            case 1u:
              type metadata accessor for PuzzleStatisticValue(0);
              EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              {
                v43 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 48))(v40, 1, v43))
                {
                  v44 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(v40, v44);
                }
              }
              v45 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
              v46 = v40 + *(int *)(v45 + 20);
              v47 = swift_getEnumCaseMultiPayload();
              if (v47 == 5 || v47 == 4)
              {
                v48 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v46, 1, v48))
                {
                  v49 = sub_1BB86BEC0();
                  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 8))(v46, v49);
                }
              }
              v40 += *(int *)(v45 + 24);
LABEL_92:
              v50 = swift_getEnumCaseMultiPayload();
              if (v50 == 5 || v50 == 4)
              {
                v51 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v40, 1, v51))goto LABEL_105;
              }
              return;
            case 2u:
              v52 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v40, 1, v52))
              {
                return;
              }
              v53 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v40, v53);
              v54 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              v55 = v40 + *(int *)(v54 + 24);
              swift_bridgeObjectRelease();
              v56 = *(_QWORD *)(v55 + 24);
              if (v56 >> 60 != 15)
                sub_1BA69D314(*(_QWORD *)(v55 + 16), v56);
              goto LABEL_5;
            case 3u:
              v57 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
              v58 = v40 + *(int *)(v57 + 24);
              v59 = type metadata accessor for PuzzleStreak();
              v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48);
              if (!v60(v58, 1, v59))
              {
                v61 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v58, v61);
              }
              v40 += *(int *)(v57 + 28);
              if (v60(v40, 1, v59))
                return;
LABEL_105:
              v62 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 8))(v40, v62);
              return;
            default:
              return;
          }
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(a1 + 240) < 0x11uLL)
            return;
          goto LABEL_5;
        default:
          return;
      }
      break;
    case 1u:
    case 2u:
LABEL_2:
      swift_unknownObjectRelease();
      break;
    case 3u:
LABEL_5:
      swift_bridgeObjectRelease();
      break;
    default:
      return;
  }
}

void initializeWithCopy for FeedItemDimmingType()
{
  char *v0;

  v0 = (char *)sub_1BAF289E8 + 4 * byte_1BB8D3DC8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_1BAF289E8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__dst, uint64_t a17, void *a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  int *v87;
  uint64_t v88;
  char *v89;
  int *v90;
  unsigned int (*v91)(char *, uint64_t, int *);
  uint64_t v92;
  void *v93;
  uint64_t v94;
  void *v95;
  uint64_t v96;
  id v97;
  id v98;
  __int128 v99;
  int v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  id v105;
  id v106;
  __int128 v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  unsigned int (*v124)(char *, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  char *v129;
  char *v130;
  uint64_t v131;
  void (*v132)(char *, char *, uint64_t);
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  unint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(char *, char *, uint64_t);
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  id v159;
  _QWORD *v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  uint64_t v166;
  id v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  __int128 v172;
  _OWORD *v173;
  _OWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  uint64_t v183;
  int *v184;
  __int128 v185;
  _OWORD *v186;
  _OWORD *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  int *v198;
  unsigned int (*v199)(char *, uint64_t, int *);
  _QWORD *v200;
  uint64_t v201;
  __int128 v202;
  uint64_t v203;
  uint64_t v204;
  void *v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  __int128 v216;
  _OWORD *v217;
  _OWORD *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  unint64_t v224;
  uint64_t v225;
  unint64_t v226;
  __int128 v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  _OWORD *v232;
  _OWORD *v233;
  __int128 v234;
  void *v235;
  uint64_t v236;
  void *v237;
  uint64_t v238;
  id v239;
  id v240;
  __int128 v241;
  uint64_t v242;
  void *v243;
  id v244;
  __int128 v245;
  uint64_t v246;
  uint64_t v247;
  void *v248;
  id v249;
  _QWORD *v250;
  unint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  void *v256;
  id v257;
  _QWORD *v258;
  unint64_t v259;
  void *v260;
  uint64_t v261;
  uint64_t v262;
  void *v263;
  uint64_t v264;
  id v265;
  id v266;
  __int128 v267;
  uint64_t v268;
  uint64_t v269;
  void *v270;
  uint64_t v271;
  char *v272;
  char *v273;
  char *v274;
  id v275;
  char *v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  _QWORD *v284;
  _QWORD *v285;
  unint64_t v286;
  uint64_t v287;
  unint64_t v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  uint64_t v293;
  uint64_t v294;
  void *v295;
  id v296;
  _QWORD *v297;
  unint64_t v298;
  uint64_t v299;
  void *v300;
  void (*v301)(_QWORD *, _QWORD, uint64_t, int *);
  id v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  int EnumCaseMultiPayload;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  char *v314;
  __int128 v315;
  char *result;
  uint64_t v317;
  char *v318;
  int *v319;
  uint64_t v320;
  void (*v321)(char *, char *, uint64_t);
  uint64_t v322;
  int *v323;
  char *v324;
  _QWORD *v325;
  char *v326;
  _QWORD *v327;
  uint64_t v328;
  void (*v329)(char *, char *, uint64_t);
  char *v330;
  char *v331;
  uint64_t v332;
  char *v333;
  int *v334;
  uint64_t v335;
  int *v336;

  v34 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v35 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v35;
      v36 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_QWORD *)v32 + 3) = v36;
      v32[32] = v33[32];
      v37 = v33 + 40;
      v38 = *((_QWORD *)v33 + 6);
      swift_bridgeObjectRetain();
      if (v38 >= 0x11)
      {
        *((_QWORD *)v32 + 5) = *v37;
        *((_QWORD *)v32 + 6) = v38;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 40) = *(_OWORD *)v37;
      }
      goto LABEL_140;
    case 1u:
      v76 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v76;
      v77 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_QWORD *)v32 + 3) = v77;
      v32[32] = v33[32];
      v78 = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 6) = v78;
      v79 = *((_QWORD *)v33 + 8);
      *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 8) = v79;
      v80 = v33 + 72;
      v81 = *((_QWORD *)v33 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v81 >= 0x11)
      {
        *((_QWORD *)v32 + 9) = *v80;
        *((_QWORD *)v32 + 10) = v81;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 72) = *(_OWORD *)v80;
      }
      goto LABEL_140;
    case 2u:
      v39 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v39;
      v40 = (int *)type metadata accessor for FeedBannerAd();
      v41 = v40[5];
      v42 = &v32[v41];
      v43 = &v33[v41];
      v44 = sub_1BB8721C0();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      *(_QWORD *)&v32[v40[6]] = *(_QWORD *)&v33[v40[6]];
      v46 = v40[7];
      v47 = &v32[v46];
      v48 = &v33[v46];
      *(_QWORD *)v47 = *(_QWORD *)v48;
      v47[8] = v48[8];
      v49 = v40[8];
      v50 = &v32[v49];
      v51 = &v33[v49];
      v52 = *((_QWORD *)v51 + 1);
      if (v52 >= 0x11)
        goto LABEL_37;
      *(_OWORD *)v50 = *(_OWORD *)v51;
      goto LABEL_140;
    case 3u:
      v82 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v82;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      v32[24] = v33[24];
      v83 = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      *((_QWORD *)v32 + 5) = v83;
      *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
      v32[56] = v33[56];
      v334 = (int *)type metadata accessor for FeedHeadline(0);
      v84 = v334[10];
      v85 = &v32[v84];
      v86 = &v33[v84];
      *v85 = v33[v84];
      v85[1] = v33[v84 + 1];
      v87 = (int *)type metadata accessor for FeedHeadline.State(0);
      v88 = v87[6];
      v324 = &v85[v88];
      v89 = &v86[v88];
      v90 = (int *)type metadata accessor for SharedItem();
      v322 = *((_QWORD *)v90 - 1);
      v91 = *(unsigned int (**)(char *, uint64_t, int *))(v322 + 48);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_unknownObjectRetain();
      if (v91(v89, 1, v90))
      {
        v92 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v324, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
      }
      else
      {
        v203 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v324, v89, v203);
        v324[v90[5]] = v89[v90[5]];
        v204 = v90[6];
        v205 = *(void **)&v89[v204];
        *(_QWORD *)&v324[v204] = v205;
        v206 = v90[7];
        v330 = &v89[v206];
        v333 = &v324[v206];
        v207 = sub_1BB86C67C();
        v321 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16);
        v208 = v205;
        v321(v333, v330, v207);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v322 + 56))(v324, 0, 1, v90);
      }
      v85[v87[7]] = v86[v87[7]];
      v85[v87[8]] = v86[v87[8]];
      v85[v87[9]] = v86[v87[9]];
      v85[v87[10]] = v86[v87[10]];
      v209 = v334[11];
      v210 = &v32[v209];
      v211 = &v33[v209];
      v212 = sub_1BB871B24();
      v213 = *(_QWORD *)(v212 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v213 + 48))(v211, 1, v212))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v213 + 16))(v210, v211, v212);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v213 + 56))(v210, 0, 1, v212);
      }
      v221 = v334[12];
      v222 = &v32[v221];
      v223 = &v33[v221];
      v224 = *((_QWORD *)v223 + 1);
      if (v224 >= 0x11)
      {
        *(_QWORD *)v222 = *(_QWORD *)v223;
        *((_QWORD *)v222 + 1) = v224;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v222 = *(_OWORD *)v223;
      }
      v225 = v334[13];
      v226 = *(_QWORD *)&v33[v225];
      if (v226 >= 2)
      {
        if (v226 == 2)
        {
          *(_QWORD *)&v32[v225] = 2;
        }
        else
        {
          *(_QWORD *)&v32[v225] = v226;
          swift_unknownObjectRetain();
        }
      }
      else
      {
        *(_QWORD *)&v32[v225] = v226;
      }
      v242 = v334[14];
      v243 = *(void **)&v33[v242];
      *(_QWORD *)&v32[v242] = v243;
      v244 = v243;
      goto LABEL_140;
    case 4u:
      v53 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v53;
      v32[16] = v33[16];
      v54 = v33 + 24;
      v55 = *((_QWORD *)v33 + 4);
      if (v55 >= 0x11)
      {
        *((_QWORD *)v32 + 3) = *v54;
        *((_QWORD *)v32 + 4) = v55;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 24) = *(_OWORD *)v54;
      }
      v143 = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 6) = v143;
      v144 = (int *)type metadata accessor for FeedWebEmbed();
      v145 = v144[8];
      v146 = &v32[v145];
      v147 = &v33[v145];
      v148 = sub_1BB86C67C();
      v149 = *(_QWORD *)(v148 - 8);
      v150 = *(void (**)(char *, char *, uint64_t))(v149 + 16);
      swift_bridgeObjectRetain();
      v150(v146, v147, v148);
      v151 = v144[9];
      v152 = &v32[v151];
      v153 = &v33[v151];
      v329 = v150;
      v332 = v148;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(&v33[v151], 1, v148))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
      }
      else
      {
        v150(v152, v153, v148);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v149 + 56))(v152, 0, 1, v148);
      }
      *(_QWORD *)&v32[v144[10]] = *(_QWORD *)&v33[v144[10]];
      *(_QWORD *)&v32[v144[11]] = *(_QWORD *)&v33[v144[11]];
      v177 = v144[12];
      v178 = &v32[v177];
      v179 = &v33[v177];
      v180 = type metadata accessor for FeedHeadline(0);
      v336 = v144;
      v181 = *(_QWORD *)(v180 - 8);
      v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v181 + 48);
      swift_retain();
      swift_retain();
      if (v182(v179, 1, v180))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v178, v179, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        v184 = v336;
      }
      else
      {
        v320 = v181;
        v323 = (int *)v180;
        v190 = *((_QWORD *)v179 + 1);
        *(_QWORD *)v178 = *(_QWORD *)v179;
        *((_QWORD *)v178 + 1) = v190;
        *((_QWORD *)v178 + 2) = *((_QWORD *)v179 + 2);
        v178[24] = v179[24];
        v191 = *((_QWORD *)v179 + 5);
        *((_QWORD *)v178 + 4) = *((_QWORD *)v179 + 4);
        *((_QWORD *)v178 + 5) = v191;
        *((_QWORD *)v178 + 6) = *((_QWORD *)v179 + 6);
        v178[56] = v179[56];
        v192 = *(int *)(v180 + 40);
        v325 = v178;
        v193 = &v178[v192];
        v194 = &v179[v192];
        *v193 = v179[v192];
        v193[1] = v179[v192 + 1];
        v195 = type metadata accessor for FeedHeadline.State(0);
        v196 = *(int *)(v195 + 24);
        v318 = &v193[v196];
        v319 = (int *)v195;
        v197 = &v194[v196];
        v198 = (int *)type metadata accessor for SharedItem();
        v317 = *((_QWORD *)v198 - 1);
        v199 = *(unsigned int (**)(char *, uint64_t, int *))(v317 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        v200 = v179;
        if (v199(v197, 1, v198))
        {
          v201 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v318, v197, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
        }
        else
        {
          v268 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v268 - 8) + 16))(v318, v197, v268);
          v318[v198[5]] = v197[v198[5]];
          v269 = v198[6];
          v270 = *(void **)&v197[v269];
          *(_QWORD *)&v318[v269] = v270;
          v271 = v198[7];
          v272 = v197;
          v273 = &v318[v271];
          v274 = &v272[v271];
          v275 = v270;
          v276 = v274;
          v200 = v179;
          v329(v273, v276, v332);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v317 + 56))(v318, 0, 1, v198);
        }
        v193[v319[7]] = v194[v319[7]];
        v193[v319[8]] = v194[v319[8]];
        v193[v319[9]] = v194[v319[9]];
        v193[v319[10]] = v194[v319[10]];
        v277 = v323[11];
        v278 = (char *)v325 + v277;
        v279 = (char *)v200 + v277;
        v280 = sub_1BB871B24();
        v281 = *(_QWORD *)(v280 - 8);
        v184 = v336;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48))(v279, 1, v280))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v278, v279, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v278, v279, v280);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
        }
        v283 = v323[12];
        v284 = (_QWORD *)((char *)v325 + v283);
        v285 = (_QWORD *)((char *)v200 + v283);
        v286 = v285[1];
        if (v286 >= 0x11)
        {
          *v284 = *v285;
          v284[1] = v286;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v284 = *(_OWORD *)v285;
        }
        v287 = v323[13];
        v288 = *(_QWORD *)((char *)v200 + v287);
        if (v288 >= 2)
        {
          if (v288 == 2)
          {
            *(_QWORD *)((char *)v325 + v287) = 2;
          }
          else
          {
            *(_QWORD *)((char *)v325 + v287) = v288;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)((char *)v325 + v287) = v288;
        }
        v299 = v323[14];
        v300 = *(void **)((char *)v200 + v299);
        *(_QWORD *)((char *)v325 + v299) = v300;
        v301 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v320 + 56);
        v302 = v300;
        v301(v325, 0, 1, v323);
      }
      v303 = v184[13];
      v304 = &v32[v303];
      v305 = &v33[v303];
      v306 = type metadata accessor for WebEmbedDataVisualization();
      v307 = *(_QWORD *)(v306 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v307 + 48))(v305, 1, v306))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v304, v305, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v310 = *(_QWORD *)v305;
        if (EnumCaseMultiPayload == 1)
        {
          v311 = *((_QWORD *)v305 + 1);
          *(_QWORD *)v304 = v310;
          *((_QWORD *)v304 + 1) = v311;
          v312 = type metadata accessor for GenericDataVisualization();
          v313 = *(int *)(v312 + 20);
          v326 = &v304[v313];
          v314 = &v305[v313];
          swift_bridgeObjectRetain();
          v329(v326, v314, v332);
          *(_QWORD *)&v304[*(int *)(v312 + 24)] = *(_QWORD *)&v305[*(int *)(v312 + 24)];
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_QWORD *)v304 = v310;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v307 + 56))(v304, 0, 1, v306);
      }
      v32[v336[14]] = v33[v336[14]];
      goto LABEL_140;
    case 5u:
      v93 = *(void **)v33;
      v94 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v94;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_WORD *)v32 + 12) = *((_WORD *)v33 + 12);
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      v32[40] = v33[40];
      v95 = (void *)*((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 7) = v95;
      v32[64] = v33[64];
      v96 = *((_QWORD *)v33 + 10);
      v97 = v93;
      swift_bridgeObjectRetain();
      v98 = v95;
      if (v96 == 1)
      {
        v99 = *(_OWORD *)(v33 + 88);
        *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
        *(_OWORD *)(v32 + 88) = v99;
        *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
      }
      else
      {
        *((_QWORD *)v32 + 9) = *((_QWORD *)v33 + 9);
        *((_QWORD *)v32 + 10) = v96;
        v156 = *((_QWORD *)v33 + 12);
        *((_QWORD *)v32 + 11) = *((_QWORD *)v33 + 11);
        *((_QWORD *)v32 + 12) = v156;
        v158 = (void *)*((_QWORD *)v33 + 13);
        v157 = *((_QWORD *)v33 + 14);
        *((_QWORD *)v32 + 13) = v158;
        *((_QWORD *)v32 + 14) = v157;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v159 = v158;
      }
      v160 = v33 + 120;
      v161 = *((_QWORD *)v33 + 16);
      if (v161 >= 0x11)
      {
        *((_QWORD *)v32 + 15) = *v160;
        *((_QWORD *)v32 + 16) = v161;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 120) = *(_OWORD *)v160;
      }
      v32[136] = v33[136];
      goto LABEL_140;
    case 6u:
      v100 = v33[281];
      if (v100 == 2)
      {
        v228 = *((_QWORD *)v33 + 1);
        *(_QWORD *)v32 = *(_QWORD *)v33;
        *((_QWORD *)v32 + 1) = v228;
        *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
        v32[24] = v33[24];
        *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
        v32[40] = v33[40];
        v229 = *((_QWORD *)v33 + 7);
        *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
        *((_QWORD *)v32 + 7) = v229;
        v230 = *((_QWORD *)v33 + 9);
        *((_QWORD *)v32 + 8) = *((_QWORD *)v33 + 8);
        *((_QWORD *)v32 + 9) = v230;
        v231 = *((_QWORD *)v33 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v231 != 1)
        {
          *((_QWORD *)v32 + 10) = *((_QWORD *)v33 + 10);
          *((_QWORD *)v32 + 11) = v231;
          v252 = *((_QWORD *)v33 + 15);
          swift_bridgeObjectRetain();
          if (v252)
          {
            v253 = *((_QWORD *)v33 + 16);
            *((_QWORD *)v32 + 15) = v252;
            *((_QWORD *)v32 + 16) = v253;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v252 - 8))((uint64_t)(v32 + 96), (uint64_t)(v33 + 96), v252);
            *((_QWORD *)v32 + 17) = *((_QWORD *)v33 + 17);
          }
          else
          {
            v315 = *((_OWORD *)v33 + 7);
            *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
            *((_OWORD *)v32 + 7) = v315;
            *((_OWORD *)v32 + 8) = *((_OWORD *)v33 + 8);
          }
          v32[144] = v33[144];
          goto LABEL_139;
        }
        v232 = v32 + 80;
        v233 = v33 + 80;
        v234 = *((_OWORD *)v33 + 8);
        *((_OWORD *)v32 + 7) = *((_OWORD *)v33 + 7);
        *((_OWORD *)v32 + 8) = v234;
        v32[144] = v33[144];
LABEL_124:
        v292 = v233[1];
        *v232 = *v233;
        v232[1] = v292;
        goto LABEL_139;
      }
      if (v100 != 1)
      {
        v235 = *(void **)v33;
        v236 = *((_QWORD *)v33 + 1);
        *(_QWORD *)v32 = *(_QWORD *)v33;
        *((_QWORD *)v32 + 1) = v236;
        *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
        *((_WORD *)v32 + 12) = *((_WORD *)v33 + 12);
        *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
        v32[40] = v33[40];
        v237 = (void *)*((_QWORD *)v33 + 7);
        *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
        *((_QWORD *)v32 + 7) = v237;
        v32[64] = v33[64];
        v238 = *((_QWORD *)v33 + 10);
        v239 = v235;
        swift_bridgeObjectRetain();
        v240 = v237;
        if (v238 == 1)
        {
          v241 = *(_OWORD *)(v33 + 88);
          *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
          *(_OWORD *)(v32 + 88) = v241;
          *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
        }
        else
        {
          *((_QWORD *)v32 + 9) = *((_QWORD *)v33 + 9);
          *((_QWORD *)v32 + 10) = v238;
          v254 = *((_QWORD *)v33 + 12);
          *((_QWORD *)v32 + 11) = *((_QWORD *)v33 + 11);
          *((_QWORD *)v32 + 12) = v254;
          v256 = (void *)*((_QWORD *)v33 + 13);
          v255 = *((_QWORD *)v33 + 14);
          *((_QWORD *)v32 + 13) = v256;
          *((_QWORD *)v32 + 14) = v255;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v257 = v256;
        }
        v258 = v33 + 120;
        v259 = *((_QWORD *)v33 + 16);
        if (v259 >= 0x11)
        {
          *((_QWORD *)v32 + 15) = *v258;
          *((_QWORD *)v32 + 16) = v259;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v32 + 120) = *(_OWORD *)v258;
        }
        v32[136] = v33[136];
        goto LABEL_139;
      }
      v101 = *(void **)v33;
      v102 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v102;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_WORD *)v32 + 12) = *((_WORD *)v33 + 12);
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      v32[40] = v33[40];
      v103 = (void *)*((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 7) = v103;
      v32[64] = v33[64];
      v104 = *((_QWORD *)v33 + 10);
      v105 = v101;
      swift_bridgeObjectRetain();
      v106 = v103;
      if (v104 == 1)
      {
        v107 = *(_OWORD *)(v33 + 88);
        *(_OWORD *)(v32 + 72) = *(_OWORD *)(v33 + 72);
        *(_OWORD *)(v32 + 88) = v107;
        *(_OWORD *)(v32 + 104) = *(_OWORD *)(v33 + 104);
      }
      else
      {
        *((_QWORD *)v32 + 9) = *((_QWORD *)v33 + 9);
        *((_QWORD *)v32 + 10) = v104;
        v246 = *((_QWORD *)v33 + 12);
        *((_QWORD *)v32 + 11) = *((_QWORD *)v33 + 11);
        *((_QWORD *)v32 + 12) = v246;
        v248 = (void *)*((_QWORD *)v33 + 13);
        v247 = *((_QWORD *)v33 + 14);
        *((_QWORD *)v32 + 13) = v248;
        *((_QWORD *)v32 + 14) = v247;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v249 = v248;
      }
      v250 = v33 + 120;
      v251 = *((_QWORD *)v33 + 16);
      if (v251 >= 0x11)
      {
        *((_QWORD *)v32 + 15) = *v250;
        *((_QWORD *)v32 + 16) = v251;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 120) = *(_OWORD *)v250;
      }
      v233 = v33 + 144;
      v260 = (void *)*((_QWORD *)v33 + 18);
      v32[136] = v33[136];
      if (!v260)
      {
        v232 = v32 + 144;
        v289 = *((_OWORD *)v33 + 16);
        *((_OWORD *)v32 + 15) = *((_OWORD *)v33 + 15);
        *((_OWORD *)v32 + 16) = v289;
        *(_OWORD *)(v32 + 265) = *(_OWORD *)(v33 + 265);
        v290 = *((_OWORD *)v33 + 12);
        *((_OWORD *)v32 + 11) = *((_OWORD *)v33 + 11);
        *((_OWORD *)v32 + 12) = v290;
        v291 = *((_OWORD *)v33 + 14);
        *((_OWORD *)v32 + 13) = *((_OWORD *)v33 + 13);
        *((_OWORD *)v32 + 14) = v291;
        goto LABEL_124;
      }
      v261 = *((_QWORD *)v33 + 19);
      v262 = *((_QWORD *)v33 + 20);
      *((_QWORD *)v32 + 18) = v260;
      *((_QWORD *)v32 + 19) = v261;
      *((_QWORD *)v32 + 20) = v262;
      *((_WORD *)v32 + 84) = *((_WORD *)v33 + 84);
      *((_QWORD *)v32 + 22) = *((_QWORD *)v33 + 22);
      v32[184] = v33[184];
      v263 = (void *)*((_QWORD *)v33 + 25);
      *((_QWORD *)v32 + 24) = *((_QWORD *)v33 + 24);
      *((_QWORD *)v32 + 25) = v263;
      v32[208] = v33[208];
      v264 = *((_QWORD *)v33 + 28);
      v265 = v260;
      swift_bridgeObjectRetain();
      v266 = v263;
      if (v264 == 1)
      {
        v267 = *(_OWORD *)(v33 + 232);
        *(_OWORD *)(v32 + 216) = *(_OWORD *)(v33 + 216);
        *(_OWORD *)(v32 + 232) = v267;
        *(_OWORD *)(v32 + 248) = *(_OWORD *)(v33 + 248);
      }
      else
      {
        *((_QWORD *)v32 + 27) = *((_QWORD *)v33 + 27);
        *((_QWORD *)v32 + 28) = v264;
        v293 = *((_QWORD *)v33 + 30);
        *((_QWORD *)v32 + 29) = *((_QWORD *)v33 + 29);
        *((_QWORD *)v32 + 30) = v293;
        v295 = (void *)*((_QWORD *)v33 + 31);
        v294 = *((_QWORD *)v33 + 32);
        *((_QWORD *)v32 + 31) = v295;
        *((_QWORD *)v32 + 32) = v294;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v296 = v295;
      }
      v297 = v33 + 264;
      v298 = *((_QWORD *)v33 + 34);
      if (v298 >= 0x11)
      {
        *((_QWORD *)v32 + 33) = *v297;
        *((_QWORD *)v32 + 34) = v298;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 264) = *(_OWORD *)v297;
      }
      v32[280] = v33[280];
LABEL_139:
      v32[281] = v100;
LABEL_140:
      swift_storeEnumTagMultiPayload();
LABEL_141:
      swift_storeEnumTagMultiPayload();
      return v32;
    case 7u:
      v108 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v108;
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      v32[24] = v33[24];
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      v32[40] = v33[40];
      v109 = *((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 6) = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 7) = v109;
      v110 = *((_QWORD *)v33 + 9);
      *((_QWORD *)v32 + 8) = *((_QWORD *)v33 + 8);
      *((_QWORD *)v32 + 9) = v110;
      v111 = *((_QWORD *)v33 + 11);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v111 == 1)
      {
        v112 = *((_OWORD *)v33 + 8);
        *((_OWORD *)v32 + 7) = *((_OWORD *)v33 + 7);
        *((_OWORD *)v32 + 8) = v112;
        v32[144] = v33[144];
        v113 = *((_OWORD *)v33 + 6);
        *((_OWORD *)v32 + 5) = *((_OWORD *)v33 + 5);
        *((_OWORD *)v32 + 6) = v113;
      }
      else
      {
        *((_QWORD *)v32 + 10) = *((_QWORD *)v33 + 10);
        *((_QWORD *)v32 + 11) = v111;
        v162 = *((_QWORD *)v33 + 15);
        swift_bridgeObjectRetain();
        if (v162)
        {
          v163 = *((_QWORD *)v33 + 16);
          *((_QWORD *)v32 + 15) = v162;
          *((_QWORD *)v32 + 16) = v163;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v162 - 8))((uint64_t)(v32 + 96), (uint64_t)(v33 + 96), v162);
          *((_QWORD *)v32 + 17) = *((_QWORD *)v33 + 17);
        }
        else
        {
          v245 = *((_OWORD *)v33 + 7);
          *((_OWORD *)v32 + 6) = *((_OWORD *)v33 + 6);
          *((_OWORD *)v32 + 7) = v245;
          *((_OWORD *)v32 + 8) = *((_OWORD *)v33 + 8);
        }
        v32[144] = v33[144];
      }
      goto LABEL_140;
    case 8u:
      v114 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v114;
      v115 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v116 = &v32[v115];
      v117 = &v33[v115];
      v118 = *(_QWORD *)&v33[v115 + 8];
      *(_QWORD *)v116 = *(_QWORD *)&v33[v115];
      *((_QWORD *)v116 + 1) = v118;
      v119 = *(_QWORD *)&v33[v115 + 24];
      *((_QWORD *)v116 + 2) = *(_QWORD *)&v33[v115 + 16];
      *((_QWORD *)v116 + 3) = v119;
      v120 = type metadata accessor for FormatCustomItem.Resolved();
      v121 = *(int *)(v120 + 24);
      v331 = &v116[v121];
      v335 = v120;
      v122 = &v117[v121];
      v123 = type metadata accessor for FormatCustomItem.Action();
      v328 = *(_QWORD *)(v123 - 8);
      v124 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v328 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v124(v122, 1, v123))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v331, v122, *(_QWORD *)(*(_QWORD *)(v125 - 8) + 64));
      }
      else
      {
        v215 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v215 - 8) + 16))(v331, v122, v215);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v328 + 56))(v331, 0, 1, v123);
      }
      *(_QWORD *)&v116[*(int *)(v335 + 28)] = *(_QWORD *)&v117[*(int *)(v335 + 28)];
      swift_bridgeObjectRetain();
      goto LABEL_140;
    case 9u:
      v56 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v56;
      v57 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_QWORD *)v32 + 3) = v57;
      v58 = *((_QWORD *)v33 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v58)
      {
        v59 = *((_QWORD *)v33 + 8);
        *((_QWORD *)v32 + 7) = v58;
        *((_QWORD *)v32 + 8) = v59;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v58 - 8))((uint64_t)(v32 + 32), (uint64_t)(v33 + 32), v58);
      }
      else
      {
        v172 = *((_OWORD *)v33 + 3);
        *((_OWORD *)v32 + 2) = *((_OWORD *)v33 + 2);
        *((_OWORD *)v32 + 3) = v172;
        *((_QWORD *)v32 + 8) = *((_QWORD *)v33 + 8);
      }
      v173 = v32 + 72;
      v174 = v33 + 72;
      v175 = *((_QWORD *)v33 + 12);
      if (v175)
      {
        v176 = *((_QWORD *)v33 + 13);
        *((_QWORD *)v32 + 12) = v175;
        *((_QWORD *)v32 + 13) = v176;
        (**(void (***)(_OWORD *, _OWORD *))(v175 - 8))(v173, v174);
      }
      else
      {
        v185 = *(_OWORD *)(v33 + 88);
        *v173 = *v174;
        *(_OWORD *)(v32 + 88) = v185;
        *((_QWORD *)v32 + 13) = *((_QWORD *)v33 + 13);
      }
      v186 = v32 + 112;
      v187 = v33 + 112;
      v188 = *((_QWORD *)v33 + 17);
      if (v188)
      {
        v189 = *((_QWORD *)v33 + 18);
        *((_QWORD *)v32 + 17) = v188;
        *((_QWORD *)v32 + 18) = v189;
        (**(void (***)(_OWORD *, _OWORD *))(v188 - 8))(v186, v187);
      }
      else
      {
        v202 = *((_OWORD *)v33 + 8);
        *v186 = *v187;
        *((_OWORD *)v32 + 8) = v202;
        *((_QWORD *)v32 + 18) = *((_QWORD *)v33 + 18);
      }
      goto LABEL_140;
    case 0xAu:
      v126 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v126;
      v127 = (int *)type metadata accessor for FeedEngagementBanner();
      v128 = v127[5];
      v129 = &v32[v128];
      v130 = &v33[v128];
      v131 = sub_1BB86EDAC();
      v132 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v131 - 8) + 16);
      swift_bridgeObjectRetain();
      v132(v129, v130, v131);
      *(_QWORD *)&v32[v127[6]] = *(_QWORD *)&v33[v127[6]];
      v133 = v127[7];
      v134 = &v32[v133];
      v135 = &v33[v133];
      *(_QWORD *)v134 = *(_QWORD *)v135;
      v134[8] = v135[8];
      v136 = v127[8];
      v50 = &v32[v136];
      v51 = &v33[v136];
      v52 = *((_QWORD *)v51 + 1);
      if (v52 >= 0x11)
      {
LABEL_37:
        *(_QWORD *)v50 = *(_QWORD *)v51;
        *((_QWORD *)v50 + 1) = v52;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)v50 = *(_OWORD *)v51;
      }
      goto LABEL_140;
    case 0xBu:
      *(_QWORD *)v32 = *(_QWORD *)v33;
      swift_retain();
      goto LABEL_140;
    case 0xCu:
      v60 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v60;
      v61 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_QWORD *)v32 + 3) = v61;
      v32[32] = v33[32];
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_140;
    case 0xDu:
      v137 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v137;
      v32[16] = v33[16];
      v138 = v33 + 24;
      v139 = *((_QWORD *)v33 + 4);
      if (v139 >= 0x11)
      {
        *((_QWORD *)v32 + 3) = *v138;
        *((_QWORD *)v32 + 4) = v139;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 24) = *(_OWORD *)v138;
      }
      v164 = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 6) = v164;
      v165 = (void *)*((_QWORD *)v33 + 8);
      *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
      *((_QWORD *)v32 + 8) = v165;
      v32[72] = v33[72];
      *((_QWORD *)v32 + 10) = *((_QWORD *)v33 + 10);
      v166 = *((_QWORD *)v33 + 14);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v167 = v165;
      swift_bridgeObjectRetain();
      if (v166)
      {
        v168 = *((_QWORD *)v33 + 15);
        *((_QWORD *)v32 + 14) = v166;
        *((_QWORD *)v32 + 15) = v168;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v166 - 8))((uint64_t)(v32 + 88), (uint64_t)(v33 + 88), v166);
      }
      else
      {
        v216 = *(_OWORD *)(v33 + 104);
        *(_OWORD *)(v32 + 88) = *(_OWORD *)(v33 + 88);
        *(_OWORD *)(v32 + 104) = v216;
        *((_QWORD *)v32 + 15) = *((_QWORD *)v33 + 15);
      }
      v217 = v32 + 128;
      v218 = v33 + 128;
      v219 = *((_QWORD *)v33 + 19);
      if (v219)
      {
        v220 = *((_QWORD *)v33 + 20);
        *((_QWORD *)v32 + 19) = v219;
        *((_QWORD *)v32 + 20) = v220;
        (**(void (***)(_OWORD *, _OWORD *))(v219 - 8))(v217, v218);
      }
      else
      {
        v227 = *((_OWORD *)v33 + 9);
        *v217 = *v218;
        *((_OWORD *)v32 + 9) = v227;
        *((_QWORD *)v32 + 20) = *((_QWORD *)v33 + 20);
      }
      goto LABEL_140;
    case 0xEu:
      v62 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v62;
      v32[16] = v33[16];
      v63 = v33 + 24;
      v64 = *((_QWORD *)v33 + 4);
      if (v64 >= 0x11)
      {
        *((_QWORD *)v32 + 3) = *v63;
        *((_QWORD *)v32 + 4) = v64;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 24) = *(_OWORD *)v63;
      }
      v155 = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 6) = v155;
      *((_QWORD *)v32 + 7) = *((_QWORD *)v33 + 7);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      goto LABEL_140;
    case 0xFu:
      v140 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v140;
      v32[16] = v33[16];
      v141 = v33 + 24;
      v142 = *((_QWORD *)v33 + 4);
      if (v142 >= 0x11)
      {
        *((_QWORD *)v32 + 3) = *v141;
        *((_QWORD *)v32 + 4) = v142;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 24) = *(_OWORD *)v141;
      }
      v169 = *((_QWORD *)v33 + 6);
      *((_QWORD *)v32 + 5) = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 6) = v169;
      v170 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&v32[v170] = *(_QWORD *)&v33[v170];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      v171 = (char *)&loc_1BAF29508 + 4 * word_1BB8D3DEE[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x10u:
      v65 = *((_QWORD *)v33 + 1);
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = v65;
      v66 = *((_QWORD *)v33 + 3);
      *((_QWORD *)v32 + 2) = *((_QWORD *)v33 + 2);
      *((_QWORD *)v32 + 3) = v66;
      v67 = *((_QWORD *)v33 + 5);
      *((_QWORD *)v32 + 4) = *((_QWORD *)v33 + 4);
      *((_QWORD *)v32 + 5) = v67;
      *((_WORD *)v32 + 24) = *((_WORD *)v33 + 24);
      *(_OWORD *)(v32 + 56) = *(_OWORD *)(v33 + 56);
      v68 = *((_QWORD *)v33 + 10);
      *((_QWORD *)v32 + 9) = *((_QWORD *)v33 + 9);
      *((_QWORD *)v32 + 10) = v68;
      v69 = *((_QWORD *)v33 + 12);
      *((_QWORD *)v32 + 11) = *((_QWORD *)v33 + 11);
      *((_QWORD *)v32 + 12) = v69;
      *((_QWORD *)v32 + 13) = *((_QWORD *)v33 + 13);
      v32[112] = v33[112];
      v70 = *((_QWORD *)v33 + 16);
      *((_QWORD *)v32 + 15) = *((_QWORD *)v33 + 15);
      *((_QWORD *)v32 + 16) = v70;
      v32[136] = v33[136];
      v71 = *((_QWORD *)v33 + 19);
      *((_QWORD *)v32 + 18) = *((_QWORD *)v33 + 18);
      *((_QWORD *)v32 + 19) = v71;
      v72 = *((_QWORD *)v33 + 21);
      *((_QWORD *)v32 + 20) = *((_QWORD *)v33 + 20);
      *((_QWORD *)v32 + 21) = v72;
      v32[184] = v33[184];
      *((_QWORD *)v32 + 22) = *((_QWORD *)v33 + 22);
      v73 = *((_QWORD *)v33 + 25);
      *((_QWORD *)v32 + 24) = *((_QWORD *)v33 + 24);
      *((_QWORD *)v32 + 25) = v73;
      v32[224] = v33[224];
      v74 = *((_QWORD *)v33 + 27);
      *((_QWORD *)v32 + 26) = *((_QWORD *)v33 + 26);
      *((_QWORD *)v32 + 27) = v74;
      v327 = v33 + 232;
      v75 = *((_QWORD *)v33 + 30);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v75 >= 0x11)
      {
        *((_QWORD *)v32 + 29) = *v327;
        *((_QWORD *)v32 + 30) = v75;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v32 + 232) = *(_OWORD *)v327;
      }
      goto LABEL_140;
    default:
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      goto LABEL_141;
  }
}

uint64_t assignWithCopy for FeedItemDimmingType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1BAF2CD64(result);
    v2 = (char *)&loc_1BAF2AA5C + 4 * byte_1BB8D3DF6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_1BAF2CD64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FeedItemDimmingType();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FeedItemDimmingType()
{
  uint64_t result;

  result = qword_1ED3D2A38;
  if (!qword_1ED3D2A38)
    return swift_getSingletonMetadata();
  return result;
}

_OWORD *initializeWithTake for FeedItemDimmingType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *result;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *__dst;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  int *v110;
  int *v111;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        v7 = (int *)type metadata accessor for FeedBannerAd();
        v8 = v7[5];
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
        v12 = v7[7];
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v13[8] = v14[8];
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
        goto LABEL_42;
      case 3u:
        *a1 = *a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
        v110 = (int *)type metadata accessor for FeedHeadline(0);
        v15 = v110[10];
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        *v16 = *((_BYTE *)a2 + v15);
        v16[1] = *((_BYTE *)a2 + v15 + 1);
        v18 = (int *)type metadata accessor for FeedHeadline.State(0);
        v19 = v18[6];
        v20 = &v16[v19];
        v21 = &v17[v19];
        v22 = (int *)type metadata accessor for SharedItem();
        v23 = *((_QWORD *)v22 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
        {
          v24 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
        }
        else
        {
          v59 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v20, v21, v59);
          v20[v22[5]] = v21[v22[5]];
          *(_QWORD *)&v20[v22[6]] = *(_QWORD *)&v21[v22[6]];
          v60 = v22[7];
          v109 = &v20[v60];
          v61 = &v21[v60];
          v62 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v109, v61, v62);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
        }
        v16[v18[7]] = v17[v18[7]];
        v16[v18[8]] = v17[v18[8]];
        v16[v18[9]] = v17[v18[9]];
        v16[v18[10]] = v17[v18[10]];
        v63 = v110[11];
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = sub_1BB871B24();
        v67 = *(_QWORD *)(v66 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
        }
        *(_OWORD *)((char *)a1 + v110[12]) = *(_OWORD *)((char *)a2 + v110[12]);
        v77 = v110[13];
        v78 = *(_QWORD *)((char *)a2 + v77);
        if (v78 == 2)
          v78 = 2;
        *(_QWORD *)((char *)a1 + v77) = v78;
        *(_QWORD *)((char *)a1 + v110[14]) = *(_QWORD *)((char *)a2 + v110[14]);
        goto LABEL_42;
      case 4u:
        v25 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v25;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v26 = (int *)type metadata accessor for FeedWebEmbed();
        v27 = v26[8];
        v28 = (char *)a1 + v27;
        v29 = (char *)a2 + v27;
        v30 = sub_1BB86C67C();
        v31 = *(_QWORD *)(v30 - 8);
        v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
        v32(v28, v29, v30);
        v111 = v26;
        v33 = v26[9];
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v107 = v32;
        v108 = v30;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))((char *)a2 + v33, 1, v30))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          v32(v34, v35, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
        }
        v69 = v26;
        *(_QWORD *)((char *)a1 + v26[10]) = *(_QWORD *)((char *)a2 + v26[10]);
        *(_QWORD *)((char *)a1 + v26[11]) = *(_QWORD *)((char *)a2 + v26[11]);
        v70 = v26[12];
        v71 = (_OWORD *)((char *)a1 + v70);
        v72 = (_OWORD *)((char *)a2 + v70);
        v73 = (int *)type metadata accessor for FeedHeadline(0);
        v74 = *((_QWORD *)v73 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
        }
        else
        {
          v105 = v74;
          *v71 = *v72;
          *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
          *((_BYTE *)v71 + 24) = *((_BYTE *)v72 + 24);
          *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
          *(_OWORD *)((char *)v71 + 40) = *(_OWORD *)((char *)v72 + 40);
          *((_BYTE *)v71 + 56) = *((_BYTE *)v72 + 56);
          v79 = v73[10];
          v80 = (char *)v71 + v79;
          v81 = (char *)v72 + v79;
          *v80 = *((_BYTE *)v72 + v79);
          v80[1] = *((_BYTE *)v72 + v79 + 1);
          v104 = (int *)type metadata accessor for FeedHeadline.State(0);
          v82 = v104[6];
          __dst = &v80[v82];
          v83 = &v81[v82];
          v84 = (int *)type metadata accessor for SharedItem();
          v103 = *((_QWORD *)v84 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v103 + 48))(v83, 1, v84))
          {
            v85 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
          }
          else
          {
            v86 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(__dst, v83, v86);
            __dst[v84[5]] = v83[v84[5]];
            *(_QWORD *)&__dst[v84[6]] = *(_QWORD *)&v83[v84[6]];
            v107(&__dst[v84[7]], &v83[v84[7]], v108);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(__dst, 0, 1, v84);
          }
          v80[v104[7]] = v81[v104[7]];
          v80[v104[8]] = v81[v104[8]];
          v80[v104[9]] = v81[v104[9]];
          v80[v104[10]] = v81[v104[10]];
          v87 = v73[11];
          v88 = (char *)v71 + v87;
          v89 = (char *)v72 + v87;
          v90 = sub_1BB871B24();
          v91 = *(_QWORD *)(v90 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
          }
          v69 = v111;
          *(_OWORD *)((char *)v71 + v73[12]) = *(_OWORD *)((char *)v72 + v73[12]);
          v93 = v73[13];
          v94 = *(_QWORD *)((char *)v72 + v93);
          if (v94 == 2)
            v94 = 2;
          *(_QWORD *)((char *)v71 + v93) = v94;
          *(_QWORD *)((char *)v71 + v73[14]) = *(_QWORD *)((char *)v72 + v73[14]);
          (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v105 + 56))(v71, 0, 1, v73);
        }
        v95 = v69[13];
        v96 = (_OWORD *)((char *)a1 + v95);
        v97 = (_OWORD *)((char *)a2 + v95);
        v98 = type metadata accessor for WebEmbedDataVisualization();
        v99 = *(_QWORD *)(v98 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v96 = *v97;
            v101 = type metadata accessor for GenericDataVisualization();
            v107((char *)v96 + *(int *)(v101 + 20), (char *)v97 + *(int *)(v101 + 20), v108);
            *(_QWORD *)((char *)v96 + *(int *)(v101 + 24)) = *(_QWORD *)((char *)v97 + *(int *)(v101 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v96, v97, *(_QWORD *)(v99 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
        }
        *((_BYTE *)a1 + v69[14]) = *((_BYTE *)a2 + v69[14]);
        goto LABEL_42;
      case 8u:
        *a1 = *a2;
        v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v38 = (_OWORD *)((char *)a1 + v37);
        v39 = (char *)a2 + v37;
        v40 = *(_OWORD *)((char *)a2 + v37 + 16);
        *v38 = *(_OWORD *)((char *)a2 + v37);
        v38[1] = v40;
        v41 = type metadata accessor for FormatCustomItem.Resolved();
        v42 = *(int *)(v41 + 24);
        v43 = (char *)v38 + v42;
        v44 = &v39[v42];
        v45 = type metadata accessor for FormatCustomItem.Action();
        v46 = *(_QWORD *)(v45 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
        }
        else
        {
          v76 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v43, v44, v76);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
        }
        *(_QWORD *)((char *)v38 + *(int *)(v41 + 28)) = *(_QWORD *)&v39[*(int *)(v41 + 28)];
        goto LABEL_42;
      case 0xAu:
        *a1 = *a2;
        v48 = (int *)type metadata accessor for FeedEngagementBanner();
        v49 = v48[5];
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
        *(_QWORD *)((char *)a1 + v48[6]) = *(_QWORD *)((char *)a2 + v48[6]);
        v53 = v48[7];
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v54[8] = v55[8];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *(_OWORD *)((char *)a1 + v48[8]) = *(_OWORD *)((char *)a2 + v48[8]);
LABEL_42:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v56 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v56;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)((char *)a1 + v57) = *(_QWORD *)((char *)a2 + v57);
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v58 = (char *)&loc_1BAF2D21C + 4 * word_1BB8D3E32[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for FeedItemDimmingType(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  _BYTE *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  char *v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  _OWORD *v71;
  _OWORD *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _BYTE *v80;
  char *v81;
  uint64_t v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  _OWORD *v96;
  _OWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *result;
  uint64_t v103;
  int *v104;
  uint64_t v105;
  char *__dst;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  char *v109;
  int *v110;
  int *v111;

  if (a1 != a2)
  {
    sub_1BAF2CD64((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *a1 = *a2;
          v7 = (int *)type metadata accessor for FeedBannerAd();
          v8 = v7[5];
          v9 = (char *)a1 + v8;
          v10 = (char *)a2 + v8;
          v11 = sub_1BB8721C0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
          *(_QWORD *)((char *)a1 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
          v12 = v7[7];
          v13 = (char *)a1 + v12;
          v14 = (char *)a2 + v12;
          v13[8] = v14[8];
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)((char *)a1 + v7[8]) = *(_OWORD *)((char *)a2 + v7[8]);
          goto LABEL_43;
        case 3u:
          *a1 = *a2;
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          *((_BYTE *)a1 + 56) = *((_BYTE *)a2 + 56);
          v110 = (int *)type metadata accessor for FeedHeadline(0);
          v15 = v110[10];
          v16 = (char *)a1 + v15;
          v17 = (char *)a2 + v15;
          *v16 = *((_BYTE *)a2 + v15);
          v16[1] = *((_BYTE *)a2 + v15 + 1);
          v18 = (int *)type metadata accessor for FeedHeadline.State(0);
          v19 = v18[6];
          v20 = &v16[v19];
          v21 = &v17[v19];
          v22 = (int *)type metadata accessor for SharedItem();
          v23 = *((_QWORD *)v22 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v23 + 48))(v21, 1, v22))
          {
            v24 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          }
          else
          {
            v59 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v20, v21, v59);
            v20[v22[5]] = v21[v22[5]];
            *(_QWORD *)&v20[v22[6]] = *(_QWORD *)&v21[v22[6]];
            v60 = v22[7];
            v109 = &v20[v60];
            v61 = &v21[v60];
            v62 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 32))(v109, v61, v62);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56))(v20, 0, 1, v22);
          }
          v16[v18[7]] = v17[v18[7]];
          v16[v18[8]] = v17[v18[8]];
          v16[v18[9]] = v17[v18[9]];
          v16[v18[10]] = v17[v18[10]];
          v63 = v110[11];
          v64 = (char *)a1 + v63;
          v65 = (char *)a2 + v63;
          v66 = sub_1BB871B24();
          v67 = *(_QWORD *)(v66 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v64, v65, v66);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
          }
          *(_OWORD *)((char *)a1 + v110[12]) = *(_OWORD *)((char *)a2 + v110[12]);
          v77 = v110[13];
          v78 = *(_QWORD *)((char *)a2 + v77);
          if (v78 == 2)
            v78 = 2;
          *(_QWORD *)((char *)a1 + v77) = v78;
          *(_QWORD *)((char *)a1 + v110[14]) = *(_QWORD *)((char *)a2 + v110[14]);
          goto LABEL_43;
        case 4u:
          v25 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v25;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          v26 = (int *)type metadata accessor for FeedWebEmbed();
          v27 = v26[8];
          v28 = (char *)a1 + v27;
          v29 = (char *)a2 + v27;
          v30 = sub_1BB86C67C();
          v31 = *(_QWORD *)(v30 - 8);
          v32 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
          v32(v28, v29, v30);
          v111 = v26;
          v33 = v26[9];
          v34 = (char *)a1 + v33;
          v35 = (char *)a2 + v33;
          v107 = v32;
          v108 = v30;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))((char *)a2 + v33, 1, v30))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            v32(v34, v35, v30);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v34, 0, 1, v30);
          }
          v69 = v26;
          *(_QWORD *)((char *)a1 + v26[10]) = *(_QWORD *)((char *)a2 + v26[10]);
          *(_QWORD *)((char *)a1 + v26[11]) = *(_QWORD *)((char *)a2 + v26[11]);
          v70 = v26[12];
          v71 = (_OWORD *)((char *)a1 + v70);
          v72 = (_OWORD *)((char *)a2 + v70);
          v73 = (int *)type metadata accessor for FeedHeadline(0);
          v74 = *((_QWORD *)v73 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
          }
          else
          {
            v105 = v74;
            *v71 = *v72;
            *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
            *((_BYTE *)v71 + 24) = *((_BYTE *)v72 + 24);
            *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
            *(_OWORD *)((char *)v71 + 40) = *(_OWORD *)((char *)v72 + 40);
            *((_BYTE *)v71 + 56) = *((_BYTE *)v72 + 56);
            v79 = v73[10];
            v80 = (char *)v71 + v79;
            v81 = (char *)v72 + v79;
            *v80 = *((_BYTE *)v72 + v79);
            v80[1] = *((_BYTE *)v72 + v79 + 1);
            v104 = (int *)type metadata accessor for FeedHeadline.State(0);
            v82 = v104[6];
            __dst = &v80[v82];
            v83 = &v81[v82];
            v84 = (int *)type metadata accessor for SharedItem();
            v103 = *((_QWORD *)v84 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v103 + 48))(v83, 1, v84))
            {
              v85 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
            }
            else
            {
              v86 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v86 - 8) + 32))(__dst, v83, v86);
              __dst[v84[5]] = v83[v84[5]];
              *(_QWORD *)&__dst[v84[6]] = *(_QWORD *)&v83[v84[6]];
              v107(&__dst[v84[7]], &v83[v84[7]], v108);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v103 + 56))(__dst, 0, 1, v84);
            }
            v80[v104[7]] = v81[v104[7]];
            v80[v104[8]] = v81[v104[8]];
            v80[v104[9]] = v81[v104[9]];
            v80[v104[10]] = v81[v104[10]];
            v87 = v73[11];
            v88 = (char *)v71 + v87;
            v89 = (char *)v72 + v87;
            v90 = sub_1BB871B24();
            v91 = *(_QWORD *)(v90 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v92 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v91 + 32))(v88, v89, v90);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
            }
            v69 = v111;
            *(_OWORD *)((char *)v71 + v73[12]) = *(_OWORD *)((char *)v72 + v73[12]);
            v93 = v73[13];
            v94 = *(_QWORD *)((char *)v72 + v93);
            if (v94 == 2)
              v94 = 2;
            *(_QWORD *)((char *)v71 + v93) = v94;
            *(_QWORD *)((char *)v71 + v73[14]) = *(_QWORD *)((char *)v72 + v73[14]);
            (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v105 + 56))(v71, 0, 1, v73);
          }
          v95 = v69[13];
          v96 = (_OWORD *)((char *)a1 + v95);
          v97 = (_OWORD *)((char *)a2 + v95);
          v98 = type metadata accessor for WebEmbedDataVisualization();
          v99 = *(_QWORD *)(v98 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *v96 = *v97;
              v101 = type metadata accessor for GenericDataVisualization();
              v107((char *)v96 + *(int *)(v101 + 20), (char *)v97 + *(int *)(v101 + 20), v108);
              *(_QWORD *)((char *)v96 + *(int *)(v101 + 24)) = *(_QWORD *)((char *)v97 + *(int *)(v101 + 24));
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v96, v97, *(_QWORD *)(v99 + 64));
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v96, 0, 1, v98);
          }
          *((_BYTE *)a1 + v69[14]) = *((_BYTE *)a2 + v69[14]);
          goto LABEL_43;
        case 8u:
          *a1 = *a2;
          v37 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v38 = (_OWORD *)((char *)a1 + v37);
          v39 = (char *)a2 + v37;
          v40 = *(_OWORD *)((char *)a2 + v37 + 16);
          *v38 = *(_OWORD *)((char *)a2 + v37);
          v38[1] = v40;
          v41 = type metadata accessor for FormatCustomItem.Resolved();
          v42 = *(int *)(v41 + 24);
          v43 = (char *)v38 + v42;
          v44 = &v39[v42];
          v45 = type metadata accessor for FormatCustomItem.Action();
          v46 = *(_QWORD *)(v45 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
          }
          else
          {
            v76 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v43, v44, v76);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
          }
          *(_QWORD *)((char *)v38 + *(int *)(v41 + 28)) = *(_QWORD *)&v39[*(int *)(v41 + 28)];
          goto LABEL_43;
        case 0xAu:
          *a1 = *a2;
          v48 = (int *)type metadata accessor for FeedEngagementBanner();
          v49 = v48[5];
          v50 = (char *)a1 + v49;
          v51 = (char *)a2 + v49;
          v52 = sub_1BB86EDAC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v50, v51, v52);
          *(_QWORD *)((char *)a1 + v48[6]) = *(_QWORD *)((char *)a2 + v48[6]);
          v53 = v48[7];
          v54 = (char *)a1 + v53;
          v55 = (char *)a2 + v53;
          v54[8] = v55[8];
          *(_QWORD *)v54 = *(_QWORD *)v55;
          *(_OWORD *)((char *)a1 + v48[8]) = *(_OWORD *)((char *)a2 + v48[8]);
LABEL_43:
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
          v56 = *((_QWORD *)a2 + 1);
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = v56;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
          *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
          v57 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)((char *)a1 + v57) = *(_QWORD *)((char *)a2 + v57);
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v58 = (char *)&loc_1BAF2E53C + 4 * word_1BB8D3E48[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAF2F40C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FeedItem(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for NoopFeedItemDimmingEvaluator()
{
  return objc_opt_self();
}

__n128 FormatAssetHandleProvider.focalFrame.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

uint64_t FormatAssetHandleProvider.requestData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  uint64_t v4;
  char v5;

  v2 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 64);
  v3 = *(_OWORD *)(v1 + 96);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 80);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 56) = v3;
  *(_QWORD *)(a1 + 72) = v4;
  *(_BYTE *)(a1 + 80) = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF2F4F0@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_1BA4C010C(a1, a2);
}

uint64_t FormatAssetHandle.assetDataProvider.getter()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86FA60();
}

id FormatAssetHandle.fallbackImage.getter()
{
  uint64_t v0;
  id v1;
  void *v2;
  id v3;
  void *v4;
  _QWORD v6[3];
  void *v7;

  sub_1BA7280B0(v0 + 40, (uint64_t)v6);
  v1 = v7;
  if (v7)
  {
    __swift_project_boxed_opaque_existential_1(v6, (uint64_t)v7);
    sub_1BB86FA78();
    v1 = v2;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    if (v1)
    {
      v3 = objc_allocWithZone(MEMORY[0x1E0DC3870]);
      v4 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v1 = objc_msgSend(v3, sel_initWithContentsOfFile_, v4);

    }
  }
  else
  {
    sub_1BA728544((uint64_t)v6);
  }
  return v1;
}

uint64_t FormatAssetHandle.uniqueKey.getter()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86FA84();
}

uint64_t FormatAssetHandle.download(withGroup:)()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86FA6C();
}

uint64_t sub_1BAF2F694()
{
  _QWORD *v0;

  __swift_project_boxed_opaque_existential_1(v0, v0[3]);
  return sub_1BB86FA6C();
}

ValueMetadata *type metadata accessor for FormatImage()
{
  return &type metadata for FormatImage;
}

uint64_t destroy for FormatAssetHandleProvider()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for FormatAssetHandleProvider(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v5 = *(_OWORD *)(a2 + 88);
  v6 = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v6;
  *(_OWORD *)(a1 + 88) = v5;
  v7 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatAssetHandleProvider(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v4 = *a2;
  v5 = a2[1];
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
  *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *((_QWORD *)a2 + 7);
  *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
  *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
  *(_QWORD *)(a1 + 80) = *((_QWORD *)a2 + 10);
  v6 = *(__int128 *)((char *)a2 + 88);
  v7 = *(__int128 *)((char *)a2 + 104);
  *(_BYTE *)(a1 + 120) = *((_BYTE *)a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  *(_OWORD *)(a1 + 88) = v6;
  v8 = *((_QWORD *)a2 + 17);
  *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
  *(_QWORD *)(a1 + 136) = v8;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for FormatAssetHandleProvider(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAssetHandleProvider(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 144))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 128);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatAssetHandleProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 144) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 128) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 144) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAssetHandleProvider()
{
  return &type metadata for FormatAssetHandleProvider;
}

uint64_t assignWithCopy for FormatAssetHandle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 64);
  if (!*(_QWORD *)(a1 + 64))
  {
    if (v4)
    {
      *(_QWORD *)(a1 + 64) = v4;
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 40, a2 + 40);
      return a1;
    }
LABEL_7:
    v5 = *(_OWORD *)(a2 + 40);
    v6 = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 40) = v5;
    *(_OWORD *)(a1 + 56) = v6;
    return a1;
  }
  if (!v4)
  {
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
    goto LABEL_7;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t assignWithTake for FormatAssetHandle(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 64))
    __swift_destroy_boxed_opaque_existential_1(a1 + 40);
  v5 = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAssetHandle()
{
  return &type metadata for FormatAssetHandle;
}

uint64_t SportsTaxonomyGraphSectionNode.parents.getter()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain_n();
    result = sub_1BB873F30();
    v2 = result;
    if (result)
      goto LABEL_3;
LABEL_26:
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_27:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain_n();
  if (!v2)
    goto LABEL_26;
LABEL_3:
  if (v2 >= 1)
  {
    v4 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (1)
    {
      if ((v1 & 0xC000000000000001) != 0)
      {
        v6 = MEMORY[0x1BCCE4630](v4, v1);
      }
      else
      {
        v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
        swift_retain();
      }
      if (MEMORY[0x1BCCE5D40](*(_QWORD *)(v6 + 16) + 16))
      {
        type metadata accessor for SportsTaxonomyGraphRootNode();
        swift_unknownObjectRetain();
        v7 = swift_dynamicCastClass();
        if (v7)
        {
          v8 = v7;
          swift_unknownObjectRelease();
          v9 = swift_allocObject();
          *(_QWORD *)(v9 + 16) = v8;
          swift_release();
LABEL_19:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v5 = sub_1BB38CBD4(0, v5[2] + 1, 1, v5);
          v19 = v5[2];
          v18 = v5[3];
          if (v19 >= v18 >> 1)
            v5 = sub_1BB38CBD4((_QWORD *)(v18 > 1), v19 + 1, 1, v5);
          v5[2] = v19 + 1;
          v5[v19 + 4] = v9;
          goto LABEL_6;
        }
        type metadata accessor for SportsTaxonomyGraphEntityNode();
        v10 = swift_dynamicCastClass();
        if (v10)
        {
          v11 = v10;
          swift_unknownObjectRelease();
          v12 = swift_allocObject();
          *(_QWORD *)(v12 + 16) = v11;
          swift_release();
          v9 = v12 | 0x8000000000000000;
          goto LABEL_19;
        }
        type metadata accessor for SportsTaxonomyGraphLeafEntityNode();
        v13 = swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (v13)
        {
          v14 = swift_allocObject();
          *(_QWORD *)(v14 + 16) = v13;
          swift_release();
          v9 = v14 | 0x4000000000000000;
          goto LABEL_19;
        }
        v15 = swift_dynamicCastClass();
        if (v15)
        {
          v16 = v15;
          v17 = swift_allocObject();
          *(_QWORD *)(v17 + 16) = v16;
          swift_release();
          v9 = v17 | 0xC000000000000000;
          goto LABEL_19;
        }
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
LABEL_6:
      if (v2 == ++v4)
        goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAF2FD48()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t SportsTaxonomyGraphSectionNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t SportsTaxonomyGraphSectionNode.isHidden.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t SportsTaxonomyGraphSectionNode.isChildrenOrderCurated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t SportsTaxonomyGraphSectionNode.header.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BAF2FE98(v2, v3);
}

__n128 SportsTaxonomyGraphSectionNode.__allocating_init(header:isHidden:isChildrenOrderCurated:)(__n128 *a1, char a2, char a3)
{
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v6 = swift_allocObject();
  v7 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 40) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 48) = v7;
  *(_BYTE *)(v6 + 16) = a2;
  result = *a1;
  *(__n128 *)(v6 + 24) = *a1;
  *(_BYTE *)(v6 + 17) = a3;
  return result;
}

uint64_t SportsTaxonomyGraphSectionNode.init(header:isHidden:isChildrenOrderCurated:)(_OWORD *a1, char a2, char a3)
{
  uint64_t v3;
  uint64_t v4;

  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 40) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 48) = v4;
  *(_BYTE *)(v3 + 16) = a2;
  *(_OWORD *)(v3 + 24) = *a1;
  *(_BYTE *)(v3 + 17) = a3;
  return v3;
}

uint64_t SportsTaxonomyGraphSectionNode.deinit()
{
  uint64_t v0;

  sub_1BAF2FEA8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SportsTaxonomyGraphSectionNode.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BAF2FEA8(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF2FE98(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_1BA6EA1F0(a1, a2);
  return a1;
}

uint64_t sub_1BAF2FEA8(uint64_t a1, uint64_t a2)
{
  if (a2 != 2)
    return sub_1BA6E3730(a1, a2);
  return a1;
}

uint64_t type metadata accessor for SportsTaxonomyGraphSectionNode()
{
  return objc_opt_self();
}

uint64_t method lookup function for SportsTaxonomyGraphSectionNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SportsTaxonomyGraphSectionNode.__allocating_init(header:isHidden:isChildrenOrderCurated:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

_QWORD *sub_1BAF2FEEC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(char *, uint64_t, uint64_t);
  int v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  void (*v34)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unsigned int v38;
  char *v39;
  uint64_t v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  unsigned int v58;
  uint64_t v59;
  char v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  _QWORD *v67;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t inited;
  uint64_t v76;
  uint64_t v77;
  _OWORD v78[2];
  uint64_t v79;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v74 = (uint64_t)&v69 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v71 = (char *)&v69 - v5;
  MEMORY[0x1E0C80A78](v6);
  v70 = (uint64_t)&v69 - v7;
  MEMORY[0x1E0C80A78](v8);
  v69 = (uint64_t)&v69 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v69 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v69 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v69 - v17;
  v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v19);
  sub_1BA8C88C8(0);
  v73 = v20;
  v21 = *(_QWORD *)(v20 - 8);
  v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  v76 = *(_QWORD *)(v21 + 72);
  v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1BB8832C0;
  v72 = v23;
  v24 = (char *)(v23 + v22);
  v25 = a1;
  sub_1BAF3067C(a1, (uint64_t)v18);
  v26 = sub_1BB86FBD4();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48);
  v29 = v28(v18, 1, v26);
  v77 = v27;
  if (v29 == 1)
  {
    sub_1BAF306D8((uint64_t)v18);
    v30 = 0;
    v31 = 1;
  }
  else
  {
    v30 = sub_1BB86FBBC();
    v31 = v32 & 1;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v26);
  }
  sub_1BAAF9DE0(0x6E6F697461727544, 0xE800000000000000, v30, v31, v24);
  v33 = type metadata accessor for FormatInspectionItem(0);
  v34 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
  v34(v24, 0, 1, v33);
  sub_1BAF3067C(v25, (uint64_t)v15);
  if (v28(v15, 1, v26) == 1)
  {
    sub_1BAF306D8((uint64_t)v15);
    v35 = 0;
    LOBYTE(v36) = 1;
  }
  else
  {
    v37 = sub_1BB86FBA4();
    v38 = v37;
    v36 = HIDWORD(v37) & 1;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v15, v26);
    v35 = v38;
  }
  v39 = &v24[v76];
  LOBYTE(v78[0]) = v36;
  sub_1BAAFA30C(0x6465657053, 0xE500000000000000, v35 | ((unint64_t)v36 << 32), &v24[v76]);
  v34(v39, 0, 1, v33);
  sub_1BAF3067C(v25, (uint64_t)v12);
  if (v28(v12, 1, v26) == 1)
  {
    sub_1BAF306D8((uint64_t)v12);
    v40 = 0;
    v41 = 1;
  }
  else
  {
    v40 = sub_1BB86FB74();
    v41 = v42 & 1;
    (*(void (**)(char *, uint64_t))(v77 + 8))(v12, v26);
  }
  v43 = v76;
  sub_1BAAF9DE0(0x66664F20656D6954, 0xEB00000000746573, v40, v41, &v24[2 * v76]);
  v34(&v24[2 * v43], 0, 1, v33);
  v44 = v25;
  v45 = v25;
  v46 = v69;
  sub_1BAF3067C(v45, v69);
  if (v28((char *)v46, 1, v26) == 1)
  {
    sub_1BAF306D8(v46);
    v47 = 0;
  }
  else
  {
    v47 = (void *)sub_1BB86FBC8();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v46, v26);
  }
  v48 = (uint64_t)v71;
  sub_1BAAFC004(0x646F4D206C6C6946, 0xE900000000000065, v47, &v24[3 * v43]);
  v34(&v24[3 * v43], 0, 1, v33);
  v49 = v70;
  sub_1BAF3067C(v44, v70);
  if (v28((char *)v49, 1, v26) == 1)
  {
    sub_1BAF306D8(v49);
    v50 = 0;
    LOBYTE(v51) = 1;
  }
  else
  {
    v52 = sub_1BB86FB80();
    v71 = (char *)v44;
    v53 = v43;
    v54 = v33;
    v55 = v24;
    v56 = v34;
    v57 = v28;
    v58 = v52;
    v51 = HIDWORD(v52) & 1;
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v49, v26);
    v50 = v58;
    v28 = v57;
    v34 = v56;
    v24 = v55;
    v33 = v54;
    v43 = v53;
    v44 = (uint64_t)v71;
  }
  LOBYTE(v78[0]) = v51;
  sub_1BAAFA30C(0x4320746165706552, 0xEC000000746E756FLL, v50 | ((unint64_t)v51 << 32), &v24[4 * v43]);
  v34(&v24[4 * v43], 0, 1, v33);
  sub_1BAF3067C(v44, v48);
  if (v28((char *)v48, 1, v26) == 1)
  {
    sub_1BAF306D8(v48);
    v59 = 0;
    v60 = 1;
  }
  else
  {
    v59 = sub_1BB86FB98();
    v60 = v61 & 1;
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v48, v26);
  }
  sub_1BAAF9DE0(0x4420746165706552, 0xEF6E6F6974617275, v59, v60, &v24[5 * v43]);
  v34(&v24[5 * v43], 0, 1, v33);
  v62 = v74;
  sub_1BAF3067C(v44, v74);
  if (v28((char *)v62, 1, v26) == 1)
  {
    sub_1BAF306D8(v62);
    v63 = 2;
  }
  else
  {
    v63 = sub_1BB86FB8C();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v62, v26);
  }
  sub_1BAAF6B38(0x657665726F747541, 0xEC00000073657372, v63, &v24[6 * v43]);
  v34(&v24[6 * v43], 0, 1, v33);
  sub_1BAF89090(0x695420616964654DLL, 0xEC000000676E696DLL, 0, 0, v72, v78);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v64 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v64 + 64) = &off_1E72D2F60;
  v65 = swift_allocObject();
  *(_QWORD *)(v64 + 32) = v65;
  *(_QWORD *)(v65 + 48) = v79;
  v66 = v78[1];
  *(_OWORD *)(v65 + 16) = v78[0];
  *(_OWORD *)(v65 + 32) = v66;
  v67 = sub_1BB6DF010(v64);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v67;
}

uint64_t sub_1BAF3067C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF306D8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA880, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7898], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAF3072C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatContentSubgroupFilterOnce.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static FormatContentSubgroupFilterOnce.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BAF307BC()
{
  sub_1BAF30900();
  return sub_1BB874710();
}

uint64_t sub_1BAF307E4()
{
  sub_1BAF30900();
  return sub_1BB87471C();
}

uint64_t FormatContentSubgroupFilterOnce.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BAF30A68(0, &qword_1EF2B6650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF30900();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BAF30900()
{
  unint64_t result;

  result = qword_1ED3A9138;
  if (!qword_1ED3A9138)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D41F4, &type metadata for FormatContentSubgroupFilterOnce.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9138);
  }
  return result;
}

uint64_t FormatContentSubgroupFilterOnce.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  sub_1BAF30A68(0, &qword_1ED3AB4D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF30900();
  sub_1BB87468C();
  if (!v2)
  {
    v10 = sub_1BB874098();
    v12 = v11;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v10;
    a2[1] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAF30A68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF30900();
    v7 = a3(a1, &type metadata for FormatContentSubgroupFilterOnce.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAF30AC4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAF30AF8();
  a1[2] = sub_1BAF30B3C();
  result = sub_1BAF30B80();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF30AF8()
{
  unint64_t result;

  result = qword_1ED3A9150;
  if (!qword_1ED3A9150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterOnce, &type metadata for FormatContentSubgroupFilterOnce);
    atomic_store(result, (unint64_t *)&qword_1ED3A9150);
  }
  return result;
}

unint64_t sub_1BAF30B3C()
{
  unint64_t result;

  result = qword_1EF2B6658;
  if (!qword_1EF2B6658)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterOnce, &type metadata for FormatContentSubgroupFilterOnce);
    atomic_store(result, (unint64_t *)&qword_1EF2B6658);
  }
  return result;
}

unint64_t sub_1BAF30B80()
{
  unint64_t result;

  result = qword_1EF2B6660;
  if (!qword_1EF2B6660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupFilterOnce, &type metadata for FormatContentSubgroupFilterOnce);
    atomic_store(result, (unint64_t *)&qword_1EF2B6660);
  }
  return result;
}

uint64_t sub_1BAF30BC4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatContentSubgroupFilterOnce.init(from:)(a1, a2);
}

uint64_t sub_1BAF30BD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BAF30A68(0, &qword_1EF2B6650, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF30900();
  sub_1BB8746C8();
  sub_1BB87417C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOnce()
{
  return &type metadata for FormatContentSubgroupFilterOnce;
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupFilterOnce.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF30D1C + 4 * byte_1BB8D4050[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF30D3C + 4 * byte_1BB8D4055[v4]))();
}

_BYTE *sub_1BAF30D1C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF30D3C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF30D44(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF30D4C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF30D54(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF30D5C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupFilterOnce.CodingKeys()
{
  return &type metadata for FormatContentSubgroupFilterOnce.CodingKeys;
}

unint64_t sub_1BAF30D7C()
{
  unint64_t result;

  result = qword_1EF2B6668;
  if (!qword_1EF2B6668)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D41CC, &type metadata for FormatContentSubgroupFilterOnce.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6668);
  }
  return result;
}

unint64_t sub_1BAF30DC4()
{
  unint64_t result;

  result = qword_1ED3A9148;
  if (!qword_1ED3A9148)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D413C, &type metadata for FormatContentSubgroupFilterOnce.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9148);
  }
  return result;
}

unint64_t sub_1BAF30E0C()
{
  unint64_t result;

  result = qword_1ED3A9140;
  if (!qword_1ED3A9140)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4164, &type metadata for FormatContentSubgroupFilterOnce.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9140);
  }
  return result;
}

uint64_t FormatColorNotExpression.bind(binder:context:)()
{
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  return swift_release();
}

uint64_t FormatColorNotExpression.expression.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t static FormatColorNotExpression.== infix(_:_:)(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatColorExpression.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

unint64_t sub_1BAF30EF8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF30F1C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF30F1C()
{
  unint64_t result;

  result = qword_1EF2B6670;
  if (!qword_1EF2B6670)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorNotExpression, &type metadata for FormatColorNotExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B6670);
  }
  return result;
}

uint64_t sub_1BAF30F60(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatColorExpression.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

unint64_t sub_1BAF30F94(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE89494();
  a1[2] = sub_1BAEF4B20();
  result = sub_1BAF30FC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF30FC8()
{
  unint64_t result;

  result = qword_1EF2B6678;
  if (!qword_1EF2B6678)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatColorNotExpression, &type metadata for FormatColorNotExpression);
    atomic_store(result, (unint64_t *)&qword_1EF2B6678);
  }
  return result;
}

uint64_t sub_1BAF3100C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatColorNotExpression.init(from:)(a1, a2);
}

uint64_t sub_1BAF31020(_QWORD *a1)
{
  return FormatColorNotExpression.encode(to:)(a1);
}

uint64_t sub_1BAF31034()
{
  swift_retain();
  FormatColorExpression.bindChildren(binder:context:)();
  return swift_release();
}

void sub_1BAF31098()
{
  sub_1BA756210();
}

ValueMetadata *type metadata accessor for FormatColorNotExpression()
{
  return &type metadata for FormatColorNotExpression;
}

uint64_t sub_1BAF31114(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t ObjCClassFromMetadata;
  void *v7;
  id v8;
  void *v9;
  id v10;
  _QWORD v12[2];

  v2 = sub_1BB870150();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C4B68 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v8 = objc_msgSend(v7, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A7268 != -1)
    swift_once();
  v9 = (void *)qword_1EF2C4748;
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB8530], v2);
  v12[1] = a1;
  sub_1BB86FB38();
  swift_allocObject();
  v10 = v9;
  return sub_1BB86FB20();
}

ValueMetadata *type metadata accessor for Commands.Reload()
{
  return &type metadata for Commands.Reload;
}

double FormatLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

uint64_t FormatLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatLayoutAttributes.layoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatLayoutAttributes.accessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatLayoutAttributes.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 128);
}

uint64_t FormatLayoutAttributes.__allocating_init(frame:identifier:itemIdentifier:layoutIdentifier:nodeIdentifier:layoutValues:accessibilityValues:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t result;
  char v26;

  result = swift_allocObject();
  v26 = *a15;
  *(double *)(result + 16) = a9;
  *(double *)(result + 24) = a10;
  *(double *)(result + 32) = a11;
  *(double *)(result + 40) = a12;
  *(_QWORD *)(result + 48) = a1;
  *(_QWORD *)(result + 56) = a2;
  *(_QWORD *)(result + 64) = a3;
  *(_QWORD *)(result + 72) = a4;
  *(_QWORD *)(result + 80) = a5;
  *(_QWORD *)(result + 88) = a6;
  *(_QWORD *)(result + 96) = a7;
  *(_QWORD *)(result + 104) = a8;
  *(_QWORD *)(result + 112) = a13;
  *(_QWORD *)(result + 120) = a14;
  *(_BYTE *)(result + 128) = v26;
  return result;
}

uint64_t FormatLayoutAttributes.init(frame:identifier:itemIdentifier:layoutIdentifier:nodeIdentifier:layoutValues:accessibilityValues:accessibilityRole:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t a13, uint64_t a14, char *a15)
{
  uint64_t v15;
  char v16;

  v16 = *a15;
  *(double *)(v15 + 16) = a9;
  *(double *)(v15 + 24) = a10;
  *(double *)(v15 + 32) = a11;
  *(double *)(v15 + 40) = a12;
  *(_QWORD *)(v15 + 48) = a1;
  *(_QWORD *)(v15 + 56) = a2;
  *(_QWORD *)(v15 + 64) = a3;
  *(_QWORD *)(v15 + 72) = a4;
  *(_QWORD *)(v15 + 80) = a5;
  *(_QWORD *)(v15 + 88) = a6;
  *(_QWORD *)(v15 + 96) = a7;
  *(_QWORD *)(v15 + 104) = a8;
  *(_QWORD *)(v15 + 112) = a13;
  *(_QWORD *)(v15 + 120) = a14;
  *(_BYTE *)(v15 + 128) = v16;
  return v15;
}

uint64_t sub_1BAF314C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF314F8
                                                            + 4 * asc_1BB8D4380[a1]))(0x656D617266, 0xE500000000000000);
}

uint64_t sub_1BAF314F8()
{
  return 0x696669746E656469;
}

uint64_t sub_1BAF31514()
{
  return 0x6E6564496D657469;
}

uint64_t sub_1BAF31560()
{
  return 0x615674756F79616CLL;
}

unint64_t sub_1BAF31580()
{
  return 0xD000000000000013;
}

uint64_t sub_1BAF315B8()
{
  unsigned __int8 *v0;

  return sub_1BAF314C8(*v0);
}

uint64_t sub_1BAF315C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF322FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF315E4()
{
  sub_1BAF31950();
  return sub_1BB874710();
}

uint64_t sub_1BAF3160C()
{
  sub_1BAF31950();
  return sub_1BB87471C();
}

uint64_t FormatLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  uint64_t v12;
  char v13;
  __int128 v14;
  __int128 v15;

  v3 = v1;
  sub_1BAF31F68(0, &qword_1EF2B6680, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF31950();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 32);
  v14 = *(_OWORD *)(v3 + 16);
  v15 = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_1BB87417C();
    LOBYTE(v14) = 2;
    sub_1BB87411C();
    LOBYTE(v14) = 3;
    sub_1BB87417C();
    LOBYTE(v14) = 4;
    sub_1BB87417C();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 112);
    v13 = 5;
    sub_1BAF31994();
    sub_1BAF31FC4(&qword_1EF2B6690, (uint64_t (*)(void))sub_1BA831644, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    *(_QWORD *)&v14 = *(_QWORD *)(v3 + 120);
    v13 = 6;
    sub_1BAF319E8();
    sub_1BAF31A3C(&qword_1EF2B6698, &qword_1ED3CCD98, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    LOBYTE(v14) = *(_BYTE *)(v3 + 128);
    v13 = 7;
    sub_1BA78508C();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BAF31950()
{
  unint64_t result;

  result = qword_1EF2B6688;
  if (!qword_1EF2B6688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D45CC, &type metadata for FormatLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6688);
  }
  return result;
}

void sub_1BAF31994()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39D9B0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39D9B0);
  }
}

void sub_1BAF319E8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3CF818)
  {
    type metadata accessor for FormatAccessibilityLayoutValue();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3CF818);
  }
}

uint64_t sub_1BAF31A3C(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = *a1;
  if (!result)
  {
    sub_1BAF319E8();
    v10 = v9;
    v11 = sub_1BA50AD30(a2, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatAccessibilityLayoutValue, a3);
    result = MEMORY[0x1BCCE5B24](a4, v10, &v11);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t FormatLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  __int128 v18;
  __int128 v19;
  char v20;

  sub_1BAF31F68(0, &qword_1EF2B66A0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v16 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF31950();
  v17 = v7;
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    v8 = v5;
    type metadata accessor for CGRect(0);
    v20 = 0;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v9 = v16;
    sub_1BB8740D4();
    v10 = v19;
    *(_OWORD *)(v1 + 16) = v18;
    *(_OWORD *)(v1 + 32) = v10;
    LOBYTE(v18) = 1;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v12;
    LOBYTE(v18) = 2;
    *(_QWORD *)(v1 + 64) = sub_1BB87402C();
    *(_QWORD *)(v1 + 72) = v13;
    LOBYTE(v18) = 3;
    *(_QWORD *)(v1 + 80) = sub_1BB874098();
    *(_QWORD *)(v1 + 88) = v14;
    LOBYTE(v18) = 4;
    *(_QWORD *)(v1 + 96) = sub_1BB874098();
    *(_QWORD *)(v1 + 104) = v15;
    sub_1BAF31994();
    v20 = 5;
    sub_1BAF31FC4(&qword_1ED39D9B8, (uint64_t (*)(void))sub_1BA831600, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 112) = v18;
    sub_1BAF319E8();
    v20 = 6;
    sub_1BAF31A3C(&qword_1EF2B66A8, &qword_1ED3CCDA0, (uint64_t)&protocol conformance descriptor for FormatAccessibilityLayoutValue, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 120) = v18;
    v20 = 7;
    sub_1BA5B7CF0();
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v9);
    *(_BYTE *)(v1 + 128) = v18;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1BAF31F68(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF31950();
    v7 = a3(a1, &type metadata for FormatLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAF31FC4(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BAF31994();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAF32028@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAF3207C(_QWORD *a1)
{
  return FormatLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BAF3209C(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1ED3C9F20, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLayoutAttributes.__allocating_init(frame:identifier:itemIdentifier:layoutIdentifier:nodeIdentifier:layoutValues:accessibilityValues:accessibilityRole:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of FormatLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t storeEnumTagSinglePayload for FormatLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1BAF321A4 + 4 * byte_1BB8D438D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1BAF321D8 + 4 * byte_1BB8D4388[v4]))();
}

uint64_t sub_1BAF321D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF321E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF321E8);
  return result;
}

uint64_t sub_1BAF321F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF321FCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1BAF32200(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF32208(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatLayoutAttributes.CodingKeys;
}

unint64_t sub_1BAF32228()
{
  unint64_t result;

  result = qword_1EF2B66B0;
  if (!qword_1EF2B66B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D45A4, &type metadata for FormatLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B66B0);
  }
  return result;
}

unint64_t sub_1BAF32270()
{
  unint64_t result;

  result = qword_1EF2B66B8;
  if (!qword_1EF2B66B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4514, &type metadata for FormatLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B66B8);
  }
  return result;
}

unint64_t sub_1BAF322B8()
{
  unint64_t result;

  result = qword_1EF2B66C0;
  if (!qword_1EF2B66C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D453C, &type metadata for FormatLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B66C0);
  }
  return result;
}

uint64_t sub_1BAF322FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E6564496D657469 && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x615674756F79616CLL && a2 == 0xEC0000007365756CLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB971F00 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

void sub_1BAF32680()
{
  qword_1EF2B66C8 = 0x4036000000000000;
}

void sub_1BAF32690()
{
  qword_1EF2B66D0 = 0x4010000000000000;
}

char *sub_1BAF326A0()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  objc_class *v15;
  objc_class *v16;
  id v17;
  char *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void *v27;
  double v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  id v41;
  uint64_t KeyPath;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  id v48;
  void *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  id v60;
  id v61;
  objc_super v62;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4A3FB4(0, &qword_1EF2B6730, (void (*)(uint64_t))MEMORY[0x1E0DC3228]);
  MEMORY[0x1E0C80A78](v3);
  v57 = (char *)&v54 - v4;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1EF2B6ED0, (void (*)(uint64_t))MEMORY[0x1E0CAF240]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v54 - v6;
  v8 = sub_1BB8739CC();
  v58 = *(_QWORD *)(v8 - 8);
  v59 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86C304();
  v55 = *(_QWORD *)(v11 - 8);
  v56 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap;
  sub_1BA563554();
  v16 = v15;
  v17 = objc_allocWithZone(v15);
  v18 = v1;
  *(_QWORD *)&v1[v14] = objc_msgSend(v17, sel_init);
  v19 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton;
  v20 = (void *)objc_opt_self();
  *(_QWORD *)&v18[v19] = objc_msgSend(v20, sel_buttonWithType_, 0);
  v21 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onChangesTap;
  *(_QWORD *)&v18[v21] = objc_msgSend(objc_allocWithZone(v16), sel_init);
  v22 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton;
  *(_QWORD *)&v18[v22] = objc_msgSend(v20, sel_buttonWithType_, 0);
  v23 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView;
  *(_QWORD *)&v18[v23] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  *(_QWORD *)&v18[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_compilerResultEntries] = 0;

  if (qword_1EF2A7020 != -1)
    swift_once();
  v62.receiver = v18;
  v62.super_class = ObjectType;
  v24 = (char *)objc_msgSendSuper2(&v62, sel_initWithFrame_, 0.0, 0.0, *(double *)&qword_1EF2B66C8 + *(double *)&qword_1EF2B66C8);
  v25 = *(_QWORD *)&v24[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView];
  v26 = v24;
  objc_msgSend(v26, sel_addSubview_, v25);
  v27 = (void *)objc_opt_self();
  v28 = *MEMORY[0x1E0DC1448];
  v29 = objc_msgSend(v27, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1448]);
  v60 = objc_msgSend((id)objc_opt_self(), sel_configurationWithFont_, v29);

  v30 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton;
  v31 = *(void **)&v26[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton];
  v32 = (void *)objc_opt_self();
  v33 = v31;
  v34 = objc_msgSend(v32, sel_systemRedColor);
  objc_msgSend(v33, sel_setTintColor_, v34);

  v35 = *(id *)&v26[v30];
  v36 = (void *)sub_1BB872970();
  v37 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v36);

  if (v37)
  {
    v38 = objc_msgSend(v37, sel_imageWithConfiguration_, v60);

  }
  else
  {
    v38 = 0;
  }
  objc_msgSend(v35, sel_setImage_forState_, v38, 0);

  v39 = *(void **)&v26[v30];
  objc_msgSend(v39, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v26, sel_addSubview_, v39);
  v40 = *(id *)&v26[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap];
  v41 = v39;
  sub_1BB871368();

  sub_1BB86C1F0();
  KeyPath = swift_getKeyPath();
  MEMORY[0x1E0C80A78](KeyPath);
  *(&v54 - 2) = v43;
  swift_getKeyPath();
  v61 = objc_msgSend(v27, sel_systemFontOfSize_weight_, 12.0, v28);
  sub_1BA745B28();
  sub_1BB86C1E4();
  sub_1BB8739A8();
  v44 = v55;
  v45 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v7, v13, v56);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v7, 0, 1, v45);
  sub_1BB873954();
  v46 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton;
  v47 = *(id *)&v26[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton];
  v48 = objc_msgSend(v32, sel_systemBlueColor);
  objc_msgSend(v47, sel_setTintColor_, v48);

  v49 = *(void **)&v26[v46];
  v50 = v57;
  v51 = v58;
  v52 = v59;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v57, v10, v59);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v50, 0, 1, v52);
  sub_1BB8739F0();
  objc_msgSend(v49, sel_setPointerInteractionEnabled_, 1);
  objc_msgSend(v26, sel_addSubview_, v49);
  sub_1BB871368();

  (*(void (**)(char *, uint64_t))(v51 + 8))(v10, v52);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v45);
  return v26;
}

uint64_t sub_1BAF32D1C()
{
  char *v0;
  uint64_t v1;
  char *v2;
  objc_super v4;
  CGRect v5;

  v4.receiver = v0;
  v4.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v4, sel_layoutSubviews);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton], sel_setHidden_, 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton], sel_setHidden_, 1);
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView], sel_setHidden_, 1);
  objc_msgSend(v0, sel_bounds);
  CGRectGetWidth(v5);
  v1 = swift_bridgeObjectRetain();
  v2 = sub_1BAF331BC(v1);
  swift_bridgeObjectRelease();
  if (*((_QWORD *)v2 + 2))
  {
    if (qword_1EF2A7020 != -1)
      swift_once();
    __asm { BR              X9 }
  }
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for DebugFormatInventoryStatusView()
{
  return objc_opt_self();
}

void sub_1BAF33084()
{
  char *v0;
  uint64_t v1;
  objc_class *v2;
  objc_class *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v1 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap;
  sub_1BA563554();
  v3 = v2;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(v2), sel_init);
  v4 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton;
  v5 = (void *)objc_opt_self();
  *(_QWORD *)&v0[v4] = objc_msgSend(v5, sel_buttonWithType_, 0);
  v6 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onChangesTap;
  *(_QWORD *)&v0[v6] = objc_msgSend(objc_allocWithZone(v3), sel_init);
  v7 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton;
  *(_QWORD *)&v0[v7] = objc_msgSend(v5, sel_buttonWithType_, 0);
  v8 = OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_activityIndicatorView;
  *(_QWORD *)&v0[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3438]), sel_initWithActivityIndicatorStyle_, 100);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_compilerResultEntries] = 0;

  sub_1BB873EAC();
  __break(1u);
}

char *sub_1BAF331BC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  char *v18;
  unint64_t v19;
  unint64_t v20;
  int EnumCaseMultiPayload;
  unint64_t v22;
  unint64_t v23;
  uint64_t (*v24)();
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v30;
  id *v31;

  v2 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v2);
  v4 = (id *)((char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for DebugFormatCacheFile();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DebugFormatCompilerResultEntry();
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && *(_QWORD *)(a1 + 16))
  {
    sub_1BA4C2DD8(a1 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80)), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
    v13 = *(_QWORD *)&v12[*(int *)(v9 + 24)];
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v31 = v4;
      v15 = v13 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v16 = *(_QWORD *)(v6 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1BA4C2DD8(v15, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        v17 = v8[24];
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCacheFile);
        if (v17 == 1)
          break;
        v15 += v16;
        if (!--v14)
        {
          swift_bridgeObjectRelease();
          v18 = (char *)MEMORY[0x1E0DEE9D8];
          v4 = v31;
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      v18 = sub_1BB392064(0, 1, 1, MEMORY[0x1E0DEE9D8]);
      v20 = *((_QWORD *)v18 + 2);
      v19 = *((_QWORD *)v18 + 3);
      if (v20 >= v19 >> 1)
        v18 = sub_1BB392064((char *)(v19 > 1), v20 + 1, 1, v18);
      v4 = v31;
      *((_QWORD *)v18 + 2) = v20 + 1;
      v18[v20 + 32] = 3;
    }
    else
    {
      v18 = (char *)MEMORY[0x1E0DEE9D8];
    }
LABEL_13:
    sub_1BA4C2DD8((uint64_t)&v12[*(int *)(v9 + 20)], (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v18 = sub_1BB392064(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
        v23 = *((_QWORD *)v18 + 2);
        v22 = *((_QWORD *)v18 + 3);
        if (v23 >= v22 >> 1)
          v18 = sub_1BB392064((char *)(v22 > 1), v23 + 1, 1, v18);
        *((_QWORD *)v18 + 2) = v23 + 1;
        v18[v23 + 32] = 1;
        v24 = type metadata accessor for DebugFormatCompilerResultEntry;
        v25 = (uint64_t)v12;
        goto LABEL_27;
      }
      sub_1BAF05E00();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v18 = sub_1BB392064(0, *((_QWORD *)v18 + 2) + 1, 1, v18);
      v28 = *((_QWORD *)v18 + 2);
      v27 = *((_QWORD *)v18 + 3);
      if (v28 >= v27 >> 1)
        v18 = sub_1BB392064((char *)(v27 > 1), v28 + 1, 1, v18);
      *((_QWORD *)v18 + 2) = v28 + 1;
      v18[v28 + 32] = 2;
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      v24 = type metadata accessor for FormatFile;
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
      v24 = type metadata accessor for DebugFormatCompilerResultOutput;
    }
    v25 = (uint64_t)v4;
LABEL_27:
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))v24);
    return v18;
  }
  return (char *)&unk_1E726F838;
}

uint64_t sub_1BAF33554()
{
  return 8;
}

uint64_t sub_1BAF33560()
{
  return swift_release();
}

uint64_t sub_1BAF33568(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

_QWORD *sub_1BAF3357C(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatInventoryStatus(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAF335D4 + 4 * byte_1BB8D4625[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAF33608 + 4 * byte_1BB8D4620[v4]))();
}

uint64_t sub_1BAF33608(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF33610(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF33618);
  return result;
}

uint64_t sub_1BAF33624(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF3362CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAF33630(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF33638(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatInventoryStatus()
{
  return &type metadata for DebugFormatInventoryStatus;
}

unint64_t sub_1BAF33658()
{
  unint64_t result;

  result = qword_1EF2B6738;
  if (!qword_1EF2B6738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D471C, &type metadata for DebugFormatInventoryStatus);
    atomic_store(result, (unint64_t *)&qword_1EF2B6738);
  }
  return result;
}

double sub_1BAF336B0@<D0>(uint64_t a1@<X2>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v5;
  id v6;
  id v7;
  id v8;
  double result;

  v5 = objc_msgSend(*(id *)(a1 + 40), sel_sourceChannel);
  if (v5
    && (v6 = objc_msgSend(v5, sel_theme), swift_unknownObjectRelease(), v6)
    && (v7 = objc_msgSend(v6, *a2), swift_unknownObjectRelease(), v7)
    && (v8 = objc_msgSend(v7, sel_assetHandle), v7, v8))
  {
    *(_QWORD *)(a3 + 24) = sub_1BA749984();
    *(_QWORD *)(a3 + 32) = sub_1BA7499C0();
    *(_QWORD *)a3 = v8;
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

double sub_1BAF33790@<D0>(uint64_t a1@<X8>)
{
  return sub_1BAF337D8((SEL *)&selRef_bannerImageForMask, a1);
}

uint64_t sub_1BAF3379C()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1BAF337CC@<D0>(uint64_t a1@<X8>)
{
  return sub_1BAF337D8((SEL *)&selRef_bannerImageForWhiteBackground, a1);
}

double sub_1BAF337D8@<D0>(SEL *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  return sub_1BAF336B0(v2 + ((v5 + 16) & ~v5), a1, a2);
}

uint64_t sub_1BAF33840()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BAF33864@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BAF2F4F0(v1 + 16, a1);
}

uint64_t sub_1BAF33870()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = (int *)type metadata accessor for FeedHeadline(0);
  v2 = v0
     + ((*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((_QWORD *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  v3 = v1[10];
  v4 = v2 + v3 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
  v5 = type metadata accessor for SharedItem();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1BB86C8B0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);

    v7 = v4 + *(int *)(v5 + 28);
    v8 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = v2 + v1[11];
  v10 = sub_1BB871B24();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  if (*(_QWORD *)(v2 + v1[12] + 8) >= 0x11uLL)
    swift_bridgeObjectRelease();
  if (*(_QWORD *)(v2 + v1[13]) >= 3uLL)
    swift_unknownObjectRelease();

  swift_release();
  return swift_deallocObject();
}

BOOL static FormatHeadlineBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatHeadlineBinding.Image.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatHeadlineBinding.Image.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAF33A94()
{
  unint64_t result;

  result = qword_1EF2B6740;
  if (!qword_1EF2B6740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Image, &type metadata for FormatHeadlineBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B6740);
  }
  return result;
}

unint64_t sub_1BAF33AD8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF33AFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF33AFC()
{
  unint64_t result;

  result = qword_1EF2B6748;
  if (!qword_1EF2B6748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatHeadlineBinding.Image, &type metadata for FormatHeadlineBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B6748);
  }
  return result;
}

unint64_t sub_1BAF33B40(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5C15F8();
  a1[2] = sub_1BA593F3C();
  result = sub_1BAF33A94();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatHeadlineBinding.Image()
{
  return &type metadata for FormatHeadlineBinding.Image;
}

uint64_t sub_1BAF33B84()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

uint64_t Sequence<>.scoredIssues(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD v9[4];

  v9[2] = a1;
  return sub_1BB5B50D4((void (*)(char *, char *))sub_1BAF33F58, (uint64_t)v9, a2, (uint64_t)&type metadata for FeedScoredIssue, MEMORY[0x1E0DEDCE8], a3, MEMORY[0x1E0DEDD18], a8);
}

id FeedScoredIssue.init(issue:scoreProfile:)@<X0>(id result@<X0>, id a2@<X1>, _QWORD *a3@<X8>)
{
  id v3;

  v3 = result;
  if (!a2)
  {
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
    a2 = result;
  }
  *a3 = v3;
  a3[1] = a2;
  return result;
}

id FeedScoredIssue.issue.getter()
{
  id *v0;

  return *v0;
}

id FeedScoredIssue.scoreProfile.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id FeedScoredIssue.item.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  void *v2;
  id v3;
  id v5;

  v2 = *(void **)v1;
  v5 = *(id *)(v1 + 8);
  *a1 = *(_QWORD *)v1;
  a1[1] = v5;
  a1[2] = 0;
  v3 = v2;
  return v5;
}

uint64_t FeedScoredIssue.identifier.getter()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_itemID);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedScoredIssue.publisherID.getter()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_publisherID);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

uint64_t FeedScoredIssue.date.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*v1, sel_publishDate);
  if (v3)
  {
    v4 = v3;
    sub_1BB86C874();

    v5 = sub_1BB86C8B0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1BB86C8B0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id FeedScoredIssue.score.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 8), sel_agedPersonalizationScore);
}

id sub_1BAF33DE0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 8), sel_agedPersonalizationScore);
}

uint64_t sub_1BAF33DF0@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*v1, sel_publishDate);
  if (v3)
  {
    v4 = v3;
    sub_1BB86C874();

    v5 = sub_1BB86C8B0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1BB86C8B0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

uint64_t sub_1BAF33E74()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_itemID);
  v2 = sub_1BB8729A0();

  return v2;
}

id sub_1BAF33F24@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  void *v3;
  id v4;

  v2 = *(void **)a1;
  v3 = *(void **)(a1 + 8);
  *a2 = *(_QWORD *)a1;
  a2[1] = v3;
  a2[2] = 0;
  v4 = v2;
  return v3;
}

id sub_1BAF33F58@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;

  v3 = *(void **)(v2 + 16);
  v4 = *a1;
  *a2 = *a1;
  a2[1] = v3;
  v5 = v4;
  return v3;
}

uint64_t _s8NewsFeed0B11ScoredIssueV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  id v16;
  id v17;
  char v18;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  v5 = objc_msgSend(*(id *)a1, sel_itemID);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = objc_msgSend(v3, sel_itemID);
  v10 = sub_1BB8729A0();
  v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  sub_1BA92CDB0();
  v16 = v2;
  v17 = v4;
  v18 = sub_1BB8738B8();

  return v18 & 1;
}

unint64_t sub_1BAF340A0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF340C4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF340C4()
{
  unint64_t result;

  result = qword_1ED3C0C70;
  if (!qword_1ED3C0C70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedScoredIssue, &type metadata for FeedScoredIssue);
    atomic_store(result, (unint64_t *)&qword_1ED3C0C70);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedScoredIssue()
{
  return &type metadata for FeedScoredIssue;
}

unint64_t sub_1BAF34118@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char isUniquelyReferenced_nonNull_native;
  char v36;
  unint64_t v37;
  uint64_t v38;
  _BOOL8 v39;
  uint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  char v59;
  unint64_t v60;
  uint64_t v61;
  _BOOL8 v62;
  uint64_t v63;
  char v64;
  unint64_t v65;
  char v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  uint64_t v71;
  unint64_t result;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;

  v84 = a1;
  v88 = type metadata accessor for FeedItemAuxiliaryItem();
  v2 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v80 = (char *)&v76 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v76 - v5;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v76 - v8;
  v11 = v1[2];
  v10 = v1[3];
  v12 = v1[5];
  v82 = v1[4];
  v83 = v10;
  v13 = *(_QWORD *)(v11 + 16);
  v85 = v11;
  v81 = v12;
  if (v13)
  {
    v86 = v6;
    v89 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA7447E8(0, v13, 0);
    v14 = v11 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    v79 = v2;
    v87 = *(_QWORD *)(v2 + 72);
    v15 = (uint64_t)v89;
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
      FeedItem.identifier.getter();
      v17 = v16;
      v19 = v18;
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA7447E8(0, *(_QWORD *)(v15 + 16) + 1, 1);
        v15 = (uint64_t)v89;
      }
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
      {
        sub_1BA7447E8(v20 > 1, v21 + 1, 1);
        v15 = (uint64_t)v89;
      }
      *(_QWORD *)(v15 + 16) = v21 + 1;
      v22 = v15 + 16 * v21;
      *(_QWORD *)(v22 + 32) = v17;
      *(_QWORD *)(v22 + 40) = v19;
      v14 += v87;
      --v13;
    }
    while (v13);
    v11 = v85;
    swift_bridgeObjectRelease();
    v6 = v86;
    v2 = v79;
  }
  else
  {
    swift_bridgeObjectRetain();
    v15 = MEMORY[0x1E0DEE9D8];
  }
  v23 = sub_1BA6E43EC(v15);
  swift_bridgeObjectRelease();
  v24 = *(char **)(v11 + 16);
  if (!v24)
  {
    swift_bridgeObjectRetain();
    v70 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v48 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_41:
    swift_bridgeObjectRelease();
    v71 = v83;
    swift_bridgeObjectRetain();
    result = sub_1BA6A42C8(MEMORY[0x1E0DEE9D8]);
    v73 = v84;
    v74 = v81;
    *v84 = v82;
    v73[1] = v74;
    v73[2] = v23;
    v73[3] = v70;
    v73[4] = v48;
    v73[5] = result;
    v75 = MEMORY[0x1E0DEE9E8];
    v73[6] = v71;
    v73[7] = v75;
    return result;
  }
  v78 = v23;
  v25 = v11 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v87 = *(_QWORD *)(v2 + 72);
  swift_bridgeObjectRetain_n();
  v26 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v79 = v25;
  v86 = v24;
  while (1)
  {
    sub_1BA4C2DD8(v25, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
    FeedItem.identifier.getter();
    v29 = v28;
    v31 = v30;
    v32 = (uint64_t)v6;
    v33 = *(_QWORD *)&v6[*(int *)(v88 + 24)];
    swift_bridgeObjectRetain();
    v34 = v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v89 = v34;
    v37 = sub_1BA6E35A8(v29, v31);
    v38 = v34[2];
    v39 = (v36 & 1) == 0;
    v40 = v38 + v39;
    if (__OFADD__(v38, v39))
      break;
    v41 = v36;
    if (v34[3] >= v40)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v26 = v89;
        if ((v36 & 1) == 0)
          goto LABEL_21;
      }
      else
      {
        sub_1BB4C4208();
        v26 = v89;
        if ((v41 & 1) == 0)
          goto LABEL_21;
      }
    }
    else
    {
      sub_1BB4B131C(v40, isUniquelyReferenced_nonNull_native);
      v42 = sub_1BA6E35A8(v29, v31);
      if ((v41 & 1) != (v43 & 1))
        goto LABEL_46;
      v37 = v42;
      v26 = v89;
      if ((v41 & 1) == 0)
      {
LABEL_21:
        v26[(v37 >> 6) + 8] |= 1 << v37;
        v44 = (uint64_t *)(v26[6] + 16 * v37);
        *v44 = v29;
        v44[1] = v31;
        *(_QWORD *)(v26[7] + 8 * v37) = v33;
        v45 = v26[2];
        v46 = __OFADD__(v45, 1);
        v47 = v45 + 1;
        if (v46)
          goto LABEL_44;
        v26[2] = v47;
        swift_bridgeObjectRetain();
        goto LABEL_13;
      }
    }
    v27 = v26[7];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v27 + 8 * v37) = v33;
LABEL_13:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v6 = (char *)v32;
    sub_1BA4A2E80(v32, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
    v25 += v87;
    if (!--v24)
    {
      v77 = v26;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRetain_n();
      v48 = (_QWORD *)MEMORY[0x1E0DEE9E0];
      v50 = v79;
      v49 = (uint64_t)v80;
      while (1)
      {
        sub_1BA4C2DD8(v50, v49, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
        FeedItem.identifier.getter();
        v53 = v52;
        v55 = v54;
        v56 = v49;
        v57 = *(_QWORD *)(v49 + *(int *)(v88 + 20));
        swift_bridgeObjectRetain();
        v58 = swift_isUniquelyReferenced_nonNull_native();
        v89 = v48;
        v60 = sub_1BA6E35A8(v53, v55);
        v61 = v48[2];
        v62 = (v59 & 1) == 0;
        v63 = v61 + v62;
        if (__OFADD__(v61, v62))
          goto LABEL_43;
        v64 = v59;
        if (v48[3] >= v63)
        {
          if ((v58 & 1) != 0)
          {
            v48 = v89;
            if ((v59 & 1) == 0)
              goto LABEL_35;
          }
          else
          {
            sub_1BB4C41FC();
            v48 = v89;
            if ((v64 & 1) == 0)
              goto LABEL_35;
          }
        }
        else
        {
          sub_1BB4B1310(v63, v58);
          v65 = sub_1BA6E35A8(v53, v55);
          if ((v64 & 1) != (v66 & 1))
            goto LABEL_46;
          v60 = v65;
          v48 = v89;
          if ((v64 & 1) == 0)
          {
LABEL_35:
            v48[(v60 >> 6) + 8] |= 1 << v60;
            v67 = (uint64_t *)(v48[6] + 16 * v60);
            *v67 = v53;
            v67[1] = v55;
            *(_QWORD *)(v48[7] + 8 * v60) = v57;
            v68 = v48[2];
            v46 = __OFADD__(v68, 1);
            v69 = v68 + 1;
            if (v46)
              goto LABEL_45;
            v48[2] = v69;
            swift_bridgeObjectRetain();
            goto LABEL_27;
          }
        }
        v51 = v48[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v51 + 8 * v60) = v57;
LABEL_27:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v49 = v56;
        sub_1BA4A2E80(v56, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
        v50 += v87;
        if (!--v86)
        {
          swift_bridgeObjectRelease();
          v70 = v77;
          v23 = v78;
          goto LABEL_41;
        }
      }
    }
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t FeedItemAuxiliary.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedItemAuxiliary.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemAuxiliary.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedItemAuxiliary.slotIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t destroy for FeedItemAuxiliary()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FeedItemAuxiliary(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FeedItemAuxiliary(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedItemAuxiliary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedItemAuxiliary()
{
  return &type metadata for FeedItemAuxiliary;
}

uint64_t dispatch thunk of FeedItemAuxiliaryFactoryType.createAuxiliary(auxiliary:context:parentIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

_QWORD *sub_1BAF34930(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _QWORD *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  _QWORD *v47;
  char *v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  unint64_t v55;
  _QWORD *v56;
  void (*v57)(_QWORD, _QWORD, _QWORD, _QWORD);
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  _QWORD *v78;
  _QWORD v80[2];
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  __int128 v91;
  __int128 v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  _OWORD v108[6];
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  char v120;
  uint64_t v121;

  v2 = type metadata accessor for FormatOption();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v97 = (_QWORD *)((char *)v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v5);
  v96 = (uint64_t)v80 - v6;
  v102 = type metadata accessor for FormatInspectionItem(0);
  v98 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v102);
  v8 = (__int128 *)((char *)v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v95 = type metadata accessor for FeedItemAuxiliaryItem();
  v9 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v11 = (char *)v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA8C88C8(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v99 = (_QWORD *)((char *)v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v80 - v17;
  if (!a1[1])
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v81 = v3;
  v88 = v16;
  v19 = a1[2];
  v20 = a1[3];
  v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v91 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v86 = inited;
  v87 = inited + 32;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v21);
  v23 = *(_QWORD *)(v13 + 72);
  v24 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v101 = v23;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87A390;
  v85 = v25;
  v100 = v24;
  v26 = (_QWORD *)(v25 + v24);
  v27 = v19;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v21);
  v84 = v28;
  v29 = swift_initStackObject();
  *(_OWORD *)(v29 + 16) = v91;
  v82 = v29;
  v83 = v29 + 32;
  v30 = *(_QWORD *)(v19 + 16);
  v31 = MEMORY[0x1E0DEE9D8];
  v89 = v20;
  v90 = v26;
  if (v30)
  {
    v121 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E1C(0, v30, 0);
    v32 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    v80[1] = v27;
    v33 = v27 + v32;
    v34 = *(_QWORD *)(v9 + 72);
    v93 = v8 + 1;
    v94 = v34;
    v92 = xmmword_1BB8D4900;
    do
    {
      sub_1BA4C2DD8(v33, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
      *((_QWORD *)&v113 + 1) = type metadata accessor for FeedItem(0);
      v114 = sub_1BAF352EC();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v112);
      sub_1BA4C2DD8((uint64_t)v11, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
      v36 = *(_QWORD *)&v11[*(int *)(v95 + 24)];
      v115 = *(_QWORD *)&v11[*(int *)(v95 + 20)];
      v116 = v36;
      v117 = 0u;
      v118 = 0u;
      v119 = 0u;
      v120 = 1;
      sub_1BA4C2DD8((uint64_t)&v112, (uint64_t)&v109, (uint64_t (*)(_QWORD))sub_1BAF35334);
      if (*((_QWORD *)&v110 + 1))
      {
        sub_1BAB05BDC((uint64_t)&v109, (uint64_t)&v103);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)&v112, (uint64_t (*)(_QWORD))sub_1BAF35334);
        v37 = v102;
        v38 = (__int128 *)((char *)v8 + *(int *)(v102 + 24));
        v39 = v108[0];
        v38[4] = v107;
        v38[5] = v39;
        *(_OWORD *)((char *)v38 + 89) = *(_OWORD *)((char *)v108 + 9);
        v40 = v104;
        *v38 = v103;
        v38[1] = v40;
        v41 = v106;
        v38[2] = v105;
        v38[3] = v41;
        v42 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56))(v38, 0, 1, v42);
        *v8 = v92;
        v43 = v93;
        *v93 = 0;
        v43[1] = 0;
        v44 = (char *)v8 + *(int *)(v37 + 28);
        *(_QWORD *)v44 = 0;
        *((_QWORD *)v44 + 1) = 0;
        v44[16] = -1;
        sub_1BAB05C18((uint64_t)&v109);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4A2E80((uint64_t)&v112, (uint64_t (*)(_QWORD))sub_1BAF35334);
        v37 = v102;
        v45 = (char *)v8 + *(int *)(v102 + 24);
        v46 = type metadata accessor for FormatInspectionItem.Value(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 1, 1, v46);
        *v8 = v92;
        v47 = v93;
        *v93 = 0;
        v47[1] = 0;
        v48 = (char *)v8 + *(int *)(v37 + 28);
        *(_QWORD *)v48 = 0;
        *((_QWORD *)v48 + 1) = 0;
        v48[16] = -1;
      }
      sub_1BA5193C4((uint64_t)v8, (uint64_t)v18, type metadata accessor for FormatInspectionItem);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v18, 0, 1, v37);
      sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemAuxiliaryItem);
      v31 = v121;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v31 + 16) + 1, 1);
        v31 = v121;
      }
      v50 = *(_QWORD *)(v31 + 16);
      v49 = *(_QWORD *)(v31 + 24);
      if (v50 >= v49 >> 1)
      {
        sub_1BAC79E1C(v49 > 1, v50 + 1, 1);
        v31 = v121;
      }
      *(_QWORD *)(v31 + 16) = v50 + 1;
      sub_1BA5193C4((uint64_t)v18, v31 + v100 + v50 * v101, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v33 += v94;
      --v30;
    }
    while (v30);
    swift_bridgeObjectRelease();
    v20 = v89;
    v26 = v90;
  }
  sub_1BAF89090(0x736D657449, 0xE500000000000000, 0, 0, v31, &v103);
  swift_bridgeObjectRelease();
  v51 = v82;
  *(_QWORD *)(v82 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v51 + 64) = &off_1E72D2F60;
  v52 = swift_allocObject();
  *(_QWORD *)(v51 + 32) = v52;
  *(_QWORD *)(v52 + 48) = v105;
  v53 = v104;
  *(_OWORD *)(v52 + 16) = v103;
  *(_OWORD *)(v52 + 32) = v53;
  v54 = sub_1BA9747FC(v51);
  swift_setDeallocating();
  v55 = sub_1BA89EA20();
  swift_arrayDestroy();
  v56 = sub_1BB6DF010(v54);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x736D657449, 0xE500000000000000, (uint64_t)v56, 0, 0, v26);
  v57 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v98 + 56);
  v57(v26, 0, 1, v102);
  v58 = swift_initStackObject();
  *(_OWORD *)(v58 + 16) = v91;
  v98 = v58;
  v95 = v58 + 32;
  v59 = *(_QWORD *)(v20 + 16);
  v60 = MEMORY[0x1E0DEE9D8];
  v61 = v99;
  if (v59)
  {
    v94 = v55;
    *(_QWORD *)&v112 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC79E1C(0, v59, 0);
    v62 = v20 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    v63 = *(_QWORD *)(v81 + 72);
    do
    {
      v64 = v96;
      sub_1BA4C2DD8(v62, v96, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v65 = v97;
      sub_1BA4C2DD8(v64, (uint64_t)v97, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      sub_1BB0798DC(v65, v61);
      v57(v61, 0, 1, v102);
      sub_1BA4A2E80(v64, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
      v60 = v112;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v60 + 16) + 1, 1);
        v60 = v112;
      }
      v67 = *(_QWORD *)(v60 + 16);
      v66 = *(_QWORD *)(v60 + 24);
      if (v67 >= v66 >> 1)
      {
        sub_1BAC79E1C(v66 > 1, v67 + 1, 1);
        v60 = v112;
      }
      *(_QWORD *)(v60 + 16) = v67 + 1;
      v68 = v60 + v100 + v67 * v101;
      v61 = v99;
      sub_1BA5193C4((uint64_t)v99, v68, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      v62 += v63;
      --v59;
    }
    while (v59);
    swift_bridgeObjectRelease();
    v26 = v90;
  }
  v69 = (_QWORD *)((char *)v26 + v101);
  sub_1BAF89090(0x736E6F6974704FLL, 0xE700000000000000, 0, 0, v60, &v109);
  swift_bridgeObjectRelease();
  v70 = v98;
  *(_QWORD *)(v98 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v70 + 64) = &off_1E72D2F60;
  v71 = swift_allocObject();
  *(_QWORD *)(v70 + 32) = v71;
  *(_QWORD *)(v71 + 48) = v111;
  v72 = v110;
  *(_OWORD *)(v71 + 16) = v109;
  *(_OWORD *)(v71 + 32) = v72;
  v73 = sub_1BA9747FC(v70);
  swift_setDeallocating();
  swift_arrayDestroy();
  v74 = sub_1BB6DF010(v73);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x736E6F6974704FLL, 0xE700000000000000, (uint64_t)v74, 0, 0, v69);
  v57(v69, 0, 1, v102);
  sub_1BAF89090(0x7261696C69787541, 0xE900000000000079, 0, 0, v85, &v112);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v75 = v86;
  *(_QWORD *)(v86 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v75 + 64) = &off_1E72D2F60;
  v76 = swift_allocObject();
  *(_QWORD *)(v75 + 32) = v76;
  *(_QWORD *)(v76 + 48) = v114;
  v77 = v113;
  *(_OWORD *)(v76 + 16) = v112;
  *(_OWORD *)(v76 + 32) = v77;
  v78 = sub_1BB6DF010(v75);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v78;
}

unint64_t sub_1BAF352EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3BA6F0;
  if (!qword_1ED3BA6F0)
  {
    v1 = type metadata accessor for FeedItem(255);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedItem, v1);
    atomic_store(result, (unint64_t *)&qword_1ED3BA6F0);
  }
  return result;
}

void sub_1BAF35334()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2C8DD0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2C8DD0);
  }
}

uint64_t sub_1BAF35388()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF353BC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;

  sub_1BAF358D4(0, &qword_1EF2B6750, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = v1[2];
  v17 = v1[3];
  v18 = v8;
  v9 = v1[4];
  v15 = v1[5];
  v16 = v9;
  v14 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF35890();
  sub_1BB8746C8();
  v24 = 0;
  v10 = v19;
  sub_1BB87417C();
  if (!v10)
  {
    v11 = v14;
    v23 = 1;
    sub_1BB87417C();
    v20 = v11;
    v22 = 2;
    sub_1BA920B18();
    sub_1BA920C0C(&qword_1EF2AA9C8, (uint64_t (*)(void))sub_1BA920C70, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
    v21 = 3;
    sub_1BB87411C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BAF35594@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  char v32;

  sub_1BAF358D4(0, &qword_1ED3AB5B8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v23 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF35890();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v32 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v26 = v10;
  v31 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v27 = v14;
  v25 = v13;
  sub_1BA920B18();
  v30 = 2;
  sub_1BA920C0C((unint64_t *)&unk_1ED3AB0A0, (uint64_t (*)(void))sub_1BA920B6C, MEMORY[0x1E0DEAF40]);
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v29 = 3;
  v24 = v28;
  swift_bridgeObjectRetain();
  v15 = sub_1BB87402C();
  v18 = v17;
  v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20 = v15;
  v19(v9, v6);
  swift_bridgeObjectRetain();
  v21 = v27;
  *(_QWORD *)a2 = v26;
  *(_QWORD *)(a2 + 8) = v12;
  v22 = v24;
  *(_QWORD *)(a2 + 16) = v25;
  *(_QWORD *)(a2 + 24) = v21;
  *(_QWORD *)(a2 + 32) = v20;
  *(_QWORD *)(a2 + 40) = v18;
  *(_QWORD *)(a2 + 48) = v22;
  *(_BYTE *)(a2 + 56) = 7;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1BAF35890()
{
  unint64_t result;

  result = qword_1ED3AA9D8;
  if (!qword_1ED3AA9D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4AC8, &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9D8);
  }
  return result;
}

void sub_1BAF358D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF35890();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAF3597C + 4 * byte_1BB8D4975[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAF359B0 + 4 * asc_1BB8D4970[v4]))();
}

uint64_t sub_1BAF359B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF359B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF359C0);
  return result;
}

uint64_t sub_1BAF359CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF359D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAF359D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF359E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseKeyPlayerItem()
{
  return &type metadata for SportsDataVisualizationResponseKeyPlayerItem;
}

uint64_t sub_1BAF35A0C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF35A48 + 4 * byte_1BB8D497A[*v0]))(0x6E6F6E6143636D75, 0xEE0064496C616369);
}

uint64_t sub_1BAF35A48()
{
  return 0x6449746E657665;
}

uint64_t sub_1BAF35A60()
{
  return 0x53617461446C7275;
}

uint64_t sub_1BAF35A84()
{
  return 0x615465756761656CLL;
}

uint64_t sub_1BAF35AA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF35C18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF35AC8()
{
  sub_1BAF35890();
  return sub_1BB874710();
}

uint64_t sub_1BAF35AF0()
{
  sub_1BAF35890();
  return sub_1BB87471C();
}

uint64_t sub_1BAF35B18@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAF35594(a1, a2);
}

uint64_t sub_1BAF35B2C(_QWORD *a1)
{
  return sub_1BAF353BC(a1);
}

unint64_t sub_1BAF35B44()
{
  unint64_t result;

  result = qword_1EF2B6758;
  if (!qword_1EF2B6758)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4AA0, &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6758);
  }
  return result;
}

unint64_t sub_1BAF35B8C()
{
  unint64_t result;

  result = qword_1ED3AA9E8;
  if (!qword_1ED3AA9E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4A10, &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9E8);
  }
  return result;
}

unint64_t sub_1BAF35BD4()
{
  unint64_t result;

  result = qword_1ED3AA9E0;
  if (!qword_1ED3AA9E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4A38, &type metadata for SportsDataVisualizationResponseKeyPlayerItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA9E0);
  }
  return result;
}

uint64_t sub_1BAF35C18(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E6F6E6143636D75 && a2 == 0xEE0064496C616369;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6449746E657665 && a2 == 0xE700000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x53617461446C7275 && a2 == 0xEE0073656372756FLL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x615465756761656CLL && a2 == 0xEB00000000644967)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

id EndpointConnectionError.underlyingError.getter()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

void *EndpointConnectionError.httpResponse.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

uint64_t EndpointConnectionError.init(underlyingError:httpResponse:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t EndpointConnectionResponse.data.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1BA86B484(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

void *EndpointConnectionResponse.response.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t EndpointConnectionResponse.init(data:response:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t FCEndpointConnectionType.performHTTPRequest(with:method:data:contentType:priority:requiresMescalSigning:networkEventType:callbackQueue:)()
{
  return FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)();
}

uint64_t FCEndpointConnectionType.performHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:requiresMescalSigning:callbackQueue:)()
{
  return sub_1BAF36070();
}

void sub_1BAF35F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BAF3632C(a1, a2, a3, a4, (uint64_t)&unk_1E72CE5D8, (uint64_t)sub_1BAF3686C, (uint64_t)&block_descriptor_6_1, (SEL *)&selRef_performHTTPRequestWithURL_valuesByHTTPHeaderField_method_data_contentType_priority_requiresMescalSigning_networkEventType_callbackQueue_completion_);
}

uint64_t sub_1BAF35F80(uint64_t a1, void *a2, void *a3, void *a4)
{
  void *v6;
  void (*v7)(void *, unint64_t, void *, void *);
  id v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;

  v6 = a2;
  v7 = *(void (**)(void *, unint64_t, void *, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    v8 = v6;
    v6 = (void *)sub_1BB86C6E8();
    v10 = v9;

  }
  else
  {
    swift_retain();
    v10 = 0xF000000000000000;
  }
  v11 = a3;
  v12 = a4;
  v7(v6, v10, a3, a4);

  sub_1BA69D490((uint64_t)v6, v10);
  return swift_release();
}

uint64_t FCEndpointConnectionType.performAuthenticatedHTTPRequest(with:valuesByHTTPHeaderField:method:data:contentType:priority:networkEventType:reauthenticateIfNeeded:callbackQueue:)()
{
  return sub_1BAF36070();
}

uint64_t sub_1BAF36070()
{
  sub_1BA4AD288(0, (unint64_t *)&unk_1ED3A3A60, (uint64_t)&type metadata for EndpointConnectionResponse, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

void sub_1BAF36100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, float a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, char a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,SEL *a22)
{
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  _QWORD *v31;
  void *v32;
  double v33;
  uint64_t v34;
  void *v37;
  _QWORD aBlock[7];

  v27 = (void *)sub_1BB86C58C();
  if (a8)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v28 = (void *)sub_1BB872760();
  }
  else
  {
    v28 = 0;
  }
  v37 = (void *)sub_1BB872970();
  if (a12 >> 60 == 15)
    v29 = 0;
  else
    v29 = (void *)sub_1BB86C6DC();
  if (a14)
    v30 = (void *)sub_1BB872970();
  else
    v30 = 0;
  v31 = (_QWORD *)swift_allocObject();
  v31[2] = a3;
  v31[3] = a4;
  v31[4] = a1;
  v31[5] = a2;
  aBlock[4] = a20;
  aBlock[5] = v31;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BAF35F80;
  aBlock[3] = a21;
  v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  LODWORD(v34) = a16;
  *(float *)&v33 = a6;
  objc_msgSend(a5, *a22, v27, v28, v37, v29, v30, a15 & 1, v33, v34, a17, v32);
  _Block_release(v32);

}

void sub_1BAF36308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1BAF3632C(a1, a2, a3, a4, (uint64_t)&unk_1E72CE588, (uint64_t)sub_1BAF36888, (uint64_t)&block_descriptor_29, (SEL *)&selRef_performAuthenticatedHTTPRequestWithURL_valuesByHTTPHeaderField_method_data_contentType_priority_reauthenticateIfNeeded_networkEventType_callbackQueue_completion_);
}

void sub_1BAF3632C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, SEL *a8)
{
  uint64_t v8;

  sub_1BAF36100(a1, a2, a3, a4, *(void **)(v8 + 24), *(float *)(v8 + 96), *(_QWORD *)(v8 + 32), *(_QWORD *)(v8 + 40), *(_QWORD *)(v8 + 48), *(_QWORD *)(v8 + 56), *(_QWORD *)(v8 + 64), *(_QWORD *)(v8 + 72), *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), *(_BYTE *)(v8 + 100), *(_DWORD *)(v8 + 104), *(_QWORD *)(v8 + 112), *(_QWORD *)(v8 + 16), a5,
    a6,
    a7,
    a8);
}

_QWORD *initializeBufferWithCopyOfBuffer for EndpointConnectionError(_QWORD *a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  id v7;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)(a2 + 8);
  *a1 = v4;
  a1[1] = v6;
  v7 = v6;
  return a1;
}

void destroy for EndpointConnectionError(id *a1)
{

}

uint64_t assignWithCopy for EndpointConnectionError(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(id *)a2;
  v5 = *(id *)a2;
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v4;

  v7 = *(void **)(a1 + 8);
  v8 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for EndpointConnectionError(uint64_t a1, _OWORD *a2)
{
  void *v4;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for EndpointConnectionError()
{
  return &type metadata for EndpointConnectionError;
}

void destroy for EndpointConnectionResponse(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >> 60 != 15)
    sub_1BA69D314(*(_QWORD *)a1, v2);

}

uint64_t _s8NewsFeed26EndpointConnectionResponseVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_1BA69D44C(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = (void *)a2[2];
  *(_QWORD *)(a1 + 16) = v6;
  v7 = v6;
  return a1;
}

uint64_t *assignWithCopy for EndpointConnectionResponse(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  void *v10;
  id v11;

  v4 = a2[1];
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *a2;
      sub_1BA69D44C(*a2, a2[1]);
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_1BA69D314(v7, v8);
      goto LABEL_8;
    }
    sub_1BA92BD1C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v5 = *a2;
  sub_1BA69D44C(*a2, a2[1]);
  *a1 = v5;
  a1[1] = v4;
LABEL_8:
  v9 = (void *)a1[2];
  v10 = (void *)a2[2];
  a1[2] = (uint64_t)v10;
  v11 = v10;

  return a1;
}

uint64_t *assignWithTake for EndpointConnectionResponse(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1BA69D314(v6, v4);
      goto LABEL_6;
    }
    sub_1BA92BD1C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_6:
  v7 = (void *)a1[2];
  a1[2] = a2[2];

  return a1;
}

uint64_t getEnumTagSinglePayload for EndpointConnectionResponse(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EndpointConnectionResponse(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 24) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EndpointConnectionResponse()
{
  return &type metadata for EndpointConnectionResponse;
}

void sub_1BAF3673C(uint64_t a1, unint64_t a2, void *a3, void *a4, void (*a5)(void *), uint64_t a6, void (*a7)(_QWORD *))
{
  void *v10;
  _QWORD *v11;
  id v12;
  id v13;
  id v17;
  _QWORD v18[3];

  if (a4)
  {
    sub_1BAF36824();
    v10 = (void *)swift_allocError();
    *v11 = a4;
    v11[1] = a3;
    v12 = a3;
    v13 = a4;
    a5(v10);

  }
  else
  {
    v18[0] = a1;
    v18[1] = a2;
    v18[2] = a3;
    sub_1BA86B484(a1, a2);
    v17 = a3;
    a7(v18);
    sub_1BA69D490(a1, a2);

  }
}

unint64_t sub_1BAF36824()
{
  unint64_t result;

  result = qword_1EF2B6760;
  if (!qword_1EF2B6760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EndpointConnectionError, &type metadata for EndpointConnectionError);
    atomic_store(result, (unint64_t *)&qword_1EF2B6760);
  }
  return result;
}

void sub_1BAF3686C(uint64_t a1, unint64_t a2, void *a3, void *a4)
{
  uint64_t v4;

  sub_1BAF3673C(a1, a2, a3, a4, *(void (**)(void *))(v4 + 16), *(_QWORD *)(v4 + 24), *(void (**)(_QWORD *))(v4 + 32));
}

void static FormatCodingButtLineCapStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

void static FormatCodingMiddleBorderInsetStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t static FormatCodingAllBorderEdgeStrategy.defaultValue.getter()
{
  return sub_1BA8620DC((uint64_t)&unk_1E726F860);
}

BOOL static FormatCodingAllBorderEdgeStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BA8620DC((uint64_t)&unk_1E726F888);
  LOBYTE(a1) = sub_1BA617A54(a1, v2);
  swift_bridgeObjectRelease();
  return (a1 & 1) == 0;
}

uint64_t static FormatCodingAllBorderEdgeStrategy.encode(wrappedValue:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  v0 = swift_bridgeObjectRetain();
  v1 = sub_1BA617E64(v0);
  swift_bridgeObjectRelease();
  v3 = v1;
  swift_retain();
  sub_1BA617EF0(&v3);
  swift_release();
  return v3;
}

uint64_t static FormatCodingAllBorderEdgeStrategy.decode(rawValue:)(uint64_t a1)
{
  return sub_1BA61BD1C(a1);
}

uint64_t sub_1BAF369A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA8620DC((uint64_t)&unk_1E724D620);
  *a1 = result;
  return result;
}

BOOL sub_1BAF369D0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = sub_1BA8620DC((uint64_t)&unk_1E724BE80);
  LOBYTE(v1) = sub_1BA617A54(v1, v2);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

uint64_t sub_1BAF36A1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1BA617E64(v2);
  swift_bridgeObjectRelease();
  v5 = v3;
  swift_retain();
  sub_1BA617EF0(&v5);
  result = swift_release();
  *a1 = v5;
  return result;
}

uint64_t sub_1BAF36A9C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_1BA61BD1C(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1BAF36B6C(char *__src, char *a2, char *a3, char *__dst)
{
  size_t v8;
  int64_t v9;
  uint64_t result;
  char *v12;
  char *v13;
  char *v14;

  v14 = __src;
  v8 = a2 - __src;
  v9 = a3 - a2;
  v13 = __dst;
  if (a2 - __src >= a3 - a2)
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= __dst)
        memmove(__dst, a2, a3 - a2);
      v12 = &__dst[v9];
      v14 = a2;
      if (__src < a2 && a3 != a2)
        __asm { BR              X10 }
      goto LABEL_16;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst)
      memmove(__dst, __src, v8);
    v12 = &__dst[v8];
    if (a2 != __src && a2 < a3)
      __asm { BR              X10 }
LABEL_16:
    sub_1BACAA674(&v14, &v13, &v12);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed31FormatCodingButtLineCapStrategyV12shouldEncode12wrappedValueSbAA0cfG0O_tFZ_0(_BYTE *a1)
{
  char v1;
  char v2;

  if (*a1)
  {
    v1 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v2 = v1 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  return v2 & 1;
}

uint64_t _s8NewsFeed37FormatCodingMiddleBorderInsetStrategyV12shouldEncode12wrappedValueSbAA0cfG0O_tFZ_0(_BYTE *a1)
{
  char v1;
  char v2;

  if (*a1 && *a1 == 1)
  {
    swift_bridgeObjectRelease();
    v1 = 0;
  }
  else
  {
    v2 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v1 = v2 ^ 1;
  }
  return v1 & 1;
}

unint64_t sub_1BAF37140(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF37164();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF37164()
{
  unint64_t result;

  result = qword_1EF2B6768;
  if (!qword_1EF2B6768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingButtLineCapStrategy, &type metadata for FormatCodingButtLineCapStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B6768);
  }
  return result;
}

unint64_t sub_1BAF371B0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF371D4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF371D4()
{
  unint64_t result;

  result = qword_1EF2B67D0;
  if (!qword_1EF2B67D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingMiddleBorderInsetStrategy, &type metadata for FormatCodingMiddleBorderInsetStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B67D0);
  }
  return result;
}

unint64_t sub_1BAF37220(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF37244();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF37244()
{
  unint64_t result;

  result = qword_1EF2B6838;
  if (!qword_1EF2B6838)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingAllBorderEdgeStrategy, &type metadata for FormatCodingAllBorderEdgeStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B6838);
  }
  return result;
}

uint64_t sub_1BAF37288()
{
  return sub_1BA603240((unint64_t *)&qword_1ED3B96B0, (uint64_t (*)(uint64_t))sub_1BAF372BC, (uint64_t (*)(void))sub_1BA83323C, MEMORY[0x1E0DEB3D8]);
}

void sub_1BAF372BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B96A8)
  {
    sub_1BA61CDBC();
    v0 = sub_1BB87309C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B96A8);
  }
}

uint64_t sub_1BAF37314()
{
  return sub_1BA603240((unint64_t *)&qword_1ED3A0868, (uint64_t (*)(uint64_t))sub_1BAF37348, (uint64_t (*)(void))sub_1BA8332C4, MEMORY[0x1E0DEAF10]);
}

void sub_1BAF37348()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A0860)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A0860);
  }
}

uint64_t sub_1BAF3739C()
{
  return sub_1BA603240(&qword_1ED39BFA8, (uint64_t (*)(uint64_t))sub_1BAF372BC, (uint64_t (*)(void))sub_1BA8332C4, MEMORY[0x1E0DEB3B8]);
}

ValueMetadata *type metadata accessor for FormatCodingButtLineCapStrategy()
{
  return &type metadata for FormatCodingButtLineCapStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingMiddleBorderInsetStrategy()
{
  return &type metadata for FormatCodingMiddleBorderInsetStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingAllBorderEdgeStrategy()
{
  return &type metadata for FormatCodingAllBorderEdgeStrategy;
}

NewsFeed::PuzzlePublishDateFormat_optional __swiftcall PuzzlePublishDateFormat.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::PuzzlePublishDateFormat_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

void *static PuzzlePublishDateFormat.allCases.getter()
{
  return &unk_1E726F8B0;
}

uint64_t PuzzlePublishDateFormat.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6D756964656DLL;
  if (*v0 != 1)
    v1 = 1735290732;
  if (*v0)
    return v1;
  else
    return 0x74726F6873;
}

uint64_t sub_1BAF374B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F5A48(*a1, *a2);
}

uint64_t sub_1BAF374BC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF3754C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF375B8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzlePublishDateFormat_optional sub_1BAF37644(Swift::String *a1)
{
  return PuzzlePublishDateFormat.init(rawValue:)(*a1);
}

void sub_1BAF37650(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x6D756964656DLL;
  if (v2 != 1)
  {
    v5 = 1735290732;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x74726F6873;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

void sub_1BAF376A0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252940;
}

uint64_t FCPuzzleProviding.traits.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v1;
  id v3;
  uint64_t result;
  char v5;

  v3 = objc_msgSend(v1, sel_puzzleType);
  swift_getObjectType();
  FCPuzzleTypeProviding.puzzleKind.getter();
  result = swift_unknownObjectRelease();
  *a1 = qword_1BB8D4E08[v5];
  return result;
}

Swift::String_optional __swiftcall FCPuzzleProviding.publishDateString(format:)(NewsFeed::PuzzlePublishDateFormat format)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  id v20;
  void *v21;
  void (*v22)(char *, char *, uint64_t);
  void *v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  id v28;
  id v29;
  void *v30;
  id v31;
  char *v32;
  void *v33;
  id v34;
  uint64_t v35;
  void *v36;
  uint64_t v37;
  void *v38;
  Swift::String_optional result;
  uint64_t v40;
  char *v41;

  v2 = v1;
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0558, (void (*)(uint64_t))MEMORY[0x1E0CB1470]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - v4;
  v6 = sub_1BB86C9DC();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v40 - v11;
  v13 = sub_1BB86C8B0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v41 = (char *)&v40 - v19;
  v20 = objc_msgSend(v2, sel_publishDate, v18);
  if (!v20)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_8;
  }
  v21 = v20;
  sub_1BB86C874();

  v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v22(v12, v16, v13);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_8:
    sub_1BA76D750((uint64_t)v12);
    v35 = 0;
    v28 = 0;
    goto LABEL_11;
  }
  v22(v41, v12, v13);
  swift_bridgeObjectRetain();
  sub_1BB86C994();
  sub_1BB86C8F8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1BB86CB20();
  v23 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v24 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v25 = sub_1BB86CB50();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v5, 1, v25) != 1)
  {
    v27 = (void *)sub_1BB86CB38();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v25);
  }
  v28 = objc_msgSend((id)objc_opt_self(), sel_dateFormatterWithFormat_localeIdentifier_timezone_forReuse_, v23, v24, v27, 1);

  if (v28)
  {
    v29 = v28;
    v30 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v29, sel_setLocalizedDateFormatFromTemplate_, v30);

    v31 = v29;
    v32 = v41;
    v33 = (void *)sub_1BB86C808();
    v34 = objc_msgSend(v31, sel_stringFromDate_, v33);

    v35 = sub_1BB8729A0();
    v28 = v36;

  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = 0;
    v32 = v41;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
LABEL_11:
  v37 = v35;
  v38 = v28;
  result.value._object = v38;
  result.value._countAndFlagsBits = v37;
  return result;
}

unint64_t sub_1BAF37B48()
{
  unint64_t result;

  result = qword_1EF2B68A0;
  if (!qword_1EF2B68A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzlePublishDateFormat, &type metadata for PuzzlePublishDateFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B68A0);
  }
  return result;
}

unint64_t sub_1BAF37B90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B68A8;
  if (!qword_1EF2B68A8)
  {
    sub_1BAF37BD8();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B68A8);
  }
  return result;
}

void sub_1BAF37BD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B68B0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B68B0);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzlePublishDateFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF37C78 + 4 * byte_1BB8D4CF5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF37CAC + 4 * asc_1BB8D4CF0[v4]))();
}

uint64_t sub_1BAF37CAC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF37CB4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF37CBCLL);
  return result;
}

uint64_t sub_1BAF37CC8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF37CD0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF37CD4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF37CDC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzlePublishDateFormat()
{
  return &type metadata for PuzzlePublishDateFormat;
}

uint64_t FeedGroupConfigSidecarConfig.placements.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FeedGroupConfigSidecarConfig __swiftcall FeedGroupConfigSidecarConfig.init(placements:)(NewsFeed::FeedGroupConfigSidecarConfig placements)
{
  NewsFeed::FeedGroupConfigSidecarConfig *v1;

  v1->placements._rawValue = placements.placements._rawValue;
  return placements;
}

uint64_t sub_1BAF37D08()
{
  return 0x6E656D6563616C70;
}

uint64_t sub_1BAF37D24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x6E656D6563616C70 && a2 == 0xEA00000000007374)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAF37DC4()
{
  sub_1BAF37F38();
  return sub_1BB874710();
}

uint64_t sub_1BAF37DEC()
{
  sub_1BAF37F38();
  return sub_1BB87471C();
}

uint64_t FeedGroupConfigSidecarConfig.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];

  sub_1BAF3816C(0, &qword_1ED3AB618, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v10 - v6;
  v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF37F38();
  sub_1BB8746C8();
  v10[1] = v8;
  sub_1BAF37F7C();
  sub_1BAF381C8(&qword_1ED3AAE18, (uint64_t (*)(void))sub_1BAF37FD0, MEMORY[0x1E0DEAF10]);
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAF37F38()
{
  unint64_t result;

  result = qword_1ED3A52A8;
  if (!qword_1ED3A52A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4F70, &type metadata for FeedGroupConfigSidecarConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A52A8);
  }
  return result;
}

void sub_1BAF37F7C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAE10)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAE10);
  }
}

unint64_t sub_1BAF37FD0()
{
  unint64_t result;

  result = qword_1ED3A52F0;
  if (!qword_1ED3A52F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigSidecarConfigPlacement, &type metadata for FeedGroupConfigSidecarConfigPlacement);
    atomic_store(result, (unint64_t *)&qword_1ED3A52F0);
  }
  return result;
}

uint64_t FeedGroupConfigSidecarConfig.init(from:)@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  sub_1BAF3816C(0, &qword_1ED3AB3E0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF37F38();
  sub_1BB87468C();
  if (!v2)
  {
    sub_1BAF37F7C();
    sub_1BAF381C8(&qword_1ED3AAE20, (uint64_t (*)(void))sub_1BAF3822C, MEMORY[0x1E0DEAF40]);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *a2 = v11[1];
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAF3816C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF37F38();
    v7 = a3(a1, &type metadata for FeedGroupConfigSidecarConfig.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAF381C8(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BAF37F7C();
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAF3822C()
{
  unint64_t result;

  result = qword_1ED3A52F8;
  if (!qword_1ED3A52F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupConfigSidecarConfigPlacement, &type metadata for FeedGroupConfigSidecarConfigPlacement);
    atomic_store(result, (unint64_t *)&qword_1ED3A52F8);
  }
  return result;
}

uint64_t sub_1BAF38270@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FeedGroupConfigSidecarConfig.init(from:)(a1, a2);
}

uint64_t sub_1BAF38284(_QWORD *a1)
{
  return FeedGroupConfigSidecarConfig.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupConfigSidecarConfig.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF382D8 + 4 * byte_1BB8D4E30[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF382F8 + 4 * byte_1BB8D4E35[v4]))();
}

_BYTE *sub_1BAF382D8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF382F8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF38300(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF38308(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF38310(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF38318(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedGroupConfigSidecarConfig.CodingKeys()
{
  return &type metadata for FeedGroupConfigSidecarConfig.CodingKeys;
}

unint64_t sub_1BAF38338()
{
  unint64_t result;

  result = qword_1EF2B68B8;
  if (!qword_1EF2B68B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4F48, &type metadata for FeedGroupConfigSidecarConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B68B8);
  }
  return result;
}

unint64_t sub_1BAF38380()
{
  unint64_t result;

  result = qword_1ED3A52B8;
  if (!qword_1ED3A52B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4EB8, &type metadata for FeedGroupConfigSidecarConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A52B8);
  }
  return result;
}

unint64_t sub_1BAF383C8()
{
  unint64_t result;

  result = qword_1ED3A52B0;
  if (!qword_1ED3A52B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D4EE0, &type metadata for FeedGroupConfigSidecarConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A52B0);
  }
  return result;
}

double sub_1BAF3840C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v8;

  v1 = type metadata accessor for DebugFormatLayoutOrderingModel();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF386FC(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = *((_QWORD *)v3 + 14);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = *(double *)(*(_QWORD *)(v4
                               + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
    swift_release();
  }
  else
  {
    sub_1BAF38740();
    v5 = *(double *)(*(_QWORD *)(*(_QWORD *)&v3[*(int *)(v6 + 48)]
                               + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                   + 16);
    swift_release();
    sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
  }
  return v5;
}

BOOL sub_1BAF38530()
{
  double v0;
  double v1;
  double v2;
  _BOOL4 v3;
  double v4;

  v0 = sub_1BAF3840C();
  v2 = v1;
  v3 = v0 <= sub_1BAF3840C();
  if (v2 == v4)
    return v3;
  else
    return v2 < v4;
}

BOOL sub_1BAF38580()
{
  double v0;
  double v1;
  double v2;
  _BOOL4 v3;
  double v4;

  v0 = sub_1BAF3840C();
  v2 = v1;
  v3 = v0 > sub_1BAF3840C();
  if (v2 == v4)
    return v3;
  else
    return v2 >= v4;
}

BOOL sub_1BAF385D0()
{
  double v0;
  double v1;
  double v2;
  _BOOL4 v3;
  double v4;

  v0 = sub_1BAF3840C();
  v2 = v1;
  v3 = v0 > sub_1BAF3840C();
  if (v2 == v4)
    return v3;
  else
    return v2 >= v4;
}

BOOL sub_1BAF38620()
{
  double v0;
  double v1;
  double v2;
  _BOOL4 v3;
  double v4;

  v0 = sub_1BAF3840C();
  v2 = v1;
  v3 = v0 <= sub_1BAF3840C();
  if (v2 == v4)
    return v3;
  else
    return v2 < v4;
}

unint64_t sub_1BAF38678()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B68C0;
  if (!qword_1EF2B68C0)
  {
    v1 = type metadata accessor for DebugFormatLayoutOrderingModel();
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5090, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B68C0);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatLayoutOrderingModel()
{
  uint64_t result;

  result = qword_1EF2B6948;
  if (!qword_1EF2B6948)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF386FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatLayoutOrderingModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAF38740()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B68C8)
  {
    type metadata accessor for FormatItemNodeLayoutContext();
    type metadata accessor for FormatItemNodeDataLayoutAttributes();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B68C8);
  }
}

uint64_t sub_1BAF387B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v22;

  sub_1BAF389F0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BAF386FC(a1, (uint64_t)v6);
  sub_1BAF386FC(a2, v8);
  type metadata accessor for DebugFormatLayoutOrderingModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v9 = *((_QWORD *)v6 + 14);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = *(_QWORD *)(v8 + 112);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(v9 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      v12 = *(_QWORD *)(v10 + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      if (*(_QWORD *)(v11 + 48) == *(_QWORD *)(v12 + 48) && *(_QWORD *)(v11 + 56) == *(_QWORD *)(v12 + 56))
      {
        swift_release();
        swift_release();
        v14 = 1;
      }
      else
      {
        v14 = sub_1BB874398();
        swift_release();
        swift_release();
      }
      return v14 & 1;
    }
    swift_release();
LABEL_11:
    sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
    v14 = 0;
    return v14 & 1;
  }
  sub_1BAF38740();
  v16 = *(int *)(v15 + 48);
  v17 = *(_QWORD *)&v6[v16];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
    goto LABEL_11;
  }
  v18 = *(_QWORD *)(v17 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  v19 = *(_QWORD *)(*(_QWORD *)(v8 + v16)
                  + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
  if (*(_QWORD *)(v18 + 48) == *(_QWORD *)(v19 + 48) && *(_QWORD *)(v18 + 56) == *(_QWORD *)(v19 + 56))
    v14 = 1;
  else
    v14 = sub_1BB874398();
  swift_release();
  swift_release();
  sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
  return v14 & 1;
}

void sub_1BAF389F0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B68D0)
  {
    type metadata accessor for DebugFormatLayoutOrderingModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B68D0);
  }
}

uint64_t sub_1BAF38A50(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  int *v71;
  unsigned int (*v72)(char *, uint64_t, int *);
  uint64_t v73;
  void *v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  id v78;
  id v79;
  __int128 v80;
  int v81;
  void *v82;
  uint64_t v83;
  void *v84;
  uint64_t v85;
  id v86;
  id v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  char *v118;
  unint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  unint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  void (*v131)(char *, char *, void *);
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  id v140;
  _QWORD *v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  id v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  __int128 v153;
  _OWORD *v154;
  _OWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  _QWORD *v162;
  _QWORD *v163;
  uint64_t v164;
  __int128 v165;
  _OWORD *v166;
  _OWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  char *v176;
  int *v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  _OWORD *v193;
  _OWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  id v214;
  id v215;
  __int128 v216;
  uint64_t v217;
  void *v218;
  id v219;
  __int128 v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  id v224;
  _QWORD *v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  id v232;
  _QWORD *v233;
  unint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  id v240;
  id v241;
  __int128 v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  char *v247;
  id v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  id v268;
  _QWORD *v269;
  unint64_t v270;
  uint64_t v271;
  void *v272;
  void (*v273)(_QWORD *, _QWORD, uint64_t, int *);
  id v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  __int128 v285;
  uint64_t v286;
  _OWORD *v287;
  _OWORD *v288;
  __int128 v289;
  uint64_t v290;
  _OWORD *v291;
  _OWORD *v292;
  __int128 v293;
  uint64_t v294;
  uint64_t result;
  uint64_t v296;
  unsigned int (*v297)(char *, uint64_t, int *);
  char *v298;
  char *v299;
  void (*v300)(char *, char *, uint64_t);
  uint64_t v301;
  int *v302;
  _QWORD *__dst;
  char *__dsta;
  _QWORD *__dstb;
  char *__dstc;
  int *v307;
  void *v308;
  char *v309;
  _QWORD *v310;
  void *v311;
  char *v312;
  char *v313;
  void (*v314)(char *, char *, void *);
  char *v315;
  int *v316;
  unsigned int (*v317)(char *, uint64_t, uint64_t);
  char *v318;
  unsigned int (*v319)(char *, uint64_t, uint64_t);
  _QWORD *v320;
  uint64_t v321;
  char *v322;
  int *v323;
  uint64_t v324;
  char *v325;
  char *v326;
  int *v327;
  _OWORD *v328;
  int *v329;
  int *v330;
  int *v331;
  int *v332;
  int *v333;
  int *v334;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v7;
      *(_QWORD *)(a1 + 24) = a2[3];
      v8 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v8;
      v9 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v9;
      v10 = a2[13];
      *(_QWORD *)(a1 + 96) = a2[12];
      *(_QWORD *)(a1 + 104) = v10;
      *(_QWORD *)(a1 + 112) = a2[14];
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v12 = a2[2];
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = a2[3];
      v13 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
      v14 = v13[7];
      v15 = (char *)(a1 + v14);
      v16 = (char *)a2 + v14;
      v17 = type metadata accessor for FeedItem(0);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v18 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v18;
          v19 = *((_QWORD *)v16 + 3);
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_QWORD *)v15 + 3) = v19;
          v15[32] = v16[32];
          v20 = v16 + 40;
          v21 = *((_QWORD *)v16 + 6);
          swift_bridgeObjectRetain();
          if (v21 >= 0x11)
          {
            *((_QWORD *)v15 + 5) = *v20;
            *((_QWORD *)v15 + 6) = v21;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 40) = *(_OWORD *)v20;
          }
          goto LABEL_147;
        case 1u:
          v58 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v58;
          v59 = *((_QWORD *)v16 + 3);
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_QWORD *)v15 + 3) = v59;
          v15[32] = v16[32];
          v60 = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 6) = v60;
          v61 = *((_QWORD *)v16 + 8);
          *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
          *((_QWORD *)v15 + 8) = v61;
          v62 = v16 + 72;
          v63 = *((_QWORD *)v16 + 10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v63 >= 0x11)
          {
            *((_QWORD *)v15 + 9) = *v62;
            *((_QWORD *)v15 + 10) = v63;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 72) = *(_OWORD *)v62;
          }
          goto LABEL_147;
        case 2u:
          v329 = v13;
          v22 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v22;
          v23 = (int *)type metadata accessor for FeedBannerAd();
          v24 = v23[5];
          v322 = &v15[v24];
          v25 = &v16[v24];
          v26 = sub_1BB8721C0();
          v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v322, v25, v26);
          *(_QWORD *)&v15[v23[6]] = *(_QWORD *)&v16[v23[6]];
          v28 = v23[7];
          v29 = &v15[v28];
          v30 = &v16[v28];
          *(_QWORD *)v29 = *(_QWORD *)v30;
          v29[8] = v30[8];
          v31 = v23[8];
          v32 = &v15[v31];
          v33 = &v16[v31];
          v34 = *((_QWORD *)v33 + 1);
          if (v34 >= 0x11)
          {
            *(_QWORD *)v32 = *(_QWORD *)v33;
            *((_QWORD *)v32 + 1) = v34;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v32 = *(_OWORD *)v33;
          }
          v13 = v329;
          goto LABEL_147;
        case 3u:
          v331 = v13;
          v64 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v64;
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          v15[24] = v16[24];
          v65 = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
          *((_QWORD *)v15 + 5) = v65;
          *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
          v15[56] = v16[56];
          v323 = (int *)type metadata accessor for FeedHeadline(0);
          v66 = v323[10];
          v67 = &v15[v66];
          v68 = &v16[v66];
          *v67 = v16[v66];
          v67[1] = v16[v66 + 1];
          v316 = (int *)type metadata accessor for FeedHeadline.State(0);
          v69 = v316[6];
          __dsta = &v67[v69];
          v70 = &v68[v69];
          v71 = (int *)type metadata accessor for SharedItem();
          v301 = *((_QWORD *)v71 - 1);
          v72 = *(unsigned int (**)(char *, uint64_t, int *))(v301 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v72(v70, 1, v71))
          {
            v73 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dsta, v70, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            v180 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(__dsta, v70, v180);
            __dsta[v71[5]] = v70[v71[5]];
            v181 = v71[6];
            v308 = *(void **)&v70[v181];
            *(_QWORD *)&__dsta[v181] = v308;
            v182 = v71[7];
            v312 = &v70[v182];
            v315 = &__dsta[v182];
            v183 = sub_1BB86C67C();
            v300 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16);
            v184 = v308;
            v300(v315, v312, v183);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v301 + 56))(__dsta, 0, 1, v71);
          }
          v67[v316[7]] = v68[v316[7]];
          v67[v316[8]] = v68[v316[8]];
          v67[v316[9]] = v68[v316[9]];
          v67[v316[10]] = v68[v316[10]];
          v185 = v323[11];
          v186 = &v15[v185];
          v187 = &v16[v185];
          v188 = sub_1BB871B24();
          v189 = *(_QWORD *)(v188 - 8);
          v13 = v331;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v186, v187, v188);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
          }
          v197 = v323[12];
          v198 = &v15[v197];
          v199 = &v16[v197];
          v200 = *((_QWORD *)v199 + 1);
          if (v200 >= 0x11)
          {
            *(_QWORD *)v198 = *(_QWORD *)v199;
            *((_QWORD *)v198 + 1) = v200;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v198 = *(_OWORD *)v199;
          }
          v201 = v323[13];
          v202 = *(_QWORD *)&v16[v201];
          if (v202 >= 2)
          {
            if (v202 == 2)
            {
              *(_QWORD *)&v15[v201] = 2;
            }
            else
            {
              *(_QWORD *)&v15[v201] = v202;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v15[v201] = v202;
          }
          v217 = v323[14];
          v218 = *(void **)&v16[v217];
          *(_QWORD *)&v15[v217] = v218;
          v219 = v218;
          goto LABEL_147;
        case 4u:
          v35 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v35;
          v15[16] = v16[16];
          v36 = v16 + 24;
          v37 = *((_QWORD *)v16 + 4);
          if (v37 >= 0x11)
          {
            *((_QWORD *)v15 + 3) = *v36;
            *((_QWORD *)v15 + 4) = v37;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 24) = *(_OWORD *)v36;
          }
          v126 = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 6) = v126;
          v127 = type metadata accessor for FeedWebEmbed();
          v128 = *(int *)(v127 + 32);
          v318 = &v16[v128];
          v326 = &v15[v128];
          v129 = sub_1BB86C67C();
          v130 = *(_QWORD *)(v129 - 8);
          v131 = *(void (**)(char *, char *, void *))(v130 + 16);
          swift_bridgeObjectRetain();
          v314 = v131;
          v131(v326, v318, (void *)v129);
          v327 = (int *)v127;
          v132 = *(int *)(v127 + 36);
          v133 = &v15[v132];
          v134 = &v16[v132];
          v332 = v13;
          v311 = (void *)v129;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(&v16[v132], 1, v129))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v133, v134, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
          }
          else
          {
            v131(v133, v134, (void *)v129);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v133, 0, 1, v129);
          }
          *(_QWORD *)&v15[v327[10]] = *(_QWORD *)&v16[v327[10]];
          *(_QWORD *)&v15[v327[11]] = *(_QWORD *)&v16[v327[11]];
          v158 = v327[12];
          v159 = &v15[v158];
          v160 = &v16[v158];
          v161 = type metadata accessor for FeedHeadline(0);
          v162 = *(_QWORD **)(v161 - 8);
          v319 = (unsigned int (*)(char *, uint64_t, uint64_t))v162[6];
          swift_retain();
          v163 = v160;
          swift_retain();
          if (v319(v160, 1, v161))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v164 - 8) + 64));
          }
          else
          {
            __dstb = v162;
            v307 = (int *)v161;
            v170 = *((_QWORD *)v160 + 1);
            *(_QWORD *)v159 = *(_QWORD *)v160;
            *((_QWORD *)v159 + 1) = v170;
            *((_QWORD *)v159 + 2) = *((_QWORD *)v160 + 2);
            v159[24] = v160[24];
            v171 = *((_QWORD *)v160 + 5);
            *((_QWORD *)v159 + 4) = *((_QWORD *)v160 + 4);
            *((_QWORD *)v159 + 5) = v171;
            *((_QWORD *)v159 + 6) = *((_QWORD *)v160 + 6);
            v159[56] = v160[56];
            v172 = *(int *)(v161 + 40);
            v320 = v159;
            v173 = &v159[v172];
            v174 = &v160[v172];
            *v173 = v160[v172];
            v173[1] = v160[v172 + 1];
            v302 = (int *)type metadata accessor for FeedHeadline.State(0);
            v175 = v302[6];
            v299 = &v173[v175];
            v176 = &v174[v175];
            v177 = (int *)type metadata accessor for SharedItem();
            v296 = *((_QWORD *)v177 - 1);
            v297 = *(unsigned int (**)(char *, uint64_t, int *))(v296 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v297(v176, 1, v177))
            {
              v178 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v299, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
            }
            else
            {
              v243 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(v299, v176, v243);
              v299[v177[5]] = v176[v177[5]];
              v244 = v177[6];
              v245 = *(void **)&v176[v244];
              *(_QWORD *)&v299[v244] = v245;
              v246 = v177[7];
              v298 = &v299[v246];
              v247 = &v176[v246];
              v248 = v245;
              v314(v298, v247, v311);
              v163 = v160;
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v296 + 56))(v299, 0, 1, v177);
            }
            v173[v302[7]] = v174[v302[7]];
            v173[v302[8]] = v174[v302[8]];
            v173[v302[9]] = v174[v302[9]];
            v173[v302[10]] = v174[v302[10]];
            v249 = v307[11];
            v250 = (char *)v320 + v249;
            v251 = (char *)v163 + v249;
            v252 = sub_1BB871B24();
            v253 = *(_QWORD *)(v252 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48))(v251, 1, v252))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v250, v251, v252);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v250, 0, 1, v252);
            }
            v255 = v307[12];
            v256 = (_QWORD *)((char *)v320 + v255);
            v257 = (_QWORD *)((char *)v163 + v255);
            v258 = v257[1];
            if (v258 >= 0x11)
            {
              *v256 = *v257;
              v256[1] = v258;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v256 = *(_OWORD *)v257;
            }
            v259 = v307[13];
            v260 = *(_QWORD *)((char *)v163 + v259);
            if (v260 >= 2)
            {
              if (v260 == 2)
              {
                *(_QWORD *)((char *)v320 + v259) = 2;
              }
              else
              {
                *(_QWORD *)((char *)v320 + v259) = v260;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)((char *)v320 + v259) = v260;
            }
            v271 = v307[14];
            v272 = *(void **)((char *)v163 + v271);
            *(_QWORD *)((char *)v320 + v271) = v272;
            v273 = (void (*)(_QWORD *, _QWORD, uint64_t, int *))__dstb[7];
            v274 = v272;
            v273(v320, 0, 1, v307);
          }
          v275 = v327[13];
          v276 = &v15[v275];
          v277 = &v16[v275];
          v278 = type metadata accessor for WebEmbedDataVisualization();
          v279 = *(_QWORD *)(v278 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48))(v277, 1, v278))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
          }
          else
          {
            v281 = swift_getEnumCaseMultiPayload();
            v282 = *(_QWORD *)v277;
            if (v281 == 1)
            {
              v283 = *((_QWORD *)v277 + 1);
              *(_QWORD *)v276 = v282;
              *((_QWORD *)v276 + 1) = v283;
              v321 = type metadata accessor for GenericDataVisualization();
              v284 = *(int *)(v321 + 20);
              __dstc = &v277[v284];
              v309 = &v276[v284];
              swift_bridgeObjectRetain();
              v314(v309, __dstc, v311);
              *(_QWORD *)&v276[*(int *)(v321 + 24)] = *(_QWORD *)&v277[*(int *)(v321 + 24)];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_QWORD *)v276 = v282;
              swift_retain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v279 + 56))(v276, 0, 1, v278);
          }
          v15[v327[14]] = v16[v327[14]];
          goto LABEL_146;
        case 5u:
          v74 = *(void **)v16;
          v75 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v75;
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_WORD *)v15 + 12) = *((_WORD *)v16 + 12);
          *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
          v15[40] = v16[40];
          v76 = (void *)*((_QWORD *)v16 + 7);
          *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 7) = v76;
          v15[64] = v16[64];
          v77 = *((_QWORD *)v16 + 10);
          v78 = v74;
          swift_bridgeObjectRetain();
          v79 = v76;
          if (v77 == 1)
          {
            v80 = *(_OWORD *)(v16 + 88);
            *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
            *(_OWORD *)(v15 + 88) = v80;
            *(_OWORD *)(v15 + 104) = *(_OWORD *)(v16 + 104);
          }
          else
          {
            *((_QWORD *)v15 + 9) = *((_QWORD *)v16 + 9);
            *((_QWORD *)v15 + 10) = v77;
            v137 = *((_QWORD *)v16 + 12);
            *((_QWORD *)v15 + 11) = *((_QWORD *)v16 + 11);
            *((_QWORD *)v15 + 12) = v137;
            v139 = (void *)*((_QWORD *)v16 + 13);
            v138 = *((_QWORD *)v16 + 14);
            *((_QWORD *)v15 + 13) = v139;
            *((_QWORD *)v15 + 14) = v138;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v140 = v139;
          }
          v141 = v16 + 120;
          v142 = *((_QWORD *)v16 + 16);
          if (v142 >= 0x11)
          {
            *((_QWORD *)v15 + 15) = *v141;
            *((_QWORD *)v15 + 16) = v142;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 120) = *(_OWORD *)v141;
          }
          v15[136] = v16[136];
          goto LABEL_147;
        case 6u:
          v332 = v13;
          v81 = v16[281];
          if (v81 == 2)
          {
            v204 = *((_QWORD *)v16 + 1);
            *(_QWORD *)v15 = *(_QWORD *)v16;
            *((_QWORD *)v15 + 1) = v204;
            *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
            v15[24] = v16[24];
            *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
            v15[40] = v16[40];
            v205 = *((_QWORD *)v16 + 7);
            *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
            *((_QWORD *)v15 + 7) = v205;
            v206 = *((_QWORD *)v16 + 9);
            *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
            *((_QWORD *)v15 + 9) = v206;
            v207 = *((_QWORD *)v16 + 11);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v207 == 1)
            {
              v208 = *((_OWORD *)v16 + 8);
              *((_OWORD *)v15 + 7) = *((_OWORD *)v16 + 7);
              *((_OWORD *)v15 + 8) = v208;
              v15[144] = v16[144];
              v209 = *((_OWORD *)v16 + 6);
              *((_OWORD *)v15 + 5) = *((_OWORD *)v16 + 5);
              *((_OWORD *)v15 + 6) = v209;
            }
            else
            {
              *((_QWORD *)v15 + 10) = *((_QWORD *)v16 + 10);
              *((_QWORD *)v15 + 11) = v207;
              v227 = *((_QWORD *)v16 + 15);
              swift_bridgeObjectRetain();
              if (v227)
              {
                v228 = *((_QWORD *)v16 + 16);
                *((_QWORD *)v15 + 15) = v227;
                *((_QWORD *)v15 + 16) = v228;
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v227 - 8))((uint64_t)(v15 + 96), (uint64_t)(v16 + 96), v227);
                *((_QWORD *)v15 + 17) = *((_QWORD *)v16 + 17);
              }
              else
              {
                v285 = *((_OWORD *)v16 + 7);
                *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
                *((_OWORD *)v15 + 7) = v285;
                *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
              }
              v15[144] = v16[144];
            }
          }
          else if (v81 == 1)
          {
            v82 = *(void **)v16;
            v83 = *((_QWORD *)v16 + 1);
            *(_QWORD *)v15 = *(_QWORD *)v16;
            *((_QWORD *)v15 + 1) = v83;
            *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
            *((_WORD *)v15 + 12) = *((_WORD *)v16 + 12);
            *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
            v15[40] = v16[40];
            v84 = (void *)*((_QWORD *)v16 + 7);
            *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
            *((_QWORD *)v15 + 7) = v84;
            v15[64] = v16[64];
            v85 = *((_QWORD *)v16 + 10);
            v86 = v82;
            swift_bridgeObjectRetain();
            v87 = v84;
            if (v85 == 1)
            {
              v88 = *(_OWORD *)(v16 + 88);
              *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
              *(_OWORD *)(v15 + 88) = v88;
              *(_OWORD *)(v15 + 104) = *(_OWORD *)(v16 + 104);
            }
            else
            {
              *((_QWORD *)v15 + 9) = *((_QWORD *)v16 + 9);
              *((_QWORD *)v15 + 10) = v85;
              v221 = *((_QWORD *)v16 + 12);
              *((_QWORD *)v15 + 11) = *((_QWORD *)v16 + 11);
              *((_QWORD *)v15 + 12) = v221;
              v223 = (void *)*((_QWORD *)v16 + 13);
              v222 = *((_QWORD *)v16 + 14);
              *((_QWORD *)v15 + 13) = v223;
              *((_QWORD *)v15 + 14) = v222;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v224 = v223;
            }
            v225 = v16 + 120;
            v226 = *((_QWORD *)v16 + 16);
            if (v226 >= 0x11)
            {
              *((_QWORD *)v15 + 15) = *v225;
              *((_QWORD *)v15 + 16) = v226;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v15 + 120) = *(_OWORD *)v225;
            }
            v235 = (void *)*((_QWORD *)v16 + 18);
            v15[136] = v16[136];
            if (v235)
            {
              v236 = *((_QWORD *)v16 + 19);
              v237 = *((_QWORD *)v16 + 20);
              *((_QWORD *)v15 + 18) = v235;
              *((_QWORD *)v15 + 19) = v236;
              *((_QWORD *)v15 + 20) = v237;
              *((_WORD *)v15 + 84) = *((_WORD *)v16 + 84);
              *((_QWORD *)v15 + 22) = *((_QWORD *)v16 + 22);
              v15[184] = v16[184];
              v238 = (void *)*((_QWORD *)v16 + 25);
              *((_QWORD *)v15 + 24) = *((_QWORD *)v16 + 24);
              *((_QWORD *)v15 + 25) = v238;
              v15[208] = v16[208];
              v239 = *((_QWORD *)v16 + 28);
              v240 = v235;
              swift_bridgeObjectRetain();
              v241 = v238;
              if (v239 == 1)
              {
                v242 = *(_OWORD *)(v16 + 232);
                *(_OWORD *)(v15 + 216) = *(_OWORD *)(v16 + 216);
                *(_OWORD *)(v15 + 232) = v242;
                *(_OWORD *)(v15 + 248) = *(_OWORD *)(v16 + 248);
              }
              else
              {
                *((_QWORD *)v15 + 27) = *((_QWORD *)v16 + 27);
                *((_QWORD *)v15 + 28) = v239;
                v265 = *((_QWORD *)v16 + 30);
                *((_QWORD *)v15 + 29) = *((_QWORD *)v16 + 29);
                *((_QWORD *)v15 + 30) = v265;
                v267 = (void *)*((_QWORD *)v16 + 31);
                v266 = *((_QWORD *)v16 + 32);
                *((_QWORD *)v15 + 31) = v267;
                *((_QWORD *)v15 + 32) = v266;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v268 = v267;
              }
              v269 = v16 + 264;
              v270 = *((_QWORD *)v16 + 34);
              if (v270 >= 0x11)
              {
                *((_QWORD *)v15 + 33) = *v269;
                *((_QWORD *)v15 + 34) = v270;
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v15 + 264) = *(_OWORD *)v269;
              }
              v15[280] = v16[280];
            }
            else
            {
              v261 = *((_OWORD *)v16 + 16);
              *((_OWORD *)v15 + 15) = *((_OWORD *)v16 + 15);
              *((_OWORD *)v15 + 16) = v261;
              *(_OWORD *)(v15 + 265) = *(_OWORD *)(v16 + 265);
              v262 = *((_OWORD *)v16 + 12);
              *((_OWORD *)v15 + 11) = *((_OWORD *)v16 + 11);
              *((_OWORD *)v15 + 12) = v262;
              v263 = *((_OWORD *)v16 + 14);
              *((_OWORD *)v15 + 13) = *((_OWORD *)v16 + 13);
              *((_OWORD *)v15 + 14) = v263;
              v264 = *((_OWORD *)v16 + 10);
              *((_OWORD *)v15 + 9) = *((_OWORD *)v16 + 9);
              *((_OWORD *)v15 + 10) = v264;
            }
          }
          else
          {
            v210 = *(void **)v16;
            v211 = *((_QWORD *)v16 + 1);
            *(_QWORD *)v15 = *(_QWORD *)v16;
            *((_QWORD *)v15 + 1) = v211;
            *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
            *((_WORD *)v15 + 12) = *((_WORD *)v16 + 12);
            *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
            v15[40] = v16[40];
            v212 = (void *)*((_QWORD *)v16 + 7);
            *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
            *((_QWORD *)v15 + 7) = v212;
            v15[64] = v16[64];
            v213 = *((_QWORD *)v16 + 10);
            v214 = v210;
            swift_bridgeObjectRetain();
            v215 = v212;
            if (v213 == 1)
            {
              v216 = *(_OWORD *)(v16 + 88);
              *(_OWORD *)(v15 + 72) = *(_OWORD *)(v16 + 72);
              *(_OWORD *)(v15 + 88) = v216;
              *(_OWORD *)(v15 + 104) = *(_OWORD *)(v16 + 104);
            }
            else
            {
              *((_QWORD *)v15 + 9) = *((_QWORD *)v16 + 9);
              *((_QWORD *)v15 + 10) = v213;
              v229 = *((_QWORD *)v16 + 12);
              *((_QWORD *)v15 + 11) = *((_QWORD *)v16 + 11);
              *((_QWORD *)v15 + 12) = v229;
              v231 = (void *)*((_QWORD *)v16 + 13);
              v230 = *((_QWORD *)v16 + 14);
              *((_QWORD *)v15 + 13) = v231;
              *((_QWORD *)v15 + 14) = v230;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v232 = v231;
            }
            v233 = v16 + 120;
            v234 = *((_QWORD *)v16 + 16);
            if (v234 >= 0x11)
            {
              *((_QWORD *)v15 + 15) = *v233;
              *((_QWORD *)v15 + 16) = v234;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v15 + 120) = *(_OWORD *)v233;
            }
            v15[136] = v16[136];
          }
          v15[281] = v81;
LABEL_146:
          swift_storeEnumTagMultiPayload();
          v13 = v332;
          break;
        case 7u:
          v89 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v89;
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          v15[24] = v16[24];
          *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
          v15[40] = v16[40];
          v90 = *((_QWORD *)v16 + 7);
          *((_QWORD *)v15 + 6) = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 7) = v90;
          v91 = *((_QWORD *)v16 + 9);
          *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
          *((_QWORD *)v15 + 9) = v91;
          v92 = *((_QWORD *)v16 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v92 == 1)
          {
            v93 = *((_OWORD *)v16 + 8);
            *((_OWORD *)v15 + 7) = *((_OWORD *)v16 + 7);
            *((_OWORD *)v15 + 8) = v93;
            v15[144] = v16[144];
            v94 = *((_OWORD *)v16 + 6);
            *((_OWORD *)v15 + 5) = *((_OWORD *)v16 + 5);
            *((_OWORD *)v15 + 6) = v94;
          }
          else
          {
            *((_QWORD *)v15 + 10) = *((_QWORD *)v16 + 10);
            *((_QWORD *)v15 + 11) = v92;
            v143 = *((_QWORD *)v16 + 15);
            swift_bridgeObjectRetain();
            if (v143)
            {
              v144 = *((_QWORD *)v16 + 16);
              *((_QWORD *)v15 + 15) = v143;
              *((_QWORD *)v15 + 16) = v144;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v143 - 8))((uint64_t)(v15 + 96), (uint64_t)(v16 + 96), v143);
              *((_QWORD *)v15 + 17) = *((_QWORD *)v16 + 17);
            }
            else
            {
              v220 = *((_OWORD *)v16 + 7);
              *((_OWORD *)v15 + 6) = *((_OWORD *)v16 + 6);
              *((_OWORD *)v15 + 7) = v220;
              *((_OWORD *)v15 + 8) = *((_OWORD *)v16 + 8);
            }
            v15[144] = v16[144];
          }
          goto LABEL_147;
        case 8u:
          v333 = v13;
          v95 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v95;
          v96 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v97 = &v15[v96];
          v98 = &v16[v96];
          v99 = *(_QWORD *)&v16[v96 + 8];
          *(_QWORD *)v97 = *(_QWORD *)&v16[v96];
          *((_QWORD *)v97 + 1) = v99;
          v100 = *(_QWORD *)&v16[v96 + 16];
          v101 = *((_QWORD *)v98 + 3);
          *((_QWORD *)v97 + 2) = v100;
          *((_QWORD *)v97 + 3) = v101;
          v324 = type metadata accessor for FormatCustomItem.Resolved();
          v102 = *(int *)(v324 + 24);
          v313 = &v97[v102];
          v103 = &v98[v102];
          v104 = type metadata accessor for FormatCustomItem.Action();
          v310 = *(_QWORD **)(v104 - 8);
          v317 = (unsigned int (*)(char *, uint64_t, uint64_t))v310[6];
          v105 = v104;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v317(v103, 1, v105))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v313, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
          }
          else
          {
            v191 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v313, v103, v191);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))v310[7])(v313, 0, 1, v105);
          }
          v13 = v333;
          *(_QWORD *)&v97[*(int *)(v324 + 28)] = *(_QWORD *)&v98[*(int *)(v324 + 28)];
          swift_bridgeObjectRetain();
          goto LABEL_147;
        case 9u:
          v38 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v38;
          v39 = *((_QWORD *)v16 + 3);
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_QWORD *)v15 + 3) = v39;
          v40 = *((_QWORD *)v16 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v40)
          {
            v41 = *((_QWORD *)v16 + 8);
            *((_QWORD *)v15 + 7) = v40;
            *((_QWORD *)v15 + 8) = v41;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v40 - 8))((uint64_t)(v15 + 32), (uint64_t)(v16 + 32), v40);
          }
          else
          {
            v153 = *((_OWORD *)v16 + 3);
            *((_OWORD *)v15 + 2) = *((_OWORD *)v16 + 2);
            *((_OWORD *)v15 + 3) = v153;
            *((_QWORD *)v15 + 8) = *((_QWORD *)v16 + 8);
          }
          v154 = v15 + 72;
          v155 = v16 + 72;
          v156 = *((_QWORD *)v16 + 12);
          if (v156)
          {
            v157 = *((_QWORD *)v16 + 13);
            *((_QWORD *)v15 + 12) = v156;
            *((_QWORD *)v15 + 13) = v157;
            (**(void (***)(_OWORD *, _OWORD *))(v156 - 8))(v154, v155);
          }
          else
          {
            v165 = *(_OWORD *)(v16 + 88);
            *v154 = *v155;
            *(_OWORD *)(v15 + 88) = v165;
            *((_QWORD *)v15 + 13) = *((_QWORD *)v16 + 13);
          }
          v166 = v15 + 112;
          v167 = v16 + 112;
          v168 = *((_QWORD *)v16 + 17);
          if (v168)
          {
            v169 = *((_QWORD *)v16 + 18);
            *((_QWORD *)v15 + 17) = v168;
            *((_QWORD *)v15 + 18) = v169;
            (**(void (***)(_OWORD *, _OWORD *))(v168 - 8))(v166, v167);
          }
          else
          {
            v179 = *((_OWORD *)v16 + 8);
            *v166 = *v167;
            *((_OWORD *)v15 + 8) = v179;
            *((_QWORD *)v15 + 18) = *((_QWORD *)v16 + 18);
          }
          goto LABEL_147;
        case 0xAu:
          v334 = v13;
          v107 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v107;
          v108 = (int *)type metadata accessor for FeedEngagementBanner();
          v109 = v108[5];
          v325 = &v15[v109];
          v110 = &v16[v109];
          v111 = sub_1BB86EDAC();
          v112 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v111 - 8) + 16);
          swift_bridgeObjectRetain();
          v112(v325, v110, v111);
          *(_QWORD *)&v15[v108[6]] = *(_QWORD *)&v16[v108[6]];
          v113 = v108[7];
          v114 = &v15[v113];
          v115 = &v16[v113];
          *(_QWORD *)v114 = *(_QWORD *)v115;
          v114[8] = v115[8];
          v116 = v108[8];
          v117 = &v15[v116];
          v118 = &v16[v116];
          v119 = *((_QWORD *)v118 + 1);
          if (v119 >= 0x11)
          {
            *(_QWORD *)v117 = *(_QWORD *)v118;
            *((_QWORD *)v117 + 1) = v119;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v117 = *(_OWORD *)v118;
          }
          v13 = v334;
          goto LABEL_147;
        case 0xBu:
          *(_QWORD *)v15 = *(_QWORD *)v16;
          swift_retain();
          goto LABEL_147;
        case 0xCu:
          v42 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v42;
          v43 = *((_QWORD *)v16 + 3);
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_QWORD *)v15 + 3) = v43;
          v15[32] = v16[32];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_147;
        case 0xDu:
          v120 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v120;
          v15[16] = v16[16];
          v121 = v16 + 24;
          v122 = *((_QWORD *)v16 + 4);
          if (v122 >= 0x11)
          {
            *((_QWORD *)v15 + 3) = *v121;
            *((_QWORD *)v15 + 4) = v122;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 24) = *(_OWORD *)v121;
          }
          v145 = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 6) = v145;
          v146 = (void *)*((_QWORD *)v16 + 8);
          *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
          *((_QWORD *)v15 + 8) = v146;
          v15[72] = v16[72];
          *((_QWORD *)v15 + 10) = *((_QWORD *)v16 + 10);
          v328 = v15 + 88;
          v147 = *((_QWORD *)v16 + 14);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v148 = v146;
          swift_bridgeObjectRetain();
          if (v147)
          {
            v149 = *((_QWORD *)v16 + 15);
            *((_QWORD *)v15 + 14) = v147;
            *((_QWORD *)v15 + 15) = v149;
            (**(void (***)(_OWORD *, uint64_t, uint64_t))(v147 - 8))(v328, (uint64_t)(v16 + 88), v147);
          }
          else
          {
            v192 = *(_OWORD *)(v16 + 104);
            *v328 = *(_OWORD *)(v16 + 88);
            *(_OWORD *)(v15 + 104) = v192;
            *((_QWORD *)v15 + 15) = *((_QWORD *)v16 + 15);
          }
          v193 = v15 + 128;
          v194 = v16 + 128;
          v195 = *((_QWORD *)v16 + 19);
          if (v195)
          {
            v196 = *((_QWORD *)v16 + 20);
            *((_QWORD *)v15 + 19) = v195;
            *((_QWORD *)v15 + 20) = v196;
            (**(void (***)(_OWORD *, _OWORD *))(v195 - 8))(v193, v194);
          }
          else
          {
            v203 = *((_OWORD *)v16 + 9);
            *v193 = *v194;
            *((_OWORD *)v15 + 9) = v203;
            *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
          }
          goto LABEL_147;
        case 0xEu:
          v44 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v44;
          v15[16] = v16[16];
          v45 = v16 + 24;
          v46 = *((_QWORD *)v16 + 4);
          if (v46 >= 0x11)
          {
            *((_QWORD *)v15 + 3) = *v45;
            *((_QWORD *)v15 + 4) = v46;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 24) = *(_OWORD *)v45;
          }
          v136 = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 6) = v136;
          *((_QWORD *)v15 + 7) = *((_QWORD *)v16 + 7);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_147;
        case 0xFu:
          v123 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v123;
          v15[16] = v16[16];
          v124 = v16 + 24;
          v125 = *((_QWORD *)v16 + 4);
          if (v125 >= 0x11)
          {
            *((_QWORD *)v15 + 3) = *v124;
            *((_QWORD *)v15 + 4) = v125;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 24) = *(_OWORD *)v124;
          }
          v150 = *((_QWORD *)v16 + 6);
          *((_QWORD *)v15 + 5) = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 6) = v150;
          v151 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)&v15[v151] = *(_QWORD *)&v16[v151];
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v152 = (char *)&loc_1BAF39694 + 4 * word_1BB8D4FE2[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x10u:
          v330 = v13;
          v47 = *((_QWORD *)v16 + 1);
          *(_QWORD *)v15 = *(_QWORD *)v16;
          *((_QWORD *)v15 + 1) = v47;
          v48 = *((_QWORD *)v16 + 3);
          *((_QWORD *)v15 + 2) = *((_QWORD *)v16 + 2);
          *((_QWORD *)v15 + 3) = v48;
          v49 = *((_QWORD *)v16 + 5);
          *((_QWORD *)v15 + 4) = *((_QWORD *)v16 + 4);
          *((_QWORD *)v15 + 5) = v49;
          *((_WORD *)v15 + 24) = *((_WORD *)v16 + 24);
          *(_OWORD *)(v15 + 56) = *(_OWORD *)(v16 + 56);
          v50 = *((_QWORD *)v16 + 10);
          *((_QWORD *)v15 + 9) = *((_QWORD *)v16 + 9);
          *((_QWORD *)v15 + 10) = v50;
          v51 = *((_QWORD *)v16 + 12);
          *((_QWORD *)v15 + 11) = *((_QWORD *)v16 + 11);
          *((_QWORD *)v15 + 12) = v51;
          *((_QWORD *)v15 + 13) = *((_QWORD *)v16 + 13);
          v15[112] = v16[112];
          v52 = *((_QWORD *)v16 + 16);
          *((_QWORD *)v15 + 15) = *((_QWORD *)v16 + 15);
          *((_QWORD *)v15 + 16) = v52;
          v15[136] = v16[136];
          v53 = *((_QWORD *)v16 + 19);
          *((_QWORD *)v15 + 18) = *((_QWORD *)v16 + 18);
          *((_QWORD *)v15 + 19) = v53;
          v54 = *((_QWORD *)v16 + 21);
          *((_QWORD *)v15 + 20) = *((_QWORD *)v16 + 20);
          *((_QWORD *)v15 + 21) = v54;
          v15[184] = v16[184];
          *((_QWORD *)v15 + 22) = *((_QWORD *)v16 + 22);
          v55 = *((_QWORD *)v16 + 25);
          *((_QWORD *)v15 + 24) = *((_QWORD *)v16 + 24);
          *((_QWORD *)v15 + 25) = v55;
          v15[224] = v16[224];
          v56 = *((_QWORD *)v16 + 27);
          *((_QWORD *)v15 + 26) = *((_QWORD *)v16 + 26);
          *((_QWORD *)v15 + 27) = v56;
          __dst = v16 + 232;
          v57 = *((_QWORD *)v16 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v57 >= 0x11)
          {
            *((_QWORD *)v15 + 29) = *__dst;
            *((_QWORD *)v15 + 30) = v57;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v15 + 232) = *(_OWORD *)__dst;
          }
          v13 = v330;
LABEL_147:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          break;
      }
      v286 = v13[8];
      v287 = (_OWORD *)(a1 + v286);
      v288 = (_OWORD *)((char *)a2 + v286);
      v289 = v288[1];
      *v287 = *v288;
      v287[1] = v289;
      v290 = v13[9];
      v291 = (_OWORD *)(a1 + v290);
      v292 = (_OWORD *)((char *)a2 + v290);
      v293 = v292[1];
      *v291 = *v292;
      v291[1] = v293;
      sub_1BAF38740();
      *(_QWORD *)(a1 + *(int *)(v294 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v294 + 48));
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BAF3AC70(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload != 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    v3 = a1 + *(int *)(type metadata accessor for FormatItemNodeLayoutContext() + 28);
    type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 48) < 0x11uLL)
          goto LABEL_73;
        goto LABEL_72;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 80) < 0x11uLL)
          goto LABEL_73;
        goto LABEL_72;
      case 2u:
        swift_bridgeObjectRelease();
        v4 = type metadata accessor for FeedBannerAd();
        v5 = v3 + *(int *)(v4 + 20);
        v6 = sub_1BB8721C0();
        goto LABEL_55;
      case 3u:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v7 = (int *)type metadata accessor for FeedHeadline(0);
        v8 = v7[10];
        v9 = v3 + v8 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v10 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(v9, 1, v10))
        {
          v11 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v9, v11);

          v12 = v9 + *(int *)(v10 + 28);
          v13 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
        }
        v14 = v3 + v7[11];
        v15 = sub_1BB871B24();
        v16 = *(_QWORD *)(v15 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
          (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
        if (*(_QWORD *)(v3 + v7[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + v7[13]) >= 3uLL)
          swift_unknownObjectRelease();

        goto LABEL_73;
      case 4u:
        if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v17 = (int *)type metadata accessor for FeedWebEmbed();
        v18 = v3 + v17[8];
        v19 = sub_1BB86C67C();
        v20 = *(_QWORD *)(v19 - 8);
        v21 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
        v21(v18, v19);
        v22 = v3 + v17[9];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v22, 1, v19))
          v21(v22, v19);
        swift_release();
        swift_release();
        v23 = v3 + v17[12];
        v24 = (int *)type metadata accessor for FeedHeadline(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v24 - 1) + 48))(v23, 1, v24))
        {
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v25 = v24[10];
          v26 = v23 + v25 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v27 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
          {
            v28 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(v26, v28);

            v21(v26 + *(int *)(v27 + 28), v19);
          }
          v29 = v23 + v24[11];
          v30 = sub_1BB871B24();
          v31 = *(_QWORD *)(v30 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
            (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
          if (*(_QWORD *)(v23 + v24[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)(v23 + v24[13]) >= 3uLL)
            swift_unknownObjectRelease();

        }
        v32 = v3 + v17[13];
        v33 = type metadata accessor for WebEmbedDataVisualization();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33))
          goto LABEL_73;
        if (swift_getEnumCaseMultiPayload() != 1)
          goto LABEL_57;
        swift_bridgeObjectRelease();
        v34 = type metadata accessor for GenericDataVisualization();
        v21(v32 + *(int *)(v34 + 20), v19);
        goto LABEL_72;
      case 5u:
        goto LABEL_38;
      case 6u:
        v35 = *(unsigned __int8 *)(v3 + 281);
        if (v35 == 2)
          goto LABEL_42;
        if (v35 == 1)
        {

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
            swift_bridgeObjectRelease();
          v43 = *(void **)(v3 + 144);
          if (!v43)
            goto LABEL_73;

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v3 + 272) < 0x11uLL)
          {
LABEL_73:
            sub_1BAF38740();
            return swift_release();
          }
        }
        else
        {
          if (*(_BYTE *)(v3 + 281))
            goto LABEL_73;
LABEL_38:

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v3 + 128) < 0x11uLL)
            goto LABEL_73;
        }
LABEL_72:
        swift_bridgeObjectRelease();
        goto LABEL_73;
      case 7u:
LABEL_42:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 88) != 1)
        {
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 120))
            __swift_destroy_boxed_opaque_existential_1(v3 + 96);
        }
        goto LABEL_73;
      case 8u:
        swift_bridgeObjectRelease();
        v36 = v3 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v36 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
        v38 = type metadata accessor for FormatCustomItem.Action();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
        {
          v39 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8))(v37, v39);
        }
        goto LABEL_72;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 56))
          __swift_destroy_boxed_opaque_existential_1(v3 + 32);
        if (*(_QWORD *)(v3 + 96))
          __swift_destroy_boxed_opaque_existential_1(v3 + 72);
        if (*(_QWORD *)(v3 + 136))
          __swift_destroy_boxed_opaque_existential_1(v3 + 112);
        goto LABEL_73;
      case 0xAu:
        swift_bridgeObjectRelease();
        v4 = type metadata accessor for FeedEngagementBanner();
        v5 = v3 + *(int *)(v4 + 20);
        v6 = sub_1BB86EDAC();
LABEL_55:
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
        if (*(_QWORD *)(v3 + *(int *)(v4 + 32) + 8) < 0x11uLL)
          goto LABEL_73;
        goto LABEL_72;
      case 0xBu:
LABEL_57:
        swift_release();
        goto LABEL_73;
      case 0xCu:
        goto LABEL_66;
      case 0xDu:
        if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 112))
          __swift_destroy_boxed_opaque_existential_1(v3 + 88);
        if (*(_QWORD *)(v3 + 152))
          __swift_destroy_boxed_opaque_existential_1(v3 + 128);
        goto LABEL_73;
      case 0xEu:
        if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
LABEL_66:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_73;
      case 0xFu:
        if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v40 = v3 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        swift_unknownObjectRelease();
        v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            type metadata accessor for PuzzleStatisticValue(0);
            goto LABEL_93;
          case 1u:
            type metadata accessor for PuzzleStatisticValue(0);
            v44 = swift_getEnumCaseMultiPayload();
            if (v44 == 5 || v44 == 4)
            {
              v45 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v41, 1, v45))
              {
                v46 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v41, v46);
              }
            }
            v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            v48 = v41 + *(int *)(v47 + 20);
            v49 = swift_getEnumCaseMultiPayload();
            if (v49 == 5 || v49 == 4)
            {
              v50 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v48, 1, v50))
              {
                v51 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v48, v51);
              }
            }
            v41 += *(int *)(v47 + 24);
LABEL_93:
            v52 = swift_getEnumCaseMultiPayload();
            if (v52 == 5 || v52 == 4)
            {
              v53 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v41, 1, v53))goto LABEL_104;
            }
            goto LABEL_73;
          case 2u:
            v54 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v41, 1, v54))
            {
              goto LABEL_73;
            }
            v55 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v41, v55);
            v56 = type metadata accessor for PuzzleLeaderboardEntry();
            swift_bridgeObjectRelease();
            v57 = v41 + *(int *)(v56 + 24);
            swift_bridgeObjectRelease();
            v58 = *(_QWORD *)(v57 + 24);
            if (v58 >> 60 != 15)
              sub_1BA69D314(*(_QWORD *)(v57 + 16), v58);
            goto LABEL_72;
          case 3u:
            v59 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
            v60 = v41 + *(int *)(v59 + 24);
            v61 = type metadata accessor for PuzzleStreak();
            v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
            if (!v62(v60, 1, v61))
            {
              v63 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v60, v63);
            }
            v41 += *(int *)(v59 + 28);
            if (!v62(v41, 1, v61))
            {
LABEL_104:
              v64 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v41, v64);
            }
            goto LABEL_73;
          default:
            goto LABEL_73;
        }
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 240) >= 0x11uLL)
          goto LABEL_72;
        goto LABEL_73;
      default:
        goto LABEL_73;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_1BAF3B754(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  int *v67;
  uint64_t v68;
  char *v69;
  int *v70;
  unsigned int (*v71)(char *, uint64_t, int *);
  uint64_t v72;
  void *v73;
  uint64_t v74;
  void *v75;
  uint64_t v76;
  id v77;
  id v78;
  __int128 v79;
  int v80;
  void *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  id v85;
  id v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  __int128 v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void (*v130)(char *, char *, void *);
  void *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  id v139;
  _QWORD *v140;
  unint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  id v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  __int128 v152;
  _OWORD *v153;
  _OWORD *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;
  __int128 v163;
  _OWORD *v164;
  _OWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  _QWORD *v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  char *v173;
  int *v174;
  uint64_t v175;
  char *v176;
  int *v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  id v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  _OWORD *v193;
  _OWORD *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  unint64_t v200;
  uint64_t v201;
  unint64_t v202;
  __int128 v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  void *v210;
  uint64_t v211;
  void *v212;
  uint64_t v213;
  id v214;
  id v215;
  __int128 v216;
  uint64_t v217;
  void *v218;
  id v219;
  __int128 v220;
  uint64_t v221;
  uint64_t v222;
  void *v223;
  id v224;
  _QWORD *v225;
  unint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  void *v231;
  id v232;
  _QWORD *v233;
  unint64_t v234;
  void *v235;
  uint64_t v236;
  uint64_t v237;
  void *v238;
  uint64_t v239;
  id v240;
  id v241;
  __int128 v242;
  uint64_t v243;
  uint64_t v244;
  void *v245;
  uint64_t v246;
  char *v247;
  id v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  _QWORD *v256;
  _QWORD *v257;
  unint64_t v258;
  uint64_t v259;
  unint64_t v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  uint64_t v265;
  uint64_t v266;
  void *v267;
  id v268;
  _QWORD *v269;
  unint64_t v270;
  uint64_t v271;
  void *v272;
  void (*v273)(_QWORD *, _QWORD, uint64_t, int *);
  id v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  int v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  __int128 v286;
  uint64_t v287;
  _OWORD *v288;
  _OWORD *v289;
  __int128 v290;
  uint64_t v291;
  _OWORD *v292;
  _OWORD *v293;
  __int128 v294;
  uint64_t v295;
  uint64_t result;
  uint64_t v297;
  unsigned int (*v298)(char *, uint64_t, int *);
  char *v299;
  char *v300;
  _QWORD *v301;
  void (*v302)(char *, char *, uint64_t);
  uint64_t v303;
  uint64_t v304;
  _QWORD *__dst;
  char *__dsta;
  int *__dstb;
  char *__dstc;
  uint64_t v309;
  void (*v310)(char *, char *, void *);
  void *v311;
  char *v312;
  void *v313;
  char *v314;
  int *v315;
  char *v316;
  char *v317;
  char *v318;
  char *v319;
  char *v320;
  int *v321;
  unsigned int (*v322)(char *, uint64_t, uint64_t);
  char *v323;
  int *v324;
  int *v325;
  int *v326;
  int *v327;
  int *v328;
  int *v329;
  int *v330;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v6 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v6;
    v7 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v8;
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    v10 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
    v11 = v10[7];
    v12 = (char *)(a1 + v11);
    v13 = (char *)(a2 + v11);
    v14 = type metadata accessor for FeedItem(0);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v15 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v15;
        v16 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)v12 + 3) = v16;
        v12[32] = v13[32];
        v17 = v13 + 40;
        v18 = *((_QWORD *)v13 + 6);
        swift_bridgeObjectRetain();
        if (v18 >= 0x11)
        {
          *((_QWORD *)v12 + 5) = *v17;
          *((_QWORD *)v12 + 6) = v18;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 40) = *(_OWORD *)v17;
        }
        goto LABEL_144;
      case 1u:
        v56 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v56;
        v57 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)v12 + 3) = v57;
        v12[32] = v13[32];
        v58 = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 6) = v58;
        v59 = *((_QWORD *)v13 + 8);
        *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
        *((_QWORD *)v12 + 8) = v59;
        v60 = v13 + 72;
        v61 = *((_QWORD *)v13 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v61 >= 0x11)
        {
          *((_QWORD *)v12 + 9) = *v60;
          *((_QWORD *)v12 + 10) = v61;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 72) = *(_OWORD *)v60;
        }
        goto LABEL_144;
      case 2u:
        v325 = v10;
        v19 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v19;
        v20 = (int *)type metadata accessor for FeedBannerAd();
        v21 = v20[5];
        v22 = &v12[v21];
        v23 = &v13[v21];
        v24 = sub_1BB8721C0();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        *(_QWORD *)&v12[v20[6]] = *(_QWORD *)&v13[v20[6]];
        v26 = v20[7];
        v27 = &v12[v26];
        v28 = &v13[v26];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        v27[8] = v28[8];
        v29 = v20[8];
        v30 = &v12[v29];
        v31 = &v13[v29];
        v32 = *((_QWORD *)v31 + 1);
        if (v32 >= 0x11)
        {
          *(_QWORD *)v30 = *(_QWORD *)v31;
          *((_QWORD *)v30 + 1) = v32;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v30 = *(_OWORD *)v31;
        }
        v10 = v325;
        goto LABEL_144;
      case 3u:
        v326 = v10;
        v62 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v62;
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        v12[24] = v13[24];
        v63 = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        *((_QWORD *)v12 + 5) = v63;
        *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
        v12[56] = v13[56];
        v321 = (int *)type metadata accessor for FeedHeadline(0);
        v64 = v321[10];
        v65 = &v12[v64];
        v66 = &v13[v64];
        *v65 = v13[v64];
        v65[1] = v13[v64 + 1];
        v67 = (int *)type metadata accessor for FeedHeadline.State(0);
        v68 = v67[6];
        __dsta = &v65[v68];
        v69 = &v66[v68];
        v70 = (int *)type metadata accessor for SharedItem();
        v303 = *((_QWORD *)v70 - 1);
        v71 = *(unsigned int (**)(char *, uint64_t, int *))(v303 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v71(v69, 1, v70))
        {
          v72 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dsta, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          v180 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(__dsta, v69, v180);
          __dsta[v70[5]] = v69[v70[5]];
          v181 = v70[6];
          v311 = *(void **)&v69[v181];
          *(_QWORD *)&__dsta[v181] = v311;
          v182 = v70[7];
          v314 = &v69[v182];
          v319 = &__dsta[v182];
          v183 = sub_1BB86C67C();
          v302 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16);
          v184 = v311;
          v302(v319, v314, v183);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v303 + 56))(__dsta, 0, 1, v70);
        }
        v10 = v326;
        v65[v67[7]] = v66[v67[7]];
        v65[v67[8]] = v66[v67[8]];
        v65[v67[9]] = v66[v67[9]];
        v65[v67[10]] = v66[v67[10]];
        v185 = v321[11];
        v186 = &v12[v185];
        v187 = &v13[v185];
        v188 = sub_1BB871B24();
        v189 = *(_QWORD *)(v188 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v189 + 48))(v187, 1, v188))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v190 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v189 + 16))(v186, v187, v188);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v189 + 56))(v186, 0, 1, v188);
        }
        v197 = v321[12];
        v198 = &v12[v197];
        v199 = &v13[v197];
        v200 = *((_QWORD *)v199 + 1);
        if (v200 >= 0x11)
        {
          *(_QWORD *)v198 = *(_QWORD *)v199;
          *((_QWORD *)v198 + 1) = v200;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v198 = *(_OWORD *)v199;
        }
        v201 = v321[13];
        v202 = *(_QWORD *)&v13[v201];
        if (v202 >= 2)
        {
          if (v202 == 2)
          {
            *(_QWORD *)&v12[v201] = 2;
          }
          else
          {
            *(_QWORD *)&v12[v201] = v202;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v12[v201] = v202;
        }
        v217 = v321[14];
        v218 = *(void **)&v13[v217];
        *(_QWORD *)&v12[v217] = v218;
        v219 = v218;
        goto LABEL_144;
      case 4u:
        v33 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v33;
        v12[16] = v13[16];
        v34 = v13 + 24;
        v35 = *((_QWORD *)v13 + 4);
        if (v35 >= 0x11)
        {
          *((_QWORD *)v12 + 3) = *v34;
          *((_QWORD *)v12 + 4) = v35;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 24) = *(_OWORD *)v34;
        }
        v125 = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 6) = v125;
        v126 = type metadata accessor for FeedWebEmbed();
        v127 = *(int *)(v126 + 32);
        v316 = &v13[v127];
        v323 = &v12[v127];
        v128 = sub_1BB86C67C();
        v129 = *(_QWORD *)(v128 - 8);
        v130 = *(void (**)(char *, char *, void *))(v129 + 16);
        v131 = (void *)v128;
        swift_bridgeObjectRetain();
        v130(v323, v316, v131);
        v132 = *(int *)(v126 + 36);
        v317 = &v12[v132];
        v324 = (int *)v126;
        v133 = &v13[v132];
        v327 = v10;
        v310 = v130;
        v313 = v131;
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v129 + 48))(&v13[v132], 1, v131))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v317, v133, *(_QWORD *)(*(_QWORD *)(v134 - 8) + 64));
        }
        else
        {
          v130(v317, v133, v131);
          (*(void (**)(char *, _QWORD, uint64_t, void *))(v129 + 56))(v317, 0, 1, v131);
        }
        *(_QWORD *)&v12[v324[10]] = *(_QWORD *)&v13[v324[10]];
        *(_QWORD *)&v12[v324[11]] = *(_QWORD *)&v13[v324[11]];
        v157 = v324[12];
        v318 = &v12[v157];
        v158 = &v13[v157];
        v159 = type metadata accessor for FeedHeadline(0);
        v160 = *(_QWORD *)(v159 - 8);
        v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
        swift_retain();
        swift_retain();
        if (v161(v158, 1, v159))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v318, v158, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
        }
        else
        {
          v304 = v160;
          v168 = *((_QWORD *)v158 + 1);
          v169 = v318;
          *(_QWORD *)v318 = *(_QWORD *)v158;
          *((_QWORD *)v318 + 1) = v168;
          *((_QWORD *)v318 + 2) = *((_QWORD *)v158 + 2);
          v318[24] = v158[24];
          v170 = *((_QWORD *)v158 + 5);
          *((_QWORD *)v318 + 4) = *((_QWORD *)v158 + 4);
          *((_QWORD *)v318 + 5) = v170;
          *((_QWORD *)v318 + 6) = *((_QWORD *)v158 + 6);
          v318[56] = v158[56];
          __dstb = (int *)v159;
          v171 = *(int *)(v159 + 40);
          v172 = &v318[v171];
          v301 = v158;
          v173 = &v158[v171];
          *v172 = v158[v171];
          v172[1] = v158[v171 + 1];
          v174 = (int *)type metadata accessor for FeedHeadline.State(0);
          v175 = v174[6];
          v300 = &v172[v175];
          v176 = &v173[v175];
          v177 = (int *)type metadata accessor for SharedItem();
          v297 = *((_QWORD *)v177 - 1);
          v298 = *(unsigned int (**)(char *, uint64_t, int *))(v297 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v298(v176, 1, v177))
          {
            v178 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v300, v176, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
          }
          else
          {
            v243 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(v300, v176, v243);
            v300[v177[5]] = v176[v177[5]];
            v244 = v177[6];
            v245 = *(void **)&v176[v244];
            *(_QWORD *)&v300[v244] = v245;
            v246 = v177[7];
            v299 = &v300[v246];
            v247 = &v176[v246];
            v248 = v245;
            v310(v299, v247, v313);
            v169 = v318;
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v297 + 56))(v300, 0, 1, v177);
          }
          v172[v174[7]] = v173[v174[7]];
          v172[v174[8]] = v173[v174[8]];
          v172[v174[9]] = v173[v174[9]];
          v172[v174[10]] = v173[v174[10]];
          v249 = __dstb[11];
          v250 = (char *)v169 + v249;
          v251 = (char *)v301 + v249;
          v252 = sub_1BB871B24();
          v253 = *(_QWORD *)(v252 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v253 + 48))(v251, 1, v252))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v250, v251, *(_QWORD *)(*(_QWORD *)(v254 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v253 + 16))(v250, v251, v252);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v253 + 56))(v250, 0, 1, v252);
          }
          v255 = __dstb[12];
          v256 = (_QWORD *)((char *)v169 + v255);
          v257 = (_QWORD *)((char *)v301 + v255);
          v258 = v257[1];
          if (v258 >= 0x11)
          {
            *v256 = *v257;
            v256[1] = v258;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v256 = *(_OWORD *)v257;
          }
          v259 = __dstb[13];
          v260 = *(_QWORD *)((char *)v301 + v259);
          if (v260 >= 2)
          {
            if (v260 == 2)
            {
              *(_QWORD *)((char *)v169 + v259) = 2;
            }
            else
            {
              *(_QWORD *)((char *)v169 + v259) = v260;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)((char *)v169 + v259) = v260;
          }
          v271 = __dstb[14];
          v272 = *(void **)((char *)v301 + v271);
          *(_QWORD *)((char *)v169 + v271) = v272;
          v273 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v304 + 56);
          v274 = v272;
          v273(v169, 0, 1, __dstb);
        }
        v275 = v324[13];
        v276 = &v12[v275];
        v277 = &v13[v275];
        v278 = type metadata accessor for WebEmbedDataVisualization();
        v279 = *(_QWORD *)(v278 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v279 + 48))(v277, 1, v278))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
        }
        else
        {
          v281 = swift_getEnumCaseMultiPayload();
          v282 = *(_QWORD *)v277;
          if (v281 == 1)
          {
            v283 = *((_QWORD *)v277 + 1);
            *(_QWORD *)v276 = v282;
            *((_QWORD *)v276 + 1) = v283;
            v284 = type metadata accessor for GenericDataVisualization();
            v285 = *(int *)(v284 + 20);
            v320 = &v276[v285];
            __dstc = &v277[v285];
            swift_bridgeObjectRetain();
            v310(v320, __dstc, v313);
            *(_QWORD *)&v276[*(int *)(v284 + 24)] = *(_QWORD *)&v277[*(int *)(v284 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_QWORD *)v276 = v282;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v279 + 56))(v276, 0, 1, v278);
        }
        v12[v324[14]] = v13[v324[14]];
        goto LABEL_143;
      case 5u:
        v73 = *(void **)v13;
        v74 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v74;
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_WORD *)v12 + 12) = *((_WORD *)v13 + 12);
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        v12[40] = v13[40];
        v75 = (void *)*((_QWORD *)v13 + 7);
        *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 7) = v75;
        v12[64] = v13[64];
        v76 = *((_QWORD *)v13 + 10);
        v77 = v73;
        swift_bridgeObjectRetain();
        v78 = v75;
        if (v76 == 1)
        {
          v79 = *(_OWORD *)(v13 + 88);
          *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
          *(_OWORD *)(v12 + 88) = v79;
          *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
        }
        else
        {
          *((_QWORD *)v12 + 9) = *((_QWORD *)v13 + 9);
          *((_QWORD *)v12 + 10) = v76;
          v136 = *((_QWORD *)v13 + 12);
          *((_QWORD *)v12 + 11) = *((_QWORD *)v13 + 11);
          *((_QWORD *)v12 + 12) = v136;
          v138 = (void *)*((_QWORD *)v13 + 13);
          v137 = *((_QWORD *)v13 + 14);
          *((_QWORD *)v12 + 13) = v138;
          *((_QWORD *)v12 + 14) = v137;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v139 = v138;
        }
        v140 = v13 + 120;
        v141 = *((_QWORD *)v13 + 16);
        if (v141 >= 0x11)
        {
          *((_QWORD *)v12 + 15) = *v140;
          *((_QWORD *)v12 + 16) = v141;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 120) = *(_OWORD *)v140;
        }
        v12[136] = v13[136];
        goto LABEL_144;
      case 6u:
        v327 = v10;
        v80 = v13[281];
        if (v80 == 2)
        {
          v204 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v204;
          *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
          v12[24] = v13[24];
          *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
          v12[40] = v13[40];
          v205 = *((_QWORD *)v13 + 7);
          *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
          *((_QWORD *)v12 + 7) = v205;
          v206 = *((_QWORD *)v13 + 9);
          *((_QWORD *)v12 + 8) = *((_QWORD *)v13 + 8);
          *((_QWORD *)v12 + 9) = v206;
          v207 = *((_QWORD *)v13 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v207 == 1)
          {
            v208 = *((_OWORD *)v13 + 8);
            *((_OWORD *)v12 + 7) = *((_OWORD *)v13 + 7);
            *((_OWORD *)v12 + 8) = v208;
            v12[144] = v13[144];
            v209 = *((_OWORD *)v13 + 6);
            *((_OWORD *)v12 + 5) = *((_OWORD *)v13 + 5);
            *((_OWORD *)v12 + 6) = v209;
          }
          else
          {
            *((_QWORD *)v12 + 10) = *((_QWORD *)v13 + 10);
            *((_QWORD *)v12 + 11) = v207;
            v227 = *((_QWORD *)v13 + 15);
            swift_bridgeObjectRetain();
            if (v227)
            {
              v228 = *((_QWORD *)v13 + 16);
              *((_QWORD *)v12 + 15) = v227;
              *((_QWORD *)v12 + 16) = v228;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v227 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v227);
              *((_QWORD *)v12 + 17) = *((_QWORD *)v13 + 17);
            }
            else
            {
              v286 = *((_OWORD *)v13 + 7);
              *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
              *((_OWORD *)v12 + 7) = v286;
              *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
            }
            v12[144] = v13[144];
          }
        }
        else if (v80 == 1)
        {
          v81 = *(void **)v13;
          v82 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v82;
          *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
          *((_WORD *)v12 + 12) = *((_WORD *)v13 + 12);
          *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
          v12[40] = v13[40];
          v83 = (void *)*((_QWORD *)v13 + 7);
          *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
          *((_QWORD *)v12 + 7) = v83;
          v12[64] = v13[64];
          v84 = *((_QWORD *)v13 + 10);
          v85 = v81;
          swift_bridgeObjectRetain();
          v86 = v83;
          if (v84 == 1)
          {
            v87 = *(_OWORD *)(v13 + 88);
            *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
            *(_OWORD *)(v12 + 88) = v87;
            *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
          }
          else
          {
            *((_QWORD *)v12 + 9) = *((_QWORD *)v13 + 9);
            *((_QWORD *)v12 + 10) = v84;
            v221 = *((_QWORD *)v13 + 12);
            *((_QWORD *)v12 + 11) = *((_QWORD *)v13 + 11);
            *((_QWORD *)v12 + 12) = v221;
            v223 = (void *)*((_QWORD *)v13 + 13);
            v222 = *((_QWORD *)v13 + 14);
            *((_QWORD *)v12 + 13) = v223;
            *((_QWORD *)v12 + 14) = v222;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v224 = v223;
          }
          v225 = v13 + 120;
          v226 = *((_QWORD *)v13 + 16);
          if (v226 >= 0x11)
          {
            *((_QWORD *)v12 + 15) = *v225;
            *((_QWORD *)v12 + 16) = v226;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v12 + 120) = *(_OWORD *)v225;
          }
          v235 = (void *)*((_QWORD *)v13 + 18);
          v12[136] = v13[136];
          if (v235)
          {
            v236 = *((_QWORD *)v13 + 19);
            v237 = *((_QWORD *)v13 + 20);
            *((_QWORD *)v12 + 18) = v235;
            *((_QWORD *)v12 + 19) = v236;
            *((_QWORD *)v12 + 20) = v237;
            *((_WORD *)v12 + 84) = *((_WORD *)v13 + 84);
            *((_QWORD *)v12 + 22) = *((_QWORD *)v13 + 22);
            v12[184] = v13[184];
            v238 = (void *)*((_QWORD *)v13 + 25);
            *((_QWORD *)v12 + 24) = *((_QWORD *)v13 + 24);
            *((_QWORD *)v12 + 25) = v238;
            v12[208] = v13[208];
            v239 = *((_QWORD *)v13 + 28);
            v240 = v235;
            swift_bridgeObjectRetain();
            v241 = v238;
            if (v239 == 1)
            {
              v242 = *(_OWORD *)(v13 + 232);
              *(_OWORD *)(v12 + 216) = *(_OWORD *)(v13 + 216);
              *(_OWORD *)(v12 + 232) = v242;
              *(_OWORD *)(v12 + 248) = *(_OWORD *)(v13 + 248);
            }
            else
            {
              *((_QWORD *)v12 + 27) = *((_QWORD *)v13 + 27);
              *((_QWORD *)v12 + 28) = v239;
              v265 = *((_QWORD *)v13 + 30);
              *((_QWORD *)v12 + 29) = *((_QWORD *)v13 + 29);
              *((_QWORD *)v12 + 30) = v265;
              v267 = (void *)*((_QWORD *)v13 + 31);
              v266 = *((_QWORD *)v13 + 32);
              *((_QWORD *)v12 + 31) = v267;
              *((_QWORD *)v12 + 32) = v266;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v268 = v267;
            }
            v269 = v13 + 264;
            v270 = *((_QWORD *)v13 + 34);
            if (v270 >= 0x11)
            {
              *((_QWORD *)v12 + 33) = *v269;
              *((_QWORD *)v12 + 34) = v270;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v12 + 264) = *(_OWORD *)v269;
            }
            v12[280] = v13[280];
          }
          else
          {
            v261 = *((_OWORD *)v13 + 16);
            *((_OWORD *)v12 + 15) = *((_OWORD *)v13 + 15);
            *((_OWORD *)v12 + 16) = v261;
            *(_OWORD *)(v12 + 265) = *(_OWORD *)(v13 + 265);
            v262 = *((_OWORD *)v13 + 12);
            *((_OWORD *)v12 + 11) = *((_OWORD *)v13 + 11);
            *((_OWORD *)v12 + 12) = v262;
            v263 = *((_OWORD *)v13 + 14);
            *((_OWORD *)v12 + 13) = *((_OWORD *)v13 + 13);
            *((_OWORD *)v12 + 14) = v263;
            v264 = *((_OWORD *)v13 + 10);
            *((_OWORD *)v12 + 9) = *((_OWORD *)v13 + 9);
            *((_OWORD *)v12 + 10) = v264;
          }
        }
        else
        {
          v210 = *(void **)v13;
          v211 = *((_QWORD *)v13 + 1);
          *(_QWORD *)v12 = *(_QWORD *)v13;
          *((_QWORD *)v12 + 1) = v211;
          *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
          *((_WORD *)v12 + 12) = *((_WORD *)v13 + 12);
          *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
          v12[40] = v13[40];
          v212 = (void *)*((_QWORD *)v13 + 7);
          *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
          *((_QWORD *)v12 + 7) = v212;
          v12[64] = v13[64];
          v213 = *((_QWORD *)v13 + 10);
          v214 = v210;
          swift_bridgeObjectRetain();
          v215 = v212;
          if (v213 == 1)
          {
            v216 = *(_OWORD *)(v13 + 88);
            *(_OWORD *)(v12 + 72) = *(_OWORD *)(v13 + 72);
            *(_OWORD *)(v12 + 88) = v216;
            *(_OWORD *)(v12 + 104) = *(_OWORD *)(v13 + 104);
          }
          else
          {
            *((_QWORD *)v12 + 9) = *((_QWORD *)v13 + 9);
            *((_QWORD *)v12 + 10) = v213;
            v229 = *((_QWORD *)v13 + 12);
            *((_QWORD *)v12 + 11) = *((_QWORD *)v13 + 11);
            *((_QWORD *)v12 + 12) = v229;
            v231 = (void *)*((_QWORD *)v13 + 13);
            v230 = *((_QWORD *)v13 + 14);
            *((_QWORD *)v12 + 13) = v231;
            *((_QWORD *)v12 + 14) = v230;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v232 = v231;
          }
          v233 = v13 + 120;
          v234 = *((_QWORD *)v13 + 16);
          if (v234 >= 0x11)
          {
            *((_QWORD *)v12 + 15) = *v233;
            *((_QWORD *)v12 + 16) = v234;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v12 + 120) = *(_OWORD *)v233;
          }
          v12[136] = v13[136];
        }
        v12[281] = v80;
LABEL_143:
        swift_storeEnumTagMultiPayload();
        v10 = v327;
        break;
      case 7u:
        v88 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v88;
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        v12[24] = v13[24];
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        v12[40] = v13[40];
        v89 = *((_QWORD *)v13 + 7);
        *((_QWORD *)v12 + 6) = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 7) = v89;
        v90 = *((_QWORD *)v13 + 9);
        *((_QWORD *)v12 + 8) = *((_QWORD *)v13 + 8);
        *((_QWORD *)v12 + 9) = v90;
        v91 = *((_QWORD *)v13 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v91 == 1)
        {
          v92 = *((_OWORD *)v13 + 8);
          *((_OWORD *)v12 + 7) = *((_OWORD *)v13 + 7);
          *((_OWORD *)v12 + 8) = v92;
          v12[144] = v13[144];
          v93 = *((_OWORD *)v13 + 6);
          *((_OWORD *)v12 + 5) = *((_OWORD *)v13 + 5);
          *((_OWORD *)v12 + 6) = v93;
        }
        else
        {
          *((_QWORD *)v12 + 10) = *((_QWORD *)v13 + 10);
          *((_QWORD *)v12 + 11) = v91;
          v142 = *((_QWORD *)v13 + 15);
          swift_bridgeObjectRetain();
          if (v142)
          {
            v143 = *((_QWORD *)v13 + 16);
            *((_QWORD *)v12 + 15) = v142;
            *((_QWORD *)v12 + 16) = v143;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v142 - 8))((uint64_t)(v12 + 96), (uint64_t)(v13 + 96), v142);
            *((_QWORD *)v12 + 17) = *((_QWORD *)v13 + 17);
          }
          else
          {
            v220 = *((_OWORD *)v13 + 7);
            *((_OWORD *)v12 + 6) = *((_OWORD *)v13 + 6);
            *((_OWORD *)v12 + 7) = v220;
            *((_OWORD *)v12 + 8) = *((_OWORD *)v13 + 8);
          }
          v12[144] = v13[144];
        }
        goto LABEL_144;
      case 8u:
        v328 = v10;
        v94 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v94;
        v95 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v96 = &v12[v95];
        v97 = &v13[v95];
        v98 = *((_QWORD *)v97 + 1);
        *(_QWORD *)v96 = *(_QWORD *)v97;
        *((_QWORD *)v96 + 1) = v98;
        v99 = *((_QWORD *)v97 + 3);
        *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
        *((_QWORD *)v96 + 3) = v99;
        v100 = type metadata accessor for FormatCustomItem.Resolved();
        v101 = *(int *)(v100 + 24);
        v312 = &v96[v101];
        v315 = (int *)v100;
        v102 = &v97[v101];
        v103 = type metadata accessor for FormatCustomItem.Action();
        v309 = *(_QWORD *)(v103 - 8);
        v322 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v309 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v322(v102, 1, v103))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v312, v102, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          v191 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v191 - 8) + 16))(v312, v102, v191);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v309 + 56))(v312, 0, 1, v103);
        }
        v10 = v328;
        *(_QWORD *)&v96[v315[7]] = *(_QWORD *)&v97[v315[7]];
        swift_bridgeObjectRetain();
        goto LABEL_144;
      case 9u:
        v36 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v36;
        v37 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)v12 + 3) = v37;
        v38 = *((_QWORD *)v13 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v38)
        {
          v39 = *((_QWORD *)v13 + 8);
          *((_QWORD *)v12 + 7) = v38;
          *((_QWORD *)v12 + 8) = v39;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v38 - 8))((uint64_t)(v12 + 32), (uint64_t)(v13 + 32), v38);
        }
        else
        {
          v152 = *((_OWORD *)v13 + 3);
          *((_OWORD *)v12 + 2) = *((_OWORD *)v13 + 2);
          *((_OWORD *)v12 + 3) = v152;
          *((_QWORD *)v12 + 8) = *((_QWORD *)v13 + 8);
        }
        v153 = v12 + 72;
        v154 = v13 + 72;
        v155 = *((_QWORD *)v13 + 12);
        if (v155)
        {
          v156 = *((_QWORD *)v13 + 13);
          *((_QWORD *)v12 + 12) = v155;
          *((_QWORD *)v12 + 13) = v156;
          (**(void (***)(_OWORD *, _OWORD *))(v155 - 8))(v153, v154);
        }
        else
        {
          v163 = *(_OWORD *)(v13 + 88);
          *v153 = *v154;
          *(_OWORD *)(v12 + 88) = v163;
          *((_QWORD *)v12 + 13) = *((_QWORD *)v13 + 13);
        }
        v164 = v12 + 112;
        v165 = v13 + 112;
        v166 = *((_QWORD *)v13 + 17);
        if (v166)
        {
          v167 = *((_QWORD *)v13 + 18);
          *((_QWORD *)v12 + 17) = v166;
          *((_QWORD *)v12 + 18) = v167;
          (**(void (***)(_OWORD *, _OWORD *))(v166 - 8))(v164, v165);
        }
        else
        {
          v179 = *((_OWORD *)v13 + 8);
          *v164 = *v165;
          *((_OWORD *)v12 + 8) = v179;
          *((_QWORD *)v12 + 18) = *((_QWORD *)v13 + 18);
        }
        goto LABEL_144;
      case 0xAu:
        v329 = v10;
        v105 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v105;
        v106 = (int *)type metadata accessor for FeedEngagementBanner();
        v107 = v106[5];
        v108 = &v12[v107];
        v109 = &v13[v107];
        v110 = sub_1BB86EDAC();
        v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
        swift_bridgeObjectRetain();
        v111(v108, v109, v110);
        *(_QWORD *)&v12[v106[6]] = *(_QWORD *)&v13[v106[6]];
        v112 = v106[7];
        v113 = &v12[v112];
        v114 = &v13[v112];
        *(_QWORD *)v113 = *(_QWORD *)v114;
        v113[8] = v114[8];
        v115 = v106[8];
        v116 = &v12[v115];
        v117 = &v13[v115];
        v118 = *((_QWORD *)v117 + 1);
        if (v118 >= 0x11)
        {
          *(_QWORD *)v116 = *(_QWORD *)v117;
          *((_QWORD *)v116 + 1) = v118;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v116 = *(_OWORD *)v117;
        }
        v10 = v329;
        goto LABEL_144;
      case 0xBu:
        *(_QWORD *)v12 = *(_QWORD *)v13;
        swift_retain();
        goto LABEL_144;
      case 0xCu:
        v40 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v40;
        v41 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)v12 + 3) = v41;
        v12[32] = v13[32];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_144;
      case 0xDu:
        v119 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v119;
        v12[16] = v13[16];
        v120 = v13 + 24;
        v121 = *((_QWORD *)v13 + 4);
        v330 = v10;
        if (v121 >= 0x11)
        {
          *((_QWORD *)v12 + 3) = *v120;
          *((_QWORD *)v12 + 4) = v121;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 24) = *(_OWORD *)v120;
        }
        v144 = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 6) = v144;
        v145 = (void *)*((_QWORD *)v13 + 8);
        *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
        *((_QWORD *)v12 + 8) = v145;
        v12[72] = v13[72];
        *((_QWORD *)v12 + 10) = *((_QWORD *)v13 + 10);
        v146 = *((_QWORD *)v13 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v147 = v145;
        swift_bridgeObjectRetain();
        if (v146)
        {
          v148 = *((_QWORD *)v13 + 15);
          *((_QWORD *)v12 + 14) = v146;
          *((_QWORD *)v12 + 15) = v148;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v146 - 8))((uint64_t)(v12 + 88), (uint64_t)(v13 + 88), v146);
        }
        else
        {
          v192 = *(_OWORD *)(v13 + 104);
          *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
          *(_OWORD *)(v12 + 104) = v192;
          *((_QWORD *)v12 + 15) = *((_QWORD *)v13 + 15);
        }
        v10 = v330;
        v193 = v12 + 128;
        v194 = v13 + 128;
        v195 = *((_QWORD *)v13 + 19);
        if (v195)
        {
          v196 = *((_QWORD *)v13 + 20);
          *((_QWORD *)v12 + 19) = v195;
          *((_QWORD *)v12 + 20) = v196;
          (**(void (***)(_OWORD *, _OWORD *))(v195 - 8))(v193, v194);
        }
        else
        {
          v203 = *((_OWORD *)v13 + 9);
          *v193 = *v194;
          *((_OWORD *)v12 + 9) = v203;
          *((_QWORD *)v12 + 20) = *((_QWORD *)v13 + 20);
        }
        goto LABEL_144;
      case 0xEu:
        v42 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v42;
        v12[16] = v13[16];
        v43 = v13 + 24;
        v44 = *((_QWORD *)v13 + 4);
        if (v44 >= 0x11)
        {
          *((_QWORD *)v12 + 3) = *v43;
          *((_QWORD *)v12 + 4) = v44;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 24) = *(_OWORD *)v43;
        }
        v135 = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 6) = v135;
        *((_QWORD *)v12 + 7) = *((_QWORD *)v13 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_144;
      case 0xFu:
        v122 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v122;
        v12[16] = v13[16];
        v123 = v13 + 24;
        v124 = *((_QWORD *)v13 + 4);
        if (v124 >= 0x11)
        {
          *((_QWORD *)v12 + 3) = *v123;
          *((_QWORD *)v12 + 4) = v124;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 24) = *(_OWORD *)v123;
        }
        v149 = *((_QWORD *)v13 + 6);
        *((_QWORD *)v12 + 5) = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 6) = v149;
        v150 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&v12[v150] = *(_QWORD *)&v13[v150];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v151 = (char *)&loc_1BAF3C388 + 4 * word_1BB8D5032[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        v45 = *((_QWORD *)v13 + 1);
        *(_QWORD *)v12 = *(_QWORD *)v13;
        *((_QWORD *)v12 + 1) = v45;
        v46 = *((_QWORD *)v13 + 3);
        *((_QWORD *)v12 + 2) = *((_QWORD *)v13 + 2);
        *((_QWORD *)v12 + 3) = v46;
        v47 = *((_QWORD *)v13 + 5);
        *((_QWORD *)v12 + 4) = *((_QWORD *)v13 + 4);
        *((_QWORD *)v12 + 5) = v47;
        *((_WORD *)v12 + 24) = *((_WORD *)v13 + 24);
        *(_OWORD *)(v12 + 56) = *(_OWORD *)(v13 + 56);
        v48 = *((_QWORD *)v13 + 10);
        *((_QWORD *)v12 + 9) = *((_QWORD *)v13 + 9);
        *((_QWORD *)v12 + 10) = v48;
        v49 = *((_QWORD *)v13 + 12);
        *((_QWORD *)v12 + 11) = *((_QWORD *)v13 + 11);
        *((_QWORD *)v12 + 12) = v49;
        *((_QWORD *)v12 + 13) = *((_QWORD *)v13 + 13);
        v12[112] = v13[112];
        v50 = *((_QWORD *)v13 + 16);
        *((_QWORD *)v12 + 15) = *((_QWORD *)v13 + 15);
        *((_QWORD *)v12 + 16) = v50;
        v12[136] = v13[136];
        v51 = *((_QWORD *)v13 + 19);
        *((_QWORD *)v12 + 18) = *((_QWORD *)v13 + 18);
        *((_QWORD *)v12 + 19) = v51;
        v52 = *((_QWORD *)v13 + 21);
        *((_QWORD *)v12 + 20) = *((_QWORD *)v13 + 20);
        *((_QWORD *)v12 + 21) = v52;
        v12[184] = v13[184];
        *((_QWORD *)v12 + 22) = *((_QWORD *)v13 + 22);
        v53 = *((_QWORD *)v13 + 25);
        *((_QWORD *)v12 + 24) = *((_QWORD *)v13 + 24);
        *((_QWORD *)v12 + 25) = v53;
        v12[224] = v13[224];
        v54 = *((_QWORD *)v13 + 27);
        *((_QWORD *)v12 + 26) = *((_QWORD *)v13 + 26);
        *((_QWORD *)v12 + 27) = v54;
        __dst = v13 + 232;
        v55 = *((_QWORD *)v13 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v55 >= 0x11)
        {
          *((_QWORD *)v12 + 29) = *__dst;
          *((_QWORD *)v12 + 30) = v55;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v12 + 232) = *(_OWORD *)__dst;
        }
LABEL_144:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        break;
    }
    v287 = v10[8];
    v288 = (_OWORD *)(a1 + v287);
    v289 = (_OWORD *)(a2 + v287);
    v290 = v289[1];
    *v288 = *v289;
    v288[1] = v290;
    v291 = v10[9];
    v292 = (_OWORD *)(a1 + v291);
    v293 = (_OWORD *)(a2 + v291);
    v294 = v293[1];
    *v292 = *v293;
    v292[1] = v294;
    sub_1BAF38740();
    *(_QWORD *)(a1 + *(int *)(v295 + 48)) = *(_QWORD *)(a2 + *(int *)(v295 + 48));
  }
  swift_retain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1BAF3DA34(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload;
  __int128 v5;
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  char v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  int *v39;
  uint64_t v40;
  char *v41;
  int *v42;
  unsigned int (*v43)(char *, uint64_t, int *);
  uint64_t v44;
  void *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  id v49;
  id v50;
  __int128 v51;
  __int128 v52;
  int v53;
  void *v54;
  uint64_t v55;
  void *v56;
  uint64_t v57;
  id v58;
  id v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  char v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, void *);
  void *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  void *v98;
  id v99;
  uint64_t v100;
  char v101;
  void *v102;
  uint64_t v103;
  id v104;
  uint64_t v105;
  char *v106;
  __int128 v107;
  __int128 v108;
  _OWORD *v109;
  __int128 *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(char *, uint64_t, uint64_t);
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  _OWORD *v120;
  __int128 *v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  char *v127;
  int *v128;
  uint64_t v129;
  char *v130;
  int *v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  id v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  __int128 v148;
  _OWORD *v149;
  __int128 *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  unint64_t v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  void *v164;
  uint64_t v165;
  void *v166;
  uint64_t v167;
  id v168;
  id v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  void *v173;
  id v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  void *v178;
  id v179;
  uint64_t v180;
  char v181;
  void *v182;
  id v183;
  void *v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  id v188;
  id v189;
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  void *v194;
  uint64_t v195;
  char *v196;
  id v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  _QWORD *v206;
  uint64_t v207;
  unint64_t v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  void *v215;
  id v216;
  uint64_t v217;
  void *v218;
  void (*v219)(_QWORD *, _QWORD, uint64_t, int *);
  id v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  int v227;
  uint64_t v228;
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  uint64_t v233;
  _OWORD *v234;
  _OWORD *v235;
  __int128 v236;
  uint64_t v237;
  _OWORD *v238;
  _OWORD *v239;
  __int128 v240;
  uint64_t v241;
  uint64_t result;
  uint64_t v243;
  unsigned int (*v244)(char *, uint64_t, int *);
  char *v245;
  char *v246;
  _QWORD *v247;
  void (*v248)(char *, char *, uint64_t);
  uint64_t v249;
  uint64_t v250;
  char *__dst;
  int *__dsta;
  char *__dstb;
  unint64_t v254;
  uint64_t v255;
  void (*v256)(char *, char *, void *);
  void *v257;
  char *v258;
  void *v259;
  char *v260;
  unsigned int (*v261)(char *, uint64_t, uint64_t);
  char *v262;
  char *v263;
  char *v264;
  char *v265;
  char *v266;
  int *v267;
  int *v268;
  char *v269;
  int *v270;
  int *v271;
  int *v272;
  int *v273;
  int *v274;
  int *v275;

  if (a1 != a2)
  {
    sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v5 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v5;
      v6 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      v7 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
      v8 = v7[7];
      v9 = (char *)(a1 + v8);
      v10 = (char *)(a2 + v8);
      v11 = type metadata accessor for FeedItem(0);
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v12 = *((_QWORD *)v10 + 3);
          v9[32] = v10[32];
          *((_QWORD *)v9 + 3) = v12;
          v13 = *((_QWORD *)v10 + 6);
          swift_bridgeObjectRetain();
          if (v13 >= 0x11)
          {
            *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
            *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          }
          goto LABEL_142;
        case 1u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v33 = *((_QWORD *)v10 + 3);
          v9[32] = v10[32];
          *((_QWORD *)v9 + 3) = v33;
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
          *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
          v34 = *((_QWORD *)v10 + 10);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v34 >= 0x11)
          {
            *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
            *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 72) = *(_OWORD *)(v10 + 72);
          }
          goto LABEL_142;
        case 2u:
          v271 = v7;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v14 = (int *)type metadata accessor for FeedBannerAd();
          v15 = v14[5];
          v16 = &v9[v15];
          v17 = &v10[v15];
          v18 = sub_1BB8721C0();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          *(_QWORD *)&v9[v14[6]] = *(_QWORD *)&v10[v14[6]];
          v20 = v14[7];
          v21 = &v9[v20];
          v22 = &v10[v20];
          v23 = v22[8];
          *(_QWORD *)v21 = *(_QWORD *)v22;
          v21[8] = v23;
          v24 = v14[8];
          v25 = &v9[v24];
          v26 = &v10[v24];
          if (*((_QWORD *)v26 + 1) >= 0x11uLL)
          {
            *(_QWORD *)v25 = *(_QWORD *)v26;
            *((_QWORD *)v25 + 1) = *((_QWORD *)v26 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v25 = *(_OWORD *)v26;
          }
          v7 = v271;
          goto LABEL_142;
        case 3u:
          v272 = v7;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v35 = *((_QWORD *)v10 + 2);
          v9[24] = v10[24];
          *((_QWORD *)v9 + 2) = v35;
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          v9[56] = v10[56];
          v267 = (int *)type metadata accessor for FeedHeadline(0);
          v36 = v267[10];
          v37 = &v9[v36];
          v38 = &v10[v36];
          *v37 = v10[v36];
          v37[1] = v10[v36 + 1];
          v39 = (int *)type metadata accessor for FeedHeadline.State(0);
          v40 = v39[6];
          __dst = &v37[v40];
          v41 = &v38[v40];
          v42 = (int *)type metadata accessor for SharedItem();
          v249 = *((_QWORD *)v42 - 1);
          v43 = *(unsigned int (**)(char *, uint64_t, int *))(v249 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v43(v41, 1, v42))
          {
            v44 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
          }
          else
          {
            v135 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(__dst, v41, v135);
            __dst[v42[5]] = v41[v42[5]];
            v136 = v42[6];
            v257 = *(void **)&v41[v136];
            *(_QWORD *)&__dst[v136] = v257;
            v137 = v42[7];
            v260 = &v41[v137];
            v265 = &__dst[v137];
            v138 = sub_1BB86C67C();
            v248 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16);
            v139 = v257;
            v248(v265, v260, v138);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v249 + 56))(__dst, 0, 1, v42);
          }
          v37[v39[7]] = v38[v39[7]];
          v37[v39[8]] = v38[v39[8]];
          v37[v39[9]] = v38[v39[9]];
          v37[v39[10]] = v38[v39[10]];
          v140 = v267[11];
          v141 = &v9[v140];
          v142 = &v10[v140];
          v143 = sub_1BB871B24();
          v144 = *(_QWORD *)(v143 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v141, v142, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v141, v142, v143);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v144 + 56))(v141, 0, 1, v143);
          }
          v7 = v272;
          v152 = v267[12];
          v153 = &v9[v152];
          v154 = &v10[v152];
          if (*((_QWORD *)v154 + 1) >= 0x11uLL)
          {
            *(_QWORD *)v153 = *(_QWORD *)v154;
            *((_QWORD *)v153 + 1) = *((_QWORD *)v154 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v153 = *(_OWORD *)v154;
          }
          v155 = v267[13];
          v156 = *(_QWORD *)&v10[v155];
          if (v156 >= 2)
          {
            if (v156 == 2)
            {
              *(_QWORD *)&v9[v155] = 2;
            }
            else
            {
              *(_QWORD *)&v9[v155] = v156;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v9[v155] = v156;
          }
          v172 = v267[14];
          v173 = *(void **)&v10[v172];
          *(_QWORD *)&v9[v172] = v173;
          v174 = v173;
          goto LABEL_142;
        case 4u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v27 = *((_QWORD *)v10 + 1);
          v9[16] = v10[16];
          *((_QWORD *)v9 + 1) = v27;
          if (*((_QWORD *)v10 + 4) >= 0x11uLL)
          {
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          }
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          v89 = type metadata accessor for FeedWebEmbed();
          v90 = *(int *)(v89 + 32);
          v262 = &v10[v90];
          v269 = &v9[v90];
          v91 = sub_1BB86C67C();
          v92 = *(_QWORD *)(v91 - 8);
          v93 = *(void (**)(char *, char *, void *))(v92 + 16);
          v94 = (void *)v91;
          swift_bridgeObjectRetain();
          v93(v269, v262, v94);
          v95 = *(int *)(v89 + 36);
          v263 = &v9[v95];
          v270 = (int *)v89;
          v96 = &v10[v95];
          v275 = v7;
          v256 = v93;
          v259 = v94;
          if ((*(unsigned int (**)(char *, uint64_t, void *))(v92 + 48))(&v10[v95], 1, v94))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v263, v96, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
          }
          else
          {
            v93(v263, v96, v94);
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v92 + 56))(v263, 0, 1, v94);
          }
          *(_QWORD *)&v9[v270[10]] = *(_QWORD *)&v10[v270[10]];
          *(_QWORD *)&v9[v270[11]] = *(_QWORD *)&v10[v270[11]];
          v112 = v270[12];
          v264 = &v9[v112];
          v113 = &v10[v112];
          v114 = type metadata accessor for FeedHeadline(0);
          v115 = *(_QWORD *)(v114 - 8);
          v116 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v115 + 48);
          swift_retain();
          swift_retain();
          if (v116(v113, 1, v114))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v264, v113, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
          }
          else
          {
            v250 = v115;
            v123 = v264;
            *(_QWORD *)v264 = *(_QWORD *)v113;
            *((_QWORD *)v264 + 1) = *((_QWORD *)v113 + 1);
            v124 = *((_QWORD *)v113 + 2);
            v264[24] = v113[24];
            *((_QWORD *)v264 + 2) = v124;
            *((_QWORD *)v264 + 4) = *((_QWORD *)v113 + 4);
            *((_QWORD *)v264 + 5) = *((_QWORD *)v113 + 5);
            *((_QWORD *)v264 + 6) = *((_QWORD *)v113 + 6);
            v264[56] = v113[56];
            __dsta = (int *)v114;
            v125 = *(int *)(v114 + 40);
            v126 = &v264[v125];
            v247 = v113;
            v127 = &v113[v125];
            *v126 = v113[v125];
            v126[1] = v113[v125 + 1];
            v128 = (int *)type metadata accessor for FeedHeadline.State(0);
            v129 = v128[6];
            v246 = &v126[v129];
            v130 = &v127[v129];
            v131 = (int *)type metadata accessor for SharedItem();
            v243 = *((_QWORD *)v131 - 1);
            v244 = *(unsigned int (**)(char *, uint64_t, int *))(v243 + 48);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_unknownObjectRetain();
            if (v244(v130, 1, v131))
            {
              v132 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(v246, v130, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
            }
            else
            {
              v192 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 16))(v246, v130, v192);
              v246[v131[5]] = v130[v131[5]];
              v193 = v131[6];
              v194 = *(void **)&v130[v193];
              *(_QWORD *)&v246[v193] = v194;
              v195 = v131[7];
              v245 = &v246[v195];
              v196 = &v130[v195];
              v197 = v194;
              v256(v245, v196, v259);
              v123 = v264;
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v243 + 56))(v246, 0, 1, v131);
            }
            v126[v128[7]] = v127[v128[7]];
            v126[v128[8]] = v127[v128[8]];
            v126[v128[9]] = v127[v128[9]];
            v126[v128[10]] = v127[v128[10]];
            v198 = __dsta[11];
            v199 = (char *)v123 + v198;
            v200 = (char *)v247 + v198;
            v201 = sub_1BB871B24();
            v202 = *(_QWORD *)(v201 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v202 + 48))(v200, 1, v201))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v202 + 16))(v199, v200, v201);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v202 + 56))(v199, 0, 1, v201);
            }
            v204 = __dsta[12];
            v205 = (_QWORD *)((char *)v123 + v204);
            v206 = (_QWORD *)((char *)v247 + v204);
            if (v206[1] >= 0x11uLL)
            {
              *v205 = *v206;
              v205[1] = v206[1];
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)v205 = *(_OWORD *)v206;
            }
            v207 = __dsta[13];
            v208 = *(_QWORD *)((char *)v247 + v207);
            if (v208 >= 2)
            {
              if (v208 == 2)
              {
                *(_QWORD *)((char *)v123 + v207) = 2;
              }
              else
              {
                *(_QWORD *)((char *)v123 + v207) = v208;
                swift_unknownObjectRetain();
              }
            }
            else
            {
              *(_QWORD *)((char *)v123 + v207) = v208;
            }
            v217 = __dsta[14];
            v218 = *(void **)((char *)v247 + v217);
            *(_QWORD *)((char *)v123 + v217) = v218;
            v219 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v250 + 56);
            v220 = v218;
            v219(v123, 0, 1, __dsta);
          }
          v221 = v270[13];
          v222 = &v9[v221];
          v223 = &v10[v221];
          v224 = type metadata accessor for WebEmbedDataVisualization();
          v225 = *(_QWORD *)(v224 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v225 + 48))(v223, 1, v224))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v222, v223, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
            v7 = v275;
          }
          else
          {
            v227 = swift_getEnumCaseMultiPayload();
            *(_QWORD *)v222 = *(_QWORD *)v223;
            if (v227 == 1)
            {
              *((_QWORD *)v222 + 1) = *((_QWORD *)v223 + 1);
              v228 = type metadata accessor for GenericDataVisualization();
              v229 = *(int *)(v228 + 20);
              v266 = &v222[v229];
              __dstb = &v223[v229];
              swift_bridgeObjectRetain();
              v256(v266, __dstb, v259);
              *(_QWORD *)&v222[*(int *)(v228 + 24)] = *(_QWORD *)&v223[*(int *)(v228 + 24)];
              swift_bridgeObjectRetain();
            }
            else
            {
              swift_retain();
            }
            v7 = v275;
            swift_storeEnumTagMultiPayload();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v225 + 56))(v222, 0, 1, v224);
          }
          v9[v270[14]] = v10[v270[14]];
          swift_storeEnumTagMultiPayload();
          break;
        case 5u:
          v45 = *(void **)v10;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v9[24] = v10[24];
          v9[25] = v10[25];
          v46 = *((_QWORD *)v10 + 4);
          v9[40] = v10[40];
          *((_QWORD *)v9 + 4) = v46;
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          v47 = (void *)*((_QWORD *)v10 + 7);
          *((_QWORD *)v9 + 7) = v47;
          v9[64] = v10[64];
          v48 = *((_QWORD *)v10 + 10);
          v49 = v45;
          swift_bridgeObjectRetain();
          v50 = v47;
          if (v48 == 1)
          {
            v51 = *(_OWORD *)(v10 + 72);
            v52 = *(_OWORD *)(v10 + 104);
            *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
            *(_OWORD *)(v9 + 104) = v52;
            *(_OWORD *)(v9 + 72) = v51;
          }
          else
          {
            *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
            *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
            *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
            *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
            v98 = (void *)*((_QWORD *)v10 + 13);
            *((_QWORD *)v9 + 13) = v98;
            *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v99 = v98;
          }
          if (*((_QWORD *)v10 + 16) >= 0x11uLL)
          {
            *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
            *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 120) = *(_OWORD *)(v10 + 120);
          }
          v9[136] = v10[136];
          goto LABEL_142;
        case 6u:
          v273 = v7;
          v53 = v10[281];
          if (v53 == 2)
          {
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            v9[24] = v10[24];
            v159 = *((_QWORD *)v10 + 4);
            v9[40] = v10[40];
            *((_QWORD *)v9 + 4) = v159;
            *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
            *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
            *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
            *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
            v160 = *((_QWORD *)v10 + 11);
            swift_bridgeObjectRetain();
            swift_unknownObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v160 == 1)
            {
              *((_OWORD *)v9 + 5) = *((_OWORD *)v10 + 5);
              v161 = *((_OWORD *)v10 + 6);
              v162 = *((_OWORD *)v10 + 7);
              v163 = *((_OWORD *)v10 + 8);
              v9[144] = v10[144];
              *((_OWORD *)v9 + 7) = v162;
              *((_OWORD *)v9 + 8) = v163;
              *((_OWORD *)v9 + 6) = v161;
            }
            else
            {
              *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
              *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
              v180 = *((_QWORD *)v10 + 15);
              swift_bridgeObjectRetain();
              if (v180)
              {
                *((_QWORD *)v9 + 15) = v180;
                *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
                (**(void (***)(uint64_t, uint64_t, uint64_t))(v180 - 8))((uint64_t)(v9 + 96), (uint64_t)(v10 + 96), v180);
                v181 = v10[144];
                *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
                v9[144] = v181;
              }
              else
              {
                v230 = *((_OWORD *)v10 + 6);
                v231 = *((_OWORD *)v10 + 7);
                v232 = *((_OWORD *)v10 + 8);
                v9[144] = v10[144];
                *((_OWORD *)v9 + 7) = v231;
                *((_OWORD *)v9 + 8) = v232;
                *((_OWORD *)v9 + 6) = v230;
              }
            }
          }
          else if (v53 == 1)
          {
            v54 = *(void **)v10;
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            v9[24] = v10[24];
            v9[25] = v10[25];
            v55 = *((_QWORD *)v10 + 4);
            v9[40] = v10[40];
            *((_QWORD *)v9 + 4) = v55;
            *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
            v56 = (void *)*((_QWORD *)v10 + 7);
            *((_QWORD *)v9 + 7) = v56;
            v9[64] = v10[64];
            v57 = *((_QWORD *)v10 + 10);
            v58 = v54;
            swift_bridgeObjectRetain();
            v59 = v56;
            if (v57 == 1)
            {
              v60 = *(_OWORD *)(v10 + 72);
              v61 = *(_OWORD *)(v10 + 104);
              *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
              *(_OWORD *)(v9 + 104) = v61;
              *(_OWORD *)(v9 + 72) = v60;
            }
            else
            {
              *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
              *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
              *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
              *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
              v178 = (void *)*((_QWORD *)v10 + 13);
              *((_QWORD *)v9 + 13) = v178;
              *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v179 = v178;
            }
            if (*((_QWORD *)v10 + 16) >= 0x11uLL)
            {
              *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
              *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 120) = *(_OWORD *)(v10 + 120);
            }
            v9[136] = v10[136];
            v184 = (void *)*((_QWORD *)v10 + 18);
            if (v184)
            {
              *((_QWORD *)v9 + 18) = v184;
              *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
              *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
              v9[168] = v10[168];
              v9[169] = v10[169];
              v185 = *((_QWORD *)v10 + 22);
              v9[184] = v10[184];
              *((_QWORD *)v9 + 22) = v185;
              *((_QWORD *)v9 + 24) = *((_QWORD *)v10 + 24);
              v186 = (void *)*((_QWORD *)v10 + 25);
              *((_QWORD *)v9 + 25) = v186;
              v9[208] = v10[208];
              v187 = *((_QWORD *)v10 + 28);
              v188 = v184;
              swift_bridgeObjectRetain();
              v189 = v186;
              if (v187 == 1)
              {
                v190 = *(_OWORD *)(v10 + 216);
                v191 = *(_OWORD *)(v10 + 248);
                *(_OWORD *)(v9 + 232) = *(_OWORD *)(v10 + 232);
                *(_OWORD *)(v9 + 248) = v191;
                *(_OWORD *)(v9 + 216) = v190;
              }
              else
              {
                *((_QWORD *)v9 + 27) = *((_QWORD *)v10 + 27);
                *((_QWORD *)v9 + 28) = *((_QWORD *)v10 + 28);
                *((_QWORD *)v9 + 29) = *((_QWORD *)v10 + 29);
                *((_QWORD *)v9 + 30) = *((_QWORD *)v10 + 30);
                v215 = (void *)*((_QWORD *)v10 + 31);
                *((_QWORD *)v9 + 31) = v215;
                *((_QWORD *)v9 + 32) = *((_QWORD *)v10 + 32);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v216 = v215;
              }
              if (*((_QWORD *)v10 + 34) >= 0x11uLL)
              {
                *((_QWORD *)v9 + 33) = *((_QWORD *)v10 + 33);
                *((_QWORD *)v9 + 34) = *((_QWORD *)v10 + 34);
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v9 + 264) = *(_OWORD *)(v10 + 264);
              }
              v9[280] = v10[280];
            }
            else
            {
              *((_OWORD *)v9 + 9) = *((_OWORD *)v10 + 9);
              v209 = *((_OWORD *)v10 + 10);
              v210 = *((_OWORD *)v10 + 11);
              v211 = *((_OWORD *)v10 + 13);
              *((_OWORD *)v9 + 12) = *((_OWORD *)v10 + 12);
              *((_OWORD *)v9 + 13) = v211;
              *((_OWORD *)v9 + 10) = v209;
              *((_OWORD *)v9 + 11) = v210;
              v212 = *((_OWORD *)v10 + 14);
              v213 = *((_OWORD *)v10 + 15);
              v214 = *((_OWORD *)v10 + 16);
              *(_OWORD *)(v9 + 265) = *(_OWORD *)(v10 + 265);
              *((_OWORD *)v9 + 15) = v213;
              *((_OWORD *)v9 + 16) = v214;
              *((_OWORD *)v9 + 14) = v212;
            }
          }
          else
          {
            v164 = *(void **)v10;
            *(_QWORD *)v9 = *(_QWORD *)v10;
            *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
            *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
            v9[24] = v10[24];
            v9[25] = v10[25];
            v165 = *((_QWORD *)v10 + 4);
            v9[40] = v10[40];
            *((_QWORD *)v9 + 4) = v165;
            *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
            v166 = (void *)*((_QWORD *)v10 + 7);
            *((_QWORD *)v9 + 7) = v166;
            v9[64] = v10[64];
            v167 = *((_QWORD *)v10 + 10);
            v168 = v164;
            swift_bridgeObjectRetain();
            v169 = v166;
            if (v167 == 1)
            {
              v170 = *(_OWORD *)(v10 + 72);
              v171 = *(_OWORD *)(v10 + 104);
              *(_OWORD *)(v9 + 88) = *(_OWORD *)(v10 + 88);
              *(_OWORD *)(v9 + 104) = v171;
              *(_OWORD *)(v9 + 72) = v170;
            }
            else
            {
              *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
              *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
              *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
              *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
              v182 = (void *)*((_QWORD *)v10 + 13);
              *((_QWORD *)v9 + 13) = v182;
              *((_QWORD *)v9 + 14) = *((_QWORD *)v10 + 14);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v183 = v182;
            }
            if (*((_QWORD *)v10 + 16) >= 0x11uLL)
            {
              *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
              *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v9 + 120) = *(_OWORD *)(v10 + 120);
            }
            v9[136] = v10[136];
          }
          v9[281] = v53;
          swift_storeEnumTagMultiPayload();
          v7 = v273;
          break;
        case 7u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v9[24] = v10[24];
          v62 = *((_QWORD *)v10 + 4);
          v9[40] = v10[40];
          *((_QWORD *)v9 + 4) = v62;
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
          *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          v63 = *((_QWORD *)v10 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v63 == 1)
          {
            *((_OWORD *)v9 + 5) = *((_OWORD *)v10 + 5);
            v64 = *((_OWORD *)v10 + 6);
            v65 = *((_OWORD *)v10 + 7);
            v66 = *((_OWORD *)v10 + 8);
            v9[144] = v10[144];
            *((_OWORD *)v9 + 7) = v65;
            *((_OWORD *)v9 + 8) = v66;
            *((_OWORD *)v9 + 6) = v64;
          }
          else
          {
            *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
            *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
            v100 = *((_QWORD *)v10 + 15);
            swift_bridgeObjectRetain();
            if (v100)
            {
              *((_QWORD *)v9 + 15) = v100;
              *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v100 - 8))((uint64_t)(v9 + 96), (uint64_t)(v10 + 96), v100);
              v101 = v10[144];
              *((_QWORD *)v9 + 17) = *((_QWORD *)v10 + 17);
              v9[144] = v101;
            }
            else
            {
              v175 = *((_OWORD *)v10 + 6);
              v176 = *((_OWORD *)v10 + 7);
              v177 = *((_OWORD *)v10 + 8);
              v9[144] = v10[144];
              *((_OWORD *)v9 + 7) = v176;
              *((_OWORD *)v9 + 8) = v177;
              *((_OWORD *)v9 + 6) = v175;
            }
          }
          goto LABEL_142;
        case 8u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v67 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v68 = &v9[v67];
          v69 = &v10[v67];
          *(_QWORD *)v68 = *(_QWORD *)v69;
          *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
          *((_QWORD *)v68 + 2) = *((_QWORD *)v69 + 2);
          *((_QWORD *)v68 + 3) = *((_QWORD *)v69 + 3);
          v268 = (int *)type metadata accessor for FormatCustomItem.Resolved();
          v70 = v268[6];
          v258 = &v68[v70];
          v71 = &v69[v70];
          v72 = type metadata accessor for FormatCustomItem.Action();
          v255 = *(_QWORD *)(v72 - 8);
          v261 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v255 + 48);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v261(v71, 1, v72))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v258, v71, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
          }
          else
          {
            v146 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v258, v71, v146);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v255 + 56))(v258, 0, 1, v72);
          }
          *(_QWORD *)&v68[v268[7]] = *(_QWORD *)&v69[v268[7]];
          swift_bridgeObjectRetain();
          goto LABEL_142;
        case 9u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
          v28 = *((_QWORD *)v10 + 7);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v28)
          {
            *((_QWORD *)v9 + 7) = v28;
            *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v28 - 8))((uint64_t)(v9 + 32), (uint64_t)(v10 + 32), v28);
          }
          else
          {
            v107 = *((_OWORD *)v10 + 2);
            v108 = *((_OWORD *)v10 + 3);
            *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
            *((_OWORD *)v9 + 2) = v107;
            *((_OWORD *)v9 + 3) = v108;
          }
          v109 = v9 + 72;
          v110 = (__int128 *)(v10 + 72);
          v111 = *((_QWORD *)v10 + 12);
          if (v111)
          {
            *((_QWORD *)v9 + 12) = v111;
            *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
            (**(void (***)(_OWORD *, __int128 *))(v111 - 8))(v109, v110);
          }
          else
          {
            v118 = *v110;
            v119 = *(_OWORD *)(v10 + 88);
            *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
            *v109 = v118;
            *(_OWORD *)(v9 + 88) = v119;
          }
          v120 = v9 + 112;
          v121 = (__int128 *)(v10 + 112);
          v122 = *((_QWORD *)v10 + 17);
          if (v122)
          {
            *((_QWORD *)v9 + 17) = v122;
            *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
            (**(void (***)(_OWORD *, __int128 *))(v122 - 8))(v120, v121);
          }
          else
          {
            v133 = *v121;
            v134 = *((_OWORD *)v10 + 8);
            *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
            *v120 = v133;
            *((_OWORD *)v9 + 8) = v134;
          }
          goto LABEL_142;
        case 0xAu:
          v274 = v7;
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          v74 = (int *)type metadata accessor for FeedEngagementBanner();
          v75 = v74[5];
          v76 = &v9[v75];
          v77 = &v10[v75];
          v78 = sub_1BB86EDAC();
          v79 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16);
          swift_bridgeObjectRetain();
          v79(v76, v77, v78);
          *(_QWORD *)&v9[v74[6]] = *(_QWORD *)&v10[v74[6]];
          v80 = v74[7];
          v81 = &v9[v80];
          v82 = &v10[v80];
          v83 = v82[8];
          *(_QWORD *)v81 = *(_QWORD *)v82;
          v81[8] = v83;
          v84 = v74[8];
          v85 = &v9[v84];
          v86 = &v10[v84];
          if (*((_QWORD *)v86 + 1) >= 0x11uLL)
          {
            *(_QWORD *)v85 = *(_QWORD *)v86;
            *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v85 = *(_OWORD *)v86;
          }
          v7 = v274;
          goto LABEL_142;
        case 0xBu:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          swift_retain();
          goto LABEL_142;
        case 0xCu:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v29 = *((_QWORD *)v10 + 3);
          v9[32] = v10[32];
          *((_QWORD *)v9 + 3) = v29;
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_142;
        case 0xDu:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v87 = *((_QWORD *)v10 + 1);
          v9[16] = v10[16];
          *((_QWORD *)v9 + 1) = v87;
          if (*((_QWORD *)v10 + 4) >= 0x11uLL)
          {
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          }
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
          v102 = (void *)*((_QWORD *)v10 + 8);
          *((_QWORD *)v9 + 8) = v102;
          v9[72] = v10[72];
          *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
          v103 = *((_QWORD *)v10 + 14);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v104 = v102;
          swift_bridgeObjectRetain();
          if (v103)
          {
            *((_QWORD *)v9 + 14) = v103;
            *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v103 - 8))((uint64_t)(v9 + 88), (uint64_t)(v10 + 88), v103);
          }
          else
          {
            v147 = *(_OWORD *)(v10 + 88);
            v148 = *(_OWORD *)(v10 + 104);
            *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
            *(_OWORD *)(v9 + 88) = v147;
            *(_OWORD *)(v9 + 104) = v148;
          }
          v149 = v9 + 128;
          v150 = (__int128 *)(v10 + 128);
          v151 = *((_QWORD *)v10 + 19);
          if (v151)
          {
            *((_QWORD *)v9 + 19) = v151;
            *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
            (**(void (***)(_OWORD *, __int128 *))(v151 - 8))(v149, v150);
          }
          else
          {
            v157 = *v150;
            v158 = *((_OWORD *)v10 + 9);
            *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
            *v149 = v157;
            *((_OWORD *)v9 + 9) = v158;
          }
          goto LABEL_142;
        case 0xEu:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v30 = *((_QWORD *)v10 + 1);
          v9[16] = v10[16];
          *((_QWORD *)v9 + 1) = v30;
          if (*((_QWORD *)v10 + 4) >= 0x11uLL)
          {
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          }
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          goto LABEL_142;
        case 0xFu:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          v88 = *((_QWORD *)v10 + 1);
          v9[16] = v10[16];
          *((_QWORD *)v9 + 1) = v88;
          if (*((_QWORD *)v10 + 4) >= 0x11uLL)
          {
            *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
            *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          }
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          *((_QWORD *)v9 + 6) = *((_QWORD *)v10 + 6);
          v105 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)&v9[v105] = *(_QWORD *)&v10[v105];
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          v106 = (char *)&loc_1BAF3E87C + 4 * word_1BB8D505C[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        case 0x10u:
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = *((_QWORD *)v10 + 1);
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          *((_QWORD *)v9 + 3) = *((_QWORD *)v10 + 3);
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          *((_QWORD *)v9 + 5) = *((_QWORD *)v10 + 5);
          v9[48] = v10[48];
          v9[49] = v10[49];
          *((_QWORD *)v9 + 7) = *((_QWORD *)v10 + 7);
          *((_QWORD *)v9 + 8) = *((_QWORD *)v10 + 8);
          *((_QWORD *)v9 + 9) = *((_QWORD *)v10 + 9);
          *((_QWORD *)v9 + 10) = *((_QWORD *)v10 + 10);
          *((_QWORD *)v9 + 11) = *((_QWORD *)v10 + 11);
          *((_QWORD *)v9 + 12) = *((_QWORD *)v10 + 12);
          *((_QWORD *)v9 + 13) = *((_QWORD *)v10 + 13);
          v9[112] = v10[112];
          *((_QWORD *)v9 + 15) = *((_QWORD *)v10 + 15);
          *((_QWORD *)v9 + 16) = *((_QWORD *)v10 + 16);
          v9[136] = v10[136];
          *((_QWORD *)v9 + 18) = *((_QWORD *)v10 + 18);
          *((_QWORD *)v9 + 19) = *((_QWORD *)v10 + 19);
          *((_QWORD *)v9 + 20) = *((_QWORD *)v10 + 20);
          *((_QWORD *)v9 + 21) = *((_QWORD *)v10 + 21);
          v31 = *((_QWORD *)v10 + 22);
          v9[184] = v10[184];
          *((_QWORD *)v9 + 22) = v31;
          *((_QWORD *)v9 + 24) = *((_QWORD *)v10 + 24);
          *((_QWORD *)v9 + 25) = *((_QWORD *)v10 + 25);
          *((_QWORD *)v9 + 26) = *((_QWORD *)v10 + 26);
          v32 = *((_QWORD *)v10 + 27);
          v9[224] = v10[224];
          *((_QWORD *)v9 + 27) = v32;
          v254 = *((_QWORD *)v10 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v254 >= 0x11)
          {
            *((_QWORD *)v9 + 29) = *((_QWORD *)v10 + 29);
            *((_QWORD *)v9 + 30) = *((_QWORD *)v10 + 30);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v9 + 232) = *(_OWORD *)(v10 + 232);
          }
LABEL_142:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      v233 = v7[8];
      v234 = (_OWORD *)(a1 + v233);
      v235 = (_OWORD *)(a2 + v233);
      v236 = v235[1];
      *v234 = *v235;
      v234[1] = v236;
      v237 = v7[9];
      v238 = (_OWORD *)(a1 + v237);
      v239 = (_OWORD *)(a2 + v237);
      v240 = v239[1];
      *v238 = *v239;
      v238[1] = v240;
      sub_1BAF38740();
      *(_QWORD *)(a1 + *(int *)(v241 + 48)) = *(_QWORD *)(a2 + *(int *)(v241 + 48));
    }
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BAF40020(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5;
  int *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  char *v87;
  int *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  _OWORD *v108;
  __int128 v109;
  uint64_t v110;
  _OWORD *v111;
  _OWORD *v112;
  __int128 v113;
  uint64_t v114;
  _OWORD *result;
  uint64_t v116;
  int *v117;
  uint64_t v118;
  char *__dst;
  void (*v120)(char *, char *, uint64_t);
  char *v121;
  uint64_t v122;
  int *v123;
  int *v124;
  char *v125;
  char *v126;
  int *v127;
  int *v128;
  int *v129;

  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
    v7 = v6[7];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v11 = (int *)type metadata accessor for FeedBannerAd();
        v12 = v11[5];
        v13 = &v8[v12];
        v14 = &v9[v12];
        v15 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        *(_QWORD *)&v8[v11[6]] = *(_QWORD *)&v9[v11[6]];
        v16 = v11[7];
        v17 = &v8[v16];
        v18 = &v9[v16];
        v17[8] = v18[8];
        *(_QWORD *)v17 = *(_QWORD *)v18;
        *(_OWORD *)&v8[v11[8]] = *(_OWORD *)&v9[v11[8]];
        goto LABEL_42;
      case 3u:
        v127 = v6;
        *(_OWORD *)v8 = *(_OWORD *)v9;
        *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
        v8[24] = v9[24];
        *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v8[56] = v9[56];
        v123 = (int *)type metadata accessor for FeedHeadline(0);
        v125 = v8;
        v19 = v123[10];
        v20 = &v8[v19];
        v21 = &v9[v19];
        *v20 = v9[v19];
        v20[1] = v9[v19 + 1];
        v22 = (int *)type metadata accessor for FeedHeadline.State(0);
        v23 = v22[6];
        v24 = &v20[v23];
        v25 = &v21[v23];
        v26 = (int *)type metadata accessor for SharedItem();
        v27 = *((_QWORD *)v26 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v27 + 48))(v25, 1, v26))
        {
          v28 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v63 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v24, v25, v63);
          v24[v26[5]] = v25[v26[5]];
          *(_QWORD *)&v24[v26[6]] = *(_QWORD *)&v25[v26[6]];
          v64 = v26[7];
          v121 = &v24[v64];
          v65 = &v25[v64];
          v66 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v121, v65, v66);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v27 + 56))(v24, 0, 1, v26);
        }
        v20[v22[7]] = v21[v22[7]];
        v20[v22[8]] = v21[v22[8]];
        v20[v22[9]] = v21[v22[9]];
        v20[v22[10]] = v21[v22[10]];
        v67 = v123[11];
        v68 = &v125[v67];
        v69 = &v9[v67];
        v70 = sub_1BB871B24();
        v71 = *(_QWORD *)(v70 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
        }
        v6 = v127;
        *(_OWORD *)&v125[v123[12]] = *(_OWORD *)&v9[v123[12]];
        v81 = v123[13];
        v82 = *(_QWORD *)&v9[v81];
        if (v82 == 2)
          v82 = 2;
        *(_QWORD *)&v125[v81] = v82;
        *(_QWORD *)&v125[v123[14]] = *(_QWORD *)&v9[v123[14]];
        goto LABEL_42;
      case 4u:
        v128 = v6;
        v29 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v29;
        v8[16] = v9[16];
        *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v30 = (int *)type metadata accessor for FeedWebEmbed();
        v31 = v30[8];
        v32 = &v8[v31];
        v33 = &v9[v31];
        v34 = sub_1BB86C67C();
        v35 = *(_QWORD *)(v34 - 8);
        v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
        v36(v32, v33, v34);
        v124 = v30;
        v37 = v30[9];
        v38 = &v8[v37];
        v39 = &v9[v37];
        v120 = v36;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v9[v37], 1, v34))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v36(v38, v39, v34);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
        }
        v73 = v30;
        *(_QWORD *)&v8[v30[10]] = *(_QWORD *)&v9[v30[10]];
        *(_QWORD *)&v8[v30[11]] = *(_QWORD *)&v9[v30[11]];
        v74 = v30[12];
        v126 = v8;
        v75 = &v8[v74];
        v76 = &v9[v74];
        v77 = (int *)type metadata accessor for FeedHeadline(0);
        v78 = *((_QWORD *)v77 - 1);
        v122 = v34;
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v78 + 48))(v76, 1, v77))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
        }
        else
        {
          v118 = v78;
          *(_OWORD *)v75 = *(_OWORD *)v76;
          *((_QWORD *)v75 + 2) = *((_QWORD *)v76 + 2);
          v75[24] = v76[24];
          *((_QWORD *)v75 + 4) = *((_QWORD *)v76 + 4);
          *(_OWORD *)(v75 + 40) = *(_OWORD *)(v76 + 40);
          v75[56] = v76[56];
          v83 = v77[10];
          v84 = &v75[v83];
          v85 = &v76[v83];
          *v84 = v76[v83];
          v84[1] = v76[v83 + 1];
          v117 = (int *)type metadata accessor for FeedHeadline.State(0);
          v86 = v117[6];
          __dst = &v84[v86];
          v87 = &v85[v86];
          v88 = (int *)type metadata accessor for SharedItem();
          v116 = *((_QWORD *)v88 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v116 + 48))(v87, 1, v88))
          {
            v89 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          }
          else
          {
            v90 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 32))(__dst, v87, v90);
            __dst[v88[5]] = v87[v88[5]];
            *(_QWORD *)&__dst[v88[6]] = *(_QWORD *)&v87[v88[6]];
            v120(&__dst[v88[7]], &v87[v88[7]], v122);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v116 + 56))(__dst, 0, 1, v88);
          }
          v84[v117[7]] = v85[v117[7]];
          v84[v117[8]] = v85[v117[8]];
          v84[v117[9]] = v85[v117[9]];
          v84[v117[10]] = v85[v117[10]];
          v91 = v77[11];
          v92 = &v75[v91];
          v93 = &v76[v91];
          v94 = sub_1BB871B24();
          v95 = *(_QWORD *)(v94 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v92, v93, v94);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
          }
          v73 = v124;
          *(_OWORD *)&v75[v77[12]] = *(_OWORD *)&v76[v77[12]];
          v97 = v77[13];
          v98 = *(_QWORD *)&v76[v97];
          if (v98 == 2)
            v98 = 2;
          *(_QWORD *)&v75[v97] = v98;
          *(_QWORD *)&v75[v77[14]] = *(_QWORD *)&v76[v77[14]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v118 + 56))(v75, 0, 1, v77);
        }
        v99 = v73[13];
        v100 = &v126[v99];
        v101 = &v9[v99];
        v102 = type metadata accessor for WebEmbedDataVisualization();
        v103 = *(_QWORD *)(v102 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v100 = *(_OWORD *)v101;
            v105 = type metadata accessor for GenericDataVisualization();
            v120(&v100[*(int *)(v105 + 20)], &v101[*(int *)(v105 + 20)], v122);
            v73 = v124;
            *(_QWORD *)&v100[*(int *)(v105 + 24)] = *(_QWORD *)&v101[*(int *)(v105 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v100, v101, *(_QWORD *)(v103 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
        }
        v6 = v128;
        v126[v73[14]] = v9[v73[14]];
        goto LABEL_42;
      case 8u:
        v129 = v6;
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v41 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v42 = &v8[v41];
        v43 = &v9[v41];
        v44 = *(_OWORD *)&v9[v41 + 16];
        *(_OWORD *)v42 = *(_OWORD *)&v9[v41];
        *((_OWORD *)v42 + 1) = v44;
        v45 = type metadata accessor for FormatCustomItem.Resolved();
        v46 = *(int *)(v45 + 24);
        v47 = &v42[v46];
        v48 = &v43[v46];
        v49 = type metadata accessor for FormatCustomItem.Action();
        v50 = *(_QWORD *)(v49 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
        }
        else
        {
          v80 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 32))(v47, v48, v80);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
        }
        *(_QWORD *)&v42[*(int *)(v45 + 28)] = *(_QWORD *)&v43[*(int *)(v45 + 28)];
        swift_storeEnumTagMultiPayload();
        v6 = v129;
        break;
      case 0xAu:
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v52 = (int *)type metadata accessor for FeedEngagementBanner();
        v53 = v52[5];
        v54 = &v8[v53];
        v55 = &v9[v53];
        v56 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
        *(_QWORD *)&v8[v52[6]] = *(_QWORD *)&v9[v52[6]];
        v57 = v52[7];
        v58 = &v8[v57];
        v59 = &v9[v57];
        v58[8] = v59[8];
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *(_OWORD *)&v8[v52[8]] = *(_OWORD *)&v9[v52[8]];
LABEL_42:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v60 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v60;
        v8[16] = v9[16];
        *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
        *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
        v61 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&v8[v61] = *(_QWORD *)&v9[v61];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v62 = (char *)&loc_1BAF40498 + 4 * word_1BB8D5072[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    v106 = v6[8];
    v107 = (_OWORD *)((char *)a1 + v106);
    v108 = (_OWORD *)((char *)a2 + v106);
    v109 = v108[1];
    *v107 = *v108;
    v107[1] = v109;
    v110 = v6[9];
    v111 = (_OWORD *)((char *)a1 + v110);
    v112 = (_OWORD *)((char *)a2 + v110);
    v113 = v112[1];
    *v111 = *v112;
    v111[1] = v113;
    sub_1BAF38740();
    *(_QWORD *)((char *)a1 + *(int *)(v114 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v114 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BAF41410(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(char *, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  char *v88;
  int *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _OWORD *v108;
  _OWORD *v109;
  __int128 v110;
  uint64_t v111;
  _OWORD *v112;
  _OWORD *v113;
  __int128 v114;
  uint64_t v115;
  _OWORD *result;
  uint64_t v117;
  int *v118;
  int *v119;
  uint64_t v120;
  char *__dst;
  char *__dsta;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  int *v127;
  int *v128;
  int *v129;
  int *v130;
  char *v131;
  char *v132;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
    else
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = (int *)type metadata accessor for FormatItemNodeLayoutContext();
      v8 = v7[7];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = type metadata accessor for FeedItem(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v12 = (int *)type metadata accessor for FeedBannerAd();
          v13 = v12[5];
          v14 = &v9[v13];
          v15 = &v10[v13];
          v16 = sub_1BB8721C0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
          *(_QWORD *)&v9[v12[6]] = *(_QWORD *)&v10[v12[6]];
          v17 = v12[7];
          v18 = &v9[v17];
          v19 = &v10[v17];
          v18[8] = v19[8];
          *(_QWORD *)v18 = *(_QWORD *)v19;
          *(_OWORD *)&v9[v12[8]] = *(_OWORD *)&v10[v12[8]];
          goto LABEL_43;
        case 3u:
          v128 = v7;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          *((_QWORD *)v9 + 2) = *((_QWORD *)v10 + 2);
          v9[24] = v10[24];
          *((_QWORD *)v9 + 4) = *((_QWORD *)v10 + 4);
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          v9[56] = v10[56];
          v126 = (int *)type metadata accessor for FeedHeadline(0);
          v20 = v126[10];
          v131 = v9;
          v21 = &v9[v20];
          v22 = &v10[v20];
          *v21 = v10[v20];
          v21[1] = v10[v20 + 1];
          v23 = (int *)type metadata accessor for FeedHeadline.State(0);
          v24 = v23[6];
          v25 = &v21[v24];
          v26 = &v22[v24];
          v27 = (int *)type metadata accessor for SharedItem();
          v124 = *((_QWORD *)v27 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v124 + 48))(v26, 1, v27))
          {
            v28 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            v63 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v25, v26, v63);
            v25[v27[5]] = v26[v27[5]];
            *(_QWORD *)&v25[v27[6]] = *(_QWORD *)&v26[v27[6]];
            v64 = v27[7];
            v123 = &v25[v64];
            v65 = &v26[v64];
            v66 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 32))(v123, v65, v66);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v124 + 56))(v25, 0, 1, v27);
          }
          v21[v23[7]] = v22[v23[7]];
          v21[v23[8]] = v22[v23[8]];
          v21[v23[9]] = v22[v23[9]];
          v21[v23[10]] = v22[v23[10]];
          v67 = v126[11];
          v68 = &v131[v67];
          v69 = &v10[v67];
          v70 = sub_1BB871B24();
          v71 = *(_QWORD *)(v70 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v69, 1, v70))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v68, v69, v70);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v71 + 56))(v68, 0, 1, v70);
          }
          v7 = v128;
          *(_OWORD *)&v131[v126[12]] = *(_OWORD *)&v10[v126[12]];
          v82 = v126[13];
          v83 = *(_QWORD *)&v10[v82];
          if (v83 == 2)
            v83 = 2;
          *(_QWORD *)&v131[v82] = v83;
          *(_QWORD *)&v131[v126[14]] = *(_QWORD *)&v10[v126[14]];
          goto LABEL_43;
        case 4u:
          v129 = v7;
          v29 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = v29;
          v9[16] = v10[16];
          *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          v30 = (int *)type metadata accessor for FeedWebEmbed();
          v31 = v30[8];
          v32 = &v9[v31];
          v33 = &v10[v31];
          v34 = sub_1BB86C67C();
          v35 = *(_QWORD *)(v34 - 8);
          v36 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
          v36(v32, v33, v34);
          v127 = v30;
          v37 = v30[9];
          v38 = &v9[v37];
          v39 = &v10[v37];
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(&v10[v37], 1, v34))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
            memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
          }
          else
          {
            v36(v38, v39, v34);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v38, 0, 1, v34);
          }
          *(_QWORD *)&v9[v30[10]] = *(_QWORD *)&v10[v30[10]];
          *(_QWORD *)&v9[v30[11]] = *(_QWORD *)&v10[v30[11]];
          v73 = v30[12];
          v132 = v9;
          v74 = &v9[v73];
          v75 = &v10[v73];
          v76 = type metadata accessor for FeedHeadline(0);
          v77 = *(_QWORD *)(v76 - 8);
          v125 = v34;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
            memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
            v79 = v132;
            v80 = v127;
          }
          else
          {
            v120 = v77;
            *(_OWORD *)v74 = *(_OWORD *)v75;
            *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
            v74[24] = v75[24];
            *((_QWORD *)v74 + 4) = *((_QWORD *)v75 + 4);
            *(_OWORD *)(v74 + 40) = *(_OWORD *)(v75 + 40);
            v74[56] = v75[56];
            v118 = (int *)v76;
            v84 = *(int *)(v76 + 40);
            v85 = &v74[v84];
            v86 = &v75[v84];
            *v85 = v75[v84];
            v85[1] = v75[v84 + 1];
            v119 = (int *)type metadata accessor for FeedHeadline.State(0);
            v87 = v119[6];
            __dst = &v85[v87];
            v88 = &v86[v87];
            v89 = (int *)type metadata accessor for SharedItem();
            v117 = *((_QWORD *)v89 - 1);
            if ((*(unsigned int (**)(char *, uint64_t, int *))(v117 + 48))(v88, 1, v89))
            {
              v90 = type metadata accessor for FeedItem.SharedState(0);
              memcpy(__dst, v88, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
            }
            else
            {
              v91 = sub_1BB86C8B0();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(__dst, v88, v91);
              __dst[v89[5]] = v88[v89[5]];
              *(_QWORD *)&__dst[v89[6]] = *(_QWORD *)&v88[v89[6]];
              v36(&__dst[v89[7]], &v88[v89[7]], v125);
              (*(void (**)(char *, _QWORD, uint64_t, int *))(v117 + 56))(__dst, 0, 1, v89);
            }
            v85[v119[7]] = v86[v119[7]];
            v85[v119[8]] = v86[v119[8]];
            v85[v119[9]] = v86[v119[9]];
            v85[v119[10]] = v86[v119[10]];
            v92 = v118[11];
            __dsta = &v74[v92];
            v93 = &v75[v92];
            v94 = sub_1BB871B24();
            v95 = *(_QWORD *)(v94 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v93, 1, v94))
            {
              sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
              memcpy(__dsta, v93, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v95 + 32))(__dsta, v93, v94);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(__dsta, 0, 1, v94);
            }
            v80 = v127;
            *(_OWORD *)&v74[v118[12]] = *(_OWORD *)&v75[v118[12]];
            v97 = v118[13];
            v98 = *(_QWORD *)&v75[v97];
            if (v98 == 2)
              v98 = 2;
            *(_QWORD *)&v74[v97] = v98;
            *(_QWORD *)&v74[v118[14]] = *(_QWORD *)&v75[v118[14]];
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v120 + 56))(v74, 0, 1, v118);
            v79 = v132;
          }
          v99 = v80[13];
          v100 = &v79[v99];
          v101 = &v10[v99];
          v102 = type metadata accessor for WebEmbedDataVisualization();
          v103 = *(_QWORD *)(v102 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48))(v101, 1, v102))
          {
            sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *(_OWORD *)v100 = *(_OWORD *)v101;
              v105 = type metadata accessor for GenericDataVisualization();
              v36(&v100[*(int *)(v105 + 20)], &v101[*(int *)(v105 + 20)], v125);
              v106 = *(int *)(v105 + 24);
              v80 = v127;
              *(_QWORD *)&v100[v106] = *(_QWORD *)&v101[v106];
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v100, v101, *(_QWORD *)(v103 + 64));
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
          }
          v7 = v129;
          v79[v80[14]] = v10[v80[14]];
          goto LABEL_43;
        case 8u:
          v130 = v7;
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v41 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
          v42 = &v9[v41];
          v43 = &v10[v41];
          v44 = *(_OWORD *)&v10[v41 + 16];
          *(_OWORD *)v42 = *(_OWORD *)&v10[v41];
          *((_OWORD *)v42 + 1) = v44;
          v45 = type metadata accessor for FormatCustomItem.Resolved();
          v46 = *(int *)(v45 + 24);
          v47 = &v42[v46];
          v48 = &v43[v46];
          v49 = type metadata accessor for FormatCustomItem.Action();
          v50 = *(_QWORD *)(v49 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
          {
            sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
            memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          }
          else
          {
            v81 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v81 - 8) + 32))(v47, v48, v81);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
          }
          *(_QWORD *)&v42[*(int *)(v45 + 28)] = *(_QWORD *)&v43[*(int *)(v45 + 28)];
          swift_storeEnumTagMultiPayload();
          v7 = v130;
          break;
        case 0xAu:
          *(_OWORD *)v9 = *(_OWORD *)v10;
          v52 = (int *)type metadata accessor for FeedEngagementBanner();
          v53 = v52[5];
          v54 = &v9[v53];
          v55 = &v10[v53];
          v56 = sub_1BB86EDAC();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 32))(v54, v55, v56);
          *(_QWORD *)&v9[v52[6]] = *(_QWORD *)&v10[v52[6]];
          v57 = v52[7];
          v58 = &v9[v57];
          v59 = &v10[v57];
          v58[8] = v59[8];
          *(_QWORD *)v58 = *(_QWORD *)v59;
          *(_OWORD *)&v9[v52[8]] = *(_OWORD *)&v10[v52[8]];
LABEL_43:
          swift_storeEnumTagMultiPayload();
          break;
        case 0xFu:
          v60 = *((_QWORD *)v10 + 1);
          *(_QWORD *)v9 = *(_QWORD *)v10;
          *((_QWORD *)v9 + 1) = v60;
          v9[16] = v10[16];
          *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
          *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
          v61 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
          *(_QWORD *)&v9[v61] = *(_QWORD *)&v10[v61];
          type metadata accessor for PuzzleStatistic();
          type metadata accessor for PuzzleStatisticCategory(0);
          v62 = (char *)&loc_1BAF418B0 + 4 * word_1BB8D5088[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
          return result;
        default:
          memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
          break;
      }
      v107 = v7[8];
      v108 = (_OWORD *)((char *)a1 + v107);
      v109 = (_OWORD *)((char *)a2 + v107);
      v110 = v109[1];
      *v108 = *v109;
      v108[1] = v110;
      v111 = v7[9];
      v112 = (_OWORD *)((char *)a1 + v111);
      v113 = (_OWORD *)((char *)a2 + v111);
      v114 = v113[1];
      *v112 = *v113;
      v112[1] = v114;
      sub_1BAF38740();
      *(_QWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_QWORD *)((char *)a2 + *(int *)(v115 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAF42858()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  result = type metadata accessor for FormatItemNodeLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = "x";
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t NativeAdHeadline.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v11;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)sub_1BB871D28(), sel_articleID, 0xD000000000000013, 0x80000001BB9720D0);
  swift_unknownObjectRelease();
  sub_1BB8729A0();

  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  v4 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
  v5 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithString_, v5);

  if (!v6)
    goto LABEL_6;
  sub_1BB872AA8();
  v7 = sub_1BB873564();
  swift_bridgeObjectRelease();
  if (!v7)
  {

LABEL_6:
    v9 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
  v8 = objc_msgSend((id)sub_1BB871D28(), sel_title);
  swift_unknownObjectRelease();
  if (v8)
  {
    sub_1BB8729A0();

  }
  sub_1BB8714AC();

  v11 = sub_1BB8714B8();
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 0, 1, v11);
}

uint64_t DebugNativeAdHeadline.dragItem.getter@<X0>(uint64_t a1@<X8>)
{
  id v2;
  _QWORD *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)sub_1BB871F38(), sel_articleID, 0xD000000000000013, 0x80000001BB9720D0);
  swift_unknownObjectRelease();
  sub_1BB8729A0();

  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  v4 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
  v5 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v6 = objc_msgSend(v4, sel_initWithString_, v5);

  if (v6)
  {
    v7 = objc_msgSend((id)sub_1BB871F38(), sel_title);
    swift_unknownObjectRelease();
    if (v7)
    {
      sub_1BB8729A0();

    }
    sub_1BB8714AC();
    v10 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a1, 0, 1, v10);
  }
  else
  {
    v8 = sub_1BB8714B8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t FeedReloadChecker.__allocating_init(changes:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t FeedReloadChecker.init(changes:)(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t FeedReloadChecker.shouldReload(headline:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  swift_bridgeObjectRetain();
  v5 = (_BYTE *)(v2 + 40);
  while (1)
  {
    if (*v5 - 1 >= 2)
    {
      v12 = *((_QWORD *)v5 - 1);
      if (*v5)
      {
        swift_bridgeObjectRetain();
        v13 = objc_msgSend(a1, sel_sourceChannelID);
        if (!v13)
        {
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
        v14 = v13;
        v15 = sub_1BB8729A0();
        v9 = v16;

        v10 = v15;
      }
      else
      {
        swift_bridgeObjectRetain();
        v6 = objc_msgSend(a1, sel_identifier);
        v7 = sub_1BB8729A0();
        v9 = v8;

        v10 = v7;
      }
      v11 = sub_1BA761FE4(v10, v9, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) != 0)
        break;
    }
LABEL_5:
    v5 += 16;
    if (!--v3)
    {
      v17 = 0;
      goto LABEL_14;
    }
  }
  v17 = 1;
LABEL_14:
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t FeedReloadChecker.shouldReload(puzzle:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  int v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  swift_bridgeObjectRetain();
  v5 = (unsigned __int8 *)(v2 + 40);
  v6 = (unsigned __int8 *)(v2 + 40);
  do
  {
    v7 = *v6;
    v6 += 16;
    if (v7 == 1)
    {
      v8 = *((_QWORD *)v5 - 1);
      swift_bridgeObjectRetain();
      v9 = objc_msgSend(a1, sel_identifier);
      v10 = sub_1BB8729A0();
      v12 = v11;

      LOBYTE(v9) = sub_1BA761FE4(v10, v12, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) != 0)
      {
        v13 = 1;
        goto LABEL_8;
      }
    }
    v5 = v6;
    --v3;
  }
  while (v3);
  v13 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FeedReloadChecker.shouldReload(puzzleStatistic:)(void **a1)
{
  uint64_t v1;
  uint64_t v3;
  unsigned __int8 *v4;
  int v5;
  void *v6;
  id v7;

  v3 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  if (v3)
  {
    v4 = (unsigned __int8 *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v5 = *v4;
      v4 += 16;
      if (v5 == 2)
      {
        v6 = *a1;
        swift_bridgeObjectRetain();
        v7 = objc_msgSend(v6, sel_identifier);
        sub_1BB8729A0();

        type metadata accessor for PuzzleStatistic();
        PuzzleStatisticCategory.statisticType.getter();
        __asm { BR              X9 }
      }
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t FeedReloadChecker.shouldReload(issue:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  unsigned int v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
    return 0;
  swift_bridgeObjectRetain();
  v5 = (unsigned __int8 *)(v2 + 40);
  v6 = (unsigned __int8 *)(v2 + 40);
  do
  {
    v7 = *v6;
    v6 += 16;
    if (v7 >= 3)
    {
      v8 = *((_QWORD *)v5 - 1);
      swift_bridgeObjectRetain();
      v9 = objc_msgSend(objc_msgSend(a1, sel_sourceChannel), sel_identifier);
      swift_unknownObjectRelease();
      v10 = sub_1BB8729A0();
      v12 = v11;

      LOBYTE(v10) = sub_1BA761FE4(v10, v12, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        v13 = 1;
        goto LABEL_8;
      }
    }
    v5 = v6;
    --v3;
  }
  while (v3);
  v13 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FeedReloadChecker.shouldReload(formatGroup:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v30[14];
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)v30 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v31);
  v35 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v33);
  v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v30[11] = (char *)v30 - v10;
  MEMORY[0x1E0C80A78](v11);
  v32 = (char *)v30 - v12;
  MEMORY[0x1E0C80A78](v13);
  v34 = (char *)v30 - v14;
  v38 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v38);
  v43 = (char *)v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v37);
  v42 = (char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = type metadata accessor for FormatContentSlotItemResolution();
  v47 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v46 = (uint64_t)v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FormatFeedGroup();
  type metadata accessor for FormatContent.Resolved();
  v22 = swift_bridgeObjectRetain();
  v23 = sub_1BB14027C(v22);
  v30[10] = 0;
  swift_bridgeObjectRelease();
  v24 = *(_QWORD *)(v23 + 16);
  if (v24)
  {
    v25 = 0;
    v30[7] = "uzzlesSolved";
    v30[4] = "fastestTimeByDifficultyLevel";
    v30[1] = "averageTimeByDifficultyLevel";
    v30[8] = "fficultyLevel";
    v39 = v6;
    v30[6] = v8;
    v36 = v17;
    v40 = v19;
    v30[13] = v23;
    v30[9] = v2;
    v30[3] = v24;
    v30[2] = v23 + 32;
    while (1)
    {
      if (v25 >= *(_QWORD *)(v23 + 16))
        goto LABEL_10;
      v26 = *(_QWORD *)(v23 + 32 + 16 * v25);
      if (*(_QWORD *)(v26 + 16))
        break;
      if (++v25 == v24)
        goto LABEL_8;
    }
    v30[5] = v25;
    v45 = v26 + ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80));
    swift_bridgeObjectRetain();
    v41 = v26;
    if (*(_QWORD *)(v26 + 16))
    {
      v27 = v46;
      sub_1BA4C2DD8(v45, v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      sub_1BA4C2DD8(v27, (uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
      sub_1BA4A2E80(v27, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemResolution);
      v28 = (char *)&loc_1BAF436C4 + *((int *)qword_1BAF44778 + swift_getEnumCaseMultiPayload());
      v48 = 1;
      __asm { BR              X9 }
    }
    __break(1u);
LABEL_10:
    __break(1u);
    JUMPOUT(0x1BAF44778);
  }
LABEL_8:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t FeedReloadChecker.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedReloadChecker.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t initializeBufferWithCopyOfBuffer for FormatRatio(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatRatio(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatRatio(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FeedReloadChange()
{
  return &type metadata for FeedReloadChange;
}

uint64_t type metadata accessor for FeedReloadChecker()
{
  return objc_opt_self();
}

uint64_t method lookup function for FeedReloadChecker()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedReloadChecker.__allocating_init(changes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void PuzzleAccessoryInputConfiguration.init(with:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  void *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  const char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;

  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_19;
  v4 = sub_1BA6E35A8(1701869940, 0xE400000000000000);
  if ((v5 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v38);
    sub_1BAF47B78();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = v43;
      swift_bridgeObjectRelease();

LABEL_20:
      *(_QWORD *)(a2 + 64) = 0;
      *(_OWORD *)(a2 + 32) = 0u;
      *(_OWORD *)(a2 + 48) = 0u;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return;
    }
  }
  if (!*(_QWORD *)(a1 + 16) || (v7 = sub_1BA6E35A8(1701869940, 0xE400000000000000), (v8 & 1) == 0))
  {
LABEL_19:
    v38 = 0u;
    v39 = 0u;
    sub_1BA6EDA74((uint64_t)&v38);
    swift_bridgeObjectRelease();
    goto LABEL_20;
  }
  sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v7, (uint64_t)&v38);
  sub_1BA6EDA74((uint64_t)&v38);
  if (!*(_QWORD *)(a1 + 16)
    || (v9 = sub_1BA6E35A8(25705, 0xE200000000000000), (v10 & 1) == 0)
    || (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v9, (uint64_t)&v38), (swift_dynamicCast() & 1) == 0))
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v26 = sub_1BB86EFEC();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v18 = sub_1BB86EFC8();
    v19 = sub_1BB8732F4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)&v38 = v21;
      swift_bridgeObjectRetain();
      v27 = sub_1BB872778();
      v29 = v28;
      swift_bridgeObjectRelease();
      v43 = (void *)sub_1BA5D2E14(v27, v29, (uint64_t *)&v38);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v25 = "Failed parsing PuzzleAccessoryInputConfig. Invalid id entry: %s";
      goto LABEL_25;
    }
LABEL_30:

    swift_bridgeObjectRelease_n();
    goto LABEL_20;
  }
  v11 = v44;
  if (!*(_QWORD *)(a1 + 16)
    || (v12 = (uint64_t)v43, v13 = sub_1BA6E35A8(1701869940, 0xE400000000000000), (v14 & 1) == 0)
    || (sub_1BA747A10(*(_QWORD *)(a1 + 56) + 32 * v13, (uint64_t)&v38), (swift_dynamicCast() & 1) == 0))
  {
    swift_bridgeObjectRelease();
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v30 = sub_1BB86EFEC();
    __swift_project_value_buffer(v30, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v18 = sub_1BB86EFC8();
    v19 = sub_1BB8732F4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)&v38 = v21;
      swift_bridgeObjectRetain();
      v31 = sub_1BB872778();
      v33 = v32;
      swift_bridgeObjectRelease();
      v43 = (void *)sub_1BA5D2E14(v31, v33, (uint64_t *)&v38);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v25 = "Failed parsing PuzzleAccessoryInputConfig. Invalid type entry: %s";
      goto LABEL_25;
    }
    goto LABEL_30;
  }
  sub_1BAF46A9C((uint64_t)v43, v44, a1, (uint64_t)&v38);
  swift_bridgeObjectRelease();
  v15 = v39;
  v16 = v41;
  if ((unint64_t)v39 >> 8 == 0xFFFFFFFF && v41 <= 3)
  {
    swift_bridgeObjectRelease();
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v17 = sub_1BB86EFEC();
    __swift_project_value_buffer(v17, (uint64_t)qword_1ED476918);
    swift_bridgeObjectRetain();
    v18 = sub_1BB86EFC8();
    v19 = sub_1BB8732F4();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      v21 = swift_slowAlloc();
      *(_DWORD *)v20 = 136315138;
      *(_QWORD *)&v38 = v21;
      swift_bridgeObjectRetain();
      v22 = sub_1BB872778();
      v24 = v23;
      swift_bridgeObjectRelease();
      v43 = (void *)sub_1BA5D2E14(v22, v24, (uint64_t *)&v38);
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v25 = "Failed parsing PuzzleAccessoryInputConfig. Invalid inputType entry: %s";
LABEL_25:
      _os_log_impl(&dword_1BA493000, v18, v19, v25, v20, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v21, -1, -1);
      MEMORY[0x1BCCE5C38](v20, -1, -1);

      goto LABEL_20;
    }
    goto LABEL_30;
  }
  v37 = v42;
  v35 = *((_QWORD *)&v39 + 1);
  v34 = v40;
  v36 = v38;
  swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v11;
  *(_OWORD *)(a2 + 16) = v36;
  *(_QWORD *)(a2 + 32) = v15;
  *(_QWORD *)(a2 + 40) = v35;
  *(_QWORD *)(a2 + 48) = v34;
  *(_QWORD *)(a2 + 56) = v16;
  *(_QWORD *)(a2 + 64) = v37;
}

void __swiftcall PuzzleAccessoryHintConfig.init(text:direction:number:textFormat:visibilityOptions:)(NewsFeed::PuzzleAccessoryHintConfig *__return_ptr retstr, Swift::String_optional text, Swift::String_optional direction, Swift::String_optional number, Swift::String_optional textFormat, NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions visibilityOptions)
{
  void *object;
  uint64_t countAndFlagsBits;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  Swift::UInt v13;
  uint64_t v14;
  char v15;
  NewsFeed::PuzzleAccessoryHintConfig::Direction v16;
  Swift::String v17;
  NewsFeed::PuzzleAccessoryHintConfig::TextFormat v18;
  NewsFeed::PuzzleAccessoryHintConfig::TextFormat v19;

  object = textFormat.value._object;
  countAndFlagsBits = textFormat.value._countAndFlagsBits;
  v8 = number.value._object;
  v9 = number.value._countAndFlagsBits;
  v10 = text.value._object;
  v11 = text.value._countAndFlagsBits;
  v13 = *(_QWORD *)visibilityOptions.rawValue;
  if (direction.value._object)
  {
    v14 = sub_1BB873FE4();
    swift_bridgeObjectRelease();
    if (v14 == 1)
      v15 = 1;
    else
      v15 = 2;
    if (v14)
      v16 = v15;
    else
      v16 = NewsFeed_PuzzleAccessoryHintConfig_Direction_right;
    if (object)
      goto LABEL_9;
LABEL_13:
    v18 = NewsFeed_PuzzleAccessoryHintConfig_TextFormat_none;
    goto LABEL_14;
  }
  v16 = NewsFeed_PuzzleAccessoryHintConfig_Direction_unknownDefault;
  if (!textFormat.value._object)
    goto LABEL_13;
LABEL_9:
  v17._countAndFlagsBits = countAndFlagsBits;
  v17._object = object;
  PuzzleAccessoryHintConfig.TextFormat.init(rawValue:)(v17);
  v18 = v19;
  if (v19 == NewsFeed_PuzzleAccessoryHintConfig_TextFormat_unknownDefault)
    v18 = NewsFeed_PuzzleAccessoryHintConfig_TextFormat_none;
LABEL_14:
  retstr->text.value._countAndFlagsBits = v11;
  retstr->text.value._object = v10;
  retstr->direction.value = v16;
  retstr->number.value._countAndFlagsBits = v9;
  retstr->number.value._object = v8;
  retstr->textFormat = v18;
  retstr->visibilityOptions.rawValue = v13;
}

__n128 PuzzleAccessoryInputConfiguration.init(identifier:inputType:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  __int128 v5;
  __n128 result;

  v4 = *(_QWORD *)(a3 + 48);
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = a2;
  v5 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(a4 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(a4 + 32) = v5;
  result = *(__n128 *)(a3 + 32);
  *(__n128 *)(a4 + 48) = result;
  *(_QWORD *)(a4 + 64) = v4;
  return result;
}

NewsFeed::PuzzleAccessoryHintConfig::Direction_optional __swiftcall PuzzleAccessoryHintConfig.Direction.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::PuzzleAccessoryHintConfig::Direction_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t PuzzleAccessoryHintConfig.Direction.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 1853321060;
  else
    return 0x7468676972;
}

uint64_t sub_1BAF450B8(char *a1, char *a2)
{
  return sub_1BB7F3C84(*a1, *a2);
}

uint64_t sub_1BAF450C4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF45138()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF45188()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleAccessoryHintConfig::Direction_optional sub_1BAF451F8(Swift::String *a1)
{
  return PuzzleAccessoryHintConfig.Direction.init(rawValue:)(*a1);
}

void sub_1BAF45204(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1853321060;
  if (!*v1)
    v2 = 0x7468676972;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAF45238()
{
  sub_1BAF498A0();
  return sub_1BB872D60();
}

uint64_t sub_1BAF45294()
{
  sub_1BAF498A0();
  return sub_1BB872D0C();
}

NewsFeed::PuzzleAccessoryHintConfig::TextFormat_optional __swiftcall PuzzleAccessoryHintConfig.TextFormat.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::PuzzleAccessoryHintConfig::TextFormat_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t PuzzleAccessoryHintConfig.TextFormat.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6E776F646B72616DLL;
  if (*v0 != 1)
    v1 = 1819112552;
  if (*v0)
    return v1;
  else
    return 1701736302;
}

uint64_t sub_1BAF45384(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F3D1C(*a1, *a2);
}

uint64_t sub_1BAF45390()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF45420()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF4548C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleAccessoryHintConfig::TextFormat_optional sub_1BAF45518(Swift::String *a1)
{
  return PuzzleAccessoryHintConfig.TextFormat.init(rawValue:)(*a1);
}

void sub_1BAF45524(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE800000000000000;
  v5 = 0x6E776F646B72616DLL;
  if (v2 != 1)
  {
    v5 = 1819112552;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701736302;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAF45574()
{
  sub_1BAF4985C();
  return sub_1BB872D60();
}

uint64_t sub_1BAF455D0()
{
  sub_1BAF4985C();
  return sub_1BB872D0C();
}

uint64_t PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions __swiftcall PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.init(rawValue:)(NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions rawValue)
{
  NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.left.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.right.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.keyboardDismiss.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

void static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.text.getter(_QWORD *a1@<X8>)
{
  *a1 = 8;
}

void sub_1BAF4565C()
{
  qword_1EF2B6980 = 15;
}

uint64_t static PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions.all.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1EF2A7030 != -1)
    result = swift_once();
  *a1 = qword_1EF2B6980;
  return result;
}

uint64_t sub_1BAF456EC()
{
  sub_1BAF4826C();
  return sub_1BB872D78();
}

uint64_t sub_1BAF45748()
{
  sub_1BAF4826C();
  return sub_1BB872D24();
}

uint64_t PuzzleAccessoryHintConfig.text.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleAccessoryHintConfig.direction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t PuzzleAccessoryHintConfig.number.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void PuzzleAccessoryHintConfig.textFormat.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

void PuzzleAccessoryHintConfig.visibilityOptions.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 48);
}

uint64_t sub_1BAF45810()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF45838 + 4 * byte_1BB8D5200[*v0]))(1954047348, 0xE400000000000000);
}

uint64_t sub_1BAF45838()
{
  return 0x6F69746365726964;
}

uint64_t sub_1BAF45854()
{
  return 0x7265626D756ELL;
}

uint64_t sub_1BAF45868()
{
  return 0x6D726F4674786574;
}

unint64_t sub_1BAF45884()
{
  return 0xD000000000000011;
}

uint64_t sub_1BAF458A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF49400(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF458C4()
{
  sub_1BAF47BB4();
  return sub_1BB874710();
}

uint64_t sub_1BAF458EC()
{
  sub_1BAF47BB4();
  return sub_1BB87471C();
}

uint64_t PuzzleAccessoryHintConfig.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;

  sub_1BA4CDF6C(0, &qword_1EF2B6990, (uint64_t (*)(void))sub_1BAF47BB4, (uint64_t)&type metadata for PuzzleAccessoryHintConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v18 = *(unsigned __int8 *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v16 = *(_QWORD *)(v1 + 32);
  v17 = v8;
  v15 = *(unsigned __int8 *)(v1 + 40);
  v14 = *(_QWORD *)(v1 + 48);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF47BB4();
  sub_1BB8746C8();
  v27 = 0;
  v9 = v19;
  sub_1BB87411C();
  if (!v9)
  {
    v10 = v15;
    v11 = v14;
    v26 = v18;
    v25 = 1;
    sub_1BAF47BF8();
    sub_1BB87414C();
    v24 = 2;
    sub_1BB87411C();
    v23 = v10;
    v22 = 3;
    sub_1BAF47C3C();
    sub_1BB8741AC();
    v20 = v11;
    v21 = 4;
    sub_1BAF47C80();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryHintConfig.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  char v30;
  char v31;
  char v32;
  char v33;
  char v34;
  unsigned __int8 v35;
  char v36;

  sub_1BA4CDF6C(0, &qword_1EF2B69B8, (uint64_t (*)(void))sub_1BAF47BB4, (uint64_t)&type metadata for PuzzleAccessoryHintConfig.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v24 - v8;
  v10 = a1[3];
  v28 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v10);
  sub_1BAF47BB4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v28);
  v11 = v7;
  v36 = 0;
  v12 = v6;
  v13 = sub_1BB87402C();
  v15 = v14;
  v34 = 1;
  sub_1BAF47CC4();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  v16 = v35;
  v33 = 2;
  v25 = sub_1BB87402C();
  v26 = v16;
  v31 = 3;
  v18 = v17;
  sub_1BAF47D08();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v27 = v18;
  LOBYTE(v18) = v32;
  v30 = 4;
  sub_1BAF47D4C();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v12);
  v19 = (uint64_t)v28;
  v20 = v29;
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v26;
  v21 = v18;
  v22 = v27;
  *(_QWORD *)(a2 + 24) = v25;
  *(_QWORD *)(a2 + 32) = v22;
  *(_BYTE *)(a2 + 40) = v21;
  *(_QWORD *)(a2 + 48) = v20;
  __swift_destroy_boxed_opaque_existential_1(v19);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF45E54@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PuzzleAccessoryHintConfig.init(from:)(a1, a2);
}

uint64_t sub_1BAF45E68(_QWORD *a1)
{
  return PuzzleAccessoryHintConfig.encode(to:)(a1);
}

uint64_t sub_1BAF45E7C()
{
  sub_1BAF47D90();
  return sub_1BB874710();
}

uint64_t sub_1BAF45EA4()
{
  sub_1BAF47D90();
  return sub_1BB87471C();
}

uint64_t sub_1BAF45ECC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6B63617473;
  if (*v0 != 1)
    v1 = 0x736E6F74747562;
  if (*v0)
    return v1;
  else
    return 1953393000;
}

uint64_t sub_1BAF45F1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF49618(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF45F40()
{
  sub_1BAF47E5C();
  return sub_1BB874710();
}

uint64_t sub_1BAF45F68()
{
  sub_1BAF47E5C();
  return sub_1BB87471C();
}

uint64_t sub_1BAF45F90()
{
  sub_1BAF47E18();
  return sub_1BB874710();
}

uint64_t sub_1BAF45FB8()
{
  sub_1BAF47E18();
  return sub_1BB87471C();
}

uint64_t sub_1BAF45FE0()
{
  sub_1BAF47DD4();
  return sub_1BB874710();
}

uint64_t sub_1BAF46008()
{
  sub_1BAF47DD4();
  return sub_1BB87471C();
}

uint64_t PuzzleAccessoryInputConfiguration.InputType.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1EF2B69D8, (uint64_t (*)(void))sub_1BAF47D90, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v41 = v4;
  v29 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v28 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2B69E8, (uint64_t (*)(void))sub_1BAF47DD4, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys, v3);
  v40 = v6;
  v38 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v28 - v7;
  sub_1BA4CDF6C(0, &qword_1EF2B69F8, (uint64_t (*)(void))sub_1BAF47E18, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys, v3);
  v36 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v28 - v10;
  sub_1BA4CDF6C(0, &qword_1EF2B6A08, (uint64_t (*)(void))sub_1BAF47E5C, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys, v3);
  v12 = v11;
  v42 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v28 - v13;
  v43 = *v1;
  v15 = v1[1];
  v16 = v1[2];
  v32 = v1[3];
  v33 = v16;
  v17 = v1[4];
  v18 = v1[5];
  v30 = v15;
  v31 = v17;
  v34 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF47E5C();
  sub_1BB8746C8();
  v19 = v18 >> 62;
  if (v18 >> 62)
  {
    v20 = v43;
    if ((_DWORD)v19 == 1)
    {
      LOBYTE(v44) = 1;
      sub_1BAF47DD4();
      v21 = v37;
      sub_1BB874110();
      v44 = v20;
      sub_1BA4AD288(0, &qword_1EF2B6A20, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAF47FB0(&qword_1EF2B6A28, (uint64_t (*)(void))sub_1BAF47EE4, MEMORY[0x1E0DEAF10]);
      v22 = v40;
      sub_1BB8741AC();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v21, v22);
    }
    else
    {
      LOBYTE(v44) = 2;
      sub_1BAF47D90();
      v25 = v39;
      sub_1BB874110();
      v44 = v20;
      sub_1BAF47EA0();
      v26 = v41;
      sub_1BB8741AC();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v26);
    }
  }
  else
  {
    LOBYTE(v44) = 0;
    sub_1BAF47E18();
    v23 = v35;
    sub_1BB874110();
    v44 = v43;
    v45 = v30;
    v46 = v33;
    v47 = v32;
    v48 = v31;
    v49 = v18;
    v50 = v34;
    sub_1BAF47F28();
    v24 = v36;
    sub_1BB8741AC();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v23, v24);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v14, v12);
}

uint64_t PuzzleAccessoryInputConfiguration.InputType.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  unint64_t v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  char *v46;
  char *v47;
  __int128 v48;
  unsigned __int8 v49;
  __int128 v50;
  unsigned __int8 v51;
  uint64_t v52;
  _QWORD *v53;

  v45 = a2;
  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048];
  sub_1BA4CDF6C(0, &qword_1EF2B6A40, (uint64_t (*)(void))sub_1BAF47D90, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v41 = v4;
  v44 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v38 - v5;
  sub_1BA4CDF6C(0, &qword_1EF2B6A48, (uint64_t (*)(void))sub_1BAF47DD4, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys, v3);
  v42 = *(_QWORD *)(v6 - 8);
  v43 = v6;
  MEMORY[0x1E0C80A78](v6);
  v46 = (char *)&v38 - v7;
  sub_1BA4CDF6C(0, &qword_1EF2B6A50, (uint64_t (*)(void))sub_1BAF47E18, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys, v3);
  v39 = *(_QWORD *)(v8 - 8);
  v40 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - v9;
  sub_1BA4CDF6C(0, &qword_1EF2B6A58, (uint64_t (*)(void))sub_1BAF47E5C, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys, v3);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v38 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF47E5C();
  v16 = v53;
  sub_1BB87468C();
  if (v16)
    goto LABEL_9;
  v17 = v46;
  v18 = v47;
  v38 = v13;
  v53 = a1;
  v19 = sub_1BB8740EC();
  v20 = v15;
  if (*(_QWORD *)(v19 + 16) != 1)
  {
    v23 = sub_1BB873D68();
    swift_allocError();
    v25 = v24;
    sub_1BA909FB4();
    *v25 = &type metadata for PuzzleAccessoryInputConfiguration.InputType;
    sub_1BB874008();
    sub_1BB873D38();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v12);
    a1 = v53;
LABEL_9:
    v28 = (uint64_t)a1;
    return __swift_destroy_boxed_opaque_existential_1(v28);
  }
  if (*(_BYTE *)(v19 + 32))
  {
    if (*(_BYTE *)(v19 + 32) == 1)
    {
      LOBYTE(v48) = 1;
      sub_1BAF47DD4();
      sub_1BB873FFC();
      v21 = v12;
      sub_1BA4AD288(0, &qword_1EF2B6A20, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BAF47FB0(&qword_1EF2B6A68, (uint64_t (*)(void))sub_1BAF4802C, MEMORY[0x1E0DEAF40]);
      v22 = v43;
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v15, v21);
      v32 = 0;
      v33 = 0;
      *(_QWORD *)&v34 = v48;
      v35 = 0uLL;
      v36 = 0x4000000000000000;
    }
    else
    {
      LOBYTE(v48) = 2;
      sub_1BAF47D90();
      sub_1BB873FFC();
      sub_1BAF47F6C();
      v30 = v41;
      sub_1BB8740D4();
      v31 = v38;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v18, v30);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v12);
      v32 = 0;
      v33 = 0;
      *(_QWORD *)&v34 = v48;
      v35 = 0uLL;
      v36 = 0x8000000000000000;
    }
  }
  else
  {
    LOBYTE(v48) = 0;
    sub_1BAF47E18();
    v26 = v10;
    sub_1BB873FFC();
    sub_1BAF48070();
    v27 = v40;
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v20, v12);
    v34 = v48;
    v32 = v49;
    v35 = v50;
    v36 = v51;
    v33 = v52;
  }
  v37 = v45;
  *v45 = v34;
  *((_QWORD *)v37 + 2) = v32;
  *(_OWORD *)((char *)v37 + 24) = v35;
  *((_QWORD *)v37 + 5) = v36;
  *((_QWORD *)v37 + 6) = v33;
  v28 = (uint64_t)v53;
  return __swift_destroy_boxed_opaque_existential_1(v28);
}

uint64_t sub_1BAF46A24@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return PuzzleAccessoryInputConfiguration.InputType.init(from:)(a1, a2);
}

uint64_t sub_1BAF46A38(_QWORD *a1)
{
  return PuzzleAccessoryInputConfiguration.InputType.encode(to:)(a1);
}

uint64_t PuzzleAccessoryInputConfiguration.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PuzzleAccessoryInputConfiguration.inputType.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  v7 = v1[7];
  v8 = v1[8];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_1BAF480B4(v2, v3, v4, v5, v6, v7);
}

void sub_1BAF46A9C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  BOOL v6;
  unint64_t v9;
  char v10;
  int v11;
  void *rawValue;
  void *v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  int v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  unint64_t v33;
  char v34;
  int v35;
  void *v36;
  void *v37;
  uint64_t v38;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  const char *v46;
  unint64_t v47;
  char v48;
  int v49;
  Swift::String_optional v50;
  Swift::String_optional v51;
  Swift::String_optional v52;
  Swift::String_optional v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  char v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  unint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  Swift::OpaquePointer with;
  void *v68;
  _BYTE v69[64];
  uint64_t v70;

  v6 = a1 == 1953393000 && a2 == 0xE400000000000000;
  if (!v6 && (sub_1BB874398() & 1) == 0)
  {
    if (a1 == 0x6B63617473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
    {
      if (*(_QWORD *)(a3 + 16))
      {
        v14 = sub_1BA6E35A8(0x736D657469, 0xE500000000000000);
        if ((v15 & 1) != 0)
        {
          sub_1BA747A10(*(_QWORD *)(a3 + 56) + 32 * v14, (uint64_t)v69);
          sub_1BACCB770();
          if ((swift_dynamicCast() & 1) != 0)
          {
            v16 = *((_QWORD *)with._rawValue + 2);
            if (v16)
            {
              swift_bridgeObjectRetain();
              v17 = 0;
              v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
              do
              {
                v20 = swift_bridgeObjectRetain();
                PuzzleAccessoryInputConfiguration.init(with:)(v69, v20);
                v21 = *(_QWORD *)&v69[8];
                if (*(_QWORD *)&v69[8])
                {
                  v22 = *(_QWORD *)v69;
                  v65 = *(_OWORD *)&v69[32];
                  v66 = *(_OWORD *)&v69[16];
                  v64 = *(_OWORD *)&v69[48];
                  v23 = v70;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                    v18 = sub_1BB38F0CC(0, v18[2] + 1, 1, v18);
                  v25 = v18[2];
                  v24 = v18[3];
                  if (v25 >= v24 >> 1)
                    v18 = sub_1BB38F0CC((_QWORD *)(v24 > 1), v25 + 1, 1, v18);
                  v18[2] = v25 + 1;
                  v19 = &v18[9 * v25];
                  v19[4] = v22;
                  v19[5] = v21;
                  *((_OWORD *)v19 + 3) = v66;
                  *((_OWORD *)v19 + 4) = v65;
                  *((_OWORD *)v19 + 5) = v64;
                  v19[12] = v23;
                }
                ++v17;
              }
              while (v16 != v17);
              swift_bridgeObjectRelease();
            }
            else
            {
              v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
            }
            swift_bridgeObjectRelease();
            *(_QWORD *)a4 = v18;
            *(_OWORD *)(a4 + 8) = 0u;
            *(_OWORD *)(a4 + 24) = 0u;
            v59 = xmmword_1BB8D5E60;
            goto LABEL_83;
          }
        }
      }
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v38 = sub_1BB86EFEC();
      __swift_project_value_buffer(v38, (uint64_t)qword_1ED476918);
      swift_bridgeObjectRetain_n();
      v39 = sub_1BB86EFC8();
      v40 = sub_1BB8732F4();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        *(_QWORD *)v69 = v42;
        *(_DWORD *)v41 = 136315138;
        swift_bridgeObjectRetain();
        v43 = sub_1BB872778();
        v45 = v44;
        swift_bridgeObjectRelease();
        with._rawValue = (void *)sub_1BA5D2E14(v43, v45, (uint64_t *)v69);
        sub_1BB873A8C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v46 = "Failed parsing PuzzleAccessoryInputConfiguration. Invalid items entry: %s";
LABEL_80:
        _os_log_impl(&dword_1BA493000, v39, v40, v46, v41, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v42, -1, -1);
        MEMORY[0x1BCCE5C38](v41, -1, -1);

LABEL_82:
        *(_QWORD *)a4 = 0;
        *(_QWORD *)(a4 + 8) = 0;
        *(_QWORD *)(a4 + 16) = 0xFFFFFFFF00;
        v59 = 0uLL;
        *(_OWORD *)(a4 + 24) = 0u;
        goto LABEL_83;
      }
    }
    else
    {
      if ((a1 != 0x736E6F74747562 || a2 != 0xE700000000000000) && (sub_1BB874398() & 1) == 0)
        goto LABEL_82;
      if (*(_QWORD *)(a3 + 16))
      {
        v57 = sub_1BA6E35A8(0x736D657469, 0xE500000000000000);
        if ((v58 & 1) != 0)
        {
          sub_1BA747A10(*(_QWORD *)(a3 + 56) + 32 * v57, (uint64_t)v69);
          sub_1BACCB770();
          if ((swift_dynamicCast() & 1) != 0)
          {
            PuzzleAccessoryButtonsConfig.init(with:)(with);
            if (*(_QWORD *)v69)
            {
              *(_QWORD *)a4 = *(_QWORD *)v69;
              *(_OWORD *)(a4 + 8) = 0u;
              *(_OWORD *)(a4 + 24) = 0u;
              v59 = xmmword_1BB8D5E50;
LABEL_83:
              *(_OWORD *)(a4 + 40) = v59;
              return;
            }
          }
        }
      }
      if (qword_1ED3C0B50 != -1)
        swift_once();
      v60 = sub_1BB86EFEC();
      __swift_project_value_buffer(v60, (uint64_t)qword_1ED476918);
      swift_bridgeObjectRetain_n();
      v39 = sub_1BB86EFC8();
      v40 = sub_1BB8732F4();
      if (os_log_type_enabled(v39, v40))
      {
        v41 = (uint8_t *)swift_slowAlloc();
        v42 = swift_slowAlloc();
        *(_QWORD *)v69 = v42;
        *(_DWORD *)v41 = 136315138;
        swift_bridgeObjectRetain();
        v61 = sub_1BB872778();
        v63 = v62;
        swift_bridgeObjectRelease();
        with._rawValue = (void *)sub_1BA5D2E14(v61, v63, (uint64_t *)v69);
        sub_1BB873A8C();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v46 = "Failed parsing PuzzleAccessoryButtonsConfig. Invalid items entry: %s";
        goto LABEL_80;
      }
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_82;
  }
  if (!*(_QWORD *)(a3 + 16))
  {
    v13 = 0;
    rawValue = 0;
    goto LABEL_42;
  }
  v9 = sub_1BA6E35A8(1954047348, 0xE400000000000000);
  if ((v10 & 1) == 0)
  {
    rawValue = 0;
    v13 = 0;
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_33;
LABEL_42:
    v30 = 0;
    v29 = 0;
    goto LABEL_43;
  }
  sub_1BA747A10(*(_QWORD *)(a3 + 56) + 32 * v9, (uint64_t)v69);
  v11 = swift_dynamicCast();
  if (v11)
    rawValue = with._rawValue;
  else
    rawValue = 0;
  if (v11)
    v13 = v68;
  else
    v13 = 0;
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_42;
LABEL_33:
  v26 = sub_1BA6E35A8(0x6F69746365726964, 0xE90000000000006ELL);
  if ((v27 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a3 + 56) + 32 * v26, (uint64_t)v69);
    v28 = swift_dynamicCast();
    if (v28)
      v29 = with._rawValue;
    else
      v29 = 0;
    if (v28)
      v30 = v68;
    else
      v30 = 0;
    if (!*(_QWORD *)(a3 + 16))
    {
LABEL_43:
      v31 = 0;
      v32 = 0;
      if (!*(_QWORD *)(a3 + 16))
        goto LABEL_64;
      goto LABEL_44;
    }
  }
  else
  {
    v29 = 0;
    v30 = 0;
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_43;
  }
  v47 = sub_1BA6E35A8(0x7265626D756ELL, 0xE600000000000000);
  if ((v48 & 1) == 0)
    goto LABEL_43;
  sub_1BA747A10(*(_QWORD *)(a3 + 56) + 32 * v47, (uint64_t)v69);
  v49 = swift_dynamicCast();
  if (v49)
    v31 = with._rawValue;
  else
    v31 = 0;
  if (v49)
    v32 = v68;
  else
    v32 = 0;
  if (!*(_QWORD *)(a3 + 16))
    goto LABEL_64;
LABEL_44:
  v33 = sub_1BA6E35A8(0x6D726F4674786574, 0xEA00000000007461);
  if ((v34 & 1) != 0)
  {
    sub_1BA747A10(*(_QWORD *)(a3 + 56) + 32 * v33, (uint64_t)v69);
    v35 = swift_dynamicCast();
    if (v35)
      v36 = with._rawValue;
    else
      v36 = 0;
    if (v35)
      v37 = v68;
    else
      v37 = 0;
    goto LABEL_65;
  }
LABEL_64:
  v36 = 0;
  v37 = 0;
LABEL_65:
  if (qword_1EF2A7030 != -1)
    swift_once();
  with._rawValue = (void *)qword_1EF2B6980;
  v50.value._countAndFlagsBits = (uint64_t)rawValue;
  v50.value._object = v13;
  v51.value._countAndFlagsBits = (uint64_t)v29;
  v51.value._object = v30;
  v52.value._countAndFlagsBits = (uint64_t)v31;
  v52.value._object = v32;
  v53.value._countAndFlagsBits = (uint64_t)v36;
  v53.value._object = v37;
  PuzzleAccessoryHintConfig.init(text:direction:number:textFormat:visibilityOptions:)((NewsFeed::PuzzleAccessoryHintConfig *)v69, v50, v51, v52, v53, (NewsFeed::PuzzleAccessoryHintConfig::PuzzleAccessoryHintVisibilityOptions)&with);
  v54 = v69[16];
  v55 = v69[40];
  v56 = *(_QWORD *)&v69[48];
  *(_OWORD *)a4 = *(_OWORD *)v69;
  *(_QWORD *)(a4 + 16) = v54;
  *(_OWORD *)(a4 + 24) = *(_OWORD *)&v69[24];
  *(_QWORD *)(a4 + 40) = v55;
  *(_QWORD *)(a4 + 48) = v56;
}

uint64_t sub_1BAF47338()
{
  _BYTE *v0;

  if (*v0)
    return 0x7079547475706E69;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BAF4737C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF49754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF473A0()
{
  sub_1BAF4810C();
  return sub_1BB874710();
}

uint64_t sub_1BAF473C8()
{
  sub_1BAF4810C();
  return sub_1BB87471C();
}

uint64_t PuzzleAccessoryInputConfiguration.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_1BA4CDF6C(0, &qword_1EF2B6A80, (uint64_t (*)(void))sub_1BAF4810C, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v13 - v6;
  v8 = v1[2];
  v19 = v1[3];
  v20 = v8;
  v9 = v1[4];
  v17 = v1[5];
  v18 = v9;
  v10 = v1[6];
  v15 = v1[7];
  v16 = v10;
  v14 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF4810C();
  sub_1BB8746C8();
  LOBYTE(v22) = 0;
  v11 = v21;
  sub_1BB87417C();
  if (!v11)
  {
    v22 = v20;
    v23 = v19;
    v24 = v18;
    v25 = v17;
    v26 = v16;
    v27 = v15;
    v28 = v14;
    v29 = 1;
    sub_1BAF48150();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t PuzzleAccessoryInputConfiguration.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char v40;

  v32 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B6A98, (uint64_t (*)(void))sub_1BAF4810C, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v26 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF4810C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  LOBYTE(v33) = 0;
  v9 = sub_1BB874098();
  v11 = v10;
  v40 = 1;
  sub_1BAF48194();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v12 = v33;
  v13 = v34;
  v14 = v35;
  v31 = v36;
  v16 = v37;
  v15 = v38;
  v26 = v37;
  v27 = v33;
  v28 = v38;
  v29 = v35;
  v17 = v39;
  swift_bridgeObjectRetain();
  v18 = v12;
  v30 = v13;
  v19 = v31;
  sub_1BAF480B4(v18, v13, v14, v31, v16, v15);
  swift_bridgeObjectRelease();
  v20 = v32;
  *v32 = v9;
  v20[1] = v11;
  v22 = v26;
  v21 = v27;
  v20[2] = v27;
  v20[3] = v13;
  v23 = v29;
  v20[4] = v29;
  v20[5] = v19;
  v24 = v28;
  v20[6] = v22;
  v20[7] = v24;
  v20[8] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return sub_1BA8FD928(v21, v30, v23, v31, v22, v24);
}

uint64_t sub_1BAF477E8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PuzzleAccessoryInputConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1BAF477FC(_QWORD *a1)
{
  return PuzzleAccessoryInputConfiguration.encode(to:)(a1);
}

uint64_t sub_1BAF47810(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_1BAF478A4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BAF47A18(0, *(_QWORD *)(v2 + 16) + 1, 1, (char *)v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = sub_1BAF47A18(v3 > 1, v4 + 1, 1, (char *)v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1BAF478A4(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
    goto LABEL_10;
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    while (1)
    {
      v3 = sub_1BA9BF828(v2, 0);
      if (v2 < 0)
        break;
      v4 = v3;
      v5 = sub_1BB873CC0();
      if ((v6 & 1) != 0)
        goto LABEL_14;
      if (v5 == v2)
        return (uint64_t)v4;
      sub_1BB873EA0();
      __break(1u);
LABEL_10:
      v2 = sub_1BB872B08();
      if (!v2)
        return MEMORY[0x1E0DEE9D8];
    }
    sub_1BB873F84();
    __break(1u);
LABEL_14:
    result = sub_1BB873EA0();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9D8];
  }
  return result;
}

uint64_t sub_1BAF47A18(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3AB9E8, MEMORY[0x1E0DEDE70], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

unint64_t sub_1BAF47B78()
{
  unint64_t result;

  result = qword_1EF2B6988;
  if (!qword_1EF2B6988)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B6988);
  }
  return result;
}

unint64_t sub_1BAF47BB4()
{
  unint64_t result;

  result = qword_1EF2B6998;
  if (!qword_1EF2B6998)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5DF4, &type metadata for PuzzleAccessoryHintConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6998);
  }
  return result;
}

unint64_t sub_1BAF47BF8()
{
  unint64_t result;

  result = qword_1EF2B69A0;
  if (!qword_1EF2B69A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.Direction, &type metadata for PuzzleAccessoryHintConfig.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B69A0);
  }
  return result;
}

unint64_t sub_1BAF47C3C()
{
  unint64_t result;

  result = qword_1EF2B69A8;
  if (!qword_1EF2B69A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.TextFormat, &type metadata for PuzzleAccessoryHintConfig.TextFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B69A8);
  }
  return result;
}

unint64_t sub_1BAF47C80()
{
  unint64_t result;

  result = qword_1EF2B69B0;
  if (!qword_1EF2B69B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions, &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B69B0);
  }
  return result;
}

unint64_t sub_1BAF47CC4()
{
  unint64_t result;

  result = qword_1EF2B69C0;
  if (!qword_1EF2B69C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.Direction, &type metadata for PuzzleAccessoryHintConfig.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B69C0);
  }
  return result;
}

unint64_t sub_1BAF47D08()
{
  unint64_t result;

  result = qword_1EF2B69C8;
  if (!qword_1EF2B69C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.TextFormat, &type metadata for PuzzleAccessoryHintConfig.TextFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B69C8);
  }
  return result;
}

unint64_t sub_1BAF47D4C()
{
  unint64_t result;

  result = qword_1EF2B69D0;
  if (!qword_1EF2B69D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions, &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B69D0);
  }
  return result;
}

unint64_t sub_1BAF47D90()
{
  unint64_t result;

  result = qword_1EF2B69E0;
  if (!qword_1EF2B69E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5DA4, &type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B69E0);
  }
  return result;
}

unint64_t sub_1BAF47DD4()
{
  unint64_t result;

  result = qword_1EF2B69F0;
  if (!qword_1EF2B69F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5D54, &type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B69F0);
  }
  return result;
}

unint64_t sub_1BAF47E18()
{
  unint64_t result;

  result = qword_1EF2B6A00;
  if (!qword_1EF2B6A00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5D04, &type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A00);
  }
  return result;
}

unint64_t sub_1BAF47E5C()
{
  unint64_t result;

  result = qword_1EF2B6A10;
  if (!qword_1EF2B6A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5CB4, &type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A10);
  }
  return result;
}

unint64_t sub_1BAF47EA0()
{
  unint64_t result;

  result = qword_1EF2B6A18;
  if (!qword_1EF2B6A18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryButtonsConfig, &type metadata for PuzzleAccessoryButtonsConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A18);
  }
  return result;
}

unint64_t sub_1BAF47EE4()
{
  unint64_t result;

  result = qword_1EF2B6A30;
  if (!qword_1EF2B6A30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryInputConfiguration, &type metadata for PuzzleAccessoryInputConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A30);
  }
  return result;
}

unint64_t sub_1BAF47F28()
{
  unint64_t result;

  result = qword_1EF2B6A38;
  if (!qword_1EF2B6A38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig, &type metadata for PuzzleAccessoryHintConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A38);
  }
  return result;
}

unint64_t sub_1BAF47F6C()
{
  unint64_t result;

  result = qword_1EF2B6A60;
  if (!qword_1EF2B6A60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryButtonsConfig, &type metadata for PuzzleAccessoryButtonsConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A60);
  }
  return result;
}

uint64_t sub_1BAF47FB0(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, &qword_1EF2B6A20, (uint64_t)&type metadata for PuzzleAccessoryInputConfiguration, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x1BCCE5B24](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAF4802C()
{
  unint64_t result;

  result = qword_1EF2B6A70;
  if (!qword_1EF2B6A70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryInputConfiguration, &type metadata for PuzzleAccessoryInputConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A70);
  }
  return result;
}

unint64_t sub_1BAF48070()
{
  unint64_t result;

  result = qword_1EF2B6A78;
  if (!qword_1EF2B6A78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig, &type metadata for PuzzleAccessoryHintConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A78);
  }
  return result;
}

uint64_t sub_1BAF480B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((unint64_t)a3 >> 8 != 0xFFFFFFFF || a6 >= 4)
    return sub_1BAF480CC(a1, a2, a3, a4, a5, a6);
  return a1;
}

uint64_t sub_1BAF480CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t result;

  if ((a6 >> 62) - 1 >= 2)
  {
    if (a6 >> 62)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BAF4810C()
{
  unint64_t result;

  result = qword_1EF2B6A88;
  if (!qword_1EF2B6A88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5C64, &type metadata for PuzzleAccessoryInputConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A88);
  }
  return result;
}

unint64_t sub_1BAF48150()
{
  unint64_t result;

  result = qword_1EF2B6A90;
  if (!qword_1EF2B6A90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryInputConfiguration.InputType, &type metadata for PuzzleAccessoryInputConfiguration.InputType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6A90);
  }
  return result;
}

unint64_t sub_1BAF48194()
{
  unint64_t result;

  result = qword_1EF2B6AA0;
  if (!qword_1EF2B6AA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryInputConfiguration.InputType, &type metadata for PuzzleAccessoryInputConfiguration.InputType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AA0);
  }
  return result;
}

unint64_t sub_1BAF481DC()
{
  unint64_t result;

  result = qword_1EF2B6AA8;
  if (!qword_1EF2B6AA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.Direction, &type metadata for PuzzleAccessoryHintConfig.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AA8);
  }
  return result;
}

unint64_t sub_1BAF48224()
{
  unint64_t result;

  result = qword_1EF2B6AB0;
  if (!qword_1EF2B6AB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.TextFormat, &type metadata for PuzzleAccessoryHintConfig.TextFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AB0);
  }
  return result;
}

unint64_t sub_1BAF4826C()
{
  unint64_t result;

  result = qword_1EF2B6AB8;
  if (!qword_1EF2B6AB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions, &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AB8);
  }
  return result;
}

unint64_t sub_1BAF482B4()
{
  unint64_t result;

  result = qword_1EF2B6AC0;
  if (!qword_1EF2B6AC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions, &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AC0);
  }
  return result;
}

unint64_t sub_1BAF482FC()
{
  unint64_t result;

  result = qword_1EF2B6AC8;
  if (!qword_1EF2B6AC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions, &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AC8);
  }
  return result;
}

unint64_t sub_1BAF48344()
{
  unint64_t result;

  result = qword_1EF2B6AD0;
  if (!qword_1EF2B6AD0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions, &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AD0);
  }
  return result;
}

uint64_t destroy for PuzzleAccessoryHintConfig()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PuzzleAccessoryHintConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PuzzleAccessoryHintConfig(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for PuzzleAccessoryHintConfig(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleAccessoryHintConfig(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PuzzleAccessoryHintConfig(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig()
{
  return &type metadata for PuzzleAccessoryHintConfig;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.Direction()
{
  return &type metadata for PuzzleAccessoryHintConfig.Direction;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.TextFormat()
{
  return &type metadata for PuzzleAccessoryHintConfig.TextFormat;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions()
{
  return &type metadata for PuzzleAccessoryHintConfig.PuzzleAccessoryHintVisibilityOptions;
}

uint64_t destroy for PuzzleAccessoryInputConfiguration(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  result = swift_bridgeObjectRelease();
  v3 = a1[4];
  v4 = a1[7];
  if (v3 >> 8 != 0xFFFFFFFF || v4 >= 4)
    return sub_1BA8FD940(a1[2], a1[3], v3, a1[5], a1[6], v4);
  return result;
}

_QWORD *initializeWithCopy for PuzzleAccessoryInputConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[4];
  v6 = a2[7];
  swift_bridgeObjectRetain();
  if (v5 >> 8 != 0xFFFFFFFF || v6 >= 4)
  {
    v8 = a2[2];
    v9 = a2[3];
    v10 = a2[5];
    v11 = a2[6];
    v12 = a2[8];
    sub_1BAF480CC(v8, v9, v5, v10, v11, v6);
    a1[2] = v8;
    a1[3] = v9;
    a1[4] = v5;
    a1[5] = v10;
    a1[6] = v11;
    a1[7] = v6;
    a1[8] = v12;
  }
  else
  {
    v13 = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    *((_OWORD *)a1 + 2) = v13;
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    a1[8] = a2[8];
  }
  return a1;
}

uint64_t assignWithCopy for PuzzleAccessoryInputConfiguration(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 56);
  v9 = v6 >> 8 == 0xFFFFFFFF && v7 < 4;
  if (*(_QWORD *)(a1 + 32) >> 8 != 0xFFFFFFFFLL || *(_QWORD *)(a1 + 56) >= 4uLL)
  {
    if (v9)
    {
      sub_1BAF48864(a1 + 16);
      v12 = *(_OWORD *)(a2 + 32);
      v11 = *(_OWORD *)(a2 + 48);
      v13 = *v5;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 32) = v12;
      *(_OWORD *)(a1 + 48) = v11;
      *v4 = v13;
    }
    else
    {
      v17 = *(_QWORD *)(a2 + 16);
      v18 = *(_QWORD *)(a2 + 24);
      v19 = *(_QWORD *)(a2 + 40);
      v20 = *(_QWORD *)(a2 + 48);
      v21 = *(_QWORD *)(a2 + 64);
      sub_1BAF480CC(v17, v18, v6, v19, v20, v7);
      v22 = *(_QWORD *)(a1 + 16);
      v23 = *(_QWORD *)(a1 + 24);
      v24 = *(_QWORD *)(a1 + 32);
      v25 = *(_QWORD *)(a1 + 40);
      v26 = *(_QWORD *)(a1 + 48);
      v27 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 16) = v17;
      *(_QWORD *)(a1 + 24) = v18;
      *(_QWORD *)(a1 + 32) = v6;
      *(_QWORD *)(a1 + 40) = v19;
      *(_QWORD *)(a1 + 48) = v20;
      *(_QWORD *)(a1 + 56) = v7;
      *(_QWORD *)(a1 + 64) = v21;
      sub_1BA8FD940(v22, v23, v24, v25, v26, v27);
    }
  }
  else if (v9)
  {
    v14 = *v5;
    v15 = *(_OWORD *)(a2 + 32);
    v16 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 32) = v15;
    *(_OWORD *)(a1 + 48) = v16;
    *v4 = v14;
  }
  else
  {
    v28 = *(_QWORD *)(a2 + 16);
    v29 = *(_QWORD *)(a2 + 24);
    v30 = *(_QWORD *)(a2 + 40);
    v31 = *(_QWORD *)(a2 + 48);
    v32 = *(_QWORD *)(a2 + 64);
    sub_1BAF480CC(v28, v29, v6, v30, v31, v7);
    *(_QWORD *)(a1 + 16) = v28;
    *(_QWORD *)(a1 + 24) = v29;
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v30;
    *(_QWORD *)(a1 + 48) = v31;
    *(_QWORD *)(a1 + 56) = v7;
    *(_QWORD *)(a1 + 64) = v32;
  }
  return a1;
}

uint64_t sub_1BAF48864(uint64_t a1)
{
  sub_1BA8FD940(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
  return a1;
}

_QWORD *assignWithTake for PuzzleAccessoryInputConfiguration(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[4];
  v6 = a1[7];
  if (v5 >> 8 == 0xFFFFFFFF && v6 < 4)
    goto LABEL_12;
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 56);
  if (v8 >> 8 == 0xFFFFFFFF && v9 < 4)
  {
    sub_1BAF48864((uint64_t)(a1 + 2));
LABEL_12:
    v16 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    *((_OWORD *)a1 + 2) = v16;
    *((_OWORD *)a1 + 3) = *(_OWORD *)(a2 + 48);
    a1[8] = *(_QWORD *)(a2 + 64);
    return a1;
  }
  v11 = *(_QWORD *)(a2 + 64);
  v12 = a1[2];
  v13 = a1[3];
  v14 = a1[5];
  v15 = a1[6];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  a1[4] = v8;
  *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 40);
  a1[7] = v9;
  a1[8] = v11;
  sub_1BA8FD940(v12, v13, v5, v14, v15, v6);
  return a1;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration()
{
  return &type metadata for PuzzleAccessoryInputConfiguration;
}

uint64_t destroy for PuzzleAccessoryInputConfiguration.InputType(uint64_t a1)
{
  return sub_1BA8FD940(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40));
}

uint64_t *initializeWithCopy for PuzzleAccessoryInputConfiguration.InputType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_1BAF480CC(*a2, v4, v5, v6, v7, v8);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  return a1;
}

uint64_t *assignWithCopy for PuzzleAccessoryInputConfiguration.InputType(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  sub_1BAF480CC(*a2, v4, v5, v6, v7, v8);
  v10 = *a1;
  v11 = a1[1];
  v12 = a1[2];
  v13 = a1[3];
  v14 = a1[4];
  v15 = a1[5];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  sub_1BA8FD940(v10, v11, v12, v13, v14, v15);
  return a1;
}

uint64_t *assignWithTake for PuzzleAccessoryInputConfiguration.InputType(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = a1[5];
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v10;
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  a1[6] = v3;
  sub_1BA8FD940(v4, v6, v5, v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for PuzzleAccessoryInputConfiguration.InputType(uint64_t a1, int a2)
{
  unsigned int v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_DWORD *)(a1 + 17);
  if (v2 > 0x80000000)
    v3 = ~v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for PuzzleAccessoryInputConfiguration.InputType(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = (unint64_t)-a2 << 8;
      result = 0.0;
      *(_OWORD *)(a1 + 24) = 0u;
      *(_OWORD *)(a1 + 40) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1BAF48B84(uint64_t a1)
{
  return *(_QWORD *)(a1 + 40) >> 62;
}

uint64_t sub_1BAF48B90(uint64_t result)
{
  *(_QWORD *)(result + 40) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1BAF48BA0(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 40) & 3 | (a2 << 62);
  *(_QWORD *)(result + 16) = *(unsigned __int8 *)(result + 16);
  *(_QWORD *)(result + 40) = v2;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType;
}

uint64_t _s8NewsFeed25PuzzleAccessoryHintConfigV9DirectionOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF48C18 + 4 * byte_1BB8D520A[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF48C4C + 4 * byte_1BB8D5205[v4]))();
}

uint64_t sub_1BAF48C4C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF48C54(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF48C5CLL);
  return result;
}

uint64_t sub_1BAF48C68(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF48C70);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF48C74(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF48C7C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.CodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.CodingKeys;
}

uint64_t _s8NewsFeed25PuzzleAccessoryHintConfigV10TextFormatOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF48CE4 + 4 * byte_1BB8D5214[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF48D18 + 4 * byte_1BB8D520F[v4]))();
}

uint64_t sub_1BAF48D18(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF48D20(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF48D28);
  return result;
}

uint64_t sub_1BAF48D34(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF48D3CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF48D40(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF48D48(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.CodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys;
}

uint64_t _s8NewsFeed33PuzzleAccessoryInputConfigurationV9InputTypeO14HintCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF48DC8 + 4 * byte_1BB8D5219[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF48DE8 + 4 * byte_1BB8D521E[v4]))();
}

_BYTE *sub_1BAF48DC8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF48DE8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF48DF0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF48DF8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF48E00(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF48E08(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys()
{
  return &type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys;
}

uint64_t storeEnumTagSinglePayload for PuzzleAccessoryHintConfig.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAF48E70 + 4 * byte_1BB8D5228[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAF48EA4 + 4 * byte_1BB8D5223[v4]))();
}

uint64_t sub_1BAF48EA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF48EAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF48EB4);
  return result;
}

uint64_t sub_1BAF48EC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF48EC8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAF48ECC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF48ED4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleAccessoryHintConfig.CodingKeys()
{
  return &type metadata for PuzzleAccessoryHintConfig.CodingKeys;
}

unint64_t sub_1BAF48EF4()
{
  unint64_t result;

  result = qword_1EF2B6AD8;
  if (!qword_1EF2B6AD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D58A4, &type metadata for PuzzleAccessoryHintConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AD8);
  }
  return result;
}

unint64_t sub_1BAF48F3C()
{
  unint64_t result;

  result = qword_1EF2B6AE0;
  if (!qword_1EF2B6AE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D595C, &type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AE0);
  }
  return result;
}

unint64_t sub_1BAF48F84()
{
  unint64_t result;

  result = qword_1EF2B6AE8;
  if (!qword_1EF2B6AE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5A14, &type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AE8);
  }
  return result;
}

unint64_t sub_1BAF48FCC()
{
  unint64_t result;

  result = qword_1EF2B6AF0;
  if (!qword_1EF2B6AF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5ACC, &type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AF0);
  }
  return result;
}

unint64_t sub_1BAF49014()
{
  unint64_t result;

  result = qword_1EF2B6AF8;
  if (!qword_1EF2B6AF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5B84, &type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6AF8);
  }
  return result;
}

unint64_t sub_1BAF4905C()
{
  unint64_t result;

  result = qword_1EF2B6B00;
  if (!qword_1EF2B6B00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5C3C, &type metadata for PuzzleAccessoryInputConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B00);
  }
  return result;
}

unint64_t sub_1BAF490A4()
{
  unint64_t result;

  result = qword_1EF2B6B08;
  if (!qword_1EF2B6B08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5BAC, &type metadata for PuzzleAccessoryInputConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B08);
  }
  return result;
}

unint64_t sub_1BAF490EC()
{
  unint64_t result;

  result = qword_1EF2B6B10;
  if (!qword_1EF2B6B10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5BD4, &type metadata for PuzzleAccessoryInputConfiguration.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B10);
  }
  return result;
}

unint64_t sub_1BAF49134()
{
  unint64_t result;

  result = qword_1EF2B6B18;
  if (!qword_1EF2B6B18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5AF4, &type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B18);
  }
  return result;
}

unint64_t sub_1BAF4917C()
{
  unint64_t result;

  result = qword_1EF2B6B20;
  if (!qword_1EF2B6B20)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5B1C, &type metadata for PuzzleAccessoryInputConfiguration.InputType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B20);
  }
  return result;
}

unint64_t sub_1BAF491C4()
{
  unint64_t result;

  result = qword_1EF2B6B28;
  if (!qword_1EF2B6B28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5A3C, &type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B28);
  }
  return result;
}

unint64_t sub_1BAF4920C()
{
  unint64_t result;

  result = qword_1EF2B6B30;
  if (!qword_1EF2B6B30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5A64, &type metadata for PuzzleAccessoryInputConfiguration.InputType.HintCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B30);
  }
  return result;
}

unint64_t sub_1BAF49254()
{
  unint64_t result;

  result = qword_1EF2B6B38;
  if (!qword_1EF2B6B38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5984, &type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B38);
  }
  return result;
}

unint64_t sub_1BAF4929C()
{
  unint64_t result;

  result = qword_1EF2B6B40;
  if (!qword_1EF2B6B40)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D59AC, &type metadata for PuzzleAccessoryInputConfiguration.InputType.StackCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B40);
  }
  return result;
}

unint64_t sub_1BAF492E4()
{
  unint64_t result;

  result = qword_1EF2B6B48;
  if (!qword_1EF2B6B48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D58CC, &type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B48);
  }
  return result;
}

unint64_t sub_1BAF4932C()
{
  unint64_t result;

  result = qword_1EF2B6B50;
  if (!qword_1EF2B6B50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D58F4, &type metadata for PuzzleAccessoryInputConfiguration.InputType.ButtonsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B50);
  }
  return result;
}

unint64_t sub_1BAF49374()
{
  unint64_t result;

  result = qword_1EF2B6B58;
  if (!qword_1EF2B6B58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D5814, &type metadata for PuzzleAccessoryHintConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B58);
  }
  return result;
}

unint64_t sub_1BAF493BC()
{
  unint64_t result;

  result = qword_1EF2B6B60;
  if (!qword_1EF2B6B60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D583C, &type metadata for PuzzleAccessoryHintConfig.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B60);
  }
  return result;
}

uint64_t sub_1BAF49400(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1954047348 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F69746365726964 && a2 == 0xE90000000000006ELL || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7265626D756ELL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D726F4674786574 && a2 == 0xEA00000000007461 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB972120)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t sub_1BAF49618(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1953393000 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B63617473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736E6F74747562 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1BAF49754(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7079547475706E69 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BAF4985C()
{
  unint64_t result;

  result = qword_1EF2B6B68;
  if (!qword_1EF2B6B68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.TextFormat, &type metadata for PuzzleAccessoryHintConfig.TextFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B68);
  }
  return result;
}

unint64_t sub_1BAF498A0()
{
  unint64_t result;

  result = qword_1EF2B6B70;
  if (!qword_1EF2B6B70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleAccessoryHintConfig.Direction, &type metadata for PuzzleAccessoryHintConfig.Direction);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B70);
  }
  return result;
}

uint64_t sub_1BAF498E4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    sub_1BA772D64(0, v1, 0);
    v2 = v9;
    v4 = a1 + 32;
    do
    {
      v4 += 8;
      sub_1BB525134();
      v6 = *(_QWORD *)(v9 + 16);
      v5 = *(_QWORD *)(v9 + 24);
      if (v6 >= v5 >> 1)
        sub_1BA772D64(v5 > 1, v6 + 1, 1);
      *(_QWORD *)(v9 + 16) = v6 + 1;
      *(_QWORD *)(v9 + 8 * v6 + 32) = v8;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BAF499B8(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BA527244(0, v1, 0);
    v2 = v14;
    v4 = (_BYTE *)(a1 + 64);
    do
    {
      v5 = *((_QWORD *)v4 - 4);
      v6 = *((_QWORD *)v4 - 3);
      v7 = *((_QWORD *)v4 - 2);
      v8 = *((_QWORD *)v4 - 1);
      v9 = *v4;
      if ((v9 - 1) >= 0xB)
      {
        if (*v4)
          goto LABEL_5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
LABEL_5:
      v11 = *(_QWORD *)(v14 + 16);
      v10 = *(_QWORD *)(v14 + 24);
      if (v11 >= v10 >> 1)
        sub_1BA527244(v10 > 1, v11 + 1, 1);
      v4 += 40;
      *(_QWORD *)(v14 + 16) = v11 + 1;
      v12 = v14 + 40 * v11;
      *(_QWORD *)(v12 + 32) = v5;
      *(_QWORD *)(v12 + 40) = v6;
      *(_QWORD *)(v12 + 48) = v7;
      *(_QWORD *)(v12 + 56) = v8;
      *(_BYTE *)(v12 + 64) = v9;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BAF49AD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  _QWORD v10[6];

  v2 = type metadata accessor for FormatOption();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v10[5] = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A10C(0, v7, 0);
    v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v10[2] = v2;
    v10[3] = v8;
    sub_1BA4C2DD8(a1 + v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BAF49D98(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BA785114(0, v1, 0);
    v2 = v15;
    v4 = (_QWORD *)(a1 + 64);
    do
    {
      v5 = *(v4 - 4);
      v6 = *(v4 - 2);
      v12 = *((_BYTE *)v4 - 7);
      v13 = *((_BYTE *)v4 - 8);
      v7 = *v4;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_retain();
      sub_1BB525134();
      swift_retain();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(v15 + 16);
      v8 = *(_QWORD *)(v15 + 24);
      if (v9 >= v8 >> 1)
        sub_1BA785114(v8 > 1, v9 + 1, 1);
      *(_QWORD *)(v15 + 16) = v9 + 1;
      v10 = v15 + 40 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v14;
      *(_QWORD *)(v10 + 48) = v6;
      *(_BYTE *)(v10 + 56) = v13;
      *(_BYTE *)(v10 + 57) = v12;
      *(_QWORD *)(v10 + 64) = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BAF49EF0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v14 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A1E4(0, v1, 0);
    v2 = v14;
    v4 = (uint64_t *)(a1 + 48);
    do
    {
      v6 = *(v4 - 2);
      v5 = *(v4 - 1);
      v7 = *v4;
      if ((~v6 & 0xF000000000000007) != 0)
      {
        sub_1BA5E7FF4(v6);
        sub_1BA6E6C68(v5);
        sub_1BA6E6C68(v7);
        sub_1BB525134();
        v8 = v13;
      }
      else
      {
        sub_1BA5E7FF4(*(v4 - 2));
        sub_1BA6E6C68(v5);
        sub_1BA6E6C68(v7);
        v8 = v6;
      }
      sub_1BA6E6C68(v5);
      sub_1BA6E6C68(v7);
      sub_1BA5E800C(v6);
      sub_1BA6E6CD8(v5);
      sub_1BA6E6CD8(v7);
      v10 = *(_QWORD *)(v14 + 16);
      v9 = *(_QWORD *)(v14 + 24);
      if (v10 >= v9 >> 1)
        sub_1BAC7A1E4(v9 > 1, v10 + 1, 1);
      v4 += 3;
      *(_QWORD *)(v14 + 16) = v10 + 1;
      v11 = (_QWORD *)(v14 + 24 * v10);
      v11[4] = v8;
      v11[5] = v5;
      v11[6] = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BAF4A050(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 *v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  __int128 *v11;
  int v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  char v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63[8];
  char v64;
  __int128 v65[8];
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  char v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76[8];
  char v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[136];
  _BYTE v90[136];
  _BYTE v91[136];
  uint64_t v92;
  _BYTE v93[152];

  v2 = sub_1BA79B898(a1);
  if (!v2)
    return sub_1BA90BBD8(0);
  v3 = v2;
  v92 = sub_1BA6B0504();
  sub_1BB575A20(v3);
  if (v3 < 0)
    goto LABEL_37;
  v62 = a1 + 32;
  v4 = 0;
  v59 = v3;
  do
  {
    sub_1BA895BCC(v62 + 136 * v4, (uint64_t)v90);
    sub_1BA895BCC((uint64_t)v90, (uint64_t)v91);
    v7 = sub_1BA895C08((uint64_t)v91);
    if (v7)
    {
      if (v7 == 1)
      {
        v8 = sub_1BA895E68((uint64_t)v91);
        sub_1BA53BAD8(v8, (uint64_t)&v88);
        if (sub_1BA895ED8((uint64_t)&v88) == 1)
        {
          v9 = sub_1BA895EE4((uint64_t)&v88);
          v10 = *(_BYTE *)(v9 + 8);
          *(_QWORD *)&v76[0] = *(_QWORD *)v9;
          sub_1BB525134();
          *(_QWORD *)&v76[0] = v78;
          BYTE8(v76[0]) = v10;
          sub_1BAE992F4((uint64_t)v76);
        }
        else
        {
          v61 = v4;
          v18 = sub_1BA895EE4((uint64_t)&v88);
          sub_1BA895FE8((__int128 *)v18, (uint64_t)&v66);
          v19 = sub_1BA896024((uint64_t)&v66);
          v20 = (uint64_t *)sub_1BA896030((uint64_t)&v66);
          v21 = v20;
          if (v19 == 1)
          {
            v22 = v20[14];
            v23 = sub_1BA79B898(v22);
            if (v23)
            {
              v24 = v23;
              *(_QWORD *)&v63[0] = sub_1BA6B0504();
              sub_1BA895BCC((uint64_t)v90, (uint64_t)&v78);
              v25 = sub_1BA895E68((uint64_t)&v78);
              sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
              sub_1BA895E78(v25);
              sub_1BB575A14(v24);
              if ((v24 & 0x8000000000000000) == 0)
                __asm { BR              X9 }
              goto LABEL_35;
            }
            sub_1BA895BCC((uint64_t)v90, (uint64_t)&v78);
            v50 = sub_1BA895E68((uint64_t)&v78);
            sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895E78(v50);
            v51 = sub_1BA90BB00(0);
            v52 = *((_BYTE *)v21 + 104);
            v53 = v21[15];
            LOBYTE(v76[0]) = *((_BYTE *)v21 + 48);
            LOBYTE(v63[0]) = v52;
            v54 = *((_OWORD *)v21 + 1);
            v78 = *(_OWORD *)v21;
            v79 = v54;
            v80 = *((_OWORD *)v21 + 2);
            LOBYTE(v81) = v76[0];
            v82 = *(_OWORD *)(v21 + 7);
            v83 = *(_OWORD *)(v21 + 9);
            v84 = *(_OWORD *)(v21 + 11);
            v85 = v52;
            v86 = v51;
            v87 = v53;
            sub_1BAE90148((uint64_t)&v78);
            swift_bridgeObjectRetain();
            sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            sub_1BA895FE8(&v78, (uint64_t)v65);
            v4 = v61;
          }
          else
          {
            v35 = *v20;
            v36 = v20[1];
            v37 = v20[2];
            v38 = v20[3];
            v39 = v20[4];
            v40 = v20[5];
            v42 = v20[6];
            v41 = v20[7];
            v43 = sub_1BA79B898(*v20);
            if (v43)
            {
              v44 = v43;
              *(_QWORD *)&v63[0] = sub_1BA6B0504();
              sub_1BA895BCC((uint64_t)v90, (uint64_t)&v78);
              v45 = sub_1BA895E68((uint64_t)&v78);
              sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
              sub_1BA895E78(v45);
              sub_1BB575A14(v44);
              if ((v44 & 0x8000000000000000) == 0)
                __asm { BR              X9 }
LABEL_36:
              __break(1u);
LABEL_37:
              __break(1u);
              JUMPOUT(0x1BAF4D0D0);
            }
            sub_1BA895BCC((uint64_t)v90, (uint64_t)&v78);
            v55 = sub_1BA895E68((uint64_t)&v78);
            sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
            sub_1BA895E78(v55);
            *(_QWORD *)&v78 = sub_1BA90BB00(0);
            *((_QWORD *)&v78 + 1) = v36;
            *(_QWORD *)&v79 = v37;
            *((_QWORD *)&v79 + 1) = v38;
            *(_QWORD *)&v80 = v39;
            *((_QWORD *)&v80 + 1) = v40;
            v81 = v42;
            *(_QWORD *)&v82 = v41;
            sub_1BAE90170((uint64_t)&v78);
            swift_bridgeObjectRetain();
            sub_1BA5DCC20(v42);
            sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
            sub_1BA895FE8(&v78, (uint64_t)v65);
            v4 = v61;
          }
          v56 = *(_BYTE *)(v18 + 128);
          sub_1BA895FE8(v65, (uint64_t)v63);
          v64 = v56;
          v77 = v56;
          v76[6] = v63[6];
          v76[7] = v63[7];
          v76[2] = v63[2];
          v76[3] = v63[3];
          v76[4] = v63[4];
          v76[5] = v63[5];
          v76[0] = v63[0];
          v76[1] = v63[1];
          sub_1BAE99358((uint64_t)v76);
        }
        sub_1BA53BAD8((uint64_t)v76, (uint64_t)&v78);
        sub_1BAE73B40((uint64_t)&v78);
        v5 = &v78;
      }
      else
      {
        sub_1BA895E68((uint64_t)v91);
        v5 = (__int128 *)v90;
      }
      sub_1BA895BCC((uint64_t)v5, (uint64_t)v89);
    }
    else
    {
      v60 = v4;
      v11 = (__int128 *)sub_1BA895E68((uint64_t)v91);
      sub_1BA896178(v11, (uint64_t)v76);
      sub_1BA895FE8(v76, (uint64_t)&v78);
      v12 = sub_1BA896024((uint64_t)&v78);
      v13 = (uint64_t *)sub_1BA896030((uint64_t)&v78);
      v14 = v13;
      if (v12 == 1)
      {
        v15 = v13[14];
        v16 = sub_1BA79B898(v15);
        if (v16)
        {
          v17 = v16;
          *(_QWORD *)&v63[0] = sub_1BA6B0504();
          sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BB575A14(v17);
          if ((v17 & 0x8000000000000000) == 0)
            __asm { BR              X9 }
          __break(1u);
          goto LABEL_34;
        }
        sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        v46 = sub_1BA90BB00(0);
        v47 = *((_BYTE *)v14 + 104);
        v48 = v14[15];
        LOBYTE(v65[0]) = *((_BYTE *)v14 + 48);
        v49 = *((_OWORD *)v14 + 1);
        v66 = *(_OWORD *)v14;
        v67 = v49;
        v68 = *((_OWORD *)v14 + 2);
        LOBYTE(v69) = v65[0];
        v70 = *(_OWORD *)(v14 + 7);
        v71 = *(_OWORD *)(v14 + 9);
        v72 = *(_OWORD *)(v14 + 11);
        v73 = v47;
        v74 = v46;
        v75 = v48;
        sub_1BAE90148((uint64_t)&v66);
        sub_1BA895FE8(&v66, (uint64_t)v63);
        nullsub_1();
        sub_1BA896178(v63, (uint64_t)&v88);
        sub_1BAE73BA4((uint64_t)&v88);
        swift_bridgeObjectRetain();
        sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
        sub_1BA895BCC((uint64_t)&v88, (uint64_t)v89);
        v3 = v59;
        v4 = v60;
      }
      else
      {
        v27 = *v13;
        v26 = v13[1];
        v28 = v13[2];
        v29 = v13[3];
        v30 = v13[4];
        v31 = v13[5];
        v32 = v13[6];
        v58 = v13[7];
        v33 = sub_1BA79B898(*v13);
        if (v33)
        {
          v34 = v33;
          *(_QWORD *)&v63[0] = sub_1BA6B0504();
          sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
          sub_1BB575A14(v34);
          if ((v34 & 0x8000000000000000) == 0)
            __asm { BR              X9 }
LABEL_34:
          __break(1u);
LABEL_35:
          __break(1u);
          goto LABEL_36;
        }
        sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895C14, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769620);
        *(_QWORD *)&v66 = sub_1BA90BB00(0);
        *((_QWORD *)&v66 + 1) = v26;
        *(_QWORD *)&v67 = v28;
        *((_QWORD *)&v67 + 1) = v29;
        *(_QWORD *)&v68 = v30;
        *((_QWORD *)&v68 + 1) = v31;
        v69 = v32;
        *(_QWORD *)&v70 = v58;
        sub_1BAE90170((uint64_t)&v66);
        sub_1BA895FE8(&v66, (uint64_t)v63);
        nullsub_1();
        sub_1BA896178(v63, (uint64_t)&v88);
        sub_1BAE73BA4((uint64_t)&v88);
        swift_bridgeObjectRetain();
        sub_1BA5DCC20(v32);
        sub_1BA895DFC((uint64_t)v90, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA895D94, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1BA769654);
        sub_1BA895BCC((uint64_t)&v88, (uint64_t)v89);
        v4 = v60;
      }
    }
    ++v4;
    sub_1BA895BCC((uint64_t)v89, (uint64_t)v93);
    sub_1BB575B94();
    v6 = *(_QWORD *)(v92 + 16);
    sub_1BB575D04(v6);
    sub_1BB575E9C(v6, (uint64_t)v93);
    nullsub_1();
  }
  while (v4 != v3);
  return v92;
}

uint64_t FormatGroupNodeMaskStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

void sub_1BAF4D5E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v4 = type metadata accessor for FormatOption();
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = type metadata accessor for FormatDerivedDataOption();
  MEMORY[0x1E0C80A78](v34);
  v31 = (uint64_t)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v30 = (uint64_t)&v27 - v9;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  v13 = sub_1BA4E7358(0.0, 0.0, 0.0, 0.0);
  v14 = v13;
  v33 = *(_QWORD *)(v13 + 16);
  if (v33)
  {
    v27 = v1;
    v28 = v12;
    v15 = 0;
    v35 = a1;
    v29 = v6;
    v32 = v13;
    while (1)
    {
      sub_1BA6E9B50(*(_QWORD *)(v14 + 8 * v15 + 32));
      swift_retain();
      sub_1BB186044(v6, (uint64_t)v12);
      if (v2)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      v16 = swift_allocBox();
      v18 = v17;
      sub_1BA4C2DD8((uint64_t)v12, v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      v19 = *(_QWORD **)(a1 + 48);
      v20 = v19[2];
      if (!v20 || v19[v20 + 3] >> 60 != 1)
        goto LABEL_10;
      v21 = swift_projectBox();
      v22 = v30;
      sub_1BA4C2DD8(v21, v30, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      v23 = v31;
      sub_1BA4C2DD8(v18, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      swift_retain();
      swift_retain();
      v24 = sub_1BB188A5C(v22, v23);
      sub_1BA4A2E80(v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      swift_release();
      swift_release();
      if (!v24)
        break;
      swift_release();
      v12 = v28;
      v6 = v29;
      a1 = v35;
LABEL_4:
      ++v15;
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataOption);
      swift_release();
      v14 = v32;
      if (v33 == v15)
        goto LABEL_17;
    }
    v19 = *(_QWORD **)(v35 + 48);
    v12 = v28;
    v6 = v29;
LABEL_10:
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v19 = sub_1BB38ED0C(0, v19[2] + 1, 1, v19);
    v26 = v19[2];
    v25 = v19[3];
    if (v26 >= v25 >> 1)
      v19 = sub_1BB38ED0C((_QWORD *)(v25 > 1), v26 + 1, 1, v19);
    v19[2] = v26 + 1;
    v19[v26 + 4] = v16 | 0x1000000000000000;
    swift_release();
    a1 = v35;
    *(_QWORD *)(v35 + 48) = v19;
    goto LABEL_4;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_1BAC3F824(a1);
}

uint64_t FormatGroupNodeMaskStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeMaskStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeMaskStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatGroupNodeMaskStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatGroupNodeMaskStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatGroupNodeMaskStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatGroupNodeMaskStyle.path.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_BYTE *)(v1 + 120);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BA7AF9CC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t FormatGroupNodeMaskStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMaskStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 136);
  v3 = *(_QWORD *)(v1 + 144);
  v4 = *(_QWORD *)(v1 + 152);
  v5 = *(_QWORD *)(v1 + 160);
  v6 = *(_QWORD *)(v1 + 168);
  v7 = *(_QWORD *)(v1 + 176);
  v8 = *(_QWORD *)(v1 + 184);
  v9 = *(_QWORD *)(v1 + 192);
  v10 = *(_QWORD *)(v1 + 200);
  v11 = *(_QWORD *)(v1 + 208);
  v12 = *(_BYTE *)(v1 + 216);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatGroupNodeMaskStyle.__allocating_init(identifier:class:selectors:path:borders:shadow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, __int128 *a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v13 = swift_allocObject();
  v20 = a6[1];
  v21 = *a6;
  v19 = a6[2];
  v15 = *((_QWORD *)a6 + 6);
  v14 = *((_QWORD *)a6 + 7);
  LOBYTE(a6) = *((_BYTE *)a6 + 64);
  v24 = a8[1];
  v25 = *a8;
  v22 = a8[3];
  v23 = a8[2];
  v16 = *((_QWORD *)a8 + 8);
  v17 = *((_QWORD *)a8 + 9);
  LOBYTE(a8) = *((_BYTE *)a8 + 80);
  swift_beginAccess();
  *(_QWORD *)(v13 + 16) = a1;
  *(_QWORD *)(v13 + 24) = a2;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v13 + 48) = a5;
  *(_OWORD *)(v13 + 56) = v21;
  *(_OWORD *)(v13 + 72) = v20;
  *(_OWORD *)(v13 + 88) = v19;
  *(_QWORD *)(v13 + 104) = v15;
  *(_QWORD *)(v13 + 112) = v14;
  *(_BYTE *)(v13 + 120) = (_BYTE)a6;
  *(_QWORD *)(v13 + 128) = a7;
  *(_OWORD *)(v13 + 136) = v25;
  *(_OWORD *)(v13 + 152) = v24;
  *(_OWORD *)(v13 + 168) = v23;
  *(_OWORD *)(v13 + 184) = v22;
  *(_QWORD *)(v13 + 200) = v16;
  *(_QWORD *)(v13 + 208) = v17;
  *(_BYTE *)(v13 + 216) = (_BYTE)a8;
  return v13;
}

uint64_t FormatGroupNodeMaskStyle.init(identifier:class:selectors:path:borders:shadow:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int128 *a6, uint64_t a7, __int128 *a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v20 = a6[1];
  v21 = *a6;
  v19 = a6[2];
  v13 = *((_QWORD *)a6 + 6);
  v14 = *((_QWORD *)a6 + 7);
  v15 = *((_BYTE *)a6 + 64);
  v25 = a8[1];
  v26 = *a8;
  v23 = a8[3];
  v24 = a8[2];
  v16 = *((_QWORD *)a8 + 9);
  v22 = *((_QWORD *)a8 + 8);
  v17 = *((_BYTE *)a8 + 80);
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v8 + 48) = a5;
  *(_OWORD *)(v8 + 56) = v21;
  *(_OWORD *)(v8 + 72) = v20;
  *(_OWORD *)(v8 + 88) = v19;
  *(_QWORD *)(v8 + 104) = v13;
  *(_QWORD *)(v8 + 112) = v14;
  *(_BYTE *)(v8 + 120) = v15;
  *(_QWORD *)(v8 + 128) = a7;
  *(_OWORD *)(v8 + 136) = v26;
  *(_OWORD *)(v8 + 152) = v25;
  *(_OWORD *)(v8 + 168) = v24;
  *(_OWORD *)(v8 + 184) = v23;
  *(_QWORD *)(v8 + 200) = v22;
  *(_QWORD *)(v8 + 208) = v16;
  *(_BYTE *)(v8 + 216) = v17;
  return v8;
}

uint64_t sub_1BAF4DDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v32 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 40);
  v30 = *(_QWORD *)(v0 + 32);
  swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 56);
  v4 = *(_QWORD *)(v0 + 64);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 80);
  v35 = *(_QWORD *)(v0 + 96);
  v36 = *(_QWORD *)(v0 + 88);
  v33 = *(_QWORD *)(v0 + 112);
  v34 = *(_QWORD *)(v0 + 104);
  v7 = *(_BYTE *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 128);
  v31 = v1;
  v28 = *(_QWORD *)(v0 + 48);
  v29 = v2;
  v26 = v4;
  v27 = v3;
  v24 = v6;
  v25 = v5;
  v23 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA7AF9CC(v3, v4, v5, v6, v36, v35, v34, v33, v7);
  if (v8)
    v9 = sub_1BAF49D98(v8);
  else
    v9 = 0;
  v11 = *(_QWORD *)(v0 + 136);
  v10 = *(_QWORD *)(v0 + 144);
  v12 = *(_QWORD *)(v0 + 152);
  v13 = *(_QWORD *)(v0 + 160);
  v14 = *(_QWORD *)(v0 + 168);
  v15 = *(_QWORD *)(v0 + 176);
  v16 = *(_QWORD *)(v0 + 184);
  v17 = *(unsigned __int8 *)(v0 + 216);
  v21 = *(_QWORD *)(v0 + 200);
  v22 = *(_QWORD *)(v0 + 192);
  v20 = *(_QWORD *)(v0 + 208);
  if (v17 != 254)
  {
    sub_1BB525134();
    v14 = v37;
    v10 = v10;
  }
  v18 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v18 + 16) = v32;
  *(_QWORD *)(v18 + 24) = v31;
  *(_QWORD *)(v18 + 32) = v30;
  *(_QWORD *)(v18 + 40) = v29;
  swift_beginAccess();
  *(_QWORD *)(v18 + 48) = v28;
  *(_QWORD *)(v18 + 56) = v27;
  *(_QWORD *)(v18 + 64) = v26;
  *(_QWORD *)(v18 + 72) = v25;
  *(_QWORD *)(v18 + 80) = v24;
  *(_QWORD *)(v18 + 88) = v36;
  *(_QWORD *)(v18 + 96) = v35;
  *(_QWORD *)(v18 + 104) = v34;
  *(_QWORD *)(v18 + 112) = v33;
  *(_BYTE *)(v18 + 120) = v23;
  *(_QWORD *)(v18 + 128) = v9;
  *(_QWORD *)(v18 + 136) = v11;
  *(_QWORD *)(v18 + 144) = v10;
  *(_QWORD *)(v18 + 152) = v12;
  *(_QWORD *)(v18 + 160) = v13;
  *(_QWORD *)(v18 + 168) = v14;
  *(_QWORD *)(v18 + 176) = v15;
  *(_QWORD *)(v18 + 184) = v16;
  *(_QWORD *)(v18 + 192) = v22;
  *(_QWORD *)(v18 + 200) = v21;
  *(_QWORD *)(v18 + 208) = v20;
  *(_BYTE *)(v18 + 216) = v17;
  return v18;
}

uint64_t FormatGroupNodeMaskStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA7AF9E4(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_BYTE *)(v0 + 120));
  swift_bridgeObjectRelease();
  sub_1BA6E8A78(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_QWORD *)(v0 + 176), *(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208), *(_BYTE *)(v0 + 216));
  return v0;
}

uint64_t sub_1BAF4E064(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed24FormatGroupNodeMaskStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatGroupNodeMaskStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMaskStyle.Selector.path.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_BYTE *)(a1 + 64) = v10;
  return sub_1BA7AF9CC(v2, v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t FormatGroupNodeMaskStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatGroupNodeMaskStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_QWORD *)(v1 + 152);
  v10 = *(_QWORD *)(v1 + 160);
  v11 = *(_QWORD *)(v1 + 168);
  v12 = *(_BYTE *)(v1 + 176);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

void sub_1BAF4E138(uint64_t a1)
{
  sub_1BAF4D5E4(a1);
}

BOOL _s8NewsFeed24FormatGroupNodeMaskStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  char v26;
  char v27;
  _BOOL8 result;
  char v29;
  char v30;
  uint64_t v31;
  BOOL v32;
  char v33;
  unsigned __int8 v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 v108;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v8 = *(_QWORD *)(a1 + 56);
  v7 = *(_QWORD *)(a1 + 64);
  v75 = *(_QWORD *)(a1 + 72);
  v9 = *(unsigned __int8 *)(a1 + 80);
  v70 = *(_QWORD *)(a1 + 88);
  v55 = *(_QWORD *)(a1 + 96);
  v56 = *(_QWORD *)(a1 + 104);
  v57 = *(_QWORD *)(a1 + 112);
  v58 = *(_QWORD *)(a1 + 120);
  v59 = *(_QWORD *)(a1 + 128);
  v60 = *(_QWORD *)(a1 + 136);
  v62 = *(_QWORD *)(a1 + 152);
  v64 = *(_QWORD *)(a1 + 144);
  v53 = *(_QWORD *)(a1 + 168);
  v54 = *(_QWORD *)(a1 + 160);
  v66 = *(unsigned __int8 *)(a1 + 176);
  v11 = *(_QWORD *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  v13 = *(_QWORD *)(a2 + 32);
  v12 = *(_QWORD *)(a2 + 40);
  v14 = *(_QWORD *)(a2 + 48);
  v15 = *(_QWORD *)(a2 + 56);
  v17 = *(_QWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a2 + 72);
  v18 = *(unsigned __int8 *)(a2 + 80);
  v68 = *(_QWORD *)(a2 + 88);
  v44 = *(_QWORD *)(a2 + 96);
  v45 = *(_QWORD *)(a2 + 104);
  v46 = *(_QWORD *)(a2 + 112);
  v47 = *(_QWORD *)(a2 + 120);
  v48 = *(_QWORD *)(a2 + 128);
  v49 = *(_QWORD *)(a2 + 136);
  v50 = *(_QWORD *)(a2 + 144);
  v51 = *(_QWORD *)(a2 + 152);
  v43 = *(_QWORD *)(a2 + 160);
  v42 = *(_QWORD *)(a2 + 168);
  v52 = *(unsigned __int8 *)(a2 + 176);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v72 = *(_QWORD *)(a2 + 48);
  v74 = *(_QWORD *)(a1 + 40);
  v41 = *(unsigned __int8 *)(a1 + 80);
  v39 = *(_QWORD *)(a1 + 16);
  v40 = *(_QWORD *)(a2 + 64);
  v37 = *(_QWORD *)(a1 + 32);
  v38 = *(_QWORD *)(a1 + 24);
  v19 = *(_QWORD *)(a2 + 72);
  v20 = *(_QWORD *)(a2 + 56);
  v21 = *(_QWORD *)(a2 + 40);
  v22 = *(_QWORD *)(a2 + 32);
  v23 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 16);
  v25 = *(unsigned __int8 *)(a2 + 80);
  v26 = sub_1BB874398();
  v18 = v25;
  v11 = v24;
  v10 = v23;
  v13 = v22;
  v12 = v21;
  v14 = v72;
  v6 = v74;
  v15 = v20;
  v16 = v19;
  v4 = v37;
  v3 = v38;
  v2 = v39;
  v17 = v40;
  v9 = v41;
  v27 = v26;
  result = 0;
  if ((v27 & 1) != 0)
  {
LABEL_4:
    if (v9 == 255)
    {
      if (v18 == 255)
      {
LABEL_9:
        if (v70)
        {
          if (!v68)
            return 0;
          swift_bridgeObjectRetain();
          v31 = swift_bridgeObjectRetain();
          v32 = sub_1BA882894(v31, v68);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!v32)
            return 0;
        }
        else if (v68)
        {
          return 0;
        }
        v33 = v66;
        if (v66 == 254)
        {
          v34 = v52;
          v35 = v62;
          if (v52 == 254)
            return 1;
          goto LABEL_23;
        }
        v87 = v55;
        v88 = v56;
        v89 = v57;
        v90 = v58;
        v91 = v59;
        v92 = v60;
        v35 = v62;
        v93 = v64;
        v94 = v62;
        v95 = v54;
        v96 = v53;
        LOBYTE(v97) = v66;
        if (v52 == 254)
        {
          swift_retain();
          v33 = v66;
          v34 = -2;
LABEL_23:
          v87 = v55;
          v88 = v56;
          v89 = v57;
          v90 = v58;
          v91 = v59;
          v92 = v60;
          v93 = v64;
          v94 = v35;
          v95 = v54;
          v96 = v53;
          LOBYTE(v97) = v33;
          v98 = v44;
          v99 = v45;
          v100 = v46;
          v101 = v47;
          v102 = v48;
          v103 = v49;
          v104 = v50;
          v105 = v51;
          v106 = v43;
          v107 = v42;
          v108 = v34;
          sub_1BA6E8A48(v44, v45, v46, v47, v48, v49, v50, v51, v43, v42, v34);
          sub_1BA9F10E8((uint64_t)&v87);
          return 0;
        }
        v76 = v44;
        LODWORD(v77) = v45;
        v78 = v46;
        v79 = v47;
        v80 = v48;
        v81 = v49;
        v82 = v50;
        v83 = v51;
        v84 = v43;
        v85 = v42;
        v86 = v52;
        sub_1BA6E8A48(v55, v56, v57, v58, v59, v60, v64, v62, v54, v53, v66);
        swift_retain();
        v36 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v87, (uint64_t)&v76);
        swift_release();
        sub_1BA6E8A78(v55, v56, v57, v58, v59, v60, v64, v62, v54, v53, v66);
        return (v36 & 1) != 0;
      }
    }
    else
    {
      v87 = v2;
      v88 = v3;
      v89 = v4;
      v90 = v6;
      v91 = v5;
      v92 = v8;
      v93 = v7;
      v94 = v75;
      LOBYTE(v95) = v9;
      if (v18 != 255)
      {
        v76 = v11;
        v77 = v10;
        v78 = v13;
        v79 = v12;
        v80 = v14;
        v81 = v15;
        v82 = v17;
        v83 = v16;
        LOBYTE(v84) = v18;
        sub_1BA7AF9CC(v2, v3, v4, v6, v5, v8, v7, v75, v9);
        sub_1BA7AF9FC(v2, v3, v4, v6, v5, v8, v7, v75, v9);
        _s8NewsFeed23FormatGroupNodeMaskPathO2eeoiySbAC_ACtFZ_0((uint64_t)&v87);
        v30 = v29;
        sub_1BA5608E0(v87, v88, v89, v90, v91, v92, v93, v94, v95);
        sub_1BA7AF9E4(v2, v3, v4, v6, v5, v8, v7, v75, v9);
        if ((v30 & 1) == 0)
          return 0;
        goto LABEL_9;
      }
      v73 = v14;
      v69 = v15;
      v71 = v16;
      v65 = v13;
      v67 = v12;
      v61 = v11;
      v63 = v10;
      sub_1BA7AF9FC(v2, v3, v4, v6, v5, v8, v7, v75, v9);
      sub_1BA7AF9FC(v2, v3, v4, v6, v5, v8, v7, v75, v9);
      sub_1BA5608E0(v2, v3, v4, v6, v5, v8, v7, v75, v9);
      LOBYTE(v18) = -1;
      v11 = v61;
      v10 = v63;
      v13 = v65;
      v12 = v67;
      v16 = v71;
      v14 = v73;
      v15 = v69;
    }
    v87 = v2;
    v88 = v3;
    v89 = v4;
    v90 = v6;
    v91 = v5;
    v92 = v8;
    v93 = v7;
    v94 = v75;
    LOBYTE(v95) = v9;
    v96 = v11;
    v97 = v10;
    v98 = v13;
    v99 = v12;
    v100 = v14;
    v101 = v15;
    v102 = v17;
    v103 = v16;
    LOBYTE(v104) = v18;
    sub_1BA7AF9CC(v11, v10, v13, v12, v14, v15, v17, v16, v18);
    sub_1BAEE7C98((uint64_t)&v87);
    return 0;
  }
  return result;
}

uint64_t sub_1BAF4E6F8(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF4E7DC(&qword_1EF2B6B78, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF4E72C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAF4E7DC(&qword_1ED3CAAC8, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  result = sub_1BAF4E7DC(&qword_1ED3A73F8, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BAF4E778(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF4E7DC(&qword_1ED3CAAC8, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  a1[2] = sub_1BAF4E7DC(&qword_1ED3A73F8, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  result = sub_1BAF4E7DC(&qword_1EF2B6B80, (uint64_t)&protocol conformance descriptor for FormatGroupNodeMaskStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF4E7DC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatGroupNodeMaskStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAF4E818(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF4E83C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF4E83C()
{
  unint64_t result;

  result = qword_1EF2B6B88;
  if (!qword_1EF2B6B88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeMaskStyle.Selector, &type metadata for FormatGroupNodeMaskStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B88);
  }
  return result;
}

unint64_t sub_1BAF4E880(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8275E0();
  a1[2] = sub_1BA827624();
  result = sub_1BAF4E8B4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF4E8B4()
{
  unint64_t result;

  result = qword_1EF2B6B90;
  if (!qword_1EF2B6B90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeMaskStyle.Selector, &type metadata for FormatGroupNodeMaskStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B90);
  }
  return result;
}

uint64_t sub_1BAF4E8F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF4E944@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatGroupNodeMaskStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatGroupNodeMaskStyle.__allocating_init(identifier:class:selectors:path:borders:shadow:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t assignWithCopy for FormatGroupNodeMaskStyle.Selector(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  _OWORD *v36;
  _OWORD *v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v52;
  uint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v6 == 255)
    {
      *v4 = *v5;
      v33 = *(_OWORD *)(a2 + 32);
      v34 = *(_OWORD *)(a2 + 48);
      v35 = *(_OWORD *)(a2 + 64);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_OWORD *)(a1 + 48) = v34;
      *(_OWORD *)(a1 + 64) = v35;
      *(_OWORD *)(a1 + 32) = v33;
    }
    else
    {
      v23 = *(_QWORD *)(a2 + 16);
      v53 = *(_QWORD *)(a2 + 24);
      v24 = *(_QWORD *)(a2 + 32);
      v25 = *(_QWORD *)(a2 + 40);
      v26 = *(_QWORD *)(a2 + 48);
      v27 = *(_QWORD *)(a2 + 56);
      v28 = *(_QWORD *)(a2 + 64);
      v29 = *(_QWORD *)(a2 + 72);
      sub_1BA7AF9FC(v23, v53, v24, v25, v26, v27, v28, v29, v6);
      *(_QWORD *)(a1 + 16) = v23;
      *(_QWORD *)(a1 + 24) = v53;
      *(_QWORD *)(a1 + 32) = v24;
      *(_QWORD *)(a1 + 40) = v25;
      *(_QWORD *)(a1 + 48) = v26;
      *(_QWORD *)(a1 + 56) = v27;
      *(_QWORD *)(a1 + 64) = v28;
      *(_QWORD *)(a1 + 72) = v29;
      *(_BYTE *)(a1 + 80) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1BAF4EC74(a1 + 16);
    *v4 = *v5;
    v31 = *(_OWORD *)(a2 + 48);
    v30 = *(_OWORD *)(a2 + 64);
    v32 = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v31;
    *(_OWORD *)(a1 + 64) = v30;
    *(_OWORD *)(a1 + 32) = v32;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v52 = *(_QWORD *)(a2 + 24);
    v8 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    v11 = *(_QWORD *)(a2 + 56);
    v12 = *(_QWORD *)(a2 + 64);
    v13 = *(_QWORD *)(a2 + 72);
    sub_1BA7AF9FC(v7, v52, v8, v9, v10, v11, v12, v13, v6);
    v14 = *(_QWORD *)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 24);
    v16 = *(_QWORD *)(a1 + 32);
    v17 = *(_QWORD *)(a1 + 40);
    v18 = *(_QWORD *)(a1 + 48);
    v19 = *(_QWORD *)(a1 + 56);
    v20 = *(_QWORD *)(a1 + 64);
    v21 = *(_QWORD *)(a1 + 72);
    v22 = *(_BYTE *)(a1 + 80);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v52;
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_QWORD *)(a1 + 56) = v11;
    *(_QWORD *)(a1 + 64) = v12;
    *(_QWORD *)(a1 + 72) = v13;
    *(_BYTE *)(a1 + 80) = v6;
    sub_1BA5608E0(v14, v15, v16, v17, v18, v19, v20, v21, v22);
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v36 = (_OWORD *)(a1 + 96);
  v37 = (_OWORD *)(a2 + 96);
  v38 = *(unsigned __int8 *)(a2 + 176);
  if (*(unsigned __int8 *)(a1 + 176) == 254)
  {
    if (v38 == 254)
    {
      v39 = *(_OWORD *)(a2 + 112);
      *v36 = *v37;
      *(_OWORD *)(a1 + 112) = v39;
      v40 = *(_OWORD *)(a2 + 128);
      v41 = *(_OWORD *)(a2 + 144);
      v42 = *(_OWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_OWORD *)(a1 + 144) = v41;
      *(_OWORD *)(a1 + 160) = v42;
      *(_OWORD *)(a1 + 128) = v40;
    }
    else
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      v47 = *(_OWORD *)(a2 + 136);
      v48 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
      *(_OWORD *)(a1 + 152) = v48;
      *(_OWORD *)(a1 + 136) = v47;
      swift_retain();
    }
  }
  else if (v38 == 254)
  {
    sub_1BA9F0278(a1 + 96);
    v43 = *(_OWORD *)(a2 + 112);
    *v36 = *v37;
    *(_OWORD *)(a1 + 112) = v43;
    v45 = *(_OWORD *)(a2 + 144);
    v44 = *(_OWORD *)(a2 + 160);
    v46 = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v45;
    *(_OWORD *)(a1 + 160) = v44;
    *(_OWORD *)(a1 + 128) = v46;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    swift_retain();
    swift_release();
    v49 = *(_OWORD *)(a2 + 136);
    v50 = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
    *(_OWORD *)(a1 + 152) = v50;
    *(_OWORD *)(a1 + 136) = v49;
  }
  return a1;
}

uint64_t sub_1BAF4EC74(uint64_t a1)
{
  destroy for FormatGroupNodeMaskPath(a1);
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeMaskStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(unsigned __int8 *)(a1 + 80);
  if (v5 != 255)
  {
    v6 = *(unsigned __int8 *)(a2 + 80);
    if (v6 != 255)
    {
      v7 = *(_QWORD *)(a1 + 16);
      v8 = *(_QWORD *)(a1 + 24);
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *(_QWORD *)(a1 + 40);
      v11 = *(_QWORD *)(a1 + 48);
      v12 = *(_QWORD *)(a1 + 56);
      v13 = *(_QWORD *)(a1 + 64);
      v14 = *(_QWORD *)(a1 + 72);
      v15 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v15;
      v16 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v16;
      *(_BYTE *)(a1 + 80) = v6;
      sub_1BA5608E0(v7, v8, v9, v10, v11, v12, v13, v14, v5);
      goto LABEL_6;
    }
    sub_1BAF4EC74(a1 + 16);
  }
  v17 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v17;
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  v18 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v18;
LABEL_6:
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 176) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 176) != 254)
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_DWORD *)(a1 + 104) = *(_DWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_release();
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 161) = *(_OWORD *)(a2 + 161);
      return a1;
    }
    sub_1BA9F0278(a1 + 96);
  }
  v19 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v19;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v20 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v20;
  return a1;
}

ValueMetadata *type metadata accessor for FormatGroupNodeMaskStyle.Selector()
{
  return &type metadata for FormatGroupNodeMaskStyle.Selector;
}

_QWORD *sub_1BAF4EE0C(double *a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v15;
  char *v16;
  unsigned __int8 v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  unsigned __int8 v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t inited;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  _OWORD v57[2];
  uint64_t v58;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  if (a2)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    v49 = sub_1BAF4DDA8();
    v50 = 0u;
    v51 = 0u;
    v52 = 0;
    v53 = xmmword_1BB8D6100;
    v11 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v49, v11 + 16);
    v12 = sub_1BA9F10D0;
  }
  else
  {
    v11 = 0;
    v9 = 0;
    v10 = 0xE000000000000000;
    v12 = sub_1BB739F50;
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (uint64_t (**)())((char *)v8 + *(int *)(v13 + 24));
  *v14 = v12;
  v14[1] = (uint64_t (*)())v11;
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *v8 = v9;
  v8[1] = v10;
  v8[2] = 0;
  v8[3] = 0;
  v16 = (char *)v8 + *(int *)(v13 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v17 = -1;
  v16[16] = -1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v57);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(v18 + 48) = v58;
  v19 = v57[1];
  *(_OWORD *)(v18 + 16) = v57[0];
  *(_OWORD *)(v18 + 32) = v19;
  if (a2)
  {
    v20 = *(_QWORD *)(a2 + 56);
    v21 = *(_QWORD *)(a2 + 64);
    v22 = *(_QWORD *)(a2 + 72);
    v23 = *(_QWORD *)(a2 + 80);
    v24 = *(_QWORD *)(a2 + 88);
    v25 = *(_QWORD *)(a2 + 96);
    v27 = *(_QWORD *)(a2 + 104);
    v26 = *(_QWORD *)(a2 + 112);
    v17 = *(_BYTE *)(a2 + 120);
    sub_1BA7AF9CC(v20, v21, v22, v23, v24, v25, v27, v26, v17);
  }
  else
  {
    v20 = 0;
    v21 = 0;
    v22 = 0;
    v23 = 0;
    v24 = 0;
    v25 = 0;
    v27 = 0;
    v26 = 0;
  }
  v49 = v20;
  *(_QWORD *)&v50 = v21;
  *((_QWORD *)&v50 + 1) = v22;
  *(_QWORD *)&v51 = v23;
  *((_QWORD *)&v51 + 1) = v24;
  v52 = v25;
  *(_QWORD *)&v53 = v27;
  *((_QWORD *)&v53 + 1) = v26;
  LOBYTE(v54) = v17;
  v28 = sub_1BAB1B9B0(a1, (uint64_t)&v49);
  v29 = v17;
  v30 = v28;
  sub_1BA7AF9E4(v20, v21, v22, v23, v24, v25, v27, v26, v29);
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 104) = &off_1E7335C38;
  *(_QWORD *)(inited + 72) = v30;
  if (a2)
  {
    v44 = *(_BYTE *)(a2 + 216);
    v45 = *(_QWORD *)(a2 + 208);
    v47 = *(_QWORD *)(a2 + 200);
    v31 = *(_QWORD *)(a2 + 136);
    v32 = *(_QWORD *)(a2 + 144);
    v33 = *(_QWORD *)(a2 + 152);
    v34 = *(_QWORD *)(a2 + 160);
    v35 = *(_QWORD *)(a2 + 168);
    v36 = *(_QWORD *)(a2 + 176);
    v37 = *(_QWORD *)(a2 + 184);
    v38 = *(_QWORD *)(a2 + 192);
    sub_1BA6E8A48(v31, v32, v33, v34, v35, v36, v37, v38, v47, v45, v44);
  }
  else
  {
    v31 = 0;
    v32 = 0;
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v45 = 0;
    v47 = 0;
    v44 = -2;
  }
  v49 = v31;
  *(_QWORD *)&v50 = v32;
  *((_QWORD *)&v50 + 1) = v33;
  *(_QWORD *)&v51 = v34;
  *((_QWORD *)&v51 + 1) = v35;
  v52 = v36;
  *(_QWORD *)&v53 = v37;
  *((_QWORD *)&v53 + 1) = v38;
  v54 = v47;
  v55 = v45;
  v56 = v44;
  v39 = sub_1BB05E83C((uint64_t)&v49);
  v40 = v31;
  v41 = v39;
  sub_1BA6E8A78(v40, v32, v33, v34, v35, v36, v37, v38, v47, v45, v44);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v41;
  v42 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v42;
}

uint64_t sub_1BAF4F298()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF4F2CC()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t sub_1BAF4F2FC()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAF4F33C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAF4F368()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceHeader()
{
  return &type metadata for SportsTaxonomyGraphResourceHeader;
}

unint64_t sub_1BAF4F3A8()
{
  unint64_t result;

  result = qword_1EF2B6B98;
  if (!qword_1EF2B6B98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D6184, &type metadata for SportsTaxonomyGraphResourceHeader);
    atomic_store(result, (unint64_t *)&qword_1EF2B6B98);
  }
  return result;
}

uint64_t sub_1BAF4F3EC()
{
  sub_1BAF4F72C();
  return sub_1BB874710();
}

uint64_t sub_1BAF4F414()
{
  sub_1BAF4F72C();
  return sub_1BB87471C();
}

uint64_t sub_1BAF4F43C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAF4F490()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAF4F4AC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAF4F4FC@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BAF4F54C(_QWORD *a1@<X8>)
{
  *a1 = 0x726F705365726F6DLL;
  a1[1] = 0xEA00000000007374;
}

uint64_t sub_1BAF4F56C()
{
  sub_1BAF4FB28();
  return sub_1BB872D60();
}

uint64_t sub_1BAF4F5C8()
{
  sub_1BAF4FB28();
  return sub_1BB872D0C();
}

uint64_t sub_1BAF4F614(_QWORD *a1)
{
  return sub_1BAF4F7B4(a1);
}

uint64_t sub_1BAF4F628(_QWORD *a1)
{
  return sub_1BAF4F63C(a1);
}

uint64_t sub_1BAF4F63C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BAF4F8BC(0, &qword_1EF2B6BA0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF4F72C();
  sub_1BB8746C8();
  sub_1BAF4F770();
  sub_1BB8741AC();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1BAF4F72C()
{
  unint64_t result;

  result = qword_1ED3AC570;
  if (!qword_1ED3AC570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D63BC, &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC570);
  }
  return result;
}

unint64_t sub_1BAF4F770()
{
  unint64_t result;

  result = qword_1EF2B6BA8;
  if (!qword_1EF2B6BA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D6394, &type metadata for SportsTaxonomyGraphResourceHeader.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6BA8);
  }
  return result;
}

uint64_t sub_1BAF4F7B4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  sub_1BAF4F8BC(0, &qword_1ED3AC5D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF4F72C();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BAF4F918();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAF4F8BC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF4F72C();
    v7 = a3(a1, &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAF4F918()
{
  unint64_t result;

  result = qword_1ED3AC590;
  if (!qword_1ED3AC590)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D636C, &type metadata for SportsTaxonomyGraphResourceHeader.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3AC590);
  }
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceHeader.CodingType()
{
  return &type metadata for SportsTaxonomyGraphResourceHeader.CodingType;
}

uint64_t _s8NewsFeed33SportsTaxonomyGraphResourceHeaderOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF4F9AC + 4 * byte_1BB8D6110[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF4F9CC + 4 * byte_1BB8D6115[v4]))();
}

_BYTE *sub_1BAF4F9AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF4F9CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF4F9D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF4F9DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF4F9E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF4F9EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceHeader.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys;
}

unint64_t sub_1BAF4FA0C()
{
  unint64_t result;

  result = qword_1EF2B6BB0;
  if (!qword_1EF2B6BB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D62A4, &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6BB0);
  }
  return result;
}

unint64_t sub_1BAF4FA54()
{
  unint64_t result;

  result = qword_1EF2B6BB8;
  if (!qword_1EF2B6BB8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D6344, &type metadata for SportsTaxonomyGraphResourceHeader.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6BB8);
  }
  return result;
}

unint64_t sub_1BAF4FA9C()
{
  unint64_t result;

  result = qword_1ED3AC580;
  if (!qword_1ED3AC580)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D6214, &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC580);
  }
  return result;
}

unint64_t sub_1BAF4FAE4()
{
  unint64_t result;

  result = qword_1ED3AC578;
  if (!qword_1ED3AC578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D623C, &type metadata for SportsTaxonomyGraphResourceHeader.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AC578);
  }
  return result;
}

unint64_t sub_1BAF4FB28()
{
  unint64_t result;

  result = qword_1ED3AC588;
  if (!qword_1ED3AC588)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D62CC, &type metadata for SportsTaxonomyGraphResourceHeader.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3AC588);
  }
  return result;
}

uint64_t AudioTrackFontBook.titleAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

id AudioTrackFontBook.publisherFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id AudioTrackFontBook.trackDurationFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id AudioTrackFontBook.readButtonFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id AudioTrackFontBook.accessoryFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

void __swiftcall AudioTrackFontBook.init(titleAttributes:publisherFont:trackDurationFont:readButtonFont:accessoryFont:)(NewsFeed::AudioTrackFontBook *__return_ptr retstr, Swift::OpaquePointer titleAttributes, UIFont publisherFont, UIFont trackDurationFont, UIFont readButtonFont, UIFont accessoryFont)
{
  retstr->titleAttributes = titleAttributes;
  retstr->publisherFont = publisherFont;
  retstr->trackDurationFont = trackDurationFont;
  retstr->readButtonFont = readButtonFont;
  retstr->accessoryFont = accessoryFont;
}

void destroy for AudioTrackFontBook(id *a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for AudioTrackFontBook(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  a1[4] = v6;
  swift_bridgeObjectRetain();
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

_QWORD *assignWithCopy for AudioTrackFontBook(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  v7 = (void *)a2[2];
  v8 = (void *)a1[2];
  a1[2] = v7;
  v9 = v7;

  v10 = (void *)a2[3];
  v11 = (void *)a1[3];
  a1[3] = v10;
  v12 = v10;

  v13 = (void *)a2[4];
  v14 = (void *)a1[4];
  a1[4] = v13;
  v15 = v13;

  return a1;
}

uint64_t assignWithTake for AudioTrackFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;

  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);

  return a1;
}

ValueMetadata *type metadata accessor for AudioTrackFontBook()
{
  return &type metadata for AudioTrackFontBook;
}

double SharedItemManager.replyContextMenuItem(for:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjectType;
  uint64_t v15;
  uint64_t v16;
  double result;

  v3 = v2;
  type metadata accessor for SharedItem();
  v6 = (void *)sub_1BB86C58C();
  v7 = objc_msgSend(v6, sel_fc_NewsArticleID);

  if (v7)
  {
    v8 = sub_1BB8729A0();
    v10 = v9;

    v11 = (void *)sub_1BAF50C08(v3, v8, v10, a1);
    v13 = v12;
    swift_bridgeObjectRelease();
    ObjectType = swift_getObjectType();
    v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 32))(ObjectType, v13);
    if (v15)
    {
      v16 = v15;
      *(_QWORD *)(a2 + 24) = sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
      *(_QWORD *)(a2 + 32) = sub_1BAF526C0();

      *(_QWORD *)a2 = v16;
      return result;
    }

  }
  *(_QWORD *)(a2 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

double SharedItemManager.hideContextMenuItem(for:)@<D0>(uint64_t a1@<X8>)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t ObjectType;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;
  uint64_t v11;
  uint64_t v12;
  double result;
  void *v14;

  type metadata accessor for SharedItem();
  v2 = (void *)sub_1BB86C58C();
  v3 = objc_msgSend(v2, sel_fc_NewsArticleID);

  if (v3)
  {
    sub_1BB8729A0();

    MEMORY[0x1E0C80A78](v4);
    sub_1BB86DD5C();
    sub_1BA4B07F0(0, &qword_1EF2B6BD0, (uint64_t (*)(uint64_t))sub_1BAF52734, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    swift_retain();
    sub_1BB86E758();
    swift_bridgeObjectRelease();
    swift_release();
    if (v14)
    {
      swift_getObjectType();
      v5 = swift_conformsToProtocol2();
      if (v5)
        v6 = v5;
      else
        v6 = 0;
      if (v5)
        v7 = v14;
      else
        v7 = 0;
      if (v7)
      {
        ObjectType = swift_getObjectType();
        v9 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 40);
        v10 = v14;
        v11 = v9(ObjectType, v6);
        if (v11)
        {
          v12 = v11;
          *(_QWORD *)(a1 + 24) = sub_1BA49A224(0, (unint64_t *)&qword_1EF2BCFF0);
          *(_QWORD *)(a1 + 32) = sub_1BAF526C0();

          *(_QWORD *)a1 = v12;
          return result;
        }

      }
      else
      {

      }
    }
  }
  *(_QWORD *)(a1 + 32) = 0;
  result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t SharedItem.articleID.getter()
{
  void *v0;
  id v1;
  uint64_t v2;

  type metadata accessor for SharedItem();
  v0 = (void *)sub_1BB86C58C();
  v1 = objc_msgSend(v0, sel_fc_NewsArticleID);

  if (!v1)
    return 0;
  v2 = sub_1BB8729A0();

  return v2;
}

id static SharedItemManager.shared.getter()
{
  if (qword_1ED3BBC78 != -1)
    swift_once();
  return (id)qword_1ED3BE098;
}

uint64_t SharedItemManager.modificationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t SharedItemManager.modificationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*SharedItemManager.modificationDate.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id SharedItemManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharedItemManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharedItemManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SharedItemManager.items.getter()
{
  uint64_t v1;

  sub_1BB86DD5C();
  sub_1BA81DB7C(0);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v1;
}

uint64_t SharedItemManager.itemArticleIDs.getter()
{
  uint64_t v1;

  sub_1BB86DD5C();
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v1;
}

uint64_t SharedItemManager.item(for:)()
{
  sub_1BB86DD5C();
  sub_1BA6D4F28(0);
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

void *SharedItemManager.createAttributionView(for:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v2 = v1;
  v4 = v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BA4C010C(v4, (uint64_t)v10);
  v5 = v11;
  v6 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v5, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  v8 = *MEMORY[0x1E0DC4918];
  objc_msgSend(v7, sel_setMinimumContentSizeCategory_, *MEMORY[0x1E0DC4918]);
  objc_msgSend(v7, sel_setMaximumContentSizeCategory_, v8);
  v10[0] = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v7;
}

void sub_1BAF50680(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  unint64_t v16;
  char v17;
  _QWORD *v18;
  id v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v24;

  type metadata accessor for SharedItem();
  v7 = (void *)sub_1BB86C58C();
  v8 = objc_msgSend(v7, sel_fc_NewsArticleID);

  if (!v8)
    return;
  v9 = sub_1BB8729A0();
  v11 = v10;

  v12 = (uint64_t *)(a4 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_beginAccess();
  v13 = *v12;
  v14 = *(_QWORD *)(*v12 + 16);
  v15 = a2;
  if (!v14)
    goto LABEL_6;
  swift_bridgeObjectRetain();
  v16 = sub_1BA6E35A8(v9, v11);
  if ((v17 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_6:
    swift_endAccess();
    v18 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    goto LABEL_7;
  }
  v18 = *(_QWORD **)(*(_QWORD *)(v13 + 56) + 8 * v16);
  swift_endAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_7:
  v19 = v15;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v18 = sub_1BB39208C(0, v18[2] + 1, 1, v18);
  v21 = v18[2];
  v20 = v18[3];
  if (v21 >= v20 >> 1)
    v18 = sub_1BB39208C((_QWORD *)(v20 > 1), v21 + 1, 1, v18);
  v18[2] = v21 + 1;
  v22 = &v18[4 * v21];
  v22[4] = v19;
  v22[5] = a3;
  v22[6] = 0;
  v22[7] = 0;
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = *v12;
  *v12 = 0x8000000000000000;
  sub_1BB4BFEE0((uint64_t)v18, v9, v11, isUniquelyReferenced_nonNull_native);
  *v12 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

}

uint64_t SharedItemManager.register(for:attributionView:hideHandler:)()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

void sub_1BAF50908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  _QWORD *v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  id v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  type metadata accessor for SharedItem();
  v10 = (void *)sub_1BB86C58C();
  v11 = objc_msgSend(v10, sel_fc_NewsArticleID);

  if (!v11)
    return;
  v12 = sub_1BB8729A0();
  v14 = v13;

  v15 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_beginAccess();
  v16 = *v15;
  if (*(_QWORD *)(*v15 + 16))
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BA6E35A8(v12, v14);
    if ((v18 & 1) != 0)
    {
      v19 = *(_QWORD *)(*(_QWORD *)(v16 + 56) + 8 * v17);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  v19 = MEMORY[0x1E0DEE9D8];
LABEL_7:
  v32 = v19;
  v20 = *(_QWORD *)(v19 + 16);
  if (v20)
  {
    v21 = 0;
    v22 = (_QWORD *)(v19 + 32);
    while (*v22 != a3)
    {
      ++v21;
      v22 += 4;
      if (v20 == v21)
        goto LABEL_11;
    }
    v23 = (void *)sub_1BAA67AB8(v21);
    v30 = v25;
    if (*(_QWORD *)(v19 + 16) < v21)
    {
      __break(1u);
    }
    else
    {
      v26 = v24;
      v27 = v23;
      sub_1BA4BEB58(a5);
      v28 = v27;
      sub_1BA4BEB58(a5);
      sub_1BAA68494(v21, v21, (uint64_t)v28, v26, a5, a6);
      swift_beginAccess();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v31 = *v15;
      *v15 = 0x8000000000000000;
      sub_1BB4BFEE0(v32, v12, v14, isUniquelyReferenced_nonNull_native);
      *v15 = v31;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();

      sub_1BA49EBE0(a5);
      sub_1BA49EBE0(v30);
    }
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t SharedItemManager.report(feedback:for:)(char *a1, uint64_t a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BA4C010C(v5, (uint64_t)v10);
  v6 = v11;
  v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v9 = v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v9, a2, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_1BAF50C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v8 = type metadata accessor for SharedItem();
  MEMORY[0x1E0C80A78](v8);
  v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  v17 = a1;
  v18 = a2;
  v19 = a3;
  sub_1BB86DD5C();
  sub_1BA4B07F0(0, &qword_1EF2B6BD0, (uint64_t (*)(uint64_t))sub_1BAF52734, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  v11 = v20;
  sub_1BAF52AB4(a4, (uint64_t)v10);
  if (v11)
  {
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  }
  else
  {
    v12 = a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
    swift_beginAccess();
    sub_1BA4C010C(v12, (uint64_t)&v20);
    v13 = v21;
    v14 = v22;
    __swift_project_boxed_opaque_existential_1(&v20, v21);
    v11 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v14 + 48))(v10, v13, v14);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
  }
  return v11;
}

uint64_t sub_1BAF50DA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  id v12;
  uint64_t result;
  __int128 v14;

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_beginAccess();
  v8 = *v7;
  if (*(_QWORD *)(v8 + 16))
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BA6E35A8(a2, a3);
    if ((v10 & 1) != 0)
    {
      v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v11 + 16))
      {
        v14 = *(_OWORD *)(v11 + 32);
        v12 = (id)v14;
        result = swift_bridgeObjectRelease();
        *(_OWORD *)a4 = v14;
        return result;
      }
    }
    else
    {
      swift_endAccess();
    }
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_endAccess();
  }
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  return result;
}

uint64_t SharedItemManager.add(observer:)()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t SharedItemManager.remove(observer:)()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BAF50F98(uint64_t a1)
{
  unint64_t *v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = (unint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  swift_beginAccess();
  v2 = *v1;
  if (*v1 >> 62)
    goto LABEL_24;
  v3 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    if (*v1 >> 62)
      goto LABEL_28;
    v4 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
LABEL_17:
      if (*v1 >> 62)
      {
        swift_bridgeObjectRetain();
        v12 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v12 >= v4)
        {
LABEL_19:
          sub_1BAA69148(v4, v12);
          return swift_endAccess();
        }
      }
      else
      {
        v12 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v12 >= v4)
          goto LABEL_19;
      }
      __break(1u);
LABEL_28:
      swift_bridgeObjectRetain();
      v4 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
  }
LABEL_3:
  v4 = 0;
  while (1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      v5 = MEMORY[0x1BCCE4630](v4, v2);
    }
    else
    {
      v5 = *(_QWORD *)(v2 + 8 * v4 + 32);
      swift_retain();
    }
    v6 = MEMORY[0x1BCCE5D40](v5 + 16);
    if (v6)
    {
      v7 = v6;
      swift_unknownObjectRelease();
      if (v7 == v5)
        break;
    }
    v8 = MEMORY[0x1BCCE5D40](v5 + 16);
    swift_release();
    swift_unknownObjectRelease();
    if (!v8)
    {
      result = swift_bridgeObjectRelease();
      v11 = v4 + 1;
      if (!__OFADD__(v4, 1))
        goto LABEL_15;
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
LABEL_24:
      swift_bridgeObjectRetain();
      v3 = sub_1BB873F30();
      if (!v3)
        goto LABEL_12;
      goto LABEL_3;
    }
    v9 = v4 + 1;
    if (__OFADD__(v4, 1))
      goto LABEL_23;
    ++v4;
    if (v9 == v3)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  result = swift_release();
  v11 = v4 + 1;
  if (__OFADD__(v4, 1))
    goto LABEL_22;
LABEL_15:
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v13 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v11 == v13)
      goto LABEL_17;
  }
  else if (v11 == *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_17;
  }
  v14 = v4 + 5;
  while (1)
  {
    v15 = v14 - 4;
    v16 = *v1;
    if ((*v1 & 0xC000000000000001) != 0)
    {
      v17 = MEMORY[0x1BCCE4630](v14 - 4);
      goto LABEL_35;
    }
    if ((v15 & 0x8000000000000000) != 0)
      break;
    if (v15 >= *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      goto LABEL_71;
    v17 = *(_QWORD *)(v16 + 8 * v14);
    swift_retain();
LABEL_35:
    v18 = MEMORY[0x1BCCE5D40](v17 + 16);
    if (!v18 || (v19 = v18, swift_unknownObjectRelease(), v19 != v17))
    {
      v20 = MEMORY[0x1BCCE5D40](v17 + 16);
      swift_release();
      result = swift_unknownObjectRelease();
      if (!v20)
        goto LABEL_58;
      if (v15 == v4)
        goto LABEL_57;
      v21 = *v1;
      if ((*v1 & 0xC000000000000001) != 0)
      {
        result = MEMORY[0x1BCCE4630](v4, *v1);
        v22 = result;
        v21 = *v1;
        if ((*v1 & 0xC000000000000001) == 0)
          goto LABEL_43;
      }
      else
      {
        if (v4 < 0)
          goto LABEL_74;
        if ((unint64_t)v4 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_75;
        v22 = *(_QWORD *)(v21 + 8 * v4 + 32);
        result = swift_retain();
        if ((v21 & 0xC000000000000001) == 0)
        {
LABEL_43:
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_76;
          if (v15 >= *(_QWORD *)((v21 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_77;
          v23 = *(_QWORD *)(v21 + 8 * v14);
          swift_retain();
LABEL_46:
          isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *v1 = v21;
          if (!isUniquelyReferenced_nonNull_bridgeObject
            || (v21 & 0x8000000000000000) != 0
            || (v21 & 0x4000000000000000) != 0)
          {
            sub_1BAA67DA8(v21);
          }
          *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFF8) + 8 * v4 + 0x20) = v23;
          swift_release();
          sub_1BB872DCC();
          v25 = *v1;
          result = swift_isUniquelyReferenced_nonNull_bridgeObject();
          *v1 = v25;
          if (!(_DWORD)result || (v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
            sub_1BAA67DA8(v25);
          if ((v15 & 0x8000000000000000) != 0)
            goto LABEL_78;
          if (v15 >= *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_79;
          *(_QWORD *)((v25 & 0xFFFFFFFFFFFFFF8) + 8 * v14) = v22;
          swift_release();
          result = sub_1BB872DCC();
LABEL_57:
          if (__OFADD__(v4++, 1))
            goto LABEL_73;
LABEL_58:
          v27 = v14 - 3;
          if (__OFADD__(v15, 1))
            goto LABEL_72;
          goto LABEL_59;
        }
      }
      v23 = MEMORY[0x1BCCE4630](v14 - 4, v21);
      v21 = *v1;
      goto LABEL_46;
    }
    result = swift_release();
    v27 = v14 - 3;
    if (__OFADD__(v15, 1))
      goto LABEL_72;
LABEL_59:
    if (*v1 >> 62)
    {
      swift_bridgeObjectRetain();
      v28 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v28 = *(_QWORD *)((*v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    ++v14;
    if (v27 == v28)
      goto LABEL_17;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
  return result;
}

uint64_t SharedItemManager.countOfUnreadItems(since:readArticleIDs:)()
{
  uint64_t v1;

  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v1;
}

uint64_t sub_1BAF514BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  _QWORD v12[5];

  v7 = (uint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  swift_beginAccess();
  v8 = *v7;
  v12[2] = a2;
  v12[3] = a3;
  swift_bridgeObjectRetain();
  v9 = sub_1BAF52F2C((uint64_t)sub_1BAF53568, (uint64_t)v12, v8);
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(v9 + 16);
  result = swift_release();
  *a4 = v10;
  return result;
}

uint64_t sub_1BAF5155C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t *v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;

  v29 = a4;
  v32 = a3;
  v31 = sub_1BB86C8B0();
  v6 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF53584();
  v10 = v9;
  MEMORY[0x1E0C80A78](v9);
  v30 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (uint64_t *)((char *)&v29 - v13);
  MEMORY[0x1E0C80A78](v15);
  v17 = (uint64_t *)((char *)&v29 - v16);
  v19 = *a1;
  v18 = a1[1];
  v21 = (char *)&v29 + *(int *)(v20 + 48) - v16;
  *v17 = v19;
  v17[1] = v18;
  sub_1BAF52AB4(a2, (uint64_t)v21);
  v22 = (uint64_t)v14 + *(int *)(v10 + 48);
  *v14 = v19;
  v14[1] = v18;
  sub_1BAF52AB4((uint64_t)v21, v22);
  v23 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v22, v31);
  swift_bridgeObjectRetain();
  sub_1BA4A2E80(v22, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  LOBYTE(v22) = sub_1BB86C814();
  v24 = *(void (**)(char *, uint64_t))(v6 + 8);
  v25 = v30;
  v24(v8, v23);
  v26 = (uint64_t)v25 + *(int *)(v10 + 48);
  *v25 = v19;
  v25[1] = v18;
  sub_1BAF52AB4((uint64_t)v21, v26);
  swift_bridgeObjectRetain();
  if ((v22 & 1) != 0)
    v27 = sub_1BA761FE4(v19, v18, v29) ^ 1;
  else
    v27 = 0;
  sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BAF53584);
  sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BAF53584);
  return v27 & 1;
}

uint64_t _s8NewsFeed17SharedItemManagerC9groupNameSSvg_0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = (_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v2);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, double))(v5 + 16))((char *)&v11 - v7, v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  return v9;
}

uint64_t sub_1BAF5181C()
{
  uint64_t v1;

  sub_1BB86DD5C();
  sub_1BA81DB7C(0);
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v1;
}

uint64_t sub_1BAF518B0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  v4 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

void *sub_1BAF51918(uint64_t a1)
{
  return SharedItemManager.createAttributionView(for:)(a1);
}

uint64_t sub_1BAF51938()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BAF519C8(char *a1, uint64_t a2)
{
  _QWORD *v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v4 = *a1;
  v5 = *v2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter;
  swift_beginAccess();
  sub_1BA4C010C(v5, (uint64_t)v10);
  v6 = v11;
  v7 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  v9 = v4;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(&v9, a2, v6, v7);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

double sub_1BAF51A68@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return SharedItemManager.replyContextMenuItem(for:)(a1, a2);
}

double sub_1BAF51A88@<D0>(uint64_t a1@<X8>)
{
  return SharedItemManager.hideContextMenuItem(for:)(a1);
}

uint64_t sub_1BAF51AA8()
{
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  return swift_release();
}

uint64_t sub_1BAF51B2C()
{
  uint64_t v1;

  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  return v1;
}

uint64_t sub_1BAF51BC0()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v1 = (_QWORD *)(*v0 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sharedItemCenter);
  swift_beginAccess();
  v2 = v1[3];
  v3 = v1[4];
  v4 = __swift_project_boxed_opaque_existential_1(v1, v2);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  (*(void (**)(char *, double))(v5 + 16))((char *)&v11 - v7, v6);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 64))(v2, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v2);
  return v9;
}

uint64_t SharedItemManager.sharedItemCenterDidAddItems(_:)()
{
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BB508, (uint64_t (*)(uint64_t))sub_1BA81DB7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86EA58();
  return swift_release();
}

void SharedItemManager.sharedItemCenter(_:didRemove:)(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(__int128 *, _QWORD *, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  void *v31;
  __int128 v32;
  uint64_t ObjectType;
  uint64_t v34;
  __int128 aBlock;
  uint64_t (*v36)(uint64_t);
  void *v37;
  void (*v38)();
  uint64_t v39;
  uint64_t v40;

  v3 = v2;
  ObjectType = swift_getObjectType();
  v34 = type metadata accessor for SharedItem();
  MEMORY[0x1E0C80A78](v34);
  v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a2 + 16);
  if (v9)
  {
    v10 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    v11 = *(_QWORD *)(v6 + 72);
    *(_QWORD *)&v32 = a2;
    swift_bridgeObjectRetain();
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      sub_1BAF52AB4(v10, (uint64_t)v8);
      v13 = (void *)sub_1BB86C58C();
      v14 = objc_msgSend(v13, sel_fc_NewsArticleID);

      if (v14)
      {
        v15 = sub_1BB8729A0();
        v17 = v16;

        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v12 = sub_1BA6EA0D0(0, v12[2] + 1, 1, v12);
        v19 = v12[2];
        v18 = v12[3];
        if (v19 >= v18 >> 1)
          v12 = sub_1BA6EA0D0((_QWORD *)(v18 > 1), v19 + 1, 1, v12);
        v12[2] = v19 + 1;
        v20 = &v12[2 * v19];
        v20[4] = v15;
        v20[5] = v17;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
      }
      v10 += v11;
      --v9;
    }
    while (v9);
    v5 = swift_bridgeObjectRelease();
  }
  else
  {
    v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v40 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock];
  MEMORY[0x1E0C80A78](v5);
  *((_QWORD *)&v32 - 2) = v12;
  *((_QWORD *)&v32 - 1) = v3;
  sub_1BB86DD5C();
  sub_1BAF52B00();
  swift_retain();
  sub_1BB86E758();
  swift_release();
  v32 = aBlock;
  v21 = aBlock;
  if (!((unint64_t)aBlock >> 62))
  {
    v22 = *(_QWORD *)((aBlock & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    v34 = v22;
    if (v22)
      goto LABEL_15;
LABEL_25:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = v32;
    v38 = sub_1BAF52BC4;
    v39 = v30;
    *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
    *((_QWORD *)&aBlock + 1) = 1107296256;
    v36 = sub_1BA4F1DD8;
    v37 = &block_descriptor_30;
    v31 = _Block_copy(&aBlock);
    swift_release();
    FCPerformBlockOnMainThread();
    _Block_release(v31);
    return;
  }
  swift_bridgeObjectRetain();
  v34 = sub_1BB873F30();
  if (!v34)
    goto LABEL_25;
LABEL_15:
  if (v34 >= 1)
  {
    v23 = 0;
    do
    {
      if ((v21 & 0xC000000000000001) != 0)
      {
        v25 = MEMORY[0x1BCCE4630](v23, v21);
      }
      else
      {
        v25 = *(_QWORD *)(v21 + 8 * v23 + 32);
        swift_retain();
      }
      v37 = (void *)ObjectType;
      v38 = (void (*)())&protocol witness table for SharedItemManager;
      *(_QWORD *)&aBlock = v3;
      if (MEMORY[0x1BCCE5D40](v25 + 16))
      {
        v26 = *(_QWORD *)(v25 + 24);
        v27 = swift_getObjectType();
        v28 = *(void (**)(__int128 *, _QWORD *, uint64_t, uint64_t))(v26 + 16);
        v29 = v3;
        v28(&aBlock, v12, v27, v26);
        swift_unknownObjectRelease();
      }
      else
      {
        v24 = v3;
      }
      ++v23;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&aBlock);
      swift_release();

    }
    while (v34 != v23);
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_1BAF520E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  char v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;

  sub_1BA6D4F28(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v62 = MEMORY[0x1E0DEE9D8];
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
  {
    v48 = MEMORY[0x1E0DEE9D8];
    goto LABEL_22;
  }
  v53 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = v10;
  v55 = v9;
  v56 = a3;
  v14 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_viewContextsByArticleID);
  swift_bridgeObjectRetain();
  v57 = a1;
  v15 = (uint64_t *)(a1 + 40);
  v16 = MEMORY[0x1E0DEE9D8];
  v61 = v13;
  do
  {
    v19 = *(v15 - 1);
    v18 = *v15;
    swift_beginAccess();
    v20 = *v14;
    v21 = *(_QWORD *)(*v14 + 16);
    swift_bridgeObjectRetain();
    if (!v21)
      goto LABEL_4;
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(v19, v18);
    if ((v23 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_4:
      swift_endAccess();
      v17 = v16;
      goto LABEL_5;
    }
    v17 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
    swift_endAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_5:
    v15 += 2;
    swift_bridgeObjectRelease();
    sub_1BB3861E0(v17);
    --v13;
  }
  while (v13);
  v24 = v57;
  swift_bridgeObjectRelease();
  v52 = v62;
  v25 = (uint64_t *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_itemsByArticleID);
  v59 = OBJC_IVAR____TtC8NewsFeed17SharedItemManager_sortedArticleIDs;
  swift_bridgeObjectRetain();
  v26 = (uint64_t *)(v24 + 40);
  v27 = v61;
  v58 = a2;
  v60 = v14;
  do
  {
    v29 = *(v26 - 1);
    v28 = *v26;
    swift_beginAccess();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v30 = sub_1BA6E35A8(v29, v28);
    v32 = v31;
    swift_bridgeObjectRelease();
    if ((v32 & 1) != 0)
    {
      v61 = v27;
      v33 = (uint64_t)v8;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v35 = *v25;
      v62 = *v25;
      *v25 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BB4C70EC();
        v35 = v62;
      }
      swift_bridgeObjectRelease();
      v36 = *(_QWORD *)(v35 + 56);
      v37 = type metadata accessor for SharedItem();
      v38 = *(_QWORD *)(v37 - 8);
      sub_1BAF52BCC(v36 + *(_QWORD *)(v38 + 72) * v30, v33);
      sub_1BAF0EA1C(v30, v35);
      *v25 = v35;
      swift_bridgeObjectRelease();
      v39 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v38 + 56);
      v8 = (char *)v33;
      v39(v33, 0, 1, v37);
      a2 = v58;
      v27 = v61;
    }
    else
    {
      v40 = type metadata accessor for SharedItem();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v8, 1, 1, v40);
    }
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
    swift_endAccess();
    v41 = *(id *)(a2 + v59);
    v42 = sub_1BB872970();
    objc_msgSend(v41, sel_removeObject_, v42);

    v43 = v60;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = sub_1BA6E35A8(v29, v28);
    LOBYTE(v42) = v45;
    swift_bridgeObjectRelease();
    if ((v42 & 1) != 0)
    {
      v46 = swift_isUniquelyReferenced_nonNull_native();
      v47 = *v43;
      v62 = *v43;
      *v43 = 0x8000000000000000;
      if ((v46 & 1) == 0)
      {
        sub_1BB4C73C0();
        v47 = v62;
      }
      swift_bridgeObjectRelease();
      sub_1BA81C280(v44, v47);
      *v43 = v47;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v26 += 2;
    swift_endAccess();
    swift_bridgeObjectRelease();
    --v27;
  }
  while (v27);
  swift_bridgeObjectRelease();
  v9 = v55;
  a3 = v56;
  v12 = v53;
  v10 = v54;
  v48 = v52;
LABEL_22:
  sub_1BB86C8A4();
  v49 = a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_modificationDate;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v49, v12, v9);
  swift_endAccess();
  v50 = (_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  swift_beginAccess();
  *a3 = *v50;
  a3[1] = v48;
  return swift_bridgeObjectRetain();
}

void sub_1BAF525B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  void (*v5)(uint64_t);
  id v6;
  uint64_t v7;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = a2 + 56;
    do
    {
      v5 = *(void (**)(uint64_t))(v4 - 8);
      if (v5)
      {
        v6 = *(id *)(v4 - 24);
        v7 = sub_1BA4BEB58((uint64_t)v5);
        v5(v7);

        sub_1BA49EBE0((uint64_t)v5);
      }
      v4 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAF52658()
{
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3BB508, (uint64_t (*)(uint64_t))sub_1BA81DB7C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  sub_1BB86EA58();
  return swift_release();
}

unint64_t sub_1BAF526C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6BC0;
  if (!qword_1EF2B6BC0)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&qword_1EF2BCFF0);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for UIAction, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6BC0);
  }
  return result;
}

uint64_t sub_1BAF52718@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1BAF50DA8(v1[2], v1[3], v1[4], a1);
}

unint64_t sub_1BAF52734()
{
  unint64_t result;

  result = qword_1EF2B6BD8;
  if (!qword_1EF2B6BD8)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B6BD8);
  }
  return result;
}

void sub_1BAF52784()
{
  uint64_t v0;

  sub_1BAF50680(*(_QWORD *)(v0 + 16), *(void **)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BAF52794()
{
  uint64_t v0;

  return sub_1BAF50F98(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1BAF5279C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1BAF514BC(v1[2], v1[3], v1[4], a1);
}

uint64_t static ContextMenuItem.replyToSharer(headline:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BAF527D0(a1, (uint64_t)sub_1BAF535F8, (void (*)(char *))SharedItemManager.replyContextMenuItem(for:), a2);
}

uint64_t static ContextMenuItem.hideShare(headline:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_1BAF527D0(a1, (uint64_t)sub_1BAF535F8, (void (*)(char *))SharedItemManager.hideContextMenuItem(for:), a2);
}

uint64_t sub_1BAF527D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *)@<X2>, _OWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _OWORD *v19;
  uint64_t v20;
  void (*v21)(char *);
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  uint64_t v25;

  v21 = a3;
  v23 = a2;
  v24 = a4;
  sub_1BA6D4F28(0);
  v22 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SharedItem();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BBC78 != -1)
    swift_once();
  v12 = qword_1ED3BE098;
  v13 = objc_msgSend(a1, sel_articleID);
  v14 = sub_1BB8729A0();
  v16 = v15;

  v25 = *(_QWORD *)(v12 + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_lock);
  MEMORY[0x1E0C80A78](v17);
  *(&v20 - 4) = v12;
  *(&v20 - 3) = v14;
  *(&v20 - 2) = v16;
  sub_1BB86DD5C();
  swift_retain();
  sub_1BB86E758();
  swift_bridgeObjectRelease();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    result = sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BA6D4F28);
    v19 = v24;
    *v24 = 0u;
    v19[1] = 0u;
    *((_QWORD *)v19 + 4) = 0;
  }
  else
  {
    sub_1BAF52BCC((uint64_t)v7, (uint64_t)v11);
    v21(v11);
    return sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
  }
  return result;
}

void *UIAction.build(commandCenter:source:)()
{
  void *v0;
  id v1;

  v1 = v0;
  return v0;
}

id sub_1BAF529F4()
{
  id *v0;
  id v1;
  id v2;

  v1 = *v0;
  v2 = *v0;
  return v1;
}

uint64_t sub_1BAF52A18()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF52A3C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = __swift_project_boxed_opaque_existential_1(a1, v2);
  return sub_1BAF53388((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1BAF52A74(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v4 = a1[3];
  v5 = a1[4];
  v6 = __swift_project_boxed_opaque_existential_1(a1, v4);
  return sub_1BAF532EC((uint64_t)v6, a2, v2, v4, v5);
}

uint64_t sub_1BAF52AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF52AF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  return sub_1BAF520E4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

void sub_1BAF52B00()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3ABC98)
  {
    sub_1BA4B07F0(255, &qword_1ED3ABCA0, (uint64_t (*)(uint64_t))type metadata accessor for WeakSharedItemManagerObserver, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA4C576C(255, &qword_1ED3ABC70);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3ABC98);
  }
}

uint64_t sub_1BAF52B98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAF52BC4()
{
  uint64_t v0;

  sub_1BAF525B0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BAF52BCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t dispatch thunk of SharedItemManagerObserver.sharedItemManagerDidAddItems(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SharedItemManagerObserver.sharedItemManager(_:didHideItemsFor:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SharedItemManagerType.items.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of SharedItemManagerType.item(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of SharedItemManagerType.modificationDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of SharedItemManagerType.createAttributionView(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of SharedItemManagerType.register(for:attributionView:hideHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t dispatch thunk of SharedItemManagerType.report(feedback:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of SharedItemManagerType.replyContextMenuItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of SharedItemManagerType.hideContextMenuItem(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of SharedItemManagerType.remove(observer:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of SharedItemManagerType.countOfUnreadItems(since:readArticleIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of SharedItemManagerType.groupName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of SharedItemManagerType.feedName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t sub_1BAF52C80()
{
  return type metadata accessor for SharedItemManager();
}

uint64_t sub_1BAF52C88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SharedItemManager()
{
  return swift_lookUpClassMethod();
}

void destroy for SharedItemManager.ShareAttributionViewContext(uint64_t a1)
{

  if (*(_QWORD *)(a1 + 16))
    swift_release();
}

uint64_t initializeWithCopy for SharedItemManager.ShareAttributionViewContext(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  _OWORD *v5;
  uint64_t v6;
  _OWORD *v7;
  id v8;
  uint64_t v9;

  v4 = *a2;
  *(_OWORD *)a1 = *a2;
  v5 = (_OWORD *)(a1 + 16);
  v7 = a2 + 1;
  v6 = *((_QWORD *)a2 + 2);
  v8 = (id)v4;
  if (v6)
  {
    v9 = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v9;
    swift_retain();
  }
  else
  {
    *v5 = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for SharedItemManager.ShareAttributionViewContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(void **)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v7 = v4;

  v8 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v5;
  v9 = *(_QWORD *)(a2 + 16);
  if (!v8)
  {
    if (v9)
    {
      v11 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v11;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_7;
  }
  v10 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SharedItemManager.ShareAttributionViewContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = v4;
      *(_QWORD *)(a1 + 24) = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SharedItemManager.ShareAttributionViewContext()
{
  return &type metadata for SharedItemManager.ShareAttributionViewContext;
}

uint64_t sub_1BAF52F2C(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v6)(_QWORD *, char *);
  char v7;
  unint64_t v8;
  size_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD v14[2];

  v6 = (uint64_t (*)(_QWORD *, char *))isStackAllocationSafe;
  v14[1] = *MEMORY[0x1E0C80C00];
  v7 = *(_BYTE *)(a3 + 32);
  v8 = (unint64_t)((1 << v7) + 63) >> 6;
  v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1E0C80A78](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    sub_1BAF5309C((_QWORD *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a3, v6);
    if (v3)
      swift_willThrow();
    else
      return v10;
  }
  else
  {
    v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    sub_1BAF5309C((unint64_t *)v11, v8, a3, v6);
    a2 = v12;
    MEMORY[0x1BCCE5C38](v11, -1, -1);
  }
  return a2;
}

void sub_1BAF5309C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD *, char *))
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  BOOL v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  _QWORD v30[2];
  uint64_t (*v31)(_QWORD *, char *);

  v31 = a4;
  v25 = a2;
  v26 = a1;
  v6 = type metadata accessor for SharedItem();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = *(_QWORD *)(a3 + 64);
  v27 = 0;
  v28 = a3 + 64;
  v12 = 1 << *(_BYTE *)(a3 + 32);
  v13 = -1;
  if (v12 < 64)
    v13 = ~(-1 << v12);
  v14 = v13 & v11;
  v29 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    v16 = v15 | (v10 << 6);
LABEL_17:
    v20 = *(_QWORD *)(a3 + 56);
    v21 = (_QWORD *)(*(_QWORD *)(a3 + 48) + 16 * v16);
    v22 = v21[1];
    v30[0] = *v21;
    v30[1] = v22;
    sub_1BAF52AB4(v20 + *(_QWORD *)(v7 + 72) * v16, (uint64_t)v9);
    swift_bridgeObjectRetain();
    v23 = v31(v30, v9);
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
    swift_bridgeObjectRelease();
    if (v4)
      return;
    if ((v23 & 1) != 0)
    {
      *(unint64_t *)((char *)v26 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      v17 = __OFADD__(v27++, 1);
      if (v17)
        goto LABEL_30;
    }
  }
  v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v29)
    goto LABEL_27;
  v18 = *(_QWORD *)(v28 + 8 * v10);
  if (v18)
  {
LABEL_16:
    v14 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  v19 = v10 + 1;
  if (v10 + 1 >= v29)
    goto LABEL_27;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 2;
  if (v10 + 2 >= v29)
    goto LABEL_27;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
    goto LABEL_15;
  v19 = v10 + 3;
  if (v10 + 3 >= v29)
  {
LABEL_27:
    sub_1BB436690(v26, v25, v27, (_QWORD *)a3);
    return;
  }
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
  {
LABEL_15:
    v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v29)
      goto LABEL_27;
    v18 = *(_QWORD *)(v28 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_16;
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_1BAF532EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  uint64_t ObjectType;
  uint64_t v13[5];

  v13[3] = a4;
  v13[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 16))(boxed_opaque_existential_0, a1, a4);
  if (MEMORY[0x1BCCE5D40](a3 + 16))
  {
    v10 = *(_QWORD *)(a3 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v10 + 16))(v13, a2, ObjectType, v10);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1BAF53388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v11[5];

  v11[3] = a3;
  v11[4] = a4;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))(boxed_opaque_existential_0, a1, a3);
  if (MEMORY[0x1BCCE5D40](a2 + 16))
  {
    v8 = *(_QWORD *)(a2 + 24);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 8))(v11, ObjectType, v8);
    swift_unknownObjectRelease();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

void sub_1BAF53418()
{
  uint64_t *v0;

  sub_1BAF50908(v0[2], v0[3], v0[4], v0[5], v0[6], v0[7]);
}

uint64_t sub_1BAF53428()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAF5344C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BAF53470(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 16))(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1BAF534A4()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BAF534D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC8NewsFeed17SharedItemManager_observers);
  swift_beginAccess();
  *a1 = *v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF53524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SharedItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF53568(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAF5155C(a1, a2, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24)) & 1;
}

void sub_1BAF53584()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B6C08)
  {
    type metadata accessor for SharedItem();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B6C08);
  }
}

uint64_t FeedPluginManager.delegate.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED3A4AB0;
  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v1);
}

void (*FeedPluginManager.delegate.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v4 = qword_1ED3A4AB0;
  v3[5] = v1;
  v3[6] = v4;
  v5 = v1 + v4;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  v7 = *(_QWORD *)(v5 + 8);
  v3[3] = v6;
  v3[4] = v7;
  return sub_1BA8FC8E4;
}

uint64_t FeedPluginManager.pluginContainerController.getter()
{
  uint64_t (*v0)(void);

  sub_1BB86F814();
  v0 = (uint64_t (*)(void))sub_1BB86F820();
  return v0();
}

void (*FeedPluginManager.pluginContainerController.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD *);

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  sub_1BB86F814();
  v4 = (uint64_t (*)(_QWORD *))sub_1BB86F820();
  v3[5] = v4(v3);
  return sub_1BAF53768;
}

void sub_1BAF53768(_QWORD *a1, char a2)
{
  void *v3;

  v3 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
    sub_1BA49E678();
  free(v3);
}

uint64_t FeedPluginManager.__allocating_init(feed:feedDescriptor:formatPluginFactory:)(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  char v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  char v15;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v12 = *(_QWORD *)a1;
  v13 = *(_OWORD *)(a1 + 8);
  v14 = v7;
  v15 = v8;
  FCFeedDescriptor.feedKind.getter(&v11);
  swift_allocObject();
  v9 = sub_1BA4CC9AC(&v12, &v11, a2, a3, a4);

  swift_unknownObjectRelease();
  return v9;
}

uint64_t sub_1BAF53854(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)a1 >> 62;
  if (!(_DWORD)v1)
  {
    sub_1BA65E330();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BB8856E0;
    swift_retain();
    v3 = sub_1BAF53BF4();
    goto LABEL_5;
  }
  if ((_DWORD)v1 == 1)
  {
    sub_1BA65E330();
    v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1BB8856E0;
    swift_retain();
    v3 = sub_1BAF539B8();
LABEL_5:
    *(_QWORD *)(v2 + 32) = v3;
    sub_1BB872DCC();
    v4 = v2;
    swift_release();
    return v4;
  }
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v4 = MEMORY[0x1E0DEE9D8];
  v12 = MEMORY[0x1E0DEE9D8];
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    v7 = 0;
    do
    {
      v8 = v7 + 1;
      v9 = *(_QWORD *)(v5 + 8 * v7 + 32);
      swift_retain();
      v13 = v9;
      v10 = sub_1BAF53854(&v13);
      swift_release();
      sub_1BB386330(v10);
      v7 = v8;
    }
    while (v6 != v8);
    swift_bridgeObjectRelease();
    return v12;
  }
  return v4;
}

uint64_t sub_1BAF539B8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedPluginManager<A>, *v0);
  swift_unknownObjectRetain();
  sub_1BB871410();
  sub_1BB86F7F0();
  v1 = *(_QWORD *)((char *)v0 + qword_1ED3A4AA8 + 16);
  sub_1BA7AA598();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  v3 = sub_1BB8713EC();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  v6 = sub_1BB87330C();
  sub_1BB86EF44("Created plugin, identifier=%{public}@", 37, 2, &dword_1BA493000, v1, v6, v2);
  swift_bridgeObjectRelease();
  sub_1BA865D48(0);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BAF53BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + qword_1ED3A4AA8 + 16);
  sub_1BA7AA598();
  v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1BB87CE70;
  v3 = sub_1BB8713EC();
  v5 = v4;
  *(_QWORD *)(v2 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v2 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v2 + 32) = v3;
  *(_QWORD *)(v2 + 40) = v5;
  v6 = sub_1BB87330C();
  sub_1BB86EF44("Reusing plugin, identifier=%{public}@", 37, 2, &dword_1BA493000, v1, v6, v2);
  swift_bridgeObjectRelease();
  sub_1BA865D48(0);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BAF53CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BA573ED8;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  sub_1BB8713F8();
  return swift_release();
}

uint64_t sub_1BAF53D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BAAAC18C;
  *(_QWORD *)(v5 + 24) = v4;
  swift_retain();
  sub_1BB87141C();
  return swift_release();
}

uint64_t sub_1BAF53DE8()
{
  swift_release();
  return swift_deallocClassInstance();
}

void FeedPluginManager.__allocating_init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FeedPluginManager.init()()
{
  sub_1BAF5430C();
}

void FeedPluginManager.__allocating_init(enableReuseLayoutSuppression:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FeedPluginManager.init(enableReuseLayoutSuppression:)()
{
  sub_1BAF54338();
}

uint64_t sub_1BAF53E9C()
{
  uint64_t v0;
  void *v1;

  sub_1BA8FD860(v0 + qword_1ED3A4AB0);
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + qword_1ED3A4AA8 + 16);

  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t FeedPluginManager.deinit()
{
  uint64_t v0;
  void *v1;

  v0 = sub_1BB86F82C();
  sub_1BA8FD860(v0 + qword_1ED3A4AB0);
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + qword_1ED3A4AA8 + 16);

  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FeedPluginManager.__deallocating_deinit()
{
  FeedPluginManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t FeedPluginManager.plugin(_:didResizePluginModel:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + qword_1ED3A4AB0;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v1);
  if (result)
  {
    swift_getObjectType();
    sub_1BB86F988();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedPluginManager.select(_:context:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;

  v5 = v2 + qword_1ED3A4AB0;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v5);
  if (result)
  {
    v7 = *(_QWORD *)(v5 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 8) + 8))(a1, a2, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t FeedPluginManager.preview(for:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjectType;
  uint64_t v10;

  v7 = v3 + qword_1ED3A4AB0;
  swift_beginAccess();
  if (!MEMORY[0x1BCCE5D40](v7))
    return 0;
  v8 = *(_QWORD *)(v7 + 8);
  ObjectType = swift_getObjectType();
  v10 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8) + 16))(a1, a2, a3, ObjectType);
  swift_unknownObjectRelease();
  return v10;
}

uint64_t FeedPluginManager.sender(_:pluginIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t ObjectType;

  v7 = v3 + qword_1ED3A4AB0;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v7);
  if (result)
  {
    v9 = *(_QWORD *)(v7 + 8);
    ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 + 8) + 24))(a1, a2, a3, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BAF54244()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v0 + 104) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BAF542E4()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAF5430C()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_1BAF54338()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BAF54364@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1 + qword_1ED3A4AB0;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  v5 = *(_QWORD *)(v3 + 8);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BAF543BC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2 + qword_1ED3A4AB0;
  swift_beginAccess();
  *(_QWORD *)(v3 + 8) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1BAF5441C()
{
  return 24;
}

__n128 sub_1BAF54428(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t method lookup function for FeedPluginManager()
{
  return swift_lookUpClassMethod();
}

unint64_t sub_1BAF54448()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AAD90;
  if (!qword_1ED3AAD90)
  {
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3AAD80, (uint64_t (*)(uint64_t))sub_1BA865D48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AAD90);
  }
  return result;
}

uint64_t sub_1BAF544A8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAF544CC(uint64_t a1, uint64_t a2)
{
  return sub_1BAF53CD8(a1, a2);
}

uint64_t sub_1BAF544D4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAF544F8(uint64_t a1, uint64_t a2)
{
  return sub_1BAF53D60(a1, a2);
}

uint64_t sub_1BAF54500()
{
  uint64_t v0;

  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 80)));
  return swift_deallocObject();
}

uint64_t FormatPuzzleBinding.Image.image(from:context:imageContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  id (*v15)@<X0>(uint64_t@<X8>);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;

  v6 = *v3;
  v7 = *(_QWORD *)(a1 + 56);
  if (v6)
  {
    if (v6 == 1)
    {
      v8 = swift_allocObject();
      v10 = *(_QWORD *)(a2 + 48);
      v9 = *(_QWORD *)(a2 + 56);
      v32 = *(_OWORD *)(a2 + 80);
      v35 = *(_OWORD *)(a2 + 64);
      v29 = *(_OWORD *)(a2 + 96);
      v11 = *(_QWORD *)(a2 + 112);
      v12 = *(_QWORD *)(a2 + 120);
      v13 = *(_BYTE *)(a2 + 128);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v7;
      *(_OWORD *)(v8 + 16) = 0u;
      *(_OWORD *)(v8 + 32) = 0u;
      *(_BYTE *)(v8 + 48) = 1;
      *(_QWORD *)(v8 + 56) = v10;
      *(_QWORD *)(v8 + 64) = v9;
      *(_OWORD *)(v8 + 72) = v35;
      *(_OWORD *)(v8 + 88) = v32;
      *(_OWORD *)(v8 + 104) = v29;
      *(_QWORD *)(v8 + 120) = v11;
      *(_QWORD *)(v8 + 128) = v12;
      *(_BYTE *)(v8 + 136) = v13;
      v15 = sub_1BAF54C98;
    }
    else
    {
      v8 = swift_allocObject();
      v24 = *(_QWORD *)(a2 + 48);
      v23 = *(_QWORD *)(a2 + 56);
      v34 = *(_OWORD *)(a2 + 80);
      v37 = *(_OWORD *)(a2 + 64);
      v31 = *(_OWORD *)(a2 + 96);
      v25 = *(_QWORD *)(a2 + 112);
      v26 = *(_QWORD *)(a2 + 120);
      v27 = *(_BYTE *)(a2 + 128);
      v14 = swift_allocObject();
      *(_QWORD *)(v14 + 16) = v7;
      *(_OWORD *)(v8 + 16) = 0u;
      *(_OWORD *)(v8 + 32) = 0u;
      *(_BYTE *)(v8 + 48) = 1;
      *(_QWORD *)(v8 + 56) = v24;
      *(_QWORD *)(v8 + 64) = v23;
      *(_OWORD *)(v8 + 72) = v37;
      *(_OWORD *)(v8 + 88) = v34;
      *(_OWORD *)(v8 + 104) = v31;
      *(_QWORD *)(v8 + 120) = v25;
      *(_QWORD *)(v8 + 128) = v26;
      *(_BYTE *)(v8 + 136) = v27;
      v15 = sub_1BAF54C70;
    }
    *(_QWORD *)(v8 + 144) = v15;
    *(_QWORD *)(v8 + 152) = v14;
    *a3 = v8 | 0x2000000000000000;
  }
  else
  {
    v17 = *(_QWORD *)(a2 + 48);
    v16 = *(_QWORD *)(a2 + 56);
    v33 = *(_OWORD *)(a2 + 80);
    v36 = *(_OWORD *)(a2 + 64);
    v30 = *(_OWORD *)(a2 + 96);
    v18 = *(_QWORD *)(a2 + 112);
    v19 = *(_QWORD *)(a2 + 120);
    v20 = *(_BYTE *)(a2 + 128);
    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v7;
    v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = 0u;
    *(_OWORD *)(v22 + 32) = 0u;
    *(_BYTE *)(v22 + 48) = 1;
    *(_QWORD *)(v22 + 56) = v17;
    *(_QWORD *)(v22 + 64) = v16;
    *(_OWORD *)(v22 + 72) = v36;
    *(_OWORD *)(v22 + 88) = v33;
    *(_OWORD *)(v22 + 104) = v30;
    *(_QWORD *)(v22 + 120) = v18;
    *(_QWORD *)(v22 + 128) = v19;
    *(_BYTE *)(v22 + 136) = v20;
    *(_QWORD *)(v22 + 144) = sub_1BAF54CC0;
    *(_QWORD *)(v22 + 152) = v21;
    *a3 = v22 | 0x2000000000000000;
  }
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BAF547A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t (*v14)();
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;

  if (*v3)
  {
    if (*v3 == 1)
    {
      v7 = swift_allocObject();
      v9 = *(_QWORD *)(a2 + 48);
      v8 = *(_QWORD *)(a2 + 56);
      v31 = *(_OWORD *)(a2 + 80);
      v34 = *(_OWORD *)(a2 + 64);
      v28 = *(_OWORD *)(a2 + 96);
      v10 = *(_QWORD *)(a2 + 112);
      v11 = *(_QWORD *)(a2 + 120);
      v12 = *(_BYTE *)(a2 + 128);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a1;
      *(_OWORD *)(v7 + 16) = 0u;
      *(_OWORD *)(v7 + 32) = 0u;
      *(_BYTE *)(v7 + 48) = 1;
      *(_QWORD *)(v7 + 56) = v9;
      *(_QWORD *)(v7 + 64) = v8;
      *(_OWORD *)(v7 + 72) = v34;
      *(_OWORD *)(v7 + 88) = v31;
      *(_OWORD *)(v7 + 104) = v28;
      *(_QWORD *)(v7 + 120) = v10;
      *(_QWORD *)(v7 + 128) = v11;
      *(_BYTE *)(v7 + 136) = v12;
      v14 = sub_1BAF54F90;
    }
    else
    {
      v7 = swift_allocObject();
      v23 = *(_QWORD *)(a2 + 48);
      v22 = *(_QWORD *)(a2 + 56);
      v33 = *(_OWORD *)(a2 + 80);
      v36 = *(_OWORD *)(a2 + 64);
      v30 = *(_OWORD *)(a2 + 96);
      v24 = *(_QWORD *)(a2 + 112);
      v25 = *(_QWORD *)(a2 + 120);
      v26 = *(_BYTE *)(a2 + 128);
      v13 = swift_allocObject();
      *(_QWORD *)(v13 + 16) = a1;
      *(_OWORD *)(v7 + 16) = 0u;
      *(_OWORD *)(v7 + 32) = 0u;
      *(_BYTE *)(v7 + 48) = 1;
      *(_QWORD *)(v7 + 56) = v23;
      *(_QWORD *)(v7 + 64) = v22;
      *(_OWORD *)(v7 + 72) = v36;
      *(_OWORD *)(v7 + 88) = v33;
      *(_OWORD *)(v7 + 104) = v30;
      *(_QWORD *)(v7 + 120) = v24;
      *(_QWORD *)(v7 + 128) = v25;
      *(_BYTE *)(v7 + 136) = v26;
      v14 = sub_1BAF54F8C;
    }
    *(_QWORD *)(v7 + 144) = v14;
    *(_QWORD *)(v7 + 152) = v13;
    *a3 = v7 | 0x2000000000000000;
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 48);
    v15 = *(_QWORD *)(a2 + 56);
    v32 = *(_OWORD *)(a2 + 80);
    v35 = *(_OWORD *)(a2 + 64);
    v29 = *(_OWORD *)(a2 + 96);
    v17 = *(_QWORD *)(a2 + 112);
    v18 = *(_QWORD *)(a2 + 120);
    v19 = *(_BYTE *)(a2 + 128);
    v20 = swift_allocObject();
    *(_QWORD *)(v20 + 16) = a1;
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = 0u;
    *(_OWORD *)(v21 + 32) = 0u;
    *(_BYTE *)(v21 + 48) = 1;
    *(_QWORD *)(v21 + 56) = v16;
    *(_QWORD *)(v21 + 64) = v15;
    *(_OWORD *)(v21 + 72) = v35;
    *(_OWORD *)(v21 + 88) = v32;
    *(_OWORD *)(v21 + 104) = v29;
    *(_QWORD *)(v21 + 120) = v17;
    *(_QWORD *)(v21 + 128) = v18;
    *(_BYTE *)(v21 + 136) = v19;
    *(_QWORD *)(v21 + 144) = sub_1BAF54F94;
    *(_QWORD *)(v21 + 152) = v20;
    *a3 = v21 | 0x2000000000000000;
  }
  swift_bridgeObjectRetain();
  return swift_unknownObjectRetain();
}

uint64_t sub_1BAF549DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

double sub_1BAF54A08@<D0>(id a1@<X2>, void *a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X8>)
{
  id v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  double result;
  char v12;
  char v13;
  char v14;
  char v15;

  if (a3 == 2)
  {
    v12 = 0;
    v6 = objc_msgSend(a1, sel_puzzleType);
    swift_getObjectType();
    v7 = &v12;
  }
  else
  {
    v8 = objc_msgSend(a2, sel_userInterfaceStyle);
    if ((unint64_t)v8 >= 2)
    {
      if (v8 == (id)2)
      {
        v13 = 0;
        v6 = objc_msgSend(a1, sel_puzzleType);
        swift_getObjectType();
        v7 = &v13;
      }
      else
      {
        v15 = 1;
        v6 = objc_msgSend(a1, sel_puzzleType);
        swift_getObjectType();
        v7 = &v15;
      }
    }
    else
    {
      v14 = 1;
      v6 = objc_msgSend(a1, sel_puzzleType);
      swift_getObjectType();
      v7 = &v14;
    }
  }
  sub_1BA7834E0((uint64_t)v6, (uint64_t)v7);
  v10 = v9;
  swift_unknownObjectRelease();
  if (v10)
  {
    *(_QWORD *)(a4 + 24) = sub_1BA749984();
    *(_QWORD *)(a4 + 32) = sub_1BA7499C0();
    *(_QWORD *)a4 = v10;
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

id sub_1BAF54B5C@<X0>(id a1@<X2>, SEL *a2@<X3>, SEL *a3@<X4>, uint64_t a4@<X8>)
{
  id result;
  void *v8;
  unint64_t v9;
  unint64_t v10;
  id v11;
  id v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  unint64_t v19;
  unint64_t v20;

  result = objc_msgSend(a1, *a2);
  if (result)
  {
    v8 = result;
    v9 = sub_1BA749984();
    v19 = v9;
    v10 = sub_1BA7499C0();
    v20 = v10;
    *(_QWORD *)&v18 = v8;
    v11 = v8;
    v12 = objc_msgSend(a1, *a3);
    if (v12)
    {
      v13 = v12;
      *((_QWORD *)&v16 + 1) = v9;
      v17 = v10;

      *(_QWORD *)&v15 = v13;
    }
    else
    {

      v17 = 0;
      v15 = 0u;
      v16 = 0u;
    }
    *(_QWORD *)(a4 + 24) = &type metadata for FormatAssetHandle;
    *(_QWORD *)(a4 + 32) = sub_1BA749A08();
    v14 = swift_allocObject();
    *(_QWORD *)a4 = v14;
    sub_1BA4CECCC(&v18, v14 + 16);
    return (id)sub_1BA9BAB24((uint64_t)&v15, v14 + 56);
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

id sub_1BAF54C70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BAF54B5C(*(id *)(v1 + 16), (SEL *)&selRef_thumbnailLargeImageAssetHandle, (SEL *)&selRef_thumbnailSmallImageAssetHandle, a1);
}

id sub_1BAF54C98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BAF54B5C(*(id *)(v1 + 16), (SEL *)&selRef_thumbnailSmallImageAssetHandle, (SEL *)&selRef_thumbnailLargeImageAssetHandle, a1);
}

double sub_1BAF54CC0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BAF54A08(*(id *)(v3 + 16), a1, a2, a3);
}

BOOL static FormatPuzzleBinding.Image.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPuzzleBinding.Image.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleBinding.Image.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAF54D4C()
{
  unint64_t result;

  result = qword_1EF2B6C10;
  if (!qword_1EF2B6C10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Image, &type metadata for FormatPuzzleBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B6C10);
  }
  return result;
}

unint64_t sub_1BAF54D90(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF54DB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF54DB4()
{
  unint64_t result;

  result = qword_1EF2B6C18;
  if (!qword_1EF2B6C18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleBinding.Image, &type metadata for FormatPuzzleBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2B6C18);
  }
  return result;
}

unint64_t sub_1BAF54DF8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE9A228();
  a1[2] = sub_1BAEF1754();
  result = sub_1BAF54D4C();
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF54E2C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPuzzleBinding.Image.init(from:)(a1, a2);
}

uint64_t sub_1BAF54E40(_QWORD *a1)
{
  return FormatPuzzleBinding.Image.encode(to:)(a1);
}

uint64_t _s5ImageOwst_3(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF54EA0 + 4 * byte_1BB8D66CD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF54ED4 + 4 * byte_1BB8D66C8[v4]))();
}

uint64_t sub_1BAF54ED4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF54EDC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF54EE4);
  return result;
}

uint64_t sub_1BAF54EF0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF54EF8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF54EFC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF54F04(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPuzzleBinding.Image()
{
  return &type metadata for FormatPuzzleBinding.Image;
}

uint64_t sub_1BAF54F20()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (*(_QWORD *)(v0 + 80))
    __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocObject();
}

uint64_t sub_1BAF54F54()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

Swift::Bool __swiftcall FeedServiceContextType.canReadFromNetwork()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  char *v11;
  Swift::Bool result;
  uint64_t v13;

  v2 = v1;
  v3 = v0;
  v4 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for FeedServiceOptions(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, double))(v2 + 8))(v3, v2, v8);
  sub_1BA4C2EB0((uint64_t)&v10[*(int *)(v7 + 20)], (uint64_t)v6);
  v11 = (char *)sub_1BAF5507C + 4 * byte_1BB8D67F0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
  return result;
}

uint64_t sub_1BAF5507C()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, type metadata accessor for FeedServiceOptions.RootCursorSource);
  return 1;
}

uint64_t sub_1BAF550AC@<X0>(uint64_t a1@<X8>)
{
  return FeedServiceContextType.serviceOptions.getter(a1);
}

uint64_t dispatch thunk of FeedServiceContextType.serviceOptions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void ActivityItemsConfigurationFactory.makeActivityItemsConfiguration(formatActivityItemsData:)(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_1BAF5511C()
{
  void *v0;
  unsigned __int8 v1;
  void *v2;

  v2 = (void *)swift_unknownObjectRetain();
  ActivityItemsConfigurationFactory.makeActivityItemsConfiguration(headline:userHasAccess:)(v2, v1 & 1);
  sub_1BA726DA4(v0, v1);
  sub_1BAF55108();
}

void sub_1BAF55144()
{
  void *v0;
  char v1;

  type metadata accessor for IssueActivityItemsConfiguration();
  IssueActivityItemsConfiguration.__allocating_init(issue:userHasAccess:)(v0, v1 & 1);
  sub_1BAF55108();
}

void sub_1BAF55160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  uint64_t v14;
  char v15;
  void *v16;

  type metadata accessor for PuzzleActivityItemsConfiguration();
  sub_1BA4C010C(v14 + 96, (uint64_t)&a14);
  sub_1BA4C010C(v14 + 136, (uint64_t)&a9);
  v16 = (void *)swift_unknownObjectRetain();
  PuzzleActivityItemsConfiguration.__allocating_init(puzzle:puzzleImageShareAttributeProvider:puzzleRankProvider:userHasAccess:)(v16, (uint64_t)&a14, (uint64_t)&a9, v15 & 1);
  sub_1BAF55108();
}

void sub_1BAF551A4()
{
  uint64_t v0;
  objc_class *v1;
  void *v2;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = (objc_class *)type metadata accessor for TagActivityItemsConfiguration();
    swift_getObjectType();
    v2 = (void *)swift_unknownObjectRetain();
    sub_1BB660E74(v2, v1);
  }
  else
  {
    sub_1BAF55108();
  }
}

id ActivityItemsConfigurationFactory.makeActivityItemsConfiguration(headline:userHasAccess:)(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  objc_class *v11;
  char *v12;
  objc_class *v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  id v31;
  id v32;
  void *v33;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  objc_super v39;
  objc_super v40;

  v3 = v2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v36[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  if ((a2 & 1) != 0)
  {
    sub_1BA65E330();
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB895110;
    v11 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
    v12 = (char *)objc_allocWithZone(v11);
    *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
    v40.receiver = v12;
    v40.super_class = v11;
    swift_unknownObjectRetain();
    *(_QWORD *)(v10 + 32) = objc_msgSendSuper2(&v40, sel_init);
    v13 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
    v14 = (char *)objc_allocWithZone(v13);
    *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
    swift_unknownObjectRetain();
    v15 = v14;
    v16 = sub_1BAA48174(a1);
    v17 = (uint64_t *)&v15[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
    *v17 = v16;
    v17[1] = v18;

    v39.receiver = v15;
    v39.super_class = v13;
    *(_QWORD *)(v10 + 40) = objc_msgSendSuper2(&v39, sel_init);
    v19 = v3[5];
    v20 = v3[6];
    __swift_project_boxed_opaque_existential_1(v3 + 2, v19);
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 8);
    v22 = swift_unknownObjectRetain();
    v21(v22, v19, v20);
    sub_1BA4C010C((uint64_t)(v3 + 7), (uint64_t)v36);
    v23 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingArticleURLActivityItemSource());
    v24 = v37;
    v25 = v38;
    v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v36, v37);
    v27 = MEMORY[0x1E0C80A78](v26);
    v29 = (char *)&v36[-1] - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v30 + 16))(v29, v27);
    v31 = sub_1BA8E3A14((uint64_t)a1, (uint64_t)v8, (uint64_t)v29, 0, v23, v24, v25);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    *(_QWORD *)(v10 + 48) = v31;
    v36[0] = v10;
    sub_1BB872DCC();
    v32 = objc_allocWithZone(MEMORY[0x1E0DC3440]);
    sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2B6C20);
    v33 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v9 = objc_msgSend(v32, sel_initNAWithActivityItemSources_, v33);

  }
  return v9;
}

uint64_t ActivityItemsConfigurationFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return v0;
}

uint64_t ActivityItemsConfigurationFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  __swift_destroy_boxed_opaque_existential_1(v0 + 96);
  __swift_destroy_boxed_opaque_existential_1(v0 + 136);
  return swift_deallocClassInstance();
}

void sub_1BAF554F0(uint64_t a1)
{
  ActivityItemsConfigurationFactory.makeActivityItemsConfiguration(formatActivityItemsData:)(a1);
}

id sub_1BAF55510(void *a1, char a2)
{
  return ActivityItemsConfigurationFactory.makeActivityItemsConfiguration(headline:userHasAccess:)(a1, a2);
}

id ArticleActivityItemsConfiguration.__allocating_init(headline:shareLinkProvider:shareLinkTextProvider:userHasAccess:)(void *a1, _QWORD *a2, uint64_t a3, char a4)
{
  objc_class *v4;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  objc_class *v13;
  char *v14;
  objc_class *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  double v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  id v33;
  void *v34;
  id v35;
  id v37;
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  objc_super v41;
  objc_super v42;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v38[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a4 & 1) != 0)
  {
    v37 = objc_allocWithZone(v4);
    sub_1BA65E330();
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB895110;
    v13 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
    v14 = (char *)objc_allocWithZone(v13);
    *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
    v42.receiver = v14;
    v42.super_class = v13;
    swift_unknownObjectRetain();
    *(_QWORD *)(v12 + 32) = objc_msgSendSuper2(&v42, sel_init);
    v15 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
    v16 = (char *)objc_allocWithZone(v15);
    *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
    swift_unknownObjectRetain();
    v17 = v16;
    v18 = sub_1BAA48174(a1);
    v19 = (uint64_t *)&v17[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
    *v19 = v18;
    v19[1] = v20;

    v41.receiver = v17;
    v41.super_class = v15;
    *(_QWORD *)(v12 + 40) = objc_msgSendSuper2(&v41, sel_init);
    v21 = a2[3];
    v22 = a2[4];
    __swift_project_boxed_opaque_existential_1(a2, v21);
    v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 8);
    v24 = swift_unknownObjectRetain();
    v23(v24, v21, v22);
    sub_1BA4C010C(a3, (uint64_t)v38);
    v25 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingArticleURLActivityItemSource());
    v26 = v39;
    v27 = v40;
    v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v38, v39);
    v29 = MEMORY[0x1E0C80A78](v28);
    v31 = (char *)&v38[-1] - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v32 + 16))(v31, v29);
    v33 = sub_1BA8E3A14((uint64_t)a1, (uint64_t)v11, (uint64_t)v31, 0, v25, v26, v27);
    swift_unknownObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    *(_QWORD *)(v12 + 48) = v33;
    v38[0] = v12;
    sub_1BB872DCC();
    sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2B6C20);
    v34 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v35 = objc_msgSend(v37, sel_initNAWithActivityItemSources_, v34);
    swift_unknownObjectRelease();

  }
  else
  {
    swift_unknownObjectRelease();
    v35 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v35;
}

id ArticleActivityItemsConfiguration.__allocating_init(headline:userHasAccess:)(void *a1, char a2)
{
  objc_class *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  uint64_t v9;
  objc_class *v10;
  char *v11;
  objc_class *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  _QWORD v25[2];
  objc_super v26;
  objc_super v27;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
  {
    v8 = objc_allocWithZone(v2);
    sub_1BA65E330();
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1BB895110;
    v10 = (objc_class *)type metadata accessor for SharingArticleImageActivityItemSource();
    v11 = (char *)objc_allocWithZone(v10);
    *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed37SharingArticleImageActivityItemSource_headline] = a1;
    v27.receiver = v11;
    v27.super_class = v10;
    swift_unknownObjectRetain();
    *(_QWORD *)(v9 + 32) = objc_msgSendSuper2(&v27, sel_init);
    v12 = (objc_class *)type metadata accessor for SharingArticleTextActivityItemSource();
    v13 = (char *)objc_allocWithZone(v12);
    *(_QWORD *)&v13[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_headline] = a1;
    swift_unknownObjectRetain();
    v14 = v13;
    v15 = sub_1BAA48174(a1);
    v16 = (uint64_t *)&v14[OBJC_IVAR____TtC8NewsFeed36SharingArticleTextActivityItemSource_itemTitle];
    *v16 = v15;
    v16[1] = v17;

    v26.receiver = v14;
    v26.super_class = v12;
    *(_QWORD *)(v9 + 40) = objc_msgSendSuper2(&v26, sel_init);
    type metadata accessor for ShareLinkProvider();
    swift_initStackObject();
    v18 = (void *)swift_unknownObjectRetain();
    sub_1BAF55A1C(v18, (uint64_t)v7);
    type metadata accessor for MailShareLinkTextProvider();
    v19 = swift_allocObject();
    v20 = (char *)objc_allocWithZone((Class)type metadata accessor for SharingArticleURLActivityItemSource());
    v21 = sub_1BAF5615C((uint64_t)a1, (uint64_t)v7, v19, 0, v20);
    swift_unknownObjectRelease();
    *(_QWORD *)(v9 + 48) = v21;
    v25[1] = v9;
    sub_1BB872DCC();
    sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2B6C20);
    v22 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v23 = objc_msgSend(v8, sel_initNAWithActivityItemSources_, v22);

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v23;
}

uint64_t sub_1BAF55A1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  id v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  id v27;
  unsigned __int8 v28;
  uint64_t v29;
  id v31;
  void *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v34 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v34 - v11;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v34 - v19;
  if (objc_msgSend(a1, sel_contentType, v18) != (id)1)
  {
    v34 = v20;
    v35 = a2;
    v21 = objc_msgSend(a1, sel_articleID);
    if (!v21)
    {
      sub_1BB8729A0();
      v21 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    v22 = objc_msgSend(a1, sel_routeURL);
    if (v22)
    {
      sub_1BB86C5EC();

      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v9, v16, v13);
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v9, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
      {
        v22 = 0;
      }
      else
      {
        v22 = (id)sub_1BB86C58C();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
      }
    }
    else
    {
      v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
      v23(v9, 1, 1, v13);
    }
    v24 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForArticleID_routeURL_, v21, v22);

    if (v24)
    {
      sub_1BB86C5EC();

      v25 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v25(v6, v16, v13);
      v23(v6, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v6, 1, v13) != 1)
      {
        v26 = v34;
        v25(v34, v6, v13);
        v27 = objc_msgSend(a1, sel_sourceChannel);
        if (!v27
          || (v28 = objc_msgSend(v27, sel_isPublic), swift_unknownObjectRelease(), (v28 & 1) != 0))
        {
          v29 = v35;
          v25((char *)v35, v26, v13);
          return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))v23)(v29, 0, 1, v13);
        }
        (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
        goto LABEL_16;
      }
    }
    else
    {
      v23(v6, 1, 1, v13);
    }
    sub_1BA7F0A80((uint64_t)v6);
LABEL_16:
    a2 = v35;
  }
  v31 = objc_msgSend(a1, sel_contentURL);
  if (v31)
  {
    v32 = v31;
    sub_1BB86C5EC();

    v33 = 0;
  }
  else
  {
    v33 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, v33, 1, v13);
  return sub_1BA7F0AD4((uint64_t)v12, a2);
}

id ArticleActivityItemsConfiguration.__allocating_init(headline:itemOptions:)(void *a1, uint64_t a2)
{
  char v3;

  v3 = sub_1BA79E0CC(12, a2);
  swift_bridgeObjectRelease();
  return ArticleActivityItemsConfiguration.__allocating_init(headline:userHasAccess:)(a1, v3 & 1);
}

id ArticleActivityItemsConfiguration.__allocating_init(objects:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2AE2D0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithObjects_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.init(objects:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BA4EFE00(0, (unint64_t *)&unk_1EF2AE2D0);
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithObjects_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.__allocating_init(itemProviders:)()
{
  objc_class *v0;
  id v1;
  void *v2;
  id v3;

  v1 = objc_allocWithZone(v0);
  sub_1BAA5CA20();
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v3 = objc_msgSend(v1, sel_initWithItemProviders_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.init(itemProviders:)()
{
  void *v0;
  objc_class *ObjectType;
  void *v2;
  id v3;
  objc_super v5;

  ObjectType = (objc_class *)swift_getObjectType();
  sub_1BAA5CA20();
  v2 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v5.receiver = v0;
  v5.super_class = ObjectType;
  v3 = objc_msgSendSuper2(&v5, sel_initWithItemProviders_, v2);

  return v3;
}

id ArticleActivityItemsConfiguration.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BAF5615C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  objc_class *ObjectType;
  char *v11;
  id v12;
  unsigned __int8 v13;
  id v14;
  objc_super v16;
  _QWORD v17[5];

  ObjectType = (objc_class *)swift_getObjectType();
  v17[3] = type metadata accessor for MailShareLinkTextProvider();
  v17[4] = &protocol witness table for MailShareLinkTextProvider;
  v17[0] = a3;
  *(_QWORD *)&a5[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_headline] = a1;
  v11 = a5;
  v12 = objc_msgSend((id)swift_unknownObjectRetain(), sel_sourceChannel);
  if (v12)
  {
    v13 = objc_msgSend(v12, sel_isPublic);
    swift_unknownObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  sub_1BA7E8428(a2, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_articleURL]);
  sub_1BA4C010C((uint64_t)v17, (uint64_t)&v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_mailShareLinkTextProvider]);
  v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_sourceChannelPublic] = v13;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed35SharingArticleURLActivityItemSource_linkPresentationSource] = a4;
  swift_retain();

  v16.receiver = v11;
  v16.super_class = ObjectType;
  v14 = objc_msgSendSuper2(&v16, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_1BA7F0A80(a2);
  return v14;
}

uint64_t dispatch thunk of ActivityItemsConfigurationFactoryType.makeActivityItemsConfiguration(formatActivityItemsData:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ActivityItemsConfigurationFactoryType.makeActivityItemsConfiguration(headline:userHasAccess:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t method lookup function for ActivityItemsConfigurationFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ArticleActivityItemsConfiguration()
{
  return objc_opt_self();
}

uint64_t sub_1BAF562D0@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  unsigned int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (*a1 == 0x8000000000000008 || (v9 = *v2) == 0)
  {
    v5 = (unsigned int *)MEMORY[0x1E0DB7ED8];
LABEL_3:
    v6 = *v5;
    v7 = sub_1BB86FE38();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a2, v6, v7);
  }
  if (v9 == 1)
  {
    v5 = (unsigned int *)MEMORY[0x1E0DB7EE0];
    goto LABEL_3;
  }
  if (v9 == 2)
  {
    v5 = (unsigned int *)MEMORY[0x1E0DB7ED0];
    goto LABEL_3;
  }
  v10 = v2[1];
  swift_bridgeObjectRetain();
  sub_1BB86DD80();
  sub_1BA72BED4(v11, v9);
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v3)
  {
    swift_bridgeObjectRetain();
    sub_1BB86DD80();
    sub_1BA72BED4(v11, v10);
    swift_bridgeObjectRelease();
    swift_release();
    sub_1BB870B4C();
    v5 = (unsigned int *)MEMORY[0x1E0DB7EE8];
    goto LABEL_3;
  }
  return result;
}

uint64_t sub_1BAF56434@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeSwipeActionStyle.init(from:)(a1, a2);
}

uint64_t sub_1BAF56448(_QWORD *a1)
{
  return FormatItemNodeSwipeActionStyle.encode(to:)(a1);
}

BOOL _s8NewsFeed30FormatItemNodeSwipeActionStyleO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v10;
  char v11;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  if (!*a1)
  {
    if (!v5)
    {
      sub_1BAC687B4(0);
      v6 = 0;
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  if (v3 == 1)
  {
    if (v5 == 1)
    {
      v7 = 1;
      sub_1BAC687B4(1uLL);
      sub_1BAC687B4(1uLL);
      return v7;
    }
    goto LABEL_12;
  }
  if (v3 != 2)
  {
    if (v5 >= 3)
    {
      sub_1BAC68784(*a2);
      sub_1BAC68784(v3);
      sub_1BAC68784(v5);
      sub_1BAC68784(v3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v10 = sub_1BA881EAC(v3, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v11 = sub_1BA881EAC(v2, v4);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAC687B4(v3);
        sub_1BAC687B4(v5);
        sub_1BAC687B4(v5);
        sub_1BAC687B4(v3);
        return (v11 & 1) != 0;
      }
      sub_1BAC687B4(v3);
      sub_1BAC687B4(v5);
      sub_1BAC687B4(v5);
      v8 = v3;
LABEL_13:
      sub_1BAC687B4(v8);
      return 0;
    }
LABEL_12:
    sub_1BAC68784(*a2);
    sub_1BAC68784(v3);
    sub_1BAC687B4(v3);
    v8 = v5;
    goto LABEL_13;
  }
  if (v5 != 2)
    goto LABEL_12;
  sub_1BAC687B4(2uLL);
  v6 = 2;
LABEL_8:
  sub_1BAC687B4(v6);
  return 1;
}

unint64_t sub_1BAF5664C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF56670();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF56670()
{
  unint64_t result;

  result = qword_1EF2B6C70;
  if (!qword_1EF2B6C70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyle, &type metadata for FormatItemNodeSwipeActionStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B6C70);
  }
  return result;
}

unint64_t sub_1BAF566B4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5B8CE0();
  a1[2] = sub_1BAEF07D8();
  result = sub_1BAF566E8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF566E8()
{
  unint64_t result;

  result = qword_1EF2B6C78;
  if (!qword_1EF2B6C78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeSwipeActionStyle, &type metadata for FormatItemNodeSwipeActionStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2B6C78);
  }
  return result;
}

unint64_t destroy for FormatItemNodeSwipeActionStyle(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s8NewsFeed30FormatItemNodeSwipeActionStyleOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v3 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

unint64_t *assignWithCopy for FormatItemNodeSwipeActionStyle(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = *a2;
  if (v4 < 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v5 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatItemNodeSwipeActionStyle(_QWORD *a1, uint64_t a2)
{
  if (*a1 < 0xFFFFFFFFuLL)
    goto LABEL_5;
  if (*(_QWORD *)a2 < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeSwipeActionStyle(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 2;
  if (v4 >= 4)
    return v5;
  else
    return 0;
}

_QWORD *sub_1BAF56948(_QWORD *result, int a2)
{
  uint64_t v2;

  if (a2 < 0)
  {
    v2 = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else
  {
    if (!a2)
      return result;
    v2 = (a2 - 1);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeSwipeActionStyle()
{
  return &type metadata for FormatItemNodeSwipeActionStyle;
}

_QWORD *sub_1BAF56978(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  _OWORD v53[2];
  uint64_t v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;

  v1 = *a1;
  switch(*a1)
  {
    case 0:
      v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
      sub_1BA8C88C8(0);
      v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
      v6 = (v5 + 32) & ~v5;
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
      v8 = (_QWORD *)(v7 + v6);
      v9 = v8;
      v10 = 0x64656C6261736944;
      v11 = 0xE800000000000000;
      goto LABEL_6;
    case 1:
      v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v33);
      sub_1BA8C88C8(0);
      v35 = *(unsigned __int8 *)(*(_QWORD *)(v34 - 8) + 80);
      v36 = (v35 + 32) & ~v35;
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
      v8 = (_QWORD *)(v7 + v36);
      v11 = 0xE900000000000064;
      v9 = v8;
      v10 = 0x65736E65646E6F43;
      goto LABEL_6;
    case 2:
      v37 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v37);
      sub_1BA8C88C8(0);
      v39 = *(unsigned __int8 *)(*(_QWORD *)(v38 - 8) + 80);
      v40 = (v39 + 32) & ~v39;
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
      v8 = (_QWORD *)(v7 + v40);
      v9 = v8;
      v10 = 0x746C7561666544;
      v11 = 0xE700000000000000;
LABEL_6:
      sub_1BAAF7494(0x656C797453, 0xE500000000000000, v10, v11, v9);
      v41 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v8, 0, 1, v41);
      goto LABEL_8;
    case 3:
      v42 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v42);
      sub_1BA8C88C8(0);
      v44 = *(unsigned __int8 *)(*(_QWORD *)(v43 - 8) + 80);
      v45 = (v44 + 32) & ~v44;
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
      v46 = v7 + v45;
      v47 = type metadata accessor for FormatInspectionItem(0);
      v48 = v46 + *(int *)(v47 + 24);
      v49 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v48, 1, 1, v49);
      *(_OWORD *)v46 = xmmword_1BB8D6920;
      *(_QWORD *)(v46 + 16) = 0;
      *(_QWORD *)(v46 + 24) = 0;
      v50 = v46 + *(int *)(v47 + 28);
      *(_QWORD *)v50 = 0;
      *(_QWORD *)(v50 + 8) = 0;
      *(_BYTE *)(v50 + 16) = -1;
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v46, 0, 1, v47);
LABEL_8:
      sub_1BAF89090(0x6341206570697753, 0xEC0000006E6F6974, 0, 0, v7, &v55);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(inited + 64) = &off_1E72D2F60;
      v30 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v30;
      *(_QWORD *)(v30 + 48) = v57;
      v32 = v55;
      v31 = v56;
      break;
    default:
      v12 = a1[1];
      v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v13);
      sub_1BA8C88C8(0);
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(_QWORD *)(v15 + 72);
      v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
      v18 = swift_allocObject();
      *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
      v19 = (_QWORD *)(v18 + v17);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v13);
      v20 = swift_initStackObject();
      *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
      v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
      v22 = v21 + v17;
      swift_bridgeObjectRetain();
      sub_1BAAF3E48(0x53206E6F74747542, 0xEB00000000657A69, v1, (_QWORD *)(v21 + v17));
      v23 = type metadata accessor for FormatInspectionItem(0);
      v24 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
      v24(v22, 0, 1, v23);
      v25 = (_QWORD *)(v22 + v16);
      swift_bridgeObjectRetain();
      sub_1BAAF3E48(0x657241202E6E694DLL, 0xEF68746469572061, v12, v25);
      v24((unint64_t)v25, 0, 1, v23);
      sub_1BAF89090(0x6F69736E656D6944, 0xE90000000000006ELL, 0, 0, v21, v53);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v20 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v20 + 64) = &off_1E72D2F60;
      v26 = swift_allocObject();
      *(_QWORD *)(v20 + 32) = v26;
      *(_QWORD *)(v26 + 48) = v54;
      v27 = v53[1];
      *(_OWORD *)(v26 + 16) = v53[0];
      *(_OWORD *)(v26 + 32) = v27;
      v28 = sub_1BA9747FC(v20);
      swift_setDeallocating();
      sub_1BA89EA20();
      swift_arrayDestroy();
      v29 = sub_1BB6DF010(v28);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(0x656C797453, 0xE500000000000000, (uint64_t)v29, 0x6F69736E656D6944, 0xE90000000000006ELL, v19);
      v24((unint64_t)v19, 0, 1, v23);
      sub_1BAF89090(0x6341206570697753, 0xEC0000006E6F6974, 0, 0, v18, &v55);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(inited + 64) = &off_1E72D2F60;
      v30 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v30;
      *(_QWORD *)(v30 + 48) = v57;
      v32 = v55;
      v31 = v56;
      break;
  }
  *(_OWORD *)(v30 + 16) = v32;
  *(_OWORD *)(v30 + 32) = v31;
  v51 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v51;
}

uint64_t sub_1BAF571BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BAF571F4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for FormatGroupCollection(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatGroupCollection(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatCompilerProgress()
{
  return &type metadata for DebugFormatCompilerProgress;
}

uint64_t sub_1BAF57310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  _QWORD v19[2];

  v7 = type metadata accessor for DebugFormatCompilingPackage();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v19 - v11);
  swift_bridgeObjectRetain();
  sub_1BB5743C8();
  v14 = v13;
  v16 = v15;
  *v12 = a1;
  swift_retain();
  sub_1BB86C8A4();
  sub_1BAF5785C((uint64_t)v12, (uint64_t)v9);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v19[1] = a4;
  sub_1BB4BFEFC((uint64_t)v9, v14, v16, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BAF57448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v15[8];

  v7 = type metadata accessor for DebugFormatCompilerResultEntry();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v15[1] = a2;
    v15[3] = a4;
    v15[7] = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v11, 0);
    v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    v15[2] = a1;
    sub_1BAF578A0(a1 + v12, (uint64_t)v10);
    v13 = *v10;
    v15[5] = 0;
    v15[6] = 0xE000000000000000;
    __asm { BR              X9 }
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BAF577D4()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1BB5743C8();
  v1 = v0;
  swift_release();
  return v1;
}

uint64_t type metadata accessor for DebugFormatCompilingPackage()
{
  uint64_t result;

  result = qword_1EF2B6CE0;
  if (!qword_1EF2B6CE0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF5785C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatCompilingPackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF578A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF578E4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatCompilerResultEntry();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAF57920()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BAD00)
  {
    type metadata accessor for DebugFormatCompilerResultEntry();
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BAD00);
  }
}

unint64_t sub_1BAF57974()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B6C80;
  if (!qword_1EF2B6C80)
  {
    sub_1BAF57920();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B6C80);
  }
  return result;
}

uint64_t *sub_1BAF579BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1BB86C8B0();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_retain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_1BAF57A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1BB86C8B0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1BAF57A9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86C8B0();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_retain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_1BAF57B0C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_1BAF57B80(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1BAF57BDC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1BAF57C48()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF57C54(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C8B0();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1BAF57CD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAF57CDC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C8B0();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAF57D50()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static FormatResizeConstraint.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)a1 == 0;
  if (*(_BYTE *)a1)
    v7 = 0x746867696568;
  else
    v7 = 0x6874646977;
  if (v6)
    v8 = 0xE500000000000000;
  else
    v8 = 0xE600000000000000;
  if (*(_BYTE *)a2)
    v9 = 0x746867696568;
  else
    v9 = 0x6874646977;
  if (*(_BYTE *)a2)
    v10 = 0xE600000000000000;
  else
    v10 = 0xE500000000000000;
  if (v7 == v9 && v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    if (v2 != v4)
      return sub_1BB874398();
  }
  else
  {
    v12 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
    if (v2 != v4)
      return sub_1BB874398();
  }
  if (v3 != v5)
    return sub_1BB874398();
  return 1;
}

uint64_t FormatResizeConstraint.Dimension.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x746867696568;
  else
    return 0x6874646977;
}

void FormatResizeConstraint.dimension.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatResizeConstraint.targetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAF57F3C(char *a1, char *a2)
{
  return sub_1BB7F775C(*a1, *a2);
}

uint64_t sub_1BAF57F48()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF57FC0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF58014()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAF58088(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6874646977;
  if (*v1)
    v2 = 0x746867696568;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE600000000000000;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BAF580C4()
{
  unint64_t result;

  result = qword_1EF2B6D18;
  if (!qword_1EF2B6D18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint.Dimension, &type metadata for FormatResizeConstraint.Dimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B6D18);
  }
  return result;
}

unint64_t sub_1BAF58108(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAF58134();
  result = sub_1BA4BAFDC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAF58134()
{
  unint64_t result;

  result = qword_1EF2B6D20;
  if (!qword_1EF2B6D20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint.Dimension, &type metadata for FormatResizeConstraint.Dimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B6D20);
  }
  return result;
}

unint64_t sub_1BAF58178(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF5819C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF5819C()
{
  unint64_t result;

  result = qword_1EF2B6D28;
  if (!qword_1EF2B6D28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint.Dimension, &type metadata for FormatResizeConstraint.Dimension);
    atomic_store(result, (unint64_t *)&qword_1EF2B6D28);
  }
  return result;
}

uint64_t sub_1BAF581E0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA52B538, (uint64_t (*)(void))sub_1BA53DAE4, (uint64_t (*)(void))sub_1BAF580C4);
}

unint64_t sub_1BAF581FC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF58220();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF58220()
{
  unint64_t result;

  result = qword_1EF2B6D30;
  if (!qword_1EF2B6D30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint, &type metadata for FormatResizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1EF2B6D30);
  }
  return result;
}

uint64_t sub_1BAF58264(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA6366FC, (uint64_t (*)(void))sub_1BA616D9C, (uint64_t (*)(void))sub_1BAF58280);
}

unint64_t sub_1BAF58280()
{
  unint64_t result;

  result = qword_1EF2B6D38;
  if (!qword_1EF2B6D38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatResizeConstraint, &type metadata for FormatResizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1EF2B6D38);
  }
  return result;
}

uint64_t sub_1BAF582C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if ((sub_1BB7F775C(*(_BYTE *)a1, *(_BYTE *)a2) & 1) == 0)
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_1BB874398();
}

uint64_t assignWithCopy for FormatResizeConstraint(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatResizeConstraint(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatResizeConstraint()
{
  return &type metadata for FormatResizeConstraint;
}

ValueMetadata *type metadata accessor for FormatResizeConstraint.Dimension()
{
  return &type metadata for FormatResizeConstraint.Dimension;
}

uint64_t FormatSwitchNodeCase.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSwitchNodeCase.expression.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

uint64_t sub_1BAF58424(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSwitchNodeCase.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 24) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSwitchNodeCase.children.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSwitchNodeCase.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSwitchNodeCase.__deallocating_deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF58558(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF585F0(&qword_1EF2B6D40, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeCase);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF5858C(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF585F0(&qword_1ED3C9240, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeCase);
  a1[2] = sub_1BAF585F0(&qword_1ED3A6870, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeCase);
  result = sub_1BAF585F0(qword_1EF2B6D48, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeCase);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF585F0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSwitchNodeCase();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAF5862C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed20FormatSwitchNodeCaseC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BAF58638@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 24);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSwitchNodeCase()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAF58690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v8;

  v8 = a1;
  v6 = type metadata accessor for FormatCodingEmptyArrayStrategy(0, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>, v6);
  return FormatCodingDefault.init(wrappedValue:)((uint64_t)&v8, a5);
}

uint64_t FormatFeedConfigValue.init(selector:values:)@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _OWORD *a6@<X8>)
{
  *a6 = *a1;
  return sub_1BAF58690(a2, a3, a4, a5, (uint64_t)(a6 + 1));
}

uint64_t sub_1BAF58714(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x726F7463656C6573 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAF587FC(char a1)
{
  if ((a1 & 1) != 0)
    return 0x7365756C6176;
  else
    return 0x726F7463656C6573;
}

uint64_t sub_1BAF58830()
{
  char *v0;

  return sub_1BAF587FC(*v0);
}

uint64_t sub_1BAF58844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAF58714(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAF58874(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D6F68, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAF588A8(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8D6F68, a1);
  return sub_1BB87471C();
}

uint64_t FormatFeedConfigValue.encode(to:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];
  char v25;

  v4 = a2[2];
  v5 = a2[4];
  v19 = a2[3];
  v20 = v4;
  v18 = v5;
  v6 = type metadata accessor for FormatFeedConfigValue.CodingKeys(255, v4, v19, v5);
  MEMORY[0x1BCCE5B24](&unk_1BB8D6F68, v6);
  v7 = sub_1BB8741D0();
  v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = *v2;
  v21 = v2[1];
  v17 = v2[2];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  v24[0] = v10;
  v24[1] = v21;
  v25 = 0;
  sub_1BA68660C();
  v11 = v23;
  sub_1BB87414C();
  if (v11)
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v9, v7);
  v13 = v22;
  v24[0] = v17;
  v25 = 1;
  v14 = type metadata accessor for FormatCodingEmptyArrayStrategy(0, v20, v19, v18);
  v15 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>, v14);
  KeyedEncodingContainer.encode<A>(_:forKey:)((uint64_t)v24, (uint64_t)&v25, v7, v14, v15);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v9, v7);
}

uint64_t type metadata accessor for FormatFeedConfigValue.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFeedConfigValue.CodingKeys);
}

uint64_t FormatFeedConfigValue.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  char v28;

  v23 = a5;
  v24 = a4;
  v8 = type metadata accessor for FormatFeedConfigValue.CodingKeys(255, a2, a3, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB8D6F68, v8);
  v25 = sub_1BB874104();
  v9 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v11 = (char *)&v23 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v12 = v26;
  sub_1BB87468C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v13 = v9;
  v14 = v24;
  v28 = 0;
  sub_1BA69C13C();
  v15 = v25;
  sub_1BB874068();
  v26 = v27[0];
  v28 = 1;
  v16 = a3;
  v17 = v27[1];
  v18 = type metadata accessor for FormatCodingEmptyArrayStrategy(0, a2, v16, v14);
  swift_bridgeObjectRetain();
  v19 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>, v18);
  KeyedDecodingContainer.decode<A>(_:forKey:)(v18, v19, (uint64_t)v27);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v15);
  v20 = v27[0];
  v21 = v23;
  *v23 = v26;
  v21[1] = v17;
  v21[2] = v20;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF58CBC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  return FormatFeedConfigValue.init(from:)(a1, a2[2], a2[3], a2[4], a3);
}

uint64_t sub_1BAF58CDC(_QWORD *a1, _QWORD *a2)
{
  return FormatFeedConfigValue.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for FormatFeedConfigValue(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatFeedConfigValue);
}

uint64_t sub_1BAF58CFC(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF58D48 + 4 * byte_1BB8D6DF5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF58D7C + 4 * byte_1BB8D6DF0[v4]))();
}

uint64_t sub_1BAF58D7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF58D84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF58D8CLL);
  return result;
}

uint64_t sub_1BAF58D98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF58DA0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF58DA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF58DAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BAF58DB8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAF58DC8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAF58DD8()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t destroy for FormatDerivedDataResultBlock(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL)
    sub_1BA8EBC78(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDerivedDataResultBlock(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  __int128 v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int16 *)(a2 + 60);
  v6 = *(unsigned int *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v5 >> 9 <= 0x7EuLL)
  {
    v8 = v6 & 0xFFFF0000FFFFFFFFLL | ((unint64_t)(unsigned __int16)v5 << 32);
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    v11 = *(_QWORD *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 40);
    v13 = *(_QWORD *)(a2 + 48);
    sub_1BA8EBBF0(v9, v10, v11, v12, v13, v8);
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_QWORD *)(a1 + 32) = v11;
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = v13;
    *(_WORD *)(a1 + 60) = WORD2(v8);
    *(_DWORD *)(a1 + 56) = v8;
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
  }
  v14 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v14;
  v15 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v15;
  v16 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v16;
  v18 = *(_QWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v18;
  *(_QWORD *)(a1 + 120) = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataResultBlock(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32);
  if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL)
  {
    if (((v6 >> 41) & 0x7F) == 0x7F)
    {
      sub_1BAA14AE0(a1 + 16);
      v9 = *(_OWORD *)(a2 + 46);
      v10 = *(_OWORD *)(a2 + 32);
      *v4 = *v5;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 46) = v9;
    }
    else
    {
      v16 = *(_QWORD *)(a2 + 16);
      v17 = *(_QWORD *)(a2 + 24);
      v18 = *(_QWORD *)(a2 + 32);
      v19 = *(_QWORD *)(a2 + 40);
      v20 = *(_QWORD *)(a2 + 48);
      sub_1BA8EBBF0(v16, v17, v18, v19, v20, *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32));
      v21 = *(_QWORD *)(a1 + 16);
      v22 = *(_QWORD *)(a1 + 24);
      v23 = *(_QWORD *)(a1 + 32);
      v24 = *(_QWORD *)(a1 + 40);
      v25 = *(_QWORD *)(a1 + 48);
      v26 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
      *(_QWORD *)(a1 + 16) = v16;
      *(_QWORD *)(a1 + 24) = v17;
      *(_QWORD *)(a1 + 32) = v18;
      *(_QWORD *)(a1 + 40) = v19;
      *(_QWORD *)(a1 + 48) = v20;
      *(_DWORD *)(a1 + 56) = v6;
      *(_WORD *)(a1 + 60) = WORD2(v6);
      sub_1BA8EBC78(v21, v22, v23, v24, v25, v26);
    }
  }
  else if (((v6 >> 41) & 0x7F) == 0x7F)
  {
    v7 = *v5;
    v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
    *v4 = v7;
    *(_OWORD *)(a1 + 32) = v8;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 16);
    v12 = *(_QWORD *)(a2 + 24);
    v13 = *(_QWORD *)(a2 + 32);
    v14 = *(_QWORD *)(a2 + 40);
    v15 = *(_QWORD *)(a2 + 48);
    sub_1BA8EBBF0(v11, v12, v13, v14, v15, *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32));
    *(_QWORD *)(a1 + 16) = v11;
    *(_QWORD *)(a1 + 24) = v12;
    *(_QWORD *)(a1 + 32) = v13;
    *(_QWORD *)(a1 + 40) = v14;
    *(_QWORD *)(a1 + 48) = v15;
    *(_WORD *)(a1 + 60) = WORD2(v6);
    *(_DWORD *)(a1 + 56) = v6;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataResultBlock(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  __int128 v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(unsigned __int16 *)(a1 + 60) >> 9 <= 0x7EuLL)
  {
    v5 = *(unsigned int *)(a2 + 56) | ((unint64_t)*(unsigned __int16 *)(a2 + 60) << 32);
    if (((v5 >> 41) & 0x7F) != 0x7F)
    {
      v7 = *(unsigned int *)(a1 + 56) | ((unint64_t)*(unsigned __int16 *)(a1 + 60) << 32);
      v8 = *(_QWORD *)(a2 + 48);
      v9 = *(_QWORD *)(a1 + 16);
      v10 = *(_QWORD *)(a1 + 24);
      v11 = *(_QWORD *)(a1 + 32);
      v12 = *(_QWORD *)(a1 + 40);
      v13 = *(_QWORD *)(a1 + 48);
      v14 = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
      *(_OWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 48) = v8;
      *(_DWORD *)(a1 + 56) = v5;
      *(_WORD *)(a1 + 60) = WORD2(v5);
      sub_1BA8EBC78(v9, v10, v11, v12, v13, v7);
      goto LABEL_6;
    }
    sub_1BAA14AE0(a1 + 16);
  }
  v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 46) = *(_OWORD *)(a2 + 46);
LABEL_6:
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatDerivedDataResultBlock()
{
  return &type metadata for FormatDerivedDataResultBlock;
}

id sub_1BAF59300()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t ObjectType;
  char *v5;
  void *v6;
  _QWORD *v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  _QWORD v18[4];

  v1 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem];
  }
  else
  {
    ObjectType = swift_getObjectType();
    v18[3] = ObjectType;
    v18[0] = v0;
    v5 = v0;
    v6 = (void *)sub_1BB872970();
    if (ObjectType)
    {
      v7 = __swift_project_boxed_opaque_existential_1(v18, ObjectType);
      v8 = *(_QWORD *)(ObjectType - 8);
      v9 = MEMORY[0x1E0C80A78](v7);
      v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v8 + 16))(v11, v9);
      v12 = sub_1BB874380();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, ObjectType);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
    else
    {
      v12 = 0;
    }
    v13 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v14 = objc_msgSend(v13, sel_initWithTitle_style_target_action_, v6, 2, v12, sel_doNext, v18[0]);

    swift_unknownObjectRelease();
    v15 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v14;
    v3 = v14;

    v2 = 0;
  }
  v16 = v2;
  return v3;
}

void sub_1BAF59488()
{
  void *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t *v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  void *v18;
  id v19;
  uint64_t v20;
  void *v21;
  id v22;
  id v23;
  char *v24;
  id v25;
  void *v26;
  id v27;
  id v28;
  id v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  objc_class *v52;
  id v53;
  uint64_t v54;
  objc_super v55;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB8716B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB8716BC();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)((char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v55.receiver = v0;
  v55.super_class = ObjectType;
  objc_msgSendSuper2(&v55, sel_viewDidLoad, v8);
  v11 = objc_msgSend(v0, sel_view);
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  v12 = v11;
  v47 = v7;
  v48 = v6;
  v49 = v5;
  v50 = v3;
  v51 = v2;
  v52 = ObjectType;
  v13 = (void *)objc_opt_self();
  v14 = objc_msgSend(v13, sel_systemBackgroundColor);
  objc_msgSend(v12, sel_setBackgroundColor_, v14);

  v15 = objc_msgSend(v0, sel_navigationItem);
  v53 = v13;
  v16 = objc_msgSend(v13, sel_systemBackgroundColor);
  sub_1BB80F468(v15, (uint64_t)v16);

  v17 = objc_msgSend(v0, sel_navigationItem);
  v18 = (void *)sub_1BB872970();
  objc_msgSend(v17, sel_setTitle_, v18);

  v19 = objc_msgSend(v0, sel_navigationItem);
  sub_1BA65E330();
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB8856E0;
  v21 = (void *)sub_1BB872970();
  v22 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v21);

  if (!v22)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v23 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v24 = v0;
  v25 = objc_msgSend(v23, sel_initWithImage_style_target_action_, v22, 0, v24, sel_doDismissView);

  *(_QWORD *)(v20 + 32) = v25;
  v54 = v20;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v26 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setRightBarButtonItems_, v26);

  v27 = sub_1BAF59300();
  objc_msgSend(v27, sel_setEnabled_, 0);

  v28 = sub_1BAF59300();
  v29 = objc_msgSend(v53, sel_systemBlueColor);
  objc_msgSend(v28, sel_setTintColor_, v29);

  v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_1BB8856F0;
  *(_QWORD *)(v30 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
  *(_QWORD *)(v30 + 40) = sub_1BAF59300();
  v54 = v30;
  sub_1BB872DCC();
  v31 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setToolbarItems_, v31);

  v32 = *(void **)&v24[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView];
  objc_msgSend(v32, sel_setDataSource_, v24);
  objc_msgSend(v32, sel_setDelegate_, v24);
  objc_msgSend(v32, sel_setAlwaysBounceVertical_, 1);
  v33 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v32, sel_setTableFooterView_, v33);

  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  sub_1BB873234();
  type metadata accessor for DebugFormatMarkdownHeaderFooterView();
  sub_1BB873228();
  v34 = objc_msgSend(v24, sel_view);
  if (v34)
  {
    v35 = v34;
    objc_msgSend(v34, sel_addSubview_, v32);

    sub_1BB86FDCC();
    v36 = sub_1BB870C24();
    v37 = sub_1BB870C18();
    v38 = MEMORY[0x1E0DBAB20];
    v10[3] = v36;
    v10[4] = v38;
    *v10 = v37;
    v10[5] = 0x474E4944414F4CLL;
    v10[6] = 0xE700000000000000;
    v40 = v47;
    v39 = v48;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v47 + 104))(v10, *MEMORY[0x1E0DBC7E0], v48);
    v42 = v49;
    v41 = v50;
    v43 = v51;
    (*(void (**)(char *, _QWORD, uint64_t))(v50 + 104))(v49, *MEMORY[0x1E0DBC810], v51);
    sub_1BB86FDC0();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    v44 = (*(uint64_t (**)(uint64_t *, uint64_t))(v40 + 8))(v10, v39);
    MEMORY[0x1E0C80A78](v44);
    *(&v47 - 2) = (uint64_t)v24;
    sub_1BAF5B510(0);
    sub_1BB86EC14();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
    v45 = (void *)sub_1BB87345C();
    sub_1BB86E98C();
    swift_release();

    v46 = (void *)sub_1BB87345C();
    sub_1BB86E9B0();
    swift_release();
    swift_release();

    return;
  }
LABEL_7:
  __break(1u);
}

void sub_1BAF59D10()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  double v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  v1 = v0;
  v2 = sub_1BB86C67C();
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate];
  v8 = v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56];
  if (v8 != 255)
  {
    v9 = *((_QWORD *)v7 + 6);
    v19 = *((_QWORD *)v7 + 5);
    v20 = v9;
    v11 = *((_QWORD *)v7 + 3);
    v10 = *((_QWORD *)v7 + 4);
    v13 = *((_QWORD *)v7 + 1);
    v12 = *((_QWORD *)v7 + 2);
    *(_QWORD *)&v21 = *(_QWORD *)v7;
    v14 = v21;
    *((_QWORD *)&v21 + 1) = v13;
    v22 = v12;
    v23 = v11;
    v24 = v10;
    v25 = v19;
    v26 = v9;
    v27 = v8;
    v15 = *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editor];
    (*(void (**)(char *, char *, double))(v3 + 16))(v6, &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editorURL], v4);
    objc_allocWithZone((Class)type metadata accessor for DebugFormatCreatePackageViewController());
    swift_retain();
    sub_1BAF5B4E4(v14, v13, v12, v11, v10, v19, v20, v8);
    v16 = sub_1BB016868(v15, (uint64_t)v6, &v21);
    swift_release();
    v17 = objc_msgSend(v1, sel_navigationController);
    if (v17)
    {
      v18 = v17;
      objc_msgSend(v17, sel_pushViewController_animated_, v16, 1);

    }
  }
}

uint64_t sub_1BAF59FBC()
{
  return type metadata accessor for DebugFormatSelectPackageViewController();
}

uint64_t type metadata accessor for DebugFormatSelectPackageViewController()
{
  uint64_t result;

  result = qword_1EF2B6EC0;
  if (!qword_1EF2B6EC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAF5A000()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1BAF5A0CC(uint64_t a1)
{
  uint64_t v1;
  unint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  _QWORD *v26;
  char v28;
  id v29;
  void *v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  char **v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates);
  if (result >= *(_QWORD *)(v4 + 16))
  {
LABEL_23:
    __break(1u);
    return result;
  }
  v40 = v1;
  v5 = v4 + (result << 6);
  v37 = a1;
  v7 = *(_QWORD *)(v5 + 32);
  v6 = *(_QWORD *)(v5 + 40);
  v8 = *(_QWORD *)(v5 + 48);
  v9 = *(_QWORD *)(v5 + 56);
  v10 = *(_QWORD *)(v5 + 64);
  v11 = *(_QWORD *)(v5 + 72);
  v12 = *(_QWORD *)(v5 + 80);
  v13 = *(_BYTE *)(v5 + 88);
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  v38 = v7;
  v14 = v7;
  v15 = v8;
  v16 = v6;
  v39 = v10;
  sub_1BACB9C3C(v14, v6, v15, v9, v10, v11, v12, v13);
  v17 = (void *)sub_1BB87321C();
  v18 = objc_msgSend(v17, sel_textLabel);
  if (v18)
  {
    v19 = v18;
    objc_msgSend(v18, sel_setNumberOfLines_, 0);

  }
  v20 = objc_msgSend(v17, sel_textLabel, v37);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v21, sel_setFont_, v22);

  }
  v23 = objc_msgSend(v17, sel_textLabel);
  if (v23)
  {
    v24 = v23;
    sub_1BA7114A0();
    sub_1BB873ABC();
    v25 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v24, sel_setText_, v25);

  }
  objc_msgSend(v17, sel_setSelectionStyle_, 0);
  swift_bridgeObjectRetain();
  sub_1BACB9CB0(v38, v16, v15, v9, v39, v11, v12, v13);
  v26 = (_QWORD *)(v40 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate);
  if (*(unsigned __int8 *)(v40 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56) == 255)
  {
    v28 = 0;
  }
  else if (v38 == *v26 && v16 == v26[1])
  {
    v28 = 1;
  }
  else
  {
    v28 = sub_1BB874398();
  }
  swift_bridgeObjectRelease();
  v29 = objc_msgSend(v17, sel_imageView);
  if (v29)
  {
    v30 = v29;
    v31 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    v32 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v31);

    objc_msgSend(v30, sel_setImage_, v32);
  }
  v33 = (void *)objc_opt_self();
  v34 = v17;
  v35 = &selRef_systemBlueColor;
  if ((v28 & 1) == 0)
    v35 = &selRef_secondarySystemFillColor;
  v36 = objc_msgSend(v33, *v35);
  objc_msgSend(v34, sel_setTintColor_, v36);

  return (unint64_t)v34;
}

uint64_t sub_1BAF5A664(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void *v20;

  v17 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v17 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](v17);
  v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_debugFormatService);
  sub_1BB86C5BC();
  v18 = v8;
  v19 = v7;
  v20 = &unk_1E726F998;
  sub_1BB86EC14();
  *(_QWORD *)(swift_allocObject() + 16) = &unk_1E726F998;
  v9 = (void *)sub_1BB86E854();
  sub_1BAF5B510(0);
  sub_1BB86E974();
  swift_release();
  swift_release();

  v10 = v17;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v17);
  v11 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 10;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v12 + v11, v4, v10);
  *(_QWORD *)(v12 + ((v3 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = &unk_1E726F998;
  v13 = (void *)sub_1BB86E854();
  type metadata accessor for DebugFormatService();
  v14 = sub_1BB86EA28();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v10);
  return v14;
}

uint64_t sub_1BAF5A894(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 v27;
  id v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;

  v3 = sub_1BB8716B0();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB8716BC();
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  MEMORY[0x1E0C80A78](v5);
  v36 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB872E14();
  v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates;
  *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates) = v7;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + v8);
  v10 = *(_QWORD *)(v9 + 16);
  if (v10)
  {
    v11 = *(_QWORD *)(v9 + 32);
    v12 = *(_QWORD *)(v9 + 40);
    v14 = *(_QWORD *)(v9 + 48);
    v13 = *(_QWORD *)(v9 + 56);
    v15 = *(_QWORD *)(v9 + 64);
    v16 = *(_QWORD *)(v9 + 72);
    v17 = *(_QWORD *)(v9 + 80);
    v18 = *(_BYTE *)(v9 + 88);
    sub_1BACB9C3C(v11, v12, v14, v13, v15, v16, v17, v18);
    v10 = v11;
  }
  else
  {
    v12 = 0;
    v14 = 0;
    v13 = 0;
    v15 = 0;
    v16 = 0;
    v17 = 0;
    v18 = -1;
  }
  v19 = a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate;
  v20 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate);
  v21 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 8);
  v22 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 16);
  v23 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 24);
  v24 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 32);
  v25 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 40);
  v26 = *(_QWORD *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 48);
  *(_QWORD *)v19 = v10;
  *(_QWORD *)(v19 + 8) = v12;
  *(_QWORD *)(v19 + 16) = v14;
  *(_QWORD *)(v19 + 24) = v13;
  *(_QWORD *)(v19 + 32) = v15;
  *(_QWORD *)(v19 + 40) = v16;
  *(_QWORD *)(v19 + 48) = v17;
  v27 = *(_BYTE *)(v19 + 56);
  *(_BYTE *)(v19 + 56) = v18;
  sub_1BAF5B440(v20, v21, v22, v23, v24, v25, v26, v27);
  v28 = sub_1BAF59300();
  objc_msgSend(v28, sel_setEnabled_, *(unsigned __int8 *)(v19 + 56) != 255);

  objc_msgSend(*(id *)(a2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView), sel_reloadData);
  v30 = v36;
  v29 = v37;
  v31 = v38;
  (*(void (**)(char *, _QWORD, uint64_t))(v37 + 104))(v36, *MEMORY[0x1E0DBC7E8], v38);
  v33 = v39;
  v32 = v40;
  v34 = v41;
  (*(void (**)(char *, _QWORD, uint64_t))(v40 + 104))(v39, *MEMORY[0x1E0DBC808], v41);
  sub_1BB86FDC0();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v31);
}

uint64_t sub_1BAF5AB04@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF5AB10(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v16 = a2;
  v3 = sub_1BB8716B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB8716BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (qword_1EF2A6C58 != -1)
    swift_once();
  sub_1BA9719E4(a1, 0, 0, 0xD000000000000019, 0x80000001BB972850);
  v16 = *(_QWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_coverViewManager);
  *v10 = 0xD000000000000019;
  v10[1] = 0x80000001BB972850;
  v11 = sub_1BB86F538();
  v12 = MEMORY[0x1E0DB6A20];
  v10[5] = v11;
  v10[6] = v12;
  __swift_allocate_boxed_opaque_existential_0(v10 + 2);
  sub_1BB86F520();
  swift_getErrorValue();
  v10[7] = sub_1BB87456C();
  v10[8] = v13;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DBC7F8], v7);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DBC808], v3);
  sub_1BB86FDC0();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return (*(uint64_t (**)(_QWORD *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAF5ACFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v6 = *a1;
  v7 = a1[1];
  type metadata accessor for FormatJSONDecoder();
  swift_allocObject();
  v8 = swift_bridgeObjectRetain();
  sub_1BACC8234(v8);
  sub_1BAF5B574();
  sub_1BB86DC78();
  result = swift_release();
  if (!v3)
  {
    *a3 = v10;
    a3[1] = v6;
    a3[2] = v7;
    a3[3] = a2;
    swift_bridgeObjectRetain();
    return sub_1BA69D44C(v6, v7);
  }
  return result;
}

id sub_1BAF5ADC4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  objc_class *ObjectType;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  objc_super v20;

  v3 = v2;
  ObjectType = (objc_class *)swift_getObjectType();
  v7 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)&v3[v7] = v8;
  v9 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)&v3[v9] = v10;
  v11 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  v12 = v3;
  *(_QWORD *)&v3[v11] = sub_1BB86FDD8();
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates] = MEMORY[0x1E0DEE9D8];
  v13 = &v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate];
  *(_OWORD *)v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  *((_QWORD *)v13 + 6) = 0;
  v13[56] = -1;
  v14 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView;
  *(_QWORD *)&v12[v14] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem] = 0;
  *(_QWORD *)&v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editor] = a1;
  v15 = &v12[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editorURL];
  v16 = sub_1BB86C67C();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  swift_retain();

  v20.receiver = v12;
  v20.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v20, sel_initWithNibName_bundle_, 0, 0);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(a2, v16);
  return v18;
}

void sub_1BAF5AF84()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_QWORD *)&v1[v2] = v3;
  v4 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_debugFormatService;
  type metadata accessor for DebugFormatService();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)&v1[v4] = v5;
  v6 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v1[v6] = sub_1BB86FDD8();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates] = MEMORY[0x1E0DEE9D8];
  v7 = &v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate];
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_QWORD *)v7 + 6) = 0;
  v7[56] = -1;
  v8 = OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView;
  *(_QWORD *)&v1[v8] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 2, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController____lazy_storage___nextBarButtonItem] = 0;

  sub_1BB873EAC();
  __break(1u);
}

uint64_t sub_1BAF5B0D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  _QWORD v19[5];

  sub_1BAF5B454();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C304();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v19[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v19[-1] - v9;
  v11 = v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate;
  if (*(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56) == 255)
    return 0;
  v13 = *(_QWORD *)(v11 + 32);
  v12 = *(_QWORD *)(v11 + 40);
  sub_1BA4C010C(*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_editor)+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme, (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_1BB4F5928(v13, v12, v19, (uint64_t)v3, 13.0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1BAF5B4A8((uint64_t)v3);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v3, v4);
    type metadata accessor for DebugFormatMarkdownHeaderFooterView();
    v14 = sub_1BB873210();
    v15 = *(void **)(v14 + OBJC_IVAR____TtC8NewsFeed35DebugFormatMarkdownHeaderFooterView_label);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
    v16 = (void *)sub_1BB8734BC();
    objc_msgSend(v15, sel_setAttributedText_, v16);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  return v14;
}

unint64_t sub_1BAF5B328()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  unsigned __int8 v21;
  id v22;

  v1 = v0;
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_templates);
    if (result < *(_QWORD *)(v3 + 16))
    {
      v4 = v3 + (result << 6);
      v5 = *(_QWORD *)(v4 + 32);
      v6 = *(_QWORD *)(v4 + 40);
      v7 = *(_QWORD *)(v4 + 48);
      v8 = *(_QWORD *)(v4 + 56);
      v9 = *(_QWORD *)(v4 + 64);
      v10 = *(_QWORD *)(v4 + 72);
      v11 = *(_QWORD *)(v4 + 80);
      v12 = v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate;
      v13 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate);
      v14 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 8);
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 16);
      v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 24);
      v17 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 32);
      v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 40);
      v19 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 48);
      v20 = *(_BYTE *)(v4 + 88);
      v21 = *(_BYTE *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_selectedTemplate + 56);
      *(_QWORD *)v12 = v5;
      *(_QWORD *)(v12 + 8) = v6;
      *(_QWORD *)(v12 + 16) = v7;
      *(_QWORD *)(v12 + 24) = v8;
      *(_QWORD *)(v12 + 32) = v9;
      *(_QWORD *)(v12 + 40) = v10;
      *(_QWORD *)(v12 + 48) = v11;
      *(_BYTE *)(v12 + 56) = v20;
      sub_1BACB9C3C(v5, v6, v7, v8, v9, v10, v11, v20);
      sub_1BAF5B440(v13, v14, v15, v16, v17, v18, v19, v21);
      v22 = sub_1BAF59300();
      objc_msgSend(v22, sel_setEnabled_, *(unsigned __int8 *)(v12 + 56) != 255);

      return (unint64_t)objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatSelectPackageViewController_tableView), sel_reloadData);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAF5B440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF)
    return sub_1BACB9CB0(a1, a2, a3, a4, a5, a6, a7, a8);
  return a1;
}

void sub_1BAF5B454()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B6ED0)
  {
    sub_1BB86C304();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B6ED0);
  }
}

uint64_t sub_1BAF5B4A8(uint64_t a1)
{
  uint64_t v2;

  sub_1BAF5B454();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAF5B4E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  if (a8 != 0xFF)
    return sub_1BACB9C3C(a1, a2, a3, a4, a5, a6, a7, a8);
  return a1;
}

uint64_t sub_1BAF5B4F8()
{
  uint64_t v0;

  return sub_1BAF5A664(*(_QWORD *)(v0 + 16));
}

void sub_1BAF5B510(uint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2B6EF0)
  {
    v2 = sub_1BAF5B574();
    v3 = sub_1BAF5B5B8();
    v4 = type metadata accessor for DebugFormatServiceResult(a1, (uint64_t)&type metadata for DebugFormatTemplatesFetchResult, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2B6EF0);
  }
}

unint64_t sub_1BAF5B574()
{
  unint64_t result;

  result = qword_1EF2B6EF8;
  if (!qword_1EF2B6EF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB951ED8, &type metadata for DebugFormatTemplatesFetchResult);
    atomic_store(result, (unint64_t *)&qword_1EF2B6EF8);
  }
  return result;
}

unint64_t sub_1BAF5B5B8()
{
  unint64_t result;

  result = qword_1EF2B6F00;
  if (!qword_1EF2B6F00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB951EB0, &type metadata for DebugFormatTemplatesFetchResult);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F00);
  }
  return result;
}

uint64_t sub_1BAF5B5FC()
{
  return sub_1BB5781D8();
}

uint64_t sub_1BAF5B618()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF5B63C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;

  return sub_1BAF5ACFC(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BAF5B654()
{
  uint64_t v0;
  uint64_t v1;

  v1 = sub_1BB86C67C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF5B6C8(void *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  v5 = *(_QWORD *)(sub_1BB86C67C() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_1BB4914B4(a1, a2, *(_QWORD *)(v2 + 16), v2 + v6, *(_QWORD *)(v2 + ((*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFF8)));
}

void destroy for FormatMenuData(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 16);
  if (v2 <= 0xFD)
    sub_1BA726DA4(*(void **)(a1 + 8), v2);
}

uint64_t _s8NewsFeed14FormatMenuDataVwCP_0(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;
  uint64_t v4;
  unsigned int v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v3 = (_QWORD *)(a1 + 8);
  v4 = a2 + 8;
  v5 = *(unsigned __int8 *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    v6 = *(id *)v4;
    sub_1BA727178(*(id *)v4, v5);
    *(_QWORD *)(a1 + 8) = v6;
    *(_BYTE *)(a1 + 16) = v5;
  }
  else
  {
    *v3 = *(_QWORD *)v4;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(v4 + 8);
  }
  return a1;
}

uint64_t assignWithCopy for FormatMenuData(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unsigned int v6;
  id v7;
  char v8;
  id v9;
  id v10;
  void *v11;
  unsigned __int8 v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 8);
  v5 = a2 + 8;
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v10 = *(id *)v5;
      sub_1BA727178(*(id *)v5, v6);
      v11 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = v10;
      v12 = *(_BYTE *)(a1 + 16);
      *(_BYTE *)(a1 + 16) = v6;
      sub_1BA726DA4(v11, v12);
    }
    else
    {
      sub_1BAF5B8CC(a1 + 8);
      v8 = *(_BYTE *)(v5 + 8);
      *v4 = *(_QWORD *)v5;
      *(_BYTE *)(a1 + 16) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(id *)v5;
    sub_1BA727178(*(id *)v5, v6);
    *(_QWORD *)(a1 + 8) = v9;
    *(_BYTE *)(a1 + 16) = v6;
  }
  else
  {
    v7 = *(id *)v5;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(v5 + 8);
    *v4 = v7;
  }
  return a1;
}

uint64_t sub_1BAF5B8CC(uint64_t a1)
{
  destroy for FormatActivityItemsData(a1);
  return a1;
}

uint64_t assignWithTake for FormatMenuData(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unsigned int v5;
  unsigned int v6;
  void *v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a2 + 8);
  v5 = *(unsigned __int8 *)(a1 + 16);
  if (v5 <= 0xFD)
  {
    v6 = *(unsigned __int8 *)(a2 + 16);
    if (v6 <= 0xFD)
    {
      v7 = *(void **)(a1 + 8);
      *(_QWORD *)(a1 + 8) = *v4;
      *(_BYTE *)(a1 + 16) = v6;
      sub_1BA726DA4(v7, v5);
      return a1;
    }
    sub_1BAF5B8CC(a1 + 8);
  }
  *(_QWORD *)(a1 + 8) = *v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedGroupTag(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 17))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedGroupTag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 17) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatMenuData()
{
  return &type metadata for FormatMenuData;
}

void sub_1BAF5BA24(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  _QWORD v23[2];
  uint64_t v24;
  id v25;

  v2 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (id *)((char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = type metadata accessor for FeedItem(0);
  v5 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v23 - v9;
  v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
  v11 = *(_QWORD *)(a1 + 16);
  if (!v11)
    return;
  v12 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v13 = a1;
  v14 = *(_QWORD *)(v5 + 72);
  v23[1] = v13;
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1BA6DB2D0(v12, (uint64_t)v10);
    sub_1BA6DB2D0((uint64_t)v10, (uint64_t)v7);
    if (swift_getEnumCaseMultiPayload() != 3)
      break;
    sub_1BAAD0C68((uint64_t)v7, (uint64_t)v4);
    if ((objc_msgSend(v4[5], sel_hasThumbnail) & 1) != 0)
    {
      v21 = (void *)sub_1BB872970();
      v16 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v21);

      if (!v16)
        goto LABEL_16;
    }
    else
    {
      v15 = (void *)sub_1BB872970();
      v16 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v15);

      if (!v16)
        goto LABEL_15;
    }
    sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FeedHeadline);
LABEL_5:
    v17 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
    v18 = objc_msgSend(v16, sel_imageWithConfiguration_, v17);

    v19 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v18);
    v20 = objc_msgSend((id)objc_opt_self(), sel_attributedStringWithAttachment_, v19);

    objc_msgSend(v25, sel_appendAttributedString_, v20);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FeedItem);
    v12 += v14;
    if (!--v11)
    {
      swift_bridgeObjectRelease();
      return;
    }
  }
  v22 = (void *)sub_1BB872970();
  v16 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v22);

  if (v16)
  {
    sub_1BA4A2E80((uint64_t)v7, type metadata accessor for FeedItem);
    goto LABEL_5;
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
}

ValueMetadata *type metadata accessor for DebugFormatTestCase()
{
  return &type metadata for DebugFormatTestCase;
}

uint64_t Array<A>.hasWebEmbedDataSource.getter(uint64_t a1)
{
  uint64_t v1;
  _BYTE *i;
  int8x16_t v3;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return 0;
  for (i = (_BYTE *)(a1 + 72); ; i += 48)
  {
    if (*i == 17)
    {
      v3 = vorrq_s8(*(int8x16_t *)(i - 40), *(int8x16_t *)(i - 24));
      if (!(*(_QWORD *)&vorr_s8(*(int8x8_t *)v3.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v3, v3, 8uLL)) | *((_QWORD *)i - 1)))
        break;
    }
    if (!--v1)
      return 0;
  }
  return 1;
}

_QWORD *Array<A>.webArchives.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 40;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_BYTE *)(v2 + 32) == 15)
    {
      v6 = *(_QWORD *)(v2 - 8);
      v5 = *(_QWORD *)v2;
      v8 = *(_QWORD *)(v2 + 8);
      v7 = *(_QWORD *)(v2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BB38CE6C(0, v3[2] + 1, 1, v3);
      v10 = v3[2];
      v9 = v3[3];
      if (v10 >= v9 >> 1)
        v3 = sub_1BB38CE6C((_QWORD *)(v9 > 1), v10 + 1, 1, v3);
      v3[2] = v10 + 1;
      v4 = &v3[4 * v10];
      v4[4] = v6;
      v4[5] = v5;
      v4[6] = v8;
      v4[7] = v7;
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

_QWORD *Array<A>.resources.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 40;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*(_BYTE *)(v2 + 32) == 16)
    {
      v6 = *(_QWORD *)(v2 - 8);
      v5 = *(_QWORD *)v2;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BB38D1C8(0, v3[2] + 1, 1, v3);
      v8 = v3[2];
      v7 = v3[3];
      if (v8 >= v7 >> 1)
        v3 = sub_1BB38D1C8((_QWORD *)(v7 > 1), v8 + 1, 1, v3);
      v3[2] = v8 + 1;
      v4 = &v3[2 * v8];
      v4[4] = v6;
      v4[5] = v5;
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t Array<A>.tags.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 3)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.tagFeeds.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 4)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.articleLists.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 1)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.issues.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 2)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.scores.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 8)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.standings.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 9)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.brackets.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 10)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.boxScores.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 11)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.lineScores.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 12)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.injuryReports.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 13)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.keyPlayers.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 14)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.puzzles.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 5)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

uint64_t Array<A>.puzzleTypes.getter(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;

  result = MEMORY[0x1E0DEE9D8];
  v6 = MEMORY[0x1E0DEE9D8];
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v4 = (_BYTE *)(a1 + 72);
    do
    {
      if (*v4 == 6)
      {
        v5 = swift_retain();
        MEMORY[0x1BCCE36AC](v5);
        if (*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v4 += 48;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v6;
  }
  return result;
}

_QWORD *Array<A>.puzzleStatistics.getter(uint64_t a1)
{
  uint64_t v1;
  _BYTE *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = (_BYTE *)(swift_bridgeObjectRetain() + 72);
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    if (*v2 == 7)
    {
      v6 = *((_QWORD *)v2 - 2);
      v5 = *((_QWORD *)v2 - 1);
      v7 = *((_QWORD *)v2 - 4);
      v8 = *((_QWORD *)v2 - 3);
      v9 = *((_QWORD *)v2 - 5);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BB38CF8C(0, v3[2] + 1, 1, v3);
      v11 = v3[2];
      v10 = v3[3];
      if (v11 >= v10 >> 1)
        v3 = sub_1BB38CF8C((_QWORD *)(v10 > 1), v11 + 1, 1, v3);
      v3[2] = v11 + 1;
      v4 = &v3[5 * v11];
      v4[4] = v9;
      v4[5] = v7;
      v4[6] = v8;
      v4[7] = v6;
      v4[8] = v5;
    }
    v2 += 48;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

void FormatContentRequirement.sidecarDedupeIdentifier.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAF5CC80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_1BA4EF350(v4, v3, v2, v1, v0, 0);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  sub_1BA80A84C(v4, v3, v2, v1, v0, 0);
  return 0x3A656C6369747261;
}

uint64_t assignWithCopy for FormatContentRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1BA4EF350(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1BA80A84C(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for FormatContentRequirement(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1BA80A84C(v5, v7, v6, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContentRequirement(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xEF && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 239);
  v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 0x11)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatContentRequirement(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 239;
    if (a3 >= 0xEF)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xEF)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 40) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAF5D55C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) <= 0x10u)
    return *(unsigned __int8 *)(a1 + 40);
  else
    return (*(_DWORD *)a1 + 17);
}

uint64_t sub_1BAF5D574(uint64_t result, unsigned int a2)
{
  if (a2 >= 0x11)
  {
    *(_QWORD *)result = a2 - 17;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    LOBYTE(a2) = 17;
  }
  *(_BYTE *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentRequirement()
{
  return &type metadata for FormatContentRequirement;
}

void *__swift_memcpy385_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x181uLL);
}

uint64_t getEnumTagSinglePayload for HMultiLayoutItem(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 385))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 384);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for HMultiLayoutItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 376) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_BYTE *)(result + 384) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 385) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 385) = 0;
    if (a2)
      *(_BYTE *)(result + 384) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAF5D6A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 384);
}

uint64_t sub_1BAF5D6AC(uint64_t result, char a2)
{
  *(_BYTE *)(result + 384) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for HMultiLayoutItem()
{
  return &type metadata for HMultiLayoutItem;
}

uint64_t destroy for HGroupLayoutContext(uint64_t a1)
{
  unsigned int v2;
  void *v3;

  v2 = *(unsigned __int8 *)(a1 + 392);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  swift_release();
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 96) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 128))
        __swift_destroy_boxed_opaque_existential_1(a1 + 104);
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 160);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {

    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

    }
    if (*(_QWORD *)(a1 + 136) >= 0x11uLL)
      swift_bridgeObjectRelease();
    v3 = *(void **)(a1 + 152);
    if (v3)
    {

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 232) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 280) >= 0x11uLL)
        swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 296);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t initializeWithCopy for HGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  _QWORD *v24;
  unint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  id v31;
  id v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  id v41;
  _QWORD *v42;
  unint64_t v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;

  v4 = *(unsigned __int8 *)(a2 + 392);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if (v4 == 1)
  {
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v6;
    v7 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v7;
    v8 = *(_QWORD *)(a2 + 96);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 == 1)
    {
      v9 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v9;
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      v10 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v8;
      v18 = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      if (v18)
      {
        v19 = *(_QWORD *)(a2 + 136);
        *(_QWORD *)(a1 + 128) = v18;
        *(_QWORD *)(a1 + 136) = v19;
        (**(void (***)(uint64_t, uint64_t, uint64_t))(v18 - 8))(a1 + 104, a2 + 104, v18);
        *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      }
      else
      {
        v48 = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 120) = v48;
        *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      }
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
    }
    v49 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 184) = v49;
    (**(void (***)(uint64_t, uint64_t))(v49 - 8))(a1 + 160, a2 + 160);
    v50 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v50;
    v51 = *(_QWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *(_QWORD *)(a1 + 224) = v51;
    v53 = *(_QWORD *)(a2 + 232);
    v52 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = v53;
    *(_QWORD *)(a1 + 240) = v52;
    *(_BYTE *)(a1 + 392) = 1;
  }
  else
  {
    v12 = *(void **)(a2 + 8);
    v11 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = v12;
    *(_QWORD *)(a1 + 16) = v11;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v13 = *(void **)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v13;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    v14 = *(_QWORD *)(a2 + 88);
    swift_retain();
    v15 = v12;
    swift_bridgeObjectRetain();
    v16 = v13;
    if (v14 == 1)
    {
      v17 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v17;
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v14;
      v20 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = v20;
      v22 = *(void **)(a2 + 112);
      v21 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = v22;
      *(_QWORD *)(a1 + 120) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23 = v22;
    }
    v24 = (_QWORD *)(a2 + 128);
    v25 = *(_QWORD *)(a2 + 136);
    if (v25 >= 0x11)
    {
      *(_QWORD *)(a1 + 128) = *v24;
      *(_QWORD *)(a1 + 136) = v25;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(a1 + 128) = *(_OWORD *)v24;
    }
    v26 = *(void **)(a2 + 152);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    if (v26)
    {
      v27 = *(_QWORD *)(a2 + 160);
      v28 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 152) = v26;
      *(_QWORD *)(a1 + 160) = v27;
      *(_QWORD *)(a1 + 168) = v28;
      *(_WORD *)(a1 + 176) = *(_WORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
      v29 = *(void **)(a2 + 208);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = v29;
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      v30 = *(_QWORD *)(a2 + 232);
      v31 = v26;
      swift_bridgeObjectRetain();
      v32 = v29;
      if (v30 == 1)
      {
        v33 = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 240) = v33;
        *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
      }
      else
      {
        *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
        *(_QWORD *)(a1 + 232) = v30;
        v38 = *(_QWORD *)(a2 + 248);
        *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
        *(_QWORD *)(a1 + 248) = v38;
        v40 = *(void **)(a2 + 256);
        v39 = *(_QWORD *)(a2 + 264);
        *(_QWORD *)(a1 + 256) = v40;
        *(_QWORD *)(a1 + 264) = v39;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41 = v40;
      }
      v42 = (_QWORD *)(a2 + 272);
      v43 = *(_QWORD *)(a2 + 280);
      if (v43 >= 0x11)
      {
        *(_QWORD *)(a1 + 272) = *v42;
        *(_QWORD *)(a1 + 280) = v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 272) = *(_OWORD *)v42;
      }
      *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    }
    else
    {
      v34 = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 264) = v34;
      *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
      v35 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v35;
      v36 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v36;
      v37 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v37;
    }
    v44 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 320) = v44;
    (**(void (***)(uint64_t, uint64_t))(v44 - 8))(a1 + 296, a2 + 296);
    v45 = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = v45;
    v46 = *(_QWORD *)(a2 + 360);
    *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 360) = v46;
    v47 = *(_QWORD *)(a2 + 376);
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = v47;
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_BYTE *)(a1 + 392) = 0;
    swift_retain();
  }
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HGroupLayoutContext(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  void *v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  char v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  id v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  void *v38;
  id v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 392);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    swift_release();
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 96) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 128))
          __swift_destroy_boxed_opaque_existential_1(a1 + 104);
      }
      __swift_destroy_boxed_opaque_existential_1(a1 + 160);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(a1 + 136) >= 0x11uLL)
        swift_bridgeObjectRelease();
      v5 = *(void **)(a1 + 152);
      if (v5)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(a1 + 232) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(a1 + 280) >= 0x11uLL)
          swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1(a1 + 296);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_release();
    v6 = *(unsigned __int8 *)(a2 + 392);
    if (v6 >= 2)
      v6 = *(_DWORD *)a2 + 2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    if (v6 == 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      v7 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v8 = *(_QWORD *)(a2 + 96);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 == 1)
      {
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        v9 = *(_OWORD *)(a2 + 104);
        v10 = *(_OWORD *)(a2 + 120);
        v11 = *(_OWORD *)(a2 + 136);
        *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
        *(_OWORD *)(a1 + 120) = v10;
        *(_OWORD *)(a1 + 136) = v11;
        *(_OWORD *)(a1 + 104) = v9;
      }
      else
      {
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        v20 = *(_QWORD *)(a2 + 128);
        swift_bridgeObjectRetain();
        if (v20)
        {
          *(_QWORD *)(a1 + 128) = v20;
          *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8))(a1 + 104, a2 + 104, v20);
          v21 = *(_BYTE *)(a2 + 152);
          *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
          *(_BYTE *)(a1 + 152) = v21;
        }
        else
        {
          v41 = *(_OWORD *)(a2 + 104);
          v42 = *(_OWORD *)(a2 + 120);
          v43 = *(_OWORD *)(a2 + 136);
          *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
          *(_OWORD *)(a1 + 120) = v42;
          *(_OWORD *)(a1 + 136) = v43;
          *(_OWORD *)(a1 + 104) = v41;
        }
      }
      v44 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 184) = v44;
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      (**(void (***)(uint64_t, uint64_t))(v44 - 8))(a1 + 160, a2 + 160);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 392) = 1;
    }
    else
    {
      v12 = *(void **)(a2 + 8);
      *(_QWORD *)(a1 + 8) = v12;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
      v13 = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v14 = *(void **)(a2 + 64);
      *(_QWORD *)(a1 + 64) = v14;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      v15 = *(_QWORD *)(a2 + 88);
      swift_retain();
      v16 = v12;
      swift_bridgeObjectRetain();
      v17 = v14;
      if (v15 == 1)
      {
        v18 = *(_OWORD *)(a2 + 80);
        v19 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v19;
        *(_OWORD *)(a1 + 80) = v18;
      }
      else
      {
        *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
        *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
        *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
        v22 = *(void **)(a2 + 112);
        *(_QWORD *)(a1 + 112) = v22;
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v23 = v22;
      }
      if (*(_QWORD *)(a2 + 136) >= 0x11uLL)
      {
        *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
        *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      }
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      v24 = *(void **)(a2 + 152);
      if (v24)
      {
        *(_QWORD *)(a1 + 152) = v24;
        *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
        *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
        *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
        *(_BYTE *)(a1 + 177) = *(_BYTE *)(a2 + 177);
        v25 = *(_QWORD *)(a2 + 184);
        *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
        *(_QWORD *)(a1 + 184) = v25;
        *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
        v26 = *(void **)(a2 + 208);
        *(_QWORD *)(a1 + 208) = v26;
        *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
        v27 = *(_QWORD *)(a2 + 232);
        v28 = v24;
        swift_bridgeObjectRetain();
        v29 = v26;
        if (v27 == 1)
        {
          v30 = *(_OWORD *)(a2 + 224);
          v31 = *(_OWORD *)(a2 + 256);
          *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
          *(_OWORD *)(a1 + 256) = v31;
          *(_OWORD *)(a1 + 224) = v30;
        }
        else
        {
          *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
          *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
          *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
          *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
          v38 = *(void **)(a2 + 256);
          *(_QWORD *)(a1 + 256) = v38;
          *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v39 = v38;
        }
        if (*(_QWORD *)(a2 + 280) >= 0x11uLL)
        {
          *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
          *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
        }
        *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
      }
      else
      {
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        v32 = *(_OWORD *)(a2 + 168);
        v33 = *(_OWORD *)(a2 + 184);
        v34 = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 216) = v34;
        *(_OWORD *)(a1 + 168) = v32;
        *(_OWORD *)(a1 + 184) = v33;
        v35 = *(_OWORD *)(a2 + 232);
        v36 = *(_OWORD *)(a2 + 248);
        v37 = *(_OWORD *)(a2 + 264);
        *(_OWORD *)(a1 + 273) = *(_OWORD *)(a2 + 273);
        *(_OWORD *)(a1 + 248) = v36;
        *(_OWORD *)(a1 + 264) = v37;
        *(_OWORD *)(a1 + 232) = v35;
      }
      v40 = *(_QWORD *)(a2 + 320);
      *(_QWORD *)(a1 + 320) = v40;
      *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
      (**(void (***)(uint64_t, uint64_t))(v40 - 8))(a1 + 296, a2 + 296);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
      *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_BYTE *)(a1 + 392) = 0;
      swift_retain();
    }
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  return a1;
}

void *__swift_memcpy393_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x189uLL);
}

unsigned __int8 *assignWithTake for HGroupLayoutContext(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;
  void *v5;
  unsigned int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  char v14;

  if (a1 != a2)
  {
    v4 = a1[392];
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    swift_release();
    if (v4 == 1)
    {
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)a1 + 12) != 1)
      {
        swift_bridgeObjectRelease();
        if (*((_QWORD *)a1 + 16))
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 104));
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 160));
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {

      swift_bridgeObjectRelease();
      if (*((_QWORD *)a1 + 11) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*((_QWORD *)a1 + 17) >= 0x11uLL)
        swift_bridgeObjectRelease();
      v5 = (void *)*((_QWORD *)a1 + 19);
      if (v5)
      {

        swift_bridgeObjectRelease();
        if (*((_QWORD *)a1 + 29) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*((_QWORD *)a1 + 35) >= 0x11uLL)
          swift_bridgeObjectRelease();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 296));
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
    }
    swift_release();
    v6 = a2[392];
    if (v6 >= 2)
      v6 = *(_DWORD *)a2 + 2;
    if (v6 == 1)
    {
      v7 = *((_OWORD *)a2 + 13);
      *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
      *((_OWORD *)a1 + 13) = v7;
      *((_OWORD *)a1 + 14) = *((_OWORD *)a2 + 14);
      *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
      v8 = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 8) = *((_OWORD *)a2 + 8);
      *((_OWORD *)a1 + 9) = v8;
      v9 = *((_OWORD *)a2 + 11);
      *((_OWORD *)a1 + 10) = *((_OWORD *)a2 + 10);
      *((_OWORD *)a1 + 11) = v9;
      v10 = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = v10;
      v11 = *((_OWORD *)a2 + 7);
      *((_OWORD *)a1 + 6) = *((_OWORD *)a2 + 6);
      *((_OWORD *)a1 + 7) = v11;
      v12 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v12;
      v13 = *((_OWORD *)a2 + 3);
      v14 = 1;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)a1 + 3) = v13;
    }
    else
    {
      memcpy(a1, a2, 0x188uLL);
      v14 = 0;
    }
    a1[392] = v14;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HGroupLayoutContext(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 393))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 392);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for HGroupLayoutContext(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 368) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 377) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 393) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 393) = 0;
    if (a2)
      *(_BYTE *)(result + 392) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAF5E56C(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 392);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1BAF5E588(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 384) = 0;
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 368) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
  }
  *(_BYTE *)(result + 392) = a2;
  return result;
}

ValueMetadata *type metadata accessor for HGroupLayoutContext()
{
  return &type metadata for HGroupLayoutContext;
}

uint64_t sub_1BAF5E5EC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB8003EC(*a1, *a2);
}

uint64_t sub_1BAF5E5F8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF5E68C()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF5E6FC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF5E78C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF5F6CC();
  *a1 = result;
  return result;
}

void sub_1BAF5E7B8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE400000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6575737369;
  if (v2 != 1)
  {
    v5 = 0x6C656E6E616863;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 1701869940;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAF5E80C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6575737369;
  if (*v0 != 1)
    v1 = 0x6C656E6E616863;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_1BAF5E85C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF5F6CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF5E880()
{
  sub_1BAF5F23C();
  return sub_1BB874710();
}

uint64_t sub_1BAF5E8A8()
{
  sub_1BAF5F23C();
  return sub_1BB87471C();
}

uint64_t sub_1BAF5E8D0(char *a1, char *a2)
{
  return sub_1BB80034C(*a1, *a2);
}

uint64_t sub_1BAF5E8DC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF5E958()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF5E9B0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF5EA28@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAF5EA84(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6575737369;
  if (*v1)
    v2 = 0x6C656E6E616863;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAF5EAC0()
{
  sub_1BAF5F714();
  return sub_1BB872D60();
}

uint64_t sub_1BAF5EB1C()
{
  sub_1BAF5F714();
  return sub_1BB872D0C();
}

void *sub_1BAF5EB68@<X0>(void *a1@<X8>)
{
  void *v1;
  const void *v3;
  _OWORD v5[24];
  _OWORD __dst[25];
  _BYTE __src[392];
  _BYTE v8[392];

  sub_1BAF5F314(v1, __src);
  sub_1BAF5F314(__src, v8);
  if (sub_1BAF5D6A4((uint64_t)v8) == 1)
  {
    nullsub_1();
    sub_1BAA8B27C();
    sub_1BB86D96C();
    __dst[8] = v5[8];
    __dst[9] = v5[9];
    __dst[10] = v5[10];
    __dst[11] = v5[11];
    __dst[4] = v5[4];
    __dst[5] = v5[5];
    __dst[6] = v5[6];
    __dst[7] = v5[7];
    __dst[0] = v5[0];
    __dst[1] = v5[1];
    __dst[2] = v5[2];
    __dst[3] = v5[3];
    sub_1BAF5F308((uint64_t)__dst);
  }
  else
  {
    v3 = (const void *)nullsub_1();
    memcpy(__dst, v3, 0x180uLL);
    sub_1BA915D30();
    sub_1BB86D96C();
    memcpy(__dst, v5, 0x180uLL);
    sub_1BAF5F328((uint64_t)__dst);
  }
  return sub_1BAF5F314(__dst, a1);
}

uint64_t sub_1BAF5ECE4@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  void *v11;
  _OWORD v12[24];
  _OWORD v13[25];
  _BYTE v14[400];
  char v15;
  char v16;
  char v17;

  v11 = a2;
  sub_1BAF5F330(0, &qword_1EF2B6F20, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF5F23C();
  sub_1BB87468C();
  if (!v2)
  {
    v16 = 0;
    sub_1BAF5F280();
    sub_1BB8740D4();
    if ((v17 & 1) != 0)
    {
      v15 = 2;
      sub_1BAF5F2C4();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      v13[8] = v12[8];
      v13[9] = v12[9];
      v13[10] = v12[10];
      v13[11] = v12[11];
      v13[4] = v12[4];
      v13[5] = v12[5];
      v13[6] = v12[6];
      v13[7] = v12[7];
      v13[0] = v12[0];
      v13[1] = v12[1];
      v13[2] = v12[2];
      v13[3] = v12[3];
      sub_1BAF5F308((uint64_t)v13);
    }
    else
    {
      v15 = 1;
      sub_1BA916320();
      sub_1BB8740D4();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      memcpy(v13, v12, 0x180uLL);
      sub_1BAF5F328((uint64_t)v13);
    }
    sub_1BAF5F314(v13, v14);
    sub_1BAF5F314(v14, v11);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAF5EF20(_QWORD *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int v9;
  __int128 *v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _OWORD v21[24];
  _BYTE v22[392];
  _BYTE v23[400];
  char v24;

  sub_1BAF5F330(0, &qword_1EF2B6F40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v21 - v7;
  sub_1BAF5F314(v1, v22);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF5F23C();
  sub_1BB8746C8();
  sub_1BAF5F314(v22, v23);
  v9 = sub_1BAF5D6A4((uint64_t)v23);
  v10 = (__int128 *)nullsub_1();
  if (v9 == 1)
  {
    LOBYTE(v21[0]) = 1;
    v24 = 0;
    sub_1BAF5F38C();
    sub_1BB8741AC();
    if (!v2)
    {
      v11 = *v10;
      v12 = v10[1];
      v13 = v10[3];
      v21[2] = v10[2];
      v21[3] = v13;
      v21[0] = v11;
      v21[1] = v12;
      v14 = v10[4];
      v15 = v10[5];
      v16 = v10[7];
      v21[6] = v10[6];
      v21[7] = v16;
      v21[4] = v14;
      v21[5] = v15;
      v17 = v10[8];
      v18 = v10[9];
      v19 = v10[11];
      v21[10] = v10[10];
      v21[11] = v19;
      v21[8] = v17;
      v21[9] = v18;
      v24 = 2;
      sub_1BAF5F3D0();
LABEL_6:
      sub_1BB8741AC();
    }
  }
  else
  {
    LOBYTE(v21[0]) = 0;
    v24 = 0;
    sub_1BAF5F38C();
    sub_1BB8741AC();
    if (!v2)
    {
      memcpy(v21, v10, sizeof(v21));
      v24 = 1;
      sub_1BA9163E0();
      goto LABEL_6;
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1BAF5F138@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  return sub_1BAF5ECE4(a1, a2);
}

uint64_t sub_1BAF5F14C(_QWORD *a1)
{
  return sub_1BAF5EF20(a1);
}

unint64_t sub_1BAF5F168()
{
  unint64_t result;

  result = qword_1EF2B6F08;
  if (!qword_1EF2B6F08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D71E4, &type metadata for HMultiLayoutItem);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F08);
  }
  return result;
}

unint64_t sub_1BAF5F1B0()
{
  unint64_t result;

  result = qword_1EF2B6F10;
  if (!qword_1EF2B6F10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D71BC, &type metadata for HMultiLayoutItem);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F10);
  }
  return result;
}

unint64_t sub_1BAF5F1F8()
{
  unint64_t result;

  result = qword_1EF2B6F18;
  if (!qword_1EF2B6F18)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7194, &type metadata for HMultiLayoutItem);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F18);
  }
  return result;
}

unint64_t sub_1BAF5F23C()
{
  unint64_t result;

  result = qword_1EF2B6F28;
  if (!qword_1EF2B6F28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D743C, &type metadata for HMultiLayoutItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F28);
  }
  return result;
}

unint64_t sub_1BAF5F280()
{
  unint64_t result;

  result = qword_1EF2B6F30;
  if (!qword_1EF2B6F30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7414, &type metadata for HMultiLayoutItem.CodedType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F30);
  }
  return result;
}

unint64_t sub_1BAF5F2C4()
{
  unint64_t result;

  result = qword_1EF2B6F38;
  if (!qword_1EF2B6F38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverChannelViewLayout.Attributes, &type metadata for CoverChannelViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F38);
  }
  return result;
}

uint64_t sub_1BAF5F308(uint64_t result)
{
  *(_BYTE *)(result + 384) = 1;
  return result;
}

void *sub_1BAF5F314(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x181uLL);
}

uint64_t sub_1BAF5F328(uint64_t result)
{
  *(_BYTE *)(result + 384) = 0;
  return result;
}

void sub_1BAF5F330(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF5F23C();
    v7 = a3(a1, &type metadata for HMultiLayoutItem.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAF5F38C()
{
  unint64_t result;

  result = qword_1EF2B6F48;
  if (!qword_1EF2B6F48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D73EC, &type metadata for HMultiLayoutItem.CodedType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F48);
  }
  return result;
}

unint64_t sub_1BAF5F3D0()
{
  unint64_t result;

  result = qword_1EF2B6F50;
  if (!qword_1EF2B6F50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CoverChannelViewLayout.Attributes, &type metadata for CoverChannelViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F50);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for HMultiLayoutItem.CodedType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF5F460 + 4 * byte_1BB8D7145[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF5F494 + 4 * byte_1BB8D7140[v4]))();
}

uint64_t sub_1BAF5F494(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF5F49C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF5F4A4);
  return result;
}

uint64_t sub_1BAF5F4B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF5F4B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF5F4BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF5F4C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HMultiLayoutItem.CodedType()
{
  return &type metadata for HMultiLayoutItem.CodedType;
}

uint64_t storeEnumTagSinglePayload for HMultiLayoutItem.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF5F52C + 4 * byte_1BB8D714F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF5F560 + 4 * byte_1BB8D714A[v4]))();
}

uint64_t sub_1BAF5F560(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF5F568(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF5F570);
  return result;
}

uint64_t sub_1BAF5F57C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF5F584);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF5F588(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF5F590(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HMultiLayoutItem.CodingKeys()
{
  return &type metadata for HMultiLayoutItem.CodingKeys;
}

unint64_t sub_1BAF5F5B0()
{
  unint64_t result;

  result = qword_1EF2B6F58;
  if (!qword_1EF2B6F58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7324, &type metadata for HMultiLayoutItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F58);
  }
  return result;
}

unint64_t sub_1BAF5F5F8()
{
  unint64_t result;

  result = qword_1EF2B6F60;
  if (!qword_1EF2B6F60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D73C4, &type metadata for HMultiLayoutItem.CodedType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F60);
  }
  return result;
}

unint64_t sub_1BAF5F640()
{
  unint64_t result;

  result = qword_1EF2B6F68;
  if (!qword_1EF2B6F68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D725C, &type metadata for HMultiLayoutItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F68);
  }
  return result;
}

unint64_t sub_1BAF5F688()
{
  unint64_t result;

  result = qword_1EF2B6F70;
  if (!qword_1EF2B6F70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7284, &type metadata for HMultiLayoutItem.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F70);
  }
  return result;
}

uint64_t sub_1BAF5F6CC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1BAF5F714()
{
  unint64_t result;

  result = qword_1EF2B6F78;
  if (!qword_1EF2B6F78)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D734C, &type metadata for HMultiLayoutItem.CodedType);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F78);
  }
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLoadingEvent()
{
  return &type metadata for PuzzleLoadingEvent;
}

uint64_t _s8NewsFeed18PuzzleLoadingEventOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF5F7B8 + 4 * byte_1BB8D7495[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF5F7EC + 4 * byte_1BB8D7490[v4]))();
}

uint64_t sub_1BAF5F7EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF5F7F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF5F7FCLL);
  return result;
}

uint64_t sub_1BAF5F808(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF5F810);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAF5F814(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF5F81C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleLoadingState()
{
  return &type metadata for PuzzleLoadingState;
}

unint64_t sub_1BAF5F840()
{
  unint64_t result;

  result = qword_1EF2B6F80;
  if (!qword_1EF2B6F80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D753C, &type metadata for PuzzleLoadingState);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F80);
  }
  return result;
}

unint64_t sub_1BAF5F888()
{
  unint64_t result;

  result = qword_1EF2BD270;
  if (!qword_1EF2BD270)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D74D4, &type metadata for PuzzleLoadingState);
    atomic_store(result, (unint64_t *)&qword_1EF2BD270);
  }
  return result;
}

uint64_t sub_1BAF5F8CC(char a1)
{
  return sub_1BA86483C((uint64_t)*(&off_1E72D0D58 + a1));
}

uint64_t sub_1BAF5F8E0()
{
  char *v0;

  return sub_1BAF5F8CC(*v0);
}

void sub_1BAF5F8E8(char *a1@<X8>)
{
  _BYTE *v1;
  char v2;

  if (*v1)
    v2 = 2;
  else
    v2 = 1;
  *a1 = v2;
}

unint64_t sub_1BAF5F904()
{
  unint64_t result;

  result = qword_1EF2B6F88;
  if (!qword_1EF2B6F88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D75E4, &type metadata for PuzzleLoadingEvent);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F88);
  }
  return result;
}

uint64_t GapOfflineViewRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GapOfflineViewRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t _s8NewsFeed22GapOfflineViewRendererC6render3for4with2inyAA0cdE6LayoutV7ContextV_AI10AttributesVAA0cdE0CtF_0(uint64_t a1, double *a2, uint64_t a3)
{
  double v4;
  double v5;
  double v6;
  double v7;
  void *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *boxed_opaque_existential_0;
  id v12;
  uint64_t v14[4];
  _QWORD v15[3];
  uint64_t v16;

  v4 = a2[4];
  v5 = a2[5];
  v6 = a2[6];
  v7 = a2[7];
  sub_1BA4C010C(a1 + 88, (uint64_t)v15);
  v8 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed14GapOfflineView_offlineLabel);
  objc_msgSend(v8, sel_setFrame_, v4, v5, v6, v7);
  v9 = v16;
  v10 = __swift_project_boxed_opaque_existential_1(v15, v16);
  v14[3] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
  (*(void (**)(uint64_t *, _QWORD *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, v10, v9);
  v12 = (id)sub_1BB2D2ECC((uint64_t)v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  objc_msgSend(v8, sel_setAttributedText_, v12);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t dispatch thunk of GapOfflineViewRendererType.render(for:with:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t method lookup function for GapOfflineViewRenderer()
{
  return swift_lookUpClassMethod();
}

id PuzzleColorTheme.primaryColor.getter()
{
  id *v0;

  return *v0;
}

id PuzzleColorTheme.darkStylePrimaryColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

void PuzzleColorTheme.init(puzzleType:)(void *a1@<X0>, _QWORD *a2@<X8>)
{
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;

  v4 = objc_msgSend(a1, sel_puzzlePrimaryColor);
  if (v4)
  {
    v5 = v4;
    v6 = objc_msgSend(v4, sel_ne_color);

    v7 = objc_msgSend(a1, sel_darkStylePuzzlePrimaryColor);
    if (v7)
    {
      v8 = v7;
      v9 = objc_msgSend(v7, sel_ne_color);

      swift_unknownObjectRelease();
      *a2 = v6;
      a2[1] = v9;
      return;
    }
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v14 = sub_1BB86EFEC();
    __swift_project_value_buffer(v14, (uint64_t)qword_1ED476918);
    v15 = sub_1BB86EFC8();
    v16 = sub_1BB8732F4();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v17 = 0;
      _os_log_impl(&dword_1BA493000, v15, v16, "PuzzleColorTheme: invalid darkStylePrimaryColor", v17, 2u);
      MEMORY[0x1BCCE5C38](v17, -1, -1);
    }

    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_1ED3C0B50 != -1)
      swift_once();
    v10 = sub_1BB86EFEC();
    __swift_project_value_buffer(v10, (uint64_t)qword_1ED476918);
    v11 = sub_1BB86EFC8();
    v12 = sub_1BB8732F4();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v13 = 0;
      _os_log_impl(&dword_1BA493000, v11, v12, "PuzzleColorTheme: invalid puzzlePrimaryColor", v13, 2u);
      MEMORY[0x1BCCE5C38](v13, -1, -1);
    }

    swift_unknownObjectRelease();
  }
  *a2 = 0;
  a2[1] = 0;
}

ValueMetadata *type metadata accessor for PuzzleColorTheme()
{
  return &type metadata for PuzzleColorTheme;
}

void static FormatCodingAlwaysRunModeStrategy.defaultValue.getter(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 2;
  *(_BYTE *)(a1 + 4) = 2;
}

BOOL static FormatCodingAlwaysRunModeStrategy.shouldEncode(wrappedValue:)(uint64_t a1)
{
  return *(_DWORD *)a1 != 2 || *(_BYTE *)(a1 + 4) != 2;
}

unint64_t sub_1BAF5FCDC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF5FD00();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF5FD00()
{
  unint64_t result;

  result = qword_1EF2B6F90;
  if (!qword_1EF2B6F90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingAlwaysRunModeStrategy, &type metadata for FormatCodingAlwaysRunModeStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B6F90);
  }
  return result;
}

void sub_1BAF5FD4C(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 2;
  *(_BYTE *)(a1 + 4) = 2;
}

BOOL sub_1BAF5FD5C(uint64_t a1)
{
  return *(_DWORD *)a1 != 2 || *(_BYTE *)(a1 + 4) != 2;
}

ValueMetadata *type metadata accessor for FormatCodingAlwaysRunModeStrategy()
{
  return &type metadata for FormatCodingAlwaysRunModeStrategy;
}

uint64_t FollowingCommandContext.init(tag:shouldAutoEnableNotifications:shouldShowChannelUpsell:)@<X0>(uint64_t result@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 9) = a3;
  return result;
}

{
  __int16 v4;
  __int16 v5;

  if ((a3 & 1) != 0)
    v4 = 256;
  else
    v4 = 0;
  v5 = v4 & 0xFFFE | a2 & 1;
  if (!result)
    v5 = 0;
  *(_QWORD *)a4 = result;
  *(_WORD *)(a4 + 8) = v5;
  return result;
}

uint64_t static UIActivityType.follow.getter()
{
  return sub_1BB872970();
}

NewsFeed::FollowingCommandState_optional __swiftcall FollowingCommandState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v1;
  NewsFeed::FollowingCommandState_optional v2;

  v1 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v1 == 1)
    v2.value = NewsFeed_FollowingCommandState_notFollowing;
  else
    v2.value = NewsFeed_FollowingCommandState_unknownDefault;
  if (v1)
    return v2;
  else
    return 0;
}

uint64_t FollowingCommandState.rawValue.getter(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6F6C6C6F46746F6ELL;
  else
    return 0x6E69776F6C6C6F66;
}

uint64_t sub_1BAF5FE44(_BYTE *a1, _BYTE *a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v8;

  v2 = *a1 == 0;
  if (*a1)
    v3 = 0x6F6C6C6F46746F6ELL;
  else
    v3 = 0x6E69776F6C6C6F66;
  if (v2)
    v4 = 0xE900000000000067;
  else
    v4 = 0xEC000000676E6977;
  if (*a2)
    v5 = 0x6F6C6C6F46746F6ELL;
  else
    v5 = 0x6E69776F6C6C6F66;
  if (*a2)
    v6 = 0xEC000000676E6977;
  else
    v6 = 0xE900000000000067;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BAF5FEF8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF5FF84()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF5FFEC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF60074@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAF600D0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x6E69776F6C6C6F66;
  if (*v1)
    v2 = 0x6F6C6C6F46746F6ELL;
  v3 = 0xE900000000000067;
  if (*v1)
    v3 = 0xEC000000676E6977;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAF6011C()
{
  sub_1BAF612CC();
  return sub_1BB872CE8();
}

uint64_t FollowingNotificationContext.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FollowingNotificationContext.result.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t static FollowingNotificationContext.Result.== infix(_:_:)(char a1, unsigned __int8 a2)
{
  uint64_t result;

  switch(a1)
  {
    case 2:
      if (a2 != 2)
        goto LABEL_11;
      goto LABEL_9;
    case 3:
      if (a2 != 3)
        goto LABEL_11;
      goto LABEL_9;
    case 4:
      if (a2 != 4)
        goto LABEL_11;
      goto LABEL_9;
    case 5:
      if (a2 != 5)
        goto LABEL_11;
LABEL_9:
      result = 1;
      break;
    default:
      if (a2 - 2 >= 4)
        result = (((a1 & 1) == 0) ^ a2) & 1;
      else
LABEL_11:
        result = 0;
      break;
  }
  return result;
}

uint64_t sub_1BAF601F0(_BYTE *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;

  v2 = *a2;
  switch(*a1)
  {
    case 2:
      if (v2 == 2)
        goto LABEL_9;
      goto LABEL_11;
    case 3:
      if (v2 != 3)
        goto LABEL_11;
      goto LABEL_9;
    case 4:
      if (v2 != 4)
        goto LABEL_11;
      goto LABEL_9;
    case 5:
      if (v2 != 5)
        goto LABEL_11;
LABEL_9:
      result = 1;
      break;
    default:
      if ((v2 - 2) >= 4)
        result = (((*a1 & 1) == 0) ^ v2) & 1;
      else
LABEL_11:
        result = 0;
      break;
  }
  return result;
}

uint64_t FollowingNotificationContext.isEligibleForTipPresentation.getter()
{
  uint64_t v0;
  char v1;

  v1 = *(_BYTE *)(v0 + 8);
  if ((objc_msgSend(*(id *)v0, sel_isPuzzleType) & 1) != 0)
    return 0;
  if ((v1 - 2) >= 4u)
    return v1 & 1;
  return (7u >> ((v1 - 2) & 0xF)) & 1;
}

uint64_t FollowingCommandContext.tag.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t FollowingCommandContext.shouldAutoEnableNotifications.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t FollowingCommandContext.shouldShowChannelUpsell.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t sub_1BAF6031C(char *a1, void *a2)
{
  char v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v12;

  v3 = *a1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  if ((v3 & 1) != 0)
    v12 = 0x80000001BB972930;
  else
    v12 = 0x80000001BB972960;
  v6 = 0xE000000000000000;
  sub_1BB86C340();

  sub_1BA7AA598();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  swift_getObjectType();
  if ((objc_msgSend(a2, sel_isPuzzleType, v12) & 1) != 0)
  {
    v8 = 0;
  }
  else
  {
    v8 = FCTagProviding.localizedTagType.getter();
    v6 = v9;
  }
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v6;
  v10 = sub_1BB8729D0();
  swift_bridgeObjectRelease();
  return v10;
}

id sub_1BAF604E0(_BYTE *a1)
{
  uint64_t *v1;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3AAB30 != -1)
      swift_once();
    v1 = &qword_1ED39D910;
  }
  else
  {
    if (qword_1EF2A7230 != -1)
      swift_once();
    v1 = &qword_1EF2C4720;
  }
  return (id)*v1;
}

uint64_t static SharingActivity.follow(tag:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BAF60DAC();
  MEMORY[0x1E0C80A78](v2);
  sub_1BA840C58(0, (unint64_t *)&unk_1ED3A3E50, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v3);
  if (!a1)
    return 0;
  v4 = qword_1ED3BA900;
  swift_unknownObjectRetain();
  if (v4 != -1)
    swift_once();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB872970();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = a1;
  *(_WORD *)(v5 + 24) = 256;
  sub_1BA82BE0C();
  swift_unknownObjectRetain();
  sub_1BB870048();
  sub_1BB8703E4();
  sub_1BB870048();
  swift_allocObject();
  v6 = sub_1BB86FC88();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1BAF60780@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  unint64_t v16;

  v5 = *a1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  if ((v5 & 1) != 0)
    v16 = 0x80000001BB972930;
  else
    v16 = 0x80000001BB972960;
  v8 = 0xE000000000000000;
  sub_1BB86C340();

  sub_1BA7AA598();
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87CE70;
  swift_getObjectType();
  if ((objc_msgSend(a2, sel_isPuzzleType, v16) & 1) != 0)
  {
    v10 = 0;
  }
  else
  {
    v10 = FCTagProviding.localizedTagType.getter();
    v8 = v11;
  }
  *(_QWORD *)(v9 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v9 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v9 + 32) = v10;
  *(_QWORD *)(v9 + 40) = v8;
  v12 = sub_1BB8729D0();
  v14 = v13;
  result = swift_bridgeObjectRelease();
  *a3 = v12;
  a3[1] = v14;
  return result;
}

uint64_t sub_1BAF6094C(_BYTE *a1)
{
  id v1;
  id v2;

  if ((*a1 & 1) != 0)
  {
    if (qword_1ED3AAB30 != -1)
      swift_once();
    v1 = (id)qword_1ED39D910;
  }
  else
  {
    if (qword_1EF2A7230 != -1)
      swift_once();
    v2 = (id)qword_1EF2C4720;
  }
  return sub_1BB8703D8();
}

uint64_t static KeyCommandItem.follow(tag:)(uint64_t a1)
{
  uint64_t v2;

  sub_1BA840C58(0, (unint64_t *)&unk_1ED3A3E50, (uint64_t)&type metadata for FollowingCommandState, MEMORY[0x1E0DEA968], (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))MEMORY[0x1E0DB8368]);
  MEMORY[0x1E0C80A78](v2);
  if (qword_1ED3BA900 != -1)
    swift_once();
  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA82BE0C();
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_1BB870048();
  return sub_1BB86F964();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE6follow3tagACSgSo14FCTagProviding_pSg_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BAF61310(0, (unint64_t *)&unk_1ED3AFA80, MEMORY[0x1E0DB8BA0]);
  MEMORY[0x1E0C80A78](v2);
  sub_1BAF61310(0, (unint64_t *)&unk_1ED3AFA20, MEMORY[0x1E0DB8328]);
  MEMORY[0x1E0C80A78](v3);
  sub_1BAF61310(0, (unint64_t *)&unk_1ED3AFA50, MEMORY[0x1E0DB8348]);
  MEMORY[0x1E0C80A78](v4);
  if (!a1)
    return 0;
  v5 = qword_1ED3BA900;
  swift_unknownObjectRetain();
  if (v5 != -1)
    swift_once();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a1;
  *(_WORD *)(v6 + 24) = 256;
  sub_1BA82BE0C();
  swift_unknownObjectRetain();
  swift_retain();
  sub_1BB870030();
  sub_1BB870018();
  sub_1BB870348();
  sub_1BB86FB38();
  swift_allocObject();
  return sub_1BB86FB2C();
}

void sub_1BAF60DAC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3E40)
  {
    sub_1BB8703E4();
    sub_1BA82BE0C();
    v0 = sub_1BB870060();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3E40);
  }
}

uint64_t sub_1BAF60E14()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF60E38@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BAF60780(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1BAF60E58()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAF60E7C@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BAF60780(a1, *(void **)(v2 + 16), a2);
}

unint64_t sub_1BAF60E88()
{
  unint64_t result;

  result = qword_1ED39D088;
  if (!qword_1ED39D088)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FollowingCommandState, &type metadata for FollowingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED39D088);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FollowingCommandState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAF60F1C + 4 * byte_1BB8D771D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAF60F50 + 4 * byte_1BB8D7718[v4]))();
}

uint64_t sub_1BAF60F50(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF60F58(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF60F60);
  return result;
}

uint64_t sub_1BAF60F6C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF60F74);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAF60F78(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF60F80(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingCommandState()
{
  return &type metadata for FollowingCommandState;
}

uint64_t initializeBufferWithCopyOfBuffer for FollowingNotificationContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FollowingNotificationContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for FollowingNotificationContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowingNotificationContext.Result(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t result;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
  {
    v6 = *a1;
    if (v6 >= 2)
    {
      v7 = (v6 + 2147483646) & 0x7FFFFFFF;
      result = v7 - 3;
      if (v7 > 3)
        return result;
    }
    return 0;
  }
  v2 = a2 + 5;
  if (a2 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if (v2 >> 8 < 0xFF)
    v3 = 1;
  if (v2 >= 0x100)
    v4 = v3;
  else
    v4 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1BAF610A8 + 4 * byte_1BB8D7722[v4]))();
}

uint64_t storeEnumTagSinglePayload for FollowingNotificationContext.Result(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 5;
  if (a3 + 5 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xFB)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BAF61154 + 4 * byte_1BB8D772C[v5]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BAF61188 + 4 * byte_1BB8D7727[v5]))();
}

uint64_t sub_1BAF61188(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF61190(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF61198);
  return result;
}

uint64_t sub_1BAF611A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF611ACLL);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BAF611B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF611B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BAF611C4(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 1;
  return result;
}

ValueMetadata *type metadata accessor for FollowingNotificationContext.Result()
{
  return &type metadata for FollowingNotificationContext.Result;
}

uint64_t sub_1BAF611F0(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FollowingCommandContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for FollowingCommandContext(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  return a1;
}

ValueMetadata *type metadata accessor for Commands.Following()
{
  return &type metadata for Commands.Following;
}

unint64_t sub_1BAF612CC()
{
  unint64_t result;

  result = qword_1ED3A6A20;
  if (!qword_1ED3A6A20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FollowingCommandState, &type metadata for FollowingCommandState);
    atomic_store(result, (unint64_t *)&qword_1ED3A6A20);
  }
  return result;
}

void sub_1BAF61310(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA82BE0C();
    v7 = a3(a1, &type metadata for FollowingCommandState, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAF6136C(char *a1)
{
  uint64_t v1;

  return sub_1BAF6031C(a1, *(void **)(v1 + 16));
}

uint64_t static FormatAbsoluteURL.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if ((MEMORY[0x1BCCDCEFC]() & 1) == 0)
    return 0;
  v4 = *(int *)(type metadata accessor for FormatAbsoluteURL() + 20);
  return sub_1BA5B35E8(*(_QWORD *)(a1 + v4), *(_QWORD *)(a2 + v4));
}

uint64_t FormatAbsoluteURL.parameters.getter()
{
  type metadata accessor for FormatAbsoluteURL();
  return swift_bridgeObjectRetain();
}

uint64_t FormatAbsoluteURL.value.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1BAF6143C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = *(int *)(type metadata accessor for FormatAbsoluteURL() + 20);
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + v4) = v3;
  return result;
}

uint64_t FormatAbsoluteURL.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for FormatAbsoluteURL() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*FormatAbsoluteURL.parameters.modify())()
{
  type metadata accessor for FormatAbsoluteURL();
  return nullsub_1;
}

uint64_t sub_1BAF614EC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF615D8(&qword_1EF2B6FF8, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF61520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x1BCCDCEFC]() & 1) != 0)
    return sub_1BA5B35E8(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
  else
    return 0;
}

uint64_t sub_1BAF61574(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF615D8(&qword_1ED39E5A0, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
  a1[2] = sub_1BAF615D8(&qword_1ED3A2A20, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
  result = sub_1BAF615D8(&qword_1EF2B7000, (uint64_t)&protocol conformance descriptor for FormatAbsoluteURL);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF615D8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatAbsoluteURL();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAF61618(_QWORD *a1)
{
  return FormatAbsoluteURL.encode(to:)(a1);
}

uint64_t sub_1BAF6162C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for FormatAbsoluteURL() + 20));
  return swift_bridgeObjectRetain();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatAbsoluteURL(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FormatAbsoluteURL(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatAbsoluteURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatAbsoluteURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatAbsoluteURL(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAF61864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BAF618E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86C67C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t FormatNodeCache.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t method lookup function for FormatNodeCache()
{
  return swift_lookUpClassMethod();
}

uint64_t static FormatCustomItem.Action.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v15;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF61AB4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v10[*(int *)(v11 + 48)];
  sub_1BAF61B14(a1, (uint64_t)v10);
  sub_1BAF61B14(a2, v12);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  LOBYTE(a2) = MEMORY[0x1BCCDCEFC](v7, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v12, v4);
  v13((uint64_t)v7, v4);
  return a2 & 1;
}

void sub_1BAF61AB4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3A0E80)
  {
    type metadata accessor for FormatCustomItem.Action();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3A0E80);
  }
}

uint64_t sub_1BAF61B14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatCustomItem.Action();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF61B58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);
  uint64_t v15;

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF61AB4();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (uint64_t)&v10[*(int *)(v11 + 48)];
  sub_1BAF61B14(a1, (uint64_t)v10);
  sub_1BAF61B14(a2, v12);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  LOBYTE(a2) = MEMORY[0x1BCCDCEFC](v7, v12);
  v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v13(v12, v4);
  v13((uint64_t)v7, v4);
  return a2 & 1;
}

uint64_t FormatCustomItem.Action.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;

  sub_1BA6C0E30(0);
  v20 = v2;
  MEMORY[0x1E0C80A78](v2);
  v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatCustomItem.Action();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v12 = v11;
  v22 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  v15 = v4;
  sub_1BB8746C8();
  sub_1BAF61B14(v23, (uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  sub_1BAF621CC();
  v24 = 0uLL;
  v16 = v25;
  sub_1BB8741AC();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v14, v12);
  }
  else
  {
    v19 = (uint64_t)v21;
    v18 = v22;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v21, v7, v15);
    v24 = xmmword_1BB87FC90;
    sub_1BA4A2870(&qword_1ED39C9B8, (uint64_t (*)(uint64_t))sub_1BA6C0E30, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
    sub_1BB8741AC();
    sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))sub_1BA6C0E30);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v14, v12);
  }
}

uint64_t sub_1BAF61EE0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAF61F30()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAF61F48()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

void sub_1BAF61F94(_QWORD *a1@<X8>)
{
  *a1 = 0x4C52556E65706FLL;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_1BAF61FB0()
{
  sub_1BA4CBD14();
  return sub_1BB872D0C();
}

uint64_t sub_1BAF61FFC(_QWORD *a1)
{
  return FormatCustomItem.Action.encode(to:)(a1);
}

uint64_t FormatCustomItem.Action.perform(with:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  _QWORD v12[2];

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatCustomItem.Action();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAF61B14(v0, (uint64_t)v10);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  swift_getObjectType();
  if (qword_1ED3BA8B8 != -1)
    swift_once();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  sub_1BB86FF4C();
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAF621CC()
{
  unint64_t result;

  result = qword_1ED3A5928;
  if (!qword_1ED3A5928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7B90, &_s6ActionO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED3A5928);
  }
  return result;
}

uint64_t sub_1BAF62210(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3A5948, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t)&protocol conformance descriptor for FormatCustomItem.Action);
  a1[2] = sub_1BA4A2870(&qword_1ED3A5940, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t)&protocol conformance descriptor for FormatCustomItem.Action);
  result = sub_1BA4A2870(&qword_1EF2B7008, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomItem.Action, (uint64_t)&protocol conformance descriptor for FormatCustomItem.Action);
  a1[3] = result;
  return result;
}

uint64_t *_s6ActionOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t _s6ActionOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t _s6ActionOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t _s6ActionOwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t _s6ActionOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

ValueMetadata *_s6ActionO10CodingTypeOMa()
{
  return &_s6ActionO10CodingTypeON;
}

unint64_t sub_1BAF6241C()
{
  unint64_t result;

  result = qword_1EF2B7010;
  if (!qword_1EF2B7010)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7B68, &_s6ActionO10CodingTypeON);
    atomic_store(result, (unint64_t *)&qword_1EF2B7010);
  }
  return result;
}

uint64_t sub_1BAF62460(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  void (*v13)(uint64_t *__return_ptr, char *);
  uint64_t v14;

  v13 = a1;
  v3 = sub_1BB86EB84();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8];
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B0930, v4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v12 - v9;
  sub_1BA5E01A4(v1, (uint64_t)&v12 - v9, &qword_1ED3B0930, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v3) == 1)
    return 2;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v3);
  v13(&v14, v7);
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v3);
  return v14;
}

uint64_t FormatContentSubgroupCollection.subgroups.getter()
{
  return swift_bridgeObjectRetain();
}

NewsFeed::FormatContentSubgroupCollection __swiftcall FormatContentSubgroupCollection.init(subgroups:)(NewsFeed::FormatContentSubgroupCollection subgroups)
{
  NewsFeed::FormatContentSubgroupCollection *v1;

  v1->subgroups._rawValue = subgroups.subgroups._rawValue;
  return subgroups;
}

uint64_t FormatContentSubgroupCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA4B07F0(0, &qword_1ED3B9518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAF62C30();
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BAF626A4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;

  v19 = a2;
  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v20 = (char *)&v18 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3BB4D0, (uint64_t (*)(void))sub_1BAF63CB8, (uint64_t)&type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v18 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v18 - v8;
  v10 = type metadata accessor for FormatContentSubgroupCollection.MetadataContainer();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF63CB8();
  sub_1BB87468C();
  if (!v2)
  {
    v13 = (uint64_t)v12;
    v14 = v19;
    type metadata accessor for FormatMetadata();
    sub_1BA4A2870(&qword_1ED3B40A0, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
    v15 = (uint64_t)v20;
    v16 = v18;
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v16);
    sub_1BAF63CFC(v15, v13);
    sub_1BA5193C4(v13, v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAF628BC()
{
  return 0x617461646174656DLL;
}

uint64_t sub_1BAF628D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAF62968()
{
  sub_1BAF63CB8();
  return sub_1BB874710();
}

uint64_t sub_1BAF62990()
{
  sub_1BAF63CB8();
  return sub_1BB87471C();
}

uint64_t sub_1BAF629B8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAF626A4(a1, a2);
}

uint64_t sub_1BAF629CC(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;

  sub_1BA4CDF6C(0, &qword_1EF2B7060, (uint64_t (*)(void))sub_1BAF63CB8, (uint64_t)&type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF63CB8();
  sub_1BB8746C8();
  type metadata accessor for FormatMetadata();
  sub_1BA4A2870(&qword_1ED39CBE8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t)&protocol conformance descriptor for FormatMetadata);
  sub_1BB87414C();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t static FormatContentSubgroupCollection.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA882058(*a1, *a2);
}

uint64_t sub_1BAF62B0C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA4B07F0(0, &qword_1ED3B9518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAF62C30();
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t sub_1BAF62BD0(uint64_t *a1, uint64_t *a2)
{
  return sub_1BA882058(*a1, *a2);
}

uint64_t sub_1BAF62BDC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1BAF62C30()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_1ED39D9F0;
  if (!qword_1ED39D9F0)
  {
    sub_1BA4B07F0(255, &qword_1ED3B9518, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    v2 = v1;
    v3 = sub_1BA4A2870(&qword_1ED39D0A8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroup, (uint64_t)&protocol conformance descriptor for FormatContentSubgroup);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1ED39D9F0);
  }
  return result;
}

unint64_t sub_1BAF62CC0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA64D4E4();
  a1[2] = sub_1BAF62CF4();
  result = sub_1BAF62D38();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF62CF4()
{
  unint64_t result;

  result = qword_1EF2B7018;
  if (!qword_1EF2B7018)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupCollection, &type metadata for FormatContentSubgroupCollection);
    atomic_store(result, (unint64_t *)&qword_1EF2B7018);
  }
  return result;
}

unint64_t sub_1BAF62D38()
{
  unint64_t result;

  result = qword_1EF2B7020;
  if (!qword_1EF2B7020)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentSubgroupCollection, &type metadata for FormatContentSubgroupCollection);
    atomic_store(result, (unint64_t *)&qword_1EF2B7020);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupCollection()
{
  return &type metadata for FormatContentSubgroupCollection;
}

uint64_t *sub_1BAF62D8C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(uint64_t *, _QWORD, uint64_t, int *);

  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = (int *)type metadata accessor for FormatMetadata();
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      v11 = v7[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1BB86EB84();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      swift_bridgeObjectRetain();
      v16(v12, v13, v14);
      v16((char *)a1 + v7[6], (char *)a2 + v7[6], v14);
      v17 = v7[7];
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))((char *)a2 + v17, 1, v14))
      {
        sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        v16(v18, v19, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
      *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
      *(uint64_t *)((char *)a1 + v7[10]) = *(uint64_t *)((char *)a2 + v7[10]);
      *(uint64_t *)((char *)a1 + v7[11]) = *(uint64_t *)((char *)a2 + v7[11]);
      v21 = *(void (**)(uint64_t *, _QWORD, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1BAF62F94(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;

  v2 = (int *)type metadata accessor for FormatMetadata();
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    v4 = a1 + v2[5];
    v5 = sub_1BB86EB84();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v7(v4, v5);
    v7(a1 + v2[6], v5);
    v8 = a1 + v2[7];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
      v7(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BAF63094(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD, uint64_t, int *);

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = v4[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86EB84();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    v13((char *)a1 + v4[6], (char *)a2 + v4[6], v11);
    v14 = v4[7];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v14, 1, v11))
    {
      sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
    *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
    *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
    *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
    v18 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v5 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1BAF63274(char *a1, char *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, int *);
  int v7;
  int v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t (*v30)(char *, uint64_t, uint64_t);
  int v31;
  int v32;
  void (*v33)(char *, _QWORD, uint64_t, int *);
  uint64_t v34;

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v21 = v4[5];
    v22 = &a1[v21];
    v23 = &a2[v21];
    v24 = sub_1BB86EB84();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(void (**)(char *, char *, uint64_t))(v25 + 24);
    v26(v22, v23, v24);
    v26(&a1[v4[6]], &a2[v4[6]], v24);
    v27 = v4[7];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v31 = v30(&a1[v27], 1, v24);
    v32 = v30(v29, 1, v24);
    if (v31)
    {
      if (!v32)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v29, v24);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v28, 0, 1, v24);
LABEL_17:
        *(_QWORD *)&a1[v4[8]] = *(_QWORD *)&a2[v4[8]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v4[9]] = *(_QWORD *)&a2[v4[9]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v4[11]] = *(_QWORD *)&a2[v4[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v32)
      {
        v26(v28, v29, v24);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v28, v24);
    }
    sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_17;
  }
  if (v8)
  {
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, v9);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
  v11 = v4[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v16(v12, v13, v14);
  v16(&a1[v4[6]], &a2[v4[6]], v14);
  v17 = v4[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v17], 1, v14))
  {
    sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  *(_QWORD *)&a1[v4[8]] = *(_QWORD *)&a2[v4[8]];
  *(_QWORD *)&a1[v4[9]] = *(_QWORD *)&a2[v4[9]];
  *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
  *(_QWORD *)&a1[v4[11]] = *(_QWORD *)&a2[v4[11]];
  v33 = *(void (**)(char *, _QWORD, uint64_t, int *))(v5 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(a1, 0, 1, v4);
  return a1;
}

_OWORD *sub_1BAF63648(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v7 = v4[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86EB84();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v12(v8, v9, v10);
    v12((char *)a1 + v4[6], (char *)a2 + v4[6], v10);
    v13 = v4[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v13, 1, v10))
    {
      sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
    }
    *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
    *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
    *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
    *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1BAF63804(char *a1, char *a2)
{
  int *v4;
  uint64_t v5;
  uint64_t (*v6)(char *, uint64_t, int *);
  int v7;
  int v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t (*v31)(char *, uint64_t, uint64_t);
  int v32;
  int v33;
  uint64_t v34;

  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = *((_QWORD *)v4 - 1);
  v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  v7 = v6(a1, 1, v4);
  v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
      v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v21 = *((_QWORD *)a2 + 1);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *((_QWORD *)a1 + 1) = v21;
    swift_bridgeObjectRelease();
    v22 = v4[5];
    v23 = &a1[v22];
    v24 = &a2[v22];
    v25 = sub_1BB86EB84();
    v26 = *(_QWORD *)(v25 - 8);
    v27 = *(void (**)(char *, char *, uint64_t))(v26 + 40);
    v27(v23, v24, v25);
    v27(&a1[v4[6]], &a2[v4[6]], v25);
    v28 = v4[7];
    v29 = &a1[v28];
    v30 = &a2[v28];
    v31 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
    v32 = v31(&a1[v28], 1, v25);
    v33 = v31(v30, 1, v25);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v29, v30, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v29, 0, 1, v25);
LABEL_17:
        *(_QWORD *)&a1[v4[8]] = *(_QWORD *)&a2[v4[8]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v4[9]] = *(_QWORD *)&a2[v4[9]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&a1[v4[11]] = *(_QWORD *)&a2[v4[11]];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v33)
      {
        v27(v29, v30, v25);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    }
    sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_17;
  }
  if (v8)
  {
    v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, v9);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = v4[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v16(v12, v13, v14);
  v16(&a1[v4[6]], &a2[v4[6]], v14);
  v17 = v4[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(&a2[v17], 1, v14))
  {
    sub_1BA4B07F0(0, &qword_1ED3B0930, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v16(v18, v19, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  }
  *(_QWORD *)&a1[v4[8]] = *(_QWORD *)&a2[v4[8]];
  *(_QWORD *)&a1[v4[9]] = *(_QWORD *)&a2[v4[9]];
  *(_QWORD *)&a1[v4[10]] = *(_QWORD *)&a2[v4[10]];
  *(_QWORD *)&a1[v4[11]] = *(_QWORD *)&a2[v4[11]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1BAF63B7C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF63B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BAF63BDC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF63BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1BAF63C40(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BA4A2870(&qword_1ED3BA7D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer, (uint64_t)&unk_1BB8D7D30);
  a1[2] = sub_1BA4A2870(&qword_1EF2B7050, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer, (uint64_t)&unk_1BB8D7CEC);
  result = sub_1BA4A2870(&qword_1EF2B7058, (uint64_t (*)(uint64_t))type metadata accessor for FormatContentSubgroupCollection.MetadataContainer, (uint64_t)&unk_1BB8D7CC4);
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF63CB8()
{
  unint64_t result;

  result = qword_1ED3BB388;
  if (!qword_1ED3BB388)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7E1C, &type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3BB388);
  }
  return result;
}

uint64_t sub_1BAF63CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1BAF63D58(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  unsigned int (*v20)(uint64_t, uint64_t, uint64_t);
  _QWORD *v21;
  char v22;
  _QWORD *v24;
  uint64_t v25;

  v25 = a2;
  v3 = type metadata accessor for FormatMetadata();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v24 = (_QWORD **)((char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAF6401C();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD **)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v24 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v24 - v17;
  sub_1BA5E01A4(a1, (uint64_t)&v24 - v17, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  sub_1BA5E01A4(v25, (uint64_t)v15, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  v19 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BA5E01A4((uint64_t)v18, (uint64_t)v9, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  sub_1BA5E01A4((uint64_t)v15, v19, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) == 1)
  {
    sub_1BAF62BDC((uint64_t)v15);
    sub_1BAF62BDC((uint64_t)v18);
    if (v20(v19, 1, v3) == 1)
    {
      sub_1BAF62BDC((uint64_t)v9);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1BA5E01A4((uint64_t)v9, (uint64_t)v12, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata);
  if (v20(v19, 1, v3) == 1)
  {
    sub_1BAF62BDC((uint64_t)v15);
    sub_1BAF62BDC((uint64_t)v18);
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
LABEL_6:
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BAF6401C);
    return 0;
  }
  v21 = v24;
  sub_1BA5193C4(v19, (uint64_t)v24, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  v22 = static FormatMetadata.== infix(_:_:)(v12, v21);
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BAF62BDC((uint64_t)v15);
  sub_1BAF62BDC((uint64_t)v18);
  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
  sub_1BAF62BDC((uint64_t)v9);
  return (v22 & 1) != 0;
}

void sub_1BAF6401C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B7068)
  {
    sub_1BA4B07F0(255, &qword_1ED3B40F8, (uint64_t (*)(uint64_t))type metadata accessor for FormatMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B7068);
  }
}

uint64_t storeEnumTagSinglePayload for FormatContentSubgroupCollection.MetadataContainer.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAF640D4 + 4 * byte_1BB8D7BE0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAF640F4 + 4 * byte_1BB8D7BE5[v4]))();
}

_BYTE *sub_1BAF640D4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAF640F4(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF640FC(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF64104(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAF6410C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAF64114(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentSubgroupCollection.MetadataContainer.CodingKeys()
{
  return &type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys;
}

unint64_t sub_1BAF64134()
{
  unint64_t result;

  result = qword_1EF2B7070;
  if (!qword_1EF2B7070)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7DF4, &type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7070);
  }
  return result;
}

unint64_t sub_1BAF6417C()
{
  unint64_t result;

  result = qword_1ED3BB398;
  if (!qword_1ED3BB398)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7D64, &type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3BB398);
  }
  return result;
}

unint64_t sub_1BAF641C4()
{
  unint64_t result;

  result = qword_1ED3BB390;
  if (!qword_1ED3BB390)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D7D8C, &type metadata for FormatContentSubgroupCollection.MetadataContainer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3BB390);
  }
  return result;
}

void FormatGroupBinding.SourceItemTip.tipSource(from:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  void *v10;
  id v11;
  _QWORD *v12;
  id v13;
  id v14;
  id v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v6 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2)
  {
    if (*v2 == 1)
    {
      sub_1BA7A6E9C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)&v18);
      if (!v3)
      {
        v9 = (id)v18;
        v10 = (void *)v19;
        v18 = 0x3A3A776F6C6C6F66;
        v19 = 0xE800000000000000;
        v11 = objc_msgSend(v9, sel_identifier);
        sub_1BB8729A0();

        sub_1BB872AFC(v12);
        swift_bridgeObjectRelease();
        sub_1BB871794();
        swift_unknownObjectRelease();

      }
    }
    else
    {
      sub_1BAF65238(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), (uint64_t)v8);
      if (!v3)
      {
        FormatWebEmbedBinding.SourceItemTip.tipSource(from:)((uint64_t)v8, a2);
        sub_1BA9045E0((uint64_t)v8);
      }
    }
  }
  else
  {
    sub_1BAF6469C(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack + 8), &v18);
    if (!v3)
    {
      v13 = (id)v18;
      v14 = objc_msgSend((id)v18, sel_backingTag);
      v18 = 0x3A3A776F6C6C6F66;
      v19 = 0xE800000000000000;
      v15 = objc_msgSend(v14, sel_identifier);
      sub_1BB8729A0();

      sub_1BB872AFC(v16);
      swift_bridgeObjectRelease();
      sub_1BB871794();

      swift_unknownObjectRelease();
    }
  }
}

uint64_t static FormatGroupBinding.SourceItemTip.== infix(_:_:)(_BYTE *a1, _BYTE *a2)
{
  int v2;

  v2 = *a2;
  if (*a1)
  {
    if (*a1 == 1)
    {
      if (v2 == 1)
        return 1;
    }
    else if (v2 == 2)
    {
      return 1;
    }
  }
  else if (!*a2)
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1BAF64480@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatGroupBinding.SourceItemTip.init(from:)(a1, a2);
}

uint64_t sub_1BAF64494(_QWORD *a1)
{
  return FormatGroupBinding.SourceItemTip.encode(to:)(a1);
}

BOOL sub_1BAF644A8(_BYTE *a1, _BYTE *a2)
{
  int v2;

  v2 = *a2;
  if (*a1)
  {
    if (*a1 == 1)
      return v2 == 1;
    if (v2 != 2)
      return 0;
  }
  else if (*a2)
  {
    return 0;
  }
  return 1;
}

uint64_t sub_1BAF644E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char v16;
  __int128 v17[2];
  _BYTE v18[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x726F705364656546, 0xEF746E6576457374), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)v17);
    sub_1BA4CECCC(v17, (uint64_t)v18);
    sub_1BA4C010C((uint64_t)v18, (uint64_t)v17);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
      *(_QWORD *)a2 = v13;
      *(_OWORD *)(a2 + 8) = v14;
      *(_QWORD *)(a2 + 24) = v15;
      *(_BYTE *)(a2 + 32) = v16 & 1;
    }
    else
    {
      sub_1BA758A4C();
      swift_allocError();
      v12 = v11;
      *v11 = 0x726F705364656546;
      v11[1] = 0xEF746E6576457374;
      sub_1BA4C010C((uint64_t)v18, (uint64_t)(v11 + 2));
      *((_BYTE *)v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)v8 = 0x726F705364656546;
    *(_QWORD *)(v8 + 8) = 0xEF746E6576457374;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BAF6469C@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14[2];
  _BYTE v15[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x6373654464656546, 0xEE00726F74706972), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BA4CECCC(v14, (uint64_t)v15);
    sub_1BA4C010C((uint64_t)v15, (uint64_t)v14);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
      *a2 = v13;
    }
    else
    {
      sub_1BA758A4C();
      swift_allocError();
      v12 = v11;
      strcpy(v11, "FeedDescriptor");
      v11[15] = -18;
      sub_1BA4C010C((uint64_t)v15, (uint64_t)(v11 + 16));
      v12[56] = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    strcpy((char *)v8, "FeedDescriptor");
    *(_BYTE *)(v8 + 15) = -18;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BAF64838@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA4A3FB4(0, &qword_1ED3A5280, (void (*)(uint64_t))type metadata accessor for FeedWeather);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1BA6E35A8(0x7461655764656546, 0xEB00000000726568), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA83CC6C();
    v9 = type metadata accessor for FeedWeather(0);
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v6, a2, type metadata accessor for FeedWeather);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&qword_1ED3A5280, (uint64_t)type metadata accessor for FeedWeather, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      sub_1BA758A4C();
      swift_allocError();
      v18 = v17;
      *v17 = 0x7461655764656546;
      v17[1] = 0xEB00000000726568;
      sub_1BA4C010C((uint64_t)v20, (uint64_t)(v17 + 2));
      *((_BYTE *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    *(_QWORD *)v14 = 0x7461655764656546;
    *(_QWORD *)(v14 + 8) = 0xEB00000000726568;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1BAF64A7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _BYTE v13[144];
  __int128 v14[9];
  _BYTE v15[40];
  _BYTE v16[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x7573734964656546, 0xE900000000000065), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BA4CECCC(v14, (uint64_t)v16);
    sub_1BA4C010C((uint64_t)v16, (uint64_t)v15);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      nullsub_1(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1BA744E38((uint64_t)v14, (uint64_t)v13, (unint64_t *)&qword_1ED3C23B0);
      return sub_1BA744E38((uint64_t)v13, a2, (unint64_t *)&qword_1ED3C23B0);
    }
    else
    {
      sub_1BA758A4C();
      swift_allocError();
      v12 = v11;
      *v11 = 0x7573734964656546;
      v11[1] = 0xE900000000000065;
      sub_1BA4C010C((uint64_t)v16, (uint64_t)(v11 + 2));
      *((_BYTE *)v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)v8 = 0x7573734964656546;
    *(_QWORD *)(v8 + 8) = 0xE900000000000065;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1BAF64C48@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  __int128 v15;
  int v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  _BYTE v20[40];
  _BYTE v21[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x7A7A755064656546, 0xEE0065707954656CLL), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)&v15);
    sub_1BA4CECCC(&v15, (uint64_t)v21);
    sub_1BA4C010C((uint64_t)v21, (uint64_t)v20);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      v7 = v16;
      v8 = v18;
      *(_OWORD *)a2 = v15;
      *(_BYTE *)(a2 + 16) = v7 & 1;
      *(_OWORD *)(a2 + 24) = v17;
      *(_QWORD *)(a2 + 40) = v8;
      *(_OWORD *)(a2 + 48) = v19;
    }
    else
    {
      sub_1BA758A4C();
      swift_allocError();
      v14 = v13;
      strcpy(v13, "FeedPuzzleType");
      v13[15] = -18;
      sub_1BA4C010C((uint64_t)v21, (uint64_t)(v13 + 16));
      v14[56] = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v10 = v9;
    v11 = swift_bridgeObjectRetain();
    v12 = sub_1BA85C6FC(v11);
    swift_bridgeObjectRelease();
    strcpy((char *)v10, "FeedPuzzleType");
    *(_BYTE *)(v10 + 15) = -18;
    *(_QWORD *)(v10 + 16) = v12;
    *(_BYTE *)(v10 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BAF64E08@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3D24D0, (void (*)(uint64_t))type metadata accessor for FeedPuzzleStatistic);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1BA6E35A8(0xD000000000000013, 0x80000001BB970C20), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA83CC6C();
    v9 = type metadata accessor for FeedPuzzleStatistic();
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&unk_1ED3D24D0, (uint64_t)type metadata accessor for FeedPuzzleStatistic, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      sub_1BA758A4C();
      swift_allocError();
      v18 = v17;
      *v17 = 0xD000000000000013;
      v17[1] = 0x80000001BB970C20;
      sub_1BA4C010C((uint64_t)v20, (uint64_t)(v17 + 2));
      *((_BYTE *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    *(_QWORD *)v14 = 0xD000000000000013;
    *(_QWORD *)(v14 + 8) = 0x80000001BB970C20;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1BAF65040@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t result;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _BYTE v29[40];
  _BYTE v30[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x7A7A755064656546, 0xEA0000000000656CLL), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)&v18);
    sub_1BA4CECCC(&v18, (uint64_t)v30);
    sub_1BA4C010C((uint64_t)v30, (uint64_t)v29);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
      v7 = v27;
      *(_OWORD *)(a2 + 128) = v26;
      *(_OWORD *)(a2 + 144) = v7;
      *(_QWORD *)(a2 + 160) = v28;
      v8 = v23;
      *(_OWORD *)(a2 + 64) = v22;
      *(_OWORD *)(a2 + 80) = v8;
      v9 = v25;
      *(_OWORD *)(a2 + 96) = v24;
      *(_OWORD *)(a2 + 112) = v9;
      v10 = v19;
      *(_OWORD *)a2 = v18;
      *(_OWORD *)(a2 + 16) = v10;
      v11 = v21;
      *(_OWORD *)(a2 + 32) = v20;
      *(_OWORD *)(a2 + 48) = v11;
    }
    else
    {
      v28 = 0;
      v26 = 0u;
      v27 = 0u;
      v24 = 0u;
      v25 = 0u;
      v22 = 0u;
      v23 = 0u;
      v20 = 0u;
      v21 = 0u;
      v18 = 0u;
      v19 = 0u;
      sub_1BA6AA068((uint64_t)&v18, (uint64_t)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle, (uint64_t (*)(_QWORD))sub_1BA4CF8F4);
      sub_1BA758A4C();
      swift_allocError();
      v17 = v16;
      *v16 = 0x7A7A755064656546;
      v16[1] = 0xEA0000000000656CLL;
      sub_1BA4C010C((uint64_t)v30, (uint64_t)(v16 + 2));
      *((_BYTE *)v17 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v13 = v12;
    v14 = swift_bridgeObjectRetain();
    v15 = sub_1BA85C6FC(v14);
    swift_bridgeObjectRelease();
    *(_QWORD *)v13 = 0x7A7A755064656546;
    *(_QWORD *)(v13 + 8) = 0xEA0000000000656CLL;
    *(_QWORD *)(v13 + 16) = v15;
    *(_BYTE *)(v13 + 56) = 3;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1BAF65238@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA4A3FB4(0, &qword_1ED3AFE68, (void (*)(uint64_t))type metadata accessor for FeedWebEmbed);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1BA6E35A8(0x4562655764656546, 0xEC0000006465626DLL), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA83CC6C();
    v9 = type metadata accessor for FeedWebEmbed();
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&qword_1ED3AFE68, (uint64_t)type metadata accessor for FeedWebEmbed, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      sub_1BA758A4C();
      swift_allocError();
      v18 = v17;
      strcpy((char *)v17, "FeedWebEmbed");
      *(_BYTE *)(v17 + 13) = 0;
      *(_WORD *)(v17 + 14) = -5120;
      sub_1BA4C010C((uint64_t)v20, v17 + 16);
      *(_BYTE *)(v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    strcpy((char *)v14, "FeedWebEmbed");
    *(_BYTE *)(v14 + 13) = 0;
    *(_WORD *)(v14 + 14) = -5120;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1BAF6547C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _BYTE v13[248];
  __int128 v14[15];
  _BYTE v15[40];
  _BYTE v16[40];

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1BA6E35A8(0x7779615064656546, 0xEB000000006C6C61), (v5 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v4, (uint64_t)v14);
    sub_1BA4CECCC(v14, (uint64_t)v16);
    sub_1BA4C010C((uint64_t)v16, (uint64_t)v15);
    sub_1BA83CC6C();
    if (swift_dynamicCast())
    {
      nullsub_1(v14);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      sub_1BA744E38((uint64_t)v14, (uint64_t)v13, &qword_1ED3C4130);
      return sub_1BA744E38((uint64_t)v13, a2, &qword_1ED3C4130);
    }
    else
    {
      sub_1BA758A4C();
      swift_allocError();
      v12 = v11;
      *v11 = 0x7779615064656546;
      v11[1] = 0xEB000000006C6C61;
      sub_1BA4C010C((uint64_t)v16, (uint64_t)(v11 + 2));
      *((_BYTE *)v12 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v8 = v7;
    v9 = swift_bridgeObjectRetain();
    v10 = sub_1BA85C6FC(v9);
    swift_bridgeObjectRelease();
    *(_QWORD *)v8 = 0x7779615064656546;
    *(_QWORD *)(v8 + 8) = 0xEB000000006C6C61;
    *(_QWORD *)(v8 + 16) = v10;
    *(_BYTE *)(v8 + 56) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1BAF65650@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  unint64_t v7;
  char v8;
  uint64_t v9;
  int v10;
  void (*v11)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  __int128 v19[2];
  _BYTE v20[40];

  sub_1BA4A3FB4(0, &qword_1ED3AD360, (void (*)(uint64_t))type metadata accessor for FeedSponsorshipBannerAd);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v19 - v5;
  if (*(_QWORD *)(a1 + 16) && (v7 = sub_1BA6E35A8(0xD000000000000017, 0x80000001BB972A50), (v8 & 1) != 0))
  {
    sub_1BA4C010C(*(_QWORD *)(a1 + 56) + 40 * v7, (uint64_t)v19);
    sub_1BA4CECCC(v19, (uint64_t)v20);
    sub_1BA4C010C((uint64_t)v20, (uint64_t)v19);
    sub_1BA83CC6C();
    v9 = type metadata accessor for FeedSponsorshipBannerAd();
    v10 = swift_dynamicCast();
    v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
    if (v10)
    {
      v11(v6, 0, 1, v9);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      return sub_1BA5193C4((uint64_t)v6, a2, (uint64_t (*)(_QWORD))type metadata accessor for FeedSponsorshipBannerAd);
    }
    else
    {
      v11(v6, 1, 1, v9);
      sub_1BA6AA068((uint64_t)v6, (uint64_t)&qword_1ED3AD360, (uint64_t)type metadata accessor for FeedSponsorshipBannerAd, (uint64_t (*)(_QWORD))sub_1BA4A3FB4);
      sub_1BA758A4C();
      swift_allocError();
      v18 = v17;
      *v17 = 0xD000000000000017;
      v17[1] = 0x80000001BB972A50;
      sub_1BA4C010C((uint64_t)v20, (uint64_t)(v17 + 2));
      *((_BYTE *)v18 + 56) = 4;
      swift_willThrow();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
  }
  else
  {
    sub_1BA758A4C();
    swift_allocError();
    v14 = v13;
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA85C6FC(v15);
    swift_bridgeObjectRelease();
    *(_QWORD *)v14 = 0xD000000000000017;
    *(_QWORD *)(v14 + 8) = 0x80000001BB972A50;
    *(_QWORD *)(v14 + 16) = v16;
    *(_BYTE *)(v14 + 56) = 3;
    return swift_willThrow();
  }
}

unint64_t sub_1BAF65888(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF658AC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF658AC()
{
  unint64_t result;

  result = qword_1EF2B7078;
  if (!qword_1EF2B7078)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.SourceItemTip, &type metadata for FormatGroupBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1EF2B7078);
  }
  return result;
}

unint64_t sub_1BAF658F0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAEBBB18();
  a1[2] = sub_1BAEEBB30();
  result = sub_1BAF65924();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAF65924()
{
  unint64_t result;

  result = qword_1EF2B7080;
  if (!qword_1EF2B7080)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.SourceItemTip, &type metadata for FormatGroupBinding.SourceItemTip);
    atomic_store(result, (unint64_t *)&qword_1EF2B7080);
  }
  return result;
}

uint64_t _s13SourceItemTipOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  int v7;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  if (v6 <= 2)
    v7 = -1;
  else
    v7 = v6 ^ 0xFF;
  return (v7 + 1);
}

uint64_t _s13SourceItemTipOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAF65A48 + 4 * byte_1BB8D7E71[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAF65A7C + 4 * byte_1BB8D7E6C[v4]))();
}

uint64_t sub_1BAF65A7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF65A84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF65A8CLL);
  return result;
}

uint64_t sub_1BAF65A98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF65AA0);
  *(_BYTE *)result = -(char)a2;
  return result;
}

uint64_t sub_1BAF65AA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF65AAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.SourceItemTip()
{
  return &type metadata for FormatGroupBinding.SourceItemTip;
}

uint64_t FormatPuzzleEmbedData.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedData.feedPuzzle.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA93EB58(v1 + 32, a1);
}

uint64_t FormatPuzzleEmbedData.config.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleEmbedData.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA93EBE8(v0 + 32);
  swift_release();
  return v0;
}

uint64_t FormatPuzzleEmbedData.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA93EBE8(v0 + 32);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatPuzzleEmbedData()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatPuzzleEmbedData()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAF65B94@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t ObjectType;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[8];

  v21 = a2;
  v22 = a3;
  v20 = a1;
  v23 = a4;
  sub_1BAF662E4();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BA5DEC38();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v4 + 32);
  ObjectType = swift_getObjectType();
  FeedContextFactoryType.createFeedContext()(ObjectType, v11);
  v13 = (void *)v24[0];
  v15 = v24[4];
  v14 = v24[5];
  v19 = (id)v24[7];
  v16 = sub_1BB871B24();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v7, 1, 1, v16);
  FeedModelFactory.create(headline:context:namespace:nativeAdInfo:)(v20, (uint64_t)v24, v21, v22, (uint64_t)v7, (uint64_t)v10);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BAF662E4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA6DB13C(v15, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  sub_1BA4C2DD8((uint64_t)v10, v23, type metadata accessor for FeedHeadline);
  return sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))sub_1BA5DEC38);
}

uint64_t sub_1BAF65D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int EnumCaseMultiPayload;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t (**v46)();
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  int v57;
  int v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 v68;
  unsigned __int8 v69;
  unsigned __int8 v70;
  unsigned __int8 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  unsigned __int8 v75;
  uint64_t v76;
  __int128 v77;

  v49 = a2;
  v66 = a4;
  v7 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v7);
  v65 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  v50 = type metadata accessor for PuzzleStatistic();
  MEMORY[0x1E0C80A78](v50);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v14);
  v63 = (uint64_t)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v48 - v17;
  MEMORY[0x1E0C80A78](v19);
  v64 = (uint64_t)&v48 - v20;
  v62 = sub_1BA9B56C4();
  MEMORY[0x1E0C80A78](v62);
  v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = *(_QWORD *)(v4 + 32);
  ObjectType = swift_getObjectType();
  FeedContextFactoryType.createFeedContext()(ObjectType, v23);
  v59 = v67;
  v57 = v69;
  v58 = v68;
  v56 = v70;
  v55 = v71;
  v61 = v72;
  v54 = v73;
  v53 = v74;
  v52 = v75;
  v51 = v76;
  v60 = v77;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v25 + 32) = v49;
  *(_QWORD *)(v25 + 40) = a3;
  swift_bridgeObjectRetain();
  PuzzleStatistic.identifier.getter();
  *(_QWORD *)(v25 + 48) = v26;
  *(_QWORD *)(v25 + 56) = v27;
  v67 = v25;
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v28 = sub_1BB872904();
  v30 = v29;
  swift_bridgeObjectRelease();
  sub_1BA4C2DD8(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  *(_QWORD *)v18 = 0;
  *((_QWORD *)v18 + 1) = 0;
  v18[16] = 1;
  *(_OWORD *)(v18 + 24) = xmmword_1BB88C460;
  *((_QWORD *)v18 + 5) = v28;
  *((_QWORD *)v18 + 6) = v30;
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)&v18[*(int *)(v14 + 32)], (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  swift_getObjectType();
  swift_bridgeObjectRetain();
  FCPuzzleTypeProviding.puzzleKindTraits.getter(&v67);
  v31 = v67;
  v32 = (uint64_t)&v13[*(int *)(v50 + 20)];
  sub_1BA4C2DD8(v32, (uint64_t)v11, type metadata accessor for PuzzleStatisticCategory);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) < 2)
  {
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for PuzzleStatisticCategory);
LABEL_3:
    v34 = 0x100000000000;
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload
    && (FCPuzzleTypeProviding.puzzleKind.getter(), v35 = v67, v67 != 3))
  {
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for PuzzleStatisticCategory);
    if (!v35)
      goto LABEL_3;
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for PuzzleStatisticCategory);
  }
  v34 = 0x80000000000;
LABEL_8:
  v36 = v31 | v34;
  v37 = v65;
  sub_1BA4C2DD8(v32, v65, type metadata accessor for PuzzleStatisticCategory);
  v38 = swift_getEnumCaseMultiPayload();
  sub_1BA4A2E80(v37, type metadata accessor for PuzzleStatisticCategory);
  if (v38 == 2)
    v39 = v36 | 0x1000000000000;
  else
    v39 = v36;
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for PuzzleStatistic);
  *(_QWORD *)v18 = v39;
  v40 = v64;
  sub_1BAF66338((uint64_t)v18, v64);
  swift_bridgeObjectRelease();
  v41 = v63;
  sub_1BA4C2DD8(v40, v63, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  sub_1BAF66338(v41, (uint64_t)v22);
  v42 = v62;
  v43 = &v22[*(int *)(v62 + 52)];
  *(_QWORD *)v43 = v59;
  v43[8] = v58;
  v43[9] = v57;
  v43[10] = v56;
  v43[11] = v55;
  *((_OWORD *)v43 + 1) = v61;
  v44 = v53;
  *((_QWORD *)v43 + 4) = v54;
  *((_QWORD *)v43 + 5) = v44;
  v43[48] = v52;
  *((_QWORD *)v43 + 7) = v51;
  *((_OWORD *)v43 + 4) = v60;
  v45 = &v22[*(int *)(v42 + 56)];
  *(_QWORD *)v45 = 0;
  *((_QWORD *)v45 + 1) = 0;
  v46 = (uint64_t (**)())&v22[*(int *)(v42 + 64)];
  *v46 = sub_1BA647E00;
  v46[1] = 0;
  sub_1BA4A2E80(v40, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  sub_1BA4C2DD8((uint64_t)v22, v66, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  return sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))sub_1BA9B56C4);
}

uint64_t sub_1BAF66298()
{
  swift_release();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatModelFactory()
{
  return objc_opt_self();
}

void sub_1BAF662E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3B0B00)
  {
    sub_1BB871B24();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3B0B00);
  }
}

uint64_t sub_1BAF66338(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedPuzzleStatistic();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t SportsRosterPlayer.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  int *v51;
  _QWORD *v52;
  char *v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;

  v46 = a2;
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v3);
  v47 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v48 = (char *)&v43 - v6;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - v8;
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v43 - v11;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v43 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v43 - v17;
  sub_1BAF673B8(0, (unint64_t *)&unk_1ED3AB418, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v50 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v43 - v21;
  v51 = (int *)type metadata accessor for SportsRosterPlayer();
  MEMORY[0x1E0C80A78](v51);
  v54 = (uint64_t *)((char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = a1[3];
  v52 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v24);
  sub_1BAF66AD8();
  v49 = v22;
  v25 = v53;
  sub_1BB87468C();
  if (v25)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  v53 = v18;
  v44 = v12;
  v45 = v15;
  v43 = v9;
  LOBYTE(v55) = 0;
  v26 = sub_1BB874098();
  v28 = v54;
  *v54 = v26;
  v28[1] = v29;
  LOBYTE(v55) = 1;
  v28[2] = sub_1BB87402C();
  v28[3] = v30;
  LOBYTE(v55) = 2;
  v28[4] = sub_1BB874098();
  v28[5] = v31;
  LOBYTE(v55) = 3;
  v28[6] = sub_1BB87402C();
  v28[7] = v32;
  sub_1BB86C67C();
  LOBYTE(v55) = 4;
  sub_1BA6BEF7C((unint64_t *)&unk_1ED3B04E0, MEMORY[0x1E0CB0038]);
  v33 = (uint64_t)v53;
  sub_1BB874068();
  v34 = v51;
  sub_1BA7F0AD4(v33, (uint64_t)v28 + v51[8]);
  LOBYTE(v55) = 5;
  v35 = (uint64_t)v45;
  sub_1BB874068();
  sub_1BA7F0AD4(v35, (uint64_t)v28 + v34[9]);
  LOBYTE(v55) = 6;
  v36 = (uint64_t)v44;
  sub_1BB874068();
  sub_1BA7F0AD4(v36, (uint64_t)v28 + v34[10]);
  LOBYTE(v55) = 7;
  v37 = (uint64_t)v43;
  sub_1BB874068();
  sub_1BA7F0AD4(v37, (uint64_t)v28 + v51[11]);
  LOBYTE(v55) = 8;
  v38 = (uint64_t)v48;
  sub_1BB874068();
  sub_1BA7F0AD4(v38, (uint64_t)v28 + v51[12]);
  LOBYTE(v55) = 9;
  sub_1BB874068();
  sub_1BA7F0AD4(v47, (uint64_t)v54 + v51[13]);
  v57 = 10;
  sub_1BAF66B58();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v50);
  v39 = v55;
  v40 = v56;
  if (v56 == 4)
  {
    v39 = 0;
    v40 = 0;
  }
  v41 = (uint64_t)v54;
  v42 = (uint64_t *)((char *)v54 + v51[14]);
  *v42 = v39;
  v42[1] = v40;
  sub_1BAF66B9C(v41, v46);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  return sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for SportsRosterPlayer);
}

unint64_t sub_1BAF66AD8()
{
  unint64_t result;

  result = qword_1ED3A64F0;
  if (!qword_1ED3A64F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D81AC, &type metadata for SportsRosterPlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A64F0);
  }
  return result;
}

uint64_t type metadata accessor for SportsRosterPlayer()
{
  uint64_t result;

  result = qword_1ED3A6518;
  if (!qword_1ED3A6518)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BAF66B58()
{
  unint64_t result;

  result = qword_1ED3A7E10;
  if (!qword_1ED3A7E10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAC74, &type metadata for SportsKeyPlayerEligibility);
    atomic_store(result, (unint64_t *)&qword_1ED3A7E10);
  }
  return result;
}

uint64_t sub_1BAF66B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsRosterPlayer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAF66BE0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF66C20
                                                            + 4 * asc_1BB8D7FE0[a1]))(0x6E6F6E6143636D75, 0xEE0044496C616369);
}

uint64_t sub_1BAF66C20()
{
  return 0x4449676174;
}

uint64_t sub_1BAF66C34()
{
  return 0x656D614E6C6C7566;
}

unint64_t sub_1BAF66C4C()
{
  return 0xD000000000000010;
}

unint64_t sub_1BAF66C74()
{
  return 0xD000000000000017;
}

uint64_t sub_1BAF66D10(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAF66D50 + 4 * byte_1BB8D7FEB[a1]))(0x6E6F6E6143636D75, 0xEE0044496C616369);
}

uint64_t sub_1BAF66D50()
{
  return 0x4449676174;
}

uint64_t sub_1BAF66D64()
{
  return 0x656D614E6C6C7566;
}

unint64_t sub_1BAF66D7C()
{
  return 0xD000000000000010;
}

unint64_t sub_1BAF66DA4()
{
  return 0xD000000000000017;
}

uint64_t sub_1BAF66E40(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BAF66BE0(*a1);
  v5 = v4;
  if (v3 == sub_1BAF66BE0(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1BAF66EC8()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAF66BE0(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF66F28()
{
  unsigned __int8 *v0;

  sub_1BAF66BE0(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAF66F68()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAF66BE0(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAF66FC4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF68DB4();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF66FF0@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAF66BE0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BAF67018()
{
  unsigned __int8 *v0;

  return sub_1BAF66D10(*v0);
}

uint64_t sub_1BAF67020@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAF68DB4();
  *a1 = result;
  return result;
}

uint64_t sub_1BAF67044()
{
  sub_1BAF66AD8();
  return sub_1BB874710();
}

uint64_t sub_1BAF6706C()
{
  sub_1BAF66AD8();
  return sub_1BB87471C();
}

uint64_t SportsRosterPlayer.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  __int128 v12;
  char v13;

  v3 = v1;
  sub_1BAF673B8(0, &qword_1EF2B7130, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAF66AD8();
  sub_1BB8746C8();
  LOBYTE(v12) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1BB87411C();
    LOBYTE(v12) = 2;
    sub_1BB87417C();
    LOBYTE(v12) = 3;
    sub_1BB87411C();
    v10 = type metadata accessor for SportsRosterPlayer();
    LOBYTE(v12) = 4;
    sub_1BB86C67C();
    sub_1BA6BEF7C((unint64_t *)&unk_1ED3B04B0, MEMORY[0x1E0CB0010]);
    sub_1BB87414C();
    LOBYTE(v12) = 5;
    sub_1BB87414C();
    LOBYTE(v12) = 6;
    sub_1BB87414C();
    LOBYTE(v12) = 7;
    sub_1BB87414C();
    LOBYTE(v12) = 8;
    sub_1BB87414C();
    LOBYTE(v12) = 9;
    sub_1BB87414C();
    v12 = *(_OWORD *)(v3 + *(int *)(v10 + 56));
    v13 = 10;
    sub_1BAF67414();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1BAF673B8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAF66AD8();
    v7 = a3(a1, &type metadata for SportsRosterPlayer.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAF67414()
{
  unint64_t result;

  result = qword_1EF2B7138;
  if (!qword_1EF2B7138)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAC4C, &type metadata for SportsKeyPlayerEligibility);
    atomic_store(result, (unint64_t *)&qword_1EF2B7138);
  }
  return result;
}

uint64_t sub_1BAF67458@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return SportsRosterPlayer.init(from:)(a1, a2);
}

uint64_t sub_1BAF6746C(_QWORD *a1)
{
  return SportsRosterPlayer.encode(to:)(a1);
}

uint64_t *initializeBufferWithCopyOfBuffer for SportsRosterPlayer(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    v10 = a3[8];
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[6] = a2[6];
    a1[7] = v9;
    v12 = sub_1BB86C67C();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      sub_1BA6EF3B0();
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = v13;
    v18 = a3[9];
    v19 = (char *)v4 + v18;
    v20 = (char *)a2 + v18;
    if (v14((char *)a2 + v18, 1, v12))
    {
      sub_1BA6EF3B0();
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v12);
    }
    v22 = a3[10];
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    if (v14((char *)a2 + v22, 1, v12))
    {
      sub_1BA6EF3B0();
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v24, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v12);
    }
    v26 = a3[11];
    v27 = (char *)v4 + v26;
    v28 = (char *)a2 + v26;
    if (v14((char *)a2 + v26, 1, v12))
    {
      sub_1BA6EF3B0();
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v27, v28, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v27, 0, 1, v12);
    }
    v30 = a3[12];
    v31 = (char *)v4 + v30;
    v32 = (char *)a2 + v30;
    if (v14((char *)a2 + v30, 1, v12))
    {
      sub_1BA6EF3B0();
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v31, v32, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v31, 0, 1, v12);
    }
    v34 = a3[13];
    v35 = (char *)v4 + v34;
    v36 = (char *)a2 + v34;
    if (v14((char *)a2 + v34, 1, v12))
    {
      sub_1BA6EF3B0();
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v35, v36, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v35, 0, 1, v12);
    }
    v38 = a3[14];
    v39 = (uint64_t *)((char *)v4 + v38);
    v40 = (uint64_t *)((char *)a2 + v38);
    v41 = v40[1];
    if (v41 >= 4)
    {
      *v39 = *v40;
      v39[1] = v41;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
  }
  return v4;
}

unint64_t destroy for SportsRosterPlayer(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[9];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = a1 + a2[10];
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  v10 = a1 + a2[11];
  if (!v7(v10, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  v11 = a1 + a2[12];
  if (!v7(v11, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
  v12 = a1 + a2[13];
  if (!v7(v12, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result >= 4)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for SportsRosterPlayer(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  unint64_t v38;
  char *__dst;

  v5 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v5;
  v6 = *((_QWORD *)a2 + 3);
  a1[2] = *((_QWORD *)a2 + 2);
  a1[3] = v6;
  v7 = *((_QWORD *)a2 + 5);
  a1[4] = *((_QWORD *)a2 + 4);
  a1[5] = v7;
  v8 = *((_QWORD *)a2 + 7);
  v9 = a3[8];
  __dst = (char *)a1 + v9;
  v10 = &a2[v9];
  a1[6] = *((_QWORD *)a2 + 6);
  a1[7] = v8;
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = &a2[v15];
  if (v13(&a2[v15], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[10];
  v20 = (char *)a1 + v19;
  v21 = &a2[v19];
  if (v13(&a2[v19], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v20, v21, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[11];
  v24 = (char *)a1 + v23;
  v25 = &a2[v23];
  if (v13(&a2[v23], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v24, v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = a3[12];
  v28 = (char *)a1 + v27;
  v29 = &a2[v27];
  if (v13(&a2[v27], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v28, v29, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  v31 = a3[13];
  v32 = (char *)a1 + v31;
  v33 = &a2[v31];
  if (v13(&a2[v31], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v32, v33, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  v35 = a3[14];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = &a2[v35];
  v38 = *((_QWORD *)v37 + 1);
  if (v38 >= 4)
  {
    *v36 = *(_QWORD *)v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v36 = *(_OWORD *)v37;
  }
  return a1;
}

char *assignWithCopy for SportsRosterPlayer(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  int v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  int v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  _QWORD *v47;
  unint64_t v48;
  unint64_t v49;

  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 4) = a2[4];
  *((_QWORD *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)a1 + 6) = a2[6];
  *((_QWORD *)a1 + 7) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = &a1[v6];
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[9];
  v16 = &a1[v15];
  v17 = (char *)a2 + v15;
  v18 = v11(&a1[v15], 1, v9);
  v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    sub_1BA6EF3B0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  v21 = a3[10];
  v22 = &a1[v21];
  v23 = (char *)a2 + v21;
  v24 = v11(&a1[v21], 1, v9);
  v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    sub_1BA6EF3B0();
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  v27 = a3[11];
  v28 = &a1[v27];
  v29 = (char *)a2 + v27;
  v30 = v11(&a1[v27], 1, v9);
  v31 = v11(v29, 1, v9);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v28, v29, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v28, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
LABEL_24:
    sub_1BA6EF3B0();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v28, v29, v9);
LABEL_25:
  v33 = a3[12];
  v34 = &a1[v33];
  v35 = (char *)a2 + v33;
  v36 = v11(&a1[v33], 1, v9);
  v37 = v11(v35, 1, v9);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v34, v35, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v34, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v34, v9);
LABEL_30:
    sub_1BA6EF3B0();
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v34, v35, v9);
LABEL_31:
  v39 = a3[13];
  v40 = &a1[v39];
  v41 = (char *)a2 + v39;
  v42 = v11(&a1[v39], 1, v9);
  v43 = v11(v41, 1, v9);
  if (v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v40, v41, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v40, 0, 1, v9);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v43)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v40, v9);
LABEL_36:
    sub_1BA6EF3B0();
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v40, v41, v9);
LABEL_37:
  v45 = a3[14];
  v46 = &a1[v45];
  v47 = (_QWORD *)((char *)a2 + v45);
  v48 = *(_QWORD *)&a1[v45 + 8];
  v49 = v47[1];
  if (v48 >= 4)
  {
    if (v49 >= 4)
    {
      *(_QWORD *)v46 = *v47;
      *((_QWORD *)v46 + 1) = v47[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v46);
    goto LABEL_42;
  }
  if (v49 < 4)
  {
LABEL_42:
    *(_OWORD *)v46 = *(_OWORD *)v47;
    return a1;
  }
  *(_QWORD *)v46 = *v47;
  *((_QWORD *)v46 + 1) = v47[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for SportsRosterPlayer(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = *((_OWORD *)a2 + 3);
  a1[2] = *((_OWORD *)a2 + 2);
  a1[3] = v7;
  v8 = a3[8];
  v9 = (char *)a1 + v8;
  v10 = &a2[v8];
  v11 = sub_1BB86C67C();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[9];
  v16 = (char *)a1 + v15;
  v17 = &a2[v15];
  if (v13(&a2[v15], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  v19 = a3[10];
  v20 = (char *)a1 + v19;
  v21 = &a2[v19];
  if (v13(&a2[v19], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  v23 = a3[11];
  v24 = (char *)a1 + v23;
  v25 = &a2[v23];
  if (v13(&a2[v23], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v24, v25, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v24, 0, 1, v11);
  }
  v27 = a3[12];
  v28 = (char *)a1 + v27;
  v29 = &a2[v27];
  if (v13(&a2[v27], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v28, v29, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v28, 0, 1, v11);
  }
  v31 = a3[13];
  v32 = (char *)a1 + v31;
  v33 = &a2[v31];
  if (v13(&a2[v31], 1, v11))
  {
    sub_1BA6EF3B0();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v32, v33, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v32, 0, 1, v11);
  }
  *(_OWORD *)((char *)a1 + a3[14]) = *(_OWORD *)&a2[a3[14]];
  return a1;
}

char *assignWithTake for SportsRosterPlayer(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  unint64_t v52;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  *((_QWORD *)a1 + 4) = a2[4];
  *((_QWORD *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  *((_QWORD *)a1 + 6) = a2[6];
  *((_QWORD *)a1 + 7) = v9;
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = &a1[v10];
  v12 = (char *)a2 + v10;
  v13 = sub_1BB86C67C();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    sub_1BA6EF3B0();
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[9];
  v20 = &a1[v19];
  v21 = (char *)a2 + v19;
  v22 = v15(&a1[v19], 1, v13);
  v23 = v15(v21, 1, v13);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v20, v21, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v20, 0, 1, v13);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v13);
LABEL_12:
    sub_1BA6EF3B0();
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v20, v21, v13);
LABEL_13:
  v25 = a3[10];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v28 = v15(&a1[v25], 1, v13);
  v29 = v15(v27, 1, v13);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v26, v27, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v26, 0, 1, v13);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v13);
LABEL_18:
    sub_1BA6EF3B0();
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v26, v27, v13);
LABEL_19:
  v31 = a3[11];
  v32 = &a1[v31];
  v33 = (char *)a2 + v31;
  v34 = v15(&a1[v31], 1, v13);
  v35 = v15(v33, 1, v13);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v32, v33, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v32, 0, 1, v13);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v32, v13);
LABEL_24:
    sub_1BA6EF3B0();
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v32, v33, v13);
LABEL_25:
  v37 = a3[12];
  v38 = &a1[v37];
  v39 = (char *)a2 + v37;
  v40 = v15(&a1[v37], 1, v13);
  v41 = v15(v39, 1, v13);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v38, v39, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v38, 0, 1, v13);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v38, v13);
LABEL_30:
    sub_1BA6EF3B0();
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v38, v39, v13);
LABEL_31:
  v43 = a3[13];
  v44 = &a1[v43];
  v45 = (char *)a2 + v43;
  v46 = v15(&a1[v43], 1, v13);
  v47 = v15(v45, 1, v13);
  if (v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v44, v45, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v44, 0, 1, v13);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v47)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v44, v13);
LABEL_36:
    sub_1BA6EF3B0();
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v44, v45, v13);
LABEL_37:
  v49 = a3[14];
  v50 = &a1[v49];
  v51 = (_QWORD *)((char *)a2 + v49);
  if (*(_QWORD *)&a1[v49 + 8] >= 4uLL)
  {
    v52 = v51[1];
    if (v52 >= 4)
    {
      *(_QWORD *)v50 = *v51;
      *((_QWORD *)v50 + 1) = v52;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v50);
  }
  *(_OWORD *)v50 = *(_OWORD *)v51;
  return a1;
}

uint64_t getEnumTagSinglePayload for SportsRosterPlayer()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF68A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA6EF3B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SportsRosterPlayer()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAF68B08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA6EF3B0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1BAF68B7C()
{
  unint64_t v0;

  sub_1BA6EF3B0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for SportsRosterPlayer.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BAF68C5C + 4 * byte_1BB8D7FFB[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BAF68C90 + 4 * byte_1BB8D7FF6[v4]))();
}

uint64_t sub_1BAF68C90(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF68C98(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF68CA0);
  return result;
}

uint64_t sub_1BAF68CAC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF68CB4);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BAF68CB8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF68CC0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsRosterPlayer.CodingKeys()
{
  return &type metadata for SportsRosterPlayer.CodingKeys;
}

unint64_t sub_1BAF68CE0()
{
  unint64_t result;

  result = qword_1EF2B7140;
  if (!qword_1EF2B7140)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D8184, &type metadata for SportsRosterPlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B7140);
  }
  return result;
}

unint64_t sub_1BAF68D28()
{
  unint64_t result;

  result = qword_1ED3A6500;
  if (!qword_1ED3A6500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D80BC, &type metadata for SportsRosterPlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A6500);
  }
  return result;
}

unint64_t sub_1BAF68D70()
{
  unint64_t result;

  result = qword_1ED3A64F8;
  if (!qword_1ED3A64F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8D80E4, &type metadata for SportsRosterPlayer.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A64F8);
  }
  return result;
}

uint64_t sub_1BAF68DB4()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xB)
    return 11;
  else
    return v0;
}

unint64_t FormatPuzzleEmbedNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 48);
  *a1 = v3;
  return sub_1BA71CA6C(v3);
}

uint64_t FormatPuzzleEmbedNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatPuzzleEmbedNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 160);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatPuzzleEmbedNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNode.zIndex.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 88);
}

uint64_t FormatPuzzleEmbedNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleEmbedNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.contentFrameIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1BAF6901C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)(v3 + 48) = v2;
  sub_1BA71CA6C(v2);
  return sub_1BA719718(v4);
}

unint64_t FormatPuzzleEmbedNode.size.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(v1 + 48) = v2;
  return sub_1BA719718(v3);
}

uint64_t (*FormatPuzzleEmbedNode.size.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 72);
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNode.config.getter()
{
  return swift_retain();
}

uint64_t FormatPuzzleEmbedNode.zIndex.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatPuzzleEmbedNode.zIndex.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.style.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  v3 = v1[12];
  v4 = v1[13];
  v5 = v1[14];
  v6 = v1[15];
  v7 = v1[16];
  v8 = v1[17];
  v9 = v1[18];
  v10 = v1[19];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  return sub_1BAC69440(v3, v4, v5, v6, v7, v8, v9);
}

uint64_t FormatPuzzleEmbedNode.style.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[4];
  v14 = *(_OWORD *)(a1 + 5);
  v15 = *((_OWORD *)a1 + 1);
  v5 = a1[7];
  swift_beginAccess();
  v6 = v1[12];
  v7 = v1[13];
  v8 = v1[14];
  v9 = v1[15];
  v10 = v1[16];
  v11 = v1[17];
  v12 = v1[18];
  v1[12] = v2;
  v1[13] = v3;
  *((_OWORD *)v1 + 7) = v15;
  v1[16] = v4;
  *(_OWORD *)(v1 + 17) = v14;
  v1[19] = v5;
  return sub_1BAC694A8(v6, v7, v8, v9, v10, v11, v12);
}

uint64_t (*FormatPuzzleEmbedNode.style.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BAF6933C(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 160);
  *(_QWORD *)(v3 + 160) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatPuzzleEmbedNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 160);
  *(_QWORD *)(v1 + 160) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatPuzzleEmbedNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BAF69418(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 168) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatPuzzleEmbedNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 168) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatPuzzleEmbedNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 184);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 176);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatPuzzleEmbedNode.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 192);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNode.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 192) = a1;
  *(_QWORD *)(v2 + 200) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatPuzzleEmbedNode.name.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatPuzzleEmbedNode.location.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 208);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNode.__allocating_init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v25;

  v25 = swift_allocObject();
  FormatPuzzleEmbedNode.init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
  return v25;
}

uint64_t FormatPuzzleEmbedNode.init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, uint64_t a7, uint64_t *a8, uint64_t a9, uint64_t a10, uint64_t *a11, uint64_t *a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;

  v23 = *a5;
  v24 = *a6;
  v25 = *a8;
  v40 = *a11;
  v39 = a11[1];
  v38 = *((_OWORD *)a11 + 1);
  v37 = a11[4];
  v36 = *(_OWORD *)(a11 + 5);
  v35 = a11[7];
  v41 = *a12;
  v43 = *a14;
  v42 = *((_BYTE *)a14 + 8);
  *(_OWORD *)(v18 + 112) = 0u;
  *(_OWORD *)(v18 + 128) = 0u;
  *(_OWORD *)(v18 + 144) = 0u;
  *(_OWORD *)(v18 + 96) = 0u;
  *(_QWORD *)(v18 + 200) = 0;
  *(_QWORD *)(v18 + 192) = 0;
  swift_beginAccess();
  *(_QWORD *)(v18 + 16) = a1;
  *(_QWORD *)(v18 + 24) = a2;
  *(_QWORD *)(v18 + 32) = a3;
  *(_QWORD *)(v18 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v18 + 48) = v23;
  *(_QWORD *)(v18 + 56) = v24;
  swift_beginAccess();
  *(_QWORD *)(v18 + 64) = a7;
  *(_QWORD *)(v18 + 72) = v25;
  *(_QWORD *)(v18 + 80) = a9;
  swift_beginAccess();
  *(_QWORD *)(v18 + 88) = a10;
  swift_beginAccess();
  v26 = *(_QWORD *)(v18 + 96);
  v27 = *(_QWORD *)(v18 + 104);
  v28 = *(_QWORD *)(v18 + 112);
  v29 = *(_QWORD *)(v18 + 120);
  v30 = *(_QWORD *)(v18 + 128);
  v31 = *(_QWORD *)(v18 + 136);
  v32 = *(_QWORD *)(v18 + 144);
  *(_QWORD *)(v18 + 96) = v40;
  *(_QWORD *)(v18 + 104) = v39;
  *(_OWORD *)(v18 + 112) = v38;
  *(_QWORD *)(v18 + 128) = v37;
  *(_OWORD *)(v18 + 136) = v36;
  *(_QWORD *)(v18 + 152) = v35;
  sub_1BAC694A8(v26, v27, v28, v29, v30, v31, v32);
  swift_beginAccess();
  *(_QWORD *)(v18 + 160) = v41;
  swift_beginAccess();
  *(_QWORD *)(v18 + 168) = a13;
  *(_QWORD *)(v18 + 176) = v43;
  *(_BYTE *)(v18 + 184) = v42;
  swift_beginAccess();
  *(_QWORD *)(v18 + 192) = a15;
  *(_QWORD *)(v18 + 200) = a16;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v18 + 208) = a17;
  *(_QWORD *)(v18 + 216) = a18;
  return v18;
}

_QWORD *FormatPuzzleEmbedNode.deinit()
{
  _QWORD *v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA719718(v0[6]);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_1BAC694A8(v0[12], v0[13], v0[14], v0[15], v0[16], v0[17], v0[18]);
  sub_1BA6EEDB4(v0[20]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatPuzzleEmbedNode.__deallocating_deinit()
{
  FormatPuzzleEmbedNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAF699E4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF69B24(&qword_1EF2B7148, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatPuzzleEmbedNode()
{
  return objc_opt_self();
}

uint64_t sub_1BAF69A38(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAF69B24(qword_1ED3A6BF8, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNode);
  a1[2] = sub_1BAF69B24(&qword_1ED3A0F78, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNode);
  result = sub_1BAF69B24(&qword_1EF2B7150, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAF69A9C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEB10E8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BAF69AC4(_QWORD *a1)
{
  return FormatPuzzleEmbedNode.encode(to:)(a1);
}

uint64_t sub_1BAF69AE4(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed21FormatPuzzleEmbedNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BAF69AF0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAF69B24(&qword_1EF2B7158, (uint64_t)&protocol conformance descriptor for FormatPuzzleEmbedNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAF69B24(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatPuzzleEmbedNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAF69B60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  _OWORD v50[4];
  uint64_t v51;

  v19 = *(_QWORD *)(a3 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  swift_beginAccess();
  v20 = *(_QWORD *)(a4 + 16);
  v21 = *(_QWORD *)(a4 + 24);
  v22 = *(_QWORD *)(v19 + 40);
  if (v22)
  {
    *(_QWORD *)&v50[0] = *(_QWORD *)(v19 + 32);
    *((_QWORD *)&v50[0] + 1) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v23);
    sub_1BB872AFC(v24);
    swift_bridgeObjectRelease();
    v40 = v22;
    v41 = *(_QWORD *)&v50[0];
    v20 = *(_QWORD *)(a4 + 16);
    v21 = *(_QWORD *)(a4 + 24);
  }
  else
  {
    swift_bridgeObjectRetain();
    v40 = v21;
    v41 = v20;
  }
  sub_1BAF6A08C((uint64_t)a5, (uint64_t)v50);
  v25 = *(_QWORD *)(a4 + 56);
  v42 = v20;
  if (v25)
  {
    v26 = *(_QWORD *)(v25 + 16);
    swift_retain();
  }
  else
  {
    v26 = 0;
  }
  v39 = swift_allocObject();
  v51 = v26;
  swift_beginAccess();
  v38 = *(_QWORD *)(a4 + 88);
  swift_beginAccess();
  v27 = *(_QWORD *)(a4 + 160);
  v46 = v27;
  swift_bridgeObjectRetain();
  sub_1BAF6A148(a5);
  sub_1BA67D3F4(v27);
  sub_1BA67C978(a3, &v49);
  sub_1BA6EEDB4(v27);
  sub_1BB86DD80();
  v28 = *(_QWORD *)(a4 + 40);
  v37 = *(_QWORD *)(a4 + 32);
  v30 = *(_QWORD *)(a6 + 72);
  v29 = *(_QWORD *)(a6 + 80);
  v31 = *(_BYTE *)(a4 + 184);
  v47 = *(_QWORD *)(a4 + 176);
  v48 = v31;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32 = sub_1BB825C84();
  v34 = *(_QWORD *)(a4 + 208);
  v33 = *(_QWORD *)(a4 + 216);
  type metadata accessor for FormatPuzzleEmbedNodeLayoutAttributes();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v35 = sub_1BB6CF900(a1, a2, v41, v40, v42, v21, v50, &v51, a8, a9, a10, a11, v38, &v49, v46, v37, v28, v30, v29,
          &v47,
          v32 & 1,
          v34,
          v33);
  swift_release();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v39 + 16) = v35;
  *a7 = v39 | 0x9000000000000004;
  return result;
}

uint64_t sub_1BAF69E40@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BAF69E8C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 48);
  *a2 = v4;
  return sub_1BA71CA6C(v4);
}

uint64_t sub_1BAF69ED8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAF69F24@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return result;
}

uint64_t sub_1BAF69F68(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_QWORD *)(v3 + 88) = v2;
  return result;
}

unint64_t sub_1BAF69FA8@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 160);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BAF69FF4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 168);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatPuzzleEmbedNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatPuzzleEmbedNode.__allocating_init(identifier:contentFrameIdentifier:size:resize:adjustments:content:config:zIndex:style:visibility:selectors:accessibilityRole:name:location:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1BAF6A08C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAF6A0D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAF6A0D0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A7CB8)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A7CB8);
  }
}

uint64_t sub_1BAF6A124()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BAF6A148(uint64_t *a1)
{
  sub_1BAC69440(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6]);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatImageRenderingMode(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF)
    v3 = swift_retain();
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatImageRenderingMode(unint64_t *a1)
{
  unint64_t result;

  result = *a1;
  if (result >= 0xFFFFFFFF)
    return swift_release();
  return result;
}

unint64_t *assignWithCopy for FormatImageRenderingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = *a2;
  if (v3 < 0xFFFFFFFF)
  {
    *a1 = v4;
    if (v4 >= 0xFFFFFFFF)
      swift_retain();
  }
  else if (v4 < 0xFFFFFFFF)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v4;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for FormatImageRenderingMode(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
    goto LABEL_6;
  if (v3 < 0xFFFFFFFF)
  {
    swift_release();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDebuggerBreakpointExecution.Execution(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFC && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 2147483644);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 3;
  if (v4 >= 5)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FormatDebuggerBreakpointExecution.Execution(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(_QWORD *)result = 0;
    *(_DWORD *)result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFC)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatLayoutViewPoolSize()
{
  return &type metadata for FormatLayoutViewPoolSize;
}

uint64_t sub_1BAF6A380(unint64_t a1)
{
  unint64_t v2;
  unint64_t v3;
  void *v4;
  id v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v11;
  unint64_t v12;
  uint64_t v13;

  if (a1 < 4)
    return qword_1BB8D83F0[a1];
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = (void *)objc_opt_self();
  sub_1BAF6A4E4(v2);
  sub_1BAF6A4E4(v3);
  v5 = objc_msgSend(v4, sel_mainBundle);
  v6 = objc_msgSend(v5, sel_bundleIdentifier);

  if (!v6)
    goto LABEL_9;
  v7 = sub_1BB8729A0();
  v9 = v8;

  if (v7 == 0x6C7070612E6D6F63 && v9 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v11 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v11 & 1) != 0)
  {
LABEL_11:
    v12 = v2;
    goto LABEL_12;
  }
LABEL_9:
  v12 = v3;
LABEL_12:
  v13 = sub_1BAF6A380(v12);
  sub_1BAF6A4F4(v3);
  sub_1BAF6A4F4(v2);
  return v13;
}

unint64_t sub_1BAF6A4E4(unint64_t result)
{
  if (result >= 4)
    return swift_retain();
  return result;
}

unint64_t sub_1BAF6A4F4(unint64_t result)
{
  if (result >= 4)
    return swift_release();
  return result;
}

void static FormatScoreMatchupFormatName.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1BAF6A514(uint64_t result)
{
  unint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(result + 32);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    v18 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v18 != 2)
      return 0;
  }
  else if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10) != 2)
  {
    return 0;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    v2 = (void *)MEMORY[0x1BCCE4630](1, v1);
  }
  else
  {
    if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10) < 2uLL)
    {
      __break(1u);
      goto LABEL_20;
    }
    v2 = *(void **)(v1 + 40);
    swift_unknownObjectRetain();
  }
  v3 = objc_msgSend(v2, sel_asSports);
  result = swift_unknownObjectRelease();
  if (!v3)
    return 0;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v4 = (void *)MEMORY[0x1BCCE4630](0, v1);
LABEL_11:
    v5 = objc_msgSend(v4, sel_asSports);
    swift_unknownObjectRelease();
    if (v5)
    {
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1BB86C340();

      sub_1BA7AA598();
      v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
      FormatScoreMatchupFormatName.name(tag:)();
      v10 = v9;
      v12 = v11;
      v13 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
      v14 = sub_1BA6A2D8C();
      *(_QWORD *)(v8 + 64) = v14;
      *(_QWORD *)(v8 + 32) = v10;
      *(_QWORD *)(v8 + 40) = v12;
      FormatScoreMatchupFormatName.name(tag:)();
      *(_QWORD *)(v8 + 96) = v13;
      *(_QWORD *)(v8 + 104) = v14;
      *(_QWORD *)(v8 + 72) = v15;
      *(_QWORD *)(v8 + 80) = v16;
      v17 = sub_1BB8729D0();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    swift_unknownObjectRelease();
    return 0;
  }
  if (*(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v4 = *(void **)(v1 + 32);
    swift_unknownObjectRetain();
    goto LABEL_11;
  }
LABEL_20:
  __break(1u);
  return result;
}

void FormatScoreMatchupFormatName.name(tag:)()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAF6A8DC(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  void *v14;
  id v15;
  uint64_t v16;

  v15 = objc_msgSend(v14, sel_sportsNameAbbreviation);
  if (!v15)
  {
    v15 = objc_msgSend(v14, sel_sportsPrimaryName);
    if (!v15)
      v15 = objc_msgSend(v14, sel_name);
  }
  v16 = sub_1BB8729A0();

  return v16;
}

BOOL static FormatScoreMatchupFormat.== infix(_:_:)(unsigned __int8 *a1, char *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v2 = *a1;
  v3 = *a2;
  if ((v2 & 0x80u) == 0)
    v4 = v3 >= 0;
  else
    v4 = v3 < 0;
  return v2 == v3 && v4;
}

BOOL static FormatScoreMatchupFormatName.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BAF6AA9C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatScoreMatchupFormat.init(from:)(a1, a2);
}

uint64_t sub_1BAF6AAB0(_QWORD *a1)
{
  return FormatScoreMatchupFormat.encode(to:)(a1);
}

BOOL sub_1BAF6AAC4(unsigned __int8 *a1, char *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;

  v2 = *a1;
  v3 = *a2;
  if ((v2 & 0x80u) == 0)
    v4 = v3 >= 0;
  else
    v4 = v3 < 0;
  return v2 == v3 && v4;
}

uint64_t FormatScoreMatchupFormatName.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatScoreMatchupFormatName.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAF6AB5C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF6AB80();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF6AB80()
{
  unint64_t result;

  result = qword_1EF2B7160;
  if (!qword_1EF2B7160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormat, &type metadata for FormatScoreMatchupFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B7160);
  }
  return result;
}

uint64_t sub_1BAF6ABC4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAED0348, (uint64_t (*)(void))sub_1BAEE7F94, (uint64_t (*)(void))sub_1BAF6ABE0);
}

unint64_t sub_1BAF6ABE0()
{
  unint64_t result;

  result = qword_1EF2B7168;
  if (!qword_1EF2B7168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormat, &type metadata for FormatScoreMatchupFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B7168);
  }
  return result;
}

unint64_t sub_1BAF6AC28()
{
  unint64_t result;

  result = qword_1EF2B7170;
  if (!qword_1EF2B7170)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormatName, &type metadata for FormatScoreMatchupFormatName);
    atomic_store(result, (unint64_t *)&qword_1EF2B7170);
  }
  return result;
}

unint64_t sub_1BAF6AC6C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAF6AC90();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAF6AC90()
{
  unint64_t result;

  result = qword_1EF2B7178;
  if (!qword_1EF2B7178)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatScoreMatchupFormatName, &type metadata for FormatScoreMatchupFormatName);
    atomic_store(result, (unint64_t *)&qword_1EF2B7178);
  }
  return result;
}

uint64_t sub_1BAF6ACD4(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEB75D8, (uint64_t (*)(void))sub_1BAEECA58, (uint64_t (*)(void))sub_1BAF6AC28);
}

uint64_t sub_1BAF6ACF0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatScoreMatchupFormatName.init(from:)(a1, a2);
}

void sub_1BAF6AD04(_QWORD *a1)
{
  FormatScoreMatchupFormatName.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatScoreMatchupFormat(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 193 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 193) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3E)
    return ((uint64_t (*)(void))((char *)&loc_1BAF6AD64 + 4 * byte_1BB8D8455[v4]))();
  *a1 = a2 - 63;
  return ((uint64_t (*)(void))((char *)sub_1BAF6AD98 + 4 * byte_1BB8D8450[v4]))();
}

uint64_t sub_1BAF6AD98(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF6ADA0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF6ADA8);
  return result;
}

uint64_t sub_1BAF6ADC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF6ADC8);
  *(_BYTE *)result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_1BAF6ADCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF6ADD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatScoreMatchupFormat()
{
  return &type metadata for FormatScoreMatchupFormat;
}

uint64_t storeEnumTagSinglePayload for FormatScoreMatchupFormatName(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAF6AE3C + 4 * byte_1BB8D845F[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAF6AE70 + 4 * byte_1BB8D845A[v4]))();
}

uint64_t sub_1BAF6AE70(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF6AE78(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAF6AE80);
  return result;
}

uint64_t sub_1BAF6AE8C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAF6AE94);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAF6AE98(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAF6AEA0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatScoreMatchupFormatName()
{
  return &type metadata for FormatScoreMatchupFormatName;
}

Swift::Bool __swiftcall ShortcutManager.canAddShortcut(identifier:)(Swift::String identifier)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void *v11;
  unsigned __int8 v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  NSObject *v22;
  int v23;
  _BOOL4 v24;
  uint64_t v25;
  id v26;
  _QWORD *v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint8_t *v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  os_log_t v40;
  void *v41;
  _QWORD *v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  id v48;
  void *v49;
  unsigned __int8 v50;
  uint64_t v51;
  char v52;
  void *v53;
  id v54;
  void *v55;
  uint64_t v57;
  id v58;
  void *v59;
  int v60;
  uint8_t *v61;
  os_log_t v62;
  void *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  id v67;
  id v68;
  _BYTE v69[32];
  _OWORD v70[2];
  __int128 v71;
  ValueMetadata *v72;
  unint64_t v73;

  v2 = v1;
  v3 = sub_1BB86C4B4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v57 - v8;
  v10 = (void *)v1[2];
  v11 = (void *)sub_1BB872970();
  v12 = objc_msgSend(v10, sel_containsShortcut_, v11);

  if ((v12 & 1) != 0)
  {
    if (qword_1EF2A7368 != -1)
      swift_once();
    v13 = sub_1BB86EFEC();
    __swift_project_value_buffer(v13, (uint64_t)qword_1EF3D0930);
    v14 = sub_1BB86EFC8();
    v15 = sub_1BB8732F4();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1BA493000, v14, v15, "ShortcutManager unable to add shortcut that is already in the list", v16, 2u);
      MEMORY[0x1BCCE5C38](v16, -1, -1);
    }

LABEL_7:
    LOBYTE(v17) = 0;
    return (char)v17;
  }
  v18 = sub_1BAF6B6E4((uint64_t)v2);
  v19 = objc_msgSend(v10, sel_orderedShortcuts);
  v20 = objc_msgSend(v19, sel_count);

  if ((uint64_t)v20 < v18)
  {
    LOBYTE(v17) = 1;
    return (char)v17;
  }
  v65 = v4;
  if (qword_1EF2A7368 != -1)
    swift_once();
  v21 = sub_1BB86EFEC();
  __swift_project_value_buffer(v21, (uint64_t)qword_1EF3D0930);
  swift_retain_n();
  v22 = sub_1BB86EFC8();
  v23 = sub_1BB8732F4();
  v24 = os_log_type_enabled(v22, (os_log_type_t)v23);
  v64 = v18;
  if (v24)
  {
    v60 = v23;
    v62 = v22;
    v25 = swift_slowAlloc();
    v59 = (void *)swift_slowAlloc();
    v68 = v59;
    *(_DWORD *)v25 = 134218242;
    *(_QWORD *)&v71 = v18;
    sub_1BB873A8C();
    v61 = (uint8_t *)v25;
    *(_WORD *)(v25 + 12) = 2080;
    v63 = v10;
    v26 = objc_msgSend(v10, sel_orderedShortcuts);
    sub_1BB87324C();

    sub_1BAF6BC8C();
    sub_1BB873A80();
    v58 = v26;
    v27 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v72)
    {
      v66 = v2;
      do
      {
        sub_1BA76EAE0(&v71, v70);
        sub_1BA747A10((uint64_t)v70, (uint64_t)v69);
        sub_1BAF6BD18();
        if ((swift_dynamicCast() & 1) != 0)
        {
          v28 = v67;
          v29 = objc_msgSend(v67, sel_identifier);

          v30 = sub_1BB8729A0();
          v32 = v31;

          __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v27 = sub_1BA6EA0D0(0, v27[2] + 1, 1, v27);
          v34 = v27[2];
          v33 = v27[3];
          if (v34 >= v33 >> 1)
            v27 = sub_1BA6EA0D0((_QWORD *)(v33 > 1), v34 + 1, 1, v27);
          v27[2] = v34 + 1;
          v35 = &v27[2 * v34];
          v35[4] = v30;
          v35[5] = v32;
          v2 = v66;
        }
        else
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
        }
        sub_1BB873A80();
      }
      while (v72);
    }
    v36 = v61;
    (*(void (**)(char *, uint64_t))(v65 + 8))(v9, v3);

    v37 = MEMORY[0x1BCCE36DC](v27, MEMORY[0x1E0DEA968]);
    v39 = v38;
    swift_bridgeObjectRelease();
    *(_QWORD *)&v71 = sub_1BA5D2E14(v37, v39, (uint64_t *)&v68);
    sub_1BB873A8C();
    swift_release_n();
    swift_bridgeObjectRelease();
    v40 = v62;
    _os_log_impl(&dword_1BA493000, v62, (os_log_type_t)v60, "ShortcutManager failed to add shortcut due to max shortcut count: %ld, with shortcuts: %s", v36, 0x16u);
    v41 = v59;
    swift_arrayDestroy();
    MEMORY[0x1BCCE5C38](v41, -1, -1);
    MEMORY[0x1BCCE5C38](v36, -1, -1);

    v10 = v63;
  }
  else
  {

    swift_release_n();
  }
  v42 = objc_msgSend(v10, sel_orderedShortcuts);
  sub_1BB87324C();
  v66 = v42;

  sub_1BAF6BC8C();
  sub_1BB873A80();
  if (v72)
  {
    while (1)
    {
      sub_1BA76EAE0(&v71, v70);
      sub_1BA747A10((uint64_t)v70, (uint64_t)v69);
      sub_1BAF6BD18();
      if (!swift_dynamicCast())
        goto LABEL_28;
      v43 = v68;
      v44 = (void *)v2[11];
      v45 = objc_msgSend(v68, sel_identifier);
      sub_1BB8729A0();

      v46 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v47 = objc_msgSend(v44, sel_fastCachedTagForID_, v46);

      if (!v47)
      {
        v48 = objc_msgSend(v43, sel_identifier);
        sub_1BB8729A0();

        v49 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v47 = objc_msgSend(v44, sel_slowCachedTagForID_, v49);

        if (!v47)
          break;
      }
      v50 = objc_msgSend((id)objc_opt_self(), sel_isTagAllowedForNewsVersion_, v47);

      swift_unknownObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
      if ((v50 & 1) == 0)
      {
        (*(void (**)(char *, uint64_t))(v65 + 8))(v6, v3);

        v51 = 0;
        v52 = 1;
        goto LABEL_36;
      }
LABEL_29:
      sub_1BB873A80();
      if (!v72)
        goto LABEL_35;
    }

LABEL_28:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v70);
    goto LABEL_29;
  }
LABEL_35:
  (*(void (**)(char *, uint64_t))(v65 + 8))(v6, v3);

  v52 = 0;
  v51 = v64;
LABEL_36:
  __swift_project_boxed_opaque_existential_1(v2 + 5, v2[8]);
  v17 = (void *)sub_1BB86FFC4();
  if (v17)
  {
    v53 = v17;
    v54 = objc_msgSend(v17, sel_rootViewController);

    if (v54)
    {
      v55 = (void *)sub_1BB8733CC();

      v72 = &type metadata for AlertShortcutsLimitReached;
      v73 = sub_1BAF6BCD4();
      *(_QWORD *)&v71 = v51;
      BYTE8(v71) = v52;
      sub_1BB871314();
      swift_allocObject();
      sub_1BB8712E4();
      sub_1BB8712F0();

      swift_release();
    }
    goto LABEL_7;
  }
  return (char)v17;
}

