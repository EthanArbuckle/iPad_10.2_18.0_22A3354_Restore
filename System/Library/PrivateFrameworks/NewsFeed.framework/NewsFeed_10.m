unint64_t sub_1BAACF658()
{
  return 0xD000000000000016;
}

uint64_t sub_1BAACF674@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAACF220(a1, a2);
}

uint64_t sub_1BAACF688(_QWORD *a1)
{
  return sub_1BAACEF54(a1);
}

uint64_t sub_1BAACF69C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA4A2870(&qword_1EF2AFB38, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, (uint64_t)&unk_1BB89B6C0);
  result = sub_1BA4A2870(&qword_1EF2ADB00, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomThemeData, (uint64_t)&unk_1BB89B698);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAACF6F8()
{
  unint64_t result;

  result = qword_1EF2AFB48;
  if (!qword_1EF2AFB48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B7C8, &type metadata for DebugNewsroomThemeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB48);
  }
  return result;
}

void sub_1BAACF73C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF490)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF490);
  }
}

void sub_1BAACF79C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AFB58)
  {
    sub_1BB86C67C();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AFB58);
  }
}

unint64_t sub_1BAACF800()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2AFB60;
  if (!qword_1EF2AFB60)
  {
    sub_1BAACF79C();
    v2 = v1;
    v3 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0038]);
    v4[0] = MEMORY[0x1E0DEA9A0];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0D8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB60);
  }
  return result;
}

uint64_t sub_1BAACF880(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA6BF9E8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAACF8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugNewsroomThemeData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAACF908(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAACF6F8();
    v7 = a3(a1, &type metadata for DebugNewsroomThemeData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAACF964(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    sub_1BAACF73C();
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x1BCCE5B24](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAACF9C0()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v4[2];

  result = qword_1EF2AFB78;
  if (!qword_1EF2AFB78)
  {
    sub_1BAACF79C();
    v2 = v1;
    v3 = sub_1BA4A2870((unint64_t *)&unk_1ED3B04B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0010]);
    v4[0] = MEMORY[0x1E0DEA970];
    v4[1] = v3;
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEA0B8], v2, v4);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB78);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugNewsroomThemeData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BAACFA8C + 4 * byte_1BB89B60E[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BAACFAC0 + 4 * byte_1BB89B609[v4]))();
}

uint64_t sub_1BAACFAC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAACFAC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAACFAD0);
  return result;
}

uint64_t sub_1BAACFADC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAACFAE4);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BAACFAE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAACFAF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugNewsroomThemeData.CodingKeys()
{
  return &type metadata for DebugNewsroomThemeData.CodingKeys;
}

unint64_t sub_1BAACFB10()
{
  unint64_t result;

  result = qword_1EF2AFB80;
  if (!qword_1EF2AFB80)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B7A0, &type metadata for DebugNewsroomThemeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB80);
  }
  return result;
}

unint64_t sub_1BAACFB58()
{
  unint64_t result;

  result = qword_1EF2AFB88;
  if (!qword_1EF2AFB88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B710, &type metadata for DebugNewsroomThemeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB88);
  }
  return result;
}

unint64_t sub_1BAACFBA0()
{
  unint64_t result;

  result = qword_1EF2AFB90;
  if (!qword_1EF2AFB90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B738, &type metadata for DebugNewsroomThemeData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB90);
  }
  return result;
}

uint64_t sub_1BAACFBE4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xEB000000006E6F73 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xED000064496E6F73 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xEE006C72556E6F73 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB96B470 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB96B490 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x655674736574616CLL && a2 == 0xED00006E6F697372)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 8;
    else
      return 9;
  }
}

_QWORD *FeedItemSorter.__allocating_init(sorter:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  swift_allocObject();
  v4 = sub_1BAAD09A4(a1, a2);
  swift_release();
  return v4;
}

_QWORD *FeedItemSorter.init(sorter:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2 = sub_1BAAD09A4(a1, a2);
  swift_release();
  return v2;
}

uint64_t sub_1BAAD0048(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t FunctionTypeMetadata2;
  uint64_t v7;
  char v8;
  uint64_t v9;
  BOOL v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;

  v3 = *v1;
  swift_beginAccess();
  v4 = v1[2];
  v5 = *(_QWORD *)(v3 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  FunctionTypeMetadata2 = swift_getFunctionTypeMetadata2();
  if (MEMORY[0x1BCCE37E4](v4, FunctionTypeMetadata2))
  {
    v7 = 0;
    v24 = FunctionTypeMetadata2;
    v25 = v4;
    while (1)
    {
      v8 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v8 & 1) == 0)
        break;
      v9 = v7 + 1;
      v10 = __OFADD__(v7, 1);
      v26 = *(_OWORD *)(v4 + 16 * v7 + 32);
      result = swift_retain();
      if (v10)
        goto LABEL_11;
      v12 = swift_allocObject();
      *(_QWORD *)(v12 + 16) = v5;
      *(_OWORD *)(v12 + 24) = v26;
      v27 = a1;
      v13 = sub_1BB872EE0();
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v13);
      sub_1BB872C04();
      v14 = swift_bridgeObjectRelease();
      v27 = v28;
      MEMORY[0x1E0C80A78](v14);
      v22[0] = v5;
      v22[1] = sub_1BAAD0BC4;
      v23 = v12;
      v15 = sub_1BB873F0C();
      swift_retain();
      MEMORY[0x1BCCE5B24](MEMORY[0x1E0DECC68], v15);
      v16 = sub_1BB872C58();
      swift_release();
      v17 = swift_bridgeObjectRelease();
      v28 = v16;
      MEMORY[0x1E0C80A78](v17);
      v23 = v5;
      swift_getTupleTypeMetadata2();
      v18 = sub_1BB872EE0();
      v19 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v18);
      v20 = v24;
      a1 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAD0C4C, (uint64_t)v22, v18, v5, MEMORY[0x1E0DEDCE8], v19, MEMORY[0x1E0DEDD18], v21);
      swift_release();
      swift_bridgeObjectRelease();
      v4 = v25;
      ++v7;
      if (v9 == MEMORY[0x1BCCE37E4](v25, v20))
        goto LABEL_9;
    }
    result = sub_1BB873D08();
    __break(1u);
LABEL_11:
    __break(1u);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return a1;
  }
  return result;
}

uint64_t sub_1BAAD0350(void (*a1)(uint64_t *__return_ptr, char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *__return_ptr, char *, char *), uint64_t a6, uint64_t a7)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, double);
  void (*v22)(char *, uint64_t);
  void (*v24)(uint64_t *__return_ptr, char *, char *);
  uint64_t v25;

  v24 = a5;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v13 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v24 - v18;
  *(void (**)(uint64_t *__return_ptr, char *, char *))((char *)&v24 - v18) = a1;
  v21 = *(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(a7 - 8) + 16);
  v21((char *)&v24 + *(int *)(v20 + 48) - v18, a2, a7, v17);
  *(_QWORD *)v15 = a3;
  ((void (*)(char *, uint64_t, uint64_t))v21)(&v15[*(int *)(TupleTypeMetadata2 + 48)], a4, a7);
  v24(&v25, v19, v15);
  v22 = *(void (**)(char *, uint64_t))(v13 + 8);
  v22(v15, TupleTypeMetadata2);
  v22(v19, TupleTypeMetadata2);
  return v25;
}

uint64_t sub_1BAAD0480@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t TupleTypeMetadata2;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v10 = *(int *)(v9 + 48);
  v11 = (char *)&v15 + v10 - v8;
  v12 = a1 + v10;
  v13 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))(v11, v12, a2, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v13 + 32))(a3, v11, a2);
}

uint64_t FeedItemSorter.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t + infix<A>(_:_:)(uint64_t a1)
{
  sub_1BAAD0AA0(a1);
  return swift_retain();
}

uint64_t sub_1BAAD056C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  id *v9;
  uint64_t v10;
  uint64_t v11;
  id *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 v34;
  void *v35;
  id v36;
  void *v37;
  unsigned int v38;
  uint64_t result;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  id v46;
  void *v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  v58 = a4;
  v7 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (id *)((char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v10);
  v12 = (id *)((char *)&v55 - v11);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v55 - v14;
  sub_1BA6AA16C(0, (unint64_t *)&unk_1ED3B9750, v16);
  v18 = v17;
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (uint64_t *)((char *)&v55 - v22);
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v55 + *(int *)(v26 + 48) - v25;
  v56 = a1;
  *(uint64_t *)((char *)&v55 - v25) = a1;
  v28 = (char *)&v55 - v25;
  sub_1BA76C878(a2, (uint64_t)v27);
  v29 = (uint64_t)v23 + *(int *)(v18 + 48);
  v57 = a3;
  *v23 = a3;
  sub_1BA76C878(v58, v29);
  v30 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_1BA76C878((uint64_t)v27, v30);
  sub_1BAAD0C68(v30, (uint64_t)v15);
  v31 = (uint64_t)&v20[*(int *)(v18 + 48)];
  v32 = (uint64_t)v15;
  v33 = (uint64_t)v12;
  sub_1BA76C878(v29, v31);
  sub_1BAAD0C68(v31, (uint64_t)v12);
  LODWORD(v31) = objc_msgSend(*(id *)(v32 + 40), sel_hasThumbnail);
  sub_1BA76C878((uint64_t)v12, (uint64_t)v9);
  if (!(_DWORD)v31)
  {
    sub_1BA717468((uint64_t)v9);
    goto LABEL_6;
  }
  v34 = objc_msgSend(v9[5], sel_hasThumbnail);
  sub_1BA717468((uint64_t)v9);
  if ((v34 & 1) == 0)
  {
LABEL_6:
    v38 = objc_msgSend(v12[5], sel_hasThumbnail);
    sub_1BA717468((uint64_t)v12);
    sub_1BA717468(v32);
    sub_1BA7695E4((uint64_t)v23, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    sub_1BA7695E4((uint64_t)v28, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
    return v38 ^ 1;
  }
  v35 = *(void **)(v32 + 40);
  v36 = objc_msgSend(v35, sel_title);
  if (v36)
  {
    v37 = v36;
    sub_1BB8729A0();

  }
  v40 = objc_msgSend(v35, sel_shortExcerpt);
  if (v40)
  {
    v41 = v40;
    sub_1BB8729A0();

  }
  v42 = sub_1BB872AB4();
  swift_bridgeObjectRelease();
  v43 = sub_1BB872AB4();
  result = swift_bridgeObjectRelease();
  v44 = v42 + v43;
  if (__OFADD__(v42, v43))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  v45 = *(void **)(v33 + 40);
  v46 = objc_msgSend(v45, sel_title);
  if (v46)
  {
    v47 = v46;
    sub_1BB8729A0();

  }
  v48 = objc_msgSend(v45, sel_shortExcerpt);
  if (v48)
  {
    v49 = v48;
    sub_1BB8729A0();

  }
  v50 = sub_1BB872AB4();
  swift_bridgeObjectRelease();
  v51 = sub_1BB872AB4();
  result = swift_bridgeObjectRelease();
  v52 = __OFADD__(v50, v51);
  v53 = v50 + v51;
  if (v52)
    goto LABEL_20;
  sub_1BA717468(v33);
  sub_1BA717468(v32);
  sub_1BA7695E4((uint64_t)v23, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  result = sub_1BA7695E4((uint64_t)v28, (unint64_t *)&unk_1ED3B9750, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  v54 = v44 - v53;
  if (__OFSUB__(v44, v53))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (v54)
    return v54 > 0;
  else
    return v56 < v57;
}

_QWORD *sub_1BAAD09A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  _QWORD *v7;

  v3 = v2;
  v6 = *(_QWORD *)(*v3 + 80);
  swift_getTupleTypeMetadata2();
  swift_getFunctionTypeMetadata2();
  v3[2] = sub_1BB872748();
  v7 = (_QWORD *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a1;
  v7[4] = a2;
  swift_beginAccess();
  sub_1BB872EE0();
  swift_retain();
  sub_1BB872EB0();
  swift_endAccess();
  return v3;
}

uint64_t sub_1BAAD0AA0(uint64_t a1)
{
  uint64_t v2;

  swift_beginAccess();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_getTupleTypeMetadata2();
  swift_getFunctionTypeMetadata2();
  v2 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v2);
  sub_1BB872EA4();
  swift_endAccess();
  return a1;
}

uint64_t method lookup function for FeedItemSorter()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedItemSorter.__allocating_init(sorter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_1BAAD0BA0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAD0BC4(void (*a1)(uint64_t *__return_ptr, char *, char *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BAAD0350(a1, a2, a3, a4, *(void (**)(uint64_t *__return_ptr, char *, char *))(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 16));
}

uint64_t sub_1BAAD0BD0(char *a1, char *a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t, char *, _QWORD, char *);
  uint64_t v6;
  uint64_t TupleTypeMetadata2;

  v5 = *(uint64_t (**)(uint64_t, char *, _QWORD, char *))(v2 + 24);
  v6 = *(_QWORD *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return v5(v6, &a1[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)a2, &a2[*(int *)(TupleTypeMetadata2 + 48)]) & 1;
}

uint64_t sub_1BAAD0C4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BAAD0480(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BAAD0C68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAAD0CAC@<X0>(char *a1@<X0>, char *a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t (*v7)(uint64_t, char *, _QWORD, char *);
  uint64_t v8;
  uint64_t TupleTypeMetadata2;
  uint64_t result;

  v7 = *(uint64_t (**)(uint64_t, char *, _QWORD, char *))(v3 + 24);
  v8 = *(_QWORD *)a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  result = v7(v8, &a1[*(int *)(TupleTypeMetadata2 + 48)], *(_QWORD *)a2, &a2[*(int *)(TupleTypeMetadata2 + 48)]);
  *a3 = result & 1;
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatConsoleDisplay(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAAD0D74 + 4 * byte_1BB89B845[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAAD0DA8 + 4 * asc_1BB89B840[v4]))();
}

uint64_t sub_1BAAD0DA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAD0DB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAD0DB8);
  return result;
}

uint64_t sub_1BAAD0DC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAD0DCCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAAD0DD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAD0DD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatConsoleDisplay()
{
  return &type metadata for DebugFormatConsoleDisplay;
}

unint64_t sub_1BAAD0DF8()
{
  unint64_t result;

  result = qword_1EF2AFB98;
  if (!qword_1EF2AFB98)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B924, &type metadata for DebugFormatConsoleDisplay);
    atomic_store(result, (unint64_t *)&qword_1EF2AFB98);
  }
  return result;
}

uint64_t sub_1BAAD0E3C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7F4AB4(*a1, *a2);
}

uint64_t sub_1BAAD0E48()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAD0EEC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAAD0F6C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAD100C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAAD1164();
  *a1 = result;
  return result;
}

void sub_1BAAD1038(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE900000000000064;
  v4 = 0xE700000000000000;
  v5 = 0x6C616974726170;
  if (v2 != 1)
  {
    v5 = 0x6465646E61707865;
    v4 = 0xE800000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x657370616C6C6F63;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAAD109C()
{
  sub_1BAAD11AC();
  return sub_1BB872CDC();
}

uint64_t sub_1BAAD10DC()
{
  sub_1BAAD11AC();
  return sub_1BB872CD0();
}

uint64_t sub_1BAAD1124()
{
  sub_1BAAD11AC();
  return sub_1BB872CC4();
}

uint64_t sub_1BAAD1164()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unint64_t sub_1BAAD11AC()
{
  unint64_t result;

  result = qword_1EF2AFBA0;
  if (!qword_1EF2AFBA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89B8AC, &type metadata for DebugFormatConsoleDisplay);
    atomic_store(result, (unint64_t *)&qword_1EF2AFBA0);
  }
  return result;
}

unint64_t FeedJournalEntry.slots.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA67035C(v2);
}

uint64_t sub_1BAAD11FC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  id v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t result;
  _OWORD v18[15];
  uint64_t v19;

  sub_1BA4AD288(0, &qword_1ED3AB810, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  swift_retain();
  v9 = a2;
  sub_1BB20377C(a1, a2, (uint64_t)v18, a4);
  v10 = v18[13];
  *(_OWORD *)(v8 + 224) = v18[12];
  *(_OWORD *)(v8 + 240) = v10;
  *(_OWORD *)(v8 + 256) = v18[14];
  *(_QWORD *)(v8 + 272) = v19;
  v11 = v18[9];
  *(_OWORD *)(v8 + 160) = v18[8];
  *(_OWORD *)(v8 + 176) = v11;
  v12 = v18[11];
  *(_OWORD *)(v8 + 192) = v18[10];
  *(_OWORD *)(v8 + 208) = v12;
  v13 = v18[5];
  *(_OWORD *)(v8 + 96) = v18[4];
  *(_OWORD *)(v8 + 112) = v13;
  v14 = v18[7];
  *(_OWORD *)(v8 + 128) = v18[6];
  *(_OWORD *)(v8 + 144) = v14;
  v15 = v18[1];
  *(_OWORD *)(v8 + 32) = v18[0];
  *(_OWORD *)(v8 + 48) = v15;
  v16 = v18[3];
  *(_OWORD *)(v8 + 64) = v18[2];
  *(_OWORD *)(v8 + 80) = v16;

  result = swift_release();
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = 1;
  *(double *)(a3 + 16) = a4;
  return result;
}

uint64_t FeedJournalEntry.chosenGroup.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
    return sub_1BA670450(*(_QWORD *)v1 + 32, a1);
  __break(1u);
  return result;
}

_QWORD *assignWithCopy for FeedJournalEntry(_QWORD *a1, _QWORD *a2)
{
  unint64_t *v4;
  unint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAAD13E8((uint64_t)(a1 + 1));
      *v4 = a2[1];
    }
  }
  else
  {
    *v4 = v5;
    if (v5 >= 2)
      swift_bridgeObjectRetain();
  }
  a1[2] = a2[2];
  return a1;
}

uint64_t sub_1BAAD13E8(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9610, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *assignWithTake for FeedJournalEntry(_QWORD *a1, _QWORD *a2)
{
  unint64_t *v4;
  unint64_t v5;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a1 + 1;
  v5 = a2[1];
  if (a1[1] >= 2uLL)
  {
    if (v5 >= 2)
    {
      *v4 = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BAAD13E8((uint64_t)(a1 + 1));
  }
  *v4 = v5;
LABEL_6:
  a1[2] = a2[2];
  return a1;
}

void sub_1BAAD14B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
  {
    sub_1BA670450(*(_QWORD *)v0 + 32, (uint64_t)&v3);
    sub_1BA5B0E6C((uint64_t)&v4, (uint64_t)&v1);
    sub_1BA67036C((uint64_t)&v3);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BAAD1784);
}

void sub_1BAAD17A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
  {
    sub_1BA670450(*(_QWORD *)v0 + 32, (uint64_t)&v3);
    sub_1BA5B0E6C((uint64_t)&v4, (uint64_t)&v1);
    sub_1BA67036C((uint64_t)&v3);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BAAD1A5CLL);
}

void sub_1BAAD1A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  if (*(_QWORD *)(*(_QWORD *)v0 + 16))
  {
    sub_1BA670450(*(_QWORD *)v0 + 32, (uint64_t)&v3);
    sub_1BA5B0E6C((uint64_t)&v4, (uint64_t)&v1);
    sub_1BA67036C((uint64_t)&v3);
    __asm { BR              X10 }
  }
  __break(1u);
  JUMPOUT(0x1BAAD1D74);
}

void sub_1BAAD1D94(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[2];
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a1;
  v24 = a2;
  v19 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v19);
  sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  MEMORY[0x1E0C80A78](v5);
  v21 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v20 = (char *)v18 - v8;
  v22 = type metadata accessor for OsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v22);
  v18[1] = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v18[0] = (char *)v18 - v11;
  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v12);
  MEMORY[0x1E0C80A78](v13);
  MEMORY[0x1E0C80A78](v14);
  v15 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v15);
  sub_1BAAD4B2C(v2, (uint64_t)v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v17 = (char *)sub_1BAAD200C + 4 * word_1BB89B980[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAAD200C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  sub_1BA5D5518(v0, v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  sub_1BA57B488(v2, v1, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v5 = type metadata accessor for FormatPostPurchase();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v1, 1, v5) == 1)
  {
    sub_1BA502AD0(v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    sub_1BA502AD0(v1, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    v6 = type metadata accessor for FormatPostPurchaseData();
    v7 = *(_QWORD *)(v4 - 120);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v7, 1, 1, v6);
  }
  else
  {
    v7 = *(_QWORD *)(v4 - 120);
    sub_1BB5D5660(*(_QWORD *)(v4 - 96), v7);
    sub_1BA502AD0(v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    result = sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    if (v3)
      return result;
    v9 = type metadata accessor for FormatPostPurchaseData();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v7, 0, 1, v9);
  }
  v10 = *(_QWORD **)(v4 - 144);
  *v10 = 0;
  v10[1] = 0;
  sub_1BA5D5518(v7, (uint64_t)v10 + *(int *)(*(_QWORD *)(v4 - 104) + 20), &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
  sub_1BA5193C4((uint64_t)v10, *(_QWORD *)(v4 - 72), type metadata accessor for OsloSheetPurchaseDataModel);
  type metadata accessor for FormatPurchaseData(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BAAD2460@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPurchaseAction.init(from:)(a1, a2);
}

void sub_1BAAD2474(_QWORD *a1)
{
  FormatPurchaseAction.encode(to:)(a1);
}

void _s8NewsFeed20FormatPurchaseActionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  _QWORD v24[4];
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a1;
  v34 = a2;
  v2 = type metadata accessor for FormatOsloSheetPurchaseDataModel(0);
  MEMORY[0x1E0C80A78](v2);
  v29 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for FormatPurchaseLandingPage();
  v28 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v24[2] = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA896B1C(0, &qword_1EF2AFBC0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  v27 = v5;
  MEMORY[0x1E0C80A78](v5);
  v32 = (char *)v24 - v6;
  sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
  MEMORY[0x1E0C80A78](v7);
  v24[3] = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v30 = (char *)v24 - v10;
  v25 = type metadata accessor for FormatPostPurchase();
  MEMORY[0x1E0C80A78](v25);
  v24[1] = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA896B1C(0, (unint64_t *)&qword_1EF2AFBC8, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v12);
  v26 = (char *)v24 - v13;
  sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  MEMORY[0x1E0C80A78](v14);
  MEMORY[0x1E0C80A78](v15);
  v16 = type metadata accessor for FormatPurchaseAction();
  MEMORY[0x1E0C80A78](v16);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v18);
  sub_1BAAD4B70();
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v24 + *(int *)(v21 + 48) - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAAD4B2C(v33, (uint64_t)v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAAD4B2C(v34, (uint64_t)v22);
  v23 = (char *)sub_1BAAD27B8 + 4 * byte_1BB89B98A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAAD27B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_1BAAD4B2C(v0, v5);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_1BA5D5518(v6, v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    v10 = *(_QWORD *)(v7 - 152);
    v11 = v10 + *(int *)(v4 + 48);
    sub_1BA5D5518(v5, v10, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    sub_1BA57B488(v2, v11, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    v12 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
    v13 = *(_QWORD *)(v7 - 160);
    if (v12(v10, 1, v13) == 1)
    {
      sub_1BA502AD0(v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      if (v12(v11, 1, v13) == 1)
      {
        sub_1BA502AD0(v10, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
LABEL_3:
        v8 = 1;
LABEL_12:
        v9 = (uint64_t (*)(_QWORD))type metadata accessor for FormatPurchaseAction;
        goto LABEL_13;
      }
    }
    else
    {
      sub_1BA57B488(v10, v3, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      if (v12(v11, 1, v13) != 1)
      {
        v14 = *(_QWORD *)(v7 - 184);
        sub_1BA5193C4(v11, v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
        v15 = _s8NewsFeed18FormatPostPurchaseO2eeoiySbAC_ACtFZ_0(v3, v14);
        sub_1BA4A2E80(v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
        sub_1BA502AD0(v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
        sub_1BA502AD0(v10, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        if ((v15 & 1) != 0)
          goto LABEL_3;
LABEL_11:
        v8 = 0;
        goto LABEL_12;
      }
      sub_1BA502AD0(v2, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
      sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPostPurchase);
    }
    sub_1BA896B7C(v10, (unint64_t *)&qword_1EF2AFBC8, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
    goto LABEL_11;
  }
  sub_1BA502AD0(v5, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
  v8 = 0;
  v9 = (uint64_t (*)(_QWORD))sub_1BAAD4B70;
LABEL_13:
  sub_1BA4A2E80(v0, v9);
  return v8 & 1;
}

uint64_t sub_1BAAD2C90(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAAD2D28(&qword_1EF2AFBA8, (uint64_t)&protocol conformance descriptor for FormatPurchaseAction);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAAD2CC4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAAD2D28(qword_1ED3BB818, (uint64_t)&protocol conformance descriptor for FormatPurchaseAction);
  a1[2] = sub_1BAAD2D28(&qword_1EF2AFBB0, (uint64_t)&protocol conformance descriptor for FormatPurchaseAction);
  result = sub_1BAAD2D28(&qword_1EF2AFBB8, (uint64_t)&protocol conformance descriptor for FormatPurchaseAction);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAAD2D28(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatPurchaseAction();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatPurchaseAction(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int (*v19)(uint64_t *, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    a1 = (uint64_t *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        v13 = *((_QWORD *)a2 + 1);
        *a1 = *(_QWORD *)a2;
        a1[1] = v13;
        v14 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
        v15 = (uint64_t *)((char *)a1 + v14);
        v16 = (uint64_t *)&a2[v14];
        v17 = type metadata accessor for FormatPostPurchase();
        v18 = *(_QWORD *)(v17 - 8);
        v19 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v18 + 48);
        swift_bridgeObjectRetain();
        if (v19(v16, 1, v17))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        }
        else
        {
          v24 = type metadata accessor for FormatURL();
          v25 = *(_QWORD *)(v24 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v25 + 48))(v16, 2, v24))
          {
            memcpy(v15, v16, *(_QWORD *)(v18 + 64));
          }
          else
          {
            v38 = swift_getEnumCaseMultiPayload();
            if (v38 == 2)
            {
              v50 = v16[1];
              v62 = v50;
              v64 = *v16;
              v51 = v16[2];
              v52 = *((_BYTE *)v16 + 24);
              sub_1BA690C00(v64, v50, v51, v52);
              *v15 = v64;
              v15[1] = v62;
              v15[2] = v51;
              *((_BYTE *)v15 + 24) = v52;
            }
            else
            {
              if (v38 == 1)
              {
                v39 = v16[1];
                *v15 = *v16;
                v15[1] = v39;
                v15[2] = v16[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                v53 = sub_1BB86C67C();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v53 - 8) + 16))(v15, v16, v53);
                v54 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v15 + *(int *)(v54 + 20)) = *(uint64_t *)((char *)v16 + *(int *)(v54 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v15, 0, 2, v24);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        goto LABEL_46;
      case 1:
        v8 = type metadata accessor for FormatPurchaseLandingPage();
        v9 = *(_QWORD *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
          goto LABEL_46;
        }
        v26 = *(_QWORD *)a2;
        v27 = *((_QWORD *)a2 + 1);
        v28 = *((_QWORD *)a2 + 2);
        v29 = a2[24];
        sub_1BA60DF54(*(_QWORD *)a2, v27, v28, v29);
        *a1 = v26;
        a1[1] = v27;
        a1[2] = v28;
        *((_BYTE *)a1 + 24) = v29;
        v30 = *(int *)(v8 + 20);
        v31 = (uint64_t *)((char *)a1 + v30);
        v32 = (uint64_t *)&a2[v30];
        v33 = type metadata accessor for FormatPostPurchase();
        v34 = *(_QWORD *)(v33 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
        }
        else
        {
          v40 = type metadata accessor for FormatURL();
          v41 = *(_QWORD *)(v40 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v41 + 48))(v32, 2, v40))
          {
            memcpy(v31, v32, *(_QWORD *)(v34 + 64));
          }
          else
          {
            v42 = swift_getEnumCaseMultiPayload();
            if (v42 == 2)
            {
              v55 = v32[1];
              v61 = v55;
              v63 = *v32;
              v56 = v32[2];
              v60 = v56;
              v57 = *((_BYTE *)v32 + 24);
              sub_1BA690C00(v63, v55, v56, v57);
              *v31 = v63;
              v31[1] = v61;
              v31[2] = v60;
              *((_BYTE *)v31 + 24) = v57;
            }
            else
            {
              if (v42 == 1)
              {
                v43 = v32[1];
                *v31 = *v32;
                v31[1] = v43;
                v31[2] = v32[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                v58 = sub_1BB86C67C();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v58 - 8) + 16))(v31, v32, v58);
                v59 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v31 + *(int *)(v59 + 20)) = *(uint64_t *)((char *)v32 + *(int *)(v59 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v31, 0, 2, v40);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        }
LABEL_45:
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
        goto LABEL_46;
      case 0:
        v8 = type metadata accessor for FormatPostPurchase();
        v9 = *(_QWORD *)(v8 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
LABEL_46:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v22 = type metadata accessor for FormatURL();
        v23 = *(_QWORD *)(v22 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(a2, 2, v22))
        {
          memcpy(a1, a2, *(_QWORD *)(v9 + 64));
        }
        else
        {
          v36 = swift_getEnumCaseMultiPayload();
          if (v36 == 2)
          {
            v44 = *(_QWORD *)a2;
            v45 = *((_QWORD *)a2 + 1);
            v46 = *((_QWORD *)a2 + 2);
            v47 = a2[24];
            sub_1BA690C00(v44, v45, v46, v47);
            *a1 = v44;
            a1[1] = v45;
            a1[2] = v46;
            *((_BYTE *)a1 + 24) = v47;
          }
          else
          {
            if (v36 == 1)
            {
              v37 = *((_QWORD *)a2 + 1);
              *a1 = *(_QWORD *)a2;
              a1[1] = v37;
              a1[2] = *((_QWORD *)a2 + 2);
              swift_bridgeObjectRetain();
            }
            else
            {
              v48 = sub_1BB86C67C();
              (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16))(a1, a2, v48);
              v49 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)a1 + *(int *)(v49 + 20)) = *(_QWORD *)&a2[*(int *)(v49 + 20)];
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v23 + 56))(a1, 0, 2, v22);
        }
        goto LABEL_45;
    }
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for FormatPurchaseAction(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    v3 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
LABEL_8:
    a1 += v3;
    goto LABEL_9;
  }
  if ((_DWORD)result == 1)
  {
    v4 = type metadata accessor for FormatPurchaseLandingPage();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, 1, v4);
    if ((_DWORD)result)
      return result;
    sub_1BA60DFC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
    v3 = *(int *)(v4 + 20);
    goto LABEL_8;
  }
  if ((_DWORD)result)
    return result;
LABEL_9:
  v5 = type metadata accessor for FormatPostPurchase();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(a1, 1, v5);
  if (!(_DWORD)result)
  {
    v6 = type metadata accessor for FormatURL();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 48))(a1, 2, v6);
    if (!(_DWORD)result)
    {
      result = swift_getEnumCaseMultiPayload();
      if ((_DWORD)result == 2)
        return sub_1BA5A7EF8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
      if ((_DWORD)result == 1)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        if ((_DWORD)result)
          return result;
        v7 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
        type metadata accessor for FormatAbsoluteURL();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t *initializeWithCopy for FormatPurchaseAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      v10 = *((_QWORD *)a2 + 1);
      *a1 = *(_QWORD *)a2;
      a1[1] = v10;
      v11 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
      v12 = (uint64_t *)((char *)a1 + v11);
      v13 = (uint64_t *)&a2[v11];
      v14 = type metadata accessor for FormatPostPurchase();
      v15 = *(_QWORD *)(v14 - 8);
      v16 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v15 + 48);
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        v21 = type metadata accessor for FormatURL();
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v22 + 48))(v13, 2, v21))
        {
          memcpy(v12, v13, *(_QWORD *)(v15 + 64));
        }
        else
        {
          v35 = swift_getEnumCaseMultiPayload();
          if (v35 == 2)
          {
            v47 = v13[1];
            v60 = v47;
            v62 = *v13;
            v48 = v13[2];
            v49 = *((_BYTE *)v13 + 24);
            sub_1BA690C00(v62, v47, v48, v49);
            *v12 = v62;
            v12[1] = v60;
            v12[2] = v48;
            *((_BYTE *)v12 + 24) = v49;
          }
          else
          {
            if (v35 == 1)
            {
              v36 = v13[1];
              *v12 = *v13;
              v12[1] = v36;
              v12[2] = v13[2];
              swift_bridgeObjectRetain();
            }
            else
            {
              v50 = sub_1BB86C67C();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v50 - 8) + 16))(v12, v13, v50);
              v51 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)v12 + *(int *)(v51 + 20)) = *(uint64_t *)((char *)v13 + *(int *)(v51 + 20));
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v12, 0, 2, v21);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      goto LABEL_43;
    case 1:
      v7 = type metadata accessor for FormatPurchaseLandingPage();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        goto LABEL_43;
      }
      v23 = *(_QWORD *)a2;
      v24 = *((_QWORD *)a2 + 1);
      v25 = *((_QWORD *)a2 + 2);
      v26 = a2[24];
      sub_1BA60DF54(*(_QWORD *)a2, v24, v25, v26);
      *a1 = v23;
      a1[1] = v24;
      a1[2] = v25;
      *((_BYTE *)a1 + 24) = v26;
      v27 = *(int *)(v7 + 20);
      v28 = (uint64_t *)((char *)a1 + v27);
      v29 = (uint64_t *)&a2[v27];
      v30 = type metadata accessor for FormatPostPurchase();
      v31 = *(_QWORD *)(v30 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v37 = type metadata accessor for FormatURL();
        v38 = *(_QWORD *)(v37 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v38 + 48))(v29, 2, v37))
        {
          memcpy(v28, v29, *(_QWORD *)(v31 + 64));
        }
        else
        {
          v39 = swift_getEnumCaseMultiPayload();
          if (v39 == 2)
          {
            v52 = v29[1];
            v59 = v52;
            v61 = *v29;
            v53 = v29[2];
            v58 = v53;
            v54 = *((_BYTE *)v29 + 24);
            sub_1BA690C00(v61, v52, v53, v54);
            *v28 = v61;
            v28[1] = v59;
            v28[2] = v58;
            *((_BYTE *)v28 + 24) = v54;
          }
          else
          {
            if (v39 == 1)
            {
              v40 = v29[1];
              *v28 = *v29;
              v28[1] = v40;
              v28[2] = v29[2];
              swift_bridgeObjectRetain();
            }
            else
            {
              v55 = sub_1BB86C67C();
              (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v28, v29, v55);
              v56 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)v28 + *(int *)(v56 + 20)) = *(uint64_t *)((char *)v29 + *(int *)(v56 + 20));
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v28, 0, 2, v37);
        }
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
LABEL_42:
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      goto LABEL_43;
    case 0:
      v7 = type metadata accessor for FormatPostPurchase();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_43:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      v19 = type metadata accessor for FormatURL();
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(a2, 2, v19))
      {
        memcpy(a1, a2, *(_QWORD *)(v8 + 64));
      }
      else
      {
        v33 = swift_getEnumCaseMultiPayload();
        if (v33 == 2)
        {
          v41 = *(_QWORD *)a2;
          v42 = *((_QWORD *)a2 + 1);
          v43 = *((_QWORD *)a2 + 2);
          v44 = a2[24];
          sub_1BA690C00(v41, v42, v43, v44);
          *a1 = v41;
          a1[1] = v42;
          a1[2] = v43;
          *((_BYTE *)a1 + 24) = v44;
        }
        else
        {
          if (v33 == 1)
          {
            v34 = *((_QWORD *)a2 + 1);
            *a1 = *(_QWORD *)a2;
            a1[1] = v34;
            a1[2] = *((_QWORD *)a2 + 2);
            swift_bridgeObjectRetain();
          }
          else
          {
            v45 = sub_1BB86C67C();
            (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 16))(a1, a2, v45);
            v46 = type metadata accessor for FormatAbsoluteURL();
            *(uint64_t *)((char *)a1 + *(int *)(v46 + 20)) = *(_QWORD *)&a2[*(int *)(v46 + 20)];
          }
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 2, v19);
      }
      goto LABEL_42;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

uint64_t *assignWithCopy for FormatPurchaseAction(uint64_t *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int (*v15)(uint64_t *, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (a1 != (uint64_t *)a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatPurchaseAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *(_QWORD *)a2;
        a1[1] = *((_QWORD *)a2 + 1);
        v10 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
        v11 = (uint64_t *)((char *)a1 + v10);
        v12 = (uint64_t *)&a2[v10];
        v13 = type metadata accessor for FormatPostPurchase();
        v14 = *(_QWORD *)(v13 - 8);
        v15 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v14 + 48);
        swift_bridgeObjectRetain();
        if (v15(v12, 1, v13))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
        }
        else
        {
          v20 = type metadata accessor for FormatURL();
          v21 = *(_QWORD *)(v20 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v21 + 48))(v12, 2, v20))
          {
            memcpy(v11, v12, *(_QWORD *)(v14 + 64));
          }
          else
          {
            v33 = swift_getEnumCaseMultiPayload();
            if (v33 == 2)
            {
              v43 = v12[1];
              v56 = v43;
              v58 = *v12;
              v44 = v12[2];
              v45 = *((_BYTE *)v12 + 24);
              sub_1BA690C00(v58, v43, v44, v45);
              *v11 = v58;
              v11[1] = v56;
              v11[2] = v44;
              *((_BYTE *)v11 + 24) = v45;
            }
            else
            {
              if (v33 == 1)
              {
                *v11 = *v12;
                v11[1] = v12[1];
                v11[2] = v12[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                v46 = sub_1BB86C67C();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v46 - 8) + 16))(v11, v12, v46);
                v47 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v11 + *(int *)(v47 + 20)) = *(uint64_t *)((char *)v12 + *(int *)(v47 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v11, 0, 2, v20);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        goto LABEL_44;
      case 1:
        v7 = type metadata accessor for FormatPurchaseLandingPage();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          goto LABEL_44;
        }
        v22 = *(_QWORD *)a2;
        v23 = *((_QWORD *)a2 + 1);
        v24 = *((_QWORD *)a2 + 2);
        v25 = a2[24];
        sub_1BA60DF54(*(_QWORD *)a2, v23, v24, v25);
        *a1 = v22;
        a1[1] = v23;
        a1[2] = v24;
        *((_BYTE *)a1 + 24) = v25;
        v26 = *(int *)(v7 + 20);
        v27 = (uint64_t *)((char *)a1 + v26);
        v28 = (uint64_t *)&a2[v26];
        v29 = type metadata accessor for FormatPostPurchase();
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v34 = type metadata accessor for FormatURL();
          v35 = *(_QWORD *)(v34 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48))(v28, 2, v34))
          {
            memcpy(v27, v28, *(_QWORD *)(v30 + 64));
          }
          else
          {
            v36 = swift_getEnumCaseMultiPayload();
            if (v36 == 2)
            {
              v48 = v28[1];
              v55 = v48;
              v57 = *v28;
              v49 = v28[2];
              v54 = v49;
              v50 = *((_BYTE *)v28 + 24);
              sub_1BA690C00(v57, v48, v49, v50);
              *v27 = v57;
              v27[1] = v55;
              v27[2] = v54;
              *((_BYTE *)v27 + 24) = v50;
            }
            else
            {
              if (v36 == 1)
              {
                *v27 = *v28;
                v27[1] = v28[1];
                v27[2] = v28[2];
                swift_bridgeObjectRetain();
              }
              else
              {
                v51 = sub_1BB86C67C();
                (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v51 - 8) + 16))(v27, v28, v51);
                v52 = type metadata accessor for FormatAbsoluteURL();
                *(uint64_t *)((char *)v27 + *(int *)(v52 + 20)) = *(uint64_t *)((char *)v28 + *(int *)(v52 + 20));
              }
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v27, 0, 2, v34);
          }
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
        }
LABEL_43:
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        goto LABEL_44;
      case 0:
        v7 = type metadata accessor for FormatPostPurchase();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
LABEL_44:
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        v18 = type metadata accessor for FormatURL();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 2, v18))
        {
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
        }
        else
        {
          v32 = swift_getEnumCaseMultiPayload();
          if (v32 == 2)
          {
            v37 = *(_QWORD *)a2;
            v38 = *((_QWORD *)a2 + 1);
            v39 = *((_QWORD *)a2 + 2);
            v40 = a2[24];
            sub_1BA690C00(v37, v38, v39, v40);
            *a1 = v37;
            a1[1] = v38;
            a1[2] = v39;
            *((_BYTE *)a1 + 24) = v40;
          }
          else
          {
            if (v32 == 1)
            {
              *a1 = *(_QWORD *)a2;
              a1[1] = *((_QWORD *)a2 + 1);
              a1[2] = *((_QWORD *)a2 + 2);
              swift_bridgeObjectRetain();
            }
            else
            {
              v41 = sub_1BB86C67C();
              (*(void (**)(uint64_t *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16))(a1, a2, v41);
              v42 = type metadata accessor for FormatAbsoluteURL();
              *(uint64_t *)((char *)a1 + *(int *)(v42 + 20)) = *(_QWORD *)&a2[*(int *)(v42 + 20)];
            }
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v19 + 56))(a1, 0, 2, v18);
        }
        goto LABEL_43;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *initializeWithTake for FormatPurchaseAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = type metadata accessor for FormatPostPurchase();
      v14 = *(_QWORD *)(v13 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        v21 = type metadata accessor for FormatURL();
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
        {
          memcpy(v11, v12, *(_QWORD *)(v14 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(v11, v12, *(_QWORD *)(v22 + 64));
          }
          else
          {
            v33 = sub_1BB86C67C();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v11, v12, v33);
            v34 = type metadata accessor for FormatAbsoluteURL();
            *(_QWORD *)&v11[*(int *)(v34 + 20)] = *(_QWORD *)&v12[*(int *)(v34 + 20)];
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 2, v21);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
      goto LABEL_37;
    case 1:
      v16 = type metadata accessor for FormatPurchaseLandingPage();
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
        v23 = *(int *)(v16 + 20);
        v24 = (char *)a1 + v23;
        v25 = (char *)a2 + v23;
        v26 = type metadata accessor for FormatPostPurchase();
        v27 = *(_QWORD *)(v26 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        }
        else
        {
          v29 = type metadata accessor for FormatURL();
          v30 = *(_QWORD *)(v29 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 2, v29))
          {
            memcpy(v24, v25, *(_QWORD *)(v27 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v24, v25, *(_QWORD *)(v30 + 64));
            }
            else
            {
              v35 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v24, v25, v35);
              v36 = type metadata accessor for FormatAbsoluteURL();
              *(_QWORD *)&v24[*(int *)(v36 + 20)] = *(_QWORD *)&v25[*(int *)(v36 + 20)];
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 2, v29);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      }
      goto LABEL_37;
    case 0:
      v7 = type metadata accessor for FormatPostPurchase();
      v8 = *(_QWORD *)(v7 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        v19 = type metadata accessor for FormatURL();
        v20 = *(_QWORD *)(v19 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(a2, 2, v19))
        {
          memcpy(a1, a2, *(_QWORD *)(v8 + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload())
          {
            memcpy(a1, a2, *(_QWORD *)(v20 + 64));
          }
          else
          {
            v31 = sub_1BB86C67C();
            (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
            v32 = type metadata accessor for FormatAbsoluteURL();
            *(_QWORD *)((char *)a1 + *(int *)(v32 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v32 + 20));
            swift_storeEnumTagMultiPayload();
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 2, v19);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
LABEL_37:
      swift_storeEnumTagMultiPayload();
      return a1;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatPurchaseAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatPurchaseAction);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for FormatOsloSheetPurchaseDataModel(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = type metadata accessor for FormatPostPurchase();
        v14 = *(_QWORD *)(v13 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
        }
        else
        {
          v21 = type metadata accessor for FormatURL();
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v12, 2, v21))
          {
            memcpy(v11, v12, *(_QWORD *)(v14 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v11, v12, *(_QWORD *)(v22 + 64));
            }
            else
            {
              v33 = sub_1BB86C67C();
              (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v11, v12, v33);
              v34 = type metadata accessor for FormatAbsoluteURL();
              *(_QWORD *)&v11[*(int *)(v34 + 20)] = *(_QWORD *)&v12[*(int *)(v34 + 20)];
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v11, 0, 2, v21);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
        goto LABEL_38;
      case 1:
        v16 = type metadata accessor for FormatPurchaseLandingPage();
        v17 = *(_QWORD *)(v16 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB1E0, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPage);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
          v23 = *(int *)(v16 + 20);
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          v26 = type metadata accessor for FormatPostPurchase();
          v27 = *(_QWORD *)(v26 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
            memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
          }
          else
          {
            v29 = type metadata accessor for FormatURL();
            v30 = *(_QWORD *)(v29 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 2, v29))
            {
              memcpy(v24, v25, *(_QWORD *)(v27 + 64));
            }
            else
            {
              if (swift_getEnumCaseMultiPayload())
              {
                memcpy(v24, v25, *(_QWORD *)(v30 + 64));
              }
              else
              {
                v35 = sub_1BB86C67C();
                (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v24, v25, v35);
                v36 = type metadata accessor for FormatAbsoluteURL();
                *(_QWORD *)&v24[*(int *)(v36 + 20)] = *(_QWORD *)&v25[*(int *)(v36 + 20)];
                swift_storeEnumTagMultiPayload();
              }
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v24, 0, 2, v29);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
        }
        goto LABEL_38;
      case 0:
        v7 = type metadata accessor for FormatPostPurchase();
        v8 = *(_QWORD *)(v7 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BE290, (void (*)(uint64_t))type metadata accessor for FormatPostPurchase);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        }
        else
        {
          v19 = type metadata accessor for FormatURL();
          v20 = *(_QWORD *)(v19 - 8);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v20 + 48))(a2, 2, v19))
          {
            memcpy(a1, a2, *(_QWORD *)(v8 + 64));
          }
          else
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(a1, a2, *(_QWORD *)(v20 + 64));
            }
            else
            {
              v31 = sub_1BB86C67C();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(a1, a2, v31);
              v32 = type metadata accessor for FormatAbsoluteURL();
              *(_QWORD *)((char *)a1 + *(int *)(v32 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v32 + 20));
              swift_storeEnumTagMultiPayload();
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(a1, 0, 2, v19);
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
LABEL_38:
        swift_storeEnumTagMultiPayload();
        return a1;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1BAAD4B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatPurchaseAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAAD4B70()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2AFBD0)
  {
    type metadata accessor for FormatPurchaseAction();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2AFBD0);
  }
}

ValueMetadata *type metadata accessor for DebugFormatFilter()
{
  return &type metadata for DebugFormatFilter;
}

uint64_t sub_1BAAD4BE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void (*v10)(char *, uint64_t);
  void (*v11)(char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v0 = sub_1BB86BE54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB872A0C();
  v6 = v5;
  swift_bridgeObjectRelease();
  v55 = v4;
  v56 = v6;
  sub_1BB86BDA0();
  sub_1BA7114A0();
  v7 = sub_1BB873AEC();
  v9 = v8;
  v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v51 = v0;
  v11 = v10;
  v10(v3, v0);
  swift_bridgeObjectRelease();
  v12 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0)
    v12 = v7 & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    v55 = v7;
    v56 = v9;
    v53 = 44;
    v54 = 0xE100000000000000;
    v13 = sub_1BB873AB0();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v13 + 16);
    if (v14)
    {
      v52 = MEMORY[0x1E0DEE9D8];
      sub_1BAC7AA60(0, v14, 0);
      v15 = 0;
      v45 = v13;
      v46 = v14;
      v47 = v13 + 32;
      do
      {
        v50 = v15;
        v16 = (uint64_t *)(v47 + 16 * v15);
        v17 = v16[1];
        v55 = *v16;
        v56 = v17;
        swift_bridgeObjectRetain();
        sub_1BB86BDA0();
        v18 = sub_1BB873AEC();
        v20 = v19;
        v11(v3, v51);
        v55 = v18;
        v56 = v20;
        v53 = 32;
        v54 = 0xE100000000000000;
        v21 = sub_1BB873AB0();
        swift_bridgeObjectRelease();
        v22 = *(_QWORD *)(v21 + 16);
        if (v22)
        {
          v49 = v17;
          swift_bridgeObjectRetain();
          v48 = v21;
          v23 = (uint64_t *)(v21 + 40);
          v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
          do
          {
            v25 = *v23;
            v55 = *(v23 - 1);
            v56 = v25;
            swift_bridgeObjectRetain();
            sub_1BB86BDA0();
            v26 = sub_1BB873AEC();
            v28 = v27;
            v11(v3, v51);
            if ((v28 & 0x2000000000000000) != 0)
              v29 = HIBYTE(v28) & 0xF;
            else
              v29 = v26 & 0xFFFFFFFFFFFFLL;
            swift_bridgeObjectRelease();
            if (v29)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                v24 = sub_1BA6EA0D0(0, v24[2] + 1, 1, v24);
              v31 = v24[2];
              v30 = v24[3];
              if (v31 >= v30 >> 1)
                v24 = sub_1BA6EA0D0((_QWORD *)(v30 > 1), v31 + 1, 1, v24);
              v24[2] = v31 + 1;
              v32 = &v24[2 * v31];
              v32[4] = v26;
              v32[5] = v28;
            }
            else
            {
              swift_bridgeObjectRelease();
            }
            v23 += 2;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v14 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
          v24 = (_QWORD *)MEMORY[0x1E0DEE9D8];
        }
        swift_bridgeObjectRelease();
        v33 = v52;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7AA60(0, *(_QWORD *)(v33 + 16) + 1, 1);
          v33 = v52;
        }
        v34 = v50;
        v36 = *(_QWORD *)(v33 + 16);
        v35 = *(_QWORD *)(v33 + 24);
        if (v36 >= v35 >> 1)
        {
          sub_1BAC7AA60(v35 > 1, v36 + 1, 1);
          v33 = v52;
        }
        v15 = v34 + 1;
        *(_QWORD *)(v33 + 16) = v36 + 1;
        *(_QWORD *)(v33 + 8 * v36 + 32) = v24;
      }
      while (v15 != v14);
      swift_bridgeObjectRelease();
      v37 = *(_QWORD *)(v33 + 16);
      if (v37)
        goto LABEL_27;
    }
    else
    {
      swift_bridgeObjectRelease();
      v33 = MEMORY[0x1E0DEE9D8];
      v37 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      if (v37)
      {
LABEL_27:
        v38 = (uint64_t *)(v33 + 32);
        v39 = MEMORY[0x1E0DEE9D8];
        do
        {
          v42 = *v38;
          if (*(_QWORD *)(*v38 + 16))
          {
            swift_bridgeObjectRetain();
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v55 = v39;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1BAC7AA60(0, *(_QWORD *)(v39 + 16) + 1, 1);
              v39 = v55;
            }
            v41 = *(_QWORD *)(v39 + 16);
            v40 = *(_QWORD *)(v39 + 24);
            if (v41 >= v40 >> 1)
            {
              sub_1BAC7AA60(v40 > 1, v41 + 1, 1);
              v39 = v55;
            }
            *(_QWORD *)(v39 + 16) = v41 + 1;
            *(_QWORD *)(v39 + 8 * v41 + 32) = v42;
          }
          ++v38;
          --v37;
        }
        while (v37);
        goto LABEL_38;
      }
    }
    v39 = MEMORY[0x1E0DEE9D8];
LABEL_38:
    swift_bridgeObjectRelease();
    return v39;
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x1E0DEE9D8];
}

uint64_t initializeWithCopy for DebugInspectViewSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugInspectViewSection(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for DebugInspectViewSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugInspectViewSection(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 41))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugInspectViewSection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 41) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectViewSection()
{
  return &type metadata for DebugInspectViewSection;
}

uint64_t sub_1BAAD5274(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BAAD52AC
                                                                     + 4 * a4[a1]))(0xD000000000000014, 0x80000001BB95DAA0);
}

uint64_t sub_1BAAD52AC(uint64_t a1)
{
  return a1 + 6;
}

uint64_t sub_1BAAD52C4()
{
  return 0x70756F7267;
}

uint64_t sub_1BAAD52D8()
{
  return 0x73656D656874;
}

uint64_t sub_1BAAD52EC()
{
  return 0x736D657469;
}

uint64_t sub_1BAAD5300()
{
  return 0x74756F79616CLL;
}

uint64_t sub_1BAAD5314()
{
  return 0x6E4974756F79616CLL;
}

uint64_t sub_1BAAD5338()
{
  return 0x746C75736572;
}

uint64_t sub_1BAAD534C()
{
  return 0x6D65726975716572;
}

uint64_t sub_1BAAD536C()
{
  return 0x74616D726F66;
}

uint64_t sub_1BAAD5380()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAAD5274(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAD53E0()
{
  unsigned __int8 *v0;

  sub_1BAAD5274(*v0);
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAAD5420()
{
  unsigned __int8 *v0;
  unsigned __int8 v1;

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BAAD5274(v1);
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAD547C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAAD566C();
  *a1 = result;
  return result;
}

uint64_t sub_1BAAD54A8@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BAAD5274(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugInspectViewSection.Descriptor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BAAD551C + 4 * byte_1BB89BAAF[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BAAD5550 + 4 * byte_1BB89BAAA[v4]))();
}

uint64_t sub_1BAAD5550(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAD5558(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAD5560);
  return result;
}

uint64_t sub_1BAAD556C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAD5574);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BAAD5578(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAD5580(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectViewSection.Descriptor()
{
  return &type metadata for DebugInspectViewSection.Descriptor;
}

uint64_t sub_1BAAD559C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned __int8 v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;

  v2 = *a2;
  v3 = sub_1BAAD5274(*a1);
  v5 = v4;
  if (v3 == sub_1BAAD5274(v2) && v5 == v6)
    v8 = 1;
  else
    v8 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_1BAAD5628()
{
  unint64_t result;

  result = qword_1EF2AFBD8;
  if (!qword_1EF2AFBD8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89BAE4, &type metadata for DebugInspectViewSection.Descriptor);
    atomic_store(result, (unint64_t *)&qword_1EF2AFBD8);
  }
  return result;
}

uint64_t sub_1BAAD566C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 0xA)
    return 10;
  else
    return v0;
}

NewsFeed::FormatFontDesign_optional __swiftcall FormatFontDesign.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatFontDesign_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 4;
  if (v3 < 4)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatFontDesign.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAAD573C + 4 * byte_1BB89BB90[*v0]))(0x746C7561666564, 0xE700000000000000);
}

uint64_t sub_1BAAD573C()
{
  return 0x6465646E756F72;
}

uint64_t sub_1BAAD5750()
{
  return 0x6669726573;
}

uint64_t sub_1BAAD5764()
{
  return 0x636170736F6E6F6DLL;
}

void sub_1BAAD5780(char *a1)
{
  sub_1BB803E34(*a1);
}

unint64_t sub_1BAAD5790()
{
  unint64_t result;

  result = qword_1EF2AFBE0;
  if (!qword_1EF2AFBE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontDesign, &type metadata for FormatFontDesign);
    atomic_store(result, (unint64_t *)&qword_1EF2AFBE0);
  }
  return result;
}

void sub_1BAAD57D4()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAAD5820()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAAD588C()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAAD58C8()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAAD5920()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAAD5968()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatFontDesign_optional sub_1BAAD59D4(Swift::String *a1)
{
  return FormatFontDesign.init(rawValue:)(*a1);
}

uint64_t sub_1BAAD59E0()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAAD5A10 + 4 * byte_1BB89BBA0[*v0]))();
}

void sub_1BAAD5A10(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x6465646E756F72;
  a1[1] = v1;
}

void sub_1BAAD5A28(_QWORD *a1@<X8>)
{
  *a1 = 0x6669726573;
  a1[1] = 0xE500000000000000;
}

void sub_1BAAD5A40(_QWORD *a1@<X8>)
{
  *a1 = 0x636170736F6E6F6DLL;
  a1[1] = 0xEA00000000006465;
}

unint64_t sub_1BAAD5A60(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAAD5A8C();
  result = sub_1BAAD5AD0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAAD5A8C()
{
  unint64_t result;

  result = qword_1EF2AFBE8;
  if (!qword_1EF2AFBE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontDesign, &type metadata for FormatFontDesign);
    atomic_store(result, (unint64_t *)&qword_1EF2AFBE8);
  }
  return result;
}

unint64_t sub_1BAAD5AD0()
{
  unint64_t result;

  result = qword_1EF2AFBF0;
  if (!qword_1EF2AFBF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontDesign, &type metadata for FormatFontDesign);
    atomic_store(result, (unint64_t *)&qword_1EF2AFBF0);
  }
  return result;
}

unint64_t sub_1BAAD5B14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD5B38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD5B38()
{
  unint64_t result;

  result = qword_1EF2AFBF8;
  if (!qword_1EF2AFBF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontDesign, &type metadata for FormatFontDesign);
    atomic_store(result, (unint64_t *)&qword_1EF2AFBF8);
  }
  return result;
}

unint64_t sub_1BAAD5B7C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4E69C0();
  a1[2] = sub_1BAAD5BB0();
  result = sub_1BAAD5790();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAD5BB0()
{
  unint64_t result;

  result = qword_1ED39FBB0;
  if (!qword_1ED39FBB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontDesign, &type metadata for FormatFontDesign);
    atomic_store(result, (unint64_t *)&qword_1ED39FBB0);
  }
  return result;
}

uint64_t sub_1BAAD5BF4()
{
  sub_1BAAD5AD0();
  return sub_1BB872D60();
}

uint64_t sub_1BAAD5C50(_QWORD *a1)
{
  return FormatFontDesign.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatFontDesign()
{
  return &type metadata for FormatFontDesign;
}

uint64_t dispatch thunk of FeedIssueOfflineProviderType.isDownloaded(issue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1BAAD5C7C(char a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    v3 = (_BYTE *)(a2 + 32);
    v4 = v2 - 1;
    do
    {
      v5 = v4;
      LOBYTE(v2) = ((a1 & 1) == 0) ^ *v3;
      if ((v2 & 1) != 0)
        break;
      --v4;
      ++v3;
    }
    while (v5);
  }
  return v2 & 1;
}

uint64_t sub_1BAAD5CB8(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t i;
  uint64_t v4;
  _BOOL8 v5;
  BOOL v6;

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
    return 0;
  if (*(_QWORD *)(a2 + 32) == result)
    return 1;
  if (v2 == 1)
    return 0;
  for (i = 5; ; ++i)
  {
    v4 = i - 3;
    if (__OFADD__(i - 4, 1))
      break;
    v6 = *(_QWORD *)(a2 + 8 * i) == result;
    v5 = v6;
    v6 = v6 || v4 == v2;
    if (v6)
      return v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAAD5D1C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1BB874398();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1BB874398() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

unint64_t FeedCursorContainer.init(optionalCursor:)(unint64_t result)
{
  if (!result)
    return 0xF000000000000007;
  return result;
}

uint64_t FeedCursorContainer.publishDate.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4D56F4(a1, &qword_1ED4767C0, &qword_1ED476458, a2);
}

uint64_t FeedCursorContainer.serviceState.getter(unint64_t a1)
{
  sub_1BAAD66C0(a1);
  return swift_retain();
}

uint64_t FeedCursorContainer.canExpand.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v5;
  char v6;
  char v7;

  FeedCursorContainer.feedMode.getter(a1, a2, a3, &v7);
  if (v7 == 1)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    result = 0;
    if ((v5 & 1) == 0)
    {
      if (a1 < 0)
      {
        return 1;
      }
      else
      {
        swift_retain();
        v6 = FeedCursor.canExpand.getter();
        swift_release();
        return v6 & 1;
      }
    }
  }
  return result;
}

Swift::Int_optional __swiftcall FeedCursorContainer.depthOfKnownGroup(_:)(Swift::String a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *object;
  uint64_t countAndFlagsBits;
  _QWORD *v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  char v13;
  char v14;
  Swift::Int v15;
  Swift::Bool v16;
  Swift::Int_optional result;

  v4 = v3;
  v5 = v2;
  v6 = v1;
  object = a1._object;
  countAndFlagsBits = a1._countAndFlagsBits;
  v9 = (_QWORD *)sub_1BAAD5FA0(v1, v2, v3);
  v10 = sub_1BAAD5D1C(countAndFlagsBits, (uint64_t)object, v9);
  swift_bridgeObjectRelease();
  if ((v10 & 1) != 0)
  {
    v11 = 0;
  }
  else
  {
    v12 = (_QWORD *)sub_1BAAD6198(v6, v5, v4);
    v11 = sub_1BA9BEFB4(countAndFlagsBits, (uint64_t)object, v12);
    v14 = v13;
    v15 = swift_bridgeObjectRelease();
    if ((v14 & 1) != 0)
    {
      v16 = 1;
      goto LABEL_7;
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_9;
    }
  }
  v16 = 0;
LABEL_7:
  v15 = v11;
LABEL_9:
  result.value = v15;
  result.is_nil = v16;
  return result;
}

uint64_t sub_1BAAD5FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a1 < 0)
  {
    MEMORY[0x1E0C80A78](a1);
    KeyPath = swift_getKeyPath();
    type metadata accessor for FeedDeferredCursorGroup(255, a2, a3, v11);
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    KeyPath = swift_getKeyPath();
    type metadata accessor for FeedCursorGroup(255, a2, a3, v6);
  }
  v7 = sub_1BB872EE0();
  swift_retain();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v7);
  v10 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAD67A8, KeyPath, v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BAAD6198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t KeyPath;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  KeyPath = swift_getKeyPath();
  type metadata accessor for FeedDatabaseGroup(255, a2, a3, v6);
  v7 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  v8 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v7);
  v10 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAD6728, KeyPath, v7, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v8, MEMORY[0x1E0DEDD18], v9);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1BAAD629C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t KeyPath;
  uint64_t v13;
  uint64_t v14;
  uint64_t AssociatedTypeWitness;
  uint64_t v16;
  uint64_t v17;

  if (a1 < 0)
  {
    MEMORY[0x1E0C80A78](a1);
    KeyPath = swift_getKeyPath();
    type metadata accessor for FeedDeferredCursorGroup(255, a2, a3, v13);
    v14 = sub_1BB872EE0();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_retain();
    swift_bridgeObjectRetain();
    v16 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v14);
    v11 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAD67A8, KeyPath, v14, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v16, MEMORY[0x1E0DEDD18], v17);
  }
  else
  {
    MEMORY[0x1E0C80A78](a1);
    v5 = swift_getKeyPath();
    type metadata accessor for FeedCursorGroup(255, a2, a3, v6);
    v7 = sub_1BB872EE0();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    v8 = swift_getAssociatedTypeWitness();
    swift_retain();
    swift_bridgeObjectRetain();
    v9 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v7);
    v11 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAD67A8, v5, v7, v8, MEMORY[0x1E0DEDCE8], v9, MEMORY[0x1E0DEDD18], v10);
  }
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_1BAAD6570()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = sub_1BA630F34(*v0);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAAD65B0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return FeedCursorContainer.feedJournal.getter(*v1, a1);
}

uint64_t static FeedCursorContainer.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 < 0)
  {
    if (a2 < 0)
    {
      v8 = a1 & 0x7FFFFFFFFFFFFFFFLL;
      v9 = a2 & 0x7FFFFFFFFFFFFFFFLL;
      type metadata accessor for FeedDeferredCursor(0, a3, a4, a4);
      swift_retain();
      swift_retain();
      v6 = static FeedDeferredCursor.== infix(_:_:)(v8, v9);
      goto LABEL_7;
    }
  }
  else if ((a2 & 0x8000000000000000) == 0)
  {
    type metadata accessor for FeedCursor(0, a3, a4, a4);
    swift_retain();
    swift_retain();
    v6 = static FeedCursor.== infix(_:_:)(a1, a2);
LABEL_7:
    v7 = v6;
    swift_release();
    swift_release();
    return v7 & 1;
  }
  v7 = 0;
  return v7 & 1;
}

uint64_t sub_1BAAD6678(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static FeedCursorContainer.== infix(_:_:)(*a1, *a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BAAD668C(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCursorContainer<A>, a1);
  return sub_1BB86E308();
}

uint64_t sub_1BAAD66C0(unint64_t a1)
{
  uint64_t *v1;

  if ((a1 & 0x8000000000000000) != 0)
  {
    a1 &= ~0x8000000000000000;
    v1 = &qword_1EF3D04D0;
  }
  else
  {
    v1 = (uint64_t *)(*(_QWORD *)a1 + 256);
  }
  return *(_QWORD *)(a1 + *v1);
}

uint64_t sub_1BAAD66E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FeedDatabaseGroup.identifier.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAAD6710()
{
  return 16;
}

__n128 sub_1BAAD671C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BAAD6728()
{
  swift_retain();
  swift_getAtKeyPath();
  return swift_release();
}

uint64_t sub_1BAAD677C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return keypath_get_1Tm_1(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for FeedDeferredCursorGroup, (uint64_t (*)(uint64_t))sub_1BB713290, a3);
}

uint64_t sub_1BAAD6790()
{
  return 16;
}

__n128 sub_1BAAD679C(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BAAD67A8()
{
  return swift_getAtKeyPath();
}

uint64_t sub_1BAAD67D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  return keypath_get_1Tm_1(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD))type metadata accessor for FeedCursorGroup, (uint64_t (*)(uint64_t))FeedCursorGroup.identifier.getter, a3);
}

uint64_t keypath_get_1Tm_1@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t (*a3)(_QWORD, _QWORD, _QWORD)@<X3>, uint64_t (*a4)(uint64_t)@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t result;
  uint64_t v9;

  v7 = a3(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8));
  result = a4(v7);
  *a5 = result;
  a5[1] = v9;
  return result;
}

uint64_t sub_1BAAD6828()
{
  return 16;
}

__n128 sub_1BAAD6834(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t static FormatItemNodeActionBinding.== infix(_:_:)(__int128 *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  char v4;
  __int128 v6;
  uint64_t v7;
  char v8;
  char v9;

  v1 = *((_QWORD *)a1 + 2);
  v2 = *((_BYTE *)a1 + 24);
  v3 = *((_BYTE *)a1 + 25);
  v6 = *a1;
  v7 = v1;
  v8 = v2;
  v9 = v3;
  _s8NewsFeed20FormatCommandBindingO2eeoiySbAC_ACtFZ_0((uint64_t)&v6);
  return v4 & 1;
}

uint64_t sub_1BAAD68A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatItemNodeActionBinding.init(from:)(a1, a2);
}

uint64_t sub_1BAAD68BC(_QWORD *a1)
{
  return FormatItemNodeActionBinding.encode(to:)(a1);
}

uint64_t sub_1BAAD68D0(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;
  __int128 v9;
  uint64_t v10;
  char v11;
  char v12;
  __int128 v13;
  uint64_t v14;
  char v15;
  char v16;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_BYTE *)a1 + 24);
  v4 = *((_BYTE *)a1 + 25);
  v5 = *((_QWORD *)a2 + 2);
  v6 = *((_BYTE *)a2 + 24);
  v7 = *((_BYTE *)a2 + 25);
  v13 = *a1;
  v14 = v2;
  v15 = v3;
  v16 = v4;
  v9 = *a2;
  v10 = v5;
  v11 = v6;
  v12 = v7;
  return static FormatCommandBinding.== infix(_:_:)(&v13, &v9) & 1;
}

unint64_t sub_1BAAD6938(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD695C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD695C()
{
  unint64_t result;

  result = qword_1EF2AFC20;
  if (!qword_1EF2AFC20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeActionBinding, &type metadata for FormatItemNodeActionBinding);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC20);
  }
  return result;
}

unint64_t sub_1BAAD69A0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAAD69D4();
  a1[2] = sub_1BAAD6A18();
  result = sub_1BAAD6A5C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAD69D4()
{
  unint64_t result;

  result = qword_1ED3A7FB8;
  if (!qword_1ED3A7FB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeActionBinding, &type metadata for FormatItemNodeActionBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FB8);
  }
  return result;
}

unint64_t sub_1BAAD6A18()
{
  unint64_t result;

  result = qword_1ED3A7FB0;
  if (!qword_1ED3A7FB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeActionBinding, &type metadata for FormatItemNodeActionBinding);
    atomic_store(result, (unint64_t *)&qword_1ED3A7FB0);
  }
  return result;
}

unint64_t sub_1BAAD6A5C()
{
  unint64_t result;

  result = qword_1EF2AFC28;
  if (!qword_1EF2AFC28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatItemNodeActionBinding, &type metadata for FormatItemNodeActionBinding);
    atomic_store(result, &qword_1EF2AFC28);
  }
  return result;
}

uint64_t destroy for FormatItemNodeActionBinding(uint64_t a1)
{
  return sub_1BAAD6AD8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_BYTE *)(a1 + 25), (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
}

uint64_t sub_1BAAD6AD8(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t initializeWithCopy for FormatItemNodeActionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1BAAD6AD8(*(_QWORD *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatItemNodeActionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  unsigned int v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 25);
  v7 = *(unsigned __int8 *)(a2 + 24);
  sub_1BAAD6AD8(*(_QWORD *)a2, v4, v5, v7, v6, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_BYTE *)(a1 + 25);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v12 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = v6;
  sub_1BAAD6AD8(v8, v9, v10, v12, v11, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return a1;
}

uint64_t assignWithTake for FormatItemNodeActionBinding(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  unsigned int v10;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_BYTE *)(a2 + 25);
  v6 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v9 = *(_BYTE *)(a1 + 25);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  v10 = *(unsigned __int8 *)(a1 + 24);
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  sub_1BAAD6AD8(v6, v8, v7, v10, v9, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  return a1;
}

ValueMetadata *type metadata accessor for FormatItemNodeActionBinding()
{
  return &type metadata for FormatItemNodeActionBinding;
}

uint64_t sub_1BAAD6CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  v4 = sub_1BB86E008();
  v3[6] = v4;
  v3[7] = *(_QWORD *)(v4 - 8);
  v3[8] = swift_task_alloc();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3A3B30, (uint64_t (*)(uint64_t))sub_1BAAD72E4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB5088]);
  v3[9] = swift_task_alloc();
  v5 = sub_1BB86DEAC();
  v3[10] = v5;
  v3[11] = *(_QWORD *)(v5 - 8);
  v3[12] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BAAD6D98()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD *, uint64_t, uint64_t);

  v1 = (_QWORD *)v0[4];
  v2 = v1[5];
  v3 = v1[6];
  __swift_project_boxed_opaque_existential_1(v1 + 2, v2);
  v4 = swift_bridgeObjectRetain();
  v5 = sub_1BA67F4CC(v4);
  v0[13] = v5;
  swift_bridgeObjectRelease();
  v8 = (uint64_t (*)(_QWORD *, uint64_t, uint64_t))(**(int **)(v3 + 48) + *(_QWORD *)(v3 + 48));
  v6 = (_QWORD *)swift_task_alloc();
  v0[14] = v6;
  *v6 = v0;
  v6[1] = sub_1BAAD6E40;
  return v8(v5, v2, v3);
}

uint64_t sub_1BAAD6E40(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 120) = a1;
  *(_QWORD *)(v3 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BAAD6EB4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(v0 + 120);
  if (!(v1 >> 62))
  {
    v2 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v2)
      goto LABEL_3;
LABEL_17:
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
LABEL_18:
    **(_QWORD **)(v0 + 24) = v11;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  swift_bridgeObjectRetain();
  v2 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_17;
LABEL_3:
  v21 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA81C3B0(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = 0;
    v18 = v1 & 0xC000000000000001;
    v19 = *(_QWORD *)(v0 + 88);
    v16 = *(_QWORD *)(v0 + 120) + 32;
    v17 = *(_QWORD *)(v0 + 56);
    v20 = v2;
    do
    {
      if (v18)
      {
        v5 = MEMORY[0x1BCCE4630](v4, *(_QWORD *)(v0 + 120));
      }
      else
      {
        v5 = *(_QWORD *)(v16 + 8 * v4);
        swift_unknownObjectRetain();
      }
      *(_QWORD *)(v0 + 16) = v5;
      v6 = qword_1ED3A38E0;
      swift_unknownObjectRetain();
      if (v6 != -1)
        swift_once();
      v7 = *(_QWORD *)(v0 + 64);
      v8 = *(_QWORD *)(v0 + 48);
      v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED3A38C0);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 16))(v7, v9, v8);
      v10 = (_QWORD *)swift_task_alloc();
      *v10 = sub_1BAAD72E4();
      swift_getKeyPath();
      swift_task_dealloc();
      sub_1BB86ED10();
      sub_1BB86DEA0();
      swift_unknownObjectRelease();
      v11 = v21;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BA81C3B0(0, *(_QWORD *)(v21 + 16) + 1, 1);
        v11 = v21;
      }
      v13 = *(_QWORD *)(v11 + 16);
      v12 = *(_QWORD *)(v11 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BA81C3B0(v12 > 1, v13 + 1, 1);
        v11 = v21;
      }
      v14 = *(_QWORD *)(v0 + 96);
      v15 = *(_QWORD *)(v0 + 80);
      ++v4;
      *(_QWORD *)(v11 + 16) = v13 + 1;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 32))(v11+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(_QWORD *)(v19 + 72) * v13, v14, v15);
      v21 = v11;
    }
    while (v20 != v4);
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAAD7170()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAD71C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  sub_1BA4B07F0(0, &qword_1ED39A590, (uint64_t (*)(uint64_t))sub_1BA81DD70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  return sub_1BB86E95C();
}

uint64_t sub_1BAAD7254()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAAD7280(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v5 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v6;
  *v6 = v2;
  v6[1] = sub_1BA4B0D38;
  return sub_1BAAD6CD4(a1, v5, v4);
}

unint64_t sub_1BAAD72E4()
{
  unint64_t result;

  result = qword_1ED3CF910;
  if (!qword_1ED3CF910)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3CF910);
  }
  return result;
}

uint64_t sub_1BAAD733C()
{
  return 8;
}

_QWORD *sub_1BAAD7348(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t dispatch thunk of FormatEquationOperandType.optionIdentifiers.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FormatEquationOperandType.init(value:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of FormatEquationOperandType.value(contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_1BAAD737C()
{
  return MEMORY[0x1E0DEA978];
}

uint64_t static FormatSlotItemTagFilterNotCondition.== infix(_:_:)(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatSlotItemTagFilterCondition.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

unint64_t FormatSlotItemTagFilterNotCondition.condition.getter@<X0>(unint64_t *a1@<X8>)
{
  unint64_t *v1;
  unint64_t v2;

  v2 = *v1;
  *a1 = *v1;
  return sub_1BA739250(v2);
}

unint64_t sub_1BAAD73C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD73EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD73EC()
{
  unint64_t result;

  result = qword_1EF2AFC40;
  if (!qword_1EF2AFC40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterNotCondition, &type metadata for FormatSlotItemTagFilterNotCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC40);
  }
  return result;
}

unint64_t sub_1BAAD7430(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAAD7464();
  a1[2] = sub_1BAAD74A8();
  result = sub_1BAAD74EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAD7464()
{
  unint64_t result;

  result = qword_1EF2AFC48;
  if (!qword_1EF2AFC48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterNotCondition, &type metadata for FormatSlotItemTagFilterNotCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC48);
  }
  return result;
}

unint64_t sub_1BAAD74A8()
{
  unint64_t result;

  result = qword_1EF2AFC50;
  if (!qword_1EF2AFC50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterNotCondition, &type metadata for FormatSlotItemTagFilterNotCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC50);
  }
  return result;
}

unint64_t sub_1BAAD74EC()
{
  unint64_t result;

  result = qword_1EF2AFC58;
  if (!qword_1EF2AFC58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotItemTagFilterNotCondition, &type metadata for FormatSlotItemTagFilterNotCondition);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC58);
  }
  return result;
}

uint64_t sub_1BAAD7530@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSlotItemTagFilterNotCondition.init(from:)(a1, a2);
}

uint64_t sub_1BAAD7544(_QWORD *a1)
{
  return FormatSlotItemTagFilterNotCondition.encode(to:)(a1);
}

uint64_t sub_1BAAD7558(uint64_t *a1)
{
  char v1;
  uint64_t v3;

  v3 = *a1;
  static FormatSlotItemTagFilterCondition.== infix(_:_:)((uint64_t)&v3);
  return v1 & 1;
}

ValueMetadata *type metadata accessor for FormatSlotItemTagFilterNotCondition()
{
  return &type metadata for FormatSlotItemTagFilterNotCondition;
}

id FCSportsProviding.navigationBarBackgroundColor.getter()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  int v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  id v17;
  _QWORD v18[6];

  if (objc_msgSend(v0, sel_isSportsEvent))
  {
    v1 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  }
  else
  {
    v2 = objc_msgSend(v0, sel_asSports);
    if (v2)
    {
      v3 = objc_msgSend(v2, sel_sportsTheme);
      swift_unknownObjectRelease();
      if (v3)
      {
        v4 = objc_msgSend(v3, sel_sportsPrimaryColor);
        swift_unknownObjectRelease();
        if (v4)
        {
          v5 = objc_msgSend(v4, sel_ne_color);

          v6 = swift_allocObject();
          *(_QWORD *)(v6 + 16) = v5;
          v7 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
          v18[4] = sub_1BA9BE60C;
          v18[5] = v6;
          v18[0] = MEMORY[0x1E0C809B0];
          v18[1] = 1107296256;
          v18[2] = sub_1BA61387C;
          v18[3] = &block_descriptor_21;
          v8 = _Block_copy(v18);
          v9 = v5;
          v10 = objc_msgSend(v7, sel_initWithDynamicProvider_, v8);
          _Block_release(v8);

          swift_release();
          return v10;
        }
      }
    }
    if (qword_1ED3D5150 != -1)
      swift_once();
    v12 = byte_1ED3D5168;
    v13 = (void *)objc_opt_self();
    v14 = v13;
    if (v12 == 1)
    {
      v15 = objc_msgSend(v13, sel_secondarySystemBackgroundColor);
      v16 = objc_msgSend(v14, sel_systemBackgroundColor);
      v17 = objc_msgSend(v14, sel_ts_dynamicColor_withDarkStyleVariant_, v15, v16);

      return v17;
    }
    v1 = objc_msgSend(v13, sel_systemBackgroundColor);
  }
  return v1;
}

id FCSportsProviding.navigationBarForegroundColor.getter()
{
  void *v0;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  _QWORD v8[6];

  if (objc_msgSend(v0, sel_isSportsEvent))
    return objc_msgSend((id)objc_opt_self(), sel_whiteColor);
  v2 = FCSportsProviding.navigationBarBackgroundColor.getter();
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v8[4] = sub_1BAAD799C;
  v8[5] = v3;
  v8[0] = MEMORY[0x1E0C809B0];
  v8[1] = 1107296256;
  v8[2] = sub_1BA61387C;
  v8[3] = &block_descriptor_6_0;
  v5 = _Block_copy(v8);
  v6 = v2;
  v7 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);

  swift_release();
  return v7;
}

uint64_t sub_1BAAD792C(uint64_t a1, id a2)
{
  id v2;
  uint64_t v3;

  v2 = objc_msgSend(a2, sel_resolvedColorWithTraitCollection_, a1);
  v3 = sub_1BB8737B0();

  return v3;
}

uint64_t sub_1BAAD7978()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BAAD799C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAD792C(a1, *(id *)(v1 + 16));
}

uint64_t FormatBindingTextExpressionLogic.Length.value.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void FormatBindingTextExpressionLogic.Length.operator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 8);
}

uint64_t sub_1BAAD79C0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.Length.init(from:)(a1, a2);
}

uint64_t sub_1BAAD79D4(_QWORD *a1)
{
  return FormatBindingTextExpressionLogic.Length.encode(to:)(a1);
}

uint64_t FormatBindingTextExpressionLogic.Compare.value.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void FormatBindingTextExpressionLogic.Compare.operator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t sub_1BAAD7A28(_QWORD *a1)
{
  return FormatBindingTextExpressionLogic.Compare.encode(to:)(a1);
}

uint64_t FormatBindingTextExpressionLogic.Binding.binding.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  v9 = *(_BYTE *)(v1 + 49);
  *(_BYTE *)(a1 + 49) = v9;
  return sub_1BA713CDC(v2, v3, v4, v5, v6, v7, v8, v9);
}

void FormatBindingTextExpressionLogic.Binding.operator.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 50);
}

uint64_t sub_1BAAD7A7C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatBindingTextExpressionLogic.Binding.init(from:)(a1, a2);
}

uint64_t sub_1BAAD7A90(_QWORD *a1)
{
  return FormatBindingTextExpressionLogic.Binding.encode(to:)(a1);
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO0D0V2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __int16 v1;
  char v2;
  __int128 v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  _OWORD v11[3];
  __int16 v12;

  v1 = *(_WORD *)(a1 + 48);
  v2 = *(_BYTE *)(a1 + 50);
  v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  v11[2] = *(_OWORD *)(a1 + 32);
  v12 = v1;
  _s8NewsFeed21FormatTextNodeBindingO2eeoiySbAC_ACtFZ_0((uint64_t)v11);
  if ((v4 & 1) != 0)
  {
    LOBYTE(v11[0]) = v2;
    v5 = FormatOperator.rawValue.getter();
    v7 = v6;
    if (v5 == FormatOperator.rawValue.getter() && v7 == v8)
      v9 = 1;
    else
      v9 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  return v9 & 1;
}

void _s8NewsFeed32FormatBindingTextExpressionLogicO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAAD7C04()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if ((v5 & 0xFFFFFF) >= 0x200000)
  {
    swift_bridgeObjectRetain();
    sub_1BA714334(v0, v6, v2, v3, v8, v4, v5);
    sub_1BA6EF404(v1, v9, v14, v15, v16, v17, v7);
    sub_1BA6EF404(v0, v6, v2, v3, v8, v4, v5);
    v11 = 0;
  }
  else
  {
    v13 = v9;
    if (v1 == v0 && v9 == v6)
    {
      v10 = v1;
      v11 = 1;
    }
    else
    {
      v10 = v1;
      v11 = sub_1BB874398();
    }
    sub_1BA714334(v0, v6, v2, v3, v8, v4, v5);
    sub_1BA714334(v10, v13, v14, v15, v16, v17, v7);
    sub_1BA6EF404(v10, v13, v14, v15, v16, v17, v7);
    sub_1BA6EF404(v0, v6, v2, v3, v8, v4, v5);
  }
  return v11 & 1;
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO6LengthV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  if (*a1 == *a2)
  {
    v2 = FormatOperator.rawValue.getter();
    v4 = v3;
    if (v2 == FormatOperator.rawValue.getter() && v4 == v5)
      v6 = 1;
    else
      v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t _s8NewsFeed32FormatBindingTextExpressionLogicO7CompareV2eeoiySbAE_AEtFZ_0(_QWORD *a1, _QWORD *a2)
{
  BOOL v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (v3 = 0, (sub_1BB874398() & 1) != 0))
  {
    v4 = FormatOperator.rawValue.getter();
    v6 = v5;
    if (v4 == FormatOperator.rawValue.getter() && v6 == v7)
      v3 = 1;
    else
      v3 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

unint64_t sub_1BAAD8668(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD868C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD868C()
{
  unint64_t result;

  result = qword_1EF2AFC60;
  if (!qword_1EF2AFC60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Length, &type metadata for FormatBindingTextExpressionLogic.Length);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC60);
  }
  return result;
}

uint64_t sub_1BAAD86D0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAAD86EC, (uint64_t (*)(void))sub_1BAAD8730, (uint64_t (*)(void))sub_1BAAD8774);
}

unint64_t sub_1BAAD86EC()
{
  unint64_t result;

  result = qword_1EF2AFC68;
  if (!qword_1EF2AFC68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Length, &type metadata for FormatBindingTextExpressionLogic.Length);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC68);
  }
  return result;
}

unint64_t sub_1BAAD8730()
{
  unint64_t result;

  result = qword_1EF2AFC70;
  if (!qword_1EF2AFC70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Length, &type metadata for FormatBindingTextExpressionLogic.Length);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC70);
  }
  return result;
}

unint64_t sub_1BAAD8774()
{
  unint64_t result;

  result = qword_1EF2AFC78;
  if (!qword_1EF2AFC78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Length, &type metadata for FormatBindingTextExpressionLogic.Length);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC78);
  }
  return result;
}

unint64_t sub_1BAAD87B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD87DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD87DC()
{
  unint64_t result;

  result = qword_1EF2AFC80;
  if (!qword_1EF2AFC80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Compare, &type metadata for FormatBindingTextExpressionLogic.Compare);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC80);
  }
  return result;
}

uint64_t sub_1BAAD8820(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5066FC, (uint64_t (*)(void))sub_1BAAD883C, (uint64_t (*)(void))sub_1BAAD8880);
}

unint64_t sub_1BAAD883C()
{
  unint64_t result;

  result = qword_1ED39E840;
  if (!qword_1ED39E840)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Compare, &type metadata for FormatBindingTextExpressionLogic.Compare);
    atomic_store(result, (unint64_t *)&qword_1ED39E840);
  }
  return result;
}

unint64_t sub_1BAAD8880()
{
  unint64_t result;

  result = qword_1EF2AFC88;
  if (!qword_1EF2AFC88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Compare, &type metadata for FormatBindingTextExpressionLogic.Compare);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC88);
  }
  return result;
}

unint64_t sub_1BAAD88C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD88E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD88E8()
{
  unint64_t result;

  result = qword_1EF2AFC90;
  if (!qword_1EF2AFC90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Binding, &type metadata for FormatBindingTextExpressionLogic.Binding);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC90);
  }
  return result;
}

uint64_t sub_1BAAD892C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAAD8948, (uint64_t (*)(void))sub_1BAAD898C, (uint64_t (*)(void))sub_1BAAD89D0);
}

unint64_t sub_1BAAD8948()
{
  unint64_t result;

  result = qword_1ED3A9588;
  if (!qword_1ED3A9588)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Binding, &type metadata for FormatBindingTextExpressionLogic.Binding);
    atomic_store(result, (unint64_t *)&qword_1ED3A9588);
  }
  return result;
}

unint64_t sub_1BAAD898C()
{
  unint64_t result;

  result = qword_1ED3A9580;
  if (!qword_1ED3A9580)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Binding, &type metadata for FormatBindingTextExpressionLogic.Binding);
    atomic_store(result, (unint64_t *)&qword_1ED3A9580);
  }
  return result;
}

unint64_t sub_1BAAD89D0()
{
  unint64_t result;

  result = qword_1EF2AFC98;
  if (!qword_1EF2AFC98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic.Binding, &type metadata for FormatBindingTextExpressionLogic.Binding);
    atomic_store(result, (unint64_t *)&qword_1EF2AFC98);
  }
  return result;
}

unint64_t sub_1BAAD8A14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAD8A38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAD8A38()
{
  unint64_t result;

  result = qword_1EF2AFCA0;
  if (!qword_1EF2AFCA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic, &type metadata for FormatBindingTextExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2AFCA0);
  }
  return result;
}

uint64_t sub_1BAAD8A7C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5B4034, (uint64_t (*)(void))sub_1BA82110C, (uint64_t (*)(void))sub_1BAAD8A98);
}

unint64_t sub_1BAAD8A98()
{
  unint64_t result;

  result = qword_1EF2AFCA8;
  if (!qword_1EF2AFCA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingTextExpressionLogic, &type metadata for FormatBindingTextExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2AFCA8);
  }
  return result;
}

uint64_t destroy for FormatBindingTextExpressionLogic(uint64_t a1)
{
  return sub_1BA6EF404(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16));
}

uint64_t initializeWithCopy for FormatBindingTextExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 50);
  v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1BA714334(*(_QWORD *)a2, v4, v5, v6, v7, v8, v10 | (v9 << 16));
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 50) = v9;
  *(_WORD *)(a1 + 48) = v10;
  return a1;
}

uint64_t assignWithCopy for FormatBindingTextExpressionLogic(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(unsigned __int8 *)(a2 + 50);
  v10 = *(unsigned __int16 *)(a2 + 48);
  sub_1BA714334(*(_QWORD *)a2, v4, v5, v6, v7, v8, v10 | (v9 << 16));
  v11 = *(_QWORD *)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_WORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 50) = v9;
  sub_1BA6EF404(v11, v12, v13, v14, v15, v16, v17);
  return a1;
}

__n128 __swift_memcpy51_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_DWORD *)(a1 + 47) = *(_DWORD *)(a2 + 47);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatBindingTextExpressionLogic(uint64_t a1, uint64_t a2)
{
  char v3;
  __int16 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  __int128 v12;

  v3 = *(_BYTE *)(a2 + 50);
  v4 = *(_WORD *)(a2 + 48);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(unsigned __int16 *)(a1 + 48) | (*(unsigned __int8 *)(a1 + 50) << 16);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 50) = v3;
  sub_1BA6EF404(v5, v7, v6, v8, v9, v10, v11);
  return a1;
}

uint64_t sub_1BAAD8CB0(uint64_t a1)
{
  unsigned __int16 v1;

  v1 = *(unsigned __int8 *)(a1 + 50);
  if ((unsigned __int16)(v1 >> 6) <= 2u)
    return v1 >> 5;
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1BAAD8CD0(uint64_t a1)
{
  uint64_t result;
  int v2;

  v2 = *(unsigned __int16 *)(a1 + 48);
  result = a1 + 48;
  *(_BYTE *)(result + 2) = ((v2 | (*(unsigned __int8 *)(result + 2) << 16)) >> 16) & 0x1F;
  *(_WORD *)result = v2;
  return result;
}

uint64_t sub_1BAAD8CEC(uint64_t result, unsigned int a2)
{
  int v2;
  int v3;

  if (a2 < 6)
  {
    v2 = *(unsigned __int16 *)(result + 48);
    result += 48;
    v3 = (v2 | (*(unsigned __int8 *)(result + 2) << 16)) & 0xF07FF | (a2 << 21);
    *(_WORD *)result = v2 & 0x7FF;
    *(_BYTE *)(result + 2) = BYTE2(v3);
  }
  else
  {
    *(_QWORD *)result = a2 - 6;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)(result + 40) = 0;
    *(_BYTE *)(result + 50) = -64;
    *(_WORD *)(result + 48) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic()
{
  return &type metadata for FormatBindingTextExpressionLogic;
}

uint64_t getEnumTagSinglePayload for FormatLayoutExpression(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF5 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 245);
  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = v3 >= 0xC;
  v5 = v3 - 12;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic.Length()
{
  return &type metadata for FormatBindingTextExpressionLogic.Length;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic.Compare()
{
  return &type metadata for FormatBindingTextExpressionLogic.Compare;
}

uint64_t initializeWithCopy for FormatBindingTextExpressionLogic.Binding(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 49);
  v11 = *(_BYTE *)(a2 + 48);
  sub_1BA713CDC(*(_QWORD *)a2, v5, v6, v7, v8, v9, v11, v10);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v11;
  *(_BYTE *)(a1 + 49) = v10;
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t assignWithCopy for FormatBindingTextExpressionLogic.Binding(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;

  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 49);
  v11 = *(_BYTE *)(a2 + 48);
  sub_1BA713CDC(*(_QWORD *)a2, v5, v6, v7, v8, v9, v11, v10);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v18 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v11;
  v19 = *(_BYTE *)(a1 + 49);
  *(_BYTE *)(a1 + 49) = v10;
  sub_1BA6EF090(v12, v13, v14, v15, v16, v17, v18, v19);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t assignWithTake for FormatBindingTextExpressionLogic.Binding(uint64_t a1, uint64_t a2)
{
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  char v13;

  v4 = *(_WORD *)(a2 + 48);
  v5 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a1 + 49);
  v13 = *(_BYTE *)(a1 + 48);
  *(_WORD *)(a1 + 48) = v4;
  sub_1BA6EF090(v5, v6, v7, v8, v9, v10, v13, v12);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBindingTextExpressionLogic.Binding(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1F3 && *(_BYTE *)(a1 + 51))
    return (*(_DWORD *)a1 + 499);
  v3 = ((*(unsigned __int8 *)(a1 + 48) >> 3) & 1 | (2 * *(unsigned __int8 *)(a1 + 49))) ^ 0x1FF;
  if (v3 >= 0x1F2)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatBindingTextExpressionLogic.Binding(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1F2)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 50) = 0;
    *(_WORD *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 499;
    if (a3 >= 0x1F3)
      *(_BYTE *)(result + 51) = 1;
  }
  else
  {
    if (a3 >= 0x1F3)
      *(_BYTE *)(result + 51) = 0;
    if (a2)
    {
      *(_OWORD *)(result + 16) = 0u;
      *(_OWORD *)(result + 32) = 0u;
      *(_OWORD *)result = 0u;
      *(_BYTE *)(result + 48) = 8 * (-(char)a2 & 1);
      *(_BYTE *)(result + 49) = -a2 >> 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingTextExpressionLogic.Binding()
{
  return &type metadata for FormatBindingTextExpressionLogic.Binding;
}

uint64_t sub_1BAAD9030(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;

  v3 = type metadata accessor for FormatOption();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (_QWORD *)((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA8C88C8(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (_QWORD *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v19[1] = v1;
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v11, 0);
    v12 = v20;
    v13 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v14 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_1BA900B30(v13, (uint64_t)v6);
      sub_1BB0798DC(v6, v10);
      v15 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v10, 0, 1, v15);
      v20 = v12;
      v17 = *(_QWORD *)(v12 + 16);
      v16 = *(_QWORD *)(v12 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC79E1C(v16 > 1, v17 + 1, 1);
        v12 = v20;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_1BA89EB4C((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return v12;
}

uint64_t FormatCustomNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatCustomNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatCustomNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FormatCustomNodeStyle.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 64) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatCustomNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatCustomNodeStyle.__allocating_init(identifier:class:ignoresSmartInvertColors:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v14;

  v14 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_BYTE *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = a6;
  swift_beginAccess();
  *(_QWORD *)(v14 + 64) = a7;
  return v14;
}

uint64_t FormatCustomNodeStyle.init(identifier:class:ignoresSmartInvertColors:options:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;

  swift_beginAccess();
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_BYTE *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = a6;
  swift_beginAccess();
  *(_QWORD *)(v7 + 64) = a7;
  return v7;
}

uint64_t FormatCustomNodeStyle.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatCustomNodeStyle.init(from:)(a1);
  return v2;
}

void sub_1BAAD9520(char *a1)
{
  sub_1BB7F980C(*a1);
}

void sub_1BAAD952C()
{
  char *v0;

  sub_1BA8D2954(*v0);
}

void sub_1BAAD9534()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAAD9574()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAAD95EC(uint64_t a1)
{
  char *v1;

  sub_1BAB09620(a1, *v1);
}

uint64_t sub_1BAAD95F4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAADA940();
  *a1 = result;
  return result;
}

uint64_t sub_1BAAD9620()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAAD9654 + 4 * byte_1BB89C545[*v0]))();
}

void sub_1BAAD9654(_QWORD *a1@<X8>)
{
  *a1 = 0x7373616C63;
  a1[1] = 0xE500000000000000;
}

void sub_1BAAD966C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000018;
  a1[1] = 0x80000001BB95D2E0;
}

void sub_1BAAD968C(_QWORD *a1@<X8>)
{
  *a1 = 0x736E6F6974706FLL;
  a1[1] = 0xE700000000000000;
}

void sub_1BAAD96A8(_QWORD *a1@<X8>)
{
  *a1 = 0x726F7463656C6573;
  a1[1] = 0xE900000000000073;
}

uint64_t sub_1BAAD96C8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAADA940();
  *a1 = result;
  return result;
}

uint64_t sub_1BAAD96EC()
{
  sub_1BA539ACC();
  return sub_1BB874710();
}

uint64_t sub_1BAAD9714()
{
  sub_1BA539ACC();
  return sub_1BB87471C();
}

uint64_t sub_1BAAD973C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  size_t v23;
  uint64_t isStackAllocationSafe;
  char *v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  char v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  _QWORD *v36;
  _QWORD *v37;
  unint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  int64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t result;
  id v87;
  uint64_t v88;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  uint64_t v107;
  uint64_t v108[7];

  v105 = a1;
  v106 = 0;
  v108[6] = *MEMORY[0x1E0C80C00];
  v97 = *v1;
  v2 = type metadata accessor for FormatOption();
  v91 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v102 = (uint64_t *)((char *)&v88 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  v89 = v1;
  v4 = v1[8];
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v92 = sub_1BB38D6D4(0, v5, 0, MEMORY[0x1E0DEE9D8]);
  v90 = sub_1BB38D5B8(0, v5, 0, v6);
  v7 = *(_QWORD *)(v4 + 16);
  v93 = v4;
  v96 = v7;
  if (!v7)
  {
LABEL_32:
    sub_1BA4CDF6C(0, &qword_1ED3CC6A0, (uint64_t (*)(void))sub_1BAADA988, (uint64_t)&type metadata for FormatCustomNodeStyle.Selector, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatNodeStyleSelectorOrder);
    v43 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v44 = *(_QWORD *)(v43 + 16);
    v105 = v43;
    if (v44)
    {
      v45 = (_QWORD *)(v43 + 56);
      v46 = v92;
      do
      {
        v48 = *(v45 - 3);
        v47 = *(v45 - 2);
        v49 = *((_BYTE *)v45 - 8);
        v50 = *v45;
        v51 = v46[2];
        v52 = v46[3];
        v53 = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v51 >= v52 >> 1)
          v46 = sub_1BB38D6D4((_QWORD *)(v52 > 1), v51 + 1, 1, v53);
        else
          v46 = v53;
        v45 += 5;
        v46[2] = v51 + 1;
        v54 = &v46[4 * v51];
        v54[4] = v48;
        v54[5] = v47;
        *((_BYTE *)v54 + 48) = v49;
        v54[7] = v50;
        --v44;
      }
      while (v44);
    }
    else
    {
      v46 = v92;
    }
    v92 = v46;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v101 = v92[2];
    if (!v101)
    {
      v85 = (uint64_t)v89;
      swift_retain();
      v56 = v85;
      swift_bridgeObjectRelease();
      return v56;
    }
    v100 = v92 + 4;
    v55 = (uint64_t)v89;
    swift_retain();
    v56 = v55;
    swift_bridgeObjectRetain();
    v57 = 0;
    while (1)
    {
      v65 = v56;
      v66 = &v100[4 * v57];
      v67 = v66[1];
      v68 = v66[3];
      LODWORD(v61) = *((unsigned __int8 *)v66 + 16);
      swift_beginAccess();
      if ((_DWORD)v61 == 2)
        LODWORD(v61) = *(unsigned __int8 *)(v56 + 48);
      v69 = *(_QWORD *)(v56 + 16);
      v70 = *(_QWORD *)(v56 + 24);
      v71 = *(_QWORD *)(v56 + 32);
      v72 = *(_QWORD *)(v56 + 40);
      v60 = *(_QWORD *)(v65 + 56);
      v104 = v71;
      v105 = v69;
      if (!v68)
        goto LABEL_58;
      if (v60)
      {
        v103 = v72;
        v98 = v61;
        v73 = v68;
        v74 = *(_QWORD *)(v68 + 16);
        v99 = v67;
        v96 = v70;
        if (v74)
        {
          v107 = MEMORY[0x1E0DEE9D8];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v94 = v60;
          swift_bridgeObjectRetain();
          sub_1BA7447E8(0, v74, 0);
          v75 = (*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80);
          v95 = v73;
          v76 = v73 + v75;
          v77 = *(_QWORD *)(v91 + 72);
          v78 = v107;
          do
          {
            v79 = v102;
            sub_1BA900B30(v76, (uint64_t)v102);
            v80 = *v79;
            v81 = v79[1];
            swift_bridgeObjectRetain();
            sub_1BA4A2E80((uint64_t)v79, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BA7447E8(0, *(_QWORD *)(v78 + 16) + 1, 1);
              v78 = v107;
            }
            v83 = *(_QWORD *)(v78 + 16);
            v82 = *(_QWORD *)(v78 + 24);
            if (v83 >= v82 >> 1)
            {
              sub_1BA7447E8(v82 > 1, v83 + 1, 1);
              v78 = v107;
            }
            *(_QWORD *)(v78 + 16) = v83 + 1;
            v84 = v78 + 16 * v83;
            *(_QWORD *)(v84 + 32) = v80;
            *(_QWORD *)(v84 + 40) = v81;
            v76 += v77;
            --v74;
          }
          while (v74);
          v73 = v95;
          v60 = v94;
        }
        else
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v78 = MEMORY[0x1E0DEE9D8];
        }
        v58 = sub_1BA6E43EC(v78);
        swift_bridgeObjectRelease();
        v59 = v106;
        v61 = sub_1BB67E07C(v60, v58);
        v106 = v59;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v107 = v73;
        swift_bridgeObjectRetain();
        sub_1BA6D3834(v61);
        v60 = v107;
        LOBYTE(v61) = v98;
        v62 = v96;
        v63 = v103;
        goto LABEL_43;
      }
      if (*(_QWORD *)(v68 + 16))
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v60 = v68;
      }
      else
      {
LABEL_58:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v62 = v70;
      v63 = v72;
LABEL_43:
      ++v57;
      swift_beginAccess();
      v64 = *(_QWORD *)(v65 + 64);
      v56 = swift_allocObject();
      swift_beginAccess();
      *(_QWORD *)(v56 + 16) = v105;
      *(_QWORD *)(v56 + 24) = v62;
      *(_QWORD *)(v56 + 32) = v104;
      *(_QWORD *)(v56 + 40) = v63;
      *(_BYTE *)(v56 + 48) = v61;
      *(_QWORD *)(v56 + 56) = v60;
      swift_beginAccess();
      *(_QWORD *)(v56 + 64) = v64;
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v57 == v101)
      {
        swift_bridgeObjectRelease_n();
        return v56;
      }
    }
  }
  v95 = v4 + 32;
  swift_bridgeObjectRetain();
  v8 = 0;
LABEL_5:
  if (v8 >= *(_QWORD *)(v4 + 16))
    goto LABEL_65;
  v9 = v95 + 32 * v8;
  v11 = *(_QWORD *)v9;
  v10 = *(_QWORD *)(v9 + 8);
  v98 = *(unsigned __int8 *)(v9 + 16);
  v12 = *(_QWORD *)(v9 + 24);
  v13 = qword_1ED3BE7F8;
  swift_bridgeObjectRetain();
  v101 = v12;
  swift_bridgeObjectRetain();
  if (v13 != -1)
    swift_once();
  v108[0] = v11;
  v108[1] = v10;
  swift_bridgeObjectRetain();
  v14 = sub_1BA6E583C(v108);
  swift_bridgeObjectRelease();
  v104 = v14;
  v103 = *(_QWORD *)(v14 + 16);
  if (!v103)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
  v94 = v11;
  v100 = (_QWORD *)v10;
  v99 = v8;
  v15 = 0;
  v16 = (uint64_t *)(v104 + 64);
  while (1)
  {
    if (v15 >= *(_QWORD *)(v104 + 16))
    {
      __break(1u);
LABEL_65:
      __break(1u);
    }
    v17 = *(v16 - 2);
    v19 = *(v16 - 1);
    v18 = *v16;
    v20 = *(_BYTE *)(v19 + 32);
    v21 = v20 & 0x3F;
    v22 = (unint64_t)((1 << v20) + 63) >> 6;
    v23 = 8 * v22;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v21 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v25 = (char *)swift_slowAlloc();
    bzero(v25, v23);
    v29 = v22;
    v30 = v106;
    v28 = sub_1BA6EB5B4((uint64_t)v25, v29, v19, v105);
    swift_bridgeObjectRelease();
    v106 = v30;
    if (v30)
      goto LABEL_66;
    MEMORY[0x1BCCE5C38](v25, -1, -1);
LABEL_18:
    v31 = sub_1BA6EB330(v28, v19);
    swift_release();
    if ((v31 & 1) != 0 && (sub_1BA6EBD20(v105, v18) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (v17 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v38 = v92[2];
        v39 = v92[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v4 = v93;
        v8 = v99;
        if (v38 >= v39 >> 1)
          v40 = sub_1BB38D6D4((_QWORD *)(v39 > 1), v38 + 1, 1, v92);
        else
          v40 = v92;
        v40[2] = v38 + 1;
        v92 = v40;
        v41 = &v40[4 * v38];
        v42 = v100;
        v41[4] = v94;
        v41[5] = v42;
        *((_BYTE *)v41 + 48) = v98;
        v41[7] = v101;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v90;
        v34 = v90[2];
        v33 = v90[3];
        v4 = v93;
        v8 = v99;
        if (v34 >= v33 >> 1)
          v32 = sub_1BB38D5B8((_QWORD *)(v33 > 1), v34 + 1, 1, v90);
        v35 = v98;
        v32[2] = v34 + 1;
        v90 = v32;
        v36 = &v32[5 * v34];
        v37 = v100;
        v36[4] = v94;
        v36[5] = v37;
        *((_BYTE *)v36 + 48) = v35;
        v36[7] = v101;
        v36[8] = v17;
      }
      swift_bridgeObjectRelease();
LABEL_29:
      swift_bridgeObjectRelease();
LABEL_4:
      if (++v8 == v96)
      {
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      goto LABEL_5;
    }
    ++v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v16 += 5;
    if (v103 == v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = v93;
      v8 = v99;
      goto LABEL_4;
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v25 = (char *)&v88 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v25, v23);
  v26 = v22;
  v27 = v106;
  v28 = sub_1BA6EB5B4((uint64_t)v25, v26, v19, v105);
  swift_bridgeObjectRelease();
  v106 = v27;
  if (!v27)
    goto LABEL_18;
  v87 = v106;
  swift_willThrow();

  __break(1u);
LABEL_66:

  result = MEMORY[0x1BCCE5C38](v25, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAADA224()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v5 = *(_BYTE *)(v0 + 48);
  v6 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
    v6 = sub_1BAF49AD0(v6);
  swift_beginAccess();
  v7 = *(_QWORD *)(v0 + 64);
  v8 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = v2;
  *(_QWORD *)(v8 + 24) = v1;
  *(_QWORD *)(v8 + 32) = v4;
  *(_QWORD *)(v8 + 40) = v3;
  *(_BYTE *)(v8 + 48) = v5;
  *(_QWORD *)(v8 + 56) = v6;
  swift_beginAccess();
  *(_QWORD *)(v8 + 64) = v7;
  swift_bridgeObjectRetain();
  return v8;
}

uint64_t FormatCustomNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatCustomNodeStyle.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAADA39C(_QWORD *a1, _QWORD *a2)
{
  return static FormatCustomNodeStyle.== infix(_:_:)(*a1, *a2);
}

uint64_t FormatCustomNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t FormatCustomNodeStyle.Selector.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatCustomNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1BAADA3D8@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 32);
  return result;
}

uint64_t _s8NewsFeed21FormatCustomNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  uint64_t v9;
  char v10;

  v2 = *(unsigned __int8 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == 2)
    {
      if (v4 != 2)
        return 0;
LABEL_11:
      if (v3)
      {
        if (!v5)
          return 0;
        swift_bridgeObjectRetain();
        v9 = swift_bridgeObjectRetain();
        v10 = sub_1BA883260(v9, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0)
          return 0;
      }
      else if (v5)
      {
        return 0;
      }
      return 1;
    }
    result = 0;
    if (v4 != 2 && ((((v2 & 1) == 0) ^ v4) & 1) != 0)
      goto LABEL_11;
  }
  return result;
}

uint64_t sub_1BAADA4C0(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1ED3C9768, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
  a1[2] = sub_1BA50AD30(&qword_1ED3A6AE8, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
  result = sub_1BA50AD30(&qword_1EF2AFCB0, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAADA538(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BA50AD30(&qword_1ED3C9768, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
  result = sub_1BA50AD30(&qword_1ED3A6AE8, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatCustomNodeStyle, (uint64_t)&protocol conformance descriptor for FormatCustomNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

unint64_t sub_1BAADA594(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAADA5B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAADA5B8()
{
  unint64_t result;

  result = qword_1EF2AFCB8;
  if (!qword_1EF2AFCB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomNodeStyle.Selector, &type metadata for FormatCustomNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFCB8);
  }
  return result;
}

unint64_t sub_1BAADA5FC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA82B1F8();
  result = sub_1BA82B23C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAADA628(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA82B1F8();
  a1[2] = sub_1BA82B23C();
  result = sub_1BAADA65C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAADA65C()
{
  unint64_t result;

  result = qword_1EF2AFCC0;
  if (!qword_1EF2AFCC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomNodeStyle.Selector, &type metadata for FormatCustomNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFCC0);
  }
  return result;
}

uint64_t sub_1BAADA6A0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAADA6EC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatCustomNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatCustomNodeStyle.__allocating_init(identifier:class:ignoresSmartInvertColors:options:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of FormatCustomNodeStyle.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t assignWithCopy for FormatCustomNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatCustomNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatCustomNodeStyle.Selector()
{
  return &type metadata for FormatCustomNodeStyle.Selector;
}

uint64_t storeEnumTagSinglePayload for FormatCustomNodeStyle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAADA878 + 4 * byte_1BB89C554[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAADA8AC + 4 * byte_1BB89C54F[v4]))();
}

uint64_t sub_1BAADA8AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAADA8B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAADA8BCLL);
  return result;
}

uint64_t sub_1BAADA8C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAADA8D0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAADA8D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAADA8DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatCustomNodeStyle.CodingKeys()
{
  return &type metadata for FormatCustomNodeStyle.CodingKeys;
}

unint64_t sub_1BAADA8FC()
{
  unint64_t result;

  result = qword_1EF2AFCC8;
  if (!qword_1EF2AFCC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89C884, &type metadata for FormatCustomNodeStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2AFCC8);
  }
  return result;
}

uint64_t sub_1BAADA940()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_1BAADA988()
{
  unint64_t result;

  result = qword_1ED3C2640;
  if (!qword_1ED3C2640)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89C660, &type metadata for FormatCustomNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3C2640);
  }
  return result;
}

_QWORD *sub_1BAADA9CC(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v14;
  char *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD *v22;
  uint64_t v24;
  _BYTE v25[40];
  uint64_t v26;
  __int128 v27;
  _OWORD v28[2];
  uint64_t v29;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  if (a1)
  {
    v9 = a1[5];
    v24 = a1[4];
    swift_bridgeObjectRetain();
    *(_QWORD *)v25 = sub_1BAADA224();
    memset(&v25[8], 0, 32);
    v26 = 0;
    v27 = xmmword_1BB89C900;
    v10 = swift_allocObject();
    sub_1BA9F1094((uint64_t)v25, v10 + 16);
    v11 = sub_1BA9F10D0;
  }
  else
  {
    v10 = 0;
    v24 = 0;
    v9 = 0xE000000000000000;
    v11 = sub_1BB739F50;
  }
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = (uint64_t (**)())((char *)v8 + *(int *)(v12 + 24));
  *v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *v8 = v24;
  v8[1] = v9;
  v8[2] = 0;
  v8[3] = 0;
  v15 = (char *)v8 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = -1;
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 0, 1, v12);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v28);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(v16 + 48) = v29;
  v17 = v28[1];
  *(_OWORD *)(v16 + 16) = v28[0];
  *(_OWORD *)(v16 + 32) = v17;
  if (a1 && a1[7])
  {
    v18 = swift_bridgeObjectRetain();
    v19 = sub_1BAAD9030(v18);
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BAF89090(0x756C61562D79654BLL, 0xEA00000000007365, 0, 0, v19, v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v20 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v20;
  *(_QWORD *)(v20 + 48) = *(_QWORD *)&v25[32];
  v21 = *(_OWORD *)&v25[16];
  *(_OWORD *)(v20 + 16) = *(_OWORD *)v25;
  *(_OWORD *)(v20 + 32) = v21;
  v22 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v22;
}

uint64_t sub_1BAADAD24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAADAD58()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

BOOL sub_1BAADAD88(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16) == 0;
}

uint64_t static FormatVisibility.== infix(_:_:)(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  char v9;
  char v10;
  unint64_t v12;
  _QWORD v14[2];
  unint64_t v15[2];

  v2 = *a1;
  v3 = *a2;
  v4 = *a1 >> 62;
  if ((_DWORD)v4)
  {
    if ((_DWORD)v4 != 1)
    {
      if (v2 == 0x8000000000000000)
      {
        if (v3 != 0x8000000000000000)
          goto LABEL_19;
        sub_1BA6EEDB4(0x8000000000000000);
        v12 = 0x8000000000000000;
      }
      else
      {
        if (v3 != 0x8000000000000008)
          goto LABEL_19;
        sub_1BA6EEDB4(0x8000000000000008);
        v12 = 0x8000000000000008;
      }
      sub_1BA6EEDB4(v12);
      v10 = 1;
      return v10 & 1;
    }
    if (v3 >> 62 == 1)
    {
      v5 = *(_QWORD *)(v2 + 24);
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      v15[0] = *(_QWORD *)(v2 + 16);
      v6 = v15[0];
      v15[1] = v5;
      v14[0] = v8;
      v14[1] = v7;
      sub_1BA67D3F4(v3);
      sub_1BA67D3F4(v2);
      sub_1BA67D3F4(v15[0]);
      swift_bridgeObjectRetain();
      sub_1BA67D3F4(v8);
      swift_bridgeObjectRetain();
      if ((static FormatVisibility.== infix(_:_:)(v15, v14) & 1) != 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v9 = sub_1BA8918B8(v5, v7);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA6EEDB4(v8);
        swift_bridgeObjectRelease();
        sub_1BA6EEDB4(v6);
        swift_bridgeObjectRelease();
        sub_1BA6EEDB4(v2);
        sub_1BA6EEDB4(v3);
        if ((v9 & 1) != 0)
        {
          v10 = 1;
          return v10 & 1;
        }
LABEL_21:
        v10 = 0;
        return v10 & 1;
      }
      sub_1BA6EEDB4(v8);
      swift_bridgeObjectRelease();
      sub_1BA6EEDB4(v6);
      swift_bridgeObjectRelease();
LABEL_20:
      sub_1BA6EEDB4(v2);
      sub_1BA6EEDB4(v3);
      goto LABEL_21;
    }
LABEL_19:
    sub_1BA67D3F4(*a2);
    sub_1BA67D3F4(v2);
    goto LABEL_20;
  }
  if (v3 >> 62)
    goto LABEL_19;
  if (*(_QWORD *)(v2 + 16) == *(_QWORD *)(v3 + 16) && *(_QWORD *)(v2 + 24) == *(_QWORD *)(v3 + 24))
    v10 = 1;
  else
    v10 = sub_1BB874398();
  sub_1BA67D3F4(v3);
  sub_1BA67D3F4(v2);
  sub_1BA6EEDB4(v2);
  sub_1BA6EEDB4(v3);
  return v10 & 1;
}

uint64_t sub_1BAADAFA4(_QWORD *a1)
{
  return FormatVisibility.encode(to:)(a1);
}

uint64_t FormatVisibility.description.getter()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;

  v1 = *v0;
  v2 = (unint64_t)*v0 >> 62;
  if (!(_DWORD)v2)
  {
    v7 = 0x3A74697265686E69;
    sub_1BA7114A0();
    if (*(_QWORD *)(sub_1BB873AB0() + 16))
      swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v6);
    goto LABEL_10;
  }
  if ((_DWORD)v2 == 1)
  {
    v3 = *(_QWORD *)(v1 + 16);
    v7 = 0;
    sub_1BA67D3F4(v3);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v4);
    sub_1BAADB140(0);
    sub_1BB873E34();
    sub_1BA6EEDB4(v3);
LABEL_10:
    swift_bridgeObjectRelease();
    return v7;
  }
  if (v1 == 0x8000000000000000)
    return 0x7465736E75;
  else
    return 0x6E6564646968;
}

void sub_1BAADB140(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3A66C0)
  {
    v2 = sub_1BAADB198();
    v4 = type metadata accessor for FormatSelectorValue(a1, (uint64_t)&type metadata for FormatVisibility, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3A66C0);
  }
}

unint64_t sub_1BAADB198()
{
  unint64_t result;

  result = qword_1ED3A5B48;
  if (!qword_1ED3A5B48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisibility, &type metadata for FormatVisibility);
    atomic_store(result, (unint64_t *)&qword_1ED3A5B48);
  }
  return result;
}

unint64_t sub_1BAADB1E0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAADB198();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAADB204(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA651250();
  a1[2] = sub_1BA84B088();
  result = sub_1BAADB238();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAADB238()
{
  unint64_t result;

  result = qword_1ED3AD570;
  if (!qword_1ED3AD570)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVisibility, &type metadata for FormatVisibility);
    atomic_store(result, (unint64_t *)&qword_1ED3AD570);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA67D3F4(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatVisibility(unint64_t *a1)
{
  return sub_1BA6EEDB4(*a1);
}

unint64_t *assignWithCopy for FormatVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA67D3F4(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA6EEDB4(v4);
  return a1;
}

unint64_t *assignWithTake for FormatVisibility(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA6EEDB4(v3);
  return a1;
}

uint64_t sub_1BAADB31C(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*a1 >> 3) + 2;
}

unint64_t *sub_1BAADB338(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 2)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 62;
  }
  else
  {
    v2 = 8 * (a2 - 2);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatVisibility()
{
  return &type metadata for FormatVisibility;
}

uint64_t sub_1BAADB374()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id FCColor.formatColor.getter@<X0>(uint64_t *a1@<X8>)
{
  void *v1;
  uint64_t v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  id result;
  uint64_t v11;

  v3 = swift_allocObject();
  objc_msgSend(v1, sel_red);
  v5 = v4 * 255.0;
  objc_msgSend(v1, sel_green);
  v7 = v6 * 255.0;
  objc_msgSend(v1, sel_blue);
  v9 = v8 * 255.0;
  result = objc_msgSend(v1, sel_alpha);
  *(double *)(v3 + 16) = v5;
  *(double *)(v3 + 24) = v7;
  *(double *)(v3 + 32) = v9;
  *(_QWORD *)(v3 + 40) = v11;
  *(_BYTE *)(v3 + 48) = 0;
  *a1 = v3 | 0x6000000000000000;
  return result;
}

uint64_t sub_1BAADB454()
{
  return swift_deallocObject();
}

id FCColor.ne_dynamicColor(darkStyleColor:)(void *a1)
{
  void *v1;
  void *v2;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  id v11;
  id v12;
  double v13;
  double v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  id v20;
  id v21;

  v2 = v1;
  objc_msgSend(v2, sel_red);
  v5 = v4;
  objc_msgSend(v2, sel_green);
  v7 = v6;
  objc_msgSend(v2, sel_blue);
  v9 = v8;
  objc_msgSend(v2, sel_alpha);
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v5, v7, v9, v10);
  if (a1)
  {
    v12 = a1;
    objc_msgSend(v12, sel_red);
    v14 = v13;
    objc_msgSend(v12, sel_green);
    v16 = v15;
    objc_msgSend(v12, sel_blue);
    v18 = v17;
    objc_msgSend(v12, sel_alpha);
    v20 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, v14, v16, v18, v19);
    v21 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v11, v20);

    return v21;
  }
  return v11;
}

id sub_1BAADB5D0(void *a1)
{
  id v1;
  void *v2;

  v1 = a1;
  v2 = (void *)FCColor.ne_color.getter();

  return v2;
}

uint64_t FCColor.ne_color.getter()
{
  void *v0;
  uint64_t v1;
  id *v2;
  void *v3;
  uint64_t result;
  id v5;
  _QWORD v6[6];

  v1 = swift_allocObject();
  *(_QWORD *)(v1 + 16) = 0;
  v2 = (id *)(v1 + 16);
  v6[4] = sub_1BAADB7B8;
  v6[5] = v1;
  v6[0] = MEMORY[0x1E0C809B0];
  v6[1] = 1107296256;
  v6[2] = sub_1BAADB7C0;
  v6[3] = &block_descriptor_22;
  v3 = _Block_copy(v6);
  swift_retain();
  swift_release();
  objc_msgSend(v0, sel_readDeconstructedRepresentationWithAcccessor_, v3);
  _Block_release(v3);
  result = swift_beginAccess();
  if (*v2)
  {
    v5 = *v2;
    swift_release();
    return (uint64_t)v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAADB6F8()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BAADB71C(uint64_t a1, double a2, double a3, double a4, double a5)
{
  id v6;
  void *v7;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, a2, a3, a4, a5);
  swift_beginAccess();
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;

}

void sub_1BAADB7B8(double a1, double a2, double a3, double a4)
{
  uint64_t v4;

  sub_1BAADB71C(v4, a1, a2, a3, a4);
}

uint64_t sub_1BAADB7C0(uint64_t a1, double a2, double a3, double a4, double a5)
{
  void (*v9)(uint64_t, double, double, double, double);
  uint64_t v10;

  v9 = *(void (**)(uint64_t, double, double, double, double))(a1 + 32);
  v10 = swift_retain();
  v9(v10, a2, a3, a4, a5);
  return swift_release();
}

uint64_t *sub_1BAADB81C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  _OWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  void *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (uint64_t *)((char *)a2 + v6);
    v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    swift_retain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v10 = v8[1];
        if (v10 == 1)
        {
          v11 = *((_OWORD *)v8 + 1);
          *v7 = *(_OWORD *)v8;
          v7[1] = v11;
          v7[2] = *((_OWORD *)v8 + 2);
        }
        else
        {
          *(_QWORD *)v7 = *v8;
          *((_QWORD *)v7 + 1) = v10;
          v17 = v8[3];
          *((_QWORD *)v7 + 2) = v8[2];
          *((_QWORD *)v7 + 3) = v17;
          v18 = v8[4];
          v19 = v8[5];
          *((_QWORD *)v7 + 4) = v18;
          *((_QWORD *)v7 + 5) = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v16 = v8[1];
        *(_QWORD *)v7 = *v8;
        *((_QWORD *)v7 + 1) = v16;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
      case 4u:
        v13 = (void *)*v8;
        v14 = v13;
        *(_QWORD *)v7 = v13;
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v15 = sub_1BB86EB84();
        (*(void (**)(_OWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v7, v8, v15);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  return v5;
}

void sub_1BAADB9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DebugFormatUploadHiddenReason();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (*(_QWORD *)(v4 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      break;
    case 1u:
LABEL_6:
      swift_bridgeObjectRelease();
      break;
    case 2u:
    case 4u:

      break;
    case 3u:
      v5 = sub_1BB86EB84();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return;
  }
}

_QWORD *sub_1BAADBAA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _OWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  void *v10;
  id v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (_OWORD *)((char *)a1 + v4);
  v6 = (_QWORD *)((char *)a2 + v4);
  v7 = type metadata accessor for DebugFormatUploadHiddenReason();
  swift_retain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v8 = v6[1];
      if (v8 == 1)
      {
        v9 = *((_OWORD *)v6 + 1);
        *v5 = *(_OWORD *)v6;
        v5[1] = v9;
        v5[2] = *((_OWORD *)v6 + 2);
      }
      else
      {
        *(_QWORD *)v5 = *v6;
        *((_QWORD *)v5 + 1) = v8;
        v14 = v6[3];
        *((_QWORD *)v5 + 2) = v6[2];
        *((_QWORD *)v5 + 3) = v14;
        v15 = v6[4];
        v16 = v6[5];
        *((_QWORD *)v5 + 4) = v15;
        *((_QWORD *)v5 + 5) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_9;
    case 1u:
      v13 = v6[1];
      *(_QWORD *)v5 = *v6;
      *((_QWORD *)v5 + 1) = v13;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 2u:
    case 4u:
      v10 = (void *)*v6;
      v11 = v10;
      *(_QWORD *)v5 = v10;
      goto LABEL_9;
    case 3u:
      v12 = sub_1BB86EB84();
      (*(void (**)(_OWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v5, v6, v12);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_1BAADBC30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  void *v12;
  id v13;
  uint64_t v14;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (_OWORD *)((char *)a1 + v6);
    v8 = (_OWORD *)((char *)a2 + v6);
    sub_1BAADBDF8((uint64_t)a1 + v6);
    v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        if (*((_QWORD *)v8 + 1) == 1)
        {
          v10 = *v8;
          v11 = v8[2];
          v7[1] = v8[1];
          v7[2] = v11;
          *v7 = v10;
        }
        else
        {
          *(_QWORD *)v7 = *(_QWORD *)v8;
          *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
          *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
          *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
          *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
          *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        goto LABEL_10;
      case 1u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 2u:
      case 4u:
        v12 = *(void **)v8;
        v13 = v12;
        *(_QWORD *)v7 = v12;
        goto LABEL_10;
      case 3u:
        v14 = sub_1BB86EB84();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BAADBDF8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatUploadHiddenReason();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_QWORD *sub_1BAADBE34(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for DebugFormatUploadHiddenReason();
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    v8 = sub_1BB86EB84();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  return a1;
}

_QWORD *sub_1BAADBED8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BAADBDF8((uint64_t)a1 + v6);
    v9 = type metadata accessor for DebugFormatUploadHiddenReason();
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      v10 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BAADBF9C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAADBFA8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for DebugFormatUploadHiddenReason();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1BAADC024()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAADC030(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for DebugFormatUploadHiddenReason();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatUploadHiddenEntry()
{
  uint64_t result;

  result = qword_1EF2AFD28;
  if (!qword_1EF2AFD28)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAADC0E0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugFormatUploadHiddenReason();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t FormatIssueCoverNodeStyle.auxViewRequirements.getter()
{
  return MEMORY[0x1E0DEE9E8];
}

uint64_t FormatIssueCoverNodeStyle.traits.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatIssueCoverNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatIssueCoverNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatIssueCoverNodeStyle.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  v9 = *(_QWORD *)(v1 + 152);
  v10 = *(_QWORD *)(v1 + 160);
  v11 = *(_QWORD *)(v1 + 168);
  v12 = *(_BYTE *)(v1 + 176);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatIssueCoverNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 177);
}

uint64_t FormatIssueCoverNodeStyle.traits.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 184) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatIssueCoverNodeStyle.traits.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatIssueCoverNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, __int128 *a9, char a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  v15 = swift_allocObject();
  v16 = *a6;
  v17 = *a8;
  v18 = a8[1];
  LOBYTE(a8) = *((_BYTE *)a8 + 16);
  v25 = a9[1];
  v26 = *a9;
  v23 = a9[3];
  v24 = a9[2];
  v19 = *((_QWORD *)a9 + 8);
  v20 = *((_QWORD *)a9 + 9);
  v21 = *((_BYTE *)a9 + 80);
  swift_beginAccess();
  *(_QWORD *)(v15 + 16) = a1;
  *(_QWORD *)(v15 + 24) = a2;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v15 + 48) = a5;
  *(_QWORD *)(v15 + 56) = v16;
  *(_QWORD *)(v15 + 64) = a7;
  *(_QWORD *)(v15 + 72) = v17;
  *(_QWORD *)(v15 + 80) = v18;
  *(_BYTE *)(v15 + 88) = (_BYTE)a8;
  *(_OWORD *)(v15 + 96) = v26;
  *(_OWORD *)(v15 + 112) = v25;
  *(_OWORD *)(v15 + 128) = v24;
  *(_OWORD *)(v15 + 144) = v23;
  *(_QWORD *)(v15 + 160) = v19;
  *(_QWORD *)(v15 + 168) = v20;
  *(_BYTE *)(v15 + 176) = v21;
  *(_BYTE *)(v15 + 177) = a10;
  swift_beginAccess();
  *(_QWORD *)(v15 + 184) = a11;
  return v15;
}

uint64_t FormatIssueCoverNodeStyle.init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:traits:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t *a8, __int128 *a9, char a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  char v27;

  v16 = *a6;
  v17 = *a8;
  v18 = a8[1];
  v27 = *((_BYTE *)a8 + 16);
  v25 = a9[1];
  v26 = *a9;
  v23 = a9[3];
  v24 = a9[2];
  v19 = *((_QWORD *)a9 + 8);
  v22 = *((_QWORD *)a9 + 9);
  v20 = *((_BYTE *)a9 + 80);
  swift_beginAccess();
  *(_QWORD *)(v11 + 16) = a1;
  *(_QWORD *)(v11 + 24) = a2;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v11 + 48) = a5;
  *(_QWORD *)(v11 + 56) = v16;
  *(_QWORD *)(v11 + 64) = a7;
  *(_QWORD *)(v11 + 72) = v17;
  *(_QWORD *)(v11 + 80) = v18;
  *(_BYTE *)(v11 + 88) = v27;
  *(_OWORD *)(v11 + 96) = v26;
  *(_OWORD *)(v11 + 112) = v25;
  *(_OWORD *)(v11 + 128) = v24;
  *(_OWORD *)(v11 + 144) = v23;
  *(_QWORD *)(v11 + 160) = v19;
  *(_QWORD *)(v11 + 168) = v22;
  *(_BYTE *)(v11 + 176) = v20;
  *(_BYTE *)(v11 + 177) = a10;
  swift_beginAccess();
  *(_QWORD *)(v11 + 184) = a11;
  return v11;
}

uint64_t sub_1BAADC6C8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t i;
  uint64_t v20;
  unint64_t v21;
  char isUniquelyReferenced_nonNull_native;
  char v23;
  unint64_t v24;
  uint64_t v25;
  _BOOL8 v26;
  uint64_t v27;
  char v28;
  unint64_t v29;
  char v30;
  _QWORD *v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  _QWORD *v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  unsigned __int8 v101;
  char v102;
  uint64_t v103;
  __int128 v104;
  char v105;
  char v106;
  unint64_t v107;
  uint64_t v108;
  _BOOL8 v109;
  uint64_t v110;
  char v111;
  unint64_t v112;
  char v113;
  uint64_t v114;
  char v115;
  char v116;
  unint64_t v117;
  uint64_t v118;
  _BOOL8 v119;
  uint64_t v120;
  char v121;
  unint64_t v122;
  char v123;
  _QWORD *v124;
  uint64_t v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  _QWORD *v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  _QWORD *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  _QWORD *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  unint64_t v181;
  char v182;
  uint64_t v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  unint64_t v191;
  unint64_t v192;
  _QWORD *v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  int v212;
  unsigned __int8 v213;
  int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t result;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  int64_t v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  uint64_t v277;
  _OWORD v278[9];
  uint64_t v279;
  _QWORD *v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  unint64_t v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  uint64_t v301;

  swift_beginAccess();
  v4 = v1[2];
  v3 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  swift_beginAccess();
  v222 = v1;
  v7 = v1[6];
  swift_beginAccess();
  v223 = a1;
  v8 = *(_QWORD *)(a1 + 48);
  v291 = MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  v10 = *(_QWORD *)(v8 + 16);
  if (__OFADD__(v9, v10))
    goto LABEL_96;
  v219 = v5;
  v221 = v4;
  sub_1BAADECE8();
  v220 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = v7;
  sub_1BB8727C0();
  v276 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v12 = *(_QWORD *)(v7 + 16);
  v218 = v6;
  v224 = v8;
  if (!v12)
    goto LABEL_20;
  v273 = v10;
  swift_bridgeObjectRetain();
  v13 = *(_OWORD *)(v11 + 144);
  v298 = *(_OWORD *)(v11 + 128);
  v299 = v13;
  v300 = *(_OWORD *)(v11 + 160);
  v301 = *(_QWORD *)(v11 + 176);
  v14 = *(_OWORD *)(v11 + 80);
  v294 = *(_OWORD *)(v11 + 64);
  v295 = v14;
  v15 = *(_OWORD *)(v11 + 112);
  v296 = *(_OWORD *)(v11 + 96);
  v297 = v15;
  v16 = *(_OWORD *)(v11 + 48);
  v292 = *(_OWORD *)(v11 + 32);
  v293 = v16;
  v17 = *((_QWORD *)&v292 + 1);
  v18 = v12 - 1;
  for (i = 184; ; i += 152)
  {
    v20 = v292;
    sub_1BAADEEC0((uint64_t)&v292);
    sub_1BAADEEC0((uint64_t)&v292);
    swift_bridgeObjectRetain();
    v21 = v291;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v278[0] = v21;
    v24 = sub_1BA6E35A8(v20, v17);
    v25 = *(_QWORD *)(v21 + 16);
    v26 = (v23 & 1) == 0;
    v27 = v25 + v26;
    if (__OFADD__(v25, v26))
    {
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
LABEL_96:
      __break(1u);
LABEL_97:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v28 = v23;
    if (*(_QWORD *)(v21 + 24) >= v27)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v23 & 1) != 0)
          goto LABEL_11;
      }
      else
      {
        sub_1BB4C5A44();
        if ((v28 & 1) != 0)
          goto LABEL_11;
      }
    }
    else
    {
      sub_1BB4B3CFC(v27, isUniquelyReferenced_nonNull_native);
      v29 = sub_1BA6E35A8(v20, v17);
      if ((v28 & 1) != (v30 & 1))
        goto LABEL_97;
      v24 = v29;
      if ((v28 & 1) != 0)
      {
LABEL_11:
        v31 = *(_QWORD **)&v278[0];
        v32 = *(_QWORD *)(*(_QWORD *)&v278[0] + 56) + 152 * v24;
        v33 = *(_OWORD *)(v32 + 16);
        v281 = *(_OWORD *)v32;
        v282 = v33;
        v34 = *(_OWORD *)(v32 + 80);
        v36 = *(_OWORD *)(v32 + 32);
        v35 = *(_OWORD *)(v32 + 48);
        v285 = *(_OWORD *)(v32 + 64);
        v286 = v34;
        v283 = v36;
        v284 = v35;
        v38 = *(_OWORD *)(v32 + 112);
        v37 = *(_OWORD *)(v32 + 128);
        v39 = *(_OWORD *)(v32 + 96);
        v290 = *(_QWORD *)(v32 + 144);
        v288 = v38;
        v289 = v37;
        v287 = v39;
        sub_1BAADED48((uint64_t)&v281);
        v40 = v293;
        *(_OWORD *)v32 = v292;
        *(_OWORD *)(v32 + 16) = v40;
        v41 = v297;
        v43 = v294;
        v42 = v295;
        *(_OWORD *)(v32 + 64) = v296;
        *(_OWORD *)(v32 + 80) = v41;
        *(_OWORD *)(v32 + 32) = v43;
        *(_OWORD *)(v32 + 48) = v42;
        v45 = v299;
        v44 = v300;
        v46 = v298;
        *(_QWORD *)(v32 + 144) = v301;
        *(_OWORD *)(v32 + 112) = v45;
        *(_OWORD *)(v32 + 128) = v44;
        *(_OWORD *)(v32 + 96) = v46;
        goto LABEL_15;
      }
    }
    v31 = *(_QWORD **)&v278[0];
    *(_QWORD *)(*(_QWORD *)&v278[0] + 8 * (v24 >> 6) + 64) |= 1 << v24;
    v47 = (uint64_t *)(v31[6] + 16 * v24);
    *v47 = v20;
    v47[1] = v17;
    v48 = v31[7] + 152 * v24;
    v49 = v301;
    v51 = v299;
    v50 = v300;
    *(_OWORD *)(v48 + 96) = v298;
    *(_OWORD *)(v48 + 112) = v51;
    *(_OWORD *)(v48 + 128) = v50;
    *(_QWORD *)(v48 + 144) = v49;
    v53 = v296;
    v52 = v297;
    v54 = v295;
    *(_OWORD *)(v48 + 32) = v294;
    *(_OWORD *)(v48 + 48) = v54;
    *(_OWORD *)(v48 + 64) = v53;
    *(_OWORD *)(v48 + 80) = v52;
    v55 = v293;
    *(_OWORD *)v48 = v292;
    *(_OWORD *)(v48 + 16) = v55;
    v56 = v31[2];
    v57 = __OFADD__(v56, 1);
    v58 = v56 + 1;
    if (v57)
      goto LABEL_92;
    v31[2] = v58;
    swift_bridgeObjectRetain();
LABEL_15:
    v291 = (unint64_t)v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v59 = v276[2];
    v60 = v276[3];
    swift_bridgeObjectRetain();
    if (v59 >= v60 >> 1)
      v276 = sub_1BA6E6D30((_QWORD *)(v60 > 1), v59 + 1, 1, v276);
    v276[2] = v59 + 1;
    v61 = &v276[2 * v59];
    v61[4] = v20;
    v61[5] = v17;
    sub_1BAADED48((uint64_t)&v292);
    if (!v18)
      break;
    v62 = *(_OWORD *)(v11 + i + 16);
    v292 = *(_OWORD *)(v11 + i);
    v293 = v62;
    v63 = *(_OWORD *)(v11 + i + 32);
    v64 = *(_OWORD *)(v11 + i + 48);
    v65 = *(_OWORD *)(v11 + i + 80);
    v296 = *(_OWORD *)(v11 + i + 64);
    v297 = v65;
    v294 = v63;
    v295 = v64;
    v66 = *(_OWORD *)(v11 + i + 96);
    v67 = *(_OWORD *)(v11 + i + 112);
    v68 = *(_OWORD *)(v11 + i + 128);
    v301 = *(_QWORD *)(v11 + i + 144);
    v299 = v67;
    v300 = v68;
    v298 = v66;
    v17 = *((_QWORD *)&v292 + 1);
    --v18;
  }
  swift_bridgeObjectRelease();
  v8 = v224;
  v10 = v273;
LABEL_20:
  v69 = sub_1BA6E6D30(0, v10, 0, MEMORY[0x1E0DEE9D8]);
  v70 = *(_QWORD *)(v8 + 16);
  if (!v70)
    goto LABEL_66;
  swift_bridgeObjectRetain();
  v71 = *(_OWORD *)(v8 + 144);
  v298 = *(_OWORD *)(v8 + 128);
  v299 = v71;
  v300 = *(_OWORD *)(v8 + 160);
  v301 = *(_QWORD *)(v8 + 176);
  v72 = *(_OWORD *)(v8 + 80);
  v294 = *(_OWORD *)(v8 + 64);
  v295 = v72;
  v73 = *(_OWORD *)(v8 + 112);
  v296 = *(_OWORD *)(v8 + 96);
  v297 = v73;
  v74 = *(_OWORD *)(v8 + 48);
  v292 = *(_OWORD *)(v8 + 32);
  v293 = v74;
  v75 = v70 - 1;
  v76 = *((_QWORD *)&v292 + 1);
  v77 = 184;
  while (2)
  {
    v78 = v292;
    v79 = (_QWORD *)v291;
    v80 = *(_QWORD *)(v291 + 16);
    sub_1BAADEEC0((uint64_t)&v292);
    if (v80)
    {
      swift_bridgeObjectRetain();
      v81 = sub_1BA6E35A8(v78, v76);
      if ((v82 & 1) != 0)
      {
        v83 = v79[7] + 152 * v81;
        v84 = *(_OWORD *)(v83 + 16);
        v281 = *(_OWORD *)v83;
        v282 = v84;
        v85 = *(_OWORD *)(v83 + 80);
        v87 = *(_OWORD *)(v83 + 32);
        v86 = *(_OWORD *)(v83 + 48);
        v285 = *(_OWORD *)(v83 + 64);
        v286 = v85;
        v283 = v87;
        v284 = v86;
        v88 = *(_OWORD *)(v83 + 96);
        v89 = *(_OWORD *)(v83 + 112);
        v90 = *(_OWORD *)(v83 + 128);
        v290 = *(_QWORD *)(v83 + 144);
        v288 = v89;
        v289 = v90;
        v287 = v88;
        sub_1BAADEEC0((uint64_t)&v281);
        swift_bridgeObjectRelease();
        v91 = v282;
        if (!(_QWORD)v282)
          v91 = swift_bridgeObjectRetain();
        v225 = v91;
        v92 = *((_QWORD *)&v282 + 1);
        if (!*((_QWORD *)&v282 + 1))
          v92 = swift_bridgeObjectRetain();
        v233 = v92;
        v236 = v75;
        v94 = *((_QWORD *)&v283 + 1);
        v93 = v283;
        v95 = v284;
        v254 = *((_QWORD *)&v283 + 1);
        v256 = v283;
        v96 = v284;
        if (v284 >= 0xFEu)
        {
          v94 = *((_QWORD *)&v294 + 1);
          v93 = v294;
          v96 = v295;
          sub_1BA6E6C54(v294, *((uint64_t *)&v294 + 1), v295);
        }
        v229 = v94;
        v231 = v93;
        v238 = v69;
        v97 = *((_QWORD *)&v284 + 1);
        v98 = v285;
        v99 = v288;
        v100 = v289;
        v250 = v285;
        v252 = *((_QWORD *)&v284 + 1);
        v246 = v286;
        v248 = *((_QWORD *)&v285 + 1);
        v271 = v286;
        v274 = *((_QWORD *)&v285 + 1);
        v242 = v287;
        v244 = *((_QWORD *)&v286 + 1);
        v268 = v287;
        v269 = *((_QWORD *)&v286 + 1);
        v240 = *((_QWORD *)&v287 + 1);
        v265 = v288;
        v267 = *((_QWORD *)&v287 + 1);
        v261 = v289;
        v263 = *((_QWORD *)&v288 + 1);
        v101 = BYTE8(v289);
        v259 = BYTE8(v289);
        if (BYTE8(v289) == 254)
        {
          v97 = *((_QWORD *)&v295 + 1);
          v98 = v296;
          v259 = BYTE8(v300);
          v261 = v300;
          v263 = *((_QWORD *)&v299 + 1);
          v271 = v297;
          v274 = *((_QWORD *)&v296 + 1);
          v268 = v298;
          v269 = *((_QWORD *)&v297 + 1);
          v265 = v299;
          v267 = *((_QWORD *)&v298 + 1);
          sub_1BA6E8A48(*((uint64_t *)&v295 + 1), v296, *((uint64_t *)&v296 + 1), v297, *((uint64_t *)&v297 + 1), v298, *((uint64_t *)&v298 + 1), v299, *((uint64_t *)&v299 + 1), v300, BYTE8(v300));
        }
        v228 = v98;
        v102 = BYTE9(v289);
        if (BYTE9(v289) == 2)
          v102 = BYTE9(v300);
        v227 = v102;
        v103 = v290;
        if (!v290)
          v103 = swift_bridgeObjectRetain();
        v226 = v103;
        v104 = v281;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v256, v254, v95);
        sub_1BA6E8A48(v252, v250, v248, v246, v244, v242, v240, v99, *((uint64_t *)&v99 + 1), v100, v101);
        swift_bridgeObjectRetain();
        v105 = swift_isUniquelyReferenced_nonNull_native();
        v280 = v79;
        v291 = 0x8000000000000000;
        v107 = sub_1BA6E35A8(v104, *((uint64_t *)&v104 + 1));
        v108 = v79[2];
        v109 = (v106 & 1) == 0;
        v110 = v108 + v109;
        if (__OFADD__(v108, v109))
          goto LABEL_94;
        v111 = v106;
        if (v79[3] >= v110)
        {
          v75 = v236;
          v69 = v238;
          if ((v105 & 1) != 0)
          {
            v114 = v225;
            if ((v106 & 1) == 0)
              goto LABEL_61;
          }
          else
          {
            sub_1BB4C5A44();
            v114 = v225;
            if ((v111 & 1) == 0)
              goto LABEL_61;
          }
        }
        else
        {
          sub_1BB4B3CFC(v110, v105);
          v112 = sub_1BA6E35A8(v104, *((uint64_t *)&v104 + 1));
          v75 = v236;
          v69 = v238;
          if ((v111 & 1) != (v113 & 1))
            goto LABEL_97;
          v107 = v112;
          v114 = v225;
          if ((v111 & 1) == 0)
          {
LABEL_61:
            v140 = v280;
            v280[(v107 >> 6) + 8] |= 1 << v107;
            *(_OWORD *)(v140[6] + 16 * v107) = v104;
            v163 = v140[7] + 152 * v107;
            *(_OWORD *)v163 = v104;
            *(_QWORD *)(v163 + 16) = v114;
            *(_QWORD *)(v163 + 24) = v233;
            *(_QWORD *)(v163 + 32) = v231;
            *(_QWORD *)(v163 + 40) = v229;
            *(_BYTE *)(v163 + 48) = v96;
            *(_QWORD *)(v163 + 56) = v97;
            *(_QWORD *)(v163 + 64) = v228;
            *(_QWORD *)(v163 + 72) = v274;
            *(_QWORD *)(v163 + 80) = v271;
            *(_QWORD *)(v163 + 88) = v269;
            *(_QWORD *)(v163 + 96) = v268;
            *(_QWORD *)(v163 + 104) = v267;
            *(_QWORD *)(v163 + 112) = v265;
            *(_QWORD *)(v163 + 120) = v263;
            *(_QWORD *)(v163 + 128) = v261;
            *(_BYTE *)(v163 + 136) = v259;
            *(_BYTE *)(v163 + 137) = v227;
            *(_QWORD *)(v163 + 144) = v226;
            v164 = v140[2];
            v57 = __OFADD__(v164, 1);
            v165 = v164 + 1;
            if (v57)
              goto LABEL_95;
            v140[2] = v165;
            swift_bridgeObjectRetain();
            goto LABEL_63;
          }
        }
        v140 = v280;
        v141 = v280[7] + 152 * v107;
        v142 = *(_OWORD *)(v141 + 16);
        v278[0] = *(_OWORD *)v141;
        v278[1] = v142;
        v143 = *(_OWORD *)(v141 + 80);
        v145 = *(_OWORD *)(v141 + 32);
        v144 = *(_OWORD *)(v141 + 48);
        v278[4] = *(_OWORD *)(v141 + 64);
        v278[5] = v143;
        v278[2] = v145;
        v278[3] = v144;
        v147 = *(_OWORD *)(v141 + 112);
        v146 = *(_OWORD *)(v141 + 128);
        v148 = *(_OWORD *)(v141 + 96);
        v279 = *(_QWORD *)(v141 + 144);
        v278[7] = v147;
        v278[8] = v146;
        v278[6] = v148;
        sub_1BAADED48((uint64_t)v278);
        *(_OWORD *)v141 = v104;
        *(_QWORD *)(v141 + 16) = v114;
        *(_QWORD *)(v141 + 24) = v233;
        *(_QWORD *)(v141 + 32) = v231;
        *(_QWORD *)(v141 + 40) = v229;
        *(_BYTE *)(v141 + 48) = v96;
        *(_QWORD *)(v141 + 56) = v97;
        *(_QWORD *)(v141 + 64) = v228;
        *(_QWORD *)(v141 + 72) = v274;
        *(_QWORD *)(v141 + 80) = v271;
        *(_QWORD *)(v141 + 88) = v269;
        *(_QWORD *)(v141 + 96) = v268;
        *(_QWORD *)(v141 + 104) = v267;
        *(_QWORD *)(v141 + 112) = v265;
        *(_QWORD *)(v141 + 120) = v263;
        *(_QWORD *)(v141 + 128) = v261;
        *(_BYTE *)(v141 + 136) = v259;
        *(_BYTE *)(v141 + 137) = v227;
        *(_QWORD *)(v141 + 144) = v226;
LABEL_63:
        v291 = (unint64_t)v140;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAADED48((uint64_t)&v281);
        sub_1BAADED48((uint64_t)&v292);
        v8 = v224;
        if (!v75)
          goto LABEL_65;
LABEL_64:
        v166 = *(_OWORD *)(v8 + v77 + 16);
        v292 = *(_OWORD *)(v8 + v77);
        v293 = v166;
        v167 = *(_OWORD *)(v8 + v77 + 32);
        v168 = *(_OWORD *)(v8 + v77 + 48);
        v169 = *(_OWORD *)(v8 + v77 + 80);
        v296 = *(_OWORD *)(v8 + v77 + 64);
        v297 = v169;
        v294 = v167;
        v295 = v168;
        v170 = *(_OWORD *)(v8 + v77 + 96);
        v171 = *(_OWORD *)(v8 + v77 + 112);
        v172 = *(_OWORD *)(v8 + v77 + 128);
        v301 = *(_QWORD *)(v8 + v77 + 144);
        v299 = v171;
        v300 = v172;
        v298 = v170;
        v76 = *((_QWORD *)&v292 + 1);
        v77 += 152;
        --v75;
        continue;
      }
      swift_bridgeObjectRelease();
    }
    break;
  }
  sub_1BAADEEC0((uint64_t)&v292);
  swift_bridgeObjectRetain();
  v115 = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v278[0] = v79;
  v117 = sub_1BA6E35A8(v78, v76);
  v118 = v79[2];
  v119 = (v116 & 1) == 0;
  v120 = v118 + v119;
  if (__OFADD__(v118, v119))
    goto LABEL_91;
  v121 = v116;
  if (v79[3] >= v120)
  {
    if ((v115 & 1) != 0)
    {
      if ((v116 & 1) == 0)
        goto LABEL_54;
    }
    else
    {
      sub_1BB4C5A44();
      if ((v121 & 1) == 0)
        goto LABEL_54;
    }
    goto LABEL_49;
  }
  sub_1BB4B3CFC(v120, v115);
  v122 = sub_1BA6E35A8(v78, v76);
  if ((v121 & 1) != (v123 & 1))
    goto LABEL_97;
  v117 = v122;
  if ((v121 & 1) != 0)
  {
LABEL_49:
    v124 = *(_QWORD **)&v278[0];
    v125 = *(_QWORD *)(*(_QWORD *)&v278[0] + 56) + 152 * v117;
    v126 = *(_OWORD *)(v125 + 16);
    v281 = *(_OWORD *)v125;
    v282 = v126;
    v127 = *(_OWORD *)(v125 + 80);
    v129 = *(_OWORD *)(v125 + 32);
    v128 = *(_OWORD *)(v125 + 48);
    v285 = *(_OWORD *)(v125 + 64);
    v286 = v127;
    v283 = v129;
    v284 = v128;
    v131 = *(_OWORD *)(v125 + 112);
    v130 = *(_OWORD *)(v125 + 128);
    v132 = *(_OWORD *)(v125 + 96);
    v290 = *(_QWORD *)(v125 + 144);
    v288 = v131;
    v289 = v130;
    v287 = v132;
    sub_1BAADED48((uint64_t)&v281);
    v133 = v293;
    *(_OWORD *)v125 = v292;
    *(_OWORD *)(v125 + 16) = v133;
    v134 = v297;
    v136 = v294;
    v135 = v295;
    *(_OWORD *)(v125 + 64) = v296;
    *(_OWORD *)(v125 + 80) = v134;
    *(_OWORD *)(v125 + 32) = v136;
    *(_OWORD *)(v125 + 48) = v135;
    v138 = v299;
    v137 = v300;
    v139 = v298;
    *(_QWORD *)(v125 + 144) = v301;
    *(_OWORD *)(v125 + 112) = v138;
    *(_OWORD *)(v125 + 128) = v137;
    *(_OWORD *)(v125 + 96) = v139;
    goto LABEL_56;
  }
LABEL_54:
  v124 = *(_QWORD **)&v278[0];
  *(_QWORD *)(*(_QWORD *)&v278[0] + 8 * (v117 >> 6) + 64) |= 1 << v117;
  v149 = (uint64_t *)(v124[6] + 16 * v117);
  *v149 = v78;
  v149[1] = v76;
  v150 = v124[7] + 152 * v117;
  v151 = v301;
  v153 = v299;
  v152 = v300;
  *(_OWORD *)(v150 + 96) = v298;
  *(_OWORD *)(v150 + 112) = v153;
  *(_OWORD *)(v150 + 128) = v152;
  *(_QWORD *)(v150 + 144) = v151;
  v155 = v296;
  v154 = v297;
  v156 = v295;
  *(_OWORD *)(v150 + 32) = v294;
  *(_OWORD *)(v150 + 48) = v156;
  *(_OWORD *)(v150 + 64) = v155;
  *(_OWORD *)(v150 + 80) = v154;
  v157 = v293;
  *(_OWORD *)v150 = v292;
  *(_OWORD *)(v150 + 16) = v157;
  v158 = v124[2];
  v57 = __OFADD__(v158, 1);
  v159 = v158 + 1;
  if (v57)
    goto LABEL_93;
  v124[2] = v159;
  swift_bridgeObjectRetain();
LABEL_56:
  v291 = (unint64_t)v124;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v160 = v69[2];
  v161 = v69[3];
  swift_bridgeObjectRetain();
  if (v160 >= v161 >> 1)
    v69 = sub_1BA6E6D30((_QWORD *)(v161 > 1), v160 + 1, 1, v69);
  v69[2] = v160 + 1;
  v162 = &v69[2 * v160];
  v162[4] = v78;
  v162[5] = v76;
  sub_1BAADED48((uint64_t)&v292);
  if (v75)
    goto LABEL_64;
LABEL_65:
  swift_bridgeObjectRelease();
LABEL_66:
  *(_QWORD *)&v292 = v69;
  swift_bridgeObjectRetain();
  v173 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v173);
  v174 = v292;
  v175 = *(_QWORD *)(v292 + 16);
  if (v175)
  {
    swift_bridgeObjectRetain();
    v176 = (uint64_t *)(v174 + 40);
    v177 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      v178 = v291;
      if (*(_QWORD *)(v291 + 16))
      {
        v180 = *(v176 - 1);
        v179 = *v176;
        swift_bridgeObjectRetain_n();
        v181 = sub_1BA6E35A8(v180, v179);
        if ((v182 & 1) != 0)
        {
          v183 = *(_QWORD *)(v178 + 56) + 152 * v181;
          v184 = *(_OWORD *)(v183 + 16);
          v292 = *(_OWORD *)v183;
          v293 = v184;
          v185 = *(_OWORD *)(v183 + 80);
          v187 = *(_OWORD *)(v183 + 32);
          v186 = *(_OWORD *)(v183 + 48);
          v296 = *(_OWORD *)(v183 + 64);
          v297 = v185;
          v294 = v187;
          v295 = v186;
          v188 = *(_OWORD *)(v183 + 96);
          v189 = *(_OWORD *)(v183 + 112);
          v190 = *(_OWORD *)(v183 + 128);
          v301 = *(_QWORD *)(v183 + 144);
          v299 = v189;
          v300 = v190;
          v298 = v188;
          sub_1BAADEEC0((uint64_t)&v292);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v177 = sub_1BB38DCE0(0, v177[2] + 1, 1, v177);
          v192 = v177[2];
          v191 = v177[3];
          if (v192 >= v191 >> 1)
            v177 = sub_1BB38DCE0((_QWORD *)(v191 > 1), v192 + 1, 1, v177);
          v177[2] = v192 + 1;
          v193 = &v177[19 * v192];
          v194 = v293;
          *((_OWORD *)v193 + 2) = v292;
          *((_OWORD *)v193 + 3) = v194;
          v195 = v294;
          v196 = v295;
          v197 = v297;
          *((_OWORD *)v193 + 6) = v296;
          *((_OWORD *)v193 + 7) = v197;
          *((_OWORD *)v193 + 4) = v195;
          *((_OWORD *)v193 + 5) = v196;
          v198 = v298;
          v199 = v299;
          v200 = v300;
          v193[22] = v301;
          *((_OWORD *)v193 + 9) = v199;
          *((_OWORD *)v193 + 10) = v200;
          *((_OWORD *)v193 + 8) = v198;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v176 += 2;
      --v175;
    }
    while (v175);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v177 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v201 = v222[7];
  if (!v201)
  {
    v201 = *(_QWORD *)(v223 + 56);
    swift_bridgeObjectRetain();
  }
  v202 = v222[8];
  if (!v202)
    v202 = swift_bridgeObjectRetain();
  v255 = v202;
  v260 = v201;
  v203 = v222[9];
  v204 = v222[10];
  v264 = v204;
  v266 = v203;
  v205 = *((unsigned __int8 *)v222 + 88);
  v262 = *((_BYTE *)v222 + 88);
  if (v205 >= 0xFE)
  {
    v203 = *(_QWORD *)(v223 + 72);
    v204 = *(_QWORD *)(v223 + 80);
    LOBYTE(v205) = *(_BYTE *)(v223 + 88);
    sub_1BA6E6C54(v203, v204, v205);
  }
  v234 = v205;
  v235 = v204;
  v237 = v203;
  v206 = v222[12];
  v207 = v222[13];
  v209 = v222[18];
  v208 = v222[19];
  v211 = v222[20];
  v210 = v222[21];
  v257 = v207;
  v258 = v206;
  v251 = v222[15];
  v253 = v222[14];
  v275 = v251;
  v277 = v253;
  v247 = v222[17];
  v249 = v222[16];
  v270 = v247;
  v272 = v249;
  v243 = v208;
  v245 = v209;
  v239 = v210;
  v241 = v211;
  v212 = *((unsigned __int8 *)v222 + 176);
  v213 = *((_BYTE *)v222 + 176);
  if (v212 == 254)
  {
    v206 = *(_QWORD *)(v223 + 96);
    v207 = *(_QWORD *)(v223 + 104);
    v209 = *(_QWORD *)(v223 + 144);
    v208 = *(_QWORD *)(v223 + 152);
    v211 = *(_QWORD *)(v223 + 160);
    v210 = *(_QWORD *)(v223 + 168);
    v213 = *(_BYTE *)(v223 + 176);
    v275 = *(_QWORD *)(v223 + 120);
    v277 = *(_QWORD *)(v223 + 112);
    v270 = *(_QWORD *)(v223 + 136);
    v272 = *(_QWORD *)(v223 + 128);
    sub_1BA6E8A48(v206, v207, v277, v275, v272, v270, v209, v208, v211, v210, v213);
  }
  v230 = v207;
  v232 = v206;
  v214 = *((unsigned __int8 *)v222 + 177);
  if (v214 == 2)
    LOBYTE(v214) = *(_BYTE *)(v223 + 177);
  swift_beginAccess();
  v215 = v222[23];
  v216 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v216 + 16) = v221;
  *(_QWORD *)(v216 + 24) = v220;
  *(_QWORD *)(v216 + 32) = v219;
  *(_QWORD *)(v216 + 40) = v218;
  swift_beginAccess();
  *(_QWORD *)(v216 + 48) = v177;
  *(_QWORD *)(v216 + 56) = v260;
  *(_QWORD *)(v216 + 64) = v255;
  *(_QWORD *)(v216 + 72) = v237;
  *(_QWORD *)(v216 + 80) = v235;
  *(_BYTE *)(v216 + 88) = v234;
  *(_QWORD *)(v216 + 96) = v232;
  *(_QWORD *)(v216 + 104) = v230;
  *(_QWORD *)(v216 + 112) = v277;
  *(_QWORD *)(v216 + 120) = v275;
  *(_QWORD *)(v216 + 128) = v272;
  *(_QWORD *)(v216 + 136) = v270;
  *(_QWORD *)(v216 + 144) = v209;
  *(_QWORD *)(v216 + 152) = v208;
  *(_QWORD *)(v216 + 160) = v211;
  *(_QWORD *)(v216 + 168) = v210;
  *(_BYTE *)(v216 + 176) = v213;
  *(_BYTE *)(v216 + 177) = v214;
  swift_beginAccess();
  *(_QWORD *)(v216 + 184) = v215;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v266, v264, v262);
  sub_1BA6E8A48(v258, v257, v253, v251, v249, v247, v245, v243, v241, v239, v212);
  swift_bridgeObjectRetain();
  return v216;
}

uint64_t sub_1BAADD638(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  unsigned int v23;
  unint64_t v24;
  size_t v25;
  uint64_t isStackAllocationSafe;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t i;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  unint64_t v66;
  unint64_t v67;
  _QWORD *v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t j;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  uint64_t result;
  _QWORD *v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  void *v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  uint64_t v122;

  v100 = a1;
  v101 = 0;
  v122 = *MEMORY[0x1E0C80C00];
  v94 = *v1;
  swift_beginAccess();
  v89 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v5 = sub_1BB38DCE0(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v90 = sub_1BB38DBC4(0, v3, 0, v4);
  v92 = *(_QWORD *)(v2 + 16);
  v93 = v2;
  if (!v92)
  {
LABEL_31:
    sub_1BAADEE24(0);
    v55 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v56 = *(_QWORD *)(v55 + 16);
    if (v56)
    {
      v57 = v56 - 1;
      for (i = 32; ; i += 160)
      {
        v59 = *(_OWORD *)(v55 + i + 16);
        v112 = *(_OWORD *)(v55 + i);
        v113 = v59;
        v60 = *(_OWORD *)(v55 + i + 32);
        v61 = *(_OWORD *)(v55 + i + 48);
        v62 = *(_OWORD *)(v55 + i + 80);
        v116 = *(_OWORD *)(v55 + i + 64);
        v117 = v62;
        v114 = v60;
        v115 = v61;
        v63 = *(_OWORD *)(v55 + i + 96);
        v64 = *(_OWORD *)(v55 + i + 112);
        v65 = *(_OWORD *)(v55 + i + 144);
        v120 = *(_OWORD *)(v55 + i + 128);
        v121 = v65;
        v118 = v63;
        v119 = v64;
        sub_1BAADEEC0((uint64_t)&v112);
        v67 = v5[2];
        v66 = v5[3];
        if (v67 >= v66 >> 1)
          v5 = sub_1BB38DCE0((_QWORD *)(v66 > 1), v67 + 1, 1, v5);
        v5[2] = v67 + 1;
        v68 = &v5[19 * v67];
        v69 = v113;
        *((_OWORD *)v68 + 2) = v112;
        *((_OWORD *)v68 + 3) = v69;
        v70 = v114;
        v71 = v115;
        v72 = v117;
        *((_OWORD *)v68 + 6) = v116;
        *((_OWORD *)v68 + 7) = v72;
        *((_OWORD *)v68 + 4) = v70;
        *((_OWORD *)v68 + 5) = v71;
        v73 = v118;
        v74 = v119;
        v75 = v120;
        v68[22] = v121;
        *((_OWORD *)v68 + 9) = v74;
        *((_OWORD *)v68 + 10) = v75;
        *((_OWORD *)v68 + 8) = v73;
        if (!v57)
          break;
        --v57;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v76 = v5[2];
    if (v76)
    {
      v77 = (uint64_t)v89;
      swift_retain();
      swift_bridgeObjectRetain();
      v78 = v76 - 1;
      v79 = v77;
      for (j = 4; ; j += 19)
      {
        v81 = *(_OWORD *)&v5[j + 2];
        v112 = *(_OWORD *)&v5[j];
        v113 = v81;
        v82 = *(_OWORD *)&v5[j + 4];
        v83 = *(_OWORD *)&v5[j + 6];
        v84 = *(_OWORD *)&v5[j + 10];
        v116 = *(_OWORD *)&v5[j + 8];
        v117 = v84;
        v114 = v82;
        v115 = v83;
        v85 = *(_OWORD *)&v5[j + 12];
        v86 = *(_OWORD *)&v5[j + 14];
        v87 = *(_OWORD *)&v5[j + 16];
        *(_QWORD *)&v121 = v5[j + 18];
        v119 = v86;
        v120 = v87;
        v118 = v85;
        v108 = v85;
        v109 = v86;
        v110 = v87;
        v111 = v121;
        v104 = v114;
        v105 = v115;
        v106 = v116;
        v107 = v84;
        v102 = v112;
        v103 = v113;
        swift_allocObject();
        sub_1BAADEEC0((uint64_t)&v112);
        v79 = sub_1BAADEF9C(v79, &v102);
        swift_release();
        if (!v78)
          break;
        --v78;
      }
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v79 = (uint64_t)v89;
      swift_retain();
      swift_bridgeObjectRelease();
    }
    return v79;
  }
  v91 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
LABEL_3:
  v96 = v6;
  v7 = v91 + 152 * v6;
  v8 = *(_OWORD *)(v7 + 16);
  v112 = *(_OWORD *)v7;
  v113 = v8;
  v9 = *(_OWORD *)(v7 + 32);
  v10 = *(_OWORD *)(v7 + 48);
  v11 = *(_OWORD *)(v7 + 80);
  v116 = *(_OWORD *)(v7 + 64);
  v117 = v11;
  v114 = v9;
  v115 = v10;
  v12 = *(_OWORD *)(v7 + 96);
  v13 = *(_OWORD *)(v7 + 112);
  v14 = *(_OWORD *)(v7 + 128);
  *(_QWORD *)&v121 = *(_QWORD *)(v7 + 144);
  v119 = v13;
  v120 = v14;
  v118 = v12;
  v15 = v112;
  sub_1BAADEEC0((uint64_t)&v112);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v102 = v15;
  swift_bridgeObjectRetain();
  v16 = sub_1BA6E583C((uint64_t *)&v102);
  swift_bridgeObjectRelease();
  v98 = *(_QWORD *)(v16 + 16);
  if (!v98)
  {
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  v95 = v5;
  v17 = 0;
  v18 = (uint64_t *)(v16 + 64);
  v19 = v16;
  while (1)
  {
    if (v17 >= *(_QWORD *)(v19 + 16))
    {
      __break(1u);
      goto LABEL_45;
    }
    v97 = *(v18 - 2);
    v20 = *(v18 - 1);
    v21 = *v18;
    v22 = *(_BYTE *)(v20 + 32);
    v23 = v22 & 0x3F;
    v24 = (unint64_t)((1 << v22) + 63) >> 6;
    v25 = 8 * v24;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v23 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v27 = (char *)swift_slowAlloc();
    bzero(v27, v25);
    v31 = v24;
    v29 = v101;
    v30 = sub_1BA6EB5B4((uint64_t)v27, v31, v20, v100);
    swift_bridgeObjectRelease();
    if (v29)
      goto LABEL_47;
    v101 = 0;
    MEMORY[0x1BCCE5C38](v27, -1, -1);
LABEL_15:
    v32 = sub_1BA6EB330(v30, v20);
    swift_release();
    if ((v32 & 1) != 0 && (sub_1BA6EBD20(v100, v21) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v33 = v97;
      if (v97 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BAADEEC0((uint64_t)&v112);
        v5 = v95;
        v46 = v95[2];
        v45 = v95[3];
        if (v46 >= v45 >> 1)
          v5 = sub_1BB38DCE0((_QWORD *)(v45 > 1), v46 + 1, 1, v95);
        v5[2] = v46 + 1;
        v47 = &v5[19 * v46];
        v48 = v113;
        *((_OWORD *)v47 + 2) = v112;
        *((_OWORD *)v47 + 3) = v48;
        v49 = v114;
        v50 = v115;
        v51 = v117;
        *((_OWORD *)v47 + 6) = v116;
        *((_OWORD *)v47 + 7) = v51;
        *((_OWORD *)v47 + 4) = v49;
        *((_OWORD *)v47 + 5) = v50;
        v52 = v118;
        v53 = v119;
        v54 = v120;
        v47[22] = v121;
        *((_OWORD *)v47 + 9) = v53;
        *((_OWORD *)v47 + 10) = v54;
        *((_OWORD *)v47 + 8) = v52;
      }
      else
      {
        sub_1BAADEEC0((uint64_t)&v112);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = v90;
        v36 = v90[2];
        v35 = v90[3];
        v5 = v95;
        if (v36 >= v35 >> 1)
          v34 = sub_1BB38DBC4((_QWORD *)(v35 > 1), v36 + 1, 1, v90);
        v106 = v116;
        v107 = v117;
        v104 = v114;
        v105 = v115;
        v111 = v121;
        v110 = v120;
        v108 = v118;
        v109 = v119;
        v102 = v112;
        v103 = v113;
        v34[2] = v36 + 1;
        v90 = v34;
        v37 = &v34[20 * v36];
        v38 = v103;
        *((_OWORD *)v37 + 2) = v102;
        *((_OWORD *)v37 + 3) = v38;
        v39 = v104;
        v40 = v105;
        v41 = v107;
        *((_OWORD *)v37 + 6) = v106;
        *((_OWORD *)v37 + 7) = v41;
        *((_OWORD *)v37 + 4) = v39;
        *((_OWORD *)v37 + 5) = v40;
        v42 = v108;
        v43 = v110;
        v44 = v111;
        *((_OWORD *)v37 + 9) = v109;
        *((_OWORD *)v37 + 10) = v43;
        *((_OWORD *)v37 + 8) = v42;
        v37[22] = v44;
        v37[23] = v33;
      }
LABEL_26:
      sub_1BAADED48((uint64_t)&v112);
LABEL_27:
      v6 = v96 + 1;
      if (v96 + 1 == v92)
      {
        swift_bridgeObjectRelease();
        goto LABEL_31;
      }
      if (v6 >= *(_QWORD *)(v93 + 16))
LABEL_45:
        __break(1u);
      goto LABEL_3;
    }
    ++v17;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 += 5;
    if (v98 == v17)
    {
      swift_bridgeObjectRelease();
      sub_1BAADED48((uint64_t)&v112);
      v5 = v95;
      goto LABEL_27;
    }
  }
  v99 = &v89;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v27 = (char *)&v89 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v27, v25);
  v28 = v24;
  v29 = v101;
  v30 = sub_1BA6EB5B4((uint64_t)v27, v28, v20, v100);
  swift_bridgeObjectRelease();
  if (!v29)
  {
    v101 = 0;
    goto LABEL_15;
  }
  swift_willThrow();

  __break(1u);
LABEL_47:

  result = MEMORY[0x1BCCE5C38](v27, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAADDD7C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = v0;
  swift_beginAccess();
  v2 = v0[2];
  v3 = v0[3];
  v4 = v0[5];
  v32 = v0[4];
  swift_beginAccess();
  v6 = v0[6];
  v5 = v0[7];
  v7 = v0[8];
  v30 = v6;
  v31 = v4;
  v29 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
    v8 = sub_1BAF49D98(v7);
  else
    v8 = 0;
  v9 = v1[9];
  v10 = v1[10];
  v11 = *((_BYTE *)v1 + 88);
  v12 = v1[13];
  v13 = v1[16];
  v14 = *((unsigned __int8 *)v1 + 176);
  v33 = v3;
  v27 = v1[12];
  v28 = v8;
  v25 = v1[15];
  v26 = v1[14];
  v23 = v1[18];
  v24 = v1[17];
  v21 = v1[20];
  v22 = v1[19];
  v20 = v1[21];
  v15 = v2;
  sub_1BA6E6C54(v9, v10, v11);
  if (v14 != 254)
  {
    sub_1BB525134();
    v13 = v34;
    v12 = v12;
  }
  v16 = *((_BYTE *)v1 + 177);
  swift_beginAccess();
  v17 = v1[23];
  v18 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v18 + 16) = v15;
  *(_QWORD *)(v18 + 24) = v33;
  *(_QWORD *)(v18 + 32) = v32;
  *(_QWORD *)(v18 + 40) = v31;
  swift_beginAccess();
  *(_QWORD *)(v18 + 48) = v30;
  *(_QWORD *)(v18 + 56) = v29;
  *(_QWORD *)(v18 + 64) = v28;
  *(_QWORD *)(v18 + 72) = v9;
  *(_QWORD *)(v18 + 80) = v10;
  *(_BYTE *)(v18 + 88) = v11;
  *(_QWORD *)(v18 + 96) = v27;
  *(_QWORD *)(v18 + 104) = v12;
  *(_QWORD *)(v18 + 112) = v26;
  *(_QWORD *)(v18 + 120) = v25;
  *(_QWORD *)(v18 + 128) = v13;
  *(_QWORD *)(v18 + 136) = v24;
  *(_QWORD *)(v18 + 144) = v23;
  *(_QWORD *)(v18 + 152) = v22;
  *(_QWORD *)(v18 + 160) = v21;
  *(_QWORD *)(v18 + 168) = v20;
  *(_BYTE *)(v18 + 176) = v14;
  *(_BYTE *)(v18 + 177) = v16;
  swift_beginAccess();
  *(_QWORD *)(v18 + 184) = v17;
  swift_bridgeObjectRetain();
  return v18;
}

uint64_t FormatIssueCoverNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_1BA6E8A78(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 168), *(_BYTE *)(v0 + 176));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatIssueCoverNodeStyle.__deallocating_deinit()
{
  FormatIssueCoverNodeStyle.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAADE05C(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed25FormatIssueCoverNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatIssueCoverNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.Selector.borders.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatIssueCoverNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatIssueCoverNodeStyle.Selector.shadow.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_QWORD *)(v1 + 96);
  v8 = *(_QWORD *)(v1 + 104);
  v9 = *(_QWORD *)(v1 + 112);
  v10 = *(_QWORD *)(v1 + 120);
  v11 = *(_QWORD *)(v1 + 128);
  v12 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = v10;
  *(_QWORD *)(a1 + 72) = v11;
  *(_BYTE *)(a1 + 80) = v12;
  return sub_1BA6E8A48(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t FormatIssueCoverNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 137);
}

uint64_t FormatIssueCoverNodeStyle.Selector.traits.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAADE104(_QWORD *a1)
{
  return FormatIssueCoverNodeStyle.Selector.encode(to:)(a1);
}

uint64_t _s8NewsFeed25FormatIssueCoverNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 v94;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v52 = *(_QWORD *)(a1 + 56);
  v53 = *(_QWORD *)(a1 + 64);
  v54 = *(_QWORD *)(a1 + 72);
  v55 = *(_QWORD *)(a1 + 80);
  v56 = *(_QWORD *)(a1 + 88);
  v57 = *(_QWORD *)(a1 + 96);
  v58 = *(_QWORD *)(a1 + 104);
  v59 = *(_QWORD *)(a1 + 112);
  v50 = *(_QWORD *)(a1 + 128);
  v51 = *(_QWORD *)(a1 + 120);
  v60 = *(unsigned __int8 *)(a1 + 136);
  v38 = *(unsigned __int8 *)(a1 + 137);
  v7 = *(_QWORD *)(a1 + 144);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v61 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v41 = *(_QWORD *)(a2 + 56);
  v42 = *(_QWORD *)(a2 + 64);
  v43 = *(_QWORD *)(a2 + 72);
  v44 = *(_QWORD *)(a2 + 80);
  v45 = *(_QWORD *)(a2 + 88);
  v46 = *(_QWORD *)(a2 + 96);
  v47 = *(_QWORD *)(a2 + 104);
  v48 = *(_QWORD *)(a2 + 112);
  v39 = *(_QWORD *)(a2 + 128);
  v40 = *(_QWORD *)(a2 + 120);
  v49 = *(unsigned __int8 *)(a2 + 136);
  v37 = *(unsigned __int8 *)(a2 + 137);
  v36 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = sub_1BB874398();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  if (v2)
  {
    if (!v9)
      return 0;
    v35 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14 = sub_1BA881EAC(v2, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return 0;
  }
  else
  {
    v35 = v7;
    if (v9)
      return 0;
  }
  if (v4)
  {
    if (!v8)
      return 0;
    swift_bridgeObjectRetain();
    v15 = swift_bridgeObjectRetain();
    v16 = sub_1BA882894(v15, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v16)
      return 0;
  }
  else if (v8)
  {
    return 0;
  }
  if (v6 > 0xFD)
  {
    v17 = v3;
    if (v11 > 0xFD)
      goto LABEL_21;
LABEL_19:
    sub_1BA6E6C54(v10, v61, v11);
    sub_1BA6E6CC4(v17, v5, v6);
    sub_1BA6E6CC4(v10, v61, v11);
    return 0;
  }
  v17 = v3;
  v73 = v3;
  v74 = v5;
  LOBYTE(v75) = v6;
  if (v11 > 0xFD)
  {
    sub_1BA6F2B04(v3, v5, v6);
    sub_1BA6F2B04(v3, v5, v6);
    sub_1BA6F2B88(v3, v5, v6);
    goto LABEL_19;
  }
  v62 = v10;
  v63 = v61;
  LOBYTE(v64) = v11;
  sub_1BA6E6C54(v3, v5, v6);
  sub_1BA6F2B04(v3, v5, v6);
  v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v73, (uint64_t)&v62);
  sub_1BA6F2B88(v73, v74, v75);
  sub_1BA6E6CC4(v3, v5, v6);
  if ((v18 & 1) == 0)
    return 0;
LABEL_21:
  v19 = v60;
  if (v60 != 254)
  {
    v28 = v52;
    v27 = v53;
    v73 = v52;
    v74 = v53;
    v26 = v54;
    v25 = v55;
    v75 = v54;
    v76 = v55;
    v24 = v56;
    v23 = v57;
    v77 = v56;
    v78 = v57;
    v22 = v58;
    v79 = v58;
    v80 = v59;
    v29 = v50;
    v30 = v51;
    v81 = v51;
    v82 = v50;
    v83 = v60;
    v20 = v49;
    if (v49 != 254)
    {
      v62 = v41;
      LODWORD(v63) = v42;
      v64 = v43;
      v65 = v44;
      v66 = v45;
      v67 = v46;
      v68 = v47;
      v69 = v48;
      v70 = v40;
      v71 = v39;
      v72 = v49;
      sub_1BA6E8A48(v52, v53, v54, v55, v56, v57, v58, v59, v51, v50, v60);
      swift_retain();
      v31 = _s8NewsFeed12FormatShadowV2eeoiySbAC_ACtFZ_0((uint64_t)&v73, (uint64_t)&v62);
      swift_release();
      sub_1BA6E8A78(v52, v53, v54, v55, v56, v57, v58, v59, v51, v50, v60);
      if ((v31 & 1) == 0)
        return 0;
      goto LABEL_30;
    }
    swift_retain();
    v21 = v59;
    v19 = v60;
LABEL_26:
    v73 = v28;
    v74 = v27;
    v75 = v26;
    v76 = v25;
    v77 = v24;
    v78 = v23;
    v79 = v22;
    v80 = v21;
    v81 = v30;
    v82 = v29;
    v83 = v19;
    v84 = v41;
    v85 = v42;
    v86 = v43;
    v87 = v44;
    v88 = v45;
    v89 = v46;
    v90 = v47;
    v91 = v48;
    v92 = v40;
    v93 = v39;
    v94 = v20;
    sub_1BA6E8A48(v41, v42, v43, v44, v45, v46, v47, v48, v40, v39, v20);
    sub_1BA9F10E8((uint64_t)&v73);
    return 0;
  }
  v20 = v49;
  v22 = v58;
  v21 = v59;
  v24 = v56;
  v23 = v57;
  v26 = v54;
  v25 = v55;
  v28 = v52;
  v27 = v53;
  v29 = v50;
  v30 = v51;
  if (v49 != 254)
    goto LABEL_26;
LABEL_30:
  if (v38 == 2)
  {
    v32 = v35;
    if (v37 != 2)
      return 0;
    goto LABEL_35;
  }
  result = 0;
  if (v37 != 2)
  {
    v32 = v35;
    if (((((v38 & 1) == 0) ^ v37) & 1) != 0)
    {
LABEL_35:
      if (v32)
      {
        if (v36)
        {
          swift_bridgeObjectRetain();
          v33 = swift_bridgeObjectRetain();
          v34 = sub_1BA883494(v33, v36);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v34 & 1) != 0)
            return 1;
        }
      }
      else if (!v36)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t sub_1BAADE608(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAADE6EC(&qword_1EF2AFD60, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAADE63C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAADE6EC(qword_1ED3A76E8, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  result = sub_1BAADE6EC(&qword_1ED3A76E0, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BAADE688(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAADE6EC(qword_1ED3A76E8, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  a1[2] = sub_1BAADE6EC(&qword_1ED3A76E0, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  result = sub_1BAADE6EC(&qword_1EF2AFD68, (uint64_t)&protocol conformance descriptor for FormatIssueCoverNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAADE6EC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatIssueCoverNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAADE728(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAADE74C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAADE74C()
{
  unint64_t result;

  result = qword_1EF2AFD70;
  if (!qword_1EF2AFD70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverNodeStyle.Selector, &type metadata for FormatIssueCoverNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFD70);
  }
  return result;
}

unint64_t sub_1BAADE790(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA825F94();
  result = sub_1BA825FD8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAADE7BC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA825F94();
  a1[2] = sub_1BA825FD8();
  result = sub_1BAADE7F0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAADE7F0()
{
  unint64_t result;

  result = qword_1EF2AFD78;
  if (!qword_1EF2AFD78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueCoverNodeStyle.Selector, &type metadata for FormatIssueCoverNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFD78);
  }
  return result;
}

uint64_t sub_1BAADE834@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAADE880@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAADE8CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 184);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatIssueCoverNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatIssueCoverNodeStyle.__allocating_init(identifier:class:selectors:alpha:borders:cornerRadius:shadow:ignoresSmartInvertColors:traits:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t assignWithCopy for FormatIssueCoverNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  _OWORD *v17;
  int v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v11 = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a2 + 40);
      sub_1BA6F2B04(v11, v12, *(_BYTE *)(a2 + 48));
      v13 = *(_QWORD *)(a1 + 32);
      v14 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      v15 = *(_BYTE *)(a1 + 48);
      *(_BYTE *)(a1 + 48) = v6;
      sub_1BA6F2B88(v13, v14, v15);
    }
    else
    {
      sub_1BA9F0244(a1 + 32);
      v8 = *(_BYTE *)(a2 + 48);
      *v4 = *v5;
      *(_BYTE *)(a1 + 48) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v9, v10, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v6;
  }
  else
  {
    v7 = *v5;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *v4 = v7;
  }
  v16 = (_OWORD *)(a1 + 56);
  v17 = (_OWORD *)(a2 + 56);
  v18 = *(unsigned __int8 *)(a2 + 136);
  if (*(unsigned __int8 *)(a1 + 136) == 254)
  {
    if (v18 == 254)
    {
      v19 = *(_OWORD *)(a2 + 72);
      *v16 = *v17;
      *(_OWORD *)(a1 + 72) = v19;
      v20 = *(_OWORD *)(a2 + 88);
      v21 = *(_OWORD *)(a2 + 104);
      v22 = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_OWORD *)(a1 + 104) = v21;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 88) = v20;
    }
    else
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v27 = *(_OWORD *)(a2 + 96);
      v28 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v27;
      *(_OWORD *)(a1 + 112) = v28;
      swift_retain();
    }
  }
  else if (v18 == 254)
  {
    sub_1BA9F0278(a1 + 56);
    v23 = *(_OWORD *)(a2 + 72);
    *v16 = *v17;
    *(_OWORD *)(a1 + 72) = v23;
    v25 = *(_OWORD *)(a2 + 104);
    v24 = *(_OWORD *)(a2 + 120);
    v26 = *(_OWORD *)(a2 + 88);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_OWORD *)(a1 + 104) = v25;
    *(_OWORD *)(a1 + 120) = v24;
    *(_OWORD *)(a1 + 88) = v26;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_retain();
    swift_release();
    v29 = *(_OWORD *)(a2 + 96);
    v30 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v29;
    *(_OWORD *)(a1 + 112) = v30;
  }
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatIssueCoverNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a1 + 48);
  if (v6 > 0xFD)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(a2 + 48);
  if (v7 > 0xFD)
  {
    sub_1BA9F0244(a1 + 32);
LABEL_4:
    *(_OWORD *)(a1 + 32) = *v5;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v5;
  *(_BYTE *)(a1 + 48) = v7;
  sub_1BA6F2B88(v8, v9, v6);
LABEL_6:
  if (*(unsigned __int8 *)(a1 + 136) != 254)
  {
    if (*(unsigned __int8 *)(a2 + 136) != 254)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_DWORD *)(a1 + 64) = *(_DWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_release();
      v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      goto LABEL_11;
    }
    sub_1BA9F0278(a1 + 56);
  }
  v10 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v10;
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v11;
LABEL_11:
  *(_BYTE *)(a1 + 137) = *(_BYTE *)(a2 + 137);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatIssueCoverNodeStyle.Selector()
{
  return &type metadata for FormatIssueCoverNodeStyle.Selector;
}

void sub_1BAADECE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2AFD80)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2AFD80);
  }
}

uint64_t sub_1BAADED48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_BYTE *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v2, v3, v8);
  sub_1BA6E8A78(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1BAADEE24(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1EF2AFD88)
  {
    v2 = sub_1BAADEE7C();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatIssueCoverNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1EF2AFD88);
  }
}

unint64_t sub_1BAADEE7C()
{
  unint64_t result;

  result = qword_1EF2C23B0;
  if (!qword_1EF2C23B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89CB94, &type metadata for FormatIssueCoverNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2C23B0);
  }
  return result;
}

uint64_t sub_1BAADEEC0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 v7;
  char v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 64);
  v16 = *(_QWORD *)(a1 + 56);
  v4 = *(_QWORD *)(a1 + 88);
  v13 = *(_QWORD *)(a1 + 80);
  v14 = *(_QWORD *)(a1 + 72);
  v11 = *(_QWORD *)(a1 + 104);
  v12 = *(_QWORD *)(a1 + 96);
  v5 = *(_QWORD *)(a1 + 120);
  v6 = *(_QWORD *)(a1 + 128);
  v7 = *(_BYTE *)(a1 + 136);
  v10 = *(_QWORD *)(a1 + 112);
  v8 = *(_BYTE *)(a1 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v2, v3, v8);
  sub_1BA6E8A48(v16, v15, v14, v13, v4, v12, v11, v10, v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAADEF9C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int128 v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 v28;
  char v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;

  v4 = a2[7];
  v55 = a2[6];
  v56 = v4;
  v57 = a2[8];
  v58 = *((_QWORD *)a2 + 18);
  v5 = a2[3];
  v51 = a2[2];
  v52 = v5;
  v6 = a2[5];
  v53 = a2[4];
  v54 = v6;
  v7 = a2[1];
  v49 = *a2;
  v50 = v7;
  swift_beginAccess();
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = v8;
  *(_QWORD *)(v2 + 24) = v9;
  v10 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v2 + 40) = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(a1 + 48);
  swift_beginAccess();
  *(_QWORD *)(v2 + 48) = v11;
  v12 = v50;
  if (!(_QWORD)v50)
    v12 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 56) = v12;
  v13 = *((_QWORD *)&v50 + 1);
  if (!*((_QWORD *)&v50 + 1))
    v13 = swift_bridgeObjectRetain();
  *(_QWORD *)(v2 + 64) = v13;
  v14 = *((_QWORD *)&v51 + 1);
  v16 = v51;
  v47 = v16 >> 64;
  v15 = v16;
  v48 = v51;
  v17 = v52;
  v46 = v52;
  if (v52 >= 0xFEu)
  {
    v15 = *(_QWORD *)(a1 + 72);
    v14 = *(_QWORD *)(a1 + 80);
    v17 = *(_BYTE *)(a1 + 88);
    sub_1BA6E6C54(v15, v14, v17);
  }
  *(_QWORD *)(v2 + 72) = v15;
  *(_QWORD *)(v2 + 80) = v14;
  v19 = *((_QWORD *)&v53 + 1);
  v18 = v53;
  v20 = *((_QWORD *)&v54 + 1);
  v21 = v54;
  v23 = *((_QWORD *)&v55 + 1);
  v22 = v55;
  v24 = v56;
  v44 = v53;
  v45 = *((_QWORD *)&v52 + 1);
  v25 = *((_QWORD *)&v52 + 1);
  v42 = v54;
  v43 = *((_QWORD *)&v53 + 1);
  v40 = v55;
  v41 = *((_QWORD *)&v54 + 1);
  v38 = v56;
  v39 = *((_QWORD *)&v55 + 1);
  v27 = *((_QWORD *)&v56 + 1);
  v26 = v57;
  v36 = v57;
  v37 = *((_QWORD *)&v56 + 1);
  *(_BYTE *)(v2 + 88) = v17;
  v28 = BYTE8(v57);
  v35 = BYTE8(v57);
  if (BYTE8(v57) == 254)
  {
    v33 = *(_QWORD *)(a1 + 104);
    v34 = *(_QWORD *)(a1 + 96);
    v21 = *(_QWORD *)(a1 + 120);
    v32 = *(_QWORD *)(a1 + 112);
    v20 = *(_QWORD *)(a1 + 128);
    v22 = *(_QWORD *)(a1 + 136);
    v23 = *(_QWORD *)(a1 + 144);
    v24 = *(_QWORD *)(a1 + 152);
    v27 = *(_QWORD *)(a1 + 160);
    v26 = *(_QWORD *)(a1 + 168);
    v28 = *(_BYTE *)(a1 + 176);
    sub_1BA6E8A48(v34, v33, v32, v21, v20, v22, v23, v24, v27, v26, v28);
    v19 = v32;
    v18 = v33;
    v25 = v34;
  }
  *(_QWORD *)(v2 + 96) = v25;
  *(_QWORD *)(v2 + 104) = v18;
  *(_QWORD *)(v2 + 112) = v19;
  *(_QWORD *)(v2 + 120) = v21;
  *(_QWORD *)(v2 + 128) = v20;
  *(_QWORD *)(v2 + 136) = v22;
  *(_QWORD *)(v2 + 144) = v23;
  *(_QWORD *)(v2 + 152) = v24;
  *(_QWORD *)(v2 + 160) = v27;
  *(_QWORD *)(v2 + 168) = v26;
  *(_BYTE *)(v2 + 176) = v28;
  v29 = BYTE9(v57);
  if (BYTE9(v57) == 2)
    v29 = *(_BYTE *)(a1 + 177);
  *(_BYTE *)(v2 + 177) = v29;
  v30 = v58;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v48, v47, v46);
  sub_1BA6E8A48(v45, v44, v43, v42, v41, v40, v39, v38, v37, v36, v35);
  swift_bridgeObjectRetain();
  sub_1BAADED48((uint64_t)&v49);
  if (!v30)
  {
    swift_beginAccess();
    v30 = *(_QWORD *)(a1 + 184);
    swift_bridgeObjectRetain();
  }
  swift_beginAccess();
  *(_QWORD *)(v2 + 184) = v30;
  return v2;
}

_QWORD *sub_1BAADF254(double *a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v15;
  char *v16;
  void (*v17)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v42;
  unsigned __int8 v44;
  uint64_t v45;
  uint64_t inited;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 v56;
  _OWORD v57[2];
  uint64_t v58;
  _OWORD v59[2];
  uint64_t v60;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  sub_1BA8C88C8(0);
  v5 = *(_QWORD *)(v4 - 8);
  v47 = *(_QWORD *)(v5 + 72);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  if (a2)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    v49 = sub_1BAADDD7C();
    v50 = 0u;
    v51 = 0u;
    v52 = 0;
    v53 = xmmword_1BB89CA60;
    v11 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v49, v11 + 16);
    v12 = sub_1BA9F10D0;
  }
  else
  {
    v11 = 0;
    v9 = 0;
    v10 = 0xE000000000000000;
    v12 = sub_1BB739F50;
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (uint64_t (**)())((char *)v8 + *(int *)(v13 + 24));
  *v14 = v12;
  v14[1] = (uint64_t (*)())v11;
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *(_QWORD *)(v7 + v6) = v9;
  v8[2] = 0;
  v8[3] = 0;
  v8[1] = v10;
  v16 = (char *)v8 + *(int *)(v13 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  v17 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v17(v8, 0, 1, v13);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v57);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(v18 + 48) = v58;
  v19 = v57[1];
  *(_OWORD *)(v18 + 16) = v57[0];
  *(_OWORD *)(v18 + 32) = v19;
  v20 = v47;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87D7A0;
  v22 = v21 + v6;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6F65646956, 0xE500000000000000, (_QWORD *)(v21 + v6));
  v17((_QWORD *)(v21 + v6), 0, 1, v13);
  if (a2)
  {
    v23 = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v23, (_QWORD *)(v22 + v47));
    v20 = v47;
    v17((_QWORD *)(v22 + v47), 0, 1, v13);
    v24 = *(_BYTE *)(a2 + 177);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v22 + v47));
    v17((_QWORD *)(v22 + v47), 0, 1, v13);
    v24 = 2;
  }
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v24, (_QWORD *)(v22 + 2 * v20));
  v17((_QWORD *)(v22 + 2 * v20), 0, 1, v13);
  if (a2)
  {
    swift_beginAccess();
    v25 = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
  }
  else
  {
    v25 = 0;
  }
  v26 = (_QWORD *)(v22 + 3 * v20);
  sub_1BAAFB07C(0x737469617254, 0xE600000000000000, v25, v26);
  v17(v26, 0, 1, v13);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v21, v59);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v27 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v27;
  *(_QWORD *)(v27 + 48) = v60;
  v28 = v59[1];
  *(_OWORD *)(v27 + 16) = v59[0];
  *(_OWORD *)(v27 + 32) = v28;
  if (a2)
  {
    v29 = *(_QWORD *)(a2 + 72);
    v30 = *(_QWORD *)(a2 + 80);
    v31 = *(_BYTE *)(a2 + 88);
    sub_1BA6E6C54(v29, v30, v31);
  }
  else
  {
    v29 = 0;
    v30 = 0;
    v31 = -2;
  }
  v49 = v29;
  *(_QWORD *)&v50 = v30;
  BYTE8(v50) = v31;
  v32 = sub_1BB4D88A0(a1, (uint64_t)&v49);
  sub_1BA6E6CC4(v29, v30, v31);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v32;
  if (a2)
  {
    v44 = *(_BYTE *)(a2 + 176);
    v45 = *(_QWORD *)(a2 + 168);
    v48 = *(_QWORD *)(a2 + 160);
    v33 = *(_QWORD *)(a2 + 96);
    v34 = *(_QWORD *)(a2 + 104);
    v35 = *(_QWORD *)(a2 + 112);
    v36 = *(_QWORD *)(a2 + 120);
    v37 = *(_QWORD *)(a2 + 128);
    v38 = *(_QWORD *)(a2 + 136);
    v39 = *(_QWORD *)(a2 + 144);
    a2 = *(_QWORD *)(a2 + 152);
    sub_1BA6E8A48(v33, v34, v35, v36, v37, v38, v39, a2, v48, v45, v44);
  }
  else
  {
    v33 = 0;
    v34 = 0;
    v35 = 0;
    v36 = 0;
    v37 = 0;
    v38 = 0;
    v39 = 0;
    v48 = 0;
    v45 = 0;
    v44 = -2;
  }
  v49 = v33;
  *(_QWORD *)&v50 = v34;
  *((_QWORD *)&v50 + 1) = v35;
  *(_QWORD *)&v51 = v36;
  *((_QWORD *)&v51 + 1) = v37;
  v52 = v38;
  *(_QWORD *)&v53 = v39;
  *((_QWORD *)&v53 + 1) = a2;
  v54 = v48;
  v55 = v45;
  v56 = v44;
  v42 = sub_1BB05E83C((uint64_t)&v49);
  sub_1BA6E8A78(v33, v34, v35, v36, v37, v38, v39, a2, v48, v45, v44);
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 184) = &off_1E7335C38;
  *(_QWORD *)(inited + 152) = v42;
  v40 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v40;
}

uint64_t sub_1BAADF898()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAADF8CC()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

uint64_t IssueCover.identifier.getter()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;

  v1 = *(void **)v0;
  v2 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 56))
  {
    if (*(_BYTE *)(v0 + 56) == 1)
    {
      v3 = v1;
      swift_bridgeObjectRetain();
      v4 = objc_msgSend(v3, sel_identifier);
      v5 = sub_1BB8729A0();
      swift_bridgeObjectRelease();

    }
    else
    {
      return 1701736302;
    }
  }
  else
  {
    v7 = *(_QWORD *)(v0 + 40);
    v6 = *(void **)(v0 + 48);
    v8 = *(void **)(v0 + 32);
    v11 = v0 + 8;
    v9 = *(_QWORD *)(v0 + 8);
    v10 = *(void **)(v11 + 8);
    v12 = v1;
    v13 = v10;
    v14 = objc_msgSend(v12, sel_identifier);
    v5 = sub_1BB8729A0();

    sub_1BA899748(v1, v9, v10, v2, v8, v7, v6, 0);
  }
  return v5;
}

id IssueCover.ImageModel.assetHandle.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

uint64_t IssueCover.ImageModel.init(issue:aspectRatio:assetHandle:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  *(_QWORD *)a3 = result;
  *(double *)(a3 + 8) = a4;
  *(_QWORD *)(a3 + 16) = a2;
  return result;
}

uint64_t IssueCover.LayeredModel.init(issue:aspectRatio:json:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(_QWORD *)a4 = result;
  *(double *)(a4 + 8) = a5;
  *(_QWORD *)(a4 + 16) = a2;
  *(_QWORD *)(a4 + 24) = a3;
  return result;
}

uint64_t IssueCover.Kind.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4D6465726579616CLL;
  if (*v0 != 1)
    v1 = 1701736302;
  if (*v0)
    return v1;
  else
    return 0x6567616D69;
}

uint64_t IssueCover.Kind.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4D6465726579616CLL;
  if (*v0 != 1)
    v1 = 1701736302;
  if (*v0)
    return v1;
  else
    return 0x6567616D69;
}

NewsFeed::IssueCover::Kind_optional __swiftcall IssueCover.Kind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::IssueCover::Kind_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1BAADFB48(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB803D24(*a1, *a2);
}

uint64_t sub_1BAADFB54()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAADFBF0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAADFC68()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::IssueCover::Kind_optional sub_1BAADFD00(Swift::String *a1)
{
  return IssueCover.Kind.init(rawValue:)(*a1);
}

void sub_1BAADFD0C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xEC00000061696465;
  v5 = 0x4D6465726579616CLL;
  if (v2 != 1)
  {
    v5 = 1701736302;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6567616D69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAADFD68()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x4D6465726579616CLL;
  if (*v0 != 1)
    v1 = 1701736302;
  if (*v0)
    return v1;
  else
    return 0x6567616D69;
}

double IssueCover.aspectRatio.getter()
{
  uint64_t v0;
  double result;

  result = 0.75;
  if (*(_BYTE *)(v0 + 56) == 1)
    result = *(double *)(v0 + 8);
  if (!*(_BYTE *)(v0 + 56))
    return *(double *)(v0 + 8);
  return result;
}

void IssueCover.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

void IssueCover.imageModel.getter(uint64_t a1@<X8>)
{
  __int128 *v1;
  void *v2;
  __int128 v3;
  id v4;
  id v5;
  id v6;

  if (!*((_BYTE *)v1 + 56))
  {
    v2 = (void *)*((_QWORD *)v1 + 2);
    v6 = v2;
    v3 = *v1;
    goto LABEL_5;
  }
  if (*((_BYTE *)v1 + 56) == 1)
  {
    v2 = (void *)*((_QWORD *)v1 + 6);
    v6 = v2;
    v3 = v1[2];
LABEL_5:
    *(_OWORD *)a1 = v3;
    *(_QWORD *)(a1 + 16) = v2;
    v4 = (id)v3;
    v5 = v6;
    return;
  }
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
}

unint64_t sub_1BAADFE64()
{
  unint64_t result;

  result = qword_1EF2AFD90;
  if (!qword_1EF2AFD90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCover.Kind, &type metadata for IssueCover.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2AFD90);
  }
  return result;
}

void destroy for IssueCover(uint64_t a1)
{
  sub_1BA899748(*(void **)a1, *(_QWORD *)(a1 + 8), *(void **)(a1 + 16), *(_QWORD *)(a1 + 24), *(void **)(a1 + 32), *(_QWORD *)(a1 + 40), *(void **)(a1 + 48), *(_BYTE *)(a1 + 56));
}

uint64_t initializeWithCopy for IssueCover(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1BA8996DC(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t assignWithCopy for IssueCover(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  void *v9;
  char v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  char v18;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(void **)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(void **)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(void **)(a2 + 48);
  v10 = *(_BYTE *)(a2 + 56);
  sub_1BA8996DC(*(id *)a2, v4, v5, v6, v7, v8, v9, v10);
  v11 = *(void **)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(void **)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(void **)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(void **)(a1 + 48);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  v18 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v10;
  sub_1BA899748(v11, v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t assignWithTake for IssueCover(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  __int128 v12;
  char v13;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(void **)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(void **)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(void **)(a1 + 48);
  v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  v13 = *(_BYTE *)(a1 + 56);
  *(_BYTE *)(a1 + 56) = v4;
  sub_1BA899748(v5, v7, v6, v8, v9, v10, v11, v13);
  return a1;
}

uint64_t sub_1BAAE0050(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 56) <= 1u)
    return *(unsigned __int8 *)(a1 + 56);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BAAE0068(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 56) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IssueCover()
{
  return &type metadata for IssueCover;
}

_QWORD *initializeBufferWithCopyOfBuffer for IssueCover.ImageModel(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;
  id v7;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  v6 = v3;
  v7 = v5;
  return a1;
}

void destroy for IssueCover.ImageModel(id *a1)
{

}

uint64_t assignWithCopy for IssueCover.ImageModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v7 = *(void **)(a2 + 16);
  v8 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v7;
  v9 = v7;

  return a1;
}

uint64_t assignWithTake for IssueCover.ImageModel(uint64_t a1, _QWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for IssueCover.ImageModel()
{
  return &type metadata for IssueCover.ImageModel;
}

uint64_t destroy for IssueCover.LayeredModel(id *a1)
{

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IssueCover.LayeredModel(uint64_t a1, uint64_t a2)
{
  void *v3;
  id v4;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IssueCover.LayeredModel(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for IssueCover.LayeredModel(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  *(_QWORD *)(a1 + 8) = a2[1];
  v5 = a2[3];
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IssueCover.LayeredModel()
{
  return &type metadata for IssueCover.LayeredModel;
}

uint64_t storeEnumTagSinglePayload for IssueCover.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAAE0334 + 4 * byte_1BB89CD31[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAAE0368 + 4 * asc_1BB89CD2C[v4]))();
}

uint64_t sub_1BAAE0368(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAE0370(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAE0378);
  return result;
}

uint64_t sub_1BAAE0384(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAE038CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAAE0390(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAE0398(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IssueCover.Kind()
{
  return &type metadata for IssueCover.Kind;
}

uint64_t FormatBackgroundFeedPluginFactory.create(identifier:background:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  id v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  unint64_t v14;
  uint64_t v15;
  _BYTE v17[40];
  id v18;
  unint64_t v19;
  void *v20;
  __int128 v21;

  v7 = *(void **)(a4 + 8);
  v8 = *(void **)(a4 + 16);
  v18 = *(id *)a4;
  v6 = v18;
  v19 = (unint64_t)v7;
  v20 = v8;
  v21 = *(_OWORD *)(a4 + 24);
  sub_1BA4C010C(v4 + 16, (uint64_t)v17);
  v9 = objc_allocWithZone((Class)type metadata accessor for FormatBackgroundViewController());
  swift_retain();
  v10 = v6;
  v11 = v7;
  v12 = v8;
  swift_unknownObjectRetain();
  v13 = sub_1BB80AA3C(a3, (uint64_t)&v18, (uint64_t)v17);
  swift_release();
  v14 = sub_1BAAE0518();
  v18 = v13;
  v19 = v14;
  sub_1BB871428();
  swift_allocObject();
  swift_bridgeObjectRetain();
  v15 = sub_1BB8713D4();

  return v15;
}

uint64_t FormatBackgroundFeedPluginFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t FormatBackgroundFeedPluginFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAAE04F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return FormatBackgroundFeedPluginFactory.create(identifier:background:options:)(a1, a2, a3, a4);
}

unint64_t sub_1BAAE0518()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AFD98;
  if (!qword_1EF2AFD98)
  {
    v1 = type metadata accessor for FormatBackgroundViewController();
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBackgroundViewController, v1);
    atomic_store(result, &qword_1EF2AFD98);
  }
  return result;
}

uint64_t dispatch thunk of FormatBackgroundPluginFactoryType.create(identifier:background:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t type metadata accessor for FormatBackgroundFeedPluginFactory()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatBackgroundFeedPluginFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t FeedServiceType.fetchAll(from:until:)(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v12 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v9 = sub_1BB872E68();
  v10 = sub_1BAAEBB34((uint64_t)&v12, v9, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t FeedService.state.getter()
{
  sub_1BA819FBC();
  return swift_retain();
}

uint64_t FeedService.__allocating_init(feed:cursorFactory:personalizationService:offlineProvider:)(uint64_t a1, uint64_t a2, __int128 *a3, __int128 *a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  FeedService.init(feed:cursorFactory:personalizationService:offlineProvider:)(a1, a2, a3, a4);
  return v8;
}

uint64_t FeedService.__allocating_init(feed:cursorFactory:personalizationService:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  FeedService.init(feed:cursorFactory:personalizationService:)(a1, a2, a3);
  return v6;
}

uint64_t sub_1BAAE0798()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 24) = *(_QWORD *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE07B0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE07BC(uint64_t *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  v2[5] = v1;
  v3 = *a1;
  v2[6] = *v1;
  v2[7] = v3;
  return swift_task_switch();
}

uint64_t sub_1BAAE07E0()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE0814()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release_n();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FeedService.fetchReplaceGroup(from:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v16;

  v4 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v8 = type metadata accessor for FeedReplaceLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - v10;
  type metadata accessor for FeedServiceFetchResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  sub_1BB86EAAC();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v13 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = (char *)swift_allocObject();
  *((_QWORD *)v14 + 2) = v4;
  *((_QWORD *)v14 + 3) = v3;
  *((_QWORD *)v14 + 4) = v1;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v14[v13], v11, v8);
  swift_retain();
  return sub_1BB86E95C();
}

uint64_t sub_1BAAE09B4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v6;

  *(_QWORD *)(v3 + 16) = a1;
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v6;
  *v6 = v3;
  v6[1] = sub_1BAAE0A24;
  v6[4] = a3;
  v6[5] = a2;
  v6[6] = *a2;
  return swift_task_switch();
}

uint64_t sub_1BAAE0A24(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (v1)
    return (*(uint64_t (**)(void))(v5 + 8))();
  *(_QWORD *)(v4 + 32) = a1;
  return swift_task_switch();
}

uint64_t sub_1BAAE0AA0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE0AB8(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;

  v2[4] = a1;
  v2[5] = v1;
  v2[6] = *v1;
  return swift_task_switch();
}

uint64_t sub_1BAAE0AD8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  _QWORD *v5;

  v1 = v0[6];
  v2 = v0[4];
  v0[7] = *(_QWORD *)(v0[5] + 104);
  v3 = *(_QWORD *)(v1 + 88);
  v0[8] = v3;
  v4 = *(uint64_t (**)(uint64_t))(v3 + 48);
  v0[9] = *(_QWORD *)(v1 + 80);
  v0[10] = v4(v2);
  v5 = (_QWORD *)swift_task_alloc();
  v0[11] = v5;
  *v5 = v0;
  v5[1] = sub_1BAAE0B5C;
  return sub_1BB86E908();
}

uint64_t sub_1BAAE0B5C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 96) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BAAE0BC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = *(_QWORD *)(v0 + 64);
  v1 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 16);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v5;
  v7 = v6 | 0x2000000000000000;
  v16 = v6 | 0x2000000000000000;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = type metadata accessor for FeedReplaceLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  static FeedLocation.container(_:)(*(_QWORD *)(v4 + *(int *)(v11 + 36)), &v17);
  v18 = v17;
  sub_1BA546D3C(v7);
  v13 = v12;
  v14 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v2 + 32);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  v14(&v18, v13, v1, v2);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v16);
}

uint64_t sub_1BAAE0D2C()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE0D60(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 584) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 592) = a1;
  return swift_task_switch();
}

uint64_t sub_1BAAE0DE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 592);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1BAAE0F08(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 624) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (!v1)
    *(_QWORD *)(v4 + 632) = a1;
  return swift_task_switch();
}

uint64_t sub_1BAAE0F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 632);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1BAAE10B0(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 680) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 688) = a1;
  return swift_task_switch();
}

uint64_t sub_1BAAE1124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 688);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1BAAE123C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 720) = v1;
  swift_task_dealloc();
  swift_release();
  if (!v1)
    *(_QWORD *)(v4 + 728) = a1;
  return swift_task_switch();
}

uint64_t sub_1BAAE12C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  v5 = *(_QWORD *)(v0 + 728);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_1BAAE13E4()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE14D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE15EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE170C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE182C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE194C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 520);
  v2 = *(_QWORD *)(v0 + 496);
  v3 = *(_QWORD *)(v0 + 504);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE1A60(uint64_t a1, _QWORD *a2, double a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 176) = v3;
  *(double *)(v4 + 168) = a3;
  *(_QWORD *)(v4 + 152) = a1;
  *(_QWORD *)(v4 + 160) = a2;
  *(_QWORD *)(v4 + 184) = *a2;
  return swift_task_switch();
}

uint64_t sub_1BAAE1A88()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 208) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE1AEC()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE1B20()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BAAE1B68()
{
  uint64_t v0;

  swift_release();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE1B9C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE1BD8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 328) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

void sub_1BAAE1C44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(_QWORD *, uint64_t, uint64_t, uint64_t);
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  _QWORD v26[11];
  _QWORD v27[3];
  uint64_t v28[3];
  uint64_t v29;
  __int16 v30;

  v1 = v0[36];
  v2 = v0[37];
  v3 = v0[26];
  v20 = v0[27];
  v21 = v0[25];
  v4 = v0[23];
  v6 = v0[21];
  v5 = v0[22];
  v7 = v0[19];
  v8 = v0[20];
  v22 = v0[24];
  v24 = v0[11];
  v0[42] = v24;
  v26[0] = v1;
  v9 = *(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v6 + 32);
  swift_retain();
  v9(v26, v2, v5, v6);
  swift_release();
  v10 = (uint64_t *)swift_retain();
  v11 = sub_1BAB6CA7C(v10);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 1, 1, v4);
  v25 = 7;
  v12 = sub_1BB86C8B0();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v8, 1, 1, v12);
  v13(v7, 1, 1, v12);
  v0[15] = *(_QWORD *)(v24 + qword_1ED4767D0);
  v14 = (_QWORD *)swift_task_alloc();
  v14[2] = v5;
  v14[3] = v6;
  v14[4] = v11;
  type metadata accessor for FeedCursorGroup(255, v4, v20, v15);
  v23 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v23);
  v16 = sub_1BB872BF8();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  memset(v26, 0, 80);
  swift_bridgeObjectRetain();
  v17 = swift_bridgeObjectRetain();
  v18 = sub_1BAAEC790(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  FeedJournal.init(entries:)((uint64_t)v18, v27);
  v28[0] = v27[0];
  v28[1] = v27[1];
  v28[2] = v27[2];
  v29 = 0;
  v30 = 256;
  v19 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v3, 0, &v25, v8, v7, 0, 0, 0, 0, v16, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v26,
          v28,
          (uint64_t)&v29,
          0,
          0,
          0);
  v0[43] = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v7);
  sub_1BA76D750(v8);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v3, v22);
  v0[12] = *(uint64_t *)((char *)v19 + qword_1ED4767D0);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v23);
  LOBYTE(v3) = sub_1BB873168();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  if ((v3 & 1) != 0)
  {
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87A390;
    __asm { BR              X10 }
  }
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87FC80;
  __asm { BR              X10 }
}

uint64_t sub_1BAAE205C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int8x16_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int8x16_t v20;
  uint64_t v21;

  v5 = *(_QWORD *)(v0 + 224);
  v6 = MEMORY[0x1E0DEA968];
  v4[7] = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  v4[8] = v7;
  v4[4] = 1852138867;
  v4[5] = 0xE400000000000000;
  v9 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v4[12] = v6;
  v4[13] = v7;
  v4[9] = v9;
  v4[10] = v8;
  v10 = *(_QWORD *)(v1 + v2);
  swift_bridgeObjectRetain();
  v20 = *(int8x16_t *)(v0 + 168);
  v11 = MEMORY[0x1BCCE37B4](v10);
  v12 = MEMORY[0x1E0DEB490];
  v4[17] = MEMORY[0x1E0DEB418];
  v4[18] = v12;
  v4[14] = v11;
  v13 = sub_1BB87330C();
  sub_1BB86EF44("Service converted end of feed to next groups for chained %{public}@ cursor %{public}@ with emitted %ld groups", 109, 2, &dword_1BA493000);
  swift_bridgeObjectRelease();
  v14 = swift_allocObject();
  *(_QWORD *)(v0 + 104) = *(_QWORD *)(v1 + v2);
  v15 = (int8x16_t *)swift_task_alloc();
  v15[1] = vextq_s8(v20, v20, 8uLL);
  swift_bridgeObjectRetain();
  v17 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAECC88, (uint64_t)v15, v21, v5, MEMORY[0x1E0DEDCE8], v3, MEMORY[0x1E0DEDD18], v16);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  *(_QWORD *)(v14 + 16) = v17;
  *(_QWORD *)(v14 + 24) = ((uint64_t (*)(uint64_t))FeedCursorContainer.init(cursor:))(v1);
  swift_retain();
  v18 = sub_1BA62F504(v14 | 0x2000000000000000);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
}

uint64_t sub_1BAAE206C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(v1 + 288);
  v6 = *(_QWORD *)(v1 + 224);
  v7 = MEMORY[0x1E0DEA968];
  v0[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v0[8] = v8;
  v0[4] = 0x6E657A6F7266;
  v0[5] = v3;
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v0[12] = v7;
  v0[13] = v8;
  v0[9] = v10;
  v0[10] = v9;
  v11 = swift_bridgeObjectRetain(v9);
  v12 = sub_1BB87330C(v11);
  sub_1BB86EF44("Service converted end of feed to process the next chained %{public}@ cursor %{public}@", 86, 2, &dword_1BA493000, v4, v12, v0);
  swift_bridgeObjectRelease(v0);
  *(_QWORD *)(v1 + 112) = v5;
  v13 = sub_1BB872E68(0, v6);
  *(_QWORD *)(v1 + 352) = v13;
  v14 = (_QWORD *)swift_task_alloc(dword_1EF2AFE04);
  *(_QWORD *)(v1 + 360) = v14;
  *v14 = v1;
  v14[1] = sub_1BAAE2404;
  return sub_1BA670B84(v1 + 112, v2, v13, *(double *)(v1 + 136));
}

uint64_t sub_1BAAE207C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *(_QWORD *)(v1 + 288);
  v5 = *(_QWORD *)(v1 + 224);
  v6 = MEMORY[0x1E0DEA968];
  v0[7] = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  v0[8] = v7;
  v0[4] = 0x656546664F646E65;
  v0[5] = 0xE900000000000064;
  v9 = *(_QWORD *)(v2 + 16);
  v8 = *(_QWORD *)(v2 + 24);
  v0[12] = v6;
  v0[13] = v7;
  v0[9] = v9;
  v0[10] = v8;
  v10 = swift_bridgeObjectRetain(v8);
  v11 = sub_1BB87330C(v10);
  sub_1BB86EF44("Service converted end of feed to process the next chained %{public}@ cursor %{public}@", 86, 2, &dword_1BA493000, v3, v11, v0);
  swift_bridgeObjectRelease(v0);
  *(_QWORD *)(v1 + 112) = v4;
  v12 = sub_1BB872E68(0, v5);
  *(_QWORD *)(v1 + 352) = v12;
  v13 = (_QWORD *)swift_task_alloc(dword_1EF2AFE04);
  *(_QWORD *)(v1 + 360) = v13;
  *v13 = v1;
  v13[1] = sub_1BAAE2404;
  return sub_1BA670B84(v1 + 112, v2, v12, *(double *)(v1 + 136));
}

uint64_t sub_1BAAE2098()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  v5 = *(_QWORD *)(v1 + 288);
  v6 = *(_QWORD *)(v1 + 224);
  v7 = MEMORY[0x1E0DEA968];
  v0[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v0[8] = v8;
  v0[4] = 0x646568636163;
  v0[5] = v3;
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v0[12] = v7;
  v0[13] = v8;
  v0[9] = v10;
  v0[10] = v9;
  v11 = swift_bridgeObjectRetain(v9);
  v12 = sub_1BB87330C(v11);
  sub_1BB86EF44("Service converted end of feed to process the next chained %{public}@ cursor %{public}@", 86, 2, &dword_1BA493000, v4, v12, v0);
  swift_bridgeObjectRelease(v0);
  *(_QWORD *)(v1 + 112) = v5;
  v13 = sub_1BB872E68(0, v6);
  *(_QWORD *)(v1 + 352) = v13;
  v14 = (_QWORD *)swift_task_alloc(dword_1EF2AFE04);
  *(_QWORD *)(v1 + 360) = v14;
  *v14 = v1;
  v14[1] = sub_1BAAE2404;
  return sub_1BA670B84(v1 + 112, v2, v13, *(double *)(v1 + 136));
}

void sub_1BAAE20A8()
{
  JUMPOUT(0x1BAAE20D0);
}

uint64_t sub_1BAAE21AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int8x16_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = *(_QWORD *)(v1 + 296);
  v29 = *(_QWORD *)(v1 + 304);
  v6 = *(_QWORD *)(v1 + 224);
  v7 = MEMORY[0x1E0DEA968];
  v5[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v5[8] = v8;
  v5[4] = 0x6E657A6F7266;
  v5[5] = v0;
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v5[12] = v7;
  v5[13] = v8;
  v5[9] = v10;
  v5[10] = v9;
  v11 = *(_QWORD *)(v2 + v3);
  swift_bridgeObjectRetain(v9);
  v27 = *(int8x16_t *)(v1 + 168);
  v12 = MEMORY[0x1BCCE37B4](v11);
  v13 = MEMORY[0x1E0DEB490];
  v5[17] = MEMORY[0x1E0DEB418];
  v5[18] = v13;
  v5[14] = v12;
  v14 = sub_1BB87330C(v12);
  sub_1BB86EF44("Service converted end of feed to next groups for chained %{public}@ cursor %{public}@ with emitted %ld groups", 109, 2, &dword_1BA493000);
  swift_bridgeObjectRelease(v5);
  v15 = ((uint64_t (*)(void *, uint64_t, uint64_t))swift_allocObject)(&unk_1E7291A50, 32, 7);
  v16 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v1 + 104) = v16;
  v17 = (int8x16_t *)swift_task_alloc(32);
  v17[1] = vextq_s8(v27, v27, 8uLL);
  swift_bridgeObjectRetain(v16);
  v18 = ((uint64_t (*)(uint64_t (*)(), int8x16_t *, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1BAA52384)(sub_1BAAECC88, v17, v30, v6, MEMORY[0x1E0DEDCE8], v4, MEMORY[0x1E0DEDD18]);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 104));
  swift_task_dealloc(v17);
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = ((uint64_t (*)(uint64_t))FeedCursorContainer.init(cursor:))(v2);
  ((void (*)(uint64_t))swift_retain)(v2);
  v19 = ((uint64_t (*)(uint64_t))sub_1BA62F504)(v15 | 0x2000000000000000);
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  v20 = *(_QWORD *)(v1 + 272);
  v22 = *(_QWORD *)(v1 + 240);
  v21 = *(_QWORD *)(v1 + 248);
  v23 = *(_QWORD *)(v1 + 208);
  v25 = *(_QWORD *)(v1 + 152);
  v24 = *(_QWORD *)(v1 + 160);
  swift_task_dealloc(*(_QWORD *)(v1 + 280));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v19);
}

uint64_t sub_1BAAE21BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int8x16_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int8x16_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v27 = *(_QWORD *)(v0 + 296);
  v28 = *(_QWORD *)(v0 + 304);
  v5 = *(_QWORD *)(v0 + 224);
  v6 = MEMORY[0x1E0DEA968];
  v4[7] = MEMORY[0x1E0DEA968];
  v7 = sub_1BA6A2D8C();
  v4[8] = v7;
  v4[4] = 0x656546664F646E65;
  v4[5] = 0xE900000000000064;
  v9 = *(_QWORD *)(v1 + 16);
  v8 = *(_QWORD *)(v1 + 24);
  v4[12] = v6;
  v4[13] = v7;
  v4[9] = v9;
  v4[10] = v8;
  v10 = *(_QWORD *)(v1 + v2);
  swift_bridgeObjectRetain(v8);
  v26 = *(int8x16_t *)(v0 + 168);
  v11 = MEMORY[0x1BCCE37B4](v10);
  v12 = MEMORY[0x1E0DEB490];
  v4[17] = MEMORY[0x1E0DEB418];
  v4[18] = v12;
  v4[14] = v11;
  v13 = sub_1BB87330C(v11);
  sub_1BB86EF44("Service converted end of feed to next groups for chained %{public}@ cursor %{public}@ with emitted %ld groups", 109, 2, &dword_1BA493000);
  swift_bridgeObjectRelease(v4);
  v14 = ((uint64_t (*)(void *, uint64_t, uint64_t))swift_allocObject)(&unk_1E7291A50, 32, 7);
  v15 = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 104) = v15;
  v16 = (int8x16_t *)swift_task_alloc(32);
  v16[1] = vextq_s8(v26, v26, 8uLL);
  swift_bridgeObjectRetain(v15);
  v17 = ((uint64_t (*)(uint64_t (*)(), int8x16_t *, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1BAA52384)(sub_1BAAECC88, v16, v29, v5, MEMORY[0x1E0DEDCE8], v3, MEMORY[0x1E0DEDD18]);
  swift_bridgeObjectRelease(*(_QWORD *)(v0 + 104));
  swift_task_dealloc(v16);
  *(_QWORD *)(v14 + 16) = v17;
  *(_QWORD *)(v14 + 24) = ((uint64_t (*)(uint64_t))FeedCursorContainer.init(cursor:))(v1);
  ((void (*)(uint64_t))swift_retain)(v1);
  v18 = ((uint64_t (*)(uint64_t))sub_1BA62F504)(v14 | 0x2000000000000000);
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  v19 = *(_QWORD *)(v0 + 272);
  v21 = *(_QWORD *)(v0 + 240);
  v20 = *(_QWORD *)(v0 + 248);
  v22 = *(_QWORD *)(v0 + 208);
  v24 = *(_QWORD *)(v0 + 152);
  v23 = *(_QWORD *)(v0 + 160);
  swift_task_dealloc(*(_QWORD *)(v0 + 280));
  swift_task_dealloc(v19);
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v18);
}

uint64_t sub_1BAAE21D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int8x16_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int8x16_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = *(_QWORD *)(v1 + 296);
  v29 = *(_QWORD *)(v1 + 304);
  v6 = *(_QWORD *)(v1 + 224);
  v7 = MEMORY[0x1E0DEA968];
  v5[7] = MEMORY[0x1E0DEA968];
  v8 = sub_1BA6A2D8C();
  v5[8] = v8;
  v5[4] = 0x646568636163;
  v5[5] = v0;
  v10 = *(_QWORD *)(v2 + 16);
  v9 = *(_QWORD *)(v2 + 24);
  v5[12] = v7;
  v5[13] = v8;
  v5[9] = v10;
  v5[10] = v9;
  v11 = *(_QWORD *)(v2 + v3);
  swift_bridgeObjectRetain(v9);
  v27 = *(int8x16_t *)(v1 + 168);
  v12 = MEMORY[0x1BCCE37B4](v11);
  v13 = MEMORY[0x1E0DEB490];
  v5[17] = MEMORY[0x1E0DEB418];
  v5[18] = v13;
  v5[14] = v12;
  v14 = sub_1BB87330C(v12);
  sub_1BB86EF44("Service converted end of feed to next groups for chained %{public}@ cursor %{public}@ with emitted %ld groups", 109, 2, &dword_1BA493000);
  swift_bridgeObjectRelease(v5);
  v15 = ((uint64_t (*)(void *, uint64_t, uint64_t))swift_allocObject)(&unk_1E7291A50, 32, 7);
  v16 = *(_QWORD *)(v2 + v3);
  *(_QWORD *)(v1 + 104) = v16;
  v17 = (int8x16_t *)swift_task_alloc(32);
  v17[1] = vextq_s8(v27, v27, 8uLL);
  swift_bridgeObjectRetain(v16);
  v18 = ((uint64_t (*)(uint64_t (*)(), int8x16_t *, uint64_t, uint64_t, _QWORD, uint64_t, _QWORD))sub_1BAA52384)(sub_1BAAECC88, v17, v30, v6, MEMORY[0x1E0DEDCE8], v4, MEMORY[0x1E0DEDD18]);
  swift_bridgeObjectRelease(*(_QWORD *)(v1 + 104));
  swift_task_dealloc(v17);
  *(_QWORD *)(v15 + 16) = v18;
  *(_QWORD *)(v15 + 24) = ((uint64_t (*)(uint64_t))FeedCursorContainer.init(cursor:))(v2);
  ((void (*)(uint64_t))swift_retain)(v2);
  v19 = ((uint64_t (*)(uint64_t))sub_1BA62F504)(v15 | 0x2000000000000000);
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  ((void (*)())swift_release)();
  v20 = *(_QWORD *)(v1 + 272);
  v22 = *(_QWORD *)(v1 + 240);
  v21 = *(_QWORD *)(v1 + 248);
  v23 = *(_QWORD *)(v1 + 208);
  v25 = *(_QWORD *)(v1 + 152);
  v24 = *(_QWORD *)(v1 + 160);
  swift_task_dealloc(*(_QWORD *)(v1 + 280));
  swift_task_dealloc(v20);
  swift_task_dealloc(v21);
  swift_task_dealloc(v22);
  swift_task_dealloc(v23);
  swift_task_dealloc(v24);
  swift_task_dealloc(v25);
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(v19);
}

void sub_1BAAE21E8()
{
  JUMPOUT(0x1BAAE2210);
}

uint64_t sub_1BAAE2404(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 368) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 376) = a1;
  }
  return swift_task_switch();
}

uint64_t sub_1BAAE2480()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v1 = *(_QWORD *)(v0 + 376);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_1BAAE2534()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  swift_release();
  v1 = *(void **)(v0 + 328);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 40);
  v3 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = 0;
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  *(_QWORD *)(v0 + 80) = v1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  sub_1BB86EF44("Service failed to await next cursor, dropping chain and converting to end of feed, error=%{public}@", 99, 2, &dword_1BA493000, v2, v3, v4);
  swift_bridgeObjectRelease();
  v7 = sub_1BB638214();
  swift_release();

  swift_release();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = FeedCursorContainer.init(cursor:)(v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v8 | 0x8000000000000000);
}

uint64_t sub_1BAAE270C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;

  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v1 = *(void **)(v0 + 368);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 144) + 40);
  v3 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 64) = 0;
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v0 + 72) = 0xE000000000000000;
  *(_QWORD *)(v0 + 80) = v1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v5 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = v5;
  *(_QWORD *)(v4 + 40) = v6;
  sub_1BB86EF44("Service failed to await next cursor, dropping chain and converting to end of feed, error=%{public}@", 99, 2, &dword_1BA493000, v2, v3, v4);
  swift_bridgeObjectRelease();
  v7 = sub_1BB638214();
  swift_release();

  swift_release();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = FeedCursorContainer.init(cursor:)(v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(unint64_t))(v0 + 8))(v8 | 0x8000000000000000);
}

uint64_t sub_1BAAE28F8()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BB86DEE8();
  sub_1BAAD17A4();
  return swift_bridgeObjectRelease();
}

void sub_1BAAE2A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;

  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1BB86DEE8();
  v4 = *(_QWORD *)(a3 + qword_1ED476788 + 32);
  v5 = *(_QWORD *)(a3 + qword_1ED476788 + 40);
  v6 = *(void **)(a3 + qword_1ED476788 + 56);
  v7 = *(id *)(a3 + qword_1ED476788);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v4, v5);
  v8 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAAD1A7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BA6DB13C(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

}

uint64_t sub_1BAAE2C7C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for FeedCursorGroup(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  return sub_1BB3A966C(a1, v7, a2);
}

uint64_t sub_1BAAE2D2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = a1
     + *(int *)(type metadata accessor for FeedCursorGroup(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6)
              + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7, v8);
}

uint64_t sub_1BAAE2E50(uint64_t a1, uint64_t *a2, uint64_t a3, double a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t v15;

  *(_QWORD *)(v5 + 704) = v4;
  *(double *)(v5 + 696) = a4;
  *(_QWORD *)(v5 + 688) = a3;
  *(_QWORD *)(v5 + 680) = a2;
  *(_QWORD *)(v5 + 672) = a1;
  v6 = *v4;
  *(_QWORD *)(v5 + 712) = *v4;
  v7 = *a2;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v5 + 720) = swift_task_alloc();
  *(_QWORD *)(v5 + 728) = swift_task_alloc();
  v8 = *(_QWORD *)(v7 + 80);
  *(_QWORD *)(v5 + 736) = v8;
  v9 = sub_1BB873A2C();
  *(_QWORD *)(v5 + 744) = v9;
  *(_QWORD *)(v5 + 752) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v5 + 760) = swift_task_alloc();
  v10 = sub_1BB86C8B0();
  *(_QWORD *)(v5 + 768) = v10;
  *(_QWORD *)(v5 + 776) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v5 + 784) = swift_task_alloc();
  *(_QWORD *)(v5 + 792) = *(_QWORD *)(v8 - 8);
  *(_QWORD *)(v5 + 800) = swift_task_alloc();
  v11 = *(_QWORD *)(v7 + 88);
  *(_QWORD *)(v5 + 808) = v11;
  v13 = type metadata accessor for FeedCursorGroup(0, v8, v11, v12);
  *(_QWORD *)(v5 + 816) = v13;
  *(_QWORD *)(v5 + 824) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v5 + 832) = swift_task_alloc();
  *(_QWORD *)(v5 + 840) = *(_QWORD *)(v6 + 88);
  *(_QWORD *)(v5 + 848) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 + 856) = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v5 + 864) = AssociatedTypeWitness;
  v15 = *(_QWORD *)(AssociatedTypeWitness - 8);
  *(_QWORD *)(v5 + 872) = v15;
  *(_QWORD *)(v5 + 880) = *(_QWORD *)(v15 + 64);
  *(_QWORD *)(v5 + 888) = swift_task_alloc();
  *(_QWORD *)(v5 + 896) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE304C()
{
  uint64_t v0;
  _QWORD *v1;

  *(_QWORD *)(v0 + 904) = sub_1BA498804();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 912) = v1;
  *v1 = v0;
  v1[1] = sub_1BAAE30AC;
  return sub_1BB86E908();
}

uint64_t sub_1BAAE30AC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 920) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_release();
  return swift_task_switch();
}

uint64_t sub_1BAAE3118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v17;
  uint64_t v18;
  CFTimeInterval v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  void (*v96)(uint64_t, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(unint64_t, uint64_t, uint64_t);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  unsigned __int8 v113;
  _BYTE v114[88];
  _QWORD v115[3];
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  CFTimeInterval v120;

  v97 = *(_QWORD *)(v4 + 896);
  v98 = *(_QWORD *)(v4 + 888);
  v5 = *(_QWORD *)(v4 + 872);
  v82 = v5;
  v93 = *(_QWORD *)(v4 + 864);
  v88 = *(_QWORD *)(v4 + 840);
  v105 = *(_QWORD *)(v4 + 832);
  v85 = *(_QWORD *)(v4 + 816);
  v86 = *(_QWORD *)(v4 + 824);
  v6 = *(_QWORD *)(v4 + 808);
  v102 = v6;
  v78 = *(_QWORD *)(v4 + 800);
  v94 = *(_QWORD *)(v4 + 792);
  v79 = *(_QWORD *)(v4 + 784);
  v83 = *(_QWORD *)(v4 + 776);
  v84 = *(_QWORD *)(v4 + 768);
  v111 = *(_QWORD *)(v4 + 760);
  v92 = *(_QWORD *)(v4 + 752);
  v7 = *(double *)(v4 + 696);
  v8 = *(_QWORD *)(v4 + 688);
  *(_QWORD *)(v4 + 640) = *(_QWORD *)(v8 + qword_1ED4768A0);
  v9 = *(_QWORD *)(v4 + 736);
  v109 = *(_QWORD *)(v4 + 728);
  v100 = *(_QWORD *)(v4 + 720);
  v87 = *(_QWORD *)(v4 + 712);
  v90 = *(_QWORD *)(v4 + 744);
  v91 = *(_QWORD *)(v4 + 704);
  type metadata accessor for FeedDatabaseGroup(255, v9, v6, a4);
  v10 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v10);
  sub_1BB873174();
  v11 = *(_OWORD *)(v4 + 576);
  *(_OWORD *)(v4 + 496) = *(_OWORD *)(v4 + 560);
  *(_OWORD *)(v4 + 512) = v11;
  v12 = sub_1BB873B70();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF78], v12);
  v89 = sub_1BB872EF8();
  v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v96(v98, v97, v93);
  v13 = sub_1BA5B1EC4();
  v15 = v14;
  v81 = v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v94 + 16))(v78, v8 + *(_QWORD *)(*(_QWORD *)v8 + 248), v9);
  sub_1BB833060();
  FeedCursorGroup.init(createdDate:group:configIdentifier:serviceConfig:)(v79, v98, v13, v15, v78, v9, v102, v105);
  *(_QWORD *)(v4 + 480) = v93;
  *(_QWORD *)(v4 + 488) = swift_getAssociatedConformanceWitness();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 + 456));
  v96((uint64_t)boxed_opaque_existential_0, v97, v93);
  v80 = sub_1BA5B1EC4();
  v18 = v17;
  v19 = (CACurrentMediaTime() - v7) * 1000.0;
  sub_1BA4AD288(0, &qword_1ED3AB810, (uint64_t)&type metadata for FeedJournalGroup, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
  sub_1BA4C010C(v4 + 456, v4 + 416);
  v21 = sub_1BB86DEE8();
  v23 = v22;
  *(_OWORD *)(v4 + 376) = 0u;
  *(_OWORD *)(v4 + 392) = 0u;
  *(_QWORD *)(v4 + 408) = 0;
  sub_1BA4C010C(v4 + 416, v4 + 264);
  *(_QWORD *)(v4 + 304) = 0x3FF0000000000000;
  *(_BYTE *)(v4 + 328) = 1;
  sub_1BA4C010C(v4 + 416, v4 + 336);
  v24 = swift_allocObject();
  sub_1BA4CECCC((__int128 *)(v4 + 336), v24 + 16);
  *(_QWORD *)(v4 + 16) = v21;
  *(_QWORD *)(v4 + 24) = v23;
  *(_QWORD *)(v4 + 32) = v80;
  *(_QWORD *)(v4 + 40) = v18;
  sub_1BA5B103C(v4 + 376, v4 + 48);
  *(_QWORD *)(v4 + 88) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 96) = 0;
  *(_BYTE *)(v4 + 104) = 1;
  *(_QWORD *)(v4 + 112) = 0;
  *(_BYTE *)(v4 + 120) = 1;
  *(_QWORD *)(v4 + 128) = 0;
  *(_WORD *)(v4 + 136) = 1;
  sub_1BA5B1000(v4 + 264, v4 + 144);
  *(_QWORD *)(v4 + 216) = 0;
  *(_OWORD *)(v4 + 224) = 0u;
  *(CFTimeInterval *)(v4 + 240) = v19;
  *(_QWORD *)(v4 + 248) = sub_1BAAECD2C;
  *(_QWORD *)(v4 + 256) = v24;
  __swift_destroy_boxed_opaque_existential_1(v4 + 416);
  v25 = *(_OWORD *)(v4 + 224);
  *(_OWORD *)(v20 + 224) = *(_OWORD *)(v4 + 208);
  *(_OWORD *)(v20 + 240) = v25;
  *(_OWORD *)(v20 + 256) = *(_OWORD *)(v4 + 240);
  *(_QWORD *)(v20 + 272) = *(_QWORD *)(v4 + 256);
  v26 = *(_OWORD *)(v4 + 160);
  *(_OWORD *)(v20 + 160) = *(_OWORD *)(v4 + 144);
  *(_OWORD *)(v20 + 176) = v26;
  v27 = *(_OWORD *)(v4 + 192);
  *(_OWORD *)(v20 + 192) = *(_OWORD *)(v4 + 176);
  *(_OWORD *)(v20 + 208) = v27;
  v28 = *(_OWORD *)(v4 + 96);
  *(_OWORD *)(v20 + 96) = *(_OWORD *)(v4 + 80);
  *(_OWORD *)(v20 + 112) = v28;
  v29 = *(_OWORD *)(v4 + 128);
  *(_OWORD *)(v20 + 128) = *(_OWORD *)(v4 + 112);
  *(_OWORD *)(v20 + 144) = v29;
  v30 = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)(v4 + 16);
  *(_OWORD *)(v20 + 48) = v30;
  v31 = *(_OWORD *)(v4 + 64);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v20 + 80) = v31;
  __swift_destroy_boxed_opaque_existential_1(v4 + 456);
  v32 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56))(v111, 1, 1, v9);
  v113 = 7;
  v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v83 + 56);
  v33(v109, 1, 1, v84);
  v33(v100, 1, 1, v84);
  sub_1BB874218();
  swift_allocObject();
  v34 = sub_1BB872E2C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v35, v105, v85);
  sub_1BA69C794(v34);
  v95 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  v96(v98, v97, v93);
  v36 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  v37 = swift_allocObject();
  *(_QWORD *)(v37 + 16) = *(_QWORD *)(v87 + 80);
  *(_QWORD *)(v37 + 24) = v88;
  v106 = *(void (**)(unint64_t, uint64_t, uint64_t))(v82 + 32);
  v106(v37 + v36, v98, v93);
  v38 = (void *)sub_1BB86E854();
  sub_1BB873A2C();
  v39 = sub_1BB86E974();

  swift_release();
  memset(v114, 0, 80);
  v40 = *(_QWORD *)(v81 + qword_1ED476790 + 16);
  v116 = *(_OWORD *)(v81 + qword_1ED476790);
  v117 = v40;
  v118 = v20;
  v119 = 1;
  v120 = v19;
  sub_1BA66AB08(&v116, &v118, v32, v102, v115);
  swift_bridgeObjectRelease();
  sub_1BA5B18CC(1uLL);
  v118 = v115[0];
  v119 = v115[1];
  v120 = *(double *)&v115[2];
  *(_QWORD *)&v116 = 0;
  WORD4(v116) = 256;
  v41 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v111, 0, &v113, v109, v100, 0, 0, 0, 0, v95, v89, 0, 1, 0, 1, 0, 1,
          0,
          v39,
          (uint64_t)v114,
          &v118,
          (uint64_t)&v116,
          0,
          0,
          0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v100);
  sub_1BA76D750(v109);
  v42 = (*(uint64_t (**)(uint64_t, uint64_t))(v92 + 8))(v111, v90);
  v112 = v41;
  LOBYTE(v41) = FeedCursor.reachedEnd.getter(v42, v43, v44, v45);
  v110 = *(_QWORD *)(v91 + 40);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  if ((v41 & 1) != 0)
  {
    v46 = *(_QWORD *)(v4 + 896);
    v47 = *(_QWORD *)(v4 + 864);
    v107 = *(_QWORD *)(v4 + 832);
    v48 = *(_QWORD *)(v4 + 824);
    v103 = *(_QWORD *)(v4 + 816);
    v49 = *(_QWORD *)(v4 + 808);
    v50 = *(_QWORD *)(v4 + 736);
    v51 = *(_QWORD *)(v4 + 672);
    v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_1BB87CE70;
    v53 = sub_1BB87420C();
    v55 = v54;
    *(_QWORD *)(v52 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v52 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v52 + 32) = v53;
    *(_QWORD *)(v52 + 40) = v55;
    v56 = sub_1BB87330C();
    sub_1BB86EF44("Service database groups emitted another group and we reached the end of the feed, group=%{public}@", 98, 2, &dword_1BA493000, v110, v56, v52);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v107, v103);
    type metadata accessor for FeedCursor(255, v50, v49, v57);
    v58 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v106(v51, v46, v47);
    *(_QWORD *)(v51 + v58) = v112;
    type metadata accessor for FeedServiceFetchResult.Internal(0, v50, v49, v59);
  }
  else
  {
    v99 = *(_QWORD *)(v4 + 896);
    v60 = *(_QWORD *)(v4 + 864);
    v108 = *(_QWORD *)(v4 + 832);
    v101 = *(_QWORD *)(v4 + 824);
    v104 = *(_QWORD *)(v4 + 816);
    v61 = *(_QWORD *)(v4 + 808);
    v62 = *(_QWORD *)(v4 + 736);
    v63 = *(_QWORD *)(v4 + 688);
    v64 = *(_QWORD *)(v4 + 672);
    v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_1BB87A390;
    v66 = sub_1BB87420C();
    v68 = v67;
    *(_QWORD *)(v65 + 56) = MEMORY[0x1E0DEA968];
    v69 = sub_1BA6A2D8C();
    *(_QWORD *)(v65 + 64) = v69;
    *(_QWORD *)(v65 + 32) = v66;
    *(_QWORD *)(v65 + 40) = v68;
    *(_QWORD *)(v4 + 664) = v63;
    v71 = type metadata accessor for FeedCursor(0, v62, v61, v70);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedCursor<A>, v71);
    v72 = sub_1BB86E308();
    *(_QWORD *)(v65 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v65 + 104) = v69;
    *(_QWORD *)(v65 + 72) = v72;
    *(_QWORD *)(v65 + 80) = v73;
    v74 = sub_1BB87330C();
    sub_1BB86EF44("Service database groups emitted another group, group=%{public}@, cursor=%@", 74, 2, &dword_1BA493000, v110, v74, v65);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v101 + 8))(v108, v104);
    v75 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v106(v64, v99, v60);
    *(_QWORD *)(v64 + v75) = v112;
    type metadata accessor for FeedServiceFetchResult.Internal(0, v62, v61, v76);
  }
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_1BAAE3BC8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  CFTimeInterval v12;
  __int128 v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  unsigned __int8 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v1 = *(void **)(v0 + 920);
  v37 = *(_QWORD *)(v0 + 808);
  v42 = v1;
  v2 = *(_QWORD *)(v0 + 792);
  v3 = *(_QWORD *)(v0 + 776);
  v4 = *(_QWORD *)(v0 + 768);
  v5 = *(_QWORD *)(v0 + 760);
  v39 = *(_QWORD *)(v0 + 752);
  v6 = *(_QWORD *)(v0 + 736);
  v7 = *(_QWORD *)(v0 + 728);
  v38 = v7;
  v43 = *(_QWORD *)(v0 + 720);
  v40 = *(_QWORD *)(v0 + 704);
  v41 = *(_QWORD *)(v0 + 744);
  v8 = *(double *)(v0 + 696);
  v9 = *(_QWORD *)(v0 + 688);
  v10 = *(_QWORD *)(v0 + 680);
  swift_release();
  swift_retain();
  v11 = v1;
  v12 = CACurrentMediaTime();
  sub_1BAAD11FC(v10, v1, (uint64_t)&v45, (v12 - v8) * 1000.0);
  v13 = v45;
  v14 = v46;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v5, 1, 1, v6);
  v44 = 7;
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56);
  v15(v7, 1, 1, v4);
  v15(v43, 1, 1, v4);
  *(_QWORD *)(v0 + 648) = *(_QWORD *)(v9 + qword_1ED4768A0);
  type metadata accessor for FeedDatabaseGroup(255, v6, v37, v16);
  v17 = sub_1BB872EE0();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v17);
  sub_1BB873174();
  v18 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 528) = *(_OWORD *)(v0 + 592);
  *(_OWORD *)(v0 + 544) = v18;
  v19 = sub_1BB873B70();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBF78], v19);
  v20 = sub_1BB872EF8();
  v48 = 0u;
  v49 = 0u;
  v46 = 0u;
  v47 = 0u;
  v45 = 0u;
  v21 = *(_QWORD *)(v9 + qword_1ED476790 + 16);
  v52 = *(_OWORD *)(v9 + qword_1ED476790);
  v53 = v21;
  v54 = v13;
  v55 = v14;
  sub_1BA66AB08(&v52, (uint64_t *)&v54, v6, v37, &v50);
  swift_bridgeObjectRelease();
  sub_1BA5B18CC(*((unint64_t *)&v13 + 1));
  v54 = v50;
  v55 = v51;
  *(_QWORD *)&v52 = 0;
  WORD4(v52) = 256;
  v22 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v5, 0, &v44, v7, v43, 0, 0, 0, 0, 0, v20, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)&v45,
          (uint64_t *)&v54,
          (uint64_t)&v52,
          0,
          0,
          0);
  *(_QWORD *)(v0 + 928) = v22;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v43);
  sub_1BA76D750(v38);
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v5, v41);
  v23 = *(_QWORD *)(v40 + 40);
  v24 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87A390;
  v26 = FeedDatabaseGroup.identifier.getter();
  v28 = v27;
  v29 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v25 + 56) = MEMORY[0x1E0DEA968];
  v30 = sub_1BA6A2D8C();
  *(_QWORD *)(v25 + 64) = v30;
  *(_QWORD *)(v25 + 32) = v26;
  *(_QWORD *)(v25 + 40) = v28;
  *(_QWORD *)(v0 + 624) = 0;
  *(_QWORD *)(v0 + 632) = 0xE000000000000000;
  *(_QWORD *)(v0 + 656) = v42;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  v31 = *(_QWORD *)(v0 + 624);
  v32 = *(_QWORD *)(v0 + 632);
  *(_QWORD *)(v25 + 96) = v29;
  *(_QWORD *)(v25 + 104) = v30;
  *(_QWORD *)(v25 + 72) = v31;
  *(_QWORD *)(v25 + 80) = v32;
  sub_1BB86EF44("Service database group failed to decode; will advance the cursor and try again, group=%{public}@, error=%{public}@",
    114,
    2,
    &dword_1BA493000,
    v23,
    v24,
    v25);
  swift_bridgeObjectRelease();
  v33 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 936) = v33;
  *v33 = v0;
  v33[1] = sub_1BAAE4064;
  v34 = *(_QWORD *)(v0 + 696);
  v35 = *(_QWORD *)(v0 + 672);
  v33[22] = *(_QWORD *)(v0 + 704);
  v33[21] = v34;
  v33[19] = v35;
  v33[20] = v22;
  v33[23] = *v22;
  return swift_task_switch();
}

uint64_t sub_1BAAE4064()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 944) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE40C8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 920);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE417C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 920);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE4258()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 648) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE42BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE4400()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 672) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE4464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE45A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 696) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE460C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE4750()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 728) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE47B4()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE48E8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unsigned __int8 v53;
  _OWORD v54[5];
  _QWORD v55[3];
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;

  swift_release();
  v1 = *(void **)(v0 + 624);
  *(_QWORD *)(v0 + 232) = v1;
  *(_QWORD *)(v0 + 704) = v1;
  v2 = *(_QWORD *)(v0 + 400);
  v3 = *(_QWORD *)(v0 + 312);
  v4 = v1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v3, v2, v5);
  if (!swift_dynamicCast())
    goto LABEL_17;
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(unsigned __int8 *)(v0 + 48);
  if (v8 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v8);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v50 = *(_QWORD *)(v0 + 32);
  v51 = *(_QWORD *)(v0 + 16);
  v52 = *(_QWORD *)(v0 + 24);
  v9 = *(_QWORD *)(*(_QWORD *)(v0 + 264) + qword_1ED4767D8);
  v10 = type metadata accessor for FeedGroupEmitter(0, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 400), v6);
  swift_bridgeObjectRetain();
  v11 = swift_bridgeObjectRetain();
  if (MEMORY[0x1BCCE37E4](v11, v10))
  {
    v12 = 0;
    do
    {
      v13 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v13 & 1) != 0)
      {
        result = swift_retain();
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
          goto LABEL_20;
      }
      else
      {
        result = sub_1BB873D08();
        v15 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          return result;
        }
      }
      v16 = sub_1BA4D7950();
      v18 = v17;
      swift_bridgeObjectRetain();
      v19 = sub_1BA6E35A8(v16, v18);
      LOBYTE(v16) = v20;
      swift_bridgeObjectRelease();
      if ((v16 & 1) != 0)
      {
        *(_QWORD *)&v54[0] = v9;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7F2580();
          v9 = *(_QWORD *)&v54[0];
        }
        swift_bridgeObjectRelease();
        sub_1BA81C280(v19, v9);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      ++v12;
    }
    while (v15 != MEMORY[0x1BCCE37E4](v7, v10));
  }
  v21 = *(_QWORD *)(v0 + 368);
  v22 = *(_QWORD *)(v0 + 344);
  v23 = *(_QWORD *)(v0 + 352);
  v24 = *(_QWORD *)(v0 + 336);
  v26 = *(_QWORD *)(v0 + 304);
  v25 = *(_QWORD *)(v0 + 312);
  v46 = *(_QWORD *)(v0 + 296);
  v48 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56))(v24, 1, 1, v25);
  v53 = 7;
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 56);
  v27(v26, 1, 1, v22);
  v27(v46, 1, 1, v22);
  v28 = *(_QWORD *)(v48 + qword_1ED4767E0);
  v29 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v10);
  v30 = sub_1BA4CB9A0(v28, v7, v10, v29);
  result = swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v48 + qword_1ED4767F0);
  v32 = __OFADD__(v31, 1);
  v33 = v31 + 1;
  if (v32)
    goto LABEL_21;
  v34 = *(_QWORD *)(v0 + 400);
  v44 = v33;
  v45 = *(_QWORD *)(v0 + 336);
  v35 = *(_QWORD *)(v0 + 312);
  v47 = *(_QWORD *)(v0 + 328);
  v49 = *(_QWORD *)(v0 + 320);
  v36 = *(_QWORD *)(v0 + 296);
  v37 = *(_QWORD *)(v0 + 304);
  v38 = *(_QWORD *)(v0 + 264);
  memset(v54, 0, sizeof(v54));
  v39 = *(_QWORD *)(v38 + qword_1ED476790 + 16);
  v56 = *(_OWORD *)(v38 + qword_1ED476790);
  v57 = v39;
  v58 = v51;
  v59 = v52;
  v60 = v50;
  sub_1BA66AB08(&v56, &v58, v35, v34, v55);
  swift_bridgeObjectRelease();
  sub_1BA5B18CC(v52);
  v58 = v55[0];
  v59 = v55[1];
  v60 = v55[2];
  *(_QWORD *)&v56 = 0;
  WORD4(v56) = 256;
  v40 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v45, 0, &v53, v37, v36, 0, v30, 0, 0, 0, 0, v44, 0, 0, 1, 0, 1,
          v9,
          0,
          (uint64_t)v54,
          &v58,
          (uint64_t)&v56,
          0,
          0,
          0);
  *(_QWORD *)(v0 + 712) = v40;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v36);
  sub_1BA76D750(v37);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v45, v49);
  v41 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v41;
  *v41 = v0;
  v41[1] = sub_1BAAE4750;
  v42 = *(_QWORD *)(v0 + 280);
  v43 = *(_QWORD *)(v0 + 248);
  v41[22] = *(_QWORD *)(v0 + 288);
  v41[21] = v42;
  v41[19] = v43;
  v41[20] = v40;
  v41[23] = *v40;
  return swift_task_switch();
}

uint64_t sub_1BAAE4EC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unsigned __int8 v56;
  _OWORD v57[5];
  _QWORD v58[3];
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 672);
  *(_QWORD *)(v0 + 232) = v4;
  *(_QWORD *)(v0 + 704) = v4;
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = v4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v6, v5, v8);
  if (!swift_dynamicCast())
    goto LABEL_17;
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(unsigned __int8 *)(v0 + 48);
  if (v11 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v11);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v53 = *(_QWORD *)(v0 + 32);
  v54 = *(_QWORD *)(v0 + 16);
  v55 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 264) + qword_1ED4767D8);
  v13 = type metadata accessor for FeedGroupEmitter(0, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 400), v9);
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  if (MEMORY[0x1BCCE37E4](v14, v13))
  {
    v15 = 0;
    do
    {
      v16 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v16 & 1) != 0)
      {
        result = swift_retain();
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_20;
      }
      else
      {
        result = sub_1BB873D08();
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          return result;
        }
      }
      v19 = sub_1BA4D7950();
      v21 = v20;
      swift_bridgeObjectRetain();
      v22 = sub_1BA6E35A8(v19, v21);
      LOBYTE(v19) = v23;
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        *(_QWORD *)&v57[0] = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7F2580();
          v12 = *(_QWORD *)&v57[0];
        }
        swift_bridgeObjectRelease();
        sub_1BA81C280(v22, v12);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      ++v15;
    }
    while (v18 != MEMORY[0x1BCCE37E4](v10, v13));
  }
  v24 = *(_QWORD *)(v0 + 368);
  v25 = *(_QWORD *)(v0 + 344);
  v26 = *(_QWORD *)(v0 + 352);
  v27 = *(_QWORD *)(v0 + 336);
  v29 = *(_QWORD *)(v0 + 304);
  v28 = *(_QWORD *)(v0 + 312);
  v49 = *(_QWORD *)(v0 + 296);
  v51 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, 1, 1, v28);
  v56 = 7;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v30(v29, 1, 1, v25);
  v30(v49, 1, 1, v25);
  v31 = *(_QWORD *)(v51 + qword_1ED4767E0);
  v32 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v13);
  v33 = sub_1BA4CB9A0(v31, v10, v13, v32);
  result = swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v51 + qword_1ED4767F0);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
    goto LABEL_21;
  v37 = *(_QWORD *)(v0 + 400);
  v47 = v36;
  v48 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 312);
  v50 = *(_QWORD *)(v0 + 328);
  v52 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 296);
  v40 = *(_QWORD *)(v0 + 304);
  v41 = *(_QWORD *)(v0 + 264);
  memset(v57, 0, sizeof(v57));
  v42 = *(_QWORD *)(v41 + qword_1ED476790 + 16);
  v59 = *(_OWORD *)(v41 + qword_1ED476790);
  v60 = v42;
  v61 = v54;
  v62 = v55;
  v63 = v53;
  sub_1BA66AB08(&v59, &v61, v38, v37, v58);
  swift_bridgeObjectRelease();
  sub_1BA5B18CC(v55);
  v61 = v58[0];
  v62 = v58[1];
  v63 = v58[2];
  *(_QWORD *)&v59 = 0;
  WORD4(v59) = 256;
  v43 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v48, 0, &v56, v40, v39, 0, v33, 0, 0, 0, 0, v47, 0, 0, 1, 0, 1,
          v12,
          0,
          (uint64_t)v57,
          &v61,
          (uint64_t)&v59,
          0,
          0,
          0);
  *(_QWORD *)(v0 + 712) = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v39);
  sub_1BA76D750(v40);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v52);
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v44;
  *v44 = v0;
  v44[1] = sub_1BAAE4750;
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 248);
  v44[22] = *(_QWORD *)(v0 + 288);
  v44[21] = v45;
  v44[19] = v46;
  v44[20] = v43;
  v44[23] = *v43;
  return swift_task_switch();
}

uint64_t sub_1BAAE54C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unsigned __int8 v56;
  _OWORD v57[5];
  _QWORD v58[3];
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 696);
  *(_QWORD *)(v0 + 232) = v4;
  *(_QWORD *)(v0 + 704) = v4;
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = v4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v6, v5, v8);
  if (!swift_dynamicCast())
    goto LABEL_17;
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(unsigned __int8 *)(v0 + 48);
  if (v11 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v11);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v53 = *(_QWORD *)(v0 + 32);
  v54 = *(_QWORD *)(v0 + 16);
  v55 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 264) + qword_1ED4767D8);
  v13 = type metadata accessor for FeedGroupEmitter(0, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 400), v9);
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  if (MEMORY[0x1BCCE37E4](v14, v13))
  {
    v15 = 0;
    do
    {
      v16 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v16 & 1) != 0)
      {
        result = swift_retain();
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_20;
      }
      else
      {
        result = sub_1BB873D08();
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          return result;
        }
      }
      v19 = sub_1BA4D7950();
      v21 = v20;
      swift_bridgeObjectRetain();
      v22 = sub_1BA6E35A8(v19, v21);
      LOBYTE(v19) = v23;
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        *(_QWORD *)&v57[0] = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7F2580();
          v12 = *(_QWORD *)&v57[0];
        }
        swift_bridgeObjectRelease();
        sub_1BA81C280(v22, v12);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      ++v15;
    }
    while (v18 != MEMORY[0x1BCCE37E4](v10, v13));
  }
  v24 = *(_QWORD *)(v0 + 368);
  v25 = *(_QWORD *)(v0 + 344);
  v26 = *(_QWORD *)(v0 + 352);
  v27 = *(_QWORD *)(v0 + 336);
  v29 = *(_QWORD *)(v0 + 304);
  v28 = *(_QWORD *)(v0 + 312);
  v49 = *(_QWORD *)(v0 + 296);
  v51 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, 1, 1, v28);
  v56 = 7;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v30(v29, 1, 1, v25);
  v30(v49, 1, 1, v25);
  v31 = *(_QWORD *)(v51 + qword_1ED4767E0);
  v32 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v13);
  v33 = sub_1BA4CB9A0(v31, v10, v13, v32);
  result = swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v51 + qword_1ED4767F0);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
    goto LABEL_21;
  v37 = *(_QWORD *)(v0 + 400);
  v47 = v36;
  v48 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 312);
  v50 = *(_QWORD *)(v0 + 328);
  v52 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 296);
  v40 = *(_QWORD *)(v0 + 304);
  v41 = *(_QWORD *)(v0 + 264);
  memset(v57, 0, sizeof(v57));
  v42 = *(_QWORD *)(v41 + qword_1ED476790 + 16);
  v59 = *(_OWORD *)(v41 + qword_1ED476790);
  v60 = v42;
  v61 = v54;
  v62 = v55;
  v63 = v53;
  sub_1BA66AB08(&v59, &v61, v38, v37, v58);
  swift_bridgeObjectRelease();
  sub_1BA5B18CC(v55);
  v61 = v58[0];
  v62 = v58[1];
  v63 = v58[2];
  *(_QWORD *)&v59 = 0;
  WORD4(v59) = 256;
  v43 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v48, 0, &v56, v40, v39, 0, v33, 0, 0, 0, 0, v47, 0, 0, 1, 0, 1,
          v12,
          0,
          (uint64_t)v57,
          &v61,
          (uint64_t)&v59,
          0,
          0,
          0);
  *(_QWORD *)(v0 + 712) = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v39);
  sub_1BA76D750(v40);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v52);
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v44;
  *v44 = v0;
  v44[1] = sub_1BAAE4750;
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 248);
  v44[22] = *(_QWORD *)(v0 + 288);
  v44[21] = v45;
  v44[19] = v46;
  v44[20] = v43;
  v44[23] = *v43;
  return swift_task_switch();
}

uint64_t sub_1BAAE5AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unsigned __int8 v56;
  _OWORD v57[5];
  _QWORD v58[3];
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;

  v1 = *(_QWORD *)(v0 + 600);
  v2 = *(_QWORD *)(v0 + 592);
  v3 = *(_QWORD *)(v0 + 584);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 648);
  *(_QWORD *)(v0 + 232) = v4;
  *(_QWORD *)(v0 + 704) = v4;
  v5 = *(_QWORD *)(v0 + 400);
  v6 = *(_QWORD *)(v0 + 312);
  v7 = v4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v6, v5, v8);
  if (!swift_dynamicCast())
    goto LABEL_17;
  v10 = *(_QWORD *)(v0 + 40);
  v11 = *(unsigned __int8 *)(v0 + 48);
  if (v11 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v11);
LABEL_17:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v53 = *(_QWORD *)(v0 + 32);
  v54 = *(_QWORD *)(v0 + 16);
  v55 = *(_QWORD *)(v0 + 24);
  v12 = *(_QWORD *)(*(_QWORD *)(v0 + 264) + qword_1ED4767D8);
  v13 = type metadata accessor for FeedGroupEmitter(0, *(_QWORD *)(v0 + 312), *(_QWORD *)(v0 + 400), v9);
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  if (MEMORY[0x1BCCE37E4](v14, v13))
  {
    v15 = 0;
    do
    {
      v16 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v16 & 1) != 0)
      {
        result = swift_retain();
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
          goto LABEL_20;
      }
      else
      {
        result = sub_1BB873D08();
        v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_20:
          __break(1u);
LABEL_21:
          __break(1u);
          return result;
        }
      }
      v19 = sub_1BA4D7950();
      v21 = v20;
      swift_bridgeObjectRetain();
      v22 = sub_1BA6E35A8(v19, v21);
      LOBYTE(v19) = v23;
      swift_bridgeObjectRelease();
      if ((v19 & 1) != 0)
      {
        *(_QWORD *)&v57[0] = v12;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BA7F2580();
          v12 = *(_QWORD *)&v57[0];
        }
        swift_bridgeObjectRelease();
        sub_1BA81C280(v22, v12);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      ++v15;
    }
    while (v18 != MEMORY[0x1BCCE37E4](v10, v13));
  }
  v24 = *(_QWORD *)(v0 + 368);
  v25 = *(_QWORD *)(v0 + 344);
  v26 = *(_QWORD *)(v0 + 352);
  v27 = *(_QWORD *)(v0 + 336);
  v29 = *(_QWORD *)(v0 + 304);
  v28 = *(_QWORD *)(v0 + 312);
  v49 = *(_QWORD *)(v0 + 296);
  v51 = *(_QWORD *)(v0 + 264);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v27, 1, 1, v28);
  v56 = 7;
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  v30(v29, 1, 1, v25);
  v30(v49, 1, 1, v25);
  v31 = *(_QWORD *)(v51 + qword_1ED4767E0);
  v32 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitter<A>, v13);
  v33 = sub_1BA4CB9A0(v31, v10, v13, v32);
  result = swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v51 + qword_1ED4767F0);
  v35 = __OFADD__(v34, 1);
  v36 = v34 + 1;
  if (v35)
    goto LABEL_21;
  v37 = *(_QWORD *)(v0 + 400);
  v47 = v36;
  v48 = *(_QWORD *)(v0 + 336);
  v38 = *(_QWORD *)(v0 + 312);
  v50 = *(_QWORD *)(v0 + 328);
  v52 = *(_QWORD *)(v0 + 320);
  v39 = *(_QWORD *)(v0 + 296);
  v40 = *(_QWORD *)(v0 + 304);
  v41 = *(_QWORD *)(v0 + 264);
  memset(v57, 0, sizeof(v57));
  v42 = *(_QWORD *)(v41 + qword_1ED476790 + 16);
  v59 = *(_OWORD *)(v41 + qword_1ED476790);
  v60 = v42;
  v61 = v54;
  v62 = v55;
  v63 = v53;
  sub_1BA66AB08(&v59, &v61, v38, v37, v58);
  swift_bridgeObjectRelease();
  sub_1BA5B18CC(v55);
  v61 = v58[0];
  v62 = v58[1];
  v63 = v58[2];
  *(_QWORD *)&v59 = 0;
  WORD4(v59) = 256;
  v43 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v48, 0, &v56, v40, v39, 0, v33, 0, 0, 0, 0, v47, 0, 0, 1, 0, 1,
          v12,
          0,
          (uint64_t)v57,
          &v61,
          (uint64_t)&v59,
          0,
          0,
          0);
  *(_QWORD *)(v0 + 712) = v43;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750(v39);
  sub_1BA76D750(v40);
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v48, v52);
  v44 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v44;
  *v44 = v0;
  v44[1] = sub_1BAAE4750;
  v45 = *(_QWORD *)(v0 + 280);
  v46 = *(_QWORD *)(v0 + 248);
  v44[22] = *(_QWORD *)(v0 + 288);
  v44[21] = v45;
  v44[19] = v46;
  v44[20] = v43;
  v44[23] = *v43;
  return swift_task_switch();
}

uint64_t sub_1BAAE60BC()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE61F8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 744) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[43] + 8))(v2[47], v2[42]);
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BAAE6280()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 8))(*(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 616));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE6408()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 784) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[43] + 8))(v2[46], v2[42]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BAAE64B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = *(_QWORD **)v1;
  *(_QWORD *)(*(_QWORD *)v1 + 816) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(v2[43] + 8))(v2[45], v2[42]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_task_switch();
}

uint64_t sub_1BAAE6544()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 848) = v0;
  swift_task_dealloc();
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 + 344) + 8))(*(_QWORD *)(v2 + 352), *(_QWORD *)(v2 + 336));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1BAAE6714()
{
  uint64_t v0;

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE6874()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 880) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE68D8()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 856);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE6A44()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t KeyPath;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 v52;
  _BYTE v53[88];
  _QWORD v54[3];
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;

  swift_release();
  v1 = *(void **)(v0 + 720);
  *(_QWORD *)(v0 + 248) = v1;
  *(_QWORD *)(v0 + 856) = v1;
  v3 = *(_QWORD *)(v0 + 312);
  v2 = *(_QWORD *)(v0 + 320);
  v4 = v1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v3, v2, v5);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v6 = *(unsigned __int8 *)(v0 + 48);
  if (v6 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v6);
LABEL_6:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v36 = *(_QWORD *)(v0 + 32);
  v37 = *(_QWORD *)(v0 + 16);
  v38 = *(_QWORD *)(v0 + 24);
  v7 = *(_QWORD *)(v0 + 696);
  v8 = *(_QWORD *)(v0 + 688);
  v9 = *(_QWORD *)(v0 + 464);
  v43 = *(_QWORD *)(v0 + 432);
  v44 = *(_QWORD *)(v0 + 424);
  v40 = *(_QWORD *)(v0 + 416);
  v41 = *(_QWORD *)(v0 + 448);
  v42 = *(_QWORD *)(v0 + 392);
  v45 = *(_QWORD *)(v0 + 384);
  v47 = *(_QWORD *)(v0 + 672);
  v10 = *(_QWORD *)(v0 + 304);
  v39 = *(_QWORD *)(v0 + 312);
  v49 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 40);
  v11 = (_QWORD *)swift_task_alloc();
  v12 = *(_QWORD *)(v10 + 80);
  *v11 = v12;
  v11[1] = v9;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v14 = (_QWORD *)swift_task_alloc();
  v14[2] = v12;
  v14[3] = v9;
  v14[4] = KeyPath;
  v16 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED28C, (uint64_t)v14, v8, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v7, MEMORY[0x1E0DEDD18], v15);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  v17 = sub_1BA6E43EC(v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56))(v40, 1, 1, v39);
  v52 = 7;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
  v18(v42, 1, 1, v44);
  v18(v45, 1, 1, v44);
  *(_QWORD *)(v0 + 184) = v47;
  v19 = (_QWORD *)swift_task_alloc();
  v19[2] = v12;
  v19[3] = v9;
  v19[4] = v17;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v8);
  v20 = sub_1BB873DA4();
  swift_bridgeObjectRelease();
  result = swift_task_dealloc();
  v22 = *(_QWORD *)(v49 + qword_1ED4767F0);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    v48 = v24;
    v25 = *(_QWORD *)(v0 + 416);
    v26 = *(_QWORD *)(v0 + 392);
    v50 = *(_QWORD *)(v0 + 408);
    v51 = *(_QWORD *)(v0 + 400);
    v27 = *(_QWORD *)(v0 + 384);
    v28 = *(_QWORD *)(v0 + 280);
    v46 = *(_QWORD *)(v28 + qword_1ED4767E0);
    v29 = *(_QWORD *)(v0 + 312);
    v30 = *(_QWORD *)(v0 + 320);
    memset(v53, 0, 80);
    v31 = *(_QWORD *)(v28 + qword_1ED476790 + 16);
    v55 = *(_OWORD *)(v28 + qword_1ED476790);
    v56 = v31;
    v57 = v37;
    v58 = v38;
    v59 = v36;
    sub_1BA66AB08(&v55, &v57, v29, v30, v54);
    swift_bridgeObjectRelease();
    sub_1BA5B18CC(v38);
    v57 = v54[0];
    v58 = v54[1];
    v59 = v54[2];
    *(_QWORD *)&v55 = 0;
    WORD4(v55) = 256;
    v32 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v25, 0, &v52, v26, v27, v20, v46, 0, 0, 0, 0, v48, 0, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v53,
            &v57,
            (uint64_t)&v55,
            0,
            0,
            0);
    *(_QWORD *)(v0 + 864) = v32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA76D750(v27);
    sub_1BA76D750(v26);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v25, v51);
    v33 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v33;
    *v33 = v0;
    v33[1] = sub_1BAAE6874;
    v34 = *(_QWORD *)(v0 + 288);
    v35 = *(_QWORD *)(v0 + 272);
    v33[22] = *(_QWORD *)(v0 + 296);
    v33[21] = v34;
    v33[19] = v35;
    v33[20] = v32;
    v33[23] = *v32;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_1BAAE6FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  _BYTE v56[88];
  _QWORD v57[3];
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 8))(*(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 616));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 784);
  *(_QWORD *)(v0 + 248) = v4;
  *(_QWORD *)(v0 + 856) = v4;
  v6 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 320);
  v7 = v4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v6, v5, v8);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v9 = *(unsigned __int8 *)(v0 + 48);
  if (v9 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v9);
LABEL_6:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v39 = *(_QWORD *)(v0 + 32);
  v40 = *(_QWORD *)(v0 + 16);
  v41 = *(_QWORD *)(v0 + 24);
  v10 = *(_QWORD *)(v0 + 696);
  v11 = *(_QWORD *)(v0 + 688);
  v12 = *(_QWORD *)(v0 + 464);
  v46 = *(_QWORD *)(v0 + 432);
  v47 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 448);
  v45 = *(_QWORD *)(v0 + 392);
  v48 = *(_QWORD *)(v0 + 384);
  v50 = *(_QWORD *)(v0 + 672);
  v13 = *(_QWORD *)(v0 + 304);
  v42 = *(_QWORD *)(v0 + 312);
  v52 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 40);
  v14 = (_QWORD *)swift_task_alloc();
  v15 = *(_QWORD *)(v13 + 80);
  *v14 = v15;
  v14[1] = v12;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v17 = (_QWORD *)swift_task_alloc();
  v17[2] = v15;
  v17[3] = v12;
  v17[4] = KeyPath;
  v19 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED28C, (uint64_t)v17, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  v20 = sub_1BA6E43EC(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v43, 1, 1, v42);
  v55 = 7;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
  v21(v45, 1, 1, v47);
  v21(v48, 1, 1, v47);
  *(_QWORD *)(v0 + 184) = v50;
  v22 = (_QWORD *)swift_task_alloc();
  v22[2] = v15;
  v22[3] = v12;
  v22[4] = v20;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v11);
  v23 = sub_1BB873DA4();
  swift_bridgeObjectRelease();
  result = swift_task_dealloc();
  v25 = *(_QWORD *)(v52 + qword_1ED4767F0);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    v51 = v27;
    v28 = *(_QWORD *)(v0 + 416);
    v29 = *(_QWORD *)(v0 + 392);
    v53 = *(_QWORD *)(v0 + 408);
    v54 = *(_QWORD *)(v0 + 400);
    v30 = *(_QWORD *)(v0 + 384);
    v31 = *(_QWORD *)(v0 + 280);
    v49 = *(_QWORD *)(v31 + qword_1ED4767E0);
    v32 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 320);
    memset(v56, 0, 80);
    v34 = *(_QWORD *)(v31 + qword_1ED476790 + 16);
    v58 = *(_OWORD *)(v31 + qword_1ED476790);
    v59 = v34;
    v60 = v40;
    v61 = v41;
    v62 = v39;
    sub_1BA66AB08(&v58, &v60, v32, v33, v57);
    swift_bridgeObjectRelease();
    sub_1BA5B18CC(v41);
    v60 = v57[0];
    v61 = v57[1];
    v62 = v57[2];
    *(_QWORD *)&v58 = 0;
    WORD4(v58) = 256;
    v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v28, 0, &v55, v29, v30, v23, v49, 0, 0, 0, 0, v51, 0, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v56,
            &v60,
            (uint64_t)&v58,
            0,
            0,
            0);
    *(_QWORD *)(v0 + 864) = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA76D750(v30);
    sub_1BA76D750(v29);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v28, v54);
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v36;
    *v36 = v0;
    v36[1] = sub_1BAAE6874;
    v37 = *(_QWORD *)(v0 + 288);
    v38 = *(_QWORD *)(v0 + 272);
    v36[22] = *(_QWORD *)(v0 + 296);
    v36[21] = v37;
    v36[19] = v38;
    v36[20] = v35;
    v36[23] = *v35;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_1BAAE75D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  _BYTE v56[88];
  _QWORD v57[3];
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 8))(*(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 616));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 816);
  *(_QWORD *)(v0 + 248) = v4;
  *(_QWORD *)(v0 + 856) = v4;
  v6 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 320);
  v7 = v4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v6, v5, v8);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v9 = *(unsigned __int8 *)(v0 + 48);
  if (v9 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v9);
LABEL_6:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v39 = *(_QWORD *)(v0 + 32);
  v40 = *(_QWORD *)(v0 + 16);
  v41 = *(_QWORD *)(v0 + 24);
  v10 = *(_QWORD *)(v0 + 696);
  v11 = *(_QWORD *)(v0 + 688);
  v12 = *(_QWORD *)(v0 + 464);
  v46 = *(_QWORD *)(v0 + 432);
  v47 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 448);
  v45 = *(_QWORD *)(v0 + 392);
  v48 = *(_QWORD *)(v0 + 384);
  v50 = *(_QWORD *)(v0 + 672);
  v13 = *(_QWORD *)(v0 + 304);
  v42 = *(_QWORD *)(v0 + 312);
  v52 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 40);
  v14 = (_QWORD *)swift_task_alloc();
  v15 = *(_QWORD *)(v13 + 80);
  *v14 = v15;
  v14[1] = v12;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v17 = (_QWORD *)swift_task_alloc();
  v17[2] = v15;
  v17[3] = v12;
  v17[4] = KeyPath;
  v19 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED28C, (uint64_t)v17, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  v20 = sub_1BA6E43EC(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v43, 1, 1, v42);
  v55 = 7;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
  v21(v45, 1, 1, v47);
  v21(v48, 1, 1, v47);
  *(_QWORD *)(v0 + 184) = v50;
  v22 = (_QWORD *)swift_task_alloc();
  v22[2] = v15;
  v22[3] = v12;
  v22[4] = v20;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v11);
  v23 = sub_1BB873DA4();
  swift_bridgeObjectRelease();
  result = swift_task_dealloc();
  v25 = *(_QWORD *)(v52 + qword_1ED4767F0);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    v51 = v27;
    v28 = *(_QWORD *)(v0 + 416);
    v29 = *(_QWORD *)(v0 + 392);
    v53 = *(_QWORD *)(v0 + 408);
    v54 = *(_QWORD *)(v0 + 400);
    v30 = *(_QWORD *)(v0 + 384);
    v31 = *(_QWORD *)(v0 + 280);
    v49 = *(_QWORD *)(v31 + qword_1ED4767E0);
    v32 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 320);
    memset(v56, 0, 80);
    v34 = *(_QWORD *)(v31 + qword_1ED476790 + 16);
    v58 = *(_OWORD *)(v31 + qword_1ED476790);
    v59 = v34;
    v60 = v40;
    v61 = v41;
    v62 = v39;
    sub_1BA66AB08(&v58, &v60, v32, v33, v57);
    swift_bridgeObjectRelease();
    sub_1BA5B18CC(v41);
    v60 = v57[0];
    v61 = v57[1];
    v62 = v57[2];
    *(_QWORD *)&v58 = 0;
    WORD4(v58) = 256;
    v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v28, 0, &v55, v29, v30, v23, v49, 0, 0, 0, 0, v51, 0, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v56,
            &v60,
            (uint64_t)&v58,
            0,
            0,
            0);
    *(_QWORD *)(v0 + 864) = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA76D750(v30);
    sub_1BA76D750(v29);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v28, v54);
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v36;
    *v36 = v0;
    v36[1] = sub_1BAAE6874;
    v37 = *(_QWORD *)(v0 + 288);
    v38 = *(_QWORD *)(v0 + 272);
    v36[22] = *(_QWORD *)(v0 + 296);
    v36[21] = v37;
    v36[19] = v38;
    v36[20] = v35;
    v36[23] = *v35;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_1BAAE7BB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t KeyPath;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t, uint64_t);
  _QWORD *v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 v55;
  _BYTE v56[88];
  _QWORD v57[3];
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;

  v1 = *(_QWORD *)(v0 + 656);
  v2 = *(_QWORD *)(v0 + 648);
  v3 = *(_QWORD *)(v0 + 328);
  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 624) + 8))(*(_QWORD *)(v0 + 640), *(_QWORD *)(v0 + 616));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  v4 = *(void **)(v0 + 744);
  *(_QWORD *)(v0 + 248) = v4;
  *(_QWORD *)(v0 + 856) = v4;
  v6 = *(_QWORD *)(v0 + 312);
  v5 = *(_QWORD *)(v0 + 320);
  v7 = v4;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  type metadata accessor for FeedServiceError(0, v6, v5, v8);
  if (!swift_dynamicCast())
    goto LABEL_6;
  v9 = *(unsigned __int8 *)(v0 + 48);
  if (v9 != 1)
  {
    sub_1BAAECD38(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v9);
LABEL_6:
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v39 = *(_QWORD *)(v0 + 32);
  v40 = *(_QWORD *)(v0 + 16);
  v41 = *(_QWORD *)(v0 + 24);
  v10 = *(_QWORD *)(v0 + 696);
  v11 = *(_QWORD *)(v0 + 688);
  v12 = *(_QWORD *)(v0 + 464);
  v46 = *(_QWORD *)(v0 + 432);
  v47 = *(_QWORD *)(v0 + 424);
  v43 = *(_QWORD *)(v0 + 416);
  v44 = *(_QWORD *)(v0 + 448);
  v45 = *(_QWORD *)(v0 + 392);
  v48 = *(_QWORD *)(v0 + 384);
  v50 = *(_QWORD *)(v0 + 672);
  v13 = *(_QWORD *)(v0 + 304);
  v42 = *(_QWORD *)(v0 + 312);
  v52 = *(_QWORD *)(v0 + 280);
  *(_QWORD *)(v0 + 240) = *(_QWORD *)(v0 + 40);
  v14 = (_QWORD *)swift_task_alloc();
  v15 = *(_QWORD *)(v13 + 80);
  *v14 = v15;
  v14[1] = v12;
  KeyPath = swift_getKeyPath();
  swift_task_dealloc();
  v17 = (_QWORD *)swift_task_alloc();
  v17[2] = v15;
  v17[3] = v12;
  v17[4] = KeyPath;
  v19 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED28C, (uint64_t)v17, v11, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], v10, MEMORY[0x1E0DEDD18], v18);
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  v20 = sub_1BA6E43EC(v19);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(v43, 1, 1, v42);
  v55 = 7;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 56);
  v21(v45, 1, 1, v47);
  v21(v48, 1, 1, v47);
  *(_QWORD *)(v0 + 184) = v50;
  v22 = (_QWORD *)swift_task_alloc();
  v22[2] = v15;
  v22[3] = v12;
  v22[4] = v20;
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF60], v11);
  v23 = sub_1BB873DA4();
  swift_bridgeObjectRelease();
  result = swift_task_dealloc();
  v25 = *(_QWORD *)(v52 + qword_1ED4767F0);
  v26 = __OFADD__(v25, 1);
  v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    v51 = v27;
    v28 = *(_QWORD *)(v0 + 416);
    v29 = *(_QWORD *)(v0 + 392);
    v53 = *(_QWORD *)(v0 + 408);
    v54 = *(_QWORD *)(v0 + 400);
    v30 = *(_QWORD *)(v0 + 384);
    v31 = *(_QWORD *)(v0 + 280);
    v49 = *(_QWORD *)(v31 + qword_1ED4767E0);
    v32 = *(_QWORD *)(v0 + 312);
    v33 = *(_QWORD *)(v0 + 320);
    memset(v56, 0, 80);
    v34 = *(_QWORD *)(v31 + qword_1ED476790 + 16);
    v58 = *(_OWORD *)(v31 + qword_1ED476790);
    v59 = v34;
    v60 = v40;
    v61 = v41;
    v62 = v39;
    sub_1BA66AB08(&v58, &v60, v32, v33, v57);
    swift_bridgeObjectRelease();
    sub_1BA5B18CC(v41);
    v60 = v57[0];
    v61 = v57[1];
    v62 = v57[2];
    *(_QWORD *)&v58 = 0;
    WORD4(v58) = 256;
    v35 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v28, 0, &v55, v29, v30, v23, v49, 0, 0, 0, 0, v51, 0, 0, 1, 0, 1,
            0,
            0,
            (uint64_t)v56,
            &v60,
            (uint64_t)&v58,
            0,
            0,
            0);
    *(_QWORD *)(v0 + 864) = v35;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA76D750(v30);
    sub_1BA76D750(v29);
    (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v28, v54);
    v36 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 872) = v36;
    *v36 = v0;
    v36[1] = sub_1BAAE6874;
    v37 = *(_QWORD *)(v0 + 288);
    v38 = *(_QWORD *)(v0 + 272);
    v36[22] = *(_QWORD *)(v0 + 296);
    v36[21] = v37;
    v36[19] = v38;
    v36[20] = v35;
    v36[23] = *v35;
    return swift_task_switch();
  }
  return result;
}

uint64_t sub_1BAAE818C()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 856);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE8300()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitter(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  return sub_1BB872E68();
}

uint64_t sub_1BAAE8380(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;

  *(double *)(v9 + 176) = a9;
  *(_QWORD *)(v9 + 160) = a8;
  *(_QWORD *)(v9 + 168) = v13;
  *(_QWORD *)(v9 + 144) = a6;
  *(_QWORD *)(v9 + 152) = a7;
  *(_QWORD *)(v9 + 128) = a4;
  *(_QWORD *)(v9 + 136) = a5;
  *(_BYTE *)(v9 + 272) = a3;
  *(_QWORD *)(v9 + 112) = a1;
  *(_QWORD *)(v9 + 120) = a2;
  v10 = *a7;
  *(_QWORD *)(v9 + 184) = *a7;
  *(_QWORD *)(v9 + 192) = *v13;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  *(_QWORD *)(v9 + 200) = swift_task_alloc();
  *(_QWORD *)(v9 + 208) = swift_task_alloc();
  *(_QWORD *)(v9 + 216) = *(_QWORD *)(v10 + 80);
  v11 = sub_1BB873A2C();
  *(_QWORD *)(v9 + 224) = v11;
  *(_QWORD *)(v9 + 232) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v9 + 240) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE845C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  uint64_t v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t (*v75)(void);
  uint64_t v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t **v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unsigned __int8 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int16 v108;

  v5 = *(_QWORD *)(v4 + 216);
  v6 = *(_QWORD *)(v4 + 184);
  v7 = *(_QWORD *)(v4 + 152);
  v8 = *(_BYTE *)(v4 + 272);
  v9 = FeedCursor.nextSlotIndex.getter(a1, a2, a3, a4);
  v10 = *(_QWORD *)(v7 + qword_1ED4767E0);
  v88 = *(_QWORD *)(v6 + 88);
  v12 = type metadata accessor for FeedGroupEmitter(255, v5, v88, v11);
  sub_1BB872EE0();
  *(_QWORD *)(v4 + 96) = nullsub_1(v10);
  *(_QWORD *)(swift_task_alloc() + 16) = v9;
  v13 = sub_1BB8727E4();
  swift_bridgeObjectRetain();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DE9ED0], v13);
  v14 = sub_1BB872C7C();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0 && (v14 & 1) == 0)
  {
    v15 = *(_QWORD *)(v4 + 160);
    v16 = *(_QWORD *)(v4 + 168);
    v17 = sub_1BB87330C();
    sub_1BB86EF44("Service has no active or slotted emitters remaining, will end the feed", 70, 2, &dword_1BA493000, v15, v17, MEMORY[0x1E0DEE9D8]);
    sub_1BAAECCA4(v16 + 112, v4 + 56);
    if (*(_QWORD *)(v4 + 80))
    {
      sub_1BA4CECCC((__int128 *)(v4 + 56), v4 + 16);
      v18 = *(_QWORD *)(v4 + 40);
      v19 = *(_QWORD *)(v4 + 48);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), v18);
      if (FeedOfflineProviding.isOffline.getter(v18, v19))
      {
        FeedCursor.feedMode.getter(&v96);
        if (v96 == 1)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          v48 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v48 & 1) == 0)
          {
            v76 = type metadata accessor for FeedServiceError(0, *(_QWORD *)(v4 + 216), v88, v49);
            MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v76);
            swift_allocError();
            *(_QWORD *)v77 = 2;
            *(_QWORD *)(v77 + 8) = 0;
            *(_QWORD *)(v77 + 16) = 0;
            *(_QWORD *)(v77 + 24) = 0;
            *(_BYTE *)(v77 + 32) = 6;
            swift_willThrow();
            __swift_destroy_boxed_opaque_existential_1(v4 + 16);
            swift_task_dealloc();
            swift_task_dealloc();
            swift_task_dealloc();
            v75 = *(uint64_t (**)(void))(v4 + 8);
            return v75();
          }
        }
      }
      __swift_destroy_boxed_opaque_existential_1(v4 + 16);
    }
    else
    {
      sub_1BA65DBBC(v4 + 56, &qword_1ED3B1DE0, &qword_1ED3B1DD8, (uint64_t)&protocol descriptor for FeedOfflineProviding);
    }
    swift_bridgeObjectRetain();
    v50 = sub_1BB872748();
    v94 = v50;
    v51 = swift_bridgeObjectRetain();
    if (MEMORY[0x1BCCE37E4](v51, v12))
    {
      v52 = 0;
      v53 = *(_QWORD *)(v4 + 136);
      v54 = *(_QWORD *)(v4 + 128) + 32;
      while (1)
      {
        v55 = sub_1BB872E80();
        sub_1BB872E38();
        if ((v55 & 1) != 0)
        {
          v56 = *(_QWORD *)(v54 + 8 * v52);
          result = swift_retain();
          v57 = v52 + 1;
          if (__OFADD__(v52, 1))
            goto LABEL_32;
        }
        else
        {
          result = sub_1BB873D08();
          v56 = result;
          v57 = v52 + 1;
          if (__OFADD__(v52, 1))
          {
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            return result;
          }
        }
        if ((sub_1BB2ECB50() & 1) != 0)
        {
          *(_QWORD *)(v4 + 104) = v56;
          sub_1BB872EB0();
        }
        else
        {
          v58 = sub_1BA4D7950();
          v60 = v59;
          swift_bridgeObjectRetain();
          v61 = sub_1BA6E35A8(v58, v60);
          LOBYTE(v58) = v62;
          swift_bridgeObjectRelease();
          if ((v58 & 1) != 0)
          {
            isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(_QWORD *)&v96 = v53;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_1BA7F2580();
              v53 = v96;
            }
            swift_bridgeObjectRelease();
            sub_1BA81C280(v61, v53);
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_release();
          }
        }
        ++v52;
        if (v57 == MEMORY[0x1BCCE37E4](*(_QWORD *)(v4 + 128), v12))
        {
          v50 = v94;
          goto LABEL_29;
        }
      }
    }
    v53 = *(_QWORD *)(v4 + 136);
LABEL_29:
    v64 = *(_QWORD *)(v4 + 240);
    v65 = *(_QWORD *)(v4 + 216);
    v91 = *(_QWORD *)(v4 + 224);
    v66 = *(_QWORD *)(v4 + 200);
    v67 = *(_QWORD *)(v4 + 208);
    v82 = v64;
    v68 = *(_QWORD *)(v4 + 192);
    v69 = *(_QWORD *)(v4 + 152);
    v83 = *(_QWORD *)(v4 + 144);
    v80 = *(_QWORD *)(v4 + 120);
    v85 = *(uint64_t ***)(v4 + 112);
    v87 = *(_QWORD *)(v4 + 232);
    swift_bridgeObjectRelease();
    v84 = v65;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
    v95 = 7;
    v70 = sub_1BB86C8B0();
    v71 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 56);
    v71(v67, 1, 1, v70);
    v71(v66, 1, 1, v70);
    v81 = sub_1BB872E68();
    swift_getTupleTypeMetadata2();
    sub_1BB872E68();
    v72 = sub_1BB8727CC();
    v99 = 0u;
    v100 = 0u;
    v97 = 0u;
    v98 = 0u;
    v96 = 0u;
    sub_1BAAE8EF4(v80, v69, *(_QWORD *)(v68 + 88), &v101);
    v93 = v101;
    v104 = v101;
    v105 = v102;
    v106 = v103;
    v107 = 0;
    v108 = 256;
    v73 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v82, 0, &v95, v67, v66, v81, v72, v83, v50, 0, 0, 0, 1, 0, 1, 0, 1,
            v53,
            0,
            (uint64_t)&v96,
            &v104,
            (uint64_t)&v107,
            0,
            0,
            0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BAAED468(v93);
    sub_1BA76D750(v66);
    sub_1BA76D750(v67);
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v82, v91);
    *v85 = v73;
    type metadata accessor for FeedServiceFetchResult.Internal(0, v84, v88, v74);
    swift_storeEnumTagMultiPayload();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v75 = *(uint64_t (**)(void))(v4 + 8);
    return v75();
  }
  v20 = *(_QWORD *)(v4 + 240);
  v21 = *(_QWORD *)(v4 + 208);
  v22 = *(_QWORD *)(v4 + 216);
  v23 = *(_QWORD *)(v4 + 200);
  v24 = *(_QWORD *)(v4 + 152);
  v25 = *(_BYTE *)(v4 + 272);
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
  v27 = MEMORY[0x1E0DEAFA0];
  v28 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v26 + 56) = MEMORY[0x1E0DEAFA0];
  *(_QWORD *)(v26 + 64) = v28;
  *(_BYTE *)(v26 + 32) = v14 & 1;
  *(_QWORD *)(v26 + 96) = v27;
  *(_QWORD *)(v26 + 104) = v28;
  *(_BYTE *)(v26 + 72) = v25;
  sub_1BB87330C();
  sub_1BB86EF44("Found no emitter for this slot, skipping slot, moreSlottedEmitters=%d, waitingForEndOfFeed=%d", v78, v79);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v20, 1, 1, v22);
  LOBYTE(v94) = 7;
  v29 = sub_1BB86C8B0();
  v30 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56);
  v30(v21, 1, 1, v29);
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v30)(v23, 1, 1, v29);
  v32 = *(_QWORD *)(v24 + qword_1ED4767F0);
  v33 = __OFADD__(v32, 1);
  v34 = v32 + 1;
  if (v33)
    goto LABEL_33;
  v89 = v34;
  v35 = *(_QWORD *)(v4 + 240);
  v90 = *(_QWORD *)(v4 + 232);
  v92 = *(_QWORD *)(v4 + 224);
  v37 = *(_QWORD *)(v4 + 200);
  v36 = *(_QWORD *)(v4 + 208);
  v38 = *(_QWORD *)(v4 + 192);
  v40 = *(_QWORD *)(v4 + 144);
  v39 = *(_QWORD *)(v4 + 152);
  v41 = *(_QWORD *)(v4 + 136);
  v86 = *(_QWORD *)(v4 + 128);
  v42 = *(_QWORD *)(v4 + 120);
  v99 = 0u;
  v100 = 0u;
  v97 = 0u;
  v98 = 0u;
  v96 = 0u;
  sub_1BAAE8EF4(v42, v39, *(_QWORD *)(v38 + 88), &v101);
  v43 = v101;
  v104 = v101;
  v105 = v102;
  v106 = v103;
  v107 = 0;
  v108 = 256;
  v44 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, v35, 0, (unsigned __int8 *)&v94, v36, v37, v86, 0, v40, 0, 0, 0, v89, 0, 0, 1, 0, 1,
          v41,
          0,
          (uint64_t)&v96,
          &v104,
          (uint64_t)&v107,
          0,
          0,
          0);
  *(_QWORD *)(v4 + 248) = v44;
  sub_1BAAED468(v43);
  sub_1BA76D750(v37);
  sub_1BA76D750(v36);
  (*(void (**)(uint64_t, uint64_t))(v90 + 8))(v35, v92);
  v45 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 256) = v45;
  *v45 = v4;
  v45[1] = sub_1BAAE8DE8;
  v46 = *(_QWORD *)(v4 + 176);
  v47 = *(_QWORD *)(v4 + 112);
  v45[22] = *(_QWORD *)(v4 + 168);
  v45[21] = v46;
  v45[19] = v47;
  v45[20] = v44;
  v45[23] = *v44;
  return swift_task_switch();
}

uint64_t sub_1BAAE8DE8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 264) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BAAE8E4C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE8E9C()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BAAE8EF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26[3];
  __int128 v27;
  uint64_t v28;
  _QWORD v29[3];

  v7 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  v25 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v8 = type metadata accessor for FeedChosenEmitterResult(255, v25, v7, a3);
  v9 = sub_1BB873A2C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v26[-1] - v12;
  v14 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v26[-1] - v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    v17 = *(_QWORD *)(a2 + qword_1ED476790);
    v18 = *(_QWORD *)(a2 + qword_1ED476790 + 8);
    v19 = *(_QWORD *)(a2 + qword_1ED476790 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    result = swift_bridgeObjectRetain();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v13, v8);
    v21 = *(_QWORD *)(a2 + qword_1ED476790 + 16);
    v27 = *(_OWORD *)(a2 + qword_1ED476790);
    v28 = v21;
    v22 = (uint64_t *)&v16[*(int *)(v8 + 36)];
    v23 = v22[1];
    v24 = v22[2];
    v26[0] = *v22;
    v26[1] = v23;
    v26[2] = v24;
    sub_1BA66AB08(&v27, v26, v25, v7, v29);
    result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v8);
    v17 = v29[0];
    v18 = v29[1];
    v19 = v29[2];
  }
  *a4 = v17;
  a4[1] = v18;
  a4[2] = v19;
  return result;
}

_BYTE *sub_1BAAE90B4(_BYTE *result, uint64_t a2)
{
  uint64_t v3;

  if (*result == 1)
  {
    v3 = sub_1BB87330C();
    sub_1BB86EF44("Gap on screen; resolve gap promise", 34, 2, &dword_1BA493000, a2, v3, MEMORY[0x1E0DEE9D8]);
    swift_beginAccess();
    result = (_BYTE *)swift_weakLoadStrong();
    if (result)
    {
      sub_1BB86E674();
      return (_BYTE *)swift_release();
    }
  }
  return result;
}

uint64_t sub_1BAAE9148(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  v3 = sub_1BB87330C();
  sub_1BB86EF44("Next revision was committed; resolve gap promise",
    48,
    2,
    &dword_1BA493000,
    a2,
    v3,
    MEMORY[0x1E0DEE9D8]);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v8 = type metadata accessor for FeedServiceError(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v8);
    v9 = (void *)swift_allocError();
    *(_QWORD *)v10 = 12;
    *(_QWORD *)(v10 + 8) = 0;
    *(_QWORD *)(v10 + 16) = 0;
    *(_QWORD *)(v10 + 24) = 0;
    *(_BYTE *)(v10 + 32) = 6;
    sub_1BB86E65C();

    return swift_release();
  }
  return result;
}

uint64_t sub_1BAAE9284@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void *v18;
  char v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v25[4];
  char v26;

  v8 = *a2;
  v9 = *a1;
  v10 = sub_1BA4D7950();
  v12 = v11;
  result = MEMORY[0x1BCCDEF84]();
  if (result)
  {
    v14 = FeedCursor.nextEmitterCursor(for:isLast:slots:gapPromise:)(v10, v12, a3 & 1, a4, result);
    swift_bridgeObjectRelease();
    swift_release();
    type metadata accessor for FeedGroupEmitTask(0, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88), v15);
    v16 = *(_QWORD *)(a5 + 32);
    v18 = *(void **)(a5 + 40);
    v17 = *(void **)(a5 + 48);
    v19 = *(_BYTE *)(a5 + 56);
    v25[0] = *(_QWORD *)(a5 + 24);
    v25[1] = v16;
    v25[2] = (uint64_t)v18;
    v25[3] = (uint64_t)v17;
    v26 = v19;
    swift_bridgeObjectRetain();
    v20 = v18;
    v21 = v17;
    swift_retain();
    v22 = sub_1BA5EF938(v25, v9, v14);
    swift_release();
    result = swift_release();
    *a6 = v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAAE939C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitTask.Result(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  v3 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v3);
  if ((sub_1BB872C7C() & 1) != 0)
  {
    sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_getTupleTypeMetadata2();
    sub_1BB86EAAC();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BB86E9D4();
  }
  else
  {
    v6 = type metadata accessor for FeedServiceError(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v6);
    swift_allocError();
    *(_QWORD *)v7 = 11;
    *(_QWORD *)(v7 + 8) = 0;
    *(_QWORD *)(v7 + 16) = 0;
    *(_QWORD *)(v7 + 24) = 0;
    *(_BYTE *)(v7 + 32) = 6;
    return swift_willThrow();
  }
}

uint64_t sub_1BAAE955C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v4 = sub_1BB87330C();
  sub_1BB86EF44("Service had no emitters in the fast group that emitted a group. Falling back to the slow group.", 95, 2, &dword_1BA493000, a3, v4, MEMORY[0x1E0DEE9D8]);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  v12 = sub_1BB86ECBC();
  v13 = sub_1BB86ECBC();
  sub_1BB872EE0();
  sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  swift_getTupleTypeMetadata2();
  sub_1BB86EC14();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v12;
  *(_QWORD *)(v8 + 24) = v13;
  swift_retain();
  swift_retain();
  v9 = (void *)sub_1BB86E854();
  v10 = sub_1BB86E980();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1BAAE9764(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  swift_allocObject();
  v4 = sub_1BB872E2C();
  *v5 = a1;
  v5[1] = a2;
  sub_1BA69C794(v4);
  swift_retain();
  swift_retain();
  v6 = sub_1BB86E944();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1BAAE9814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  void *v12;

  v2 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitTask.Result(255, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v7 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v7);
  v8 = sub_1BB872C7C();
  if ((v8 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1BB86E9D4();
  }
  else
  {
    MEMORY[0x1E0C80A78](v8);
    sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    swift_getTupleTypeMetadata2();
    swift_getTupleTypeMetadata2();
    sub_1BB86EC14();
    v10 = swift_allocObject();
    *(_QWORD *)(v10 + 16) = v2;
    *(_QWORD *)(v10 + 24) = v3;
    v11 = (_QWORD *)swift_allocObject();
    v11[2] = v2;
    v11[3] = v3;
    v11[4] = sub_1BAAED1F4;
    v11[5] = v10;
    v12 = (void *)sub_1BB86E854();
    v9 = sub_1BB86E968();
    swift_release();
    swift_release();

  }
  return v9;
}

uint64_t sub_1BAAE9A64()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitTask.Result(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  v3 = sub_1BB872EE0();
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v3);
  sub_1BB872C7C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], v4);
  swift_getTupleTypeMetadata2();
  sub_1BB86EAAC();
  return sub_1BB86E9D4();
}

BOOL sub_1BAAE9BD4()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2 = swift_getAssociatedTypeWitness();
  v3 = sub_1BB873A2C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v10 - v5;
  type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  sub_1BA66D73C();
  v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(v6, 1, v2) != 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t sub_1BAAE9D50()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedGroupEmitTask(255, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  v3 = sub_1BB872EE0();
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8];
  type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v3);
  sub_1BB872BF8();
  sub_1BB872EE0();
  sub_1BA5B089C(255, (unint64_t *)&qword_1ED3B9670, (unint64_t *)&qword_1ED3BA030, MEMORY[0x1E0DEDAF0], v4);
  swift_getTupleTypeMetadata2();
  sub_1BB86EAAC();
  swift_bridgeObjectRetain();
  return sub_1BB86E9D4();
}

uint64_t sub_1BAAE9EC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for FeedGroupEmitTask.State(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - v7;
  sub_1BA5F12C8();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 3)
  {
    if (!EnumCaseMultiPayload)
    {
      v11 = type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
      v12 = *(_QWORD *)(v11 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a1, v8, v11);
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v14 = type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a1, 1, 1, v14);
}

uint64_t sub_1BAAEA048(uint64_t a1, uint64_t a2, uint64_t a3, double a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t result;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  BOOL v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  CFTimeInterval v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  CFTimeInterval v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  __int128 v127;
  unint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  double v139;
  uint64_t v140;
  uint64_t v141;

  v121 = a9;
  v113 = a8;
  v134 = a2;
  v135 = a6;
  v128 = a7;
  v13 = *(_QWORD *)(*(_QWORD *)a7 + 80);
  v12 = *(_QWORD *)(*(_QWORD *)a7 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v132 = v12;
  v136 = v13;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v133 = type metadata accessor for FeedChosenEmitterResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v16);
  v17 = *(_QWORD *)(v133 - 8);
  v18 = MEMORY[0x1E0C80A78](v133);
  v119 = (char *)&v113 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v120 = (uint64_t)&v113 - v20;
  v22 = type metadata accessor for FeedScoredResult(255, AssociatedTypeWitness, AssociatedConformanceWitness, v21);
  v116 = sub_1BB873A2C();
  v115 = *(_QWORD *)(v116 - 8);
  v23 = MEMORY[0x1E0C80A78](v116);
  v129 = (char *)&v113 - v24;
  v130 = *(_QWORD *)(v22 - 8);
  v131 = v22;
  v25 = MEMORY[0x1E0C80A78](v23);
  v117 = (char *)&v113 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v118 = (char *)&v113 - v27;
  v137 = a3;
  v29 = type metadata accessor for FeedGroupEmitTask(255, AssociatedTypeWitness, AssociatedConformanceWitness, v28);
  *(_QWORD *)&v127 = sub_1BB872EE0();
  sub_1BAAEAC98((uint64_t)&v137, (uint64_t)nullsub_1, 0, v127, MEMORY[0x1E0DEDCE8], MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DEDD18], v30);
  v125 = 0;
  sub_1BB86E650();
  v32 = type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v31);
  v126 = a1;
  result = MEMORY[0x1BCCE37B4](a1, v32);
  v34 = *(_QWORD *)(v134 + 16);
  v35 = result + v34;
  if (__OFADD__(result, v34))
  {
    __break(1u);
    goto LABEL_15;
  }
  v36 = v134;
  v114 = v17;
  v124 = a3;
  v37 = MEMORY[0x1BCCE37B4](a3, v29);
  v38 = v136;
  if (v35 < v37)
  {
    v39 = v37;
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
    if (!__OFSUB__(v39, v35))
    {
      *(_QWORD *)(result + 56) = MEMORY[0x1E0DEB418];
      *(_QWORD *)(result + 64) = MEMORY[0x1E0DEB490];
      *(_QWORD *)(result + 32) = v39 - v35;
      sub_1BB87330C();
      sub_1BB86EF44("Service skipped %d tasks that were too slow", v113);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
LABEL_15:
    __break(1u);
    return result;
  }
LABEL_5:
  v122 = AssociatedConformanceWitness;
  v123 = AssociatedTypeWitness;
  v40 = MEMORY[0x1E0DEA968];
  if (v34)
  {
    v41 = sub_1BB8732F4();
    sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1BB87CE70;
    v43 = sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    v44 = MEMORY[0x1BCCE36DC](v36, v43);
    v46 = v45;
    *(_QWORD *)(v42 + 56) = v40;
    *(_QWORD *)(v42 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v42 + 32) = v44;
    *(_QWORD *)(v42 + 40) = v46;
    sub_1BB86EF44("Service had some emitters fail to create groups, errors=%{public}@", 66, 2, &dword_1BA493000, v135, v41, v42);
    swift_bridgeObjectRelease();
  }
  v141 = v126;
  v140 = sub_1BB87273C();
  MEMORY[0x1E0C80A78](v140);
  *(&v113 - 2) = v38;
  v47 = v132;
  *(&v113 - 1) = v132;
  v48 = sub_1BB872EE0();
  sub_1BB872814();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v48);
  v49 = sub_1BB872C40();
  v50 = v137;
  LOBYTE(v140) = 0;
  v137 = v124;
  MEMORY[0x1E0C80A78](v49);
  *(&v113 - 4) = v136;
  *(&v113 - 3) = v47;
  *(&v113 - 2) = v50;
  *(&v113 - 1) = (uint64_t)&v140;
  v51 = v127;
  v52 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v127);
  v54 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED0A8, (uint64_t)(&v113 - 6), v51, v32, MEMORY[0x1E0DEDCE8], v52, MEMORY[0x1E0DEDD18], v53);
  v55 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v55);
  *(&v113 - 2) = v136;
  *(&v113 - 1) = v47;
  v56 = sub_1BB872DD8() > 1;
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v58 = v57;
  v59 = swift_allocObject();
  v60 = MEMORY[0x1E0DEAFA0];
  v127 = xmmword_1BB87CE70;
  *(_OWORD *)(v59 + 16) = xmmword_1BB87CE70;
  v61 = MEMORY[0x1E0DEAFD8];
  *(_QWORD *)(v59 + 56) = v60;
  *(_QWORD *)(v59 + 64) = v61;
  *(_BYTE *)(v59 + 32) = v56;
  sub_1BB87330C();
  sub_1BB86EF44("Service should attempt to score groups, shouldScore=%d", v113);
  v62 = swift_bridgeObjectRelease();
  v137 = v54;
  MEMORY[0x1E0C80A78](v62);
  *(&v113 - 2) = v128;
  *((_BYTE *)&v113 - 8) = v56;
  v63 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v48);
  v64 = v131;
  v66 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED0D0, (uint64_t)(&v113 - 4), v48, v131, MEMORY[0x1E0DEDCE8], v63, MEMORY[0x1E0DEDD18], v65);
  v67 = swift_bridgeObjectRelease();
  v137 = v66;
  MEMORY[0x1E0C80A78](v67);
  *(&v113 - 2) = v136;
  *(&v113 - 1) = v47;
  v68 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v68);
  v69 = sub_1BB872C58();
  swift_bridgeObjectRelease();
  v134 = v58;
  v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_1BB87A390;
  v71 = MEMORY[0x1BCCE37B4](v69, v64);
  *(_QWORD *)(v70 + 56) = MEMORY[0x1E0DEB418];
  *(_QWORD *)(v70 + 64) = MEMORY[0x1E0DEB490];
  *(_QWORD *)(v70 + 32) = v71;
  v137 = 0;
  v138 = 0xE000000000000000;
  v141 = v69;
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF68], v68);
  sub_1BB874350();
  v72 = v137;
  v73 = v138;
  *(_QWORD *)(v70 + 96) = MEMORY[0x1E0DEA968];
  v128 = sub_1BA6A2D8C();
  *(_QWORD *)(v70 + 104) = v128;
  *(_QWORD *)(v70 + 72) = v72;
  *(_QWORD *)(v70 + 80) = v73;
  v74 = v47;
  v75 = v136;
  v76 = sub_1BB87330C();
  sub_1BB86EF44("Service got %ld scored results: %{public}@", 42, 2, &dword_1BA493000, v135, v76, v70);
  v77 = swift_bridgeObjectRelease();
  v137 = v69;
  MEMORY[0x1E0C80A78](v77);
  *(&v113 - 2) = v75;
  *(&v113 - 1) = v47;
  v78 = v129;
  sub_1BB872C28();
  v79 = v64;
  v80 = v130;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v130 + 48))(v78, 1, v64) == 1)
  {
    (*(void (**)(char *, uint64_t))(v115 + 8))(v78, v116);
    v137 = v69;
    v81 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v68);
    if ((sub_1BB873168() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      sub_1BB86EAAC();
      v83 = type metadata accessor for FeedServiceError(0, v123, v122, v82);
      MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v83);
      swift_allocError();
      *(_QWORD *)v84 = v113;
      *(_QWORD *)(v84 + 8) = 0;
      *(_QWORD *)(v84 + 16) = 0;
      *(_QWORD *)(v84 + 24) = 0;
      *(_BYTE *)(v84 + 32) = 0;
      swift_bridgeObjectRetain();
    }
    else
    {
      v101 = v74;
      v135 = sub_1BA6667A4(v69, v75, v74);
      swift_bridgeObjectRelease();
      v102 = v121;
      swift_bridgeObjectRetain();
      v103 = (CACurrentMediaTime() - a4) * 1000.0;
      v134 = sub_1BB86EAAC();
      v137 = v69;
      MEMORY[0x1E0C80A78](v134);
      *(&v113 - 2) = v75;
      *(&v113 - 1) = v101;
      v104 = v123;
      v105 = v122;
      v107 = type metadata accessor for FeedGroupEmitter(0, v123, v122, v106);
      v109 = sub_1BAA52384((void (*)(char *, char *))sub_1BAAED128, (uint64_t)(&v113 - 4), v68, v107, MEMORY[0x1E0DEDCE8], v81, MEMORY[0x1E0DEDD18], v108);
      swift_bridgeObjectRelease();
      v111 = type metadata accessor for FeedServiceError(0, v104, v105, v110);
      MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceError<A>, v111);
      swift_allocError();
      *(_QWORD *)v112 = v135;
      *(_QWORD *)(v112 + 8) = v102;
      *(CFTimeInterval *)(v112 + 16) = v103;
      *(_QWORD *)(v112 + 24) = v109;
      *(_BYTE *)(v112 + 32) = 1;
    }
    return sub_1BB86E9BC();
  }
  else
  {
    v85 = v118;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v118, v78, v64);
    v86 = swift_allocObject();
    *(_OWORD *)(v86 + 16) = v127;
    v137 = 0;
    v138 = 0xE000000000000000;
    MEMORY[0x1BCCE5B24](&unk_1BB89D1E0, v64);
    sub_1BB874350();
    v87 = v137;
    v88 = v138;
    v89 = v128;
    *(_QWORD *)(v86 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v86 + 64) = v89;
    *(_QWORD *)(v86 + 32) = v87;
    *(_QWORD *)(v86 + 40) = v88;
    v90 = sub_1BB87330C();
    sub_1BB86EF44("Service got a top scored result: %{public}@", 43, 2, &dword_1BA493000, v135, v90, v86);
    swift_bridgeObjectRelease();
    v91 = sub_1BA6667A4(v69, v75, v74);
    v93 = v92;
    swift_bridgeObjectRelease();
    v94 = (uint64_t)v117;
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v117, v85, v64);
    v95 = v121;
    swift_bridgeObjectRetain();
    v96 = CACurrentMediaTime();
    v137 = v91;
    v138 = v95;
    v139 = (v96 - a4) * 1000.0;
    v97 = v120;
    sub_1BA66797C(v94, &v137, v93, v123, v122, v120);
    v98 = v133;
    sub_1BB86EAAC();
    v99 = v114;
    (*(void (**)(char *, uint64_t, uint64_t))(v114 + 16))(v119, v97, v98);
    v100 = sub_1BB86E9D4();
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v97, v98);
    (*(void (**)(char *, uint64_t))(v80 + 8))(v85, v79);
  }
  return v100;
}

uint64_t sub_1BAAEAC98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(char *);
  uint64_t result;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78]();
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = v14(v13);
  if (v8)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a8, v13, a5);
  return result;
}

uint64_t sub_1BAAEAD20(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = type metadata accessor for FeedGroupEmitTask.Result(255, AssociatedTypeWitness, AssociatedConformanceWitness, v5);
  v7 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v15 - v8;
  v10 = sub_1BA66F97C();
  v12 = v11;
  v13 = *(_QWORD *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v9, a2, v6);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v6);
  v15[0] = v10;
  v15[1] = v12;
  sub_1BB872814();
  return sub_1BB872838();
}

int *sub_1BAAEAE6C@<X0>(int *a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  int EnumCaseMultiPayload;
  uint64_t v30;
  _QWORD *v31;
  void (*v32)(char *, id *, int *);
  char *v33;
  id *v34;
  int *v35;
  char v36;
  _BYTE *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  char v47;
  double v48;
  void (*v49)(char *, int *);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  double v54;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _BYTE *v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  char v74;
  uint64_t v75;
  __int16 v76;

  v68 = a1;
  v62 = a3;
  v69 = a2;
  v70 = a4;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  v7 = swift_getAssociatedConformanceWitness();
  v66 = type metadata accessor for FeedGroupEmitterOutput(0, v6, v7, v8);
  MEMORY[0x1E0C80A78](v66);
  v65 = (char *)&v60 - v9;
  v11 = type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v63 = (char *)&v60 - v13;
  v67 = type metadata accessor for FeedGroupEmitTask.State(0, AssociatedTypeWitness, AssociatedConformanceWitness, v14);
  v64 = *(_QWORD *)(v67 - 8);
  v15 = MEMORY[0x1E0C80A78](v67);
  v17 = (id *)((char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v60 - v18;
  v20 = sub_1BB873A2C();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v60 - v22;
  v24 = *(_QWORD *)v68;
  v71 = sub_1BA579404();
  v72 = v25;
  MEMORY[0x1BCCE3148](&v71, v69, MEMORY[0x1E0DEA968], v11, MEMORY[0x1E0DEA978]);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v23, 1, v11) != 1)
    return (int *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v70, v23, v11);
  v68 = (int *)v11;
  v69 = v12;
  v26 = v63;
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_1BA5F12C8();
  v27 = v64;
  v28 = v67;
  (*(void (**)(id *, char *, uint64_t))(v64 + 16))(v17, v19, v67);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v30 = v70;
  v31 = v65;
  if ((EnumCaseMultiPayload - 2) < 3)
    goto LABEL_9;
  if (EnumCaseMultiPayload)
  {

LABEL_9:
    v71 = 0;
    v72 = 0xE000000000000000;
    sub_1BB873CB4();
    sub_1BB872AFC("%d tasks that were too slow");
    sub_1BB874344();
    v56 = v72;
    *v31 = v71;
    v31[1] = v56;
    swift_storeEnumTagMultiPayload();
    v57 = v30;
    v58 = *(_QWORD *)(v24 + 56);
    v59 = *(void (**)(char *, uint64_t))(v27 + 8);
    swift_retain();
    v59(v19, v28);
    v71 = 0;
    LOBYTE(v72) = 1;
    v73 = 0;
    v74 = 1;
    v75 = 0;
    v76 = 1;
    v53 = MEMORY[0x1E0DEE9D8];
    v54 = 0.0;
    v50 = v57;
    v51 = (uint64_t)v31;
    v52 = v58;
    return sub_1BA66D58C(v51, v52, v53, &v71, v50, v54);
  }
  v61 = v24;
  v32 = *(void (**)(char *, id *, int *))(v69 + 32);
  v33 = v26;
  v34 = v17;
  v35 = v68;
  v32(v26, v34, v68);
  sub_1BB5B1184(v66);
  if ((v36 & 1) != 0)
  {
    v37 = v62;
    v38 = *v62;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v67);
    if ((v38 & 1) != 0)
    {
      *v31 = 0xD00000000000004FLL;
      v31[1] = 0x80000001BB96C110;
      swift_storeEnumTagMultiPayload();
      v39 = *(_QWORD *)(v61 + 56);
      v40 = *(_QWORD *)&v33[v35[10]];
      v41 = &v33[v35[11]];
      v42 = *(_QWORD *)v41;
      v43 = v41[8];
      v44 = *((_QWORD *)v41 + 2);
      v45 = v41[24];
      v46 = *((_QWORD *)v41 + 4);
      v47 = v41[40];
      LOBYTE(v41) = v41[41];
      v71 = v42;
      LOBYTE(v72) = v43;
      v73 = v44;
      v74 = v45;
      v75 = v46;
      LOBYTE(v76) = v47;
      HIBYTE(v76) = (_BYTE)v41;
      v48 = *(double *)&v33[v35[12]];
      v49 = *(void (**)(char *, int *))(v69 + 8);
      swift_retain();
      swift_bridgeObjectRetain();
      v49(v33, v35);
      v50 = v70;
      v51 = (uint64_t)v31;
      v52 = v39;
      v53 = v40;
      v54 = v48;
      return sub_1BA66D58C(v51, v52, v53, &v71, v50, v54);
    }
    *v37 = 1;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v67);
  }
  return (int *)((uint64_t (*)(uint64_t, char *, int *))v32)(v70, v33, v35);
}

void sub_1BAAEB398(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5 = type metadata accessor for FeedGroupEmitterOutput(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v9 - v7, a1, v5);
  v8 = (char *)sub_1BAAEB508 + 4 * byte_1BB89CF4D[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAAEB508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
  return 0;
}

void sub_1BAAEB5C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t TupleTypeMetadata2;

  v7 = type metadata accessor for FeedGroupEmitterEmbeddedOutput(255, v4, v6, a4);
  sub_1BA4D9CE8(255, &qword_1ED3A4CB0);
  v8 = v5 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
      __swift_destroy_boxed_opaque_existential_1(v8);
      JUMPOUT(0x1BAAEB518);
    }
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v5, v7);
  }
  else
  {
    v10 = MEMORY[0x1E0DEE9B8] + 8;
    v11 = MEMORY[0x1E0DEB940];
    sub_1BA4AD288(255, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_1BA66EA88(v5 + *(int *)(TupleTypeMetadata2 + 48), (unint64_t *)&qword_1ED3BA040, v10, (uint64_t (*)(_QWORD, uint64_t))v11);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  }
  __swift_destroy_boxed_opaque_existential_1(v8);
  JUMPOUT(0x1BAAEB5A4);
}

uint64_t sub_1BAAEB6DC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = a1
     + *(int *)(type metadata accessor for FeedScoredResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6)+ 44);
  *a2 = *(_QWORD *)(v7
                  + *(int *)(type metadata accessor for FeedGroupEmitTask.Result(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8)+ 36));
  return swift_retain();
}

uint64_t FeedService.deinit()
{
  uint64_t v0;
  void *v1;

  swift_release();
  v1 = *(void **)(v0 + 40);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 64);
  swift_unknownObjectRelease();
  sub_1BA65DBBC(v0 + 112, &qword_1ED3B1DE0, &qword_1ED3B1DD8, (uint64_t)&protocol descriptor for FeedOfflineProviding);
  return v0;
}

uint64_t FeedService.__deallocating_deinit()
{
  FeedService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAAEB838(uint64_t a1)
{
  return FeedService.fetchReplaceGroup(from:)(a1);
}

uint64_t FeedServiceType.fetchAllGroups(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v7);
  sub_1BB86EC14();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v9 = (void *)sub_1BB86E854();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  sub_1BB872EE0();
  v10 = sub_1BB86E968();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1BAAEB9D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v10 = a2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v6 = sub_1BB872E68();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a3;
  *(_QWORD *)(v7 + 24) = a4;
  v8 = sub_1BAAEBB34((uint64_t)&v10, v6, (uint64_t)sub_1BA647E08, v7, a3, a4);
  swift_bridgeObjectRelease();
  swift_release();
  return v8;
}

uint64_t sub_1BAAEBB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = v6;
  v27 = a3;
  v28 = a4;
  v11 = *(_QWORD *)(a5 - 8);
  v12 = *(_QWORD *)(v11 + 64);
  MEMORY[0x1E0C80A78](a1);
  v14 = *v13;
  v29 = v15;
  v30 = v16;
  v31 = v7;
  v32 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for FeedServiceFetchResult(0, AssociatedTypeWitness, AssociatedConformanceWitness, v19);
  sub_1BB86EC14();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v7, a5);
  v20 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v21 = (char *)swift_allocObject();
  *((_QWORD *)v21 + 2) = a5;
  *((_QWORD *)v21 + 3) = a6;
  v22 = v27;
  v23 = v28;
  *((_QWORD *)v21 + 4) = a2;
  *((_QWORD *)v21 + 5) = v22;
  *((_QWORD *)v21 + 6) = v23;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v21[v20], (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a5);
  swift_bridgeObjectRetain();
  swift_retain();
  v24 = (void *)sub_1BB86E854();
  v25 = sub_1BB86E968();
  swift_release();
  swift_release();

  return v25;
}

void sub_1BAAEBCD8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  __asm { BR              X10 }
}

uint64_t sub_1BAAEBDF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 16);
  sub_1BB872EE0();
  sub_1BB86EAAC();
  *(_QWORD *)(v1 - 56) = v2;
  swift_bridgeObjectRetain();
  return sub_1BB86E9D4();
}

uint64_t FeedServiceType.fetchAll(from:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v9 = *a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v5 = sub_1BB872E68();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  v7 = sub_1BAAEBB34((uint64_t)&v9, v5, (uint64_t)sub_1BA647E08, v6, a2, a3);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

void sub_1BAAEC0A4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BAAEC1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)(v13 - 152) = v11;
  v14 = v4;
  type metadata accessor for FeedCursorContainer(255, v9, v8, a4);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = swift_projectBox();
  v17 = *(_QWORD *)(v16 + *(int *)(TupleTypeMetadata2 + 48));
  *(_QWORD *)(v13 - 128) = v5;
  v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v18(v10, v16, v6);
  sub_1BA6325A8(v6, v6);
  *(_QWORD *)(v13 - 136) = v14;
  swift_allocObject();
  *(_QWORD *)(v13 - 160) = v17;
  *(_QWORD *)(v13 - 144) = v17 & 0x7FFFFFFFFFFFFFFFLL;
  swift_retain();
  v19 = sub_1BB872E2C();
  v18(v20, v10, v6);
  sub_1BA69C794(v19);
  v21 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  v22 = v21;
  v23 = v21;
  v24 = *(uint64_t (**)(uint64_t))(v13 - 112);
  v25 = *(_QWORD *)(v13 - 104);
  if ((v24(v23) & 1) != 0)
  {
    swift_bridgeObjectRelease();
    type metadata accessor for FeedServiceFetchResult(255, v9, v8, v26);
    sub_1BB86EAAC();
    *(_QWORD *)(v13 - 72) = v7;
    swift_retain();
    v27 = sub_1BB86E9D4();
  }
  else
  {
    static FeedLocation.container(_:)(*(_QWORD *)(v13 - 160), (uint64_t *)(v13 - 72));
    *(_QWORD *)(v13 - 88) = *(_QWORD *)(v13 - 72);
    v27 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, _QWORD))sub_1BAAEBB34)(v13 - 88, v22, v24, v25, v12, *(_QWORD *)(v13 - 152));
    swift_release();
    swift_bridgeObjectRelease();
  }
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 136) + 8))(v10, v6);
  return v27;
}

BOOL sub_1BAAEC72C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *a2;
  swift_bridgeObjectRetain();
  v3 = sub_1BA4D7950();
  v5 = sub_1BA761FE4(v3, v4, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (v5 & 1) == 0;
}

_QWORD *sub_1BAAEC790(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v2 = swift_bridgeObjectRetain() + 48;
  v3 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  do
  {
    v5 = *(_QWORD *)(v2 - 8);
    swift_bridgeObjectRetain();
    sub_1BA67035C(v5);
    sub_1BAAD14B4();
    swift_bridgeObjectRelease();
    sub_1BA5B18CC(v5);
    if (v9)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v3 = sub_1BA670884(0, v3[2] + 1, 1, v3);
      v7 = v3[2];
      v6 = v3[3];
      if (v7 >= v6 >> 1)
        v3 = sub_1BA670884((_QWORD *)(v6 > 1), v7 + 1, 1, v3);
      v3[2] = v7 + 1;
      v4 = &v3[3 * v7];
      v4[4] = v9;
      v4[5] = v10;
      v4[6] = v11;
    }
    v2 += 24;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1BAAEC8E8()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAEC918()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedReplaceLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v3)- 8)+ 80);
  v5 = (v4 + 40) & ~v4;
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v0 + v5, v6);
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAECA7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedReplaceLocation(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6)- 8)+ 80);
  v8 = *(_QWORD **)(v1 + 32);
  v9 = v1 + ((v7 + 40) & ~v7);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v10;
  *v10 = v2;
  v10[1] = sub_1BA8195A4;
  return sub_1BAAE09B4(a1, v8, v9);
}

uint64_t sub_1BAAECB54()
{
  uint64_t *v0;

  return sub_1BAAEB9D4(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_1BAAECB70()
{
  return swift_deallocObject();
}

void sub_1BAAECB80(uint64_t a1)
{
  sub_1BAAEBCD8(a1);
}

uint64_t sub_1BAAECB98()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t dispatch thunk of FeedServiceType.state.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FeedServiceType.fetchNextGroup(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of FeedServiceType.fetchReplaceGroup(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t method lookup function for FeedService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedService.__allocating_init(feed:cursorFactory:personalizationService:offlineProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FeedService.__allocating_init(feed:cursorFactory:personalizationService:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1BAAECBE8()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAECBFC()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAECC0C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAAECC30(uint64_t a1)
{
  uint64_t v1;

  sub_1BAAE2A50(a1, *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40));
}

uint64_t sub_1BAAECC4C()
{
  return sub_1BAAE28F8();
}

uint64_t sub_1BAAECC6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BAAE2C7C(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1BAAECC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAAE2D2C(a1, a2);
}

uint64_t sub_1BAAECCA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, &qword_1ED3B1DE0, &qword_1ED3B1DD8, (uint64_t)&protocol descriptor for FeedOfflineProviding, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAAECD08()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1BAAECD2C()
{
  uint64_t v0;

  return sub_1BB203CF8((_QWORD *)(v0 + 16));
}

uint64_t sub_1BAAECD38(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t result;

  switch(a5)
  {
    case 0:
    case 2:
    case 4:
    case 5:
      goto LABEL_3;
    case 1:
      swift_bridgeObjectRelease();
      sub_1BA5B18CC(a2);
LABEL_3:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAAECDB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BB86DEE8();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAAECDF0()
{
  return 16;
}

__n128 sub_1BAAECDFC(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BAAECE08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAAECE2C()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

_BYTE *sub_1BAAECE58(_BYTE *a1)
{
  uint64_t v1;

  return sub_1BAAE90B4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAAECE60()
{
  uint64_t v0;

  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAECE8C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAAE9148(a1, *(_QWORD *)(v1 + 32));
}

uint64_t sub_1BAAECE98@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1BAAE9284(a1, *(uint64_t **)(v2 + 16), *(_BYTE *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 48), a2);
}

uint64_t sub_1BAAECEC0@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(*(_QWORD *)result + 80);
  return result;
}

uint64_t sub_1BAAECED0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1BA4F5A84(sub_1BA4F5ABC, a1);
}

uint64_t sub_1BAAECEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_1BAAECF00(a1, a2, a3, a4, a5);
}

uint64_t sub_1BAAECF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1BA5EFB44(a1, a2, a3, a4);
  *a5 = result;
  a5[1] = v7;
  return result;
}

uint64_t sub_1BAAECF38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 8);
  return swift_retain();
}

uint64_t sub_1BAAECF54()
{
  return sub_1BAAE939C();
}

uint64_t sub_1BAAECF68()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAECFAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAAE955C(a1, a2, *(_QWORD *)(v2 + 16));
}

uint64_t sub_1BAAECFCC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAAECFF0()
{
  return sub_1BAAE9D50();
}

uint64_t sub_1BAAECFFC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAAED048(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BAAEA048(a1, a2, *(_QWORD *)(v2 + 16), *(double *)(v2 + 64), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56));
}

uint64_t sub_1BAAED05C(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 32))(*a1, a1[1]);
}

uint64_t sub_1BAAED090(uint64_t a1, uint64_t a2)
{
  return sub_1BAAEAD20(a1, a2);
}

int *sub_1BAAED0A8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BAAEAE6C(a1, *(_QWORD *)(v2 + 32), *(_BYTE **)(v2 + 40), a2);
}

void sub_1BAAED0C8(uint64_t a1)
{
  sub_1BAAEB398(a1);
}

void sub_1BAAED0D0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BA66DB1C(a1, *(unsigned __int8 *)(v2 + 24), a2);
}

BOOL sub_1BAAED100(double *a1, double *a2)
{
  return *a2 < *a1;
}

BOOL sub_1BAAED114(double *a1)
{
  return a1[2] <= *a1;
}

uint64_t sub_1BAAED128@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BAAEB6DC(a1, a2);
}

uint64_t sub_1BAAED144@<X0>(uint64_t a1@<X8>)
{
  return sub_1BAAE9EC8(a1);
}

uint64_t sub_1BAAED15C()
{
  uint64_t v0;

  return sub_1BAAE9764(*(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BAAED178()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAED1A4(uint64_t a1, uint64_t a2)
{
  return sub_1BAAE9814(a1, a2);
}

uint64_t sub_1BAAED1BC()
{
  return sub_1BB86EBF0();
}

uint64_t sub_1BAAED1E4()
{
  return swift_deallocObject();
}

uint64_t sub_1BAAED1F4()
{
  return sub_1BAAE9A64();
}

uint64_t sub_1BAAED1FC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAAED220(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v1 + 32))(*a1, a1[1], a1[2], a1[3]);
}

BOOL sub_1BAAED254()
{
  return sub_1BAAE9BD4();
}

uint64_t sub_1BAAED274()
{
  return 16;
}

__n128 sub_1BAAED280(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BAAED28C()
{
  swift_retain();
  swift_getAtKeyPath();
  return swift_release();
}

BOOL sub_1BAAED2E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = sub_1BA4D7950();
  LOBYTE(v1) = sub_1BA761FE4(v2, v3, v1);
  swift_bridgeObjectRelease();
  return (v1 & 1) == 0;
}

uint64_t objectdestroy_57Tm_0()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);
  return swift_deallocObject();
}

BOOL sub_1BAAED454(_QWORD *a1)
{
  uint64_t v1;

  return *a1 > *(_QWORD *)(v1 + 16);
}

uint64_t sub_1BAAED468(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t keypath_get_109Tm@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BA4D7950();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BAAED4CC()
{
  return 16;
}

__n128 sub_1BAAED4D8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1BAAED4E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = v0[2];
  v2 = v0[3];
  v4 = v0[5];
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 32))(&v4, v1);
}

uint64_t sub_1BAAED528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

void sub_1BAAED59C(uint64_t a1)
{
  sub_1BAAEC0A4(a1);
}

uint64_t objectdestroy_40Tm()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t *sub_1BAAED600(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _OWORD *v49;
  __int128 *v50;
  __int128 v51;
  __int128 v52;
  _QWORD *v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t *result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = v6 & 0xF8 | 7;
  v8 = ~v7;
  v9 = *(_QWORD *)(v5 + 64);
  v10 = v9 + 7;
  if (v9 <= ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v9 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v9 <= 0x10)
    v11 = 16;
  else
    v11 = v9;
  if ((v11 & 0xFFFFFFFFFFFFFFF8) + 48 <= v11)
    v12 = v11;
  else
    v12 = (v11 & 0xFFFFFFFFFFFFFFF8) + 48;
  if ((v6 & 0x1000F8) != 0
    || (v13 = (((v6 & 0xF8) + 31) & ~v7)
            + (((((((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8),
        ((v13 + 39) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18))
  {
    v22 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v22 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v14 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
    *v14 = *v15;
    v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
    *v16 = *v17;
    v18 = (unint64_t)v16 + 15;
    v19 = v18 & v8;
    v20 = ((unint64_t)v17 + 15) & v8;
    v23 = v11 + 1;
    v24 = v12 + 1;
    v25 = v13 + 8;
    switch(*(_BYTE *)(v20 + v12))
    {
      case 0:
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v18 & v8, v20, AssociatedTypeWitness);
        v26 = (v10 + v19) & 0xFFFFFFFFFFFFFFF8;
        v27 = (v10 + v20) & 0xFFFFFFFFFFFFFFF8;
        v28 = *(_QWORD *)(v27 + 24);
        if (v28 < 0xFFFFFFFF)
        {
          v36 = *(_OWORD *)(v27 + 16);
          *(_OWORD *)v26 = *(_OWORD *)v27;
          *(_OWORD *)(v26 + 16) = v36;
        }
        else
        {
          *(_QWORD *)(v26 + 24) = v28;
          (**(void (***)(void))(v28 - 8))();
        }
        *(_BYTE *)(v19 + v12) = 0;
        break;
      case 1:
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v18 & v8, v20, AssociatedTypeWitness);
        v29 = (v10 + v19) & 0xFFFFFFFFFFFFFFF8;
        v30 = (v10 + v20) & 0xFFFFFFFFFFFFFFF8;
        v31 = *(_QWORD *)(v30 + 24);
        if (v31 < 0xFFFFFFFF)
        {
          v37 = *(_OWORD *)(v30 + 16);
          *(_OWORD *)v29 = *(_OWORD *)v30;
          *(_OWORD *)(v29 + 16) = v37;
        }
        else
        {
          *(_QWORD *)(v29 + 24) = v31;
          (**(void (***)(void))(v31 - 8))();
        }
        v32 = 1;
        goto LABEL_45;
      case 2:
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v18 & v8, v20, AssociatedTypeWitness);
        v32 = 2;
        goto LABEL_45;
      case 3:
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *(_QWORD *)((v18 & v8) + 8) = *(_QWORD *)((((unint64_t)v17 + 15) & v8) + 8);
        v33 = 3;
        goto LABEL_28;
      case 4:
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *(_QWORD *)((v18 & v8) + 8) = *(_QWORD *)((((unint64_t)v17 + 15) & v8) + 8);
        v33 = 4;
        goto LABEL_28;
      case 5:
        *(_QWORD *)v19 = *(_QWORD *)v20;
        *(_QWORD *)((v18 & v8) + 8) = *(_QWORD *)((((unint64_t)v17 + 15) & v8) + 8);
        v33 = 5;
LABEL_28:
        *(_BYTE *)(v19 + v12) = v33;
        swift_bridgeObjectRetain();
        break;
      case 6:
        v34 = *(unsigned __int8 *)(v20 + v11);
        if (v34 >= 3)
        {
          if (v11 <= 3)
            v35 = v11;
          else
            v35 = 4;
          __asm { BR              X13 }
        }
        if (v34 == 2)
        {
          *(_QWORD *)v19 = *(_QWORD *)v20;
          *(_QWORD *)(v19 + 8) = *(_QWORD *)(v20 + 8);
          *(_BYTE *)(v19 + v11) = 2;
          swift_bridgeObjectRetain();
        }
        else if (v34 == 1)
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v19, v20, AssociatedTypeWitness);
          *(_BYTE *)(v19 + v11) = 1;
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v19, v20, AssociatedTypeWitness);
          v38 = (v10 + v19) & 0xFFFFFFFFFFFFFFF8;
          v39 = (v10 + v20) & 0xFFFFFFFFFFFFFFF8;
          v40 = *(_QWORD *)(v39 + 24);
          if (v40 < 0xFFFFFFFF)
          {
            v41 = *(_OWORD *)(v39 + 16);
            *(_OWORD *)v38 = *(_OWORD *)v39;
            *(_OWORD *)(v38 + 16) = v41;
          }
          else
          {
            *(_QWORD *)(v38 + 24) = v40;
            (**(void (***)(void))(v40 - 8))();
          }
          *(_BYTE *)(v19 + v11) = 0;
        }
        v42 = ((v19 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
        v43 = ((v20 | 7) + v23) & 0xFFFFFFFFFFFFFFF8;
        v44 = *(_QWORD *)(v43 + 24);
        *(_QWORD *)(v42 + 24) = v44;
        *(_QWORD *)(v42 + 32) = *(_QWORD *)(v43 + 32);
        (**(void (***)(void))(v44 - 8))();
        v32 = 6;
LABEL_45:
        *(_BYTE *)(v19 + v12) = v32;
        break;
      default:
        if (v12 <= 3)
          v21 = v12;
        else
          v21 = 4;
        __asm { BR              X14 }
        return result;
    }
    v45 = (_QWORD *)(((v19 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
    v46 = (_QWORD *)(((v20 | 7) + v24) & 0xFFFFFFFFFFFFFFF8);
    *v45 = *v46;
    v47 = (_QWORD *)(((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8);
    v48 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v47 = *v48;
    v49 = (_OWORD *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
    v50 = (__int128 *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8);
    v51 = *v50;
    v52 = v50[1];
    *(_OWORD *)((char *)v49 + 26) = *(__int128 *)((char *)v50 + 26);
    *v49 = v51;
    v49[1] = v52;
    *(_QWORD *)(((unint64_t)v49 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v50 + 49) & 0xFFFFFFFFFFFFF8);
    v53 = (_QWORD *)(((unint64_t)a1 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
    v54 = (_QWORD *)(((unint64_t)a2 + v25 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v53 = *v54;
    v55 = v54[1];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v55 >= 2)
      swift_bridgeObjectRetain();
    v53[1] = v55;
    v53[2] = v54[2];
    *(_QWORD *)(((unint64_t)v53 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v54 + 31) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_1BAAEDB64(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  __int128 v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  unint64_t *v56;
  unint64_t v57;
  _QWORD *result;
  unint64_t v59;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  v11 = v10 | 7;
  v10 += 15;
  v12 = ((unint64_t)v6 + v10) & ~v11;
  v13 = ((unint64_t)v7 + v10) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v14 > v15)
    v15 = *(_QWORD *)(v9 + 64);
  if (v15 <= 0x10)
    v16 = 16;
  else
    v16 = v15;
  if (v12 == v13)
  {
    if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16)
      v18 = v16;
    else
      v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  else
  {
    v17 = AssociatedTypeWitness;
    if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16)
      v18 = v16;
    else
      v18 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
    v59 = v16 + 1;
    switch(*(_BYTE *)(v12 + v18))
    {
      case 0:
      case 1:
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        v20 = ((v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v20 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_40;
        goto LABEL_34;
      case 2:
        (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        goto LABEL_40;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 6:
        v21 = *(unsigned __int8 *)(v12 + v16);
        if (v21 >= 3)
        {
          if (v16 <= 3)
            v22 = v16;
          else
            v22 = 4;
          __asm { BR              X12 }
        }
        if (v21 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v21 == 1)
        {
          (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v12, AssociatedTypeWitness);
          v23 = ((v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v23 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v23);
        }
        v20 = ((v12 | 7) + v59) & 0xFFFFFFFFFFFFFFF8;
LABEL_34:
        __swift_destroy_boxed_opaque_existential_1(v20);
LABEL_40:
        switch(*(_BYTE *)(v13 + v18))
        {
          case 0:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, v17);
            v25 = ((v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
            v26 = ((v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
            v27 = *(_QWORD *)(v26 + 24);
            if (v27 < 0xFFFFFFFF)
            {
              v35 = *(_OWORD *)(v26 + 16);
              *(_OWORD *)v25 = *(_OWORD *)v26;
              *(_OWORD *)(v25 + 16) = v35;
            }
            else
            {
              *(_QWORD *)(v25 + 24) = v27;
              (**(void (***)(void))(v27 - 8))();
            }
            *(_BYTE *)(v12 + v18) = 0;
            goto LABEL_69;
          case 1:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, v17);
            v28 = ((v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
            v29 = ((v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
            v30 = *(_QWORD *)(v29 + 24);
            if (v30 < 0xFFFFFFFF)
            {
              v36 = *(_OWORD *)(v29 + 16);
              *(_OWORD *)v28 = *(_OWORD *)v29;
              *(_OWORD *)(v28 + 16) = v36;
            }
            else
            {
              *(_QWORD *)(v28 + 24) = v30;
              (**(void (***)(void))(v30 - 8))();
            }
            v31 = 1;
            goto LABEL_68;
          case 2:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, v17);
            v31 = 2;
            goto LABEL_68;
          case 3:
            *(_QWORD *)v12 = *(_QWORD *)v13;
            *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
            v32 = 3;
            goto LABEL_51;
          case 4:
            *(_QWORD *)v12 = *(_QWORD *)v13;
            *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
            v32 = 4;
            goto LABEL_51;
          case 5:
            *(_QWORD *)v12 = *(_QWORD *)v13;
            *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
            v32 = 5;
LABEL_51:
            *(_BYTE *)(v12 + v18) = v32;
            swift_bridgeObjectRetain();
            break;
          case 6:
            v33 = *(unsigned __int8 *)(v13 + v16);
            if (v33 >= 3)
            {
              if (v16 <= 3)
                v34 = v16;
              else
                v34 = 4;
              __asm { BR              X12 }
            }
            if (v33 == 2)
            {
              *(_QWORD *)v12 = *(_QWORD *)v13;
              *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
              *(_BYTE *)(v12 + v16) = 2;
              swift_bridgeObjectRetain();
            }
            else if (v33 == 1)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, v17);
              *(_BYTE *)(v12 + v16) = 1;
            }
            else
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(v12, v13, v17);
              v37 = ((v12 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
              v38 = ((v13 | 7) + v14) & 0xFFFFFFFFFFFFFFF8;
              v39 = *(_QWORD *)(v38 + 24);
              if (v39 < 0xFFFFFFFF)
              {
                v40 = *(_OWORD *)(v38 + 16);
                *(_OWORD *)v37 = *(_OWORD *)v38;
                *(_OWORD *)(v37 + 16) = v40;
              }
              else
              {
                *(_QWORD *)(v37 + 24) = v39;
                (**(void (***)(void))(v39 - 8))();
              }
              *(_BYTE *)(v12 + v16) = 0;
            }
            v41 = ((v12 | 7) + v59) & 0xFFFFFFFFFFFFFFF8;
            v42 = ((v13 | 7) + v59) & 0xFFFFFFFFFFFFFFF8;
            v43 = *(_QWORD *)(v42 + 24);
            *(_QWORD *)(v41 + 24) = v43;
            *(_QWORD *)(v41 + 32) = *(_QWORD *)(v42 + 32);
            (**(void (***)(void))(v43 - 8))();
            v31 = 6;
LABEL_68:
            *(_BYTE *)(v12 + v18) = v31;
            break;
          default:
            if (v18 <= 3)
              v24 = v18;
            else
              v24 = 4;
            __asm { BR              X12 }
            return result;
        }
        return result;
      default:
        if (v18 <= 3)
          v19 = v18;
        else
          v19 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
LABEL_69:
  v44 = (_QWORD *)(((v12 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  v45 = (v13 | 7) + v18 + 1;
  v46 = (v45 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v44 = *(_QWORD *)(v45 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v47 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  v46 &= 0xFFFFFFFFFFFFF8uLL;
  v48 = *(_QWORD *)v46;
  v46 += 15;
  *v47 = v48;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v49 = ((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)(v46 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v49 + 8) = *(_BYTE *)((v46 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v49 = v50;
  v51 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v49 + 24) = *(_BYTE *)((v46 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v49 + 16) = v51;
  v52 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v49 + 40) = *(_BYTE *)((v46 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v49 + 32) = v52;
  *(_BYTE *)(v49 + 41) = *(_BYTE *)((v46 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(_QWORD *)((v49 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v46 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFF8);
  v53 = ((v11 + 24) & ~v11)
      + (((((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v54 = (_QWORD *)(((unint64_t)a1 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  v55 = (_QWORD *)(((unint64_t)a2 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v54 = *v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v56 = v54 + 1;
  v57 = v55[1];
  if (v54[1] >= 2uLL)
  {
    if (v57 >= 2)
    {
      *v56 = v57;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA66EA88((uint64_t)(v54 + 1), (unint64_t *)&qword_1ED3B9610, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      *v56 = v55[1];
    }
  }
  else
  {
    *v56 = v57;
    if (v57 >= 2)
      swift_bridgeObjectRetain();
  }
  v54[2] = v55[2];
  *(_QWORD *)(((unint64_t)v54 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v55 + 31) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1BAAEE364(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  _OWORD *v21;
  __int128 v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  _OWORD *v26;
  unsigned int v27;
  uint64_t v28;
  char v29;
  _OWORD *v30;
  __int128 v31;
  _OWORD *v32;
  unint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _OWORD *v41;
  __int128 *v42;
  __int128 v43;
  __int128 v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  __int128 v48;
  _QWORD *result;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  v7 = (_QWORD *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *v7;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v10 = *(_DWORD *)(v9 + 80) & 0xF8;
  v11 = v10 | 7;
  v10 += 15;
  v12 = ((unint64_t)v6 + v10) & ~v11;
  v13 = ((unint64_t)v7 + v10) & ~v11;
  v14 = *(_QWORD *)(v9 + 64);
  v15 = v14 + 7;
  if (v14 <= ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v14 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v14 <= 0x10)
    v16 = 16;
  else
    v16 = v14;
  if ((v16 & 0xFFFFFFFFFFFFFFF8) + 48 <= v16)
    v17 = v16;
  else
    v17 = (v16 & 0xFFFFFFFFFFFFFFF8) + 48;
  v19 = v16 + 1;
  switch(*(_BYTE *)(v13 + v17))
  {
    case 0:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
      v20 = 0;
      v21 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
      v22 = v21[1];
      v23 = (_OWORD *)((v15 + v12) & 0xFFFFFFFFFFFFFFF8);
      *v23 = *v21;
      v23[1] = v22;
      break;
    case 1:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
      v24 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
      v25 = v24[1];
      v26 = (_OWORD *)((v15 + v12) & 0xFFFFFFFFFFFFFFF8);
      *v26 = *v24;
      v26[1] = v25;
      v20 = 1;
      break;
    case 2:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
      v20 = 2;
      break;
    case 3:
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v20 = 3;
      break;
    case 4:
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v20 = 4;
      break;
    case 5:
      *(_OWORD *)v12 = *(_OWORD *)v13;
      v20 = 5;
      break;
    case 6:
      v27 = *(unsigned __int8 *)(v13 + v16);
      if (v27 >= 3)
      {
        if (v16 <= 3)
          v28 = v16;
        else
          v28 = 4;
        __asm { BR              X13 }
      }
      if (v27 == 2)
      {
        *(_OWORD *)v12 = *(_OWORD *)v13;
        v29 = 2;
      }
      else if (v27 == 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
        v29 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32))(v12, v13, AssociatedTypeWitness);
        v29 = 0;
        v30 = (_OWORD *)((v15 + v13) & 0xFFFFFFFFFFFFFFF8);
        v31 = v30[1];
        v32 = (_OWORD *)((v15 + v12) & 0xFFFFFFFFFFFFFFF8);
        *v32 = *v30;
        v32[1] = v31;
      }
      *(_BYTE *)(v12 + v16) = v29;
      v33 = ((v12 | 7) + v19) & 0xFFFFFFFFFFFFFFF8;
      v34 = ((v13 | 7) + v19) & 0xFFFFFFFFFFFFFFF8;
      v35 = *(_OWORD *)v34;
      v36 = *(_OWORD *)(v34 + 16);
      *(_QWORD *)(v33 + 32) = *(_QWORD *)(v34 + 32);
      *(_OWORD *)v33 = v35;
      *(_OWORD *)(v33 + 16) = v36;
      v20 = 6;
      break;
    default:
      if (v17 <= 3)
        v18 = v17;
      else
        v18 = 4;
      __asm { BR              X13 }
      return result;
  }
  *(_BYTE *)(v12 + v17) = v20;
  v37 = (_QWORD *)(((v12 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  v38 = (_QWORD *)(((v13 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v37 = *v38;
  v39 = (_QWORD *)(((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFF8);
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v40;
  v41 = (_OWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8);
  v42 = (__int128 *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  v43 = *v42;
  v44 = v42[1];
  *(_OWORD *)((char *)v41 + 26) = *(__int128 *)((char *)v42 + 26);
  *v41 = v43;
  v41[1] = v44;
  *(_QWORD *)(((unint64_t)v41 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v42 + 49) & 0xFFFFFFFFFFFFF8);
  v45 = ((v11 + 24) & ~v11)
      + (((((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v46 = ((unint64_t)a1 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v47 = ((unint64_t)a2 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  v48 = *(_OWORD *)v47;
  *(_QWORD *)(v46 + 16) = *(_QWORD *)(v47 + 16);
  *(_OWORD *)v46 = v48;
  *(_QWORD *)((v46 + 31) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v47 + 31) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1BAAEE7AC(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  _OWORD *v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  char v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  unint64_t *v44;
  unint64_t v45;
  _QWORD *result;
  unsigned int v47;
  uint64_t v48;
  char v49;
  _OWORD *v50;
  __int128 v51;
  _OWORD *v52;
  unint64_t v53;
  unint64_t v54;
  __int128 v55;
  __int128 v56;
  unint64_t v57;

  *a1 = *a2;
  v3 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = v9 | 7;
  v9 += 15;
  v11 = ((unint64_t)v5 + v9) & ~v10;
  v12 = ((unint64_t)v6 + v9) & ~v10;
  v13 = *(_QWORD *)(v8 + 64);
  v14 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v13 > v14)
    v14 = *(_QWORD *)(v8 + 64);
  if (v14 <= 0x10)
    v15 = 16;
  else
    v15 = v14;
  if (v11 != v12)
  {
    v16 = AssociatedTypeWitness;
    if ((v15 & 0xFFFFFFFFFFFFFFF8) + 48 <= v15)
      v17 = v15;
    else
      v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 48;
    v57 = v15 + 1;
    switch(*(_BYTE *)(v11 + v17))
    {
      case 0:
      case 1:
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
        v19 = ((v11 | 7) + v13) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v19 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_41;
        goto LABEL_35;
      case 2:
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
        goto LABEL_41;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      case 6:
        v20 = *(unsigned __int8 *)(v11 + v15);
        if (v20 >= 3)
        {
          if (v15 <= 3)
            v21 = v15;
          else
            v21 = 4;
          __asm { BR              X12 }
        }
        if (v20 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v20 == 1)
        {
          (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
          v22 = ((v11 | 7) + v13) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v22 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v22);
        }
        v19 = ((v11 | 7) + v57) & 0xFFFFFFFFFFFFFFF8;
LABEL_35:
        __swift_destroy_boxed_opaque_existential_1(v19);
LABEL_41:
        switch(*(_BYTE *)(v12 + v17))
        {
          case 0:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v11, v12, v16);
            v24 = (_OWORD *)(((v12 | 7) + v13) & 0xFFFFFFFFFFFFFFF8);
            v25 = v24[1];
            v26 = (_OWORD *)(((v11 | 7) + v13) & 0xFFFFFFFFFFFFFFF8);
            *v26 = *v24;
            v26[1] = v25;
            *(_BYTE *)(v11 + v17) = 0;
            goto LABEL_49;
          case 1:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v11, v12, v16);
            v27 = (_OWORD *)(((v11 | 7) + v13) & 0xFFFFFFFFFFFFFFF8);
            v28 = (_OWORD *)(((v12 | 7) + v13) & 0xFFFFFFFFFFFFFFF8);
            v29 = v28[1];
            *v27 = *v28;
            v27[1] = v29;
            v30 = 1;
            goto LABEL_48;
          case 2:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v11, v12, v16);
            v30 = 2;
            goto LABEL_48;
          case 3:
            *(_OWORD *)v11 = *(_OWORD *)v12;
            v30 = 3;
            goto LABEL_48;
          case 4:
            *(_OWORD *)v11 = *(_OWORD *)v12;
            v30 = 4;
            goto LABEL_48;
          case 5:
            *(_OWORD *)v11 = *(_OWORD *)v12;
            v30 = 5;
LABEL_48:
            *(_BYTE *)(v11 + v17) = v30;
            goto LABEL_49;
          case 6:
            v47 = *(unsigned __int8 *)(v12 + v15);
            if (v47 >= 3)
            {
              if (v15 <= 3)
                v48 = v15;
              else
                v48 = 4;
              __asm { BR              X12 }
            }
            if (v47 == 2)
            {
              *(_OWORD *)v11 = *(_OWORD *)v12;
              v49 = 2;
            }
            else if (v47 == 1)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v11, v12, v16);
              v49 = 1;
            }
            else
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v11, v12, v16);
              v49 = 0;
              v50 = (_OWORD *)(((v12 | 7) + v13) & 0xFFFFFFFFFFFFFFF8);
              v51 = v50[1];
              v52 = (_OWORD *)(((v11 | 7) + v13) & 0xFFFFFFFFFFFFFFF8);
              *v52 = *v50;
              v52[1] = v51;
            }
            v31 = a2;
            *(_BYTE *)(v11 + v15) = v49;
            v53 = ((v11 | 7) + v57) & 0xFFFFFFFFFFFFFFF8;
            v54 = ((v12 | 7) + v57) & 0xFFFFFFFFFFFFFFF8;
            v55 = *(_OWORD *)v54;
            v56 = *(_OWORD *)(v54 + 16);
            *(_QWORD *)(v53 + 32) = *(_QWORD *)(v54 + 32);
            *(_OWORD *)v53 = v55;
            *(_OWORD *)(v53 + 16) = v56;
            *(_BYTE *)(v11 + v17) = 6;
            goto LABEL_50;
          default:
            if (v17 <= 3)
              v23 = v17;
            else
              v23 = 4;
            __asm { BR              X12 }
            return result;
        }
      default:
        if (v17 <= 3)
          v18 = v17;
        else
          v18 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
  if ((v15 & 0xFFFFFFFFFFFFFFF8) + 48 <= v15)
    v17 = v15;
  else
    v17 = (v15 & 0xFFFFFFFFFFFFFFF8) + 48;
LABEL_49:
  v31 = a2;
LABEL_50:
  v32 = (_QWORD *)(((v11 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  v33 = (_QWORD *)(((v12 | 7) + v17 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v32 = *v33;
  swift_release();
  v34 = (_QWORD *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
  v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFF8;
  v36 = *(_QWORD *)v35;
  v35 += 15;
  *v34 = v36;
  swift_bridgeObjectRelease();
  v37 = ((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  v38 = *(_QWORD *)(v35 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v37 + 8) = *(_BYTE *)((v35 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v37 = v38;
  v39 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v37 + 24) = *(_BYTE *)((v35 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v37 + 16) = v39;
  v40 = *(_QWORD *)((v35 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v37 + 40) = *(_BYTE *)((v35 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v37 + 32) = v40;
  *(_BYTE *)(v37 + 41) = *(_BYTE *)((v35 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(_QWORD *)((v37 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v35 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFF8);
  v41 = ((v10 + 24) & ~v10)
      + (((((((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v42 = (_QWORD *)(((unint64_t)a1 + v41 + 7) & 0xFFFFFFFFFFFFFFF8);
  v43 = (_QWORD *)(((unint64_t)v31 + v41 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v42 = *v43;
  swift_bridgeObjectRelease();
  v44 = v42 + 1;
  v45 = v43[1];
  if (v42[1] >= 2uLL)
  {
    if (v45 >= 2)
    {
      *v44 = v45;
      swift_bridgeObjectRelease();
      goto LABEL_55;
    }
    sub_1BA66EA88((uint64_t)(v42 + 1), (unint64_t *)&qword_1ED3B9610, MEMORY[0x1E0DEB418], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v45 = v43[1];
  }
  *v44 = v45;
LABEL_55:
  v42[2] = v43[2];
  *(_QWORD *)(((unint64_t)v42 + 31) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v43 + 31) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAAEEEB8(int *a1, int a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_QWORD *)(v4 + 64);
  if (v5 <= ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v5 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v5 <= 0x10)
    v5 = 16;
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 48 > v5)
    v5 = (v5 & 0xFFFFFFFFFFFFFFF8) + 48;
  if (!a2)
    return 0;
  v6 = *(_DWORD *)(v4 + 80) & 0xF8;
  v7 = v6 | 7;
  if ((a2 & 0x80000000) == 0)
    goto LABEL_9;
  v10 = ((((v6 + 31) & ~v7)
        + (((((((v5 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
        + 39) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  v11 = v10 & 0xFFFFFFF8;
  v12 = a2 - 2147483646;
  if ((v10 & 0xFFFFFFF8) != 0)
    v12 = 2;
  if (v12 >= 0x10000)
    v13 = 4;
  else
    v13 = 2;
  if (v12 < 0x100)
    v14 = 1;
  else
    v14 = v13;
  if (v14 == 4)
  {
    v15 = *(int *)((char *)a1 + v10);
    if (!v15)
      goto LABEL_9;
  }
  else if (v14 == 2)
  {
    v15 = *(unsigned __int16 *)((char *)a1 + v10);
    if (!v15)
      goto LABEL_9;
  }
  else
  {
    v15 = *((unsigned __int8 *)a1 + v10);
    if (!v15)
    {
LABEL_9:
      v8 = *(_QWORD *)(((((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7)
                      + v5
                      + 8) & 0xFFFFFFFFFFFFF8);
      if (v8 >= 0xFFFFFFFF)
        LODWORD(v8) = -1;
      return (v8 + 1);
    }
  }
  v16 = v15 - 1;
  if (v11)
  {
    v16 = 0;
    v17 = *a1;
  }
  else
  {
    v17 = 0;
  }
  return (v17 | v16) ^ 0x80000000;
}

void sub_1BAAEF09C(unsigned int *a1, int a2, int a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  size_t v9;
  int v10;
  unsigned int v11;
  int v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_QWORD *)(v6 + 64);
  if (v7 <= ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v7 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v7 <= 0x10)
    v7 = 16;
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 48 > v7)
    v7 = (v7 & 0xFFFFFFFFFFFFFFF8) + 48;
  v8 = *(_DWORD *)(v6 + 80) & 0xF8;
  v9 = ((((v8 + 31) & ~(v8 | 7))
       + (((((((v7 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFFFF8)
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 8;
  if (a3 < 0)
  {
    v11 = a3 - 2147483646;
    if ((_DWORD)v9)
      v11 = 2;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v10 = 1;
    else
      v10 = v12;
    if ((a2 & 0x80000000) == 0)
LABEL_9:
      __asm { BR              X13 }
  }
  else
  {
    v10 = 0u;
    if ((a2 & 0x80000000) == 0)
      goto LABEL_9;
  }
  if ((_DWORD)v9)
  {
    bzero(a1, v9);
    *a1 = a2 ^ 0x80000000;
  }
  __asm { BR              X10 }
}

void sub_1BAAEF2A4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (!v1)
    JUMPOUT(0x1BAAEF28CLL);
  JUMPOUT(0x1BAAEF25CLL);
}

void sub_1BAAEF2B0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BAAEF28CLL);
}

void sub_1BAAEF2B8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BAAEF28CLL);
}

_QWORD *sub_1BAAEF2C4(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  char v34;
  unsigned int v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  unint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *result;

  *a1 = *a2;
  v3 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = v9 + 15;
  v11 = (unint64_t)v5 + v9 + 15;
  v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  v13 = v11 & v12;
  v14 = ((unint64_t)v6 + v10) & v12;
  v15 = *(_QWORD *)(v8 + 64);
  v16 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v15 > v16)
    v16 = *(_QWORD *)(v8 + 64);
  if (v16 <= 0x10)
    v17 = 16;
  else
    v17 = v16;
  if (v13 == v14)
  {
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17)
      v19 = v17;
    else
      v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  else
  {
    v18 = AssociatedTypeWitness;
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17)
      v19 = v17;
    else
      v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
    v21 = v17 + 1;
    switch(*(_BYTE *)(v13 + v19))
    {
      case 0:
      case 1:
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        v22 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v22 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_40;
        goto LABEL_34;
      case 2:
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        goto LABEL_40;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_40;
      case 6:
        v23 = *(unsigned __int8 *)(v13 + v17);
        if (v23 >= 3)
        {
          if (v17 <= 3)
            v24 = v17;
          else
            v24 = 4;
          __asm { BR              X12 }
        }
        if (v23 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v23 == 1)
        {
          (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
          v25 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v25 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v25);
        }
        v22 = ((v13 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
LABEL_34:
        __swift_destroy_boxed_opaque_existential_1(v22);
LABEL_40:
        switch(*(_BYTE *)(v14 + v19))
        {
          case 0:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, v18);
            v27 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
            v28 = ((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
            v29 = *(_QWORD *)(v28 + 24);
            if (v29 < 0xFFFFFFFF)
            {
              v37 = *(_OWORD *)(v28 + 16);
              *(_OWORD *)v27 = *(_OWORD *)v28;
              *(_OWORD *)(v27 + 16) = v37;
            }
            else
            {
              *(_QWORD *)(v27 + 24) = v29;
              (**(void (***)(void))(v29 - 8))();
            }
            *(_BYTE *)(v13 + v19) = 0;
            goto LABEL_69;
          case 1:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, v18);
            v30 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
            v31 = ((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
            v32 = *(_QWORD *)(v31 + 24);
            if (v32 < 0xFFFFFFFF)
            {
              v38 = *(_OWORD *)(v31 + 16);
              *(_OWORD *)v30 = *(_OWORD *)v31;
              *(_OWORD *)(v30 + 16) = v38;
            }
            else
            {
              *(_QWORD *)(v30 + 24) = v32;
              (**(void (***)(void))(v32 - 8))();
            }
            v33 = 1;
            goto LABEL_68;
          case 2:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, v18);
            v33 = 2;
            goto LABEL_68;
          case 3:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
            v34 = 3;
            goto LABEL_51;
          case 4:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
            v34 = 4;
            goto LABEL_51;
          case 5:
            *(_QWORD *)v13 = *(_QWORD *)v14;
            *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
            v34 = 5;
LABEL_51:
            *(_BYTE *)(v13 + v19) = v34;
            swift_bridgeObjectRetain();
            break;
          case 6:
            v35 = *(unsigned __int8 *)(v14 + v17);
            if (v35 >= 3)
            {
              if (v17 <= 3)
                v36 = v17;
              else
                v36 = 4;
              __asm { BR              X12 }
            }
            if (v35 == 2)
            {
              *(_QWORD *)v13 = *(_QWORD *)v14;
              *(_QWORD *)(v13 + 8) = *(_QWORD *)(v14 + 8);
              *(_BYTE *)(v13 + v17) = 2;
              swift_bridgeObjectRetain();
            }
            else if (v35 == 1)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, v18);
              *(_BYTE *)(v13 + v17) = 1;
            }
            else
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(v13, v14, v18);
              v39 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
              v40 = ((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
              v41 = *(_QWORD *)(v40 + 24);
              if (v41 < 0xFFFFFFFF)
              {
                v42 = *(_OWORD *)(v40 + 16);
                *(_OWORD *)v39 = *(_OWORD *)v40;
                *(_OWORD *)(v39 + 16) = v42;
              }
              else
              {
                *(_QWORD *)(v39 + 24) = v41;
                (**(void (***)(void))(v41 - 8))();
              }
              *(_BYTE *)(v13 + v17) = 0;
            }
            v43 = ((v13 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
            v44 = ((v14 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
            v45 = *(_QWORD *)(v44 + 24);
            *(_QWORD *)(v43 + 24) = v45;
            *(_QWORD *)(v43 + 32) = *(_QWORD *)(v44 + 32);
            (**(void (***)(void))(v45 - 8))();
            v33 = 6;
LABEL_68:
            *(_BYTE *)(v13 + v19) = v33;
            break;
          default:
            if (v19 <= 3)
              v26 = v19;
            else
              v26 = 4;
            __asm { BR              X12 }
            return result;
        }
        return result;
      default:
        if (v19 <= 3)
          v20 = v19;
        else
          v20 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
LABEL_69:
  v46 = (_QWORD *)(((v13 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  v47 = (v14 | 7) + v19 + 1;
  v48 = (v47 & 0xFFFFFFFFFFFFFFF8) + 15;
  *v46 = *(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  v49 = (_QWORD *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  v48 &= 0xFFFFFFFFFFFFF8uLL;
  v50 = *(_QWORD *)v48;
  v48 += 15;
  *v49 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  v52 = *(_QWORD *)(v48 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v51 + 8) = *(_BYTE *)((v48 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v51 = v52;
  v53 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v51 + 24) = *(_BYTE *)((v48 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v51 + 16) = v53;
  v54 = *(_QWORD *)((v48 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v51 + 40) = *(_BYTE *)((v48 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v51 + 32) = v54;
  *(_BYTE *)(v51 + 41) = *(_BYTE *)((v48 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(_QWORD *)((v51 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v48 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1BAAEF998(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char v21;
  _OWORD *v22;
  __int128 v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  _OWORD *v27;
  unsigned int v28;
  uint64_t v29;
  char v30;
  _OWORD *v31;
  __int128 v32;
  _OWORD *v33;
  unint64_t v34;
  unint64_t v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  _OWORD *v42;
  __int128 *v43;
  __int128 v44;
  __int128 v45;
  _QWORD *result;

  *a1 = *a2;
  v3 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = v9 + 15;
  v11 = (unint64_t)v5 + v9 + 15;
  v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  v13 = v11 & v12;
  v14 = ((unint64_t)v6 + v10) & v12;
  v15 = *(_QWORD *)(v8 + 64);
  v16 = v15 + 7;
  if (v15 <= ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32)
    v15 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v15 <= 0x10)
    v17 = 16;
  else
    v17 = v15;
  if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17)
    v18 = v17;
  else
    v18 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
  v20 = v17 + 1;
  switch(*(_BYTE *)(v14 + v18))
  {
    case 0:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
      v21 = 0;
      v22 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
      v23 = v22[1];
      v24 = (_OWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
      *v24 = *v22;
      v24[1] = v23;
      break;
    case 1:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
      v25 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
      v26 = v25[1];
      v27 = (_OWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
      *v27 = *v25;
      v27[1] = v26;
      v21 = 1;
      break;
    case 2:
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
      v21 = 2;
      break;
    case 3:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v21 = 3;
      break;
    case 4:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v21 = 4;
      break;
    case 5:
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v21 = 5;
      break;
    case 6:
      v28 = *(unsigned __int8 *)(v14 + v17);
      if (v28 >= 3)
      {
        if (v17 <= 3)
          v29 = v17;
        else
          v29 = 4;
        __asm { BR              X13 }
      }
      if (v28 == 2)
      {
        *(_OWORD *)v13 = *(_OWORD *)v14;
        v30 = 2;
      }
      else if (v28 == 1)
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
        v30 = 1;
      }
      else
      {
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, AssociatedTypeWitness);
        v30 = 0;
        v31 = (_OWORD *)((v16 + v14) & 0xFFFFFFFFFFFFFFF8);
        v32 = v31[1];
        v33 = (_OWORD *)((v16 + v13) & 0xFFFFFFFFFFFFFFF8);
        *v33 = *v31;
        v33[1] = v32;
      }
      *(_BYTE *)(v13 + v17) = v30;
      v34 = ((v13 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      v35 = ((v14 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      v36 = *(_OWORD *)v35;
      v37 = *(_OWORD *)(v35 + 16);
      *(_QWORD *)(v34 + 32) = *(_QWORD *)(v35 + 32);
      *(_OWORD *)v34 = v36;
      *(_OWORD *)(v34 + 16) = v37;
      v21 = 6;
      break;
    default:
      if (v18 <= 3)
        v19 = v18;
      else
        v19 = 4;
      __asm { BR              X13 }
      return result;
  }
  *(_BYTE *)(v13 + v18) = v21;
  v38 = (_QWORD *)(((v14 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  v39 = (_QWORD *)(((v13 | 7) + v18 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v39 = *v38;
  v40 = (_QWORD *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  v41 = (_QWORD *)(((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFF8);
  *v41 = *v40;
  v42 = (_OWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  v43 = (__int128 *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8);
  v44 = *v43;
  v45 = v43[1];
  *(_OWORD *)((char *)v42 + 26) = *(__int128 *)((char *)v43 + 26);
  *v42 = v44;
  v42[1] = v45;
  *(_QWORD *)(((unint64_t)v42 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v43 + 49) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_1BAAEFD68(_QWORD *a1, _QWORD *a2)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unsigned int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _OWORD *v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  _OWORD *v31;
  __int128 v32;
  char v33;
  unsigned int v34;
  uint64_t v35;
  char v36;
  _OWORD *v37;
  __int128 v38;
  _OWORD *v39;
  unint64_t v40;
  unint64_t v41;
  __int128 v42;
  __int128 v43;
  _QWORD *v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *result;

  *a1 = *a2;
  v3 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFF8);
  v4 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFF8);
  *v3 = *v4;
  v5 = (_QWORD *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 = (_QWORD *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v5 = *v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  v10 = v9 + 15;
  v11 = (unint64_t)v5 + v9 + 15;
  v12 = ~v9 & 0xFFFFFFFFFFFFFFF8;
  v13 = v11 & v12;
  v14 = ((unint64_t)v6 + v10) & v12;
  v15 = *(_QWORD *)(v8 + 64);
  v16 = ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 32;
  if (v15 > v16)
    v16 = *(_QWORD *)(v8 + 64);
  if (v16 <= 0x10)
    v17 = 16;
  else
    v17 = v16;
  if (v13 == v14)
  {
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17)
      v19 = v17;
    else
      v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
  }
  else
  {
    v18 = AssociatedTypeWitness;
    if ((v17 & 0xFFFFFFFFFFFFFFF8) + 48 <= v17)
      v19 = v17;
    else
      v19 = (v17 & 0xFFFFFFFFFFFFFFF8) + 48;
    v21 = v17 + 1;
    switch(*(_BYTE *)(v13 + v19))
    {
      case 0:
      case 1:
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        v22 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
        if (*(_QWORD *)(v22 + 24) < 0xFFFFFFFFuLL)
          goto LABEL_41;
        goto LABEL_35;
      case 2:
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        goto LABEL_41;
      case 3:
      case 4:
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      case 6:
        v23 = *(unsigned __int8 *)(v13 + v17);
        if (v23 >= 3)
        {
          if (v17 <= 3)
            v24 = v17;
          else
            v24 = 4;
          __asm { BR              X12 }
        }
        if (v23 == 2)
        {
          swift_bridgeObjectRelease();
        }
        else if (v23 == 1)
        {
          (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
        }
        else
        {
          (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
          v25 = ((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8;
          if (*(_QWORD *)(v25 + 24) >= 0xFFFFFFFFuLL)
            __swift_destroy_boxed_opaque_existential_1(v25);
        }
        v22 = ((v13 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
LABEL_35:
        __swift_destroy_boxed_opaque_existential_1(v22);
LABEL_41:
        switch(*(_BYTE *)(v14 + v19))
        {
          case 0:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, v18);
            v27 = (_OWORD *)(((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
            v28 = v27[1];
            v29 = (_OWORD *)(((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
            *v29 = *v27;
            v29[1] = v28;
            *(_BYTE *)(v13 + v19) = 0;
            goto LABEL_60;
          case 1:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, v18);
            v30 = (_OWORD *)(((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
            v31 = (_OWORD *)(((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
            v32 = v31[1];
            *v30 = *v31;
            v30[1] = v32;
            v33 = 1;
            goto LABEL_59;
          case 2:
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, v18);
            v33 = 2;
            goto LABEL_59;
          case 3:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v33 = 3;
            goto LABEL_59;
          case 4:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v33 = 4;
            goto LABEL_59;
          case 5:
            *(_OWORD *)v13 = *(_OWORD *)v14;
            v33 = 5;
            goto LABEL_59;
          case 6:
            v34 = *(unsigned __int8 *)(v14 + v17);
            if (v34 >= 3)
            {
              if (v17 <= 3)
                v35 = v17;
              else
                v35 = 4;
              __asm { BR              X12 }
            }
            if (v34 == 2)
            {
              *(_OWORD *)v13 = *(_OWORD *)v14;
              v36 = 2;
            }
            else if (v34 == 1)
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, v18);
              v36 = 1;
            }
            else
            {
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(v13, v14, v18);
              v36 = 0;
              v37 = (_OWORD *)(((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
              v38 = v37[1];
              v39 = (_OWORD *)(((v13 | 7) + v15) & 0xFFFFFFFFFFFFFFF8);
              *v39 = *v37;
              v39[1] = v38;
            }
            *(_BYTE *)(v13 + v17) = v36;
            v40 = ((v13 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
            v41 = ((v14 | 7) + v21) & 0xFFFFFFFFFFFFFFF8;
            v42 = *(_OWORD *)v41;
            v43 = *(_OWORD *)(v41 + 16);
            *(_QWORD *)(v40 + 32) = *(_QWORD *)(v41 + 32);
            *(_OWORD *)v40 = v42;
            *(_OWORD *)(v40 + 16) = v43;
            v33 = 6;
LABEL_59:
            *(_BYTE *)(v13 + v19) = v33;
            break;
          default:
            if (v19 <= 3)
              v26 = v19;
            else
              v26 = 4;
            __asm { BR              X12 }
            return result;
        }
        return result;
      default:
        if (v19 <= 3)
          v20 = v19;
        else
          v20 = 4;
        __asm { BR              X12 }
        return result;
    }
  }
LABEL_60:
  v44 = (_QWORD *)(((v13 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  v45 = (_QWORD *)(((v14 | 7) + v19 + 1) & 0xFFFFFFFFFFFFFFF8);
  *v44 = *v45;
  swift_release();
  v46 = (_QWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
  v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFF8;
  v48 = *(_QWORD *)v47;
  v47 += 15;
  *v46 = v48;
  swift_bridgeObjectRelease();
  v49 = ((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8;
  v50 = *(_QWORD *)(v47 & 0xFFFFFFFFFFFFFFF8);
  *(_BYTE *)(v49 + 8) = *(_BYTE *)((v47 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)v49 = v50;
  v51 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_BYTE *)(v49 + 24) = *(_BYTE *)((v47 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(_QWORD *)(v49 + 16) = v51;
  v52 = *(_QWORD *)((v47 & 0xFFFFFFFFFFFFFFF8) + 32);
  *(_BYTE *)(v49 + 40) = *(_BYTE *)((v47 & 0xFFFFFFFFFFFFFFF8) + 40);
  *(_QWORD *)(v49 + 32) = v52;
  *(_BYTE *)(v49 + 41) = *(_BYTE *)((v47 & 0xFFFFFFFFFFFFFFF8) + 41);
  *(_QWORD *)((v49 + 49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((v47 & 0xFFFFFFFFFFFFFFF8) + 49) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BAAF037C()
{
  return sub_1BAAED15C();
}

uint64_t sub_1BAAF0398(_QWORD *a1)
{
  return sub_1BAAED05C(a1);
}

BOOL sub_1BAAF03AC()
{
  return sub_1BAAED254();
}

uint64_t sub_1BAAF03C4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1BAAECF38(a1, a2);
}

id FeedBannerAdView.bannerView.getter()
{
  uint64_t v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1;
  return v2;
}

void sub_1BAAF0428(uint64_t a1)
{
  id v1;
  uint64_t v2;
  id v3;

  v1 = *(id *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(id *)a1;
  sub_1BAAF09E8(v1, v2);

}

void FeedBannerAdView.bannerView.setter(void *a1, uint64_t a2)
{
  sub_1BAAF09E8(a1, a2);

}

void (*FeedBannerAdView.bannerView.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  char *v3;
  __int128 *v4;
  __int128 v5;
  id v6;

  v3 = (char *)malloc(0x30uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 5) = v1;
  v4 = (__int128 *)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  v5 = *v4;
  *(_OWORD *)(v3 + 24) = *v4;
  v6 = (id)v5;
  return sub_1BAAF050C;
}

void sub_1BAAF050C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void **v4;
  uint64_t v5;
  id v6;

  v2 = *(void **)a1;
  v4 = (void **)(*(_QWORD *)a1 + 24);
  v3 = *v4;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    v6 = v3;
    sub_1BAAF09E8(v3, v5);

    v3 = *v4;
  }
  else
  {
    sub_1BAAF09E8(*(id *)(*(_QWORD *)a1 + 24), v5);
  }

  free(v2);
}

id FeedBannerAdView.debugView.getter()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView];
  }
  else
  {
    sub_1BB871FD4();
    v4 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
    objc_msgSend(v0, sel_addSubview_, v4);
    v5 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

void FeedBannerAdView.debugView.setter(uint64_t a1)
{
  uint64_t v1;
  void *v2;

  v2 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView) = a1;

}

void (*FeedBannerAdView.debugView.modify(id *a1))(uint64_t *a1)
{
  void *v1;

  a1[1] = v1;
  *a1 = FeedBannerAdView.debugView.getter();
  return sub_1BAAF0650;
}

void sub_1BAAF0650(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView) = v2;

}

id FeedBannerAdView.__allocating_init(frame:)(double a1, double a2, double a3, double a4)
{
  objc_class *v4;

  return objc_msgSend(objc_allocWithZone(v4), sel_initWithFrame_, a1, a2, a3, a4);
}

id FeedBannerAdView.init(frame:)(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithFrame_, a1, a2, a3, a4);
}

id FeedBannerAdView.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

id FeedBannerAdView.init(coder:)(void *a1)
{
  char *v1;
  objc_class *ObjectType;
  char *v4;
  id v5;
  objc_super v7;

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = &v1[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView];
  *(_QWORD *)v4 = 0;
  *((_QWORD *)v4 + 1) = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView] = 0;
  v7.receiver = v1;
  v7.super_class = ObjectType;
  v5 = objc_msgSendSuper2(&v7, sel_initWithCoder_, a1);

  return v5;
}

id FeedBannerAdView.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1BAAF0938()
{
  _QWORD *v0;
  id *v1;
  id v2;
  id v3;

  v1 = (id *)(*v0 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  v2 = *v1;
  v3 = *v1;
  return v2;
}

id sub_1BAAF098C()
{
  return FeedBannerAdView.debugView.getter();
}

void sub_1BAAF09B0()
{
  sub_1BA83D6CC(qword_1ED3B1138, (uint64_t)&protocol conformance descriptor for FeedBannerAdView);
  JUMPOUT(0x1BCCE1E7CLL);
}

void sub_1BAAF09E8(id a1, uint64_t a2)
{
  char *v2;
  char *v5;
  char *v6;
  char *v7;
  id v8;
  id v9;
  id v10;
  char *v11;
  char *v12;
  id v13;

  v5 = &v2[OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView];
  swift_beginAccess();
  if (*(_QWORD *)v5)
  {
    v6 = (char *)objc_msgSend(*(id *)v5, sel_superview);
    if (v6)
    {
      v7 = v6;

      if (v7 == v2)
      {
        v13 = *(id *)v5;
        if (*(_QWORD *)v5)
        {
          if (!a1 || v13 != a1)
            objc_msgSend(v13, sel_removeFromSuperview);
        }
      }
    }
  }
  v8 = *(id *)v5;
  *(_QWORD *)v5 = a1;
  *((_QWORD *)v5 + 1) = a2;
  v9 = a1;

  if (*(_QWORD *)v5)
  {
    v10 = *(id *)v5;
    v11 = (char *)objc_msgSend(v10, sel_superview);
    if (!v11 || (v12 = v11, v11, v12 != v2))
      objc_msgSend(v2, sel_addSubview_, v10);

  }
}

id sub_1BAAF0AF0@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  __int128 *v3;
  __int128 v4;

  v3 = (__int128 *)(*a1 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView_bannerView);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return (id)v4;
}

id sub_1BAAF0B48@<X0>(_QWORD *a1@<X8>)
{
  id result;

  result = FeedBannerAdView.debugView.getter();
  *a1 = result;
  return result;
}

void sub_1BAAF0B70(void **a1, _QWORD *a2)
{
  void *v2;
  id v3;
  id v4;

  v2 = *a1;
  v4 = *(id *)(*a2 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView);
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC8NewsFeed16FeedBannerAdView____lazy_storage___debugView) = *a1;
  v3 = v2;

}

uint64_t FormatProgressViewNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatProgressViewNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatProgressViewNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatProgressViewNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatProgressViewNodeStyle.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.progressColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 64);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatProgressViewNodeStyle.trackColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatProgressViewNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t FormatProgressViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:progressColor:trackColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, char a9)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v17 = swift_allocObject();
  v18 = *a6;
  v19 = *a7;
  v20 = *a8;
  swift_beginAccess();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = v18;
  *(_QWORD *)(v17 + 64) = v19;
  *(_QWORD *)(v17 + 72) = v20;
  *(_BYTE *)(v17 + 80) = a9;
  return v17;
}

uint64_t FormatProgressViewNodeStyle.init(identifier:class:selectors:alpha:progressColor:trackColor:ignoresSmartInvertColors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6, uint64_t *a7, uint64_t *a8, char a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v15 = *a6;
  v16 = *a7;
  v17 = *a8;
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  swift_beginAccess();
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 56) = v15;
  *(_QWORD *)(v9 + 64) = v16;
  *(_QWORD *)(v9 + 72) = v17;
  *(_BYTE *)(v9 + 80) = a9;
  return v9;
}

uint64_t sub_1BAAF0EF4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  BOOL v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  char v63;
  char v64;
  unint64_t v65;
  uint64_t v66;
  _BOOL8 v67;
  uint64_t v68;
  char v69;
  unint64_t v70;
  char v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  _QWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  unint64_t v114;
  unint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  uint64_t v124;
  uint64_t result;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  char v146;
  char v147;
  char v148;
  uint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  _QWORD *v152;
  _QWORD *v153;

  swift_beginAccess();
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v6 = v1[5];
  swift_beginAccess();
  v131 = v1;
  v7 = v1[6];
  swift_beginAccess();
  v130 = a1;
  v8 = *(_QWORD *)(a1 + 48);
  v153 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v9 = *(_QWORD *)(v7 + 16);
  if (__OFADD__(v9, *(_QWORD *)(v8 + 16)))
    goto LABEL_88;
  v140 = *(_QWORD *)(v8 + 16);
  v127 = v5;
  v129 = v3;
  sub_1BAAF2D20();
  v128 = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v152 = sub_1BA6E6D30(0, v9, 0, MEMORY[0x1E0DEE9D8]);
  v10 = *(_QWORD *)(v7 + 16);
  v126 = v6;
  v139 = v8;
  if (!v10)
    goto LABEL_18;
  swift_bridgeObjectRetain();
  v11 = 0;
  do
  {
    v145 = v11;
    v13 = *(_QWORD *)(v7 + v11 + 32);
    v12 = *(_QWORD *)(v7 + v11 + 40);
    v15 = *(_QWORD *)(v7 + v11 + 48);
    v14 = *(_QWORD *)(v7 + v11 + 56);
    v16 = *(_QWORD *)(v7 + v11 + 64);
    v148 = *(_BYTE *)(v7 + v11 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v14);
    sub_1BA5E7FF4(v16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v14);
    sub_1BA5E7FF4(v16);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19 = sub_1BA6E35A8(v13, v12);
    v20 = v153[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      __break(1u);
LABEL_88:
      __break(1u);
LABEL_89:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v23 = v18;
    if (v153[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C5C84();
    }
    else
    {
      sub_1BB4B41E8(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1BA6E35A8(v13, v12);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_89;
      v19 = v24;
    }
    v143 = v10;
    if ((v23 & 1) != 0)
    {
      v26 = v153[7] + 48 * v19;
      v27 = *(_QWORD *)(v26 + 24);
      v28 = *(_QWORD *)(v26 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5E800C(v27);
      sub_1BA5E800C(v28);
      *(_QWORD *)v26 = v13;
      *(_QWORD *)(v26 + 8) = v12;
      *(_QWORD *)(v26 + 16) = v15;
      *(_QWORD *)(v26 + 24) = v14;
      *(_QWORD *)(v26 + 32) = v16;
      *(_BYTE *)(v26 + 40) = v148;
    }
    else
    {
      v153[(v19 >> 6) + 8] |= 1 << v19;
      v29 = (uint64_t *)(v153[6] + 16 * v19);
      *v29 = v13;
      v29[1] = v12;
      v30 = v153[7] + 48 * v19;
      *(_QWORD *)v30 = v13;
      *(_QWORD *)(v30 + 8) = v12;
      *(_QWORD *)(v30 + 16) = v15;
      *(_QWORD *)(v30 + 24) = v14;
      *(_QWORD *)(v30 + 32) = v16;
      *(_BYTE *)(v30 + 40) = v148;
      v31 = v153[2];
      v32 = __OFADD__(v31, 1);
      v33 = v31 + 1;
      if (v32)
        goto LABEL_84;
      v153[2] = v33;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v152[2];
    v35 = v152[3];
    swift_bridgeObjectRetain();
    if (v34 >= v35 >> 1)
      v152 = sub_1BA6E6D30((_QWORD *)(v35 > 1), v34 + 1, 1, v152);
    v152[2] = v34 + 1;
    v36 = &v152[2 * v34];
    v36[4] = v13;
    v36[5] = v12;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5E800C(v14);
    sub_1BA5E800C(v16);
    v11 = v145 + 48;
    v10 = v143 - 1;
  }
  while (v143 != 1);
  swift_bridgeObjectRelease();
  v8 = v139;
LABEL_18:
  v37 = sub_1BA6E6D30(0, v140, 0, MEMORY[0x1E0DEE9D8]);
  v38 = *(_QWORD *)(v8 + 16);
  if (!v38)
    goto LABEL_60;
  swift_bridgeObjectRetain();
  v39 = 0;
  while (2)
  {
    v43 = v8 + v39;
    v45 = *(_QWORD *)(v8 + v39 + 32);
    v44 = *(_QWORD *)(v8 + v39 + 40);
    v46 = *(_QWORD *)(v8 + v39 + 48);
    v47 = *(_QWORD *)(v8 + v39 + 56);
    v48 = *(_QWORD *)(v8 + v39 + 64);
    v146 = *(_BYTE *)(v43 + 72);
    v49 = v153[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v47);
    sub_1BA5E7FF4(v48);
    v144 = v38;
    if (!v49)
    {
LABEL_39:
      v142 = v39;
      v73 = v37;
      swift_bridgeObjectRetain();
      v74 = v46;
      swift_bridgeObjectRetain();
      v75 = v47;
      sub_1BA5E7FF4(v47);
      v150 = v48;
      sub_1BA5E7FF4(v48);
      swift_bridgeObjectRetain();
      v76 = swift_isUniquelyReferenced_nonNull_native();
      v78 = sub_1BA6E35A8(v45, v44);
      v79 = v153[2];
      v80 = (v77 & 1) == 0;
      v81 = v79 + v80;
      if (__OFADD__(v79, v80))
        goto LABEL_83;
      v82 = v77;
      if (v153[3] < v81)
      {
        sub_1BB4B41E8(v81, v76);
        v83 = sub_1BA6E35A8(v45, v44);
        if ((v82 & 1) != (v84 & 1))
          goto LABEL_89;
        v78 = v83;
        v85 = v153;
        if ((v82 & 1) == 0)
          goto LABEL_52;
LABEL_46:
        v86 = v85[7] + 48 * v78;
        v87 = *(_QWORD *)(v86 + 24);
        v88 = *(_QWORD *)(v86 + 32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v87);
        sub_1BA5E800C(v88);
        *(_QWORD *)v86 = v45;
        *(_QWORD *)(v86 + 8) = v44;
        *(_QWORD *)(v86 + 16) = v74;
        *(_QWORD *)(v86 + 24) = v75;
        *(_QWORD *)(v86 + 32) = v150;
        *(_BYTE *)(v86 + 40) = v146;
LABEL_54:
        v153 = v85;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v37 = v73;
        v97 = v73[2];
        v98 = v73[3];
        swift_bridgeObjectRetain();
        if (v97 >= v98 >> 1)
          v37 = sub_1BA6E6D30((_QWORD *)(v98 > 1), v97 + 1, 1, v73);
        v8 = v139;
        v39 = v142;
        v37[2] = v97 + 1;
        v99 = &v37[2 * v97];
        v99[4] = v45;
        v99[5] = v44;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5E800C(v75);
        sub_1BA5E800C(v150);
        v60 = v144;
        goto LABEL_22;
      }
      if ((v76 & 1) != 0)
      {
        v85 = v153;
        if ((v77 & 1) != 0)
          goto LABEL_46;
      }
      else
      {
        sub_1BB4C5C84();
        v85 = v153;
        if ((v82 & 1) != 0)
          goto LABEL_46;
      }
LABEL_52:
      v85[(v78 >> 6) + 8] |= 1 << v78;
      v93 = (uint64_t *)(v85[6] + 16 * v78);
      *v93 = v45;
      v93[1] = v44;
      v94 = v85[7] + 48 * v78;
      *(_QWORD *)v94 = v45;
      *(_QWORD *)(v94 + 8) = v44;
      *(_QWORD *)(v94 + 16) = v74;
      *(_QWORD *)(v94 + 24) = v75;
      *(_QWORD *)(v94 + 32) = v150;
      *(_BYTE *)(v94 + 40) = v146;
      v95 = v85[2];
      v32 = __OFADD__(v95, 1);
      v96 = v95 + 1;
      if (v32)
        goto LABEL_85;
      v85[2] = v96;
      swift_bridgeObjectRetain();
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    v50 = sub_1BA6E35A8(v45, v44);
    if ((v51 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_39;
    }
    v136 = v37;
    v52 = v153[7] + 48 * v50;
    v53 = *(_QWORD *)(v52 + 8);
    v149 = *(_QWORD *)v52;
    v55 = *(_QWORD *)(v52 + 16);
    v54 = *(_QWORD *)(v52 + 24);
    v56 = *(_QWORD *)(v52 + 32);
    v135 = *(unsigned __int8 *)(v52 + 40);
    swift_bridgeObjectRetain();
    v141 = v53;
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v54);
    v138 = v56;
    sub_1BA5E7FF4(v56);
    swift_bridgeObjectRelease();
    v57 = v55;
    if (!v55)
    {
      swift_bridgeObjectRetain();
      v57 = v46;
    }
    v134 = v57;
    v58 = v54;
    v137 = v54;
    if ((~v54 & 0xF000000000000007) == 0)
    {
      sub_1BA5E7FF4(v47);
      v58 = v47;
    }
    v132 = v47;
    v133 = v58;
    v59 = v56;
    v60 = v144;
    if ((~v56 & 0xF000000000000007) == 0)
    {
      sub_1BA5E7FF4(v48);
      v59 = v48;
    }
    v61 = v48;
    v62 = v146;
    if (v135 != 2)
      v62 = v135;
    v147 = v62;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BA5E7FF4(v137);
    sub_1BA5E7FF4(v56);
    v63 = swift_isUniquelyReferenced_nonNull_native();
    v65 = sub_1BA6E35A8(v149, v53);
    v66 = v153[2];
    v67 = (v64 & 1) == 0;
    v68 = v66 + v67;
    if (__OFADD__(v66, v67))
      goto LABEL_86;
    v69 = v64;
    if (v153[3] >= v68)
    {
      if ((v63 & 1) != 0)
      {
        v72 = v153;
        if ((v64 & 1) == 0)
          goto LABEL_49;
      }
      else
      {
        sub_1BB4C5C84();
        v72 = v153;
        if ((v69 & 1) == 0)
          goto LABEL_49;
      }
      goto LABEL_20;
    }
    sub_1BB4B41E8(v68, v63);
    v70 = sub_1BA6E35A8(v149, v53);
    if ((v69 & 1) != (v71 & 1))
      goto LABEL_89;
    v65 = v70;
    v72 = v153;
    if ((v69 & 1) != 0)
    {
LABEL_20:
      v40 = v72[7] + 48 * v65;
      v41 = *(_QWORD *)(v40 + 24);
      v42 = *(_QWORD *)(v40 + 32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA5E800C(v41);
      sub_1BA5E800C(v42);
      *(_QWORD *)v40 = v149;
      *(_QWORD *)(v40 + 8) = v141;
      *(_QWORD *)(v40 + 16) = v134;
      *(_QWORD *)(v40 + 24) = v133;
      *(_QWORD *)(v40 + 32) = v59;
      *(_BYTE *)(v40 + 40) = v147;
      goto LABEL_21;
    }
LABEL_49:
    v72[(v65 >> 6) + 8] |= 1 << v65;
    v89 = (uint64_t *)(v72[6] + 16 * v65);
    *v89 = v149;
    v89[1] = v53;
    v90 = v72[7] + 48 * v65;
    *(_QWORD *)v90 = v149;
    *(_QWORD *)(v90 + 8) = v53;
    *(_QWORD *)(v90 + 16) = v134;
    *(_QWORD *)(v90 + 24) = v133;
    *(_QWORD *)(v90 + 32) = v59;
    *(_BYTE *)(v90 + 40) = v147;
    v91 = v72[2];
    v32 = __OFADD__(v91, 1);
    v92 = v91 + 1;
    if (v32)
      goto LABEL_87;
    v72[2] = v92;
    swift_bridgeObjectRetain();
LABEL_21:
    v153 = v72;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1BA5E800C(v137);
    sub_1BA5E800C(v138);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA5E800C(v132);
    sub_1BA5E800C(v61);
    v8 = v139;
    v37 = v136;
LABEL_22:
    v39 += 48;
    v38 = v60 - 1;
    if (v38)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_60:
  swift_bridgeObjectRetain();
  v100 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v100);
  v101 = v37[2];
  if (v101)
  {
    swift_bridgeObjectRetain();
    v102 = v37 + 5;
    v151 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v153[2])
      {
        v103 = *(v102 - 1);
        v104 = *v102;
        swift_bridgeObjectRetain_n();
        v105 = sub_1BA6E35A8(v103, v104);
        if ((v106 & 1) != 0)
        {
          v107 = v153[7] + 48 * v105;
          v109 = *(_QWORD *)v107;
          v108 = *(_QWORD *)(v107 + 8);
          v110 = *(_QWORD *)(v107 + 16);
          v111 = *(_QWORD *)(v107 + 24);
          v112 = *(_QWORD *)(v107 + 32);
          v113 = *(_BYTE *)(v107 + 40);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA5E7FF4(v111);
          sub_1BA5E7FF4(v112);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v151 = sub_1BB38E338(0, v151[2] + 1, 1, v151);
          v115 = v151[2];
          v114 = v151[3];
          if (v115 >= v114 >> 1)
            v151 = sub_1BB38E338((_QWORD *)(v114 > 1), v115 + 1, 1, v151);
          v151[2] = v115 + 1;
          v116 = &v151[6 * v115];
          v116[4] = v109;
          v116[5] = v108;
          v116[6] = v110;
          v116[7] = v111;
          v116[8] = v112;
          *((_BYTE *)v116 + 72) = v113;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v102 += 2;
      --v101;
    }
    while (v101);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v151 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v117 = v131;
  v118 = v131[7];
  if (!v118)
  {
    v118 = *(_QWORD *)(v130 + 56);
    swift_bridgeObjectRetain();
    v117 = v131;
  }
  v119 = v117[8];
  v120 = v119;
  if ((~v119 & 0xF000000000000007) == 0)
  {
    v120 = *(_QWORD *)(v130 + 64);
    sub_1BA5E7FF4(v120);
    v117 = v131;
  }
  v121 = v117[9];
  v122 = v121;
  if ((~v121 & 0xF000000000000007) == 0)
  {
    v122 = *(_QWORD *)(v130 + 72);
    sub_1BA5E7FF4(v122);
    v117 = v131;
  }
  v123 = *((unsigned __int8 *)v117 + 80);
  if (v123 == 2)
    LOBYTE(v123) = *(_BYTE *)(v130 + 80);
  v124 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v124 + 16) = v129;
  *(_QWORD *)(v124 + 24) = v128;
  *(_QWORD *)(v124 + 32) = v127;
  *(_QWORD *)(v124 + 40) = v126;
  swift_beginAccess();
  *(_QWORD *)(v124 + 48) = v151;
  *(_QWORD *)(v124 + 56) = v118;
  *(_QWORD *)(v124 + 64) = v120;
  *(_QWORD *)(v124 + 72) = v122;
  *(_BYTE *)(v124 + 80) = v123;
  swift_bridgeObjectRetain();
  sub_1BA5E7FF4(v119);
  sub_1BA5E7FF4(v121);
  return v124;
}

uint64_t sub_1BAAF1B08(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  unsigned int v19;
  unint64_t v20;
  size_t v21;
  uint64_t isStackAllocationSafe;
  char *v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  unint64_t v32;
  char v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unint64_t v51;
  unint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  unsigned __int8 *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  uint64_t result;
  _QWORD *v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90[7];

  v88 = a1;
  v89 = 0;
  v90[6] = *MEMORY[0x1E0C80C00];
  v78 = *v1;
  swift_beginAccess();
  v72 = v1;
  v2 = v1[6];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v74 = sub_1BB38E338(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v73 = sub_1BB38E214(0, v3, 0, v4);
  v5 = *(_QWORD *)(v2 + 16);
  v75 = v2;
  v77 = v5;
  if (!v5)
  {
LABEL_30:
    sub_1BAAF2D80(0);
    v42 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v43 = *(_QWORD *)(v42 + 16);
    v88 = v42;
    if (v43)
    {
      v44 = v42 + 40;
      v45 = v74;
      do
      {
        v46 = *(_QWORD *)v44;
        v89 = *(void **)(v44 - 8);
        v47 = *(_QWORD *)(v44 + 8);
        v48 = *(_QWORD *)(v44 + 16);
        v49 = *(_QWORD *)(v44 + 24);
        v50 = *(_BYTE *)(v44 + 32);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v48);
        sub_1BA5E7FF4(v49);
        v52 = v45[2];
        v51 = v45[3];
        if (v52 >= v51 >> 1)
          v45 = sub_1BB38E338((_QWORD *)(v51 > 1), v52 + 1, 1, v45);
        v44 += 56;
        v45[2] = v52 + 1;
        v53 = &v45[6 * v52];
        v53[4] = v89;
        v53[5] = v46;
        v53[6] = v47;
        v53[7] = v48;
        v53[8] = v49;
        *((_BYTE *)v53 + 72) = v50;
        --v43;
      }
      while (v43);
    }
    else
    {
      v45 = v74;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v54 = v45[2];
    if (v54)
    {
      v55 = v72;
      swift_retain();
      swift_bridgeObjectRetain();
      v74 = v45;
      v56 = (unsigned __int8 *)(v45 + 9);
      do
      {
        v58 = *((_QWORD *)v56 - 3);
        v57 = *((_QWORD *)v56 - 2);
        v59 = *((_QWORD *)v56 - 1);
        LODWORD(v89) = *v56;
        v60 = swift_allocObject();
        swift_beginAccess();
        v61 = v55;
        v63 = v55[2];
        v62 = v55[3];
        swift_beginAccess();
        *(_QWORD *)(v60 + 16) = v63;
        *(_QWORD *)(v60 + 24) = v62;
        v88 = v62;
        v64 = v61[5];
        *(_QWORD *)(v60 + 32) = v61[4];
        *(_QWORD *)(v60 + 40) = v64;
        swift_beginAccess();
        v65 = v61;
        v66 = v61[6];
        swift_beginAccess();
        *(_QWORD *)(v60 + 48) = v66;
        v67 = v58;
        if (!v58)
          v67 = swift_bridgeObjectRetain();
        *(_QWORD *)(v60 + 56) = v67;
        v68 = v57;
        if ((~v57 & 0xF000000000000007) == 0)
        {
          v68 = v65[8];
          sub_1BA5E7FF4(v68);
        }
        *(_QWORD *)(v60 + 64) = v68;
        v69 = v59;
        if ((~v59 & 0xF000000000000007) == 0)
        {
          v69 = v65[9];
          sub_1BA5E7FF4(v69);
        }
        *(_QWORD *)(v60 + 72) = v69;
        v70 = (char)v89;
        if ((_DWORD)v89 == 2)
          v70 = *((_BYTE *)v65 + 80);
        v56 += 48;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA5E7FF4(v57);
        sub_1BA5E7FF4(v59);
        swift_release();
        *(_BYTE *)(v60 + 80) = v70;
        v55 = (_QWORD *)v60;
        --v54;
      }
      while (v54);
      swift_bridgeObjectRelease();
    }
    else
    {
      v60 = (uint64_t)v72;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v60;
  }
  v76 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
LABEL_5:
  if (v6 >= *(_QWORD *)(v2 + 16))
    goto LABEL_52;
  v9 = v76 + 48 * v6;
  v11 = *(_QWORD *)v9;
  v10 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v9 + 16);
  v8 = *(_QWORD *)(v9 + 24);
  v7 = *(_QWORD *)(v9 + 32);
  v80 = *(unsigned __int8 *)(v9 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA5E7FF4(v8);
  sub_1BA5E7FF4(v7);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v79 = v11;
  v90[0] = v11;
  v90[1] = v10;
  swift_bridgeObjectRetain();
  v13 = sub_1BA6E583C(v90);
  swift_bridgeObjectRelease();
  v87 = *(_QWORD *)(v13 + 16);
  if (!v87)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v85 = v12;
  v81 = v10;
  v82 = v8;
  v83 = v7;
  v84 = v6;
  v14 = 0;
  v15 = (uint64_t *)(v13 + 64);
  while (1)
  {
    if (v14 >= *(_QWORD *)(v13 + 16))
    {
      __break(1u);
LABEL_52:
      __break(1u);
    }
    v86 = *(v15 - 2);
    v17 = *(v15 - 1);
    v16 = *v15;
    v18 = *(_BYTE *)(v17 + 32);
    v19 = v18 & 0x3F;
    v20 = (unint64_t)((1 << v18) + 63) >> 6;
    v21 = 8 * v20;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v19 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v23 = (char *)swift_slowAlloc();
    bzero(v23, v21);
    v27 = v20;
    v25 = v89;
    v26 = sub_1BA6EB5B4((uint64_t)v23, v27, v17, v88);
    swift_bridgeObjectRelease();
    if (v25)
      goto LABEL_54;
    v89 = 0;
    MEMORY[0x1BCCE5C38](v23, -1, -1);
LABEL_18:
    v28 = sub_1BA6EB330(v26, v17);
    swift_release();
    if ((v28 & 1) != 0 && (sub_1BA6EBD20(v88, v16) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (v86 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v36 = v81;
        swift_bridgeObjectRetain();
        v37 = v85;
        swift_bridgeObjectRetain();
        v8 = v82;
        sub_1BA5E7FF4(v82);
        v7 = v83;
        sub_1BA5E7FF4(v83);
        v38 = v74;
        v40 = v74[2];
        v39 = v74[3];
        v6 = v84;
        if (v40 >= v39 >> 1)
          v38 = sub_1BB38E338((_QWORD *)(v39 > 1), v40 + 1, 1, v74);
        v38[2] = v40 + 1;
        v74 = v38;
        v41 = &v38[6 * v40];
        v41[4] = v79;
        v41[5] = v36;
        v41[6] = v37;
        v41[7] = v8;
        v41[8] = v7;
        *((_BYTE *)v41 + 72) = v80;
        swift_bridgeObjectRelease();
      }
      else
      {
        v29 = v81;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v8 = v82;
        sub_1BA5E7FF4(v82);
        v7 = v83;
        sub_1BA5E7FF4(v83);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v30 = v73;
        v32 = v73[2];
        v31 = v73[3];
        v6 = v84;
        if (v32 >= v31 >> 1)
          v30 = sub_1BB38E214((_QWORD *)(v31 > 1), v32 + 1, 1, v73);
        v33 = v80;
        v34 = v79;
        v30[2] = v32 + 1;
        v73 = v30;
        v35 = &v30[7 * v32];
        v35[4] = v34;
        v35[5] = v29;
        v35[6] = v85;
        v35[7] = v8;
        v35[8] = v7;
        *((_BYTE *)v35 + 72) = v33;
        v35[10] = v86;
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v2 = v75;
LABEL_4:
      ++v6;
      sub_1BA5E800C(v8);
      sub_1BA5E800C(v7);
      if (v6 == v77)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      goto LABEL_5;
    }
    ++v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v15 += 5;
    if (v87 == v14)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v75;
      v6 = v84;
      v7 = v83;
      v8 = v82;
      goto LABEL_4;
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v23 = (char *)&v72 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v23, v21);
  v24 = v20;
  v25 = v89;
  v26 = sub_1BA6EB5B4((uint64_t)v23, v24, v17, v88);
  swift_bridgeObjectRelease();
  if (!v25)
  {
    v89 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_54:

  result = MEMORY[0x1BCCE5C38](v23, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAAF23D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v11 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 40);
  swift_beginAccess();
  v4 = *(_QWORD *)(v0 + 48);
  v5 = *(_QWORD *)(v0 + 56);
  v6 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((~v6 & 0xF000000000000007) != 0)
  {
    sub_1BB525134();
    v6 = v12;
  }
  v7 = *(_QWORD *)(v0 + 72);
  if ((~v7 & 0xF000000000000007) != 0)
  {
    sub_1BB525134();
    v7 = v12;
  }
  v8 = *(_BYTE *)(v0 + 80);
  v9 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = v11;
  *(_QWORD *)(v9 + 24) = v1;
  *(_QWORD *)(v9 + 32) = v3;
  *(_QWORD *)(v9 + 40) = v2;
  swift_beginAccess();
  *(_QWORD *)(v9 + 48) = v4;
  *(_QWORD *)(v9 + 56) = v5;
  *(_QWORD *)(v9 + 64) = v6;
  *(_QWORD *)(v9 + 72) = v7;
  *(_BYTE *)(v9 + 80) = v8;
  return v9;
}

uint64_t FormatProgressViewNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5E800C(*(_QWORD *)(v0 + 64));
  sub_1BA5E800C(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t FormatProgressViewNodeStyle.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5E800C(*(_QWORD *)(v0 + 64));
  sub_1BA5E800C(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance();
}

BOOL sub_1BAAF25D0(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed27FormatProgressViewNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatProgressViewNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.Selector.alpha.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t FormatProgressViewNodeStyle.Selector.progressColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 24);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatProgressViewNodeStyle.Selector.trackColor.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA5E7FF4(v2);
}

uint64_t FormatProgressViewNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1BAAF261C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 48);
  return result;
}

uint64_t _s8NewsFeed27FormatProgressViewNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  char v10;
  uint64_t result;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 40);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_1BB874398(), result = 0, (v10 & 1) != 0))
  {
    if (v2)
    {
      if (!v7)
        return 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v12 = sub_1BA881EAC(v2, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
        return 0;
    }
    else if (v7)
    {
      return 0;
    }
    if ((~v4 & 0xF000000000000007) != 0)
    {
      v18 = v4;
      if ((~v6 & 0xF000000000000007) != 0)
      {
        swift_retain_n();
        static FormatColor.== infix(_:_:)((uint64_t)&v18);
        v15 = v14;
        swift_release();
        sub_1BA5E800C(v4);
        if ((v15 & 1) == 0)
          return 0;
        goto LABEL_16;
      }
      swift_retain();
    }
    else if ((~v6 & 0xF000000000000007) == 0)
    {
LABEL_16:
      if ((~v3 & 0xF000000000000007) != 0)
      {
        v18 = v3;
        if ((~v8 & 0xF000000000000007) != 0)
        {
          swift_retain_n();
          static FormatColor.== infix(_:_:)((uint64_t)&v18);
          v17 = v16;
          swift_release();
          sub_1BA5E800C(v3);
          if ((v17 & 1) == 0)
            return 0;
          goto LABEL_26;
        }
        swift_retain();
      }
      else if ((~v8 & 0xF000000000000007) == 0)
      {
LABEL_26:
        if (v5 == 2)
        {
          if (v9 == 2)
            return 1;
        }
        else if (v9 != 2 && ((((v5 & 1) == 0) ^ v9) & 1) != 0)
        {
          return 1;
        }
        return 0;
      }
      sub_1BA5E7FF4(v8);
      sub_1BA5E800C(v3);
      v13 = v8;
LABEL_22:
      sub_1BA5E800C(v13);
      return 0;
    }
    sub_1BA5E7FF4(v6);
    sub_1BA5E800C(v4);
    v13 = v6;
    goto LABEL_22;
  }
  return result;
}

uint64_t sub_1BAAF2828(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAAF290C(&qword_1EF2AFE50, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAAF285C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAAF290C(qword_1ED3A8030, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  result = sub_1BAAF290C(&qword_1ED3A8028, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BAAF28A8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAAF290C(qword_1ED3A8030, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  a1[2] = sub_1BAAF290C(&qword_1ED3A8028, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  result = sub_1BAAF290C(&qword_1EF2AFE58, (uint64_t)&protocol conformance descriptor for FormatProgressViewNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAAF290C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatProgressViewNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAAF2948(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAF296C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAF296C()
{
  unint64_t result;

  result = qword_1EF2AFE60;
  if (!qword_1EF2AFE60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressViewNodeStyle.Selector, &type metadata for FormatProgressViewNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE60);
  }
  return result;
}

unint64_t sub_1BAAF29B0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA823B60();
  result = sub_1BA823BA4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAAF29DC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA823B60();
  a1[2] = sub_1BA823BA4();
  result = sub_1BAAF2A10();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAF2A10()
{
  unint64_t result;

  result = qword_1EF2AFE68;
  if (!qword_1EF2AFE68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatProgressViewNodeStyle.Selector, &type metadata for FormatProgressViewNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE68);
  }
  return result;
}

uint64_t sub_1BAAF2A54@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAAF2AA0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatProgressViewNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatProgressViewNodeStyle.__allocating_init(identifier:class:selectors:alpha:progressColor:trackColor:ignoresSmartInvertColors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t assignWithCopy for FormatProgressViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + 24);
  v5 = *(_QWORD *)(a2 + 24);
  v6 = v5 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) == 0)
  {
    if (v6 != 0xF000000000000007)
    {
      *v4 = v5;
      swift_retain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 == 0xF000000000000007)
  {
    sub_1BAA5FA24(a1 + 24);
    v5 = *(_QWORD *)(a2 + 24);
LABEL_6:
    *v4 = v5;
    goto LABEL_8;
  }
  *v4 = v5;
  swift_retain();
  swift_release();
LABEL_8:
  v7 = (_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = v8 & 0xF000000000000007;
  if ((~*(_QWORD *)(a1 + 32) & 0xF000000000000007) != 0)
  {
    if (v9 != 0xF000000000000007)
    {
      *v7 = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    sub_1BAA5FA24(a1 + 32);
    v8 = *(_QWORD *)(a2 + 32);
    goto LABEL_13;
  }
  if (v9 == 0xF000000000000007)
  {
LABEL_13:
    *v7 = v8;
    goto LABEL_15;
  }
  *v7 = v8;
  swift_retain();
LABEL_15:
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for FormatProgressViewNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a2 + 24);
  if ((~*(_QWORD *)(a1 + 24) & 0xF000000000000007) == 0)
    goto LABEL_4;
  if ((~v6 & 0xF000000000000007) == 0)
  {
    sub_1BAA5FA24(a1 + 24);
LABEL_4:
    *v5 = v6;
    goto LABEL_6;
  }
  *v5 = v6;
  swift_release();
LABEL_6:
  v7 = (_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a2 + 32);
  if ((~*(_QWORD *)(a1 + 32) & 0xF000000000000007) != 0)
  {
    if ((~v8 & 0xF000000000000007) != 0)
    {
      *v7 = v8;
      swift_release();
      goto LABEL_11;
    }
    sub_1BAA5FA24(a1 + 32);
  }
  *v7 = v8;
LABEL_11:
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  return a1;
}

ValueMetadata *type metadata accessor for FormatProgressViewNodeStyle.Selector()
{
  return &type metadata for FormatProgressViewNodeStyle.Selector;
}

void sub_1BAAF2D20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A16C8)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A16C8);
  }
}

void sub_1BAAF2D80(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3A8418)
  {
    v2 = sub_1BAAF2DD8();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatProgressViewNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3A8418);
  }
}

unint64_t sub_1BAAF2DD8()
{
  unint64_t result;

  result = qword_1ED3A8020;
  if (!qword_1ED3A8020)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89D544, &type metadata for FormatProgressViewNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3A8020);
  }
  return result;
}

_QWORD *sub_1BAAF2E1C(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t (*v11)();
  uint64_t v12;
  uint64_t (**v13)();
  uint64_t v14;
  char *v15;
  void (*v16)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v34;
  _BYTE v35[40];
  uint64_t v36;
  __int128 v37;
  _OWORD v38[2];
  uint64_t v39;
  _OWORD v40[2];
  uint64_t v41;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v34 = *(_QWORD *)(v5 + 72);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  if (a1)
  {
    v9 = *(_QWORD *)(a1 + 40);
    v33 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    *(_QWORD *)v35 = sub_1BAAF23D8();
    memset(&v35[8], 0, 32);
    v36 = 0;
    v37 = xmmword_1BB89D410;
    v10 = swift_allocObject();
    sub_1BA9F1094((uint64_t)v35, v10 + 16);
    v11 = sub_1BA9F10D0;
  }
  else
  {
    v10 = 0;
    v33 = 0;
    v9 = 0xE000000000000000;
    v11 = sub_1BB739F50;
  }
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = (uint64_t (**)())((char *)v8 + *(int *)(v12 + 24));
  *v13 = v11;
  v13[1] = (uint64_t (*)())v10;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(_QWORD *)(v7 + v6) = v33;
  v8[2] = 0;
  v8[3] = 0;
  v8[1] = v9;
  v15 = (char *)v8 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = -1;
  v16 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v16(v8, 0, 1, v12);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v7, v38);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v17 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v17;
  *(_QWORD *)(v17 + 48) = v39;
  v18 = v38[1];
  *(_OWORD *)(v17 + 16) = v38[0];
  *(_OWORD *)(v17 + 32) = v18;
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1BB87FC80;
  v20 = v19 + v6;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x73736572676F7250, 0xED00007765695620, (_QWORD *)(v19 + v6));
  v16((_QWORD *)(v19 + v6), 0, 1, v12);
  if (a1)
  {
    v21 = *(_QWORD *)(a1 + 56);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, v21, (_QWORD *)(v20 + v34));
    v16((_QWORD *)(v20 + v34), 0, 1, v12);
    v22 = *(_BYTE *)(a1 + 80);
  }
  else
  {
    sub_1BAAF3E48(0x6168706C41, 0xE500000000000000, 0, (_QWORD *)(v20 + v34));
    v16((_QWORD *)(v20 + v34), 0, 1, v12);
    v22 = 2;
  }
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v22, (_QWORD *)(v20 + 2 * v34));
  v16((_QWORD *)(v20 + 2 * v34), 0, 1, v12);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v19, v40);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v23 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v23;
  *(_QWORD *)(v23 + 48) = v41;
  v24 = v40[1];
  *(_OWORD *)(v23 + 16) = v40[0];
  *(_OWORD *)(v23 + 32) = v24;
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87A390;
  v26 = (_QWORD *)(v25 + v6);
  if (a1)
  {
    v27 = *(_QWORD *)(a1 + 64);
    sub_1BA5E7FF4(v27);
    sub_1BAAF7724(0x73736572676F7250, 0xEE00726F6C6F4320, v27, v26);
    v16(v26, 0, 1, v12);
    v28 = *(_QWORD *)(a1 + 72);
    sub_1BA5E7FF4(v28);
  }
  else
  {
    v28 = 0xF000000000000007;
    sub_1BAAF7724(0x73736572676F7250, 0xEE00726F6C6F4320, 0xF000000000000007, v26);
    v16(v26, 0, 1, v12);
  }
  sub_1BAAF7724(0x6F43206B63617254, 0xEB00000000726F6CLL, v28, (_QWORD *)((char *)v26 + v34));
  v16((_QWORD *)((char *)v26 + v34), 0, 1, v12);
  sub_1BAF89090(0x73736572676F7250, 0xE800000000000000, 0, 0, v25, v35);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v29 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v29;
  *(_QWORD *)(v29 + 48) = *(_QWORD *)&v35[32];
  v30 = *(_OWORD *)&v35[16];
  *(_OWORD *)(v29 + 16) = *(_OWORD *)v35;
  *(_OWORD *)(v29 + 32) = v30;
  v31 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v31;
}

uint64_t sub_1BAAF3420()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAAF3454()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

NewsFeed::FormatShineSizer_optional __swiftcall FormatShineSizer.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  NewsFeed::FormatShineSizer_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t FormatShineSizer.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7473756A64616E75;
  else
    return 1702521203;
}

uint64_t sub_1BAAF351C(char *a1, char *a2)
{
  return sub_1BB7FD850(*a1, *a2);
}

unint64_t sub_1BAAF352C()
{
  unint64_t result;

  result = qword_1EF2AFE70;
  if (!qword_1EF2AFE70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineSizer, &type metadata for FormatShineSizer);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE70);
  }
  return result;
}

uint64_t sub_1BAAF3570()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAAF35EC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAAF3644()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FormatShineSizer_optional sub_1BAAF36BC(Swift::String *a1)
{
  return FormatShineSizer.init(rawValue:)(*a1);
}

void sub_1BAAF36C8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1702521203;
  if (*v1)
    v2 = 0x7473756A64616E75;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xEA00000000006465;
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1BAAF3704(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAAF3730();
  result = sub_1BAAF3774();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAAF3730()
{
  unint64_t result;

  result = qword_1EF2AFE78;
  if (!qword_1EF2AFE78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineSizer, &type metadata for FormatShineSizer);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE78);
  }
  return result;
}

unint64_t sub_1BAAF3774()
{
  unint64_t result;

  result = qword_1EF2AFE80;
  if (!qword_1EF2AFE80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineSizer, &type metadata for FormatShineSizer);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE80);
  }
  return result;
}

unint64_t sub_1BAAF37B8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAAF37DC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAAF37DC()
{
  unint64_t result;

  result = qword_1EF2AFE88;
  if (!qword_1EF2AFE88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineSizer, &type metadata for FormatShineSizer);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE88);
  }
  return result;
}

unint64_t sub_1BAAF3820(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAAF3854();
  a1[2] = sub_1BAAF3898();
  result = sub_1BAAF352C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAAF3854()
{
  unint64_t result;

  result = qword_1EF2AFE90;
  if (!qword_1EF2AFE90)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineSizer, &type metadata for FormatShineSizer);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE90);
  }
  return result;
}

unint64_t sub_1BAAF3898()
{
  unint64_t result;

  result = qword_1EF2AFE98;
  if (!qword_1EF2AFE98)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShineSizer, &type metadata for FormatShineSizer);
    atomic_store(result, (unint64_t *)&qword_1EF2AFE98);
  }
  return result;
}

uint64_t sub_1BAAF38DC()
{
  sub_1BAAF3774();
  return sub_1BB872D60();
}

uint64_t sub_1BAAF3938(_QWORD *a1)
{
  return FormatShineSizer.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatShineSizer(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAAF3998 + 4 * byte_1BB89D6B5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAAF39CC + 4 * asc_1BB89D6B0[v4]))();
}

uint64_t sub_1BAAF39CC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAF39D4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAAF39DCLL);
  return result;
}

uint64_t sub_1BAAF39E8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAAF39F0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAAF39F4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAAF39FC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatShineSizer()
{
  return &type metadata for FormatShineSizer;
}

uint64_t sub_1BAAF3A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[5];
  __int128 v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  char v32;

  v10 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = a3;
  v32 = v10;
  if ((a4 & 1) != 0)
  {
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a5 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v22 = (char *)a5 + *(int *)(v14 + 28);
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v18 = MEMORY[0x1E0DEF040];
  if ((swift_dynamicCast() & 1) != 0)
  {
    v19 = v28;
    v14 = type metadata accessor for FormatInspectionItem(0);
    v20 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
    *v20 = v19;
    v21 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
    goto LABEL_5;
  }
  v29 = v18;
  v30 = sub_1BAB058B0();
  *(_QWORD *)&v28 = v31;
  sub_1BA4CECCC(&v28, (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  *v13 = sub_1BB872FDC();
  v13[1] = v23;
  v24 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 0, 1, v24);
  *a5 = a1;
  a5[1] = a2;
  v25 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v25 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v26 = (char *)a5 + *(int *)(v25 + 28);
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1BAAF3C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  int *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  if (!a3)
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a6 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_11:
    *a6 = a1;
    a6[1] = a2;
    v26 = (int *)(v18 + 28);
    a6[2] = 0;
    a6[3] = 0;
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BB6DED58(v12);
  v30 = MEMORY[0x1E0DEE9D8];
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    v15 = 64;
    do
    {
      v16 = swift_bridgeObjectRetain();
      sub_1BB383BA8(v16);
      v15 += 40;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
    v17 = v30;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = MEMORY[0x1E0DEE9D8];
  }
  v22 = *(_QWORD *)(v17 + 16);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = type metadata accessor for FormatInspectionItem(0);
    v27 = (char *)a6 + *(int *)(v18 + 24);
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  v23 = type metadata accessor for FormatInspectionItem(0);
  v24 = (_QWORD *)((char *)a6 + *(int *)(v23 + 24));
  *v24 = a3;
  v24[1] = a4;
  v24[2] = a5;
  v25 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
  result = swift_bridgeObjectRelease();
  *a6 = a1;
  a6[1] = a2;
  v26 = (int *)(v23 + 28);
  a6[2] = a4;
  a6[3] = a5;
LABEL_12:
  v29 = (char *)a6 + *v26;
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1BAAF3E48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a3;
  if (a3)
  {
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    v12 = v11;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if ((swift_dynamicCast() & 1) != 0)
    {
      v13 = v30;
      v14 = type metadata accessor for FormatInspectionItem(0);
      v15 = (_QWORD *)((char *)a4 + *(int *)(v14 + 24));
      *v15 = v13;
      v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v17 = (char *)a4 + *(int *)(v14 + 28);
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      v31 = v12;
      v32 = sub_1BAB05B04();
      *(_QWORD *)&v30 = v33;
      sub_1BA4CECCC(&v30, (uint64_t)v29);
      v23 = *__swift_project_boxed_opaque_existential_1(v29, v29[3]);
      swift_bridgeObjectRetain();
      *v10 = sub_1BB106F08(v23);
      v10[1] = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v27 = (char *)a4 + *(int *)(v26 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a4 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v22 = (char *)a4 + *(int *)(v18 + 28);
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAF40BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _OWORD v18[2];
  _BYTE v19[24];
  uint64_t v20;

  sub_1BA90C818(a3, (uint64_t)v19, (unint64_t *)&qword_1EF2AB478, (uint64_t)&type metadata for FormatInspectionBinding);
  if (v20)
  {
    sub_1BA967BB4((uint64_t)v19, (uint64_t)v18);
    sub_1BA6ED734(a3, (unint64_t *)&qword_1EF2AB478, (uint64_t)&type metadata for FormatInspectionBinding);
    v8 = type metadata accessor for FormatInspectionItem(0);
    v9 = (_OWORD *)((char *)a4 + *(int *)(v8 + 24));
    v10 = v18[1];
    *v9 = v18[0];
    v9[1] = v10;
    v11 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v12 = (char *)a4 + *(int *)(v8 + 28);
    *(_QWORD *)v12 = 0;
    *((_QWORD *)v12 + 1) = 0;
    v12[16] = -1;
    return sub_1BA967BF0((uint64_t)v19);
  }
  else
  {
    sub_1BA6ED734(a3, (unint64_t *)&qword_1EF2AB478, (uint64_t)&type metadata for FormatInspectionBinding);
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a4 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v17 = (char *)a4 + *(int *)(v14 + 28);
    *(_QWORD *)v17 = 0;
    *((_QWORD *)v17 + 1) = 0;
    v17[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAF422C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  unint64_t v95;
  unint64_t v96;
  char v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  uint64_t v104;
  __int128 v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  __int128 *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  _QWORD *v117;
  _QWORD *v118;
  _QWORD *v119;
  uint64_t v120;
  uint64_t (*v121)(uint64_t, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  void (*v130)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v131;
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t v141;
  _QWORD *v142;
  _QWORD *v143;
  uint64_t (*v144)(uint64_t, uint64_t);
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  _QWORD *v151;
  uint64_t v152;
  void (*v153)(_QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD *v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  unint64_t v160;
  unint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  __int128 v175;
  __int128 v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  unint64_t v199;
  uint64_t *v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  __int128 v216;
  __int128 v217[2];
  __int128 v218;
  __int128 v219;
  __int128 v220;
  _OWORD v221[13];
  __int128 v222[8];
  uint64_t v223;
  unint64_t v224;
  uint64_t v225;
  __int128 v226;
  uint64_t v227;

  v209 = sub_1BB8714E8();
  v206 = *(_QWORD *)(v209 - 8);
  MEMORY[0x1E0C80A78](v209);
  v208 = (char *)&v205 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v207 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v207);
  v210 = (uint64_t)&v205 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatInspectionFeedGroupItem();
  MEMORY[0x1E0C80A78](v10);
  v211 = (uint64_t)&v205 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v12);
  v212 = (uint64_t *)((char *)&v205 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_1BB86C67C();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v205 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BA90C818(a3, (uint64_t)&v226, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
  if (!v227)
  {
    sub_1BA6ED734(a3, (unint64_t *)&qword_1ED3BA040, v18);
    v26 = type metadata accessor for FormatInspectionItem(0);
    v27 = (char *)a4 + *(int *)(v26 + 24);
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v30 = (char *)a4 + *(int *)(v26 + 28);
    goto LABEL_6;
  }
  v215 = a4;
  *(_QWORD *)&v216 = a3;
  v213 = a1;
  v214 = a2;
  if ((swift_dynamicCast() & 1) != 0)
  {
LABEL_3:
    sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    v19 = *(_QWORD *)&v217[0];
    v20 = type metadata accessor for FormatInspectionItem(0);
    v21 = v215;
    v22 = (char *)v215 + *(int *)(v20 + 24);
    *(_QWORD *)v22 = v19;
    v23 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_4:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    v24 = v214;
    *v21 = v213;
    v21[1] = v24;
    v21[2] = 0;
    v21[3] = 0;
    v25 = (char *)v21 + *(int *)(v20 + 28);
    goto LABEL_11;
  }
  v31 = MEMORY[0x1E0DEE9B8];
  v32 = MEMORY[0x1E0DEE9B8] + 8;
  if ((swift_dynamicCast() & 1) != 0)
  {
    v33 = *(_QWORD *)&v217[0];
    v34 = (*(_QWORD *)&v217[0] >> 58) & 0x38;
    v35 = *(_QWORD *)&aSystem_6[v34];
    v36 = *(_QWORD *)((char *)&unk_1BB89DBC0 + v34);
    sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v32);
    v37 = type metadata accessor for FormatInspectionItem(0);
    v38 = v215;
    v39 = (uint64_t *)((char *)v215 + *(int *)(v37 + 24));
    *v39 = v33;
    v40 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
    v41 = v214;
    *v38 = v213;
    v38[1] = v41;
    v38[2] = v35;
    v38[3] = v36;
LABEL_9:
    v42 = *(int *)(v37 + 28);
LABEL_10:
    v25 = (char *)v38 + v42;
    goto LABEL_11;
  }
  if (swift_dynamicCast())
  {
    sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v31 + 8);
    v43 = v217[0];
    v20 = type metadata accessor for FormatInspectionItem(0);
    v21 = v215;
    v22 = (char *)v215 + *(int *)(v20 + 24);
    *v22 = v43;
    v23 = type metadata accessor for FormatInspectionItem.Value(0);
    goto LABEL_4;
  }
  if (swift_dynamicCast())
  {
    sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v31 + 8);
    v44 = type metadata accessor for FormatInspectionItem(0);
    v38 = v215;
    v45 = (char *)v215 + *(int *)(v44 + 24);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v45, v17, v14);
    v46 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
    v47 = v214;
    *v38 = v213;
    v38[1] = v47;
    v38[2] = 0;
    v38[3] = 0;
    v42 = *(int *)(v44 + 28);
    goto LABEL_10;
  }
  if (!swift_dynamicCast())
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v57 = *(_QWORD *)&v217[0];
      v58 = sub_1BB6DED58(*(uint64_t *)&v217[0]);
      v223 = MEMORY[0x1E0DEE9D8];
      v59 = *(_QWORD *)(v58 + 16);
      if (v59)
      {
        swift_bridgeObjectRetain();
        v60 = 64;
        v38 = v215;
        v61 = v213;
        do
        {
          v62 = swift_bridgeObjectRetain();
          sub_1BB383BA8(v62);
          v60 += 40;
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease_n();
        v63 = v223;
      }
      else
      {
        swift_bridgeObjectRelease();
        v63 = MEMORY[0x1E0DEE9D8];
        v38 = v215;
        v61 = v213;
      }
      v74 = *(_QWORD *)(v63 + 16);
      swift_bridgeObjectRelease();
      v75 = v214;
      v76 = v216;
      if (v74)
      {
        sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v77 = swift_allocObject();
        *(_OWORD *)(v77 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v77 + 56) = &type metadata for FormatInspection;
        *(_QWORD *)(v77 + 64) = &off_1E7335C38;
        *(_QWORD *)(v77 + 32) = v57;
        v78 = sub_1BA9747FC(v77);
        swift_setDeallocating();
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v79 = sub_1BB6DF010(v78);
        swift_bridgeObjectRelease();
        sub_1BA6ED734(v76, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
        v80 = v212;
        *v212 = (uint64_t)v79;
        v81 = type metadata accessor for FormatInspectionItem.Value(0);
        v80[1] = 0;
        v80[2] = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 0, 1, v81);
        *v38 = v61;
        v38[1] = v75;
        v37 = type metadata accessor for FormatInspectionItem(0);
        v38[2] = 0;
        v38[3] = 0;
        sub_1BA5193C4((uint64_t)v80, (uint64_t)v38 + *(int *)(v37 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        goto LABEL_9;
      }
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      swift_bridgeObjectRelease();
      v37 = type metadata accessor for FormatInspectionItem(0);
      v82 = (char *)v38 + *(int *)(v37 + 24);
      v83 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 1, 1, v83);
      *v38 = v61;
      v38[1] = v75;
LABEL_39:
      v38[2] = 0;
      v38[3] = 0;
      goto LABEL_9;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v31 + 8);
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      *(_OWORD *)v22 = v217[0];
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
      __asm { BR              X10 }
    v84 = swift_dynamicCast();
    v85 = v216;
    if ((v84 & 1) != 0)
    {
      sub_1BA7439D4(v217, (uint64_t)v222);
      sub_1BA7439D4(v222, (uint64_t)&v223);
      v86 = (char *)&loc_1BAAF4CC0 + 4 * word_1BB89D8B0[sub_1BAB05900((uint64_t)&v223)];
      __asm { BR              X10 }
    }
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BA6ED734(v85, (unint64_t *)&qword_1ED3BA040, v31 + 8);
      v87 = *(_QWORD *)&v217[0];
      v88 = swift_allocObject();
      *(_QWORD *)(v88 + 16) = v87;
      v89 = v212;
      *v212 = (uint64_t)sub_1BAB058F8;
      v89[1] = v88;
      v90 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 56))(v89, 0, 1, v90);
      v91 = v215;
      v92 = v214;
      *v215 = v213;
      v91[1] = v92;
      v93 = type metadata accessor for FormatInspectionItem(0);
      v91[2] = 0;
      v91[3] = 0;
      sub_1BA5193C4((uint64_t)v89, (uint64_t)v91 + *(int *)(v93 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v25 = (char *)v91 + *(int *)(v93 + 28);
      goto LABEL_11;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v85, (unint64_t *)&qword_1ED3BA040, v31 + 8);
      v216 = v217[0];
      v94 = v217[1];
      v96 = *((_QWORD *)&v218 + 1);
      v95 = v218;
      v97 = v219;
      v37 = type metadata accessor for FormatInspectionItem(0);
      v38 = v215;
      v98 = (char *)v215 + *(int *)(v37 + 24);
      *(_OWORD *)v98 = v216;
      *((_OWORD *)v98 + 1) = v94;
      *((_OWORD *)v98 + 2) = __PAIR128__(v96, v95);
      v98[48] = v97;
      v99 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_46:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 56))(v98, 0, 1, v99);
      v100 = v214;
      *v38 = v213;
      v38[1] = v100;
      goto LABEL_39;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v85, (unint64_t *)&qword_1ED3BA040, v31 + 8);
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      v101 = v221[0];
      *((_OWORD *)v22 + 4) = v220;
      *((_OWORD *)v22 + 5) = v101;
      *(_OWORD *)(v22 + 89) = *(_OWORD *)((char *)v221 + 9);
      v102 = v217[1];
      *(_OWORD *)v22 = v217[0];
      *((_OWORD *)v22 + 1) = v102;
      v103 = v219;
      *((_OWORD *)v22 + 2) = v218;
      *((_OWORD *)v22 + 3) = v103;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    v104 = v211;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v85, (unint64_t *)&qword_1ED3BA040, v31 + 8);
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      sub_1BA5193C4(v104, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v31 + 8);
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      v105 = v217[1];
      *(_OWORD *)v22 = v217[0];
      *((_OWORD *)v22 + 1) = v105;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      v107 = *((_QWORD *)&v217[0] + 1);
      v106 = *(_QWORD *)&v217[0];
      v108 = type metadata accessor for FormatInspectionItem(0);
      v109 = v215;
      v110 = (__int128 *)((char *)v215 + *(int *)(v108 + 24));
      *v110 = __PAIR128__(v107, v106);
      v111 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_55:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 56))(v110, 0, 1, v111);
      v112 = v214;
      *v109 = v213;
      v109[1] = v112;
      v109[2] = 0;
      v109[3] = 0;
      v25 = (char *)v109 + *(int *)(v108 + 28);
      goto LABEL_11;
    }
    v113 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      v114 = v223;
      v115 = v224;
      *(_QWORD *)&v217[0] = 40;
      *((_QWORD *)&v217[0] + 1) = 0xE100000000000000;
      sub_1BB872FDC();
      sub_1BB872AFC(v116);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v117);
      sub_1BB872FDC();
      sub_1BB872AFC(v118);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v119);
      v212 = (uint64_t *)*((_QWORD *)&v217[0] + 1);
      v120 = *(_QWORD *)&v217[0];
      v121 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v122 = swift_allocObject();
      *(_OWORD *)(v122 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v121);
      sub_1BA8C88C8(0);
      v124 = *(_QWORD *)(v123 - 8);
      v125 = *(_QWORD *)(v124 + 72);
      v126 = (*(unsigned __int8 *)(v124 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v124 + 80);
      v127 = swift_allocObject();
      *(_OWORD *)(v127 + 16) = xmmword_1BB87A390;
      v128 = (_QWORD *)(v127 + v126);
      sub_1BAAF3A18(88, 0xE100000000000000, v114, 0, v128);
      v129 = type metadata accessor for FormatInspectionItem(0);
      v130 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56);
      v130(v128, 0, 1, v129);
      v131 = (_QWORD *)((char *)v128 + v125);
      sub_1BAAF3A18(89, 0xE100000000000000, v115, 0, v131);
      v130(v131, 0, 1, v129);
      sub_1BAF89090(0x746E696F50, 0xE500000000000000, 0, 0, v127, v217);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v122 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v122 + 64) = &off_1E72D2F60;
      v132 = swift_allocObject();
      *(_QWORD *)(v122 + 32) = v132;
      v133 = v217[1];
      *(_OWORD *)(v132 + 16) = v217[0];
      *(_OWORD *)(v132 + 32) = v133;
      *(_QWORD *)(v132 + 48) = v218;
      v134 = sub_1BA9747FC(v122);
      swift_setDeallocating();
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v135 = sub_1BB6DF010(v134);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(v213, v214, (uint64_t)v135, v120, (uint64_t)v212, v215);
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v113);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
    }
    if (swift_dynamicCast())
    {
      v136 = v223;
      v137 = v224;
      *(_QWORD *)&v217[0] = 40;
      *((_QWORD *)&v217[0] + 1) = 0xE100000000000000;
      v138 = swift_bridgeObjectRetain();
      sub_1BB106F08(v138);
      sub_1BB872AFC(v139);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v140);
      v141 = swift_bridgeObjectRetain();
      sub_1BB106F08(v141);
      sub_1BB872AFC(v142);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v143);
      v211 = *((_QWORD *)&v217[0] + 1);
      v212 = *(uint64_t **)&v217[0];
      v144 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v145 = swift_allocObject();
      *(_OWORD *)(v145 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v144);
      sub_1BA8C88C8(0);
      v147 = *(_QWORD *)(v146 - 8);
      v148 = *(_QWORD *)(v147 + 72);
      v149 = (*(unsigned __int8 *)(v147 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v147 + 80);
      v150 = swift_allocObject();
      *(_OWORD *)(v150 + 16) = xmmword_1BB87A390;
      v151 = (_QWORD *)(v150 + v149);
      swift_bridgeObjectRetain();
      sub_1BAAF3E48(88, 0xE100000000000000, v136, v151);
      v152 = type metadata accessor for FormatInspectionItem(0);
      v153 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v152 - 8) + 56);
      v153(v151, 0, 1, v152);
      v154 = (_QWORD *)((char *)v151 + v148);
      swift_bridgeObjectRetain();
      sub_1BAAF3E48(89, 0xE100000000000000, v137, v154);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v153(v154, 0, 1, v152);
      sub_1BAF89090(0x746E696F50, 0xE500000000000000, 0, 0, v150, v217);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v145 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v145 + 64) = &off_1E72D2F60;
      v155 = swift_allocObject();
      *(_QWORD *)(v145 + 32) = v155;
      v156 = v217[1];
      *(_OWORD *)(v155 + 16) = v217[0];
      *(_OWORD *)(v155 + 32) = v156;
      *(_QWORD *)(v155 + 48) = v218;
      v157 = sub_1BA9747FC(v145);
      swift_setDeallocating();
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v158 = sub_1BB6DF010(v157);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(v213, v214, (uint64_t)v158, (uint64_t)v212, v211, v215);
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
    }
    v159 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v159);
      v161 = *((_QWORD *)&v217[0] + 1);
      v160 = *(_QWORD *)&v217[0];
      v108 = type metadata accessor for FormatInspectionItem(0);
      v109 = v215;
      v110 = (__int128 *)((char *)v215 + *(int *)(v108 + 24));
      *v110 = __PAIR128__(v161, v160);
      v111 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_55;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    type metadata accessor for FormatCommandAction();
    v162 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v162);
      v163 = *(_QWORD *)&v217[0];
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      *(_QWORD *)v22 = v163;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      v164 = v217[0];
      v216 = *(__int128 *)((char *)v217 + 8);
      v165 = *((_QWORD *)&v217[1] + 1);
      v166 = v218;
      v37 = type metadata accessor for FormatInspectionItem(0);
      v38 = v215;
      v98 = (char *)v215 + *(int *)(v37 + 24);
      *v98 = v164;
      *(_OWORD *)(v98 + 8) = v216;
      *((_QWORD *)v98 + 3) = v165;
      *((_QWORD *)v98 + 4) = v166;
      v99 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_46;
    }
    v167 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v167);
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      sub_1BA5193C4(v210, (uint64_t)v22, type metadata accessor for FormatPropertyDefinition);
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      v168 = type metadata accessor for FormatInspectionItem(0);
      v169 = v215;
      v170 = (char *)v215 + *(int *)(v168 + 24);
      (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v170, v208, v209);
      v171 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v171 - 8) + 56))(v170, 0, 1, v171);
      v172 = v214;
      *v169 = v213;
      v169[1] = v172;
      v169[2] = 0;
      v169[3] = 0;
      v25 = (char *)v169 + *(int *)(v168 + 28);
      goto LABEL_11;
    }
    v173 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v173);
      v174 = *(_QWORD *)&v217[0];
      if (v220 == 1)
      {
        v175 = v219;
        v176 = v218;
        v216 = v217[1];
        v177 = *((_QWORD *)&v217[0] + 1);
        v178 = type metadata accessor for FormatInspectionItem(0);
        v179 = (char *)v215 + *(int *)(v178 + 24);
        *(_QWORD *)v179 = v174;
        *((_QWORD *)v179 + 1) = v177;
        *((_OWORD *)v179 + 1) = v216;
        *((_OWORD *)v179 + 2) = v176;
        *((_OWORD *)v179 + 3) = v175;
      }
      else
      {
        v178 = type metadata accessor for FormatInspectionItem(0);
        v179 = (char *)v215 + *(int *)(v178 + 24);
        *(_QWORD *)v179 = v174;
      }
      v180 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v180 - 8) + 56))(v179, 0, 1, v180);
      v181 = v215;
      v182 = v214;
      *v215 = v213;
      v181[1] = v182;
      v181[2] = 0;
      v181[3] = 0;
      v25 = (char *)v181 + *(int *)(v178 + 28);
      goto LABEL_11;
    }
    sub_1BA4CDF6C(0, &qword_1EF2AFEE0, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E0DB62B8]);
    if ((swift_dynamicCast() & 1) != 0)
      goto LABEL_3;
    v183 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v183);
      v216 = v217[0];
      v185 = *((_QWORD *)&v217[1] + 1);
      v184 = *(_QWORD *)&v217[1];
      v108 = type metadata accessor for FormatInspectionItem(0);
      v109 = v215;
      v110 = (__int128 *)((char *)v215 + *(int *)(v108 + 24));
      *v110 = v216;
      v110[1] = __PAIR128__(v185, v184);
      v111 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_55;
    }
    type metadata accessor for DebugFormatDebuggerCallStackEntry();
    if (swift_dynamicCast())
      goto LABEL_3;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    v186 = MEMORY[0x1E0DEE9B8] + 8;
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v186);
      v187 = *(_QWORD *)&v217[0];
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = v215;
      v22 = (char *)v215 + *(int *)(v20 + 24);
      *(_QWORD *)v22 = v187;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_4;
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(v217, (uint64_t)&v223);
      __swift_project_boxed_opaque_existential_1(&v223, v225);
      v188 = sub_1BB87420C();
      v190 = v189;
      sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
      v191 = v212;
      *v212 = v188;
      v191[1] = v190;
      v192 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v192 - 8) + 56))(v191, 0, 1, v192);
      v193 = v215;
      v194 = v214;
      *v215 = v213;
      v193[1] = v194;
      v195 = type metadata accessor for FormatInspectionItem(0);
      v193[2] = 0;
      v193[3] = 0;
      sub_1BA5193C4((uint64_t)v191, (uint64_t)v193 + *(int *)(v195 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v196 = (char *)v193 + *(int *)(v195 + 28);
      *(_QWORD *)v196 = 0;
      *((_QWORD *)v196 + 1) = 0;
      v196[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v223);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
    }
    sub_1BA76EAE0(&v226, v217);
    v223 = 0;
    v224 = 0xE000000000000000;
    v197 = MEMORY[0x1E0DEE9B8] + 8;
    sub_1BB873E34();
    v198 = v223;
    v199 = v224;
    sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v197);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v217);
    v200 = v212;
    *v212 = v198;
    v200[1] = v199;
    v201 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v201 - 8) + 56))(v200, 0, 1, v201);
    v202 = v215;
    v203 = v214;
    *v215 = v213;
    v202[1] = v203;
    v204 = type metadata accessor for FormatInspectionItem(0);
    v202[2] = 0;
    v202[3] = 0;
    result = sub_1BA5193C4((uint64_t)v200, (uint64_t)v202 + *(int *)(v204 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
    v30 = (char *)v202 + *(int *)(v204 + 28);
LABEL_6:
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    v30[16] = -1;
    return result;
  }
  v48 = v217[0];
  v49 = *(_QWORD *)&v217[1];
  v50 = sub_1BB6DED58(*(uint64_t *)&v217[0]);
  v223 = MEMORY[0x1E0DEE9D8];
  v51 = *(_QWORD *)(v50 + 16);
  if (v51)
  {
    swift_bridgeObjectRetain();
    v52 = 64;
    v53 = v215;
    v54 = v213;
    do
    {
      v55 = swift_bridgeObjectRetain();
      sub_1BB383BA8(v55);
      v52 += 40;
      --v51;
    }
    while (v51);
    swift_bridgeObjectRelease_n();
    v56 = v223;
    v31 = MEMORY[0x1E0DEE9B8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v56 = MEMORY[0x1E0DEE9D8];
    v53 = v215;
    v54 = v213;
  }
  v64 = *(_QWORD *)(v56 + 16);
  sub_1BA6ED734(v216, (unint64_t *)&qword_1ED3BA040, v31 + 8);
  swift_bridgeObjectRelease();
  if (v64)
  {
    v65 = type metadata accessor for FormatInspectionItem(0);
    v66 = (char *)v53 + *(int *)(v65 + 24);
    *(_OWORD *)v66 = v48;
    *((_QWORD *)v66 + 2) = v49;
    v67 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 56))(v66, 0, 1, v67);
    v68 = v214;
    *v53 = v54;
    v53[1] = v68;
    v53[2] = *((_QWORD *)&v48 + 1);
    v53[3] = v49;
    v69 = (char *)v53 + *(int *)(v65 + 28);
    *(_QWORD *)v69 = 0;
    *((_QWORD *)v69 + 1) = 0;
    v69[16] = -1;
    swift_bridgeObjectRetain();
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v70 = type metadata accessor for FormatInspectionItem(0);
  v71 = (char *)v53 + *(int *)(v70 + 24);
  v72 = type metadata accessor for FormatInspectionItem.Value(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 1, 1, v72);
  v73 = v214;
  *v53 = v54;
  v53[1] = v73;
  v53[2] = 0;
  v53[3] = 0;
  v25 = (char *)v53 + *(int *)(v70 + 28);
LABEL_11:
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v226);
}

uint64_t sub_1BAAF6720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[4];
  __int128 v38;

  v8 = type metadata accessor for FeedHeadline(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a3, (uint64_t)v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) != 1)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
      v23 = v38;
      v24 = type metadata accessor for FormatInspectionItem(0);
      v25 = (_QWORD *)((char *)a4 + *(int *)(v24 + 24));
      *v25 = v23;
      v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v27 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (!swift_dynamicCast())
      {
        sub_1BA5193C4((uint64_t)v17, (uint64_t)v11, type metadata accessor for FeedHeadline);
        *(_QWORD *)&v38 = 0;
        *((_QWORD *)&v38 + 1) = 0xE000000000000000;
        sub_1BB873E34();
        v34 = v38;
        sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
        sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FeedHeadline);
        *(_OWORD *)v14 = v34;
        v35 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 0, 1, v35);
        *a4 = a1;
        a4[1] = a2;
        v19 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        result = sub_1BA5193C4((uint64_t)v14, (uint64_t)a4 + *(int *)(v19 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        goto LABEL_9;
      }
      sub_1BA4CECCC(&v38, (uint64_t)v37);
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      v28 = sub_1BB87420C();
      v30 = v29;
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
      *(_QWORD *)v14 = v28;
      *((_QWORD *)v14 + 1) = v30;
      v31 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 0, 1, v31);
      *a4 = a1;
      a4[1] = a2;
      v32 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v14, (uint64_t)a4 + *(int *)(v32 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v33 = (char *)a4 + *(int *)(v32 + 28);
      *(_QWORD *)v33 = 0;
      *((_QWORD *)v33 + 1) = 0;
      v33[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    return sub_1BA4A2E80((uint64_t)v17, type metadata accessor for FeedHeadline);
  }
  sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7C2AA0);
  v19 = type metadata accessor for FormatInspectionItem(0);
  v20 = (char *)a4 + *(int *)(v19 + 24);
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
LABEL_9:
  v36 = (char *)a4 + *(int *)(v19 + 28);
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = -1;
  return result;
}

uint64_t sub_1BAAF6B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  char *v14;

  if (a3 == 2)
  {
    v7 = type metadata accessor for FormatInspectionItem(0);
    v8 = (char *)a4 + *(int *)(v7 + 24);
    v9 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  }
  else
  {
    v11 = a3 & 1;
    v7 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v7 + 24);
    *v12 = v11;
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 0, 1, v13);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v14 = (char *)a4 + *(int *)(v7 + 28);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = -1;
  return result;
}

uint64_t sub_1BAAF6C20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  _OWORD v30[7];
  _OWORD v31[2];
  uint64_t v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  _OWORD v41[2];
  __int128 v42;
  _BYTE v43[144];
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  _OWORD v51[2];
  _BYTE v52[144];
  uint64_t v53[18];
  _BYTE v54[160];

  sub_1BA6A09F0(a3, (uint64_t)v52, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0((uint64_t)v52, (uint64_t)v54, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6A09F0(a3, (uint64_t)&v44, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  sub_1BA6A09F0(a3, (uint64_t)v53, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
  if (sub_1BA84DAF0(v53) != 1)
  {
    sub_1BA6A09F0((uint64_t)v54, (uint64_t)v43, (unint64_t *)&qword_1ED3C23B0, (uint64_t)&type metadata for FeedIssue);
    sub_1BA8D1F08((uint64_t)v43);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA90EECC(a3);
      v15 = *(_QWORD *)&v30[0];
      v16 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v16 + 24));
      *v17 = v15;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v19 = (char *)a4 + *(int *)(v16 + 28);
      *(_QWORD *)v19 = 0;
      *((_QWORD *)v19 + 1) = 0;
      v19[16] = -1;
      v40 = v50;
      v41[0] = v51[0];
      *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v51 + 9);
      v34 = v44;
      v35 = v45;
      v36 = v46;
      v37 = v47;
      v38 = v48;
      v39 = v49;
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (!swift_dynamicCast())
      {
        v40 = v50;
        v41[0] = v51[0];
        *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v51 + 9);
        v36 = v46;
        v37 = v47;
        v38 = v48;
        v39 = v49;
        v34 = v44;
        v35 = v45;
        v11 = type metadata accessor for FormatInspectionItem(0);
        v26 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
        v32 = 0;
        v33 = 0xE000000000000000;
        v30[6] = v50;
        v31[0] = v51[0];
        *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v51 + 9);
        v30[2] = v46;
        v30[3] = v47;
        v30[4] = v48;
        v30[5] = v49;
        v30[0] = v44;
        v30[1] = v45;
        sub_1BB873E34();
        sub_1BA90EECC(a3);
        sub_1BA8D1FE4((uint64_t)&v34);
        v27 = v33;
        *v26 = v32;
        v26[1] = v27;
        v28 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v26, 0, 1, v28);
        goto LABEL_9;
      }
      sub_1BA4CECCC(&v42, (uint64_t)&v34);
      __swift_project_boxed_opaque_existential_1(&v34, *((uint64_t *)&v35 + 1));
      v20 = sub_1BB87420C();
      v22 = v21;
      sub_1BA90EECC(a3);
      *v10 = v20;
      v10[1] = v22;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v25 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      v40 = v50;
      v41[0] = v51[0];
      *(_OWORD *)((char *)v41 + 9) = *(_OWORD *)((char *)v51 + 9);
      v36 = v46;
      v37 = v47;
      v38 = v48;
      v39 = v49;
      v34 = v44;
      v35 = v45;
    }
    return sub_1BA8D1FE4((uint64_t)&v34);
  }
  v11 = type metadata accessor for FormatInspectionItem(0);
  v12 = (char *)a4 + *(int *)(v11 + 24);
  v13 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_9:
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v29 = (char *)a4 + *(int *)(v11 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1BAAF7084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34[10];
  uint64_t v35;
  _OWORD v36[3];
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA90C818(a3, (uint64_t)v36, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
  if ((_QWORD)v37)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(a3, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
      v11 = *(_QWORD *)&v34[0];
      v12 = type metadata accessor for FormatInspectionItem(0);
      v13 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v13 = v11;
      v14 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v15 = (char *)a4 + *(int *)(v12 + 28);
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v15 + 1) = 0;
      v15[16] = -1;
      return sub_1BA93EBE8((uint64_t)v36);
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(v34, (uint64_t)&v31);
      __swift_project_boxed_opaque_existential_1(&v31, v33);
      v20 = sub_1BB87420C();
      v22 = v21;
      sub_1BA6ED734(a3, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
      *v10 = v20;
      v10[1] = v22;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v25 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      return sub_1BA93EBE8((uint64_t)v36);
    }
    v34[8] = v42;
    v34[9] = v43;
    v35 = v44;
    v34[4] = v38;
    v34[5] = v39;
    v34[6] = v40;
    v34[7] = v41;
    v34[0] = v36[0];
    v34[1] = v36[1];
    v34[2] = v36[2];
    v34[3] = v37;
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_1BB873E34();
    v26 = v31;
    v27 = v32;
    sub_1BA6ED734(a3, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
    sub_1BA93EBE8((uint64_t)v34);
    *v10 = v26;
    v10[1] = v27;
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 0, 1, v28);
    *a4 = a1;
    a4[1] = a2;
    v16 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    result = sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  }
  else
  {
    sub_1BA6ED734(a3, (unint64_t *)&qword_1ED3A1320, (uint64_t)&type metadata for FeedPuzzle);
    v16 = type metadata accessor for FormatInspectionItem(0);
    v17 = (char *)a4 + *(int *)(v16 + 24);
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
  }
  v29 = (char *)a4 + *(int *)(v16 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1BAAF7494@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v34 = a3;
  *((_QWORD *)&v34 + 1) = a4;
  if (a4)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    v13 = MEMORY[0x1E0DEA968];
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v14 = v31;
      v15 = type metadata accessor for FormatInspectionItem(0);
      v16 = (_QWORD *)((char *)a5 + *(int *)(v15 + 24));
      *v16 = v14;
      v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      v18 = (char *)a5 + *(int *)(v15 + 28);
      *(_QWORD *)v18 = 0;
      *((_QWORD *)v18 + 1) = 0;
      v18[16] = -1;
    }
    else
    {
      v32 = v13;
      v33 = MEMORY[0x1E0DEA9D8];
      v31 = v34;
      sub_1BA4CECCC(&v31, (uint64_t)v30);
      v24 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      v26 = *v24;
      v25 = v24[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v12 = v26;
      v12[1] = v25;
      v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v12, 0, 1, v27);
      *a5 = a1;
      a5[1] = a2;
      v28 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1BA5193C4((uint64_t)v12, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v29 = (char *)a5 + *(int *)(v28 + 28);
      *(_QWORD *)v29 = 0;
      *((_QWORD *)v29 + 1) = 0;
      v29[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v19 = type metadata accessor for FormatInspectionItem(0);
    v20 = (char *)a5 + *(int *)(v19 + 24);
    v21 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = a3;
    a5[3] = 0;
    v23 = (char *)a5 + *(int *)(v19 + 28);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAF770C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAB00134(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], (uint64_t (*)(_QWORD, double))sub_1BA6EF3B0, a4);
}

uint64_t sub_1BAAF7724@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  char *v14;

  v8 = ~a3 & 0xF000000000000007;
  v9 = type metadata accessor for FormatInspectionItem(0);
  v10 = (_QWORD *)((char *)a4 + *(int *)(v9 + 24));
  if (v8)
  {
    *v10 = a3;
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 0, 1, v13);
  }
  else
  {
    v11 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v14 = (char *)a4 + *(int *)(v9 + 28);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = -1;
  return result;
}

uint64_t sub_1BAAF7800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 == 41)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v16 = v28;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v17 = v16;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v11 = sub_1BB87420C();
        v11[1] = v19;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v22 = (char *)a4 + *(int *)(v21 + 28);
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v23 = v29;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v17 = v28;
      v17[1] = v24;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v12 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAF7AC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 == 13)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v16 = v28;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v17 = v16;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v11 = sub_1BB87420C();
        v11[1] = v19;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v22 = (char *)a4 + *(int *)(v21 + 28);
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v23 = v29;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v17 = v28;
      v17[1] = v24;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v12 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAF7D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v29[5];
  __int128 v30;
  ValueMetadata *v31;
  unint64_t v32;
  __int128 v33;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v33 = a3;
  *((_QWORD *)&v33 + 1) = a4;
  if (a4)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v13 = v30;
      v14 = type metadata accessor for FormatInspectionItem(0);
      v15 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
      *v15 = v13;
      v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      v17 = (char *)a5 + *(int *)(v14 + 28);
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      v31 = &type metadata for FormatSelector;
      v32 = sub_1BAB05D68();
      v30 = v33;
      sub_1BA4CECCC(&v30, (uint64_t)v29);
      v23 = __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      v25 = *v23;
      v24 = v23[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *v12 = v25;
      v12[1] = v24;
      v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v12, 0, 1, v26);
      *a5 = a1;
      a5[1] = a2;
      v27 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1BA5193C4((uint64_t)v12, (uint64_t)a5 + *(int *)(v27 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v28 = (char *)a5 + *(int *)(v27 + 28);
      *(_QWORD *)v28 = 0;
      *((_QWORD *)v28 + 1) = 0;
      v28[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a5 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v22 = (char *)a5 + *(int *)(v18 + 28);
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAF8000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t result;
  char *v14;
  uint64_t v15;
  char *v16;

  if (a4)
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v11 = (_QWORD *)((char *)a5 + *(int *)(v10 + 24));
    *v11 = a3;
    v11[1] = a4;
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
  }
  else
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v14 = (char *)a5 + *(int *)(v10 + 24);
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  }
  *a5 = a1;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = 0;
  v16 = (char *)a5 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

uint64_t sub_1BAAF80EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 == 7)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v16 = v28;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v17 = v16;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v11 = sub_1BB87420C();
        v11[1] = v19;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v22 = (char *)a4 + *(int *)(v21 + 28);
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v23 = v29;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v17 = v28;
      v17[1] = v24;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v12 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAF83B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  char *v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  _BYTE v30[72];
  uint64_t v31;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (a3)
  {
    swift_bridgeObjectRetain_n();
    v11 = sub_1BB6DED58(a3);
    v31 = MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      swift_bridgeObjectRetain();
      v13 = 64;
      do
      {
        v14 = swift_bridgeObjectRetain();
        sub_1BB383BA8(v14);
        v13 += 40;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease_n();
      v15 = v31;
    }
    else
    {
      swift_bridgeObjectRelease();
      v15 = MEMORY[0x1E0DEE9D8];
    }
    v21 = *(_QWORD *)(v15 + 16);
    swift_bridgeObjectRelease();
    if (v21)
    {
      sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
      *(_QWORD *)(inited + 64) = &off_1E7335C38;
      *(_QWORD *)(inited + 32) = a3;
      v23 = sub_1BA9747FC(inited);
      swift_setDeallocating();
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
      swift_arrayDestroy();
      v24 = sub_1BB6DF010(v23);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v10 = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      v10[1] = 0;
      v10[2] = 0;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
    }
    else
    {
      swift_bridgeObjectRelease_n();
      v26 = type metadata accessor for FormatInspectionItem(0);
      v27 = (char *)a4 + *(int *)(v26 + 24);
      v28 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
    }
    v29 = (char *)a4 + *(int *)(v26 + 28);
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    v29[16] = -1;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v16 = type metadata accessor for FormatInspectionItem(0);
    v17 = (char *)a4 + *(int *)(v16 + 24);
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v20 = (char *)a4 + *(int *)(v16 + 28);
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = 0;
    v20[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAF868C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[5];
  __int128 v19;
  ValueMetadata *v20;
  unint64_t v21;
  unsigned __int8 v22;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v22 = a3;
  if (v8 == 5)
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v11 = (char *)a4 + *(int *)(v10 + 24);
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (!swift_dynamicCast())
    {
      v20 = &type metadata for FormatTextAlignment;
      v21 = sub_1BAB05F54();
      LOBYTE(v19) = v22;
      sub_1BA4CECCC(&v19, (uint64_t)v18);
      v17 = (char *)&loc_1BAAF8834
          + 4 * byte_1BB89D8C8[*(unsigned __int8 *)__swift_project_boxed_opaque_existential_1(v18, v18[3])];
      __asm { BR              X12 }
    }
    v10 = type metadata accessor for FormatInspectionItem(0);
    v14 = (_QWORD *)((char *)a4 + *(int *)(v10 + 24));
    *v14 = v19;
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v16 = (char *)a4 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

uint64_t sub_1BAAF8928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[5];
  __int128 v19;
  ValueMetadata *v20;
  unint64_t v21;
  unsigned __int8 v22;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v22 = a3;
  if (v8 == 6)
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v11 = (char *)a4 + *(int *)(v10 + 24);
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (!swift_dynamicCast())
    {
      v20 = &type metadata for FormatTextLineBreakMode;
      v21 = sub_1BAB05F10();
      LOBYTE(v19) = v22;
      sub_1BA4CECCC(&v19, (uint64_t)v18);
      v17 = (char *)&loc_1BAAF8AE0
          + 4 * byte_1BB89D8CD[*(unsigned __int8 *)__swift_project_boxed_opaque_existential_1(v18, v18[3])];
      __asm { BR              X12 }
    }
    v10 = type metadata accessor for FormatInspectionItem(0);
    v14 = (_QWORD *)((char *)a4 + *(int *)(v10 + 24));
    *v14 = v19;
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v16 = (char *)a4 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

uint64_t sub_1BAAF8BE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFB5DC(a1, a2, a3, a4);
}

uint64_t sub_1BAAF8BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34[9];
  char v35;
  _OWORD v36[9];
  char v37;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA90C818(a3, (uint64_t)v36, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
  if (*((_QWORD *)&v36[0] + 1))
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA6ED734(a3, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
      v11 = *(_QWORD *)&v34[0];
      v12 = type metadata accessor for FormatInspectionItem(0);
      v13 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v13 = v11;
      v14 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v15 = (char *)a4 + *(int *)(v12 + 28);
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v15 + 1) = 0;
      v15[16] = -1;
      return sub_1BA6A94C4((uint64_t)v36);
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(v34, (uint64_t)&v31);
      __swift_project_boxed_opaque_existential_1(&v31, v33);
      v20 = sub_1BB87420C();
      v22 = v21;
      sub_1BA6ED734(a3, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
      *v10 = v20;
      v10[1] = v22;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v25 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
      return sub_1BA6A94C4((uint64_t)v36);
    }
    v34[6] = v36[6];
    v34[7] = v36[7];
    v34[8] = v36[8];
    v35 = v37;
    v34[2] = v36[2];
    v34[3] = v36[3];
    v34[4] = v36[4];
    v34[5] = v36[5];
    v34[0] = v36[0];
    v34[1] = v36[1];
    v31 = 0;
    v32 = 0xE000000000000000;
    sub_1BB873E34();
    v26 = v31;
    v27 = v32;
    sub_1BA6ED734(a3, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
    sub_1BA6A94C4((uint64_t)v34);
    *v10 = v26;
    v10[1] = v27;
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 0, 1, v28);
    *a4 = a1;
    a4[1] = a2;
    v16 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    result = sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v16 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  }
  else
  {
    sub_1BA6ED734(a3, &qword_1ED3C1098, (uint64_t)&type metadata for FeedTag);
    v16 = type metadata accessor for FormatInspectionItem(0);
    v17 = (char *)a4 + *(int *)(v16 + 24);
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
  }
  v29 = (char *)a4 + *(int *)(v16 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return result;
}

uint64_t sub_1BAAF8FF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v29[5];
  __int128 v30;
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BA5E800C(a3);
      v16 = v30;
      v17 = type metadata accessor for FormatInspectionItem(0);
      v18 = (_QWORD *)((char *)a4 + *(int *)(v17 + 24));
      *v18 = v16;
      v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v20 = (char *)a4 + *(int *)(v17 + 28);
      *(_QWORD *)v20 = 0;
      *((_QWORD *)v20 + 1) = 0;
      v20[16] = -1;
    }
    else
    {
      v31 = &type metadata for SportsDataVisualizationEventStatus;
      v32 = sub_1BAB05B6C();
      *(_QWORD *)&v30 = v33;
      sub_1BA4CECCC(&v30, (uint64_t)v29);
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      swift_retain();
      SportsDataVisualizationEventStatus.description.getter();
      v22 = v21;
      v24 = v23;
      sub_1BA5E800C(a3);
      *v10 = v22;
      v10[1] = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v27 = (char *)a4 + *(int *)(v26 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_release();
  }
  else
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v15 = (char *)a4 + *(int *)(v11 + 28);
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
    v15[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAF9280@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v25[5];
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v25[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 == 12)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v19 = (char *)a4 + *(int *)(v12 + 28);
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v16 = v26;
    v12 = type metadata accessor for FormatInspectionItem(0);
    v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
    *v17 = v16;
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  v27 = &type metadata for FormatFontScalingStyle;
  v28 = sub_1BAB05FB0();
  LOBYTE(v26) = v29;
  sub_1BA4CECCC(&v26, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  *v11 = FormatFontScalingStyle.description.getter();
  v11[1] = v20;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v11, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v23 = (char *)a4 + *(int *)(v22 + 28);
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1BAAF94A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 == 9)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v16 = v28;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v17 = v16;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v11 = sub_1BB87420C();
        v11[1] = v19;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v22 = (char *)a4 + *(int *)(v21 + 28);
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v23 = v29;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v17 = v28;
      v17[1] = v24;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v12 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAF9768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFB098(a1, a2, a3, &qword_1ED3B96A0, (uint64_t (*)(void))sub_1BA834274, (uint64_t)&type metadata for FormatFontTrait, (uint64_t (*)(void))sub_1BAB05FF4, a4);
}

uint64_t sub_1BAAF978C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFA548(a1, a2, a3, a4);
}

uint64_t sub_1BAAF9798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  return sub_1BAB01A34(a1, a2, a3, a4, MEMORY[0x1E0DEBB98], MEMORY[0x1E0DEBBE8], a5);
}

uint64_t sub_1BAAF97AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 == 10)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v16 = v28;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v17 = v16;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v11 = sub_1BB87420C();
        v11[1] = v19;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v22 = (char *)a4 + *(int *)(v21 + 28);
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v23 = v29;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v17 = v28;
      v17[1] = v24;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v12 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAF9A70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[4];
  __int128 v35;
  uint64_t v36;
  unint64_t v37;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = a3;
  v37 = a4;
  if (a4 != 4)
  {
    sub_1BA6EE1A4(a3, a4);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BAB05BB0(a3, a4);
      v17 = v35;
      v18 = type metadata accessor for FormatInspectionItem(0);
      v19 = (_QWORD *)((char *)a5 + *(int *)(v18 + 24));
      *v19 = v17;
      v20 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      v21 = (char *)a5 + *(int *)(v18 + 28);
      *(_QWORD *)v21 = 0;
      *((_QWORD *)v21 + 1) = 0;
      v21[16] = -1;
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (!swift_dynamicCast())
      {
        v28 = v36;
        v29 = v37;
        v13 = type metadata accessor for FormatInspectionItem(0);
        v30 = (_QWORD *)((char *)a5 + *(int *)(v13 + 24));
        *(_QWORD *)&v35 = 0;
        *((_QWORD *)&v35 + 1) = 0xE000000000000000;
        v34[0] = v28;
        v34[1] = v29;
        sub_1BB873E34();
        sub_1BAB05BB0(a3, a4);
        sub_1BA98D234(v28, v29);
        v31 = *((_QWORD *)&v35 + 1);
        *v30 = v35;
        v30[1] = v31;
        v32 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 0, 1, v32);
        goto LABEL_9;
      }
      sub_1BA4CECCC(&v35, (uint64_t)v34);
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      v22 = sub_1BB87420C();
      v24 = v23;
      sub_1BAB05BB0(a3, a4);
      *v12 = v22;
      v12[1] = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
      *a5 = a1;
      a5[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1BA5193C4((uint64_t)v12, (uint64_t)a5 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v27 = (char *)a5 + *(int *)(v26 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    return sub_1BA98D234(v36, v37);
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (char *)a5 + *(int *)(v13 + 24);
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
LABEL_9:
  *a5 = a1;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = 0;
  v33 = (char *)a5 + *(int *)(v13 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  return result;
}

uint64_t sub_1BAAF9DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFCF48(a1, a2, a3, (unint64_t *)&qword_1ED3B93D8, (uint64_t)&type metadata for FormatCorner, &qword_1EF2AFF18, a4);
}

uint64_t sub_1BAAF9DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  _QWORD v27[5];
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;

  v10 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = a3;
  v32 = v10;
  if ((a4 & 1) != 0)
  {
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a5 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v22 = (char *)a5 + *(int *)(v14 + 28);
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v18 = MEMORY[0x1E0DEB070];
  if (swift_dynamicCast())
  {
    v19 = v28;
    v14 = type metadata accessor for FormatInspectionItem(0);
    v20 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
    *v20 = v19;
    v21 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
    goto LABEL_5;
  }
  v29 = v18;
  v30 = MEMORY[0x1E0DEB0E0];
  *(_QWORD *)&v28 = v31;
  sub_1BA4CECCC(&v28, (uint64_t)v27);
  __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  *v13 = sub_1BB872FDC();
  v13[1] = v23;
  v24 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v13, 0, 1, v24);
  *a5 = a1;
  a5[1] = a2;
  v25 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v25 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v26 = (char *)a5 + *(int *)(v25 + 28);
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1BAAFA010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[4];
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v12 = a5 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (_QWORD *)((char *)&v36[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v38 = a3;
  v39 = a4;
  v40 = v12;
  if ((a5 & 1) != 0)
  {
    v16 = type metadata accessor for FormatInspectionItem(0);
    v17 = (char *)a6 + *(int *)(v16 + 24);
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
LABEL_5:
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v23 = *(int *)(v16 + 28);
LABEL_6:
    v24 = (char *)a6 + v23;
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v24[16] = -1;
    return result;
  }
  sub_1BAB05C50();
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v20 = v37;
    v16 = type metadata accessor for FormatInspectionItem(0);
    v21 = (_QWORD *)((char *)a6 + *(int *)(v16 + 24));
    *v21 = v20;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (!swift_dynamicCast())
  {
    v29 = v38;
    v30 = v39;
    v31 = type metadata accessor for FormatInspectionItem(0);
    v32 = (_QWORD *)((char *)a6 + *(int *)(v31 + 24));
    *(_QWORD *)&v37 = 0;
    *((_QWORD *)&v37 + 1) = 0xE000000000000000;
    v36[0] = v29;
    v36[1] = v30;
    sub_1BB873E34();
    v33 = *((_QWORD *)&v37 + 1);
    *v32 = v37;
    v32[1] = v33;
    v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v23 = *(int *)(v31 + 28);
    goto LABEL_6;
  }
  sub_1BA4CECCC(&v37, (uint64_t)v36);
  __swift_project_boxed_opaque_existential_1(v36, v36[3]);
  *v15 = sub_1BB87420C();
  v15[1] = v25;
  v26 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v15, 0, 1, v26);
  *a6 = a1;
  a6[1] = a2;
  v27 = type metadata accessor for FormatInspectionItem(0);
  a6[2] = 0;
  a6[3] = 0;
  sub_1BA5193C4((uint64_t)v15, (uint64_t)a6 + *(int *)(v27 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v28 = (char *)a6 + *(int *)(v27 + 28);
  *(_QWORD *)v28 = 0;
  *((_QWORD *)v28 + 1) = 0;
  v28[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
}

uint64_t sub_1BAAFA30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  _QWORD v25[5];
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  char v30;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v25[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  v30 = BYTE4(a3) & 1;
  if ((a3 & 0x100000000) != 0)
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v19 = (char *)a4 + *(int *)(v11 + 28);
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v15 = MEMORY[0x1E0DEB188];
  if (swift_dynamicCast())
  {
    v16 = v26;
    v11 = type metadata accessor for FormatInspectionItem(0);
    v17 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
    *v17 = v16;
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  v27 = v15;
  v28 = MEMORY[0x1E0DEB1D8];
  LODWORD(v26) = v29;
  sub_1BA4CECCC(&v26, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  *v10 = sub_1BB873018();
  v10[1] = v20;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v23 = (char *)a4 + *(int *)(v22 + 28);
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1BAAFA530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  return sub_1BAAFB8D0(a1, a2, a3, a4, a5, (void (*)(_QWORD, double))type metadata accessor for CGSize, a6);
}

uint64_t sub_1BAAFA53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFA548(a1, a2, a3, a4);
}

uint64_t sub_1BAAFA548@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned __int8 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[4];
  __int128 v32;
  unsigned __int8 v33;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v31[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a3;
  if (v8 == 4)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v19 = *(int *)(v12 + 28);
    goto LABEL_6;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v16 = v32;
    v12 = type metadata accessor for FormatInspectionItem(0);
    v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
    *v17 = v16;
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(&v32, (uint64_t)v31);
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    *v11 = sub_1BB87420C();
    v11[1] = v21;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
    *a4 = a1;
    a4[1] = a2;
    v23 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v23 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
    v24 = (char *)a4 + *(int *)(v23 + 28);
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v24[16] = -1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  v25 = v33;
  v26 = type metadata accessor for FormatInspectionItem(0);
  v27 = (_QWORD *)((char *)a4 + *(int *)(v26 + 24));
  *(_QWORD *)&v32 = 0;
  *((_QWORD *)&v32 + 1) = 0xE000000000000000;
  LOBYTE(v31[0]) = v25;
  sub_1BB873E34();
  v28 = *((_QWORD *)&v32 + 1);
  *v27 = v32;
  v27[1] = v28;
  v29 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v19 = *(int *)(v26 + 28);
LABEL_6:
  v20 = (char *)a4 + v19;
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = -1;
  return result;
}

uint64_t sub_1BAAFA830@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 a5@<W4>, _QWORD *a6@<X8>)
{
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  __int128 v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD v43[5];
  __int128 v44;
  char v45;
  ValueMetadata *v46;
  unint64_t v47;
  __int128 v48;
  char v49;

  v12 = ~a5;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (uint64_t *)((char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(_QWORD *)&v48 = a3;
  *((_QWORD *)&v48 + 1) = a4;
  v49 = a5;
  if (v12)
  {
    sub_1BA69C808(a3, a4, a5 & 1);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA796C70(a3, a4, a5);
      v16 = v44;
      v17 = type metadata accessor for FormatInspectionItem(0);
      v18 = (_QWORD *)((char *)a6 + *(int *)(v17 + 24));
      *v18 = v16;
      v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *a6 = a1;
      a6[1] = a2;
      a6[2] = 0;
      a6[3] = 0;
      v20 = (char *)a6 + *(int *)(v17 + 28);
      *(_QWORD *)v20 = 0;
      *((_QWORD *)v20 + 1) = 0;
      v20[16] = -1;
    }
    else
    {
      v39 = a1;
      v40 = a2;
      v46 = &type metadata for FormatBoolean;
      v47 = sub_1BAB05D0C();
      v26 = v48;
      v27 = v49;
      v44 = v48;
      v45 = v49;
      sub_1BA4CECCC(&v44, (uint64_t)v43);
      v28 = __swift_project_boxed_opaque_existential_1(v43, v43[3]);
      v29 = *v28;
      if ((v28[2] & 1) != 0)
      {
        v41 = 0x286E6F6974706FLL;
        v42 = 0xE700000000000000;
        sub_1BA69C808(v26, *((uint64_t *)&v26 + 1), v27);
        sub_1BB872AFC(v30);
        sub_1BB872AFC(v31);
        sub_1BA796C70(a3, a4, a5);
        v32 = v41;
        v33 = v42;
      }
      else
      {
        sub_1BA69C808(v26, *((uint64_t *)&v26 + 1), v27);
        sub_1BA796C70(a3, a4, a5);
        v32 = 1702195828;
        if ((v29 & 1) == 0)
          v32 = 0x65736C6166;
        v33 = 0xE400000000000000;
        if ((v29 & 1) == 0)
          v33 = 0xE500000000000000;
      }
      *v15 = v32;
      v15[1] = v33;
      v34 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 0, 1, v34);
      v35 = v40;
      *a6 = v39;
      a6[1] = v35;
      v36 = type metadata accessor for FormatInspectionItem(0);
      a6[2] = 0;
      a6[3] = 0;
      sub_1BA5193C4((uint64_t)v15, (uint64_t)a6 + *(int *)(v36 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v37 = (char *)a6 + *(int *)(v36 + 28);
      *(_QWORD *)v37 = 0;
      *((_QWORD *)v37 + 1) = 0;
      v37[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    }
    return sub_1BA69C828(v48, *((uint64_t *)&v48 + 1), v49);
  }
  else
  {
    v21 = type metadata accessor for FormatInspectionItem(0);
    v22 = (char *)a6 + *(int *)(v21 + 24);
    v23 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 1, 1, v23);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v25 = (char *)a6 + *(int *)(v21 + 28);
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFAB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[4];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (_QWORD *)((char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = a3;
  v37 = a4;
  if (a3)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      sub_1BA5DCC4C(a3);
      v13 = v35;
      v14 = type metadata accessor for FormatInspectionItem(0);
      v15 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
      *v15 = v13;
      v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      v17 = (char *)a5 + *(int *)(v14 + 28);
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
      v17[16] = -1;
LABEL_7:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(&v35, (uint64_t)v34);
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      v22 = sub_1BB87420C();
      v24 = v23;
      sub_1BA5DCC4C(a3);
      *v12 = v22;
      v12[1] = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v12, 0, 1, v25);
      *a5 = a1;
      a5[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1BA5193C4((uint64_t)v12, (uint64_t)a5 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v27 = (char *)a5 + *(int *)(v26 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      goto LABEL_7;
    }
    v28 = v36;
    v29 = v37;
    v18 = type metadata accessor for FormatInspectionItem(0);
    v30 = (_QWORD *)((char *)a5 + *(int *)(v18 + 24));
    *(_QWORD *)&v35 = 0;
    *((_QWORD *)&v35 + 1) = 0xE000000000000000;
    v34[0] = v28;
    v34[1] = v29;
    sub_1BB873E34();
    sub_1BA5DCC4C(a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = *((_QWORD *)&v35 + 1);
    *v30 = v35;
    v30[1] = v31;
    v32 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v30, 0, 1, v32);
  }
  else
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a5 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  }
  *a5 = a1;
  a5[1] = a2;
  a5[2] = 0;
  a5[3] = 0;
  v33 = (char *)a5 + *(int *)(v18 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  return result;
}

uint64_t sub_1BAAFAEDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  _QWORD v24[8];
  char v25;
  _BYTE v26[80];

  sub_1BA6A09F0(a3, (uint64_t)v24, &qword_1EF2AFFB8, (uint64_t)&type metadata for FormatSplitBackgroundSide);
  v7 = v24[0];
  v8 = v24[1];
  v9 = v24[2];
  v10 = v24[3];
  v11 = v24[4];
  v12 = v24[5];
  v13 = v24[6];
  v14 = v24[7];
  v15 = v25;
  sub_1BA6A09F0(a3, (uint64_t)v26, &qword_1EF2AFFB8, (uint64_t)&type metadata for FormatSplitBackgroundSide);
  if (v26[64] == 255)
  {
    v16 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a4 + *(int *)(v16 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  }
  else
  {
    v16 = type metadata accessor for FormatInspectionItem(0);
    v17 = (_QWORD *)((char *)a4 + *(int *)(v16 + 24));
    *v17 = v7;
    if ((v15 & 1) != 0)
    {
      v17[1] = v8;
      v17[2] = v9;
      v17[3] = v10;
      v17[4] = v11;
      v17[5] = v12;
      v17[6] = v13;
      v17[7] = v14;
    }
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v22 = (char *)a4 + *(int *)(v16 + 28);
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = -1;
  return result;
}

uint64_t sub_1BAAFB07C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFCF48(a1, a2, a3, &qword_1ED3A08A0, (uint64_t)&type metadata for FormatIssueCoverTraits, &qword_1EF2AFFA8, a4);
}

uint64_t sub_1BAAFB098@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void)@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  _QWORD v38[5];
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (_QWORD *)((char *)&v38[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v42 = a3;
  if (a3)
  {
    sub_1BA4CDF6C(0, a4, a5, a6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v20 = v19;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v21 = v39;
      v22 = type metadata accessor for FormatInspectionItem(0);
      v23 = (_QWORD *)((char *)a8 + *(int *)(v22 + 24));
      *v23 = v21;
      v24 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
      *a8 = a1;
      a8[1] = a2;
      a8[2] = 0;
      a8[3] = 0;
      v25 = (char *)a8 + *(int *)(v22 + 28);
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = -1;
    }
    else
    {
      v40 = v20;
      v41 = a7();
      *(_QWORD *)&v39 = v42;
      sub_1BA4CECCC(&v39, (uint64_t)v38);
      __swift_project_boxed_opaque_existential_1(v38, v38[3]);
      a5();
      swift_bridgeObjectRetain();
      v31 = sub_1BB87303C();
      v33 = v32;
      swift_bridgeObjectRelease();
      *v18 = v31;
      v18[1] = v33;
      v34 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v18, 0, 1, v34);
      *a8 = a1;
      a8[1] = a2;
      v35 = type metadata accessor for FormatInspectionItem(0);
      a8[2] = 0;
      a8[3] = 0;
      sub_1BA5193C4((uint64_t)v18, (uint64_t)a8 + *(int *)(v35 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v36 = (char *)a8 + *(int *)(v35 + 28);
      *(_QWORD *)v36 = 0;
      *((_QWORD *)v36 + 1) = 0;
      v36[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v26 = type metadata accessor for FormatInspectionItem(0);
    v27 = (char *)a8 + *(int *)(v26 + 24);
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    *a8 = a1;
    a8[1] = a2;
    a8[2] = 0;
    a8[3] = 0;
    v30 = (char *)a8 + *(int *)(v26 + 28);
    *(_QWORD *)v30 = 0;
    *((_QWORD *)v30 + 1) = 0;
    v30[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFB354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v29[5];
  __int128 v30;
  ValueMetadata *v31;
  unint64_t v32;
  uint64_t v33;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BA6E6CD8(a3);
      v16 = v30;
      v17 = type metadata accessor for FormatInspectionItem(0);
      v18 = (_QWORD *)((char *)a4 + *(int *)(v17 + 24));
      *v18 = v16;
      v19 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 0, 1, v19);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v20 = (char *)a4 + *(int *)(v17 + 28);
      *(_QWORD *)v20 = 0;
      *((_QWORD *)v20 + 1) = 0;
      v20[16] = -1;
    }
    else
    {
      v31 = &type metadata for FormatFloat;
      v32 = sub_1BA8370D0();
      *(_QWORD *)&v30 = v33;
      sub_1BA4CECCC(&v30, (uint64_t)v29);
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      swift_retain();
      FormatFloat.description.getter();
      v22 = v21;
      v24 = v23;
      sub_1BA6E6CD8(a3);
      *v10 = v22;
      v10[1] = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v27 = (char *)a4 + *(int *)(v26 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_release();
  }
  else
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v15 = (char *)a4 + *(int *)(v11 + 28);
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = 0;
    v15[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFB5DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  unsigned __int8 v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[4];
  __int128 v32;
  unsigned __int8 v33;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v31[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a3;
  if (v8 == 3)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v19 = *(int *)(v12 + 28);
    goto LABEL_6;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v16 = v32;
    v12 = type metadata accessor for FormatInspectionItem(0);
    v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
    *v17 = v16;
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(&v32, (uint64_t)v31);
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    *v11 = sub_1BB87420C();
    v11[1] = v21;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v11, 0, 1, v22);
    *a4 = a1;
    a4[1] = a2;
    v23 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v23 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
    v24 = (char *)a4 + *(int *)(v23 + 28);
    *(_QWORD *)v24 = 0;
    *((_QWORD *)v24 + 1) = 0;
    v24[16] = -1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  }
  v25 = v33;
  v26 = type metadata accessor for FormatInspectionItem(0);
  v27 = (_QWORD *)((char *)a4 + *(int *)(v26 + 24));
  *(_QWORD *)&v32 = 0;
  *((_QWORD *)&v32 + 1) = 0xE000000000000000;
  LOBYTE(v31[0]) = v25;
  sub_1BB873E34();
  v28 = *((_QWORD *)&v32 + 1);
  *v27 = v32;
  v27[1] = v28;
  v29 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v19 = *(int *)(v26 + 28);
LABEL_6:
  v20 = (char *)a4 + v19;
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v20[16] = -1;
  return result;
}

uint64_t sub_1BAAFB8C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, _QWORD *a6@<X8>)
{
  return sub_1BAAFB8D0(a1, a2, a3, a4, a5, (void (*)(_QWORD, double))type metadata accessor for CGPoint, a6);
}

uint64_t sub_1BAAFB8D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void (*a6)(_QWORD, double)@<X5>, _QWORD *a7@<X8>)
{
  char v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD v39[4];
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  v14 = a5 & 1;
  sub_1BAB0582C(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (_QWORD *)((char *)&v39[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = a3;
  v42 = a4;
  v43 = v14;
  if ((a5 & 1) != 0)
  {
    v19 = type metadata accessor for FormatInspectionItem(0);
    v20 = (char *)a7 + *(int *)(v19 + 24);
    v21 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
LABEL_5:
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    v26 = *(int *)(v19 + 28);
LABEL_6:
    v27 = (char *)a7 + v26;
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v27 + 1) = 0;
    v27[16] = -1;
    return result;
  }
  a6(0, v16);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v23 = v40;
    v19 = type metadata accessor for FormatInspectionItem(0);
    v24 = (_QWORD *)((char *)a7 + *(int *)(v19 + 24));
    *v24 = v23;
    v25 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (!swift_dynamicCast())
  {
    v32 = v41;
    v33 = v42;
    v34 = type metadata accessor for FormatInspectionItem(0);
    v35 = (_QWORD *)((char *)a7 + *(int *)(v34 + 24));
    *(_QWORD *)&v40 = 0;
    *((_QWORD *)&v40 + 1) = 0xE000000000000000;
    v39[0] = v32;
    v39[1] = v33;
    sub_1BB873E34();
    v36 = *((_QWORD *)&v40 + 1);
    *v35 = v40;
    v35[1] = v36;
    v37 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 56))(v35, 0, 1, v37);
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    v26 = *(int *)(v34 + 28);
    goto LABEL_6;
  }
  sub_1BA4CECCC(&v40, (uint64_t)v39);
  __swift_project_boxed_opaque_existential_1(v39, v39[3]);
  *v18 = sub_1BB87420C();
  v18[1] = v28;
  v29 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v18, 0, 1, v29);
  *a7 = a1;
  a7[1] = a2;
  v30 = type metadata accessor for FormatInspectionItem(0);
  a7[2] = 0;
  a7[3] = 0;
  sub_1BA5193C4((uint64_t)v18, (uint64_t)a7 + *(int *)(v30 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v31 = (char *)a7 + *(int *)(v30 + 28);
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v31[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
}

uint64_t sub_1BAAFBBD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFCF48(a1, a2, a3, (unint64_t *)&qword_1ED3B95F8, MEMORY[0x1E0DEB070], &qword_1EF2AFF20, a4);
}

uint64_t sub_1BAAFBBF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t *a6@<X8>)
{
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void (*v24)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t result;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;

  if ((a5 & 1) != 0)
  {
    v31 = type metadata accessor for FormatInspectionItem(0);
    v32 = (char *)a6 + *(int *)(v31 + 24);
    v33 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 1, 1, v33);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v34 = (char *)a6 + *(int *)(v31 + 28);
    *(_QWORD *)v34 = 0;
    *((_QWORD *)v34 + 1) = 0;
    v34[16] = -1;
  }
  else
  {
    *(_QWORD *)&v36[0] = 40;
    *((_QWORD *)&v36[0] + 1) = 0xE100000000000000;
    sub_1BB872FDC();
    sub_1BB872AFC(v11);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v12);
    sub_1BB872FDC();
    sub_1BB872AFC(v13);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v14);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v15);
    sub_1BA8C88C8(0);
    v18 = *(_QWORD *)(v17 - 8);
    v19 = *(_QWORD *)(v18 + 72);
    v35 = a2;
    v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1BB87A390;
    v22 = v21 + v20;
    sub_1BAAF3A18(88, 0xE100000000000000, a3, 0, (_QWORD *)(v21 + v20));
    v23 = type metadata accessor for FormatInspectionItem(0);
    v24 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56);
    v24(v22, 0, 1, v23);
    v25 = (_QWORD *)(v22 + v19);
    sub_1BAAF3A18(89, 0xE100000000000000, a4, 0, v25);
    v24((unint64_t)v25, 0, 1, v23);
    sub_1BAF89090(0x746E696F50, 0xE500000000000000, 0, 0, v21, v36);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
    *(_QWORD *)(inited + 64) = &off_1E72D2F60;
    v26 = swift_allocObject();
    *(_QWORD *)(inited + 32) = v26;
    *(_QWORD *)(v26 + 48) = v37;
    v27 = v36[1];
    *(_OWORD *)(v26 + 16) = v36[0];
    *(_OWORD *)(v26 + 32) = v27;
    v28 = sub_1BA9747FC(inited);
    swift_setDeallocating();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
    swift_arrayDestroy();
    v29 = sub_1BB6DF010(v28);
    swift_bridgeObjectRelease();
    return sub_1BAAF3C48(a1, v35, (uint64_t)v29, 40, 0xE100000000000000, a6);
  }
  return result;
}

uint64_t sub_1BAAFBF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t result;
  char *v12;
  uint64_t v13;
  char *v14;

  if (a3)
  {
    v8 = type metadata accessor for FormatInspectionItem(0);
    v9 = (_QWORD *)((char *)a4 + *(int *)(v8 + 24));
    *v9 = a3;
    v10 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    v8 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v8 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v14 = (char *)a4 + *(int *)(v8 + 28);
  *(_QWORD *)v14 = 0;
  *((_QWORD *)v14 + 1) = 0;
  v14[16] = -1;
  return result;
}

void sub_1BAAFC004(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  sub_1BAB00944(a1, a2, a3, (uint64_t (*)(_QWORD, double))type metadata accessor for CAMediaTimingFillMode, sub_1BAB0605C, (uint64_t (*)(uint64_t))CAMediaTimingFillMode.description.getter, a4);
}

uint64_t sub_1BAAFC020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  _OWORD *v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  _OWORD v20[5];
  _OWORD v21[2];
  _BYTE v22[24];
  uint64_t v23;

  sub_1BA90C818(a3, (uint64_t)v22, (unint64_t *)&qword_1EF2C8DD0, (uint64_t)&type metadata for FormatInspectionFeedItem);
  if (v23)
  {
    sub_1BAB05BDC((uint64_t)v22, (uint64_t)v20);
    sub_1BA6ED734(a3, (unint64_t *)&qword_1EF2C8DD0, (uint64_t)&type metadata for FormatInspectionFeedItem);
    v8 = type metadata accessor for FormatInspectionItem(0);
    v9 = (_OWORD *)((char *)a4 + *(int *)(v8 + 24));
    v10 = v21[0];
    v9[4] = v20[4];
    v9[5] = v10;
    *(_OWORD *)((char *)v9 + 89) = *(_OWORD *)((char *)v21 + 9);
    v11 = v20[1];
    *v9 = v20[0];
    v9[1] = v11;
    v12 = v20[3];
    v9[2] = v20[2];
    v9[3] = v12;
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v9, 0, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v14 = (char *)a4 + *(int *)(v8 + 28);
    *(_QWORD *)v14 = 0;
    *((_QWORD *)v14 + 1) = 0;
    v14[16] = -1;
    return sub_1BAB05C18((uint64_t)v22);
  }
  else
  {
    sub_1BA6ED734(a3, (unint64_t *)&qword_1EF2C8DD0, (uint64_t)&type metadata for FormatInspectionFeedItem);
    v16 = type metadata accessor for FormatInspectionItem(0);
    v17 = (char *)a4 + *(int *)(v16 + 24);
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v19 = (char *)a4 + *(int *)(v16 + 28);
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFC1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  char *v11;

  if ((~a3 & 0xF000000000000007) != 0)
    __asm { BR              X10 }
  v7 = type metadata accessor for FormatInspectionItem(0);
  v8 = (char *)a4 + *(int *)(v7 + 24);
  v9 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v11 = (char *)a4 + *(int *)(v7 + 28);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = -1;
  return result;
}

uint64_t sub_1BAAFC74C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _QWORD v25[5];
  __int128 v26;
  ValueMetadata *v27;
  unint64_t v28;
  _OWORD v29[2];
  _BYTE v30[40];

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6A09F0(a3, (uint64_t)v29, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  sub_1BA6A09F0(a3, (uint64_t)v30, &qword_1ED3A5950, (uint64_t)&type metadata for FormatEdgeInsets);
  if (v30[32] == 1)
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v18 = (char *)a4 + *(int *)(v11 + 28);
    *(_QWORD *)v18 = 0;
    *((_QWORD *)v18 + 1) = 0;
    v18[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v15 = v26;
    v11 = type metadata accessor for FormatInspectionItem(0);
    v16 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
    *v16 = v15;
    v17 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
    goto LABEL_5;
  }
  v27 = &type metadata for FormatEdgeInsets;
  v28 = sub_1BAB060BC();
  v19 = swift_allocObject();
  *(_QWORD *)&v26 = v19;
  v20 = v29[1];
  *(_OWORD *)(v19 + 16) = v29[0];
  *(_OWORD *)(v19 + 32) = v20;
  sub_1BA4CECCC(&v26, (uint64_t)v25);
  __swift_project_boxed_opaque_existential_1(v25, v25[3]);
  *v10 = FormatEdgeInsets.description.getter();
  v10[1] = v21;
  v22 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v10, 0, 1, v22);
  *a4 = a1;
  a4[1] = a2;
  v23 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v23 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v24 = (char *)a4 + *(int *)(v23 + 28);
  *(_QWORD *)v24 = 0;
  *((_QWORD *)v24 + 1) = 0;
  v24[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
}

uint64_t sub_1BAAFC9C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  char *v21;
  _QWORD v22[6];
  char v23;
  char v24[40];
  uint64_t v25;

  sub_1BA6A09F0(a3, (uint64_t)v22, &qword_1EF2AFF08, (uint64_t)&type metadata for FormatInspectionFrame);
  v8 = v22[0];
  v9 = v22[1];
  v10 = v22[2];
  v11 = v22[3];
  v12 = v22[4];
  v13 = v22[5];
  v14 = v23;
  sub_1BA6A09F0(a3, (uint64_t)v24, &qword_1EF2AFF08, (uint64_t)&type metadata for FormatInspectionFrame);
  v15 = v25;
  v16 = type metadata accessor for FormatInspectionItem(0);
  v17 = (char *)a4 + *(int *)(v16 + 24);
  if (v15 == 1)
  {
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 1, 1, v18);
  }
  else
  {
    *(_QWORD *)v17 = v8;
    *((_QWORD *)v17 + 1) = v9;
    *((_QWORD *)v17 + 2) = v10;
    *((_QWORD *)v17 + 3) = v11;
    *((_QWORD *)v17 + 4) = v12;
    *((_QWORD *)v17 + 5) = v13;
    v17[48] = v14;
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v17, 0, 1, v20);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v21 = (char *)a4 + *(int *)(v16 + 28);
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = -1;
  return result;
}

uint64_t sub_1BAAFCB14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  __int128 v34;
  uint64_t v35;
  char *v36;
  _QWORD v37[4];
  __int128 v38;

  v8 = type metadata accessor for FormatItemNodeAction();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA7754CC(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a3, (uint64_t)v17, v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8) != 1)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7754CC);
      v23 = v38;
      v24 = type metadata accessor for FormatInspectionItem(0);
      v25 = (_QWORD *)((char *)a4 + *(int *)(v24 + 24));
      *v25 = v23;
      v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v27 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (!swift_dynamicCast())
      {
        sub_1BA5193C4((uint64_t)v17, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
        *(_QWORD *)&v38 = 0;
        *((_QWORD *)&v38 + 1) = 0xE000000000000000;
        sub_1BB873E34();
        v34 = v38;
        sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7754CC);
        sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
        *(_OWORD *)v14 = v34;
        v35 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v14, 0, 1, v35);
        *a4 = a1;
        a4[1] = a2;
        v19 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        result = sub_1BA5193C4((uint64_t)v14, (uint64_t)a4 + *(int *)(v19 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        goto LABEL_9;
      }
      sub_1BA4CECCC(&v38, (uint64_t)v37);
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      v28 = sub_1BB87420C();
      v30 = v29;
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7754CC);
      *(_QWORD *)v14 = v28;
      *((_QWORD *)v14 + 1) = v30;
      v31 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v14, 0, 1, v31);
      *a4 = a1;
      a4[1] = a2;
      v32 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v14, (uint64_t)a4 + *(int *)(v32 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v33 = (char *)a4 + *(int *)(v32 + 28);
      *(_QWORD *)v33 = 0;
      *((_QWORD *)v33 + 1) = 0;
      v33[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    return sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeAction);
  }
  sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BA7754CC);
  v19 = type metadata accessor for FormatInspectionItem(0);
  v20 = (char *)a4 + *(int *)(v19 + 24);
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
LABEL_9:
  v36 = (char *)a4 + *(int *)(v19 + 28);
  *(_QWORD *)v36 = 0;
  *((_QWORD *)v36 + 1) = 0;
  v36[16] = -1;
  return result;
}

uint64_t sub_1BAAFCF2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFCF48(a1, a2, a3, &qword_1ED3CF6C0, MEMORY[0x1E0DEF040], &qword_1EF2AFF30, a4);
}

uint64_t sub_1BAAFCF48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t *a4@<X3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t result;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v37[5];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (_QWORD *)((char *)&v37[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = a3;
  if (a3)
  {
    sub_1BA4AD288(0, a4, a5, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    v18 = v17;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v19 = v38;
      v20 = type metadata accessor for FormatInspectionItem(0);
      v21 = (_QWORD *)((char *)a7 + *(int *)(v20 + 24));
      *v21 = v19;
      v22 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
      *a7 = a1;
      a7[1] = a2;
      a7[2] = 0;
      a7[3] = 0;
      v23 = (char *)a7 + *(int *)(v20 + 28);
      *(_QWORD *)v23 = 0;
      *((_QWORD *)v23 + 1) = 0;
      v23[16] = -1;
    }
    else
    {
      v39 = v18;
      v40 = sub_1BAB05CC4(a6, a4, a5);
      *(_QWORD *)&v38 = v41;
      sub_1BA4CECCC(&v38, (uint64_t)v37);
      v29 = *__swift_project_boxed_opaque_existential_1(v37, v37[3]);
      swift_bridgeObjectRetain();
      v30 = MEMORY[0x1BCCE36DC](v29, a5);
      v32 = v31;
      swift_bridgeObjectRelease();
      *v16 = v30;
      v16[1] = v32;
      v33 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v16, 0, 1, v33);
      *a7 = a1;
      a7[1] = a2;
      v34 = type metadata accessor for FormatInspectionItem(0);
      a7[2] = 0;
      a7[3] = 0;
      sub_1BA5193C4((uint64_t)v16, (uint64_t)a7 + *(int *)(v34 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v35 = (char *)a7 + *(int *)(v34 + 28);
      *(_QWORD *)v35 = 0;
      *((_QWORD *)v35 + 1) = 0;
      v35[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v24 = type metadata accessor for FormatInspectionItem(0);
    v25 = (char *)a7 + *(int *)(v24 + 24);
    v26 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 1, 1, v26);
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    v28 = (char *)a7 + *(int *)(v24 + 28);
    *(_QWORD *)v28 = 0;
    *((_QWORD *)v28 + 1) = 0;
    v28[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFD1FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v32[4];
  __int128 v33;
  uint64_t v34;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BAB05D50(a3);
      v15 = v33;
      v16 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v16 + 24));
      *v17 = v15;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v19 = (char *)a4 + *(int *)(v16 + 28);
      *(_QWORD *)v19 = 0;
      *((_QWORD *)v19 + 1) = 0;
      v19[16] = -1;
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (!swift_dynamicCast())
      {
        v26 = v34;
        v11 = type metadata accessor for FormatInspectionItem(0);
        v27 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
        *(_QWORD *)&v33 = 0;
        *((_QWORD *)&v33 + 1) = 0xE000000000000000;
        v32[0] = v26;
        sub_1BB873E34();
        sub_1BAB05D50(a3);
        swift_release();
        v28 = *((_QWORD *)&v33 + 1);
        *v27 = v33;
        v27[1] = v28;
        v29 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
        goto LABEL_9;
      }
      sub_1BA4CECCC(&v33, (uint64_t)v32);
      __swift_project_boxed_opaque_existential_1(v32, v32[3]);
      v20 = sub_1BB87420C();
      v22 = v21;
      sub_1BAB05D50(a3);
      *v10 = v20;
      v10[1] = v22;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v25 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return swift_release();
  }
  v11 = type metadata accessor for FormatInspectionItem(0);
  v12 = (char *)a4 + *(int *)(v11 + 24);
  v13 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_9:
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v30 = (char *)a4 + *(int *)(v11 + 28);
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = -1;
  return result;
}

uint64_t sub_1BAAFD540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  unsigned __int8 v29;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v29 = a3;
  if (v8 < 0xF8)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v16 = v28;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v17 = v16;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v11 = sub_1BB87420C();
        v11[1] = v19;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v11, 0, 1, v20);
        *a4 = a1;
        a4[1] = a2;
        v21 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v21 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v22 = (char *)a4 + *(int *)(v21 + 28);
        *(_QWORD *)v22 = 0;
        *((_QWORD *)v22 + 1) = 0;
        v22[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v23 = v29;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LOBYTE(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v17 = v28;
      v17[1] = v24;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
  else
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v12 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAFD804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  unint64_t v32;
  char *v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v40 = a3;
  v41 = a4;
  v42 = a5;
  v43 = a6;
  if (a3 == 4)
  {
    v17 = type metadata accessor for FormatInspectionItem(0);
    v18 = (char *)a7 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v21 = v37;
      v17 = type metadata accessor for FormatInspectionItem(0);
      v22 = (_QWORD *)((char *)a7 + *(int *)(v17 + 24));
      *v22 = v21;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v37, (uint64_t)&v34);
        __swift_project_boxed_opaque_existential_1(&v34, v36);
        *v16 = sub_1BB87420C();
        v16[1] = v24;
        v25 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v16, 0, 1, v25);
        *a7 = a1;
        a7[1] = a2;
        v26 = type metadata accessor for FormatInspectionItem(0);
        a7[2] = 0;
        a7[3] = 0;
        sub_1BA5193C4((uint64_t)v16, (uint64_t)a7 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v27 = (char *)a7 + *(int *)(v26 + 28);
        *(_QWORD *)v27 = 0;
        *((_QWORD *)v27 + 1) = 0;
        v27[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v34);
      }
      v28 = v40;
      v29 = v41;
      v30 = v42;
      v31 = v43;
      v17 = type metadata accessor for FormatInspectionItem(0);
      v22 = (_QWORD *)((char *)a7 + *(int *)(v17 + 24));
      v34 = 0;
      v35 = 0xE000000000000000;
      LOBYTE(v37) = v28;
      *((_QWORD *)&v37 + 1) = v29;
      v38 = v30;
      v39 = v31;
      sub_1BB873E34();
      v32 = v35;
      *v22 = v34;
      v22[1] = v32;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = 0;
  a7[3] = 0;
  v33 = (char *)a7 + *(int *)(v17 + 28);
  *(_QWORD *)v33 = 0;
  *((_QWORD *)v33 + 1) = 0;
  v33[16] = -1;
  return result;
}

uint64_t sub_1BAAFDAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v32[4];
  __int128 v33;
  uint64_t v34;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  if ((~a3 & 0xF000000000000007) != 0)
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_retain();
    if (swift_dynamicCast())
    {
      sub_1BA62ECD4(a3);
      v15 = v33;
      v16 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a4 + *(int *)(v16 + 24));
      *v17 = v15;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v19 = (char *)a4 + *(int *)(v16 + 28);
      *(_QWORD *)v19 = 0;
      *((_QWORD *)v19 + 1) = 0;
      v19[16] = -1;
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (!swift_dynamicCast())
      {
        v26 = v34;
        v11 = type metadata accessor for FormatInspectionItem(0);
        v27 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
        *(_QWORD *)&v33 = 0;
        *((_QWORD *)&v33 + 1) = 0xE000000000000000;
        v32[0] = v26;
        sub_1BB873E34();
        sub_1BA62ECD4(a3);
        swift_release();
        v28 = *((_QWORD *)&v33 + 1);
        *v27 = v33;
        v27[1] = v28;
        v29 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
        goto LABEL_9;
      }
      sub_1BA4CECCC(&v33, (uint64_t)v32);
      __swift_project_boxed_opaque_existential_1(v32, v32[3]);
      v20 = sub_1BB87420C();
      v22 = v21;
      sub_1BA62ECD4(a3);
      *v10 = v20;
      v10[1] = v22;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v10, 0, 1, v23);
      *a4 = a1;
      a4[1] = a2;
      v24 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v25 = (char *)a4 + *(int *)(v24 + 28);
      *(_QWORD *)v25 = 0;
      *((_QWORD *)v25 + 1) = 0;
      v25[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return swift_release();
  }
  v11 = type metadata accessor for FormatInspectionItem(0);
  v12 = (char *)a4 + *(int *)(v11 + 24);
  v13 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_9:
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v30 = (char *)a4 + *(int *)(v11 + 28);
  *(_QWORD *)v30 = 0;
  *((_QWORD *)v30 + 1) = 0;
  v30[16] = -1;
  return result;
}

uint64_t sub_1BAAFDE38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  _QWORD v29[5];
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v33 = a3;
  if (a3)
  {
    v11 = type metadata accessor for SportsScoreDataVisualization();
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_retain();
    if (swift_dynamicCast())
    {
      swift_release();
      v12 = v30;
      v13 = type metadata accessor for FormatInspectionItem(0);
      v14 = (_QWORD *)((char *)a4 + *(int *)(v13 + 24));
      *v14 = v12;
      v15 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v16 = (char *)a4 + *(int *)(v13 + 28);
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      v16[16] = -1;
    }
    else
    {
      v31 = v11;
      v32 = sub_1BA4A2870(&qword_1EF2AFF40, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t)&protocol conformance descriptor for SportsScoreDataVisualization);
      *(_QWORD *)&v30 = v33;
      sub_1BA4CECCC(&v30, (uint64_t)v29);
      __swift_project_boxed_opaque_existential_1(v29, v29[3]);
      swift_retain();
      v22 = SportsScoreDataVisualization.description.getter();
      v24 = v23;
      swift_release();
      *v10 = v22;
      v10[1] = v24;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v10, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      v26 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v27 = (char *)a4 + *(int *)(v26 + 28);
      *(_QWORD *)v27 = 0;
      *((_QWORD *)v27 + 1) = 0;
      v27[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    }
    return swift_release();
  }
  else
  {
    v17 = type metadata accessor for FormatInspectionItem(0);
    v18 = (char *)a4 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v21 = (char *)a4 + *(int *)(v17 + 28);
    *(_QWORD *)v21 = 0;
    *((_QWORD *)v21 + 1) = 0;
    v21[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFE0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFE110(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for SportsStandingDataVisualization, a4);
}

uint64_t sub_1BAAFE0D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFE110(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for SportsBracketGroupDataVisualization, a4);
}

uint64_t sub_1BAAFE0E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFE110(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for SportsBoxScoreDataVisualization, a4);
}

uint64_t sub_1BAAFE0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFE110(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for SportsLineScoreDataVisualization, a4);
}

uint64_t sub_1BAAFE0F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFE110(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for SportsInjuryReportDataVisualization, a4);
}

uint64_t sub_1BAAFE104@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAAFE110(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for SportsKeyPlayerDataVisualization, a4);
}

uint64_t sub_1BAAFE110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(_QWORD, double)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v37[4];
  __int128 v38;
  uint64_t v39;

  sub_1BAB0582C(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)&v37[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = a3;
  if (a3)
  {
    a4(0, v11);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_retain();
    if (swift_dynamicCast())
    {
      swift_release();
      v14 = v38;
      v15 = type metadata accessor for FormatInspectionItem(0);
      v16 = (_QWORD *)((char *)a5 + *(int *)(v15 + 24));
      *v16 = v14;
      v17 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      v18 = (char *)a5 + *(int *)(v15 + 28);
      *(_QWORD *)v18 = 0;
      *((_QWORD *)v18 + 1) = 0;
      v18[16] = -1;
      return swift_release();
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(&v38, (uint64_t)v37);
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      v24 = sub_1BB87420C();
      v26 = v25;
      swift_release();
      *v13 = v24;
      v13[1] = v26;
      v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
      *a5 = a1;
      a5[1] = a2;
      v28 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v29 = (char *)a5 + *(int *)(v28 + 28);
      *(_QWORD *)v29 = 0;
      *((_QWORD *)v29 + 1) = 0;
      v29[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      return swift_release();
    }
    v30 = v39;
    v31 = type metadata accessor for FormatInspectionItem(0);
    v32 = (_QWORD *)((char *)a5 + *(int *)(v31 + 24));
    *(_QWORD *)&v38 = 0;
    *((_QWORD *)&v38 + 1) = 0xE000000000000000;
    v37[0] = v30;
    sub_1BB873E34();
    swift_release();
    swift_release();
    v33 = *((_QWORD *)&v38 + 1);
    *v32 = v38;
    v32[1] = v33;
    v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = *(int *)(v31 + 28);
  }
  else
  {
    v19 = type metadata accessor for FormatInspectionItem(0);
    v20 = (char *)a5 + *(int *)(v19 + 24);
    v21 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = *(int *)(v19 + 28);
  }
  v35 = (char *)a5 + v23;
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = -1;
  return result;
}

uint64_t sub_1BAAFE454@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  __int128 v51;
  char v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD v58[2];
  unsigned __int8 v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[6];
  char v66[48];
  uint64_t v67;

  v47 = a2;
  sub_1BA6A09F0(a3, (uint64_t)v65, &qword_1EF2AFF48, (uint64_t)&type metadata for FeedPuzzleType);
  v7 = v65[3];
  v8 = v65[4];
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v45 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6A09F0(a3, (uint64_t)v58, &qword_1EF2AFF48, (uint64_t)&type metadata for FeedPuzzleType);
  sub_1BA6A09F0(a3, (uint64_t)v66, &qword_1EF2AFF48, (uint64_t)&type metadata for FeedPuzzleType);
  if (v67)
  {
    v46 = a1;
    sub_1BA75A650(v7, v8);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    if (swift_dynamicCast())
    {
      sub_1BAB05DAC(a3);
      v11 = v51;
      v12 = type metadata accessor for FormatInspectionItem(0);
      v13 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
      *v13 = v11;
      v14 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
      v15 = v47;
      *a4 = v46;
      a4[1] = v15;
      a4[2] = 0;
      a4[3] = 0;
      v16 = (char *)a4 + *(int *)(v12 + 28);
      *(_QWORD *)v16 = 0;
      *((_QWORD *)v16 + 1) = 0;
      v16[16] = -1;
LABEL_7:
      sub_1BA6E0CBC(v60, v61);
      swift_unknownObjectRelease();
      return swift_bridgeObjectRelease();
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(&v51, (uint64_t)&v48);
      __swift_project_boxed_opaque_existential_1(&v48, v50);
      v23 = sub_1BB87420C();
      v25 = v24;
      sub_1BAB05DAC(a3);
      v26 = (uint64_t)v45;
      *(_QWORD *)v45 = v23;
      *(_QWORD *)(v26 + 8) = v25;
      v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 0, 1, v27);
      v28 = v47;
      *a4 = v46;
      a4[1] = v28;
      v29 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4(v26, (uint64_t)a4 + *(int *)(v29 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v30 = (char *)a4 + *(int *)(v29 + 28);
      *(_QWORD *)v30 = 0;
      *((_QWORD *)v30 + 1) = 0;
      v30[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
      goto LABEL_7;
    }
    v31 = v58[0];
    v44 = v58[1];
    v43 = v59;
    v32 = v60;
    v33 = v61;
    v35 = v62;
    v34 = v63;
    v36 = v64;
    v45 = (char *)type metadata accessor for FormatInspectionItem(0);
    v37 = (_QWORD *)((char *)a4 + *((int *)v45 + 6));
    v48 = 0;
    v49 = 0xE000000000000000;
    *(_QWORD *)&v51 = v31;
    *((_QWORD *)&v51 + 1) = v44;
    v52 = v43;
    v53 = v32;
    v54 = v33;
    v55 = v35;
    v56 = v34;
    v57 = v36;
    sub_1BB873E34();
    sub_1BAB05DAC(a3);
    sub_1BA6E0CBC(v32, v33);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    v38 = v49;
    *v37 = v48;
    v37[1] = v38;
    v39 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v37, 0, 1, v39);
    v40 = v47;
    *a4 = v46;
    a4[1] = v40;
    a4[2] = 0;
    a4[3] = 0;
    v22 = *((int *)v45 + 7);
  }
  else
  {
    v17 = type metadata accessor for FormatInspectionItem(0);
    v18 = (char *)a4 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    v21 = v47;
    *a4 = a1;
    a4[1] = v21;
    a4[2] = 0;
    a4[3] = 0;
    v22 = *(int *)(v17 + 28);
  }
  v41 = (char *)a4 + v22;
  *(_QWORD *)v41 = 0;
  *((_QWORD *)v41 + 1) = 0;
  v41[16] = -1;
  return result;
}

uint64_t sub_1BAAFE890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v30[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  if (a3)
  {
    sub_1BA6BCC84();
    v12 = v11;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v13 = v31;
      v14 = type metadata accessor for FormatInspectionItem(0);
      v15 = (_QWORD *)((char *)a4 + *(int *)(v14 + 24));
      *v15 = v13;
      v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v17 = (char *)a4 + *(int *)(v14 + 28);
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      v32 = v12;
      v33 = sub_1BA4A2870(&qword_1EF2AFF50, (uint64_t (*)(uint64_t))sub_1BA6BCC84, MEMORY[0x1E0DEB3E8]);
      *(_QWORD *)&v31 = v34;
      sub_1BA4CECCC(&v31, (uint64_t)v30);
      __swift_project_boxed_opaque_existential_1(v30, v30[3]);
      swift_bridgeObjectRetain();
      v23 = sub_1BB87303C();
      v25 = v24;
      swift_bridgeObjectRelease();
      *v10 = v23;
      v10[1] = v25;
      v26 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v10, 0, 1, v26);
      *a4 = a1;
      a4[1] = a2;
      v27 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v27 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v28 = (char *)a4 + *(int *)(v27 + 28);
      *(_QWORD *)v28 = 0;
      *((_QWORD *)v28 + 1) = 0;
      v28[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a4 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v22 = (char *)a4 + *(int *)(v18 + 28);
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t sub_1BAAFEB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[5];
  __int128 v19;
  ValueMetadata *v20;
  unint64_t v21;
  unsigned __int8 v22;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v22 = a3;
  if (v8 == 4)
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v11 = (char *)a4 + *(int *)(v10 + 24);
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (!swift_dynamicCast())
    {
      v20 = &type metadata for FormatImageResize;
      v21 = sub_1BAB05E88();
      LOBYTE(v19) = v22;
      sub_1BA4CECCC(&v19, (uint64_t)v18);
      v17 = (char *)&loc_1BAAFECE0
          + 4 * byte_1BB89D8E4[*(unsigned __int8 *)__swift_project_boxed_opaque_existential_1(v18, v18[3])];
      __asm { BR              X12 }
    }
    v10 = type metadata accessor for FormatInspectionItem(0);
    v14 = (_QWORD *)((char *)a4 + *(int *)(v10 + 24));
    *v14 = v19;
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v16 = (char *)a4 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

uint64_t sub_1BAAFEDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[5];
  __int128 v19;
  ValueMetadata *v20;
  unint64_t v21;
  unsigned __int8 v22;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v22 = a3;
  if (v8 == 9)
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v11 = (char *)a4 + *(int *)(v10 + 24);
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (!swift_dynamicCast())
    {
      v20 = &type metadata for FormatContentMode;
      v21 = sub_1BAB05E44();
      LOBYTE(v19) = v22;
      sub_1BA4CECCC(&v19, (uint64_t)v18);
      v17 = (char *)&loc_1BAAFEF60
          + 4 * byte_1BB89D8E8[*(unsigned __int8 *)__swift_project_boxed_opaque_existential_1(v18, v18[3])];
      __asm { BR              X12 }
    }
    v10 = type metadata accessor for FormatInspectionItem(0);
    v14 = (_QWORD *)((char *)a4 + *(int *)(v10 + 24));
    *v14 = v19;
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v16 = (char *)a4 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

uint64_t sub_1BAAFF0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t (**v10)(void *);
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t (**)(void *))((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a3 == 3)
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
  }
  else
  {
    v15 = swift_allocObject();
    *(_QWORD *)(v15 + 16) = a3;
    *v10 = sub_1BAB06204;
    v10[1] = (uint64_t (*)(void *))v15;
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t (**)(void *), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v10, 0, 1, v16);
    *a4 = a1;
    a4[1] = a2;
    v11 = type metadata accessor for FormatInspectionItem(0);
    a4[2] = 0;
    a4[3] = 0;
    result = sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v11 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  }
  v17 = (char *)a4 + *(int *)(v11 + 28);
  *(_QWORD *)v17 = 0;
  *((_QWORD *)v17 + 1) = 0;
  v17[16] = -1;
  return result;
}

uint64_t sub_1BAAFF200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  char *v12;
  char *v13;
  __int128 v14[8];
  _BYTE v15[128];
  _BYTE v16[128];
  _BYTE v17[128];
  _BYTE v18[128];

  sub_1BA6A09F0(a3, (uint64_t)v16, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  sub_1BA6A09F0((uint64_t)v16, (uint64_t)v18, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  sub_1BA6A09F0(a3, (uint64_t)v17, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
  if (sub_1BAB05F98((uint64_t)v17) != 1)
  {
    sub_1BA6A09F0((uint64_t)v18, (uint64_t)v14, (unint64_t *)&qword_1ED3B30E8, (uint64_t)&type metadata for FormatFill);
    sub_1BA7439D4(v14, (uint64_t)v15);
    v12 = (char *)&loc_1BAAFF320 + 4 * byte_1BB89D8F1[sub_1BAB05900((uint64_t)v15)];
    __asm { BR              X10 }
  }
  v8 = type metadata accessor for FormatInspectionItem(0);
  v9 = (char *)a4 + *(int *)(v8 + 24);
  v10 = type metadata accessor for FormatInspectionItem.Value(0);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v13 = (char *)a4 + *(int *)(v8 + 28);
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  v13[16] = -1;
  return result;
}

uint64_t sub_1BAAFF584@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  _QWORD v18[5];
  __int128 v19;
  ValueMetadata *v20;
  unint64_t v21;
  unsigned __int8 v22;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v22 = a3;
  if (v8 == 8)
  {
    v10 = type metadata accessor for FormatInspectionItem(0);
    v11 = (char *)a4 + *(int *)(v10 + 24);
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 1, 1, v12);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (!swift_dynamicCast())
    {
      v20 = &type metadata for FormatUnderlineStyle;
      v21 = sub_1BAB05ECC();
      LOBYTE(v19) = v22;
      sub_1BA4CECCC(&v19, (uint64_t)v18);
      v17 = (char *)&loc_1BAAFF730
          + 4 * byte_1BB89D8F5[*(unsigned __int8 *)__swift_project_boxed_opaque_existential_1(v18, v18[3])];
      __asm { BR              X12 }
    }
    v10 = type metadata accessor for FormatInspectionItem(0);
    v14 = (_QWORD *)((char *)a4 + *(int *)(v10 + 24));
    *v14 = v19;
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v16 = (char *)a4 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  return result;
}

void sub_1BAAFF858(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  sub_1BAAFF87C(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for AVLayerVideoGravity, a4);
}

uint64_t sub_1BAAFF864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  return sub_1BAAFFBBC(a1, a2, a3, a4, (void (*)(_QWORD, double))type metadata accessor for SVPlaybackKind, a5);
}

void sub_1BAAFF870(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  sub_1BAAFF87C(a1, a2, a3, (void (*)(_QWORD, double))type metadata accessor for CALayerContentsGravity, a4);
}

void sub_1BAAFF87C(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void (*a4)(_QWORD, double)@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t *v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD v37[4];
  __int128 v38;
  id v39;

  sub_1BAB0582C(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (_QWORD *)((char *)&v37[-1] - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v39 = a3;
  if (a3)
  {
    a4(0, v11);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    v14 = a3;
    if (swift_dynamicCast())
    {

      v15 = v38;
      v16 = type metadata accessor for FormatInspectionItem(0);
      v17 = (_QWORD *)((char *)a5 + *(int *)(v16 + 24));
      *v17 = v15;
      v18 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
      *a5 = a1;
      a5[1] = a2;
      a5[2] = 0;
      a5[3] = 0;
      v19 = (char *)a5 + *(int *)(v16 + 28);
      *(_QWORD *)v19 = 0;
      *((_QWORD *)v19 + 1) = 0;
      v19[16] = -1;
LABEL_7:

      return;
    }
    sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
    if (swift_dynamicCast())
    {
      sub_1BA4CECCC(&v38, (uint64_t)v37);
      __swift_project_boxed_opaque_existential_1(v37, v37[3]);
      v24 = sub_1BB87420C();
      v26 = v25;

      *v13 = v24;
      v13[1] = v26;
      v27 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
      *a5 = a1;
      a5[1] = a2;
      v28 = type metadata accessor for FormatInspectionItem(0);
      a5[2] = 0;
      a5[3] = 0;
      sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v29 = (char *)a5 + *(int *)(v28 + 28);
      *(_QWORD *)v29 = 0;
      *((_QWORD *)v29 + 1) = 0;
      v29[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
      goto LABEL_7;
    }
    v30 = v39;
    v31 = type metadata accessor for FormatInspectionItem(0);
    v32 = (_QWORD *)((char *)a5 + *(int *)(v31 + 24));
    *(_QWORD *)&v38 = 0;
    *((_QWORD *)&v38 + 1) = 0xE000000000000000;
    v37[0] = v30;
    sub_1BB873E34();

    v33 = *((_QWORD *)&v38 + 1);
    *v32 = v38;
    v32[1] = v33;
    v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = *(int *)(v31 + 28);
  }
  else
  {
    v20 = type metadata accessor for FormatInspectionItem(0);
    v21 = (char *)a5 + *(int *)(v20 + 24);
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 1, 1, v22);
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = *(int *)(v20 + 28);
  }
  v35 = (char *)a5 + v23;
  *(_QWORD *)v35 = 0;
  *((_QWORD *)v35 + 1) = 0;
  v35[16] = -1;
}

uint64_t sub_1BAAFFBB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  return sub_1BAAFFBBC(a1, a2, a3, a4, (void (*)(_QWORD, double))type metadata accessor for ActionAtItemEnd, a5);
}

uint64_t sub_1BAAFFBBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void (*a5)(_QWORD, double)@<X4>, _QWORD *a6@<X8>)
{
  char v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[4];
  __int128 v36;
  uint64_t v37;
  char v38;

  v12 = a4 & 1;
  sub_1BAB0582C(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (_QWORD *)((char *)v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v37 = a3;
  v38 = v12;
  if ((a4 & 1) != 0)
  {
    v17 = type metadata accessor for FormatInspectionItem(0);
    v18 = (char *)a6 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
LABEL_5:
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v24 = *(int *)(v17 + 28);
    goto LABEL_6;
  }
  a5(0, v14);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v21 = v36;
    v17 = type metadata accessor for FormatInspectionItem(0);
    v22 = (_QWORD *)((char *)a6 + *(int *)(v17 + 24));
    *v22 = v21;
    v23 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC(&v36, (uint64_t)v35);
    __swift_project_boxed_opaque_existential_1(v35, v35[3]);
    *v16 = sub_1BB87420C();
    v16[1] = v26;
    v27 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v16, 0, 1, v27);
    *a6 = a1;
    a6[1] = a2;
    v28 = type metadata accessor for FormatInspectionItem(0);
    a6[2] = 0;
    a6[3] = 0;
    sub_1BA5193C4((uint64_t)v16, (uint64_t)a6 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
    v29 = (char *)a6 + *(int *)(v28 + 28);
    *(_QWORD *)v29 = 0;
    *((_QWORD *)v29 + 1) = 0;
    v29[16] = -1;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  v30 = v37;
  v31 = type metadata accessor for FormatInspectionItem(0);
  v32 = (_QWORD *)((char *)a6 + *(int *)(v31 + 24));
  *(_QWORD *)&v36 = 0;
  *((_QWORD *)&v36 + 1) = 0xE000000000000000;
  v35[0] = v30;
  sub_1BB873E34();
  v33 = *((_QWORD *)&v36 + 1);
  *v32 = v36;
  v32[1] = v33;
  v34 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v32, 0, 1, v34);
  *a6 = a1;
  a6[1] = a2;
  a6[2] = 0;
  a6[3] = 0;
  v24 = *(int *)(v31 + 28);
LABEL_6:
  v25 = (char *)a6 + v24;
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAAFFEB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 a3@<W2>, _QWORD *a4@<X8>)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[5];
  __int128 v28;
  ValueMetadata *v29;
  unint64_t v30;
  unsigned __int8 v31;

  v8 = a3;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)&v27[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v31 = a3;
  if (v8 == 3)
  {
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = (char *)a4 + *(int *)(v12 + 24);
    v14 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 1, 1, v14);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v19 = (char *)a4 + *(int *)(v12 + 28);
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v16 = v28;
    v12 = type metadata accessor for FormatInspectionItem(0);
    v17 = (_QWORD *)((char *)a4 + *(int *)(v12 + 24));
    *v17 = v16;
    v18 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v17, 0, 1, v18);
    goto LABEL_5;
  }
  v29 = &type metadata for IssueCover.Kind;
  v30 = sub_1BAB06078();
  LOBYTE(v28) = v31;
  sub_1BA4CECCC(&v28, (uint64_t)v27);
  v20 = __swift_project_boxed_opaque_existential_1(v27, v27[3]);
  if (*(_BYTE *)v20)
  {
    if (*(_BYTE *)v20 == 1)
    {
      v21 = 0xEC00000061696465;
      v22 = 0x4D6465726579616CLL;
    }
    else
    {
      v21 = 0xE400000000000000;
      v22 = 1701736302;
    }
  }
  else
  {
    v21 = 0xE500000000000000;
    v22 = 0x6567616D69;
  }
  *v11 = v22;
  v11[1] = v21;
  v23 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v11, 0, 1, v23);
  *a4 = a1;
  a4[1] = a2;
  v24 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1BA5193C4((uint64_t)v11, (uint64_t)a4 + *(int *)(v24 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v25 = (char *)a4 + *(int *)(v24 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1BAB0011C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAB00134(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DBC548], (uint64_t (*)(_QWORD, double))sub_1BAB05E24, a4);
}

uint64_t sub_1BAB00134@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD, double)@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t result;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  v11 = a4(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = a5(0, v13);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - v17;
  sub_1BA4C2DD8(a3, (uint64_t)&v28 - v17, (uint64_t (*)(_QWORD))a5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
  {
    sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))a5);
    v19 = type metadata accessor for FormatInspectionItem(0);
    v20 = (char *)a6 + *(int *)(v19 + 24);
    v21 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 1, 1, v21);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v23 = (char *)a6 + *(int *)(v19 + 28);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = -1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v18, v11);
    sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))a5);
    v24 = type metadata accessor for FormatInspectionItem(0);
    v25 = (char *)a6 + *(int *)(v24 + 24);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v25, v15, v11);
    v26 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v25, 0, 1, v26);
    *a6 = a1;
    a6[1] = a2;
    a6[2] = 0;
    a6[3] = 0;
    v27 = (char *)a6 + *(int *)(v24 + 28);
    *(_QWORD *)v27 = 0;
    *((_QWORD *)v27 + 1) = 0;
    v27[16] = -1;
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v18, v11);
  }
  return result;
}

uint64_t sub_1BAB00328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  char v23;
  uint64_t v24;
  char *v25;
  _QWORD v27[4];
  __int128 v28;
  int v29;
  char v30;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v27[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v30 = BYTE4(a3);
  v29 = a3;
  if (BYTE4(a3) == 255)
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      v15 = v28;
      v11 = type metadata accessor for FormatInspectionItem(0);
      v16 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
      *v16 = v15;
      v17 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    else
    {
      sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
      if (swift_dynamicCast())
      {
        sub_1BA4CECCC(&v28, (uint64_t)v27);
        __swift_project_boxed_opaque_existential_1(v27, v27[3]);
        *v10 = sub_1BB87420C();
        v10[1] = v18;
        v19 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v10, 0, 1, v19);
        *a4 = a1;
        a4[1] = a2;
        v20 = type metadata accessor for FormatInspectionItem(0);
        a4[2] = 0;
        a4[3] = 0;
        sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v20 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        v21 = (char *)a4 + *(int *)(v20 + 28);
        *(_QWORD *)v21 = 0;
        *((_QWORD *)v21 + 1) = 0;
        v21[16] = -1;
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      }
      v22 = v29;
      v23 = v30;
      v11 = type metadata accessor for FormatInspectionItem(0);
      v16 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
      *(_QWORD *)&v28 = 0;
      *((_QWORD *)&v28 + 1) = 0xE000000000000000;
      LODWORD(v27[0]) = v22;
      BYTE4(v27[0]) = v23;
      sub_1BB873E34();
      v24 = *((_QWORD *)&v28 + 1);
      *v16 = v28;
      v16[1] = v24;
      v17 = type metadata accessor for FormatInspectionItem.Value(0);
    }
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = 0;
  a4[3] = 0;
  v25 = (char *)a4 + *(int *)(v11 + 28);
  *(_QWORD *)v25 = 0;
  *((_QWORD *)v25 + 1) = 0;
  v25[16] = -1;
  return result;
}

uint64_t sub_1BAB005FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[40];

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA5193C4(a3, (uint64_t)&v37, (uint64_t (*)(_QWORD))sub_1BAB06110);
  sub_1BA5193C4(a3, (uint64_t)v40, (uint64_t (*)(_QWORD))sub_1BAB06110);
  if (v40[32] == 1)
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v18 = *(int *)(v11 + 28);
LABEL_6:
    v19 = (char *)a4 + v18;
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  type metadata accessor for UIEdgeInsets(0);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v15 = v34;
    v11 = type metadata accessor for FormatInspectionItem(0);
    v16 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
    *v16 = v15;
    v17 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (!swift_dynamicCast())
  {
    v30 = v37;
    v24 = v38;
    v25 = v39;
    v26 = type metadata accessor for FormatInspectionItem(0);
    v27 = (_QWORD *)((char *)a4 + *(int *)(v26 + 24));
    v31 = 0;
    v32 = 0xE000000000000000;
    v34 = v30;
    v35 = v24;
    v36 = v25;
    sub_1BB873E34();
    v28 = v32;
    *v27 = v31;
    v27[1] = v28;
    v29 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v18 = *(int *)(v26 + 28);
    goto LABEL_6;
  }
  sub_1BA4CECCC(&v34, (uint64_t)&v31);
  __swift_project_boxed_opaque_existential_1(&v31, v33);
  *v10 = sub_1BB87420C();
  v10[1] = v20;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v23 = (char *)a4 + *(int *)(v22 + 28);
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
}

void sub_1BAB00928(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, _QWORD *a4@<X8>)
{
  sub_1BAB00944(a1, a2, a3, (uint64_t (*)(_QWORD, double))type metadata accessor for UIContentSizeCategory, sub_1BAB061E8, (uint64_t (*)(uint64_t))UIContentSizeCategory.description.getter, a4);
}

void sub_1BAB00944(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t (*a4)(_QWORD, double)@<X3>, uint64_t (*a5)(void)@<X4>, uint64_t (*a6)(uint64_t)@<X5>, _QWORD *a7@<X8>)
{
  uint64_t v14;
  double v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD v40[5];
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  sub_1BAB0582C(0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (_QWORD *)((char *)&v40[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v44 = a3;
  if (a3)
  {
    v18 = a4(0, v15);
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    v19 = a3;
    if (swift_dynamicCast())
    {

      v20 = v41;
      v21 = type metadata accessor for FormatInspectionItem(0);
      v22 = (_QWORD *)((char *)a7 + *(int *)(v21 + 24));
      *v22 = v20;
      v23 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
      *a7 = a1;
      a7[1] = a2;
      a7[2] = 0;
      a7[3] = 0;
      v24 = (char *)a7 + *(int *)(v21 + 28);
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      v24[16] = -1;
    }
    else
    {
      v42 = v18;
      v29 = a5();
      v30 = v44;
      v43 = v29;
      *(_QWORD *)&v41 = v44;
      sub_1BA4CECCC(&v41, (uint64_t)v40);
      v31 = *__swift_project_boxed_opaque_existential_1(v40, v40[3]);
      v32 = v30;
      v33 = a6(v31);
      v35 = v34;

      *v17 = v33;
      v17[1] = v35;
      v36 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v17, 0, 1, v36);
      *a7 = a1;
      a7[1] = a2;
      v37 = type metadata accessor for FormatInspectionItem(0);
      a7[2] = 0;
      a7[3] = 0;
      sub_1BA5193C4((uint64_t)v17, (uint64_t)a7 + *(int *)(v37 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v38 = (char *)a7 + *(int *)(v37 + 28);
      *(_QWORD *)v38 = 0;
      *((_QWORD *)v38 + 1) = 0;
      v38[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
    }

  }
  else
  {
    v25 = type metadata accessor for FormatInspectionItem(0);
    v26 = (char *)a7 + *(int *)(v25 + 24);
    v27 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    v28 = (char *)a7 + *(int *)(v25 + 28);
    *(_QWORD *)v28 = 0;
    *((_QWORD *)v28 + 1) = 0;
    v28[16] = -1;
  }
}

uint64_t sub_1BAB00BC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v10 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  v35 = v10;
  if ((a4 & 1) != 0)
  {
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a5 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = (char *)a5 + *(int *)(v14 + 28);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceLayoutDirection(0);
  v19 = v18;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v20 = v31;
    v14 = type metadata accessor for FormatInspectionItem(0);
    v21 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
    *v21 = v20;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  v32 = v19;
  v33 = sub_1BA4A2870(&qword_1EF2B0008, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceLayoutDirection, (uint64_t)&protocol conformance descriptor for UIUserInterfaceLayoutDirection);
  *(_QWORD *)&v31 = v34;
  sub_1BA4CECCC(&v31, (uint64_t)v30);
  v24 = *__swift_project_boxed_opaque_existential_1(v30, v30[3]);
  if (v24)
  {
    if (v24 == 1)
    {
      v25 = 0xED00007466654C20;
      v26 = 0x6F74207468676952;
    }
    else
    {
      v25 = 0xE700000000000000;
      v26 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    v25 = 0xED00007468676952;
    v26 = 0x206F74207466654CLL;
  }
  *v13 = v26;
  v13[1] = v25;
  v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v29 = (char *)a5 + *(int *)(v28 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BAB00E74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAB01C90(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB60A0], (uint64_t (*)(_QWORD, double))sub_1BAB061B4, (void (*)(uint64_t, char *, double))sub_1BAB061D0, (void (*)(uint64_t))sub_1BAB061DC, a4);
}

uint64_t sub_1BAB00E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v10 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  v35 = v10;
  if ((a4 & 1) != 0)
  {
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a5 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = (char *)a5 + *(int *)(v14 + 28);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceSizeClass(0);
  v19 = v18;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v20 = v31;
    v14 = type metadata accessor for FormatInspectionItem(0);
    v21 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
    *v21 = v20;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  v32 = v19;
  v33 = sub_1BA4A2870(&qword_1EF2AFFF8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceSizeClass, (uint64_t)&protocol conformance descriptor for UIUserInterfaceSizeClass);
  *(_QWORD *)&v31 = v34;
  sub_1BA4CECCC(&v31, (uint64_t)v30);
  v24 = *__swift_project_boxed_opaque_existential_1(v30, v30[3]);
  if (v24)
  {
    if (v24 == 1)
    {
      v25 = 0xE700000000000000;
      v26 = 0x746361706D6F63;
    }
    else if (v24 == 2)
    {
      v25 = 0xE700000000000000;
      v26 = 0x72616C75676572;
    }
    else
    {
      v25 = 0xE700000000000000;
      v26 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    v25 = 0xEB00000000646569;
    v26 = 0x6669636570736E75;
  }
  *v13 = v26;
  v13[1] = v25;
  v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v29 = (char *)a5 + *(int *)(v28 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BAB01154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v10 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  v35 = v10;
  if ((a4 & 1) != 0)
  {
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a5 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = (char *)a5 + *(int *)(v14 + 28);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceStyle(0);
  v19 = v18;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v20 = v31;
    v14 = type metadata accessor for FormatInspectionItem(0);
    v21 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
    *v21 = v20;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  v32 = v19;
  v33 = sub_1BA4A2870(&qword_1EF2AFFF0, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceStyle, (uint64_t)&protocol conformance descriptor for UIUserInterfaceStyle);
  *(_QWORD *)&v31 = v34;
  sub_1BA4CECCC(&v31, (uint64_t)v30);
  v24 = *__swift_project_boxed_opaque_existential_1(v30, v30[3]);
  if (v24)
  {
    if (v24 == 2)
    {
      v25 = 0xE400000000000000;
      v26 = 1802658148;
    }
    else if (v24 == 1)
    {
      v25 = 0xE500000000000000;
      v26 = 0x746867696CLL;
    }
    else
    {
      v25 = 0xE700000000000000;
      v26 = 0x6E776F6E6B6E75;
    }
  }
  else
  {
    v25 = 0xEB00000000646569;
    v26 = 0x6669636570736E75;
  }
  *v13 = v26;
  v13[1] = v25;
  v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v29 = (char *)a5 + *(int *)(v28 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BAB01404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v10 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (_QWORD *)((char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  v35 = v10;
  if ((a4 & 1) != 0)
  {
    v14 = type metadata accessor for FormatInspectionItem(0);
    v15 = (char *)a5 + *(int *)(v14 + 24);
    v16 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 1, 1, v16);
LABEL_5:
    *a5 = a1;
    a5[1] = a2;
    a5[2] = 0;
    a5[3] = 0;
    v23 = (char *)a5 + *(int *)(v14 + 28);
    *(_QWORD *)v23 = 0;
    *((_QWORD *)v23 + 1) = 0;
    v23[16] = -1;
    return result;
  }
  type metadata accessor for UIUserInterfaceIdiom(0);
  v19 = v18;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v20 = v31;
    v14 = type metadata accessor for FormatInspectionItem(0);
    v21 = (_QWORD *)((char *)a5 + *(int *)(v14 + 24));
    *v21 = v20;
    v22 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v21, 0, 1, v22);
    goto LABEL_5;
  }
  v32 = v19;
  v33 = sub_1BA4A2870(&qword_1EF2AFFE8, (uint64_t (*)(uint64_t))type metadata accessor for UIUserInterfaceIdiom, (uint64_t)&protocol conformance descriptor for UIUserInterfaceIdiom);
  *(_QWORD *)&v31 = v34;
  sub_1BA4CECCC(&v31, (uint64_t)v30);
  v24 = __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  v25 = 0xE700000000000000;
  v26 = 0x79616C50726163;
  switch(*v24)
  {
    case 0xFFFFFFFFFFFFFFFFLL:
      v25 = 0xEB00000000646569;
      v26 = 0x6669636570736E75;
      break;
    case 0:
      v25 = 0xE500000000000000;
      v26 = 0x656E6F6870;
      break;
    case 1:
      v25 = 0xE300000000000000;
      v26 = 6578544;
      break;
    case 2:
      v25 = 0xE200000000000000;
      v26 = 30324;
      break;
    case 3:
      break;
    case 5:
      v25 = 0xE300000000000000;
      v26 = 6513005;
      break;
    default:
      v25 = 0xE700000000000000;
      v26 = 0x6E776F6E6B6E75;
      break;
  }
  *v13 = v26;
  v13[1] = v25;
  v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v13, 0, 1, v27);
  *a5 = a1;
  a5[1] = a2;
  v28 = type metadata accessor for FormatInspectionItem(0);
  a5[2] = 0;
  a5[3] = 0;
  sub_1BA5193C4((uint64_t)v13, (uint64_t)a5 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v29 = (char *)a5 + *(int *)(v28 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BAB016F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[5];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAB06198(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a3, (uint64_t)v13, v14);
  v15 = sub_1BB86D678();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BAB06198);
    v17 = type metadata accessor for FormatInspectionItem(0);
    v18 = (char *)a4 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v21 = (char *)a4 + *(int *)(v17 + 28);
    *(_QWORD *)v21 = 0;
    *((_QWORD *)v21 + 1) = 0;
    v21[16] = -1;
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BAB06198);
      v22 = v35;
      v23 = type metadata accessor for FormatInspectionItem(0);
      v24 = (_QWORD *)((char *)a4 + *(int *)(v23 + 24));
      *v24 = v22;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v26 = (char *)a4 + *(int *)(v23 + 28);
      *(_QWORD *)v26 = 0;
      *((_QWORD *)v26 + 1) = 0;
      v26[16] = -1;
    }
    else
    {
      v36 = v15;
      v37 = sub_1BA4A2870(&qword_1EF2AFFE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D98], MEMORY[0x1E0DB5DA8]);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
      (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_0, v13, v15);
      sub_1BA4CECCC(&v35, (uint64_t)v34);
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      v28 = sub_1BB87420C();
      v30 = v29;
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BAB06198);
      *v10 = v28;
      v10[1] = v30;
      v31 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 0, 1, v31);
      *a4 = a1;
      a4[1] = a2;
      v32 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v32 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v33 = (char *)a4 + *(int *)(v32 + 28);
      *(_QWORD *)v33 = 0;
      *((_QWORD *)v33 + 1) = 0;
      v33[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  return result;
}

uint64_t sub_1BAB01A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _QWORD *a5@<X8>)
{
  return sub_1BAB01A34(a1, a2, a3, a4, MEMORY[0x1E0DEB418], MEMORY[0x1E0DEB478], a5);
}

uint64_t sub_1BAB01A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  _QWORD v30[5];
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  v14 = a4 & 1;
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_QWORD *)((char *)v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v34 = a3;
  v35 = v14;
  if ((a4 & 1) != 0)
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a7 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
LABEL_5:
    *a7 = a1;
    a7[1] = a2;
    a7[2] = 0;
    a7[3] = 0;
    v25 = (char *)a7 + *(int *)(v18 + 28);
    *(_QWORD *)v25 = 0;
    *((_QWORD *)v25 + 1) = 0;
    v25[16] = -1;
    return result;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v22 = v31;
    v18 = type metadata accessor for FormatInspectionItem(0);
    v23 = (_QWORD *)((char *)a7 + *(int *)(v18 + 24));
    *v23 = v22;
    v24 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
    goto LABEL_5;
  }
  v32 = a5;
  v33 = a6;
  *(_QWORD *)&v31 = v34;
  sub_1BA4CECCC(&v31, (uint64_t)v30);
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  *v17 = sub_1BB87420C();
  v17[1] = v26;
  v27 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v17, 0, 1, v27);
  *a7 = a1;
  a7[1] = a2;
  v28 = type metadata accessor for FormatInspectionItem(0);
  a7[2] = 0;
  a7[3] = 0;
  sub_1BA5193C4((uint64_t)v17, (uint64_t)a7 + *(int *)(v28 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v29 = (char *)a7 + *(int *)(v28 + 28);
  *(_QWORD *)v29 = 0;
  *((_QWORD *)v29 + 1) = 0;
  v29[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BAB01C6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  return sub_1BAB01C90(a1, a2, a3, (uint64_t (*)(_QWORD))MEMORY[0x1E0DB5D38], (uint64_t (*)(_QWORD, double))sub_1BAB06164, (void (*)(uint64_t, char *, double))sub_1BAB06180, (void (*)(uint64_t))sub_1BAB0618C, a4);
}

uint64_t sub_1BAB01C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t (*a5)(_QWORD, double)@<X4>, void (*a6)(uint64_t, char *, double)@<X5>, void (*a7)(uint64_t)@<X6>, _QWORD *a8@<X8>)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  double v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 *v52;
  _QWORD v53[4];
  __int128 v54;

  v15 = a4(0);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v49 - v17;
  sub_1BAB0582C(0);
  v20 = MEMORY[0x1E0C80A78](v19);
  v52 = (__int128 *)((char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = a5(0, v20);
  v23 = MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v49 - v24;
  a6(a3, (char *)&v49 - v24, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v25, 1, v15) == 1)
  {
    a7(a3);
    v26 = type metadata accessor for FormatInspectionItem(0);
    v27 = (char *)a8 + *(int *)(v26 + 24);
    v28 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v27, 1, 1, v28);
    *a8 = a1;
    a8[1] = a2;
    a8[2] = 0;
    a8[3] = 0;
LABEL_9:
    v48 = (char *)a8 + *(int *)(v26 + 28);
    *(_QWORD *)v48 = 0;
    *((_QWORD *)v48 + 1) = 0;
    v48[16] = -1;
    return result;
  }
  v51 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    a7(a3);
    v30 = a2;
    v31 = v54;
    v32 = type metadata accessor for FormatInspectionItem(0);
    v33 = (_QWORD *)((char *)a8 + *(int *)(v32 + 24));
    *v33 = v31;
    v34 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 0, 1, v34);
    *a8 = v51;
    a8[1] = v30;
    a8[2] = 0;
    a8[3] = 0;
    v35 = (char *)a8 + *(int *)(v32 + 28);
    *(_QWORD *)v35 = 0;
    *((_QWORD *)v35 + 1) = 0;
    v35[16] = -1;
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v25, v15);
  }
  v50 = a2;
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (!swift_dynamicCast())
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v25, v15);
    *(_QWORD *)&v54 = 0;
    *((_QWORD *)&v54 + 1) = 0xE000000000000000;
    sub_1BB873E34();
    v44 = v54;
    a7(a3);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    v45 = (uint64_t)v52;
    *v52 = v44;
    v46 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v45, 0, 1, v46);
    v47 = v50;
    *a8 = v51;
    a8[1] = v47;
    v26 = type metadata accessor for FormatInspectionItem(0);
    a8[2] = 0;
    a8[3] = 0;
    result = sub_1BA5193C4(v45, (uint64_t)a8 + *(int *)(v26 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
    goto LABEL_9;
  }
  sub_1BA4CECCC(&v54, (uint64_t)v53);
  __swift_project_boxed_opaque_existential_1(v53, v53[3]);
  v36 = sub_1BB87420C();
  v38 = v37;
  a7(a3);
  v39 = (uint64_t)v52;
  *(_QWORD *)v52 = v36;
  *(_QWORD *)(v39 + 8) = v38;
  v40 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v39, 0, 1, v40);
  v41 = v50;
  *a8 = v51;
  a8[1] = v41;
  v42 = type metadata accessor for FormatInspectionItem(0);
  a8[2] = 0;
  a8[3] = 0;
  sub_1BA5193C4(v39, (uint64_t)a8 + *(int *)(v42 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v43 = (char *)a8 + *(int *)(v42 + 28);
  *(_QWORD *)v43 = 0;
  *((_QWORD *)v43 + 1) = 0;
  v43[16] = -1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v53);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v25, v15);
}

uint64_t sub_1BAB020B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t result;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  _QWORD v34[5];
  __int128 v35;
  uint64_t v36;
  uint64_t v37;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAB06148(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a3, (uint64_t)v13, v14);
  v15 = sub_1BB86D8A0();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, v15) == 1)
  {
    sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BAB06148);
    v17 = type metadata accessor for FormatInspectionItem(0);
    v18 = (char *)a4 + *(int *)(v17 + 24);
    v19 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v18, 1, 1, v19);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v21 = (char *)a4 + *(int *)(v17 + 28);
    *(_QWORD *)v21 = 0;
    *((_QWORD *)v21 + 1) = 0;
    v21[16] = -1;
  }
  else
  {
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    if (swift_dynamicCast())
    {
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BAB06148);
      v22 = v35;
      v23 = type metadata accessor for FormatInspectionItem(0);
      v24 = (_QWORD *)((char *)a4 + *(int *)(v23 + 24));
      *v24 = v22;
      v25 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v26 = (char *)a4 + *(int *)(v23 + 28);
      *(_QWORD *)v26 = 0;
      *((_QWORD *)v26 + 1) = 0;
      v26[16] = -1;
    }
    else
    {
      v36 = v15;
      v37 = sub_1BA4A2870(&qword_1EF2AFFD0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5FD8], MEMORY[0x1E0DB5FE8]);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v35);
      (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(boxed_opaque_existential_0, v13, v15);
      sub_1BA4CECCC(&v35, (uint64_t)v34);
      __swift_project_boxed_opaque_existential_1(v34, v34[3]);
      v28 = sub_1BB87420C();
      v30 = v29;
      sub_1BA4A2E80(a3, (uint64_t (*)(_QWORD))sub_1BAB06148);
      *v10 = v28;
      v10[1] = v30;
      v31 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 56))(v10, 0, 1, v31);
      *a4 = a1;
      a4[1] = a2;
      v32 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v32 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v33 = (char *)a4 + *(int *)(v32 + 28);
      *(_QWORD *)v33 = 0;
      *((_QWORD *)v33 + 1) = 0;
      v33[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, v15);
  }
  return result;
}

uint64_t sub_1BAB023E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  _BYTE v40[40];

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (uint64_t *)((char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA5193C4(a3, (uint64_t)&v37, (uint64_t (*)(_QWORD))sub_1BAB0612C);
  sub_1BA5193C4(a3, (uint64_t)v40, (uint64_t (*)(_QWORD))sub_1BAB0612C);
  if (v40[32] == 1)
  {
    v11 = type metadata accessor for FormatInspectionItem(0);
    v12 = (char *)a4 + *(int *)(v11 + 24);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
LABEL_5:
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v18 = *(int *)(v11 + 28);
LABEL_6:
    v19 = (char *)a4 + v18;
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v19[16] = -1;
    return result;
  }
  type metadata accessor for CGRect(0);
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (swift_dynamicCast())
  {
    v15 = v34;
    v11 = type metadata accessor for FormatInspectionItem(0);
    v16 = (_QWORD *)((char *)a4 + *(int *)(v11 + 24));
    *v16 = v15;
    v17 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 0, 1, v17);
    goto LABEL_5;
  }
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2C2910);
  if (!swift_dynamicCast())
  {
    v30 = v37;
    v24 = v38;
    v25 = v39;
    v26 = type metadata accessor for FormatInspectionItem(0);
    v27 = (_QWORD *)((char *)a4 + *(int *)(v26 + 24));
    v31 = 0;
    v32 = 0xE000000000000000;
    v34 = v30;
    v35 = v24;
    v36 = v25;
    sub_1BB873E34();
    v28 = v32;
    *v27 = v31;
    v27[1] = v28;
    v29 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    result = (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v27, 0, 1, v29);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v18 = *(int *)(v26 + 28);
    goto LABEL_6;
  }
  sub_1BA4CECCC(&v34, (uint64_t)&v31);
  __swift_project_boxed_opaque_existential_1(&v31, v33);
  *v10 = sub_1BB87420C();
  v10[1] = v20;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v10, 0, 1, v21);
  *a4 = a1;
  a4[1] = a2;
  v22 = type metadata accessor for FormatInspectionItem(0);
  a4[2] = 0;
  a4[3] = 0;
  sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v22 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
  v23 = (char *)a4 + *(int *)(v22 + 28);
  *(_QWORD *)v23 = 0;
  *((_QWORD *)v23 + 1) = 0;
  v23[16] = -1;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v31);
}

void sub_1BAB02710(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  unint64_t v88;
  unint64_t v89;
  char v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t *v98;
  __int128 *v99;
  uint64_t v100;
  __int128 v101;
  unint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  _QWORD *v107;
  _QWORD *v108;
  _QWORD *v109;
  _QWORD *v110;
  __int128 v111;
  uint64_t (*v112)(uint64_t, uint64_t);
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  void (*v121)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  _QWORD *v140;
  uint64_t (*v141)(uint64_t, uint64_t);
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  void (*v150)(_QWORD, _QWORD, _QWORD, _QWORD);
  _QWORD *v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  _QWORD *v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  __int128 v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t *v166;
  uint64_t v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  id v171;
  id v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  __int128 v183[2];
  __int128 v184;
  __int128 v185;
  __int128 v186;
  _OWORD v187[5];
  __int128 v188[8];
  uint64_t v189;
  uint64_t v190;
  id v191;

  v177 = sub_1BB8714E8();
  v174 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v176 = (char *)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v175 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v175);
  v178 = (uint64_t)&v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for FormatInspectionFeedGroupItem();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v173 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v13);
  *(_QWORD *)&v179 = (char *)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB86C67C();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v173 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v191 = a3;
  if (!a3)
  {
    v25 = type metadata accessor for FormatInspectionItem(0);
    v26 = (char *)a4 + *(int *)(v25 + 24);
    v27 = type metadata accessor for FormatInspectionItem.Value(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v28 = (char *)a4 + *(int *)(v25 + 28);
    *(_QWORD *)v28 = 0;
    *((_QWORD *)v28 + 1) = 0;
    v28[16] = -1;
    return;
  }
  v180 = a1;
  v181 = a2;
  v182 = a4;
  v19 = a3;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if ((swift_dynamicCast() & 1) != 0)
  {

    v20 = *(_QWORD *)&v183[0];
    v21 = type metadata accessor for FormatInspectionItem(0);
    v22 = v182;
    v23 = (uint64_t)v182 + *(int *)(v21 + 24);
    *(_QWORD *)v23 = v20;
    v24 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_10:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v23, 0, 1, v24);
    v40 = v181;
    *v22 = v180;
    v22[1] = v40;
    v22[2] = 0;
    v22[3] = 0;
    v41 = *(int *)(v21 + 28);
LABEL_11:
    v38 = (char *)v22 + v41;
    goto LABEL_12;
  }
  if ((swift_dynamicCast() & 1) != 0)
  {
    v29 = *(_QWORD *)&v183[0];
    v30 = (*(_QWORD *)&v183[0] >> 58) & 0x38;
    v31 = *(_QWORD *)&aSystem_6[v30];
    v32 = *(_QWORD *)((char *)&unk_1BB89DBC0 + v30);

    v33 = type metadata accessor for FormatInspectionItem(0);
    v34 = v182;
    v35 = (uint64_t *)((char *)v182 + *(int *)(v33 + 24));
    *v35 = v29;
    v36 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
    v37 = v181;
    *v34 = v180;
    v34[1] = v37;
    v34[2] = v31;
    v34[3] = v32;
LABEL_7:
    v38 = (char *)v34 + *(int *)(v33 + 28);
    goto LABEL_12;
  }
  if (swift_dynamicCast())
  {

    v39 = v183[0];
    v21 = type metadata accessor for FormatInspectionItem(0);
    v22 = v182;
    v23 = (uint64_t)v182 + *(int *)(v21 + 24);
    *(_BYTE *)v23 = v39;
    v24 = type metadata accessor for FormatInspectionItem.Value(0);
    goto LABEL_10;
  }
  if (swift_dynamicCast())
  {

    v42 = type metadata accessor for FormatInspectionItem(0);
    v22 = v182;
    v43 = (uint64_t *)((char *)v182 + *(int *)(v42 + 24));
    (*(void (**)(_QWORD *, char *, uint64_t))(v16 + 32))(v43, v18, v15);
    v44 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_16:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v43, 0, 1, v44);
    v45 = v181;
    *v22 = v180;
    v22[1] = v45;
    v22[2] = 0;
    v22[3] = 0;
    v41 = *(int *)(v42 + 28);
    goto LABEL_11;
  }
  if (!swift_dynamicCast())
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v54 = *(_QWORD *)&v183[0];
      v55 = sub_1BB6DED58(*(uint64_t *)&v183[0]);
      v189 = MEMORY[0x1E0DEE9D8];
      v56 = *(_QWORD *)(v55 + 16);
      if (v56)
      {
        swift_bridgeObjectRetain();
        v57 = 64;
        v34 = v182;
        do
        {
          v58 = swift_bridgeObjectRetain();
          sub_1BB383BA8(v58);
          v57 += 40;
          --v56;
        }
        while (v56);
        swift_bridgeObjectRelease_n();
        v59 = v189;
      }
      else
      {
        swift_bridgeObjectRelease();
        v59 = MEMORY[0x1E0DEE9D8];
        v34 = v182;
      }
      v70 = *(_QWORD *)(v59 + 16);
      swift_bridgeObjectRelease();
      v71 = v181;
      if (v70)
      {
        sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
        v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v72 + 56) = &type metadata for FormatInspection;
        *(_QWORD *)(v72 + 64) = &off_1E7335C38;
        *(_QWORD *)(v72 + 32) = v54;
        v73 = sub_1BA9747FC(v72);
        swift_setDeallocating();
        sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v74 = sub_1BB6DF010(v73);
        swift_bridgeObjectRelease();

        v75 = v179;
        *(_QWORD *)v179 = v74;
        v76 = type metadata accessor for FormatInspectionItem.Value(0);
        *(_QWORD *)(v75 + 8) = 0;
        *(_QWORD *)(v75 + 16) = 0;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v76 - 8) + 56))(v75, 0, 1, v76);
        *v34 = v180;
        v34[1] = v71;
        v33 = type metadata accessor for FormatInspectionItem(0);
        v34[2] = 0;
        v34[3] = 0;
        sub_1BA5193C4(v75, (uint64_t)v34 + *(int *)(v33 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
        goto LABEL_7;
      }

      swift_bridgeObjectRelease();
      v33 = type metadata accessor for FormatInspectionItem(0);
      v77 = (char *)v34 + *(int *)(v33 + 24);
      v78 = type metadata accessor for FormatInspectionItem.Value(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 56))(v77, 1, 1, v78);
      *v34 = v180;
      v34[1] = v71;
LABEL_39:
      v34[2] = 0;
      v34[3] = 0;
      goto LABEL_7;
    }
    if ((swift_dynamicCast() & 1) != 0)
    {

      v21 = type metadata accessor for FormatInspectionItem(0);
      v22 = v182;
      v23 = (uint64_t)v182 + *(int *)(v21 + 24);
      *(_OWORD *)v23 = v183[0];
      v24 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_10;
    }
    if (swift_dynamicCast())
      __asm { BR              X10 }
    if ((swift_dynamicCast() & 1) != 0)
    {
      sub_1BA7439D4(v183, (uint64_t)v188);
      sub_1BA7439D4(v188, (uint64_t)&v189);
      v79 = (char *)&loc_1BAB030E0 + 4 * word_1BB89D904[sub_1BAB05900((uint64_t)&v189)];
      __asm { BR              X10 }
    }
    if ((swift_dynamicCast() & 1) != 0)
    {

      v80 = *(_QWORD *)&v183[0];
      v81 = swift_allocObject();
      *(_QWORD *)(v81 + 16) = v80;
      v82 = v179;
      *(_QWORD *)v179 = sub_1BAB06204;
      *(_QWORD *)(v82 + 8) = v81;
      v83 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
      v84 = v182;
      v85 = v181;
      *v182 = v180;
      v84[1] = v85;
      v86 = type metadata accessor for FormatInspectionItem(0);
      v84[2] = 0;
      v84[3] = 0;
      sub_1BA5193C4(v82, (uint64_t)v84 + *(int *)(v86 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v38 = (char *)v84 + *(int *)(v86 + 28);
      goto LABEL_12;
    }
    if (swift_dynamicCast())
    {

      v179 = v183[0];
      v87 = v183[1];
      v89 = *((_QWORD *)&v184 + 1);
      v88 = v184;
      v90 = v185;
      v33 = type metadata accessor for FormatInspectionItem(0);
      v34 = v182;
      v91 = (char *)v182 + *(int *)(v33 + 24);
      *(_OWORD *)v91 = v179;
      *((_OWORD *)v91 + 1) = v87;
      *((_OWORD *)v91 + 2) = __PAIR128__(v89, v88);
      v91[48] = v90;
      v92 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_46:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v92 - 8) + 56))(v91, 0, 1, v92);
      v93 = v181;
      *v34 = v180;
      v34[1] = v93;
      goto LABEL_39;
    }
    if (swift_dynamicCast())
    {

      v21 = type metadata accessor for FormatInspectionItem(0);
      v22 = v182;
      v23 = (uint64_t)v182 + *(int *)(v21 + 24);
      v94 = v187[0];
      *(_OWORD *)(v23 + 64) = v186;
      *(_OWORD *)(v23 + 80) = v94;
      *(_OWORD *)(v23 + 89) = *(_OWORD *)((char *)v187 + 9);
      v95 = v183[1];
      *(_OWORD *)v23 = v183[0];
      *(_OWORD *)(v23 + 16) = v95;
      v96 = v185;
      *(_OWORD *)(v23 + 32) = v184;
      *(_OWORD *)(v23 + 48) = v96;
      v24 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_10;
    }
    if (swift_dynamicCast())
    {

      v97 = type metadata accessor for FormatInspectionItem(0);
      v98 = v182;
      v99 = (__int128 *)((char *)v182 + *(int *)(v97 + 24));
      sub_1BA5193C4((uint64_t)v12, (uint64_t)v99, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
      v100 = type metadata accessor for FormatInspectionItem.Value(0);
LABEL_55:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(__int128 *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 56))(v99, 0, 1, v100);
      v104 = v181;
      *v98 = v180;
      v98[1] = v104;
      v98[2] = 0;
      v98[3] = 0;
      v38 = (char *)v98 + *(int *)(v97 + 28);
      goto LABEL_12;
    }
    *(_QWORD *)&v179 = a3;
    if (swift_dynamicCast())
    {

      v21 = type metadata accessor for FormatInspectionItem(0);
      v22 = v182;
      v23 = (uint64_t)v182 + *(int *)(v21 + 24);
      v101 = v183[1];
      *(_OWORD *)v23 = v183[0];
      *(_OWORD *)(v23 + 16) = v101;
      v24 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_10;
    }
    if (swift_dynamicCast())
    {
LABEL_54:

      v103 = *((_QWORD *)&v183[0] + 1);
      v102 = *(_QWORD *)&v183[0];
      v97 = type metadata accessor for FormatInspectionItem(0);
      v98 = v182;
      v99 = (__int128 *)((char *)v182 + *(int *)(v97 + 24));
      *v99 = __PAIR128__(v103, v102);
      v100 = type metadata accessor for FormatInspectionItem.Value(0);
      goto LABEL_55;
    }
    if (swift_dynamicCast())
    {
      v106 = v189;
      v105 = v190;
      *(_QWORD *)&v183[0] = 40;
      *((_QWORD *)&v183[0] + 1) = 0xE100000000000000;
      sub_1BB872FDC();
      sub_1BB872AFC(v107);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v108);
      sub_1BB872FDC();
      sub_1BB872AFC(v109);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v110);
      v111 = v183[0];
      v112 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v113 = swift_allocObject();
      *(_OWORD *)(v113 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v112);
      sub_1BA8C88C8(0);
      v115 = *(_QWORD *)(v114 - 8);
      v116 = *(_QWORD *)(v115 + 72);
      v117 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
      v118 = swift_allocObject();
      *(_OWORD *)(v118 + 16) = xmmword_1BB87A390;
      v119 = (_QWORD *)(v118 + v117);
      sub_1BAAF3A18(88, 0xE100000000000000, v106, 0, v119);
      v120 = type metadata accessor for FormatInspectionItem(0);
      v121 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v120 - 8) + 56);
      v121(v119, 0, 1, v120);
      v122 = (_QWORD *)((char *)v119 + v116);
      sub_1BAAF3A18(89, 0xE100000000000000, v105, 0, v122);
      v121(v122, 0, 1, v120);
      sub_1BAF89090(0x746E696F50, 0xE500000000000000, 0, 0, v118, v183);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v113 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v113 + 64) = &off_1E72D2F60;
      v123 = swift_allocObject();
      *(_QWORD *)(v113 + 32) = v123;
      v124 = v183[1];
      *(_OWORD *)(v123 + 16) = v183[0];
      *(_OWORD *)(v123 + 32) = v124;
      *(_QWORD *)(v123 + 48) = v184;
      v125 = sub_1BA9747FC(v113);
      swift_setDeallocating();
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v126 = sub_1BB6DF010(v125);
      swift_bridgeObjectRelease();
      v127 = v181;
      v128 = v182;
      v129 = v180;
      v130 = (uint64_t)v126;
      v132 = *((_QWORD *)&v111 + 1);
      v131 = v111;
    }
    else
    {
      if (!swift_dynamicCast())
      {
        if (!swift_dynamicCast())
        {
          if (swift_dynamicCast())
          {

            v21 = type metadata accessor for FormatInspectionItem(0);
            v22 = v182;
            v23 = (uint64_t)v182 + *(int *)(v21 + 24);
            v24 = type metadata accessor for FormatInspectionItem.Value(0);
            goto LABEL_10;
          }
          type metadata accessor for FormatCommandAction();
          if (!swift_dynamicCast())
          {
            if (swift_dynamicCast())
            {

              v156 = v183[0];
              v179 = *(__int128 *)((char *)v183 + 8);
              v157 = *((_QWORD *)&v183[1] + 1);
              v158 = v184;
              v33 = type metadata accessor for FormatInspectionItem(0);
              v34 = v182;
              v91 = (char *)v182 + *(int *)(v33 + 24);
              *v91 = v156;
              *(_OWORD *)(v91 + 8) = v179;
              *((_QWORD *)v91 + 3) = v157;
              *((_QWORD *)v91 + 4) = v158;
              v92 = type metadata accessor for FormatInspectionItem.Value(0);
              goto LABEL_46;
            }
            if (swift_dynamicCast())
            {

              v21 = type metadata accessor for FormatInspectionItem(0);
              v22 = v182;
              v23 = (uint64_t)v182 + *(int *)(v21 + 24);
              sub_1BA5193C4(v178, v23, type metadata accessor for FormatPropertyDefinition);
              v24 = type metadata accessor for FormatInspectionItem.Value(0);
              goto LABEL_10;
            }
            if (swift_dynamicCast())
            {

              v21 = type metadata accessor for FormatInspectionItem(0);
              v22 = v182;
              v23 = (uint64_t)v182 + *(int *)(v21 + 24);
              (*(void (**)(uint64_t, char *, uint64_t))(v174 + 32))(v23, v176, v177);
              v24 = type metadata accessor for FormatInspectionItem.Value(0);
              goto LABEL_10;
            }
            if (swift_dynamicCast())
            {

              v159 = *(_QWORD *)&v183[0];
              if (v186 == 1)
              {
                v160 = v185;
                v161 = v184;
                v179 = v183[1];
                v162 = *((_QWORD *)&v183[0] + 1);
                v163 = type metadata accessor for FormatInspectionItem(0);
                v164 = (char *)v182 + *(int *)(v163 + 24);
                *(_QWORD *)v164 = v159;
                *((_QWORD *)v164 + 1) = v162;
                *((_OWORD *)v164 + 1) = v179;
                *((_OWORD *)v164 + 2) = v161;
                *((_OWORD *)v164 + 3) = v160;
              }
              else
              {
                v163 = type metadata accessor for FormatInspectionItem(0);
                v164 = (char *)v182 + *(int *)(v163 + 24);
                *(_QWORD *)v164 = v159;
              }
              v165 = type metadata accessor for FormatInspectionItem.Value(0);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v164, 0, 1, v165);
              v166 = v182;
              v167 = v181;
              *v182 = v180;
              v166[1] = v167;
              v166[2] = 0;
              v166[3] = 0;
              v38 = (char *)v166 + *(int *)(v163 + 28);
              goto LABEL_12;
            }
            sub_1BA4CDF6C(0, &qword_1EF2AFEE0, (uint64_t (*)(void))sub_1BA7399D0, (uint64_t)&type metadata for FormatLayout, MEMORY[0x1E0DB62B8]);
            if ((swift_dynamicCast() & 1) == 0)
            {
              if (swift_dynamicCast())
              {

                v179 = v183[0];
                v169 = *((_QWORD *)&v183[1] + 1);
                v168 = *(_QWORD *)&v183[1];
                v97 = type metadata accessor for FormatInspectionItem(0);
                v98 = v182;
                v99 = (__int128 *)((char *)v182 + *(int *)(v97 + 24));
                *v99 = v179;
                v99[1] = __PAIR128__(v169, v168);
                v100 = type metadata accessor for FormatInspectionItem.Value(0);
                goto LABEL_55;
              }
              type metadata accessor for DebugFormatDebuggerCallStackEntry();
              if (!swift_dynamicCast())
              {
                v171 = v191;
                v172 = v191;

                v42 = type metadata accessor for FormatInspectionItem(0);
                v22 = v182;
                v43 = (uint64_t *)((char *)v182 + *(int *)(v42 + 24));
                *v43 = v171;
                v44 = type metadata accessor for FormatInspectionItem.Value(0);
                goto LABEL_16;
              }
            }
          }

          v170 = *(_QWORD *)&v183[0];
          v21 = type metadata accessor for FormatInspectionItem(0);
          v22 = v182;
          v23 = (uint64_t)v182 + *(int *)(v21 + 24);
          *(_QWORD *)v23 = v170;
          v24 = type metadata accessor for FormatInspectionItem.Value(0);
          goto LABEL_10;
        }
        goto LABEL_54;
      }
      v133 = v189;
      v134 = v190;
      *(_QWORD *)&v183[0] = 40;
      *((_QWORD *)&v183[0] + 1) = 0xE100000000000000;
      v135 = swift_bridgeObjectRetain();
      sub_1BB106F08(v135);
      sub_1BB872AFC(v136);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v137);
      v138 = swift_bridgeObjectRetain();
      sub_1BB106F08(v138);
      sub_1BB872AFC(v139);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v140);
      v177 = *((_QWORD *)&v183[0] + 1);
      v178 = *(_QWORD *)&v183[0];
      v141 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA67D978(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v142 = swift_allocObject();
      *(_OWORD *)(v142 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v141);
      sub_1BA8C88C8(0);
      v144 = *(_QWORD *)(v143 - 8);
      v145 = *(_QWORD *)(v144 + 72);
      v146 = (*(unsigned __int8 *)(v144 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v144 + 80);
      v147 = swift_allocObject();
      *(_OWORD *)(v147 + 16) = xmmword_1BB87A390;
      v148 = (_QWORD *)(v147 + v146);
      swift_bridgeObjectRetain();
      sub_1BAAF3E48(88, 0xE100000000000000, v133, v148);
      v149 = type metadata accessor for FormatInspectionItem(0);
      v150 = *(void (**)(_QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(v149 - 8) + 56);
      v150(v148, 0, 1, v149);
      v151 = (_QWORD *)((char *)v148 + v145);
      swift_bridgeObjectRetain();
      sub_1BAAF3E48(89, 0xE100000000000000, v134, v151);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v150(v151, 0, 1, v149);
      sub_1BAF89090(0x746E696F50, 0xE500000000000000, 0, 0, v147, v183);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(v142 + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(v142 + 64) = &off_1E72D2F60;
      v152 = swift_allocObject();
      *(_QWORD *)(v142 + 32) = v152;
      v153 = v183[1];
      *(_OWORD *)(v152 + 16) = v183[0];
      *(_OWORD *)(v152 + 32) = v153;
      *(_QWORD *)(v152 + 48) = v184;
      v154 = sub_1BA9747FC(v142);
      swift_setDeallocating();
      sub_1BA4D9CE8(0, (unint64_t *)&qword_1EF2A9760);
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v155 = sub_1BB6DF010(v154);
      swift_bridgeObjectRelease();
      v127 = v181;
      v128 = v182;
      v129 = v180;
      v130 = (uint64_t)v155;
      v132 = v177;
      v131 = v178;
    }
    sub_1BAAF3C48(v129, v127, v130, v131, v132, v128);

    goto LABEL_13;
  }
  v46 = v183[0];
  v47 = *(_QWORD *)&v183[1];
  v48 = sub_1BB6DED58(*(uint64_t *)&v183[0]);
  v189 = MEMORY[0x1E0DEE9D8];
  v49 = *(_QWORD *)(v48 + 16);
  if (v49)
  {
    swift_bridgeObjectRetain();
    v50 = 64;
    v51 = v182;
    do
    {
      v52 = swift_bridgeObjectRetain();
      sub_1BB383BA8(v52);
      v50 += 40;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease_n();
    v53 = v189;
  }
  else
  {
    swift_bridgeObjectRelease();
    v53 = MEMORY[0x1E0DEE9D8];
    v51 = v182;
  }
  v60 = *(_QWORD *)(v53 + 16);

  swift_bridgeObjectRelease();
  if (v60)
  {
    v61 = type metadata accessor for FormatInspectionItem(0);
    v62 = (char *)v51 + *(int *)(v61 + 24);
    *(_OWORD *)v62 = v46;
    *((_QWORD *)v62 + 2) = v47;
    v63 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 56))(v62, 0, 1, v63);
    v64 = v181;
    *v51 = v180;
    v51[1] = v64;
    v51[2] = *((_QWORD *)&v46 + 1);
    v51[3] = v47;
    v65 = (char *)v51 + *(int *)(v61 + 28);
    *(_QWORD *)v65 = 0;
    *((_QWORD *)v65 + 1) = 0;
    v65[16] = -1;
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v66 = type metadata accessor for FormatInspectionItem(0);
  v67 = (char *)v51 + *(int *)(v66 + 24);
  v68 = type metadata accessor for FormatInspectionItem.Value(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v67, 1, 1, v68);
  v69 = v181;
  *v51 = v180;
  v51[1] = v69;
  v51[2] = 0;
  v51[3] = 0;
  v38 = (char *)v51 + *(int *)(v66 + 28);
LABEL_12:
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v38[16] = -1;
LABEL_13:

}

uint64_t sub_1BAB046B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD v32[5];
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_1BAB0582C(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (_QWORD *)((char *)&v32[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v36 = a3;
  if (a3)
  {
    sub_1BAB05BC0(0);
    v12 = v11;
    sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
    swift_bridgeObjectRetain();
    if (swift_dynamicCast())
    {
      swift_bridgeObjectRelease();
      v13 = v33;
      v14 = type metadata accessor for FormatInspectionItem(0);
      v15 = (_QWORD *)((char *)a4 + *(int *)(v14 + 24));
      *v15 = v13;
      v16 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
      *a4 = a1;
      a4[1] = a2;
      a4[2] = 0;
      a4[3] = 0;
      v17 = (char *)a4 + *(int *)(v14 + 28);
      *(_QWORD *)v17 = 0;
      *((_QWORD *)v17 + 1) = 0;
      v17[16] = -1;
    }
    else
    {
      v34 = v12;
      v35 = sub_1BA4A2870(&qword_1EF2AFF00, (uint64_t (*)(uint64_t))sub_1BAB05BC0, MEMORY[0x1E0DEAF68]);
      *(_QWORD *)&v33 = v36;
      sub_1BA4CECCC(&v33, (uint64_t)v32);
      v23 = *__swift_project_boxed_opaque_existential_1(v32, v32[3]);
      v24 = type metadata accessor for SportsScoreDataVisualization();
      swift_bridgeObjectRetain();
      v25 = MEMORY[0x1BCCE36DC](v23, v24);
      v27 = v26;
      swift_bridgeObjectRelease();
      *v10 = v25;
      v10[1] = v27;
      v28 = type metadata accessor for FormatInspectionItem.Value(0);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56))(v10, 0, 1, v28);
      *a4 = a1;
      a4[1] = a2;
      v29 = type metadata accessor for FormatInspectionItem(0);
      a4[2] = 0;
      a4[3] = 0;
      sub_1BA5193C4((uint64_t)v10, (uint64_t)a4 + *(int *)(v29 + 24), (uint64_t (*)(_QWORD))sub_1BAB0582C);
      v30 = (char *)a4 + *(int *)(v29 + 28);
      *(_QWORD *)v30 = 0;
      *((_QWORD *)v30 + 1) = 0;
      v30[16] = -1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v32);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v18 = type metadata accessor for FormatInspectionItem(0);
    v19 = (char *)a4 + *(int *)(v18 + 24);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
    *a4 = a1;
    a4[1] = a2;
    a4[2] = 0;
    a4[3] = 0;
    v22 = (char *)a4 + *(int *)(v18 + 28);
    *(_QWORD *)v22 = 0;
    *((_QWORD *)v22 + 1) = 0;
    v22[16] = -1;
  }
  return result;
}

uint64_t FormatBorder.edges.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBorder.edges.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatBorder.edges.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBorder.color.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

uint64_t FormatBorder.width.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  return swift_retain();
}

void FormatBorder.inset.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 24);
}

_BYTE *FormatBorder.inset.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = *result;
  return result;
}

uint64_t (*FormatBorder.inset.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatBorder.lineCap.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

_BYTE *FormatBorder.lineCap.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = *result;
  return result;
}

uint64_t (*FormatBorder.lineCap.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBorder.linePattern.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatBorder.linePattern.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatBorder.linePattern.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatBorder.init(edges:color:width:inset:lineCap:linePattern:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, char *a4@<X3>, char *a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  v7 = *a2;
  v8 = *a3;
  v9 = *a4;
  v10 = *a5;
  *(_QWORD *)a7 = result;
  *(_QWORD *)(a7 + 8) = v7;
  *(_QWORD *)(a7 + 16) = v8;
  *(_BYTE *)(a7 + 24) = v9;
  *(_BYTE *)(a7 + 25) = v10;
  *(_QWORD *)(a7 + 32) = a6;
  return result;
}

uint64_t sub_1BAB04A7C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  int v4;
  char v5;
  char v6;

  v1 = *v0;
  if (*(_QWORD *)(*v0 + 16) != 1)
    return 0;
  v2 = v0[4];
  result = sub_1BA580CE4(v1);
  if ((v5 & 1) != 0)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  if (*(_DWORD *)(v1 + 36) != v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (result == 1 << *(_BYTE *)(v1 + 32))
    return 0;
  sub_1BA9C01C4(result, v4, v1, &v6);
  result = 0;
  if (!*(_QWORD *)(v2 + 16))
    return v6 == 4;
  return result;
}

uint64_t FormatBorderInset.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x656C6464696DLL;
  if (*v0 != 1)
    v1 = 0x72657474756FLL;
  if (*v0)
    return v1;
  else
    return 0x72656E6E69;
}

uint64_t sub_1BAB04B64(char *a1, unsigned __int8 *a2)
{
  return sub_1BB7FFB9C(*a1, *a2);
}

uint64_t sub_1BAB04B70()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB04C04()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB04C74()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB04D04(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0x656C6464696DLL;
  if (v2 != 1)
    v4 = 0x72657474756FLL;
  v5 = v2 == 0;
  if (*v1)
    v6 = v4;
  else
    v6 = 0x72656E6E69;
  if (!v5)
    v3 = 0xE600000000000000;
  *a1 = v6;
  a1[1] = v3;
}

BOOL _s8NewsFeed12FormatBorderV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = *(unsigned __int8 *)(a1 + 25);
  v7 = *(_QWORD *)a2;
  v8 = *(unsigned __int8 *)(a2 + 24);
  v28 = *(unsigned __int8 *)(a2 + 25);
  v26 = *(_QWORD *)(a2 + 32);
  v27 = *(_QWORD *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9 = sub_1BA617A54(v3, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
    return 0;
  v29 = v2;
  static FormatColor.== infix(_:_:)((uint64_t)&v29);
  if ((v10 & 1) == 0)
    return 0;
  v29 = v4;
  static FormatFloat.== infix(_:_:)((uint64_t)&v29);
  if ((v11 & 1) == 0)
    return 0;
  v12 = 0x656C6464696DLL;
  if (v5 != 1)
    v12 = 0x72657474756FLL;
  if (v5)
    v13 = v12;
  else
    v13 = 0x72656E6E69;
  if (v5)
    v14 = 0xE600000000000000;
  else
    v14 = 0xE500000000000000;
  v15 = 0x656C6464696DLL;
  if (v8 != 1)
    v15 = 0x72657474756FLL;
  if (v8)
    v16 = v15;
  else
    v16 = 0x72656E6E69;
  if (v8)
    v17 = 0xE600000000000000;
  else
    v17 = 0xE500000000000000;
  if (v13 == v16 && v14 == v17)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v18 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v18 & 1) == 0)
      return 0;
  }
  v19 = 1953789282;
  if (v6)
  {
    v20 = v28;
    if (v6 == 1)
    {
      v21 = 0xE500000000000000;
      v22 = 0x646E756F72;
      if (!v28)
        goto LABEL_32;
LABEL_29:
      if (v20 == 1)
      {
        v23 = 0xE500000000000000;
        v19 = 0x646E756F72;
      }
      else
      {
        v23 = 0xE600000000000000;
        v19 = 0x657261757173;
      }
      goto LABEL_34;
    }
    v21 = 0xE600000000000000;
    v22 = 0x657261757173;
    if (v28)
      goto LABEL_29;
  }
  else
  {
    v21 = 0xE400000000000000;
    v22 = 1953789282;
    v20 = v28;
    if (v28)
      goto LABEL_29;
  }
LABEL_32:
  v23 = 0xE400000000000000;
LABEL_34:
  if (v22 == v19 && v21 == v23)
  {
    swift_bridgeObjectRelease_n();
    return sub_1BA892178(v27, v26);
  }
  v24 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v24 & 1) != 0)
    return sub_1BA892178(v27, v26);
  return 0;
}

unint64_t sub_1BAB04FD8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB04FFC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB04FFC()
{
  unint64_t result;

  result = qword_1EF2AFEA0;
  if (!qword_1EF2AFEA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorder, &type metadata for FormatBorder);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEA0);
  }
  return result;
}

uint64_t sub_1BAB05040(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA8365A4, (uint64_t (*)(void))sub_1BA8365E8, (uint64_t (*)(void))sub_1BAB0505C);
}

unint64_t sub_1BAB0505C()
{
  unint64_t result;

  result = qword_1EF2AFEA8;
  if (!qword_1EF2AFEA8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorder, &type metadata for FormatBorder);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEA8);
  }
  return result;
}

unint64_t sub_1BAB050A4()
{
  unint64_t result;

  result = qword_1EF2AFEB0;
  if (!qword_1EF2AFEB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderInset, &type metadata for FormatBorderInset);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEB0);
  }
  return result;
}

unint64_t sub_1BAB050E8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAB05114();
  result = sub_1BA50D618();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB05114()
{
  unint64_t result;

  result = qword_1EF2AFEB8;
  if (!qword_1EF2AFEB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderInset, &type metadata for FormatBorderInset);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEB8);
  }
  return result;
}

unint64_t sub_1BAB05158(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB0517C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB0517C()
{
  unint64_t result;

  result = qword_1EF2AFEC0;
  if (!qword_1EF2AFEC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBorderInset, &type metadata for FormatBorderInset);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEC0);
  }
  return result;
}

uint64_t sub_1BAB051C0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA61BC58, (uint64_t (*)(void))sub_1BA617E20, (uint64_t (*)(void))sub_1BAB050A4);
}

uint64_t sub_1BAB051DC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB051E8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1BAB05228@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 24);
  return result;
}

_BYTE *sub_1BAB05234(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 24) = *result;
  return result;
}

uint64_t sub_1BAB05240@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 25);
  return result;
}

_BYTE *sub_1BAB0524C(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 25) = *result;
  return result;
}

uint64_t sub_1BAB05258@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB05264(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t assignWithCopy for FormatBorder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatBorder(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatBorder()
{
  return &type metadata for FormatBorder;
}

ValueMetadata *type metadata accessor for FormatBorderInset()
{
  return &type metadata for FormatBorderInset;
}

_QWORD *sub_1BAB053DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;

  v1 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v3 = a1[3];
  v20 = a1[4];
  sub_1BA8EDAAC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB898AA0;
  v21 = v10;
  v11 = (_QWORD *)(v10 + v9);
  if (v1)
    swift_bridgeObjectRetain();
  sub_1BAAFB098(0x7365676445, 0xE500000000000000, v1, (unint64_t *)&qword_1ED3B96A8, (uint64_t (*)(void))sub_1BA61CDBC, (uint64_t)&type metadata for FormatBorderEdge, (uint64_t (*)(void))sub_1BAB05848, v11);
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v11, 0, 1, v12);
  if (v1)
  {
    swift_retain();
    sub_1BAAF7724(0x726F6C6F43, 0xE500000000000000, v2, (_QWORD *)((char *)v11 + v8));
    v13((_QWORD *)((char *)v11 + v8), 0, 1, v12);
    swift_retain();
  }
  else
  {
    v4 = 0xF000000000000007;
    sub_1BAAF7724(0x726F6C6F43, 0xE500000000000000, 0xF000000000000007, (_QWORD *)((char *)v11 + v8));
    v13((_QWORD *)((char *)v11 + v8), 0, 1, v12);
  }
  sub_1BAAFB354(0x6874646957, 0xE500000000000000, v4, (_QWORD *)((char *)v11 + 2 * v8));
  v13((_QWORD *)((char *)v11 + 2 * v8), 0, 1, v12);
  if (v1)
    v14 = v3;
  else
    v14 = 3;
  sub_1BAAFB5DC(0x7465736E49, 0xE500000000000000, v14, (_QWORD *)((char *)v11 + 3 * v8));
  v13((_QWORD *)((char *)v11 + 3 * v8), 0, 1, v12);
  if (v1)
  {
    sub_1BAAFB5DC(0x70614320656E694CLL, 0xE800000000000000, BYTE1(v3), (_QWORD *)((char *)v11 + 4 * v8));
    v13((_QWORD *)((char *)v11 + 4 * v8), 0, 1, v12);
    v15 = v20;
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BAAFB5DC(0x70614320656E694CLL, 0xE800000000000000, 3u, (_QWORD *)((char *)v11 + 4 * v8));
    v13((_QWORD *)((char *)v11 + 4 * v8), 0, 1, v12);
    v15 = 0;
  }
  sub_1BAAFCF48(0x74615020656E694CLL, 0xEC0000006E726574, v15, &qword_1ED3B9608, MEMORY[0x1E0DEB188], &qword_1EF2AFEC8, (_QWORD *)((char *)v11 + 5 * v8));
  v13((_QWORD *)((char *)v11 + 5 * v8), 0, 1, v12);
  sub_1BAF89090(0x726564726F42, 0xE600000000000000, 0, 0, v21, v22);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v16;
  *(_QWORD *)(v16 + 48) = v23;
  v17 = v22[1];
  *(_OWORD *)(v16 + 16) = v22[0];
  *(_OWORD *)(v16 + 32) = v17;
  v18 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA67D978(0, &qword_1EF2ABC80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  swift_arrayDestroy();
  return v18;
}

uint64_t sub_1BAB057F8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BAB0582C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BAB05848()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AFED0;
  if (!qword_1EF2AFED0)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B96A8, (uint64_t (*)(void))sub_1BA61CDBC, (uint64_t)&type metadata for FormatBorderEdge, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AFED0);
  }
  return result;
}

unint64_t sub_1BAB058B0()
{
  unint64_t result;

  result = qword_1EF2AFED8;
  if (!qword_1EF2AFED8)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEF090], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1EF2AFED8);
  }
  return result;
}

uint64_t sub_1BAB058F8(void *a1)
{
  return sub_1BB079CA0(a1);
}

uint64_t sub_1BAB05900(uint64_t a1)
{
  return *(_QWORD *)(a1 + 104) >> 62;
}

uint64_t sub_1BAB0590C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAB0593C(uint64_t result)
{
  *(_QWORD *)(result + 104) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1BAB0594C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;

  v16 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v15 = *(_OWORD *)(a1 + 72);
  v13 = *(_OWORD *)(a1 + 104);
  v14 = *(_OWORD *)(a1 + 88);
  v12 = *(_OWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 136);
  v10 = *(_BYTE *)(a1 + 144);
  swift_retain();
  sub_1BA4B7794(v16, v2, v3, v4, v5, v6, v7, v8, v15, BYTE8(v15), v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v9, v10);
  return a1;
}

uint64_t sub_1BAB05A20(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(_QWORD *)(a1 + 48);
  v5 = *(_QWORD *)(a1 + 56);
  v6 = *(_QWORD *)(a1 + 64);
  v7 = *(_QWORD *)(a1 + 72);
  v8 = *(_BYTE *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 96);
  v20 = *(_QWORD *)(a1 + 88);
  v17 = *(_QWORD *)(a1 + 112);
  v18 = *(_QWORD *)(a1 + 104);
  v15 = *(_QWORD *)(a1 + 128);
  v16 = *(_QWORD *)(a1 + 120);
  v13 = *(_QWORD *)(a1 + 144);
  v14 = *(_QWORD *)(a1 + 136);
  v9 = *(_BYTE *)(a1 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAA8C5C0(v12, v11, v2, v3, v4, v5, v6, v7, v8);
  sub_1BAA8C5C0(v20, v19, v18, v17, v16, v15, v14, v13, v9);
  return a1;
}

unint64_t sub_1BAB05B04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AFEE8;
  if (!qword_1EF2AFEE8)
  {
    sub_1BA4CDF6C(255, (unint64_t *)&qword_1ED3B4010, (uint64_t (*)(void))sub_1BA83708C, (uint64_t)&type metadata for FormatFloat, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatEquation);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEquation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEE8);
  }
  return result;
}

unint64_t sub_1BAB05B6C()
{
  unint64_t result;

  result = qword_1EF2AFEF0;
  if (!qword_1EF2AFEF0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationEventStatus, &type metadata for SportsDataVisualizationEventStatus);
    atomic_store(result, (unint64_t *)&qword_1EF2AFEF0);
  }
  return result;
}

uint64_t sub_1BAB05BB0(uint64_t a1, unint64_t a2)
{
  if (a2 != 4)
    return sub_1BA98D234(a1, a2);
  return a1;
}

void sub_1BAB05BC0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AFEF8, (uint64_t (*)(uint64_t))type metadata accessor for SportsScoreDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

uint64_t sub_1BAB05BDC(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for FormatInspectionFeedItem(a2, a1);
  return a2;
}

uint64_t sub_1BAB05C18(uint64_t a1)
{
  destroy for FormatInspectionFeedItem(a1);
  return a1;
}

uint64_t sub_1BAB05C50()
{
  uint64_t result;

  result = qword_1EF2AFF10;
  if (!qword_1EF2AFF10)
    type metadata accessor for FormatRange();
  return result;
}

uint64_t sub_1BAB05CC4(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF68], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAB05D0C()
{
  unint64_t result;

  result = qword_1EF2AFF28;
  if (!qword_1EF2AFF28)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBoolean, &type metadata for FormatBoolean);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF28);
  }
  return result;
}

uint64_t sub_1BAB05D50(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0)
    return swift_release();
  return result;
}

unint64_t sub_1BAB05D68()
{
  unint64_t result;

  result = qword_1EF2AFF38;
  if (!qword_1EF2AFF38)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelector, &type metadata for FormatSelector);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF38);
  }
  return result;
}

uint64_t sub_1BAB05DAC(uint64_t a1)
{
  sub_1BAB05DE4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48));
  return a1;
}

uint64_t sub_1BAB05DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;

  if (a7)
  {
    sub_1BA6E0CBC(a4, a5);
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BAB05E24(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AFF58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC548], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

unint64_t sub_1BAB05E44()
{
  unint64_t result;

  result = qword_1EF2AFF60;
  if (!qword_1EF2AFF60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF60);
  }
  return result;
}

unint64_t sub_1BAB05E88()
{
  unint64_t result;

  result = qword_1EF2AFF68;
  if (!qword_1EF2AFF68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatImageResize, &type metadata for FormatImageResize);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF68);
  }
  return result;
}

unint64_t sub_1BAB05ECC()
{
  unint64_t result;

  result = qword_1EF2AFF70;
  if (!qword_1EF2AFF70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatUnderlineStyle, &type metadata for FormatUnderlineStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF70);
  }
  return result;
}

unint64_t sub_1BAB05F10()
{
  unint64_t result;

  result = qword_1EF2AFF78;
  if (!qword_1EF2AFF78)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextLineBreakMode, &type metadata for FormatTextLineBreakMode);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF78);
  }
  return result;
}

unint64_t sub_1BAB05F54()
{
  unint64_t result;

  result = qword_1EF2AFF80;
  if (!qword_1EF2AFF80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAlignment, &type metadata for FormatTextAlignment);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF80);
  }
  return result;
}

uint64_t sub_1BAB05F98(uint64_t a1)
{
  if ((*(_QWORD *)(a1 + 104) >> 1) > 0x80000000)
    return -(*(_QWORD *)(a1 + 104) >> 1);
  else
    return 0;
}

unint64_t sub_1BAB05FB0()
{
  unint64_t result;

  result = qword_1EF2AFF88;
  if (!qword_1EF2AFF88)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFontScalingStyle, &type metadata for FormatFontScalingStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF88);
  }
  return result;
}

unint64_t sub_1BAB05FF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AFF90;
  if (!qword_1EF2AFF90)
  {
    sub_1BA4CDF6C(255, &qword_1ED3B96A0, (uint64_t (*)(void))sub_1BA834274, (uint64_t)&type metadata for FormatFontTrait, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEB3E8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AFF90);
  }
  return result;
}

uint64_t sub_1BAB0605C()
{
  return sub_1BA4A2870(&qword_1EF2AFF98, (uint64_t (*)(uint64_t))type metadata accessor for CAMediaTimingFillMode, (uint64_t)&protocol conformance descriptor for CAMediaTimingFillMode);
}

unint64_t sub_1BAB06078()
{
  unint64_t result;

  result = qword_1EF2AFFA0;
  if (!qword_1EF2AFFA0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueCover.Kind, &type metadata for IssueCover.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2AFFA0);
  }
  return result;
}

unint64_t sub_1BAB060BC()
{
  unint64_t result;

  result = qword_1EF2AFFB0;
  if (!qword_1EF2AFFB0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatEdgeInsets, &type metadata for FormatEdgeInsets);
    atomic_store(result, (unint64_t *)&qword_1EF2AFFB0);
  }
  return result;
}

uint64_t sub_1BAB06100()
{
  return swift_deallocObject();
}

void sub_1BAB06110(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AFFC0, (uint64_t (*)(uint64_t))type metadata accessor for UIEdgeInsets, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAB0612C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3B9928, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAB06148(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AFFC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5FD8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAB06164(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2AFFD8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D38], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAB06180(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))sub_1BAB06164);
}

uint64_t sub_1BAB0618C(uint64_t a1)
{
  return sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))sub_1BAB06164);
}

void sub_1BAB06198(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED39ED18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB5D98], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BAB061B4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B0000, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB60A0], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BAB061D0(uint64_t a1, uint64_t a2)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))sub_1BAB061B4);
}

uint64_t sub_1BAB061DC(uint64_t a1)
{
  return sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))sub_1BAB061B4);
}

uint64_t sub_1BAB061E8()
{
  return sub_1BA4A2870(&qword_1EF2B0010, (uint64_t (*)(uint64_t))type metadata accessor for UIContentSizeCategory, (uint64_t)&protocol conformance descriptor for UIContentSizeCategory);
}

uint64_t sub_1BAB06208()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BA972730(*(id *)(v0 + 24));
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_timestamp;
  v2 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB06290()
{
  return type metadata accessor for DebugFormatLogEntry();
}

uint64_t type metadata accessor for DebugFormatLogEntry()
{
  uint64_t result;

  result = qword_1EF2B0058;
  if (!qword_1EF2B0058)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAB062D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86C8B0();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1BAB06364(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t inited;
  void **v17;
  void *v18;
  void *v19;
  double v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;

  v9 = v4 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_timestamp;
  v10 = sub_1BB86C8B0();
  v11 = *(_QWORD *)(v10 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, a1, v10);
  v12 = (_QWORD *)(v4 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_message);
  *v12 = a2;
  v12[1] = a3;
  *(_QWORD *)(v4 + 24) = a4;
  v13 = sub_1BB872A0C();
  v14 = (uint64_t *)(v4 + OBJC_IVAR____TtC8NewsFeed19DebugFormatLogEntry_normalizedMessage);
  *v14 = v13;
  v14[1] = v15;
  sub_1BA847C08();
  inited = swift_initStackObject();
  v17 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v18 = *v17;
  *(_QWORD *)(inited + 32) = *v17;
  v19 = (void *)objc_opt_self();
  v20 = *MEMORY[0x1E0DC1438];
  swift_bridgeObjectRetain();
  sub_1BA972428(a4);
  v21 = v18;
  v22 = objc_msgSend(v19, sel_monospacedSystemFontOfSize_weight_, 14.0, v20);
  v23 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v22;
  v24 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v23;
  *(_QWORD *)(inited + 72) = v24;
  v25 = (void *)objc_opt_self();
  v26 = v24;
  v27 = objc_msgSend(v25, sel_labelColor);
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v27;
  sub_1BA76E82C(inited);
  v28 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v29 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v30 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, v10);
  *(_QWORD *)(v4 + 16) = v31;
  return v4;
}

uint64_t static FormatSelectorValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  _QWORD v19[3];

  if ((sub_1BB872958() & 1) != 0)
  {
    v9 = *(int *)(type metadata accessor for FormatSelectorValue(0, a3, a4, v8) + 36);
    v10 = *(_QWORD *)(a1 + v9);
    v19[1] = *(_QWORD *)(a2 + v9);
    v19[2] = v10;
    v12 = type metadata accessor for FormatSelectorValueSelector(255, a3, a4, v11);
    v13 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v12);
    v14 = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v12);
    v15 = type metadata accessor for FormatCodingEmptyArrayStrategy(0, v12, v13, v14);
    MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingEmptyArrayStrategy<A>, v15);
    v16 = sub_1BB872EE0();
    v19[0] = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>, v12);
    MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF30], v16, v19);
    v17 = static FormatCodingDefault<>.== infix(_:_:)();
  }
  else
  {
    v17 = 0;
  }
  return v17 & 1;
}

uint64_t FormatSelectorValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FormatSelectorValue.selectors.getter(uint64_t a1)
{
  sub_1BA647A38(a1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB06718@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v5;

  v5 = type metadata accessor for FormatSelectorValue(0, *(_QWORD *)(a2 + a1 - 16), *(_QWORD *)(a2 + a1 - 8), a3);
  *a4 = sub_1BA647A38(v5);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB06750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = type metadata accessor for FormatSelectorValue(0, *(_QWORD *)(a4 + a3 - 16), *(_QWORD *)(a4 + a3 - 8), a4);
  v5 = swift_bridgeObjectRetain();
  return FormatSelectorValue.selectors.setter(v5, v4);
}

uint64_t FormatSelectorValue.selectors.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*FormatSelectorValue.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BAB067E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return static FormatSelectorValue.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t FormatSelectorValueSelector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSelectorValueSelector.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t static FormatSelectorValueSelector.== infix(_:_:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  BOOL v7;

  v6 = a2[1];
  v7 = *a1 == *a2 && a1[1] == v6;
  if (!v7 && (sub_1BB874398() & 1) == 0)
    return 0;
  type metadata accessor for FormatSelectorValueSelector(0, a3, a4, v6);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BAB068A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return static FormatSelectorValueSelector.== infix(_:_:)(a1, a2, *(_QWORD *)(a3 + 16), *(_QWORD *)(a3 + 24));
}

uint64_t sub_1BAB068AC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValue<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAB068D8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&protocol conformance descriptor for FormatSelectorValue<A>, (uint64_t)&protocol conformance descriptor for FormatSelectorValue<A>, (uint64_t)&protocol conformance descriptor for FormatSelectorValue<A>);
}

uint64_t sub_1BAB068F4(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSelectorValueSelector<A>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAB06920(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&protocol conformance descriptor for FormatSelectorValueSelector<A>, (uint64_t)&protocol conformance descriptor for FormatSelectorValueSelector<A>, (uint64_t)&protocol conformance descriptor for FormatSelectorValueSelector<A>);
}

uint64_t sub_1BAB06944()
{
  return 16;
}

__n128 sub_1BAB06950(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t *sub_1BAB0695C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_QWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BAB06A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB06A7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t destroy for AnyFormatSelectorValueSelector(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for AnyFormatSelectorValueSelector(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[3];
  a1[3] = v4;
  (**(void (***)(void))(v4 - 8))();
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for AnyFormatSelectorValueSelector(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t assignWithTake for AnyFormatSelectorValueSelector(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyFormatSelectorValueSelector(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyFormatSelectorValueSelector(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyFormatSelectorValueSelector()
{
  return &type metadata for AnyFormatSelectorValueSelector;
}

uint64_t destroy for AnyFormatSelectorValue(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnyFormatSelectorValue(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for AnyFormatSelectorValue(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_0(a1, a2);
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnyFormatSelectorValue(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyFormatSelectorValue(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyFormatSelectorValue(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyFormatSelectorValue()
{
  return &type metadata for AnyFormatSelectorValue;
}

uint64_t sub_1BAB06F5C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB07000()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB070A8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB070F4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB071B8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07210()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB07300()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07384(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB073DC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB074B0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07508()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB075E0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07638()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07710(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0775C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB077FC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07848()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07908(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07960()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07A38(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07A80()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07B28(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07B7C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB07C58()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07D00(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07D58()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07E14(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07E58()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB07EE0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB07F60(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB07FB4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08084(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB080DC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08164(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB081AC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08278(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB082C8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08340(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08390()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0842C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08478()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08530(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08580()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08638(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08680()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0874C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08790()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08814(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0885C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB088F0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08970(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB089B8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08A80(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08AC8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08B94(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08BE8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08C80(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08CD0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08D7C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08DC4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08E74(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB08EC4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB08F44()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB08FBC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09010()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB090DC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09124()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB091C4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09268(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB092BC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09358(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB093A8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0944C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0949C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09530(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09578()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09620(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09670()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB096FC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09750()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0982C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09880()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0990C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09954()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09A0C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09A60()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB09AFC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09B9C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09BE8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09CBC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09D04()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09DD4(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09E20()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09EF4(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB09F38()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB09FE0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A028()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A104(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A15C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A204(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A248()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A314(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A364()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A400(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A44C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A514(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A56C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A610(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A664()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A730(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A780()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A810(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A85C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A8F0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0A938()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0A9D4(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0AA20()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0AAD0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0AB18()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0ABC0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0AC0C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0ACD8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0AD30()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0ADB4(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0ADFC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0AEC0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0AF18()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0AFD8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B024()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B0C8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B10C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B1A8(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B1F0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B2A4(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B2E8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B39C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B3EC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B47C(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B4D0()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B558(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B59C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B620(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B668()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B6D0(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B724()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B7DC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B820()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B8AC(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B8F4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0B994(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0B9E4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0BA94(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0BAE4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0BB58(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0BBA4()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB0BC40(uint64_t a1, char a2)
{
  sub_1BB8745CC();
  __asm { BR              X10 }
}

uint64_t sub_1BAB0BC8C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB0BD38(char a1, uint64_t a2)
{
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    __asm { BR              X10 }
  }
  return 0;
}

uint64_t sub_1BAB0BFCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v16;
  uint64_t v18;
  uint64_t v19;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_1BB8745CC();
  if (a2 == 1 || a2 == 2 || a2 == 3)
  {
    sub_1BB8745D8();
  }
  else
  {
    sub_1BB8745D8();
    sub_1BB8745E4();
    if (a2)
    {
      swift_bridgeObjectRetain();
      sub_1BB872A90();
      sub_1BA6DB13C(a1, a2);
    }
  }
  v6 = sub_1BB874608();
  v7 = -1 << *(_BYTE *)(a3 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  while (1)
  {
    v10 = (uint64_t *)(*(_QWORD *)(a3 + 48) + 16 * v8);
    v11 = *v10;
    v12 = v10[1];
    switch(v12)
    {
      case 1:
        if (a2 == 1)
        {
          v18 = *v10;
          v19 = 1;
          goto LABEL_39;
        }
        goto LABEL_22;
      case 2:
        if (a2 == 2)
        {
          v18 = *v10;
          v19 = 2;
          goto LABEL_39;
        }
        goto LABEL_22;
      case 3:
        if (a2 == 3)
        {
          v18 = *v10;
          v19 = 3;
          goto LABEL_39;
        }
LABEL_22:
        sub_1BA653B2C(a1, a2);
        sub_1BA653B2C(v11, v12);
        sub_1BA6DB13C(v11, v12);
        v13 = a1;
        v14 = a2;
        goto LABEL_23;
    }
    if ((unint64_t)(a2 - 1) < 3)
      goto LABEL_22;
    if (!v12)
    {
      sub_1BA653B2C(a1, a2);
      sub_1BA653B2C(v11, 0);
      sub_1BA653B2C(a1, a2);
      sub_1BA653B2C(v11, 0);
      sub_1BA6DB13C(v11, 0);
      sub_1BA6DB13C(a1, a2);
      sub_1BA6DB13C(v11, 0);
      if (!a2)
        return 1;
      sub_1BA6DB13C(a1, a2);
      v13 = v11;
LABEL_37:
      v14 = 0;
LABEL_23:
      sub_1BA6DB13C(v13, v14);
      goto LABEL_24;
    }
    if (!a2)
    {
      sub_1BA653B2C(a1, 0);
      sub_1BA653B2C(v11, v12);
      sub_1BA6DB13C(v11, v12);
      v13 = a1;
      goto LABEL_37;
    }
    if (v11 == a1 && v12 == a2)
      break;
    v16 = sub_1BB874398();
    sub_1BA653B2C(a1, a2);
    sub_1BA653B2C(v11, v12);
    sub_1BA6DB13C(v11, v12);
    sub_1BA6DB13C(a1, a2);
    if ((v16 & 1) != 0)
      return 1;
LABEL_24:
    v8 = (v8 + 1) & v9;
    if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
      return 0;
  }
  sub_1BA653B2C(a1, a2);
  sub_1BA653B2C(a1, a2);
  v18 = a1;
  v19 = a2;
LABEL_39:
  sub_1BA6DB13C(v18, v19);
  sub_1BA6DB13C(a1, a2);
  return 1;
}

uint64_t sub_1BAB0C2EC(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  uint64_t v16;
  unint64_t v17;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_1BB8745CC();
  FormatItemKind.hash(into:)();
  v6 = sub_1BB874608();
  v7 = -1 << *(_BYTE *)(a3 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  while (2)
  {
    v10 = *(_QWORD *)(a3 + 48) + 16 * v8;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    switch(v12)
    {
      case 0uLL:
        if (a2)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 0;
        goto LABEL_47;
      case 1uLL:
        if (a2 != 1)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 1;
        goto LABEL_47;
      case 2uLL:
        if (a2 != 2)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 2;
        goto LABEL_47;
      case 3uLL:
        if (a2 != 3)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 3;
        goto LABEL_47;
      case 4uLL:
        if (a2 != 4)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 4;
        goto LABEL_47;
      case 5uLL:
        if (a2 != 5)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 5;
        goto LABEL_47;
      case 6uLL:
        if (a2 != 6)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 6;
        goto LABEL_47;
      case 7uLL:
        if (a2 != 7)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 7;
        goto LABEL_47;
      case 8uLL:
        if (a2 != 8)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 8;
        goto LABEL_47;
      case 9uLL:
        if (a2 != 9)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 9;
        goto LABEL_47;
      case 0xAuLL:
        if (a2 != 10)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 10;
        goto LABEL_47;
      case 0xBuLL:
        if (a2 != 11)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 11;
        goto LABEL_47;
      case 0xCuLL:
        if (a2 != 12)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 12;
        goto LABEL_47;
      case 0xDuLL:
        if (a2 != 13)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 13;
        goto LABEL_47;
      case 0xEuLL:
        if (a2 != 14)
          goto LABEL_41;
        v16 = *(_QWORD *)v10;
        v17 = 14;
        goto LABEL_47;
      default:
        if (a2 < 0xF)
        {
LABEL_41:
          sub_1BA682148(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
          sub_1BA682148(a1, a2);
          sub_1BA766C18(v11, v12);
          sub_1BA766C18(a1, a2);
LABEL_42:
          v8 = (v8 + 1) & v9;
          if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
            return 0;
          continue;
        }
        if (v11 != a1 || v12 != a2)
        {
          v14 = sub_1BB874398();
          sub_1BA682148(v11, v12);
          sub_1BA682148(a1, a2);
          sub_1BA766C18(v11, v12);
          sub_1BA766C18(a1, a2);
          if ((v14 & 1) != 0)
            return 1;
          goto LABEL_42;
        }
        sub_1BA682148(a1, a2);
        sub_1BA682148(a1, a2);
        v16 = a1;
        v17 = a2;
LABEL_47:
        sub_1BA766C18(v16, v17);
        sub_1BA766C18(a1, a2);
        return 1;
    }
  }
}

uint64_t sub_1BAB0C60C(char a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BAB0B8AC(*(_QWORD *)(a2 + 40), a1);
    v4 = v3 & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1BAB0C870(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (*(_QWORD *)(a2 + 16)
    && ((sub_1BB8745CC(), (a1 & 1) != 0) ? (v4 = 0x656E696C66666FLL) : (v4 = 0x746C7561666564),
        sub_1BB872A90(),
        swift_bridgeObjectRelease(),
        v5 = sub_1BB874608(),
        v6 = -1 << *(_BYTE *)(a2 + 32),
        v7 = v5 & ~v6,
        ((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    v8 = ~v6;
    while (1)
    {
      v9 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v7) ? 0x656E696C66666FLL : 0x746C7561666564;
      if (v9 == v4)
        break;
      v10 = sub_1BB874398();
      swift_bridgeObjectRelease_n();
      if ((v10 & 1) == 0)
      {
        v7 = (v7 + 1) & v8;
        if (((*(_QWORD *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) != 0)
          continue;
      }
      return v10 & 1;
    }
    swift_bridgeObjectRelease_n();
    v10 = 1;
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

BOOL sub_1BAB0C9B4(int a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  int v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1BB8745CC();
  sub_1BB8745F0();
  v4 = sub_1BB874608();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_DWORD *)(v8 + 4 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_DWORD *)(v8 + 4 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_1BAB0CAA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BOOL8 result;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if (!*(_QWORD *)(a2 + 16))
    return 0;
  sub_1BB8745CC();
  sub_1BB8745D8();
  v4 = sub_1BB874608();
  v5 = -1 << *(_BYTE *)(a2 + 32);
  v6 = v4 & ~v5;
  v7 = a2 + 56;
  if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(v8 + 8 * v6) == a1)
    return 1;
  v10 = ~v5;
  v11 = (v6 + 1) & v10;
  if (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
    return 0;
  do
  {
    v12 = *(_QWORD *)(v8 + 8 * v11);
    result = v12 == a1;
    if (v12 == a1)
      break;
    v11 = (v11 + 1) & v10;
  }
  while (((*(_QWORD *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_1BAB0CB8C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v14;
  uint64_t v16;
  unint64_t v17;

  if (!*(_QWORD *)(a3 + 16))
    return 0;
  sub_1BB8745CC();
  FeedItem.Kind.hash(into:)();
  v6 = sub_1BB874608();
  v7 = -1 << *(_BYTE *)(a3 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
    return 0;
  v9 = ~v7;
  while (2)
  {
    v10 = *(_QWORD *)(a3 + 48) + 16 * v8;
    v11 = *(_QWORD *)v10;
    v12 = *(_QWORD *)(v10 + 8);
    switch(v12)
    {
      case 0uLL:
        if (a2)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 0;
        goto LABEL_51;
      case 1uLL:
        if (a2 != 1)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 1;
        goto LABEL_51;
      case 2uLL:
        if (a2 != 2)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 2;
        goto LABEL_51;
      case 3uLL:
        if (a2 != 3)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 3;
        goto LABEL_51;
      case 4uLL:
        if (a2 != 4)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 4;
        goto LABEL_51;
      case 5uLL:
        if (a2 != 5)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 5;
        goto LABEL_51;
      case 6uLL:
        if (a2 != 6)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 6;
        goto LABEL_51;
      case 7uLL:
        if (a2 != 7)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 7;
        goto LABEL_51;
      case 8uLL:
        if (a2 != 8)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 8;
        goto LABEL_51;
      case 9uLL:
        if (a2 != 9)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 9;
        goto LABEL_51;
      case 0xAuLL:
        if (a2 != 10)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 10;
        goto LABEL_51;
      case 0xBuLL:
        if (a2 != 11)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 11;
        goto LABEL_51;
      case 0xCuLL:
        if (a2 != 12)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 12;
        goto LABEL_51;
      case 0xDuLL:
        if (a2 != 13)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 13;
        goto LABEL_51;
      case 0xEuLL:
        if (a2 != 14)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 14;
        goto LABEL_51;
      case 0xFuLL:
        if (a2 != 15)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 15;
        goto LABEL_51;
      case 0x10uLL:
        if (a2 != 16)
          goto LABEL_45;
        v16 = *(_QWORD *)v10;
        v17 = 16;
        goto LABEL_51;
      default:
        if (a2 < 0x11)
        {
LABEL_45:
          sub_1BA75A650(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
          sub_1BA75A650(a1, a2);
          sub_1BA6E0CBC(v11, v12);
          sub_1BA6E0CBC(a1, a2);
LABEL_46:
          v8 = (v8 + 1) & v9;
          if (((*(_QWORD *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
            return 0;
          continue;
        }
        if (v11 != a1 || v12 != a2)
        {
          v14 = sub_1BB874398();
          sub_1BA75A650(v11, v12);
          sub_1BA75A650(a1, a2);
          sub_1BA6E0CBC(v11, v12);
          sub_1BA6E0CBC(a1, a2);
          if ((v14 & 1) != 0)
            return 1;
          goto LABEL_46;
        }
        sub_1BA75A650(a1, a2);
        sub_1BA75A650(a1, a2);
        v16 = a1;
        v17 = a2;
LABEL_51:
        sub_1BA6E0CBC(v16, v17);
        sub_1BA6E0CBC(a1, a2);
        return 1;
    }
  }
}

uint64_t sub_1BAB0CEDC(char a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v15;
  char v16;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    v4 = sub_1BB874608();
    v5 = -1 << *(_BYTE *)(a2 + 32);
    v6 = v4 & ~v5;
    if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
    {
      v16 = a1;
      v15 = ~v5;
      while (1)
      {
        v7 = 0xD00000000000001CLL;
        if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v6) == 1)
        {
          v8 = 0x80000001BB959F60;
        }
        else
        {
          v7 = 0xD000000000000028;
          v8 = 0x80000001BB959F80;
        }
        if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v6))
          v9 = v7;
        else
          v9 = 0xD000000000000010;
        if (*(_BYTE *)(*(_QWORD *)(a2 + 48) + v6))
          v10 = v8;
        else
          v10 = 0x80000001BB959F40;
        if (v16)
        {
          if (v16 == 1)
            v11 = 0xD00000000000001CLL;
          else
            v11 = 0xD000000000000028;
          if (v16 == 1)
            v12 = 0x80000001BB959F60;
          else
            v12 = 0x80000001BB959F80;
          if (v9 != v11)
            goto LABEL_24;
        }
        else
        {
          v12 = 0x80000001BB959F40;
          if (v9 != 0xD000000000000010)
            goto LABEL_24;
        }
        if (v10 == v12)
        {
          swift_bridgeObjectRelease_n();
          v13 = 1;
          return v13 & 1;
        }
LABEL_24:
        v13 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          v6 = (v6 + 1) & v15;
          if (((*(_QWORD *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
            continue;
        }
        return v13 & 1;
      }
    }
  }
  v13 = 0;
  return v13 & 1;
}

uint64_t sub_1BAB0D0F8(char a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v13;

  if (!*(_QWORD *)(a2 + 16))
    goto LABEL_20;
  v4 = 1685217635;
  sub_1BB8745CC();
  if ((a1 & 1) != 0)
  {
    v4 = 0x746C7561666564;
    v5 = 0xE700000000000000;
  }
  else
  {
    v5 = 0xE400000000000000;
  }
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  v6 = sub_1BB874608();
  v7 = -1 << *(_BYTE *)(a2 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
  {
    v9 = ~v7;
    while (1)
    {
      v10 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v8) ? 0x746C7561666564 : 1685217635;
      v11 = *(_BYTE *)(*(_QWORD *)(a2 + 48) + v8) ? 0xE700000000000000 : 0xE400000000000000;
      if (v10 == v4 && v11 == v5)
        break;
      v13 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        v8 = (v8 + 1) & v9;
        if (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0)
          continue;
      }
      return v13 & 1;
    }
    swift_bridgeObjectRelease_n();
    v13 = 1;
  }
  else
  {
LABEL_20:
    v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_1BAB0D26C(char a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BAB0AAD0(*(_QWORD *)(a2 + 40), a1);
    v4 = v3 & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1BAB0D4D0(char a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BAB08638(*(_QWORD *)(a2 + 40), a1);
    v4 = v3 & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1BAB0D788(unsigned __int8 a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BB8745CC();
    sub_1BB3579B4(a1);
    sub_1BB872A90();
    swift_bridgeObjectRelease();
    v4 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a2 + 32));
    if (((*(_QWORD *)(a2 + 56 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t sub_1BAB0DB00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  BOOL v20;

  if (!*(_QWORD *)(a5 + 16))
    return 0;
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745D8();
  sub_1BB8745D8();
  v10 = sub_1BB874608();
  v11 = -1 << *(_BYTE *)(a5 + 32);
  v12 = v10 & ~v11;
  v13 = a5 + 56;
  if (((*(_QWORD *)(a5 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    return 0;
  v14 = ~v11;
  v15 = *(_QWORD *)(a5 + 48);
  while (1)
  {
    v17 = (_QWORD *)(v15 + 32 * v12);
    v19 = v17[2];
    v18 = v17[3];
    v20 = *v17 == a1 && v17[1] == a2;
    if ((v20 || (sub_1BB874398() & 1) != 0) && v19 == a3 && v18 == a4)
      break;
    v12 = (v12 + 1) & v14;
    if (((*(_QWORD *)(v13 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      return 0;
  }
  return 1;
}

uint64_t sub_1BAB0DC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5;

  if (*(_QWORD *)(a4 + 16))
  {
    sub_1BB8745CC();
    sub_1BB36AEB8();
    v5 = sub_1BB874608() & ~(-1 << *(_BYTE *)(a4 + 32));
    if (((*(_QWORD *)(a4 + 56 + ((v5 >> 3) & 0xFFFFFFFFFFFFF8)) >> v5) & 1) != 0)
      __asm { BR              X9 }
  }
  return 0;
}

uint64_t FeedSubscriptionPaidAccess.init(paidAccessChecker:tag:)@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  char *v14;
  void *v15;
  id v16;
  unint64_t v17;
  id v18;
  unsigned int v19;
  id v20;
  id v21;
  unsigned __int8 v22;
  id v23;
  id v24;
  id v25;
  uint64_t result;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  uint64_t v32;
  id v33;
  __int128 v34;
  __int128 v35;
  _BYTE v36[24];
  uint64_t v37;

  v6 = objc_msgSend(a1, sel_purchaseProvider);
  if (objc_msgSend((id)swift_unknownObjectRetain(), sel_tagType) == (id)3)
  {
    v7 = objc_msgSend(a2, sel_asSection);
    if (!v7
      || (v8 = objc_msgSend(v7, sel_parentID), swift_unknownObjectRelease(), !v8))
    {
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
  }
  else
  {
    v8 = objc_msgSend(a2, sel_identifier);
  }
  v9 = sub_1BB8729A0();
  v11 = v10;

  v12 = objc_msgSend(v6, sel_purchasedTagIDs);
  v13 = sub_1BB873030();

  LOBYTE(v12) = sub_1BA761FE4(v9, v11, v13);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
    goto LABEL_30;
LABEL_7:
  v14 = (char *)objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
  swift_unknownObjectRelease();
  if (objc_getAssociatedObject(v14, v14 + 1))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v34, (uint64_t)v36);
  if (!v37)
  {
    sub_1BA6EDA74((uint64_t)v36);
    goto LABEL_15;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_15:
    v15 = 0;
    v17 = 0;
    goto LABEL_16;
  }
  v15 = v33;
  v16 = objc_msgSend(v33, sel_integerValue);
  if (v16 == (id)-1)
  {

LABEL_27:
    v20 = objc_msgSend(objc_msgSend(a1, sel_bundleSubscriptionProvider), sel_bundleSubscription);
    swift_unknownObjectRelease();
    v21 = objc_msgSend(a2, sel_identifier);
    if (!v21)
    {
      sub_1BB8729A0();
      v21 = (id)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    v22 = objc_msgSend(v20, sel_containsTagID_, v21);

    if ((v22 & 1) == 0)
      goto LABEL_34;
LABEL_30:
    v23 = objc_msgSend(a1, sel_purchaseProvider);
    if (objc_msgSend((id)swift_unknownObjectRetain_n(), sel_tagType) == (id)3)
    {
      v24 = objc_msgSend(a2, sel_asSection);
      if (!v24
        || (v25 = objc_msgSend(v24, sel_parentID), swift_unknownObjectRelease(),
                                                                                       !v25))
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease_n();
        result = swift_unknownObjectRelease();
        goto LABEL_38;
      }
    }
    else
    {
      v25 = objc_msgSend(a2, sel_identifier);
    }
    v28 = sub_1BB8729A0();
    v30 = v29;

    v31 = objc_msgSend(v23, sel_purchasedTagIDs);
    v32 = sub_1BB873030();

    LOBYTE(v31) = sub_1BA761FE4(v28, v30, v32);
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if ((v31 & 1) != 0)
    {
      v27 = 1;
      goto LABEL_39;
    }
LABEL_38:
    v27 = 2;
    goto LABEL_39;
  }
  v17 = (unint64_t)v16;
LABEL_16:
  if (objc_getAssociatedObject(v14, (const void *)~v17))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v34 = 0u;
    v35 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v34, (uint64_t)v36);
  if (!v37)
  {
    sub_1BA6EDA74((uint64_t)v36);
LABEL_24:

    if ((v17 & 1) == 0)
      goto LABEL_34;
    goto LABEL_27;
  }
  sub_1BA78DE28();
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_24;
  v18 = v33;
  v19 = objc_msgSend(v18, sel_integerValue);

  if (((v19 ^ v17) & 1) != 0)
    goto LABEL_27;
LABEL_34:
  swift_unknownObjectRelease();
  result = swift_unknownObjectRelease();
  v27 = 0;
LABEL_39:
  *a3 = v27;
  return result;
}

NewsFeed::FeedSubscriptionPaidAccess_optional __swiftcall FeedSubscriptionPaidAccess.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FeedSubscriptionPaidAccess_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 3;
  if (v3 < 3)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FeedSubscriptionPaidAccess.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6574726143614C61;
  if (*v0 != 1)
    v1 = 0x646E754264696170;
  if (*v0)
    return v1;
  else
    return 0x6373627553746F6ELL;
}

uint64_t sub_1BAB0E3F8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB804F74(*a1, *a2);
}

uint64_t sub_1BAB0E404()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB0E4B4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB0E540()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::FeedSubscriptionPaidAccess_optional sub_1BAB0E5EC(Swift::String *a1)
{
  return FeedSubscriptionPaidAccess.init(rawValue:)(*a1);
}

void sub_1BAB0E5F8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xED00006465626972;
  v4 = 0xE800000000000000;
  v5 = 0x6574726143614C61;
  if (v2 != 1)
  {
    v5 = 0x646E754264696170;
    v4 = 0xEA0000000000656CLL;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6373627553746F6ELL;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1BAB0E668()
{
  sub_1BAB0E768();
  return sub_1BB872D60();
}

uint64_t sub_1BAB0E6C4()
{
  sub_1BAB0E768();
  return sub_1BB872D0C();
}

unint64_t sub_1BAB0E714()
{
  unint64_t result;

  result = qword_1EF2B0100;
  if (!qword_1EF2B0100)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedSubscriptionPaidAccess, &type metadata for FeedSubscriptionPaidAccess);
    atomic_store(result, (unint64_t *)&qword_1EF2B0100);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedSubscriptionPaidAccess()
{
  return &type metadata for FeedSubscriptionPaidAccess;
}

unint64_t sub_1BAB0E768()
{
  unint64_t result;

  result = qword_1ED3A5158;
  if (!qword_1ED3A5158)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedSubscriptionPaidAccess, &type metadata for FeedSubscriptionPaidAccess);
    atomic_store(result, (unint64_t *)&qword_1ED3A5158);
  }
  return result;
}

uint64_t FormatSlotDefinitionCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *(_QWORD *)(v3 + 8);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      v12 = type metadata accessor for FormatSlotDefinition();
      v13 = *(_QWORD *)(v12 - 8);
      sub_1BA7AE5A4(v11 + *(_QWORD *)(v13 + 72) * v10, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
    }
    else
    {
      v16 = type metadata accessor for FormatSlotDefinition();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a3, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = type metadata accessor for FormatSlotDefinition();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a3, 1, 1, v14);
  }
}

uint64_t FormatSlotDefinitionCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA7AE8FC(0, &qword_1ED3B94F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA51E158((unint64_t *)&qword_1ED3AAEA8, &qword_1ED3A6868, (uint64_t)&protocol conformance descriptor for FormatSlotDefinition, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatSlotDefinitionCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

NewsFeed::FormatSlotDefinitionCollection __swiftcall FormatSlotDefinitionCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  NewsFeed::FormatSlotDefinitionCollection result;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BA5BC514(MEMORY[0x1E0DEE9D8]);
  *v1 = v2;
  v1[1] = v3;
  result.slotsByIdentifier._rawValue = v4;
  result.slots._rawValue = v3;
  return result;
}

unint64_t sub_1BAB0E9C0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA5BC514(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotDefinitionCollection()
{
  return &type metadata for FormatSlotDefinitionCollection;
}

uint64_t sub_1BAB0EA00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_1BAB0EA44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B0108)
  {
    type metadata accessor for FormatSlotDefinition();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B0108);
  }
}

uint64_t sub_1BAB0EAAC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatMediaTimingFunction.init(from:)(a1, a2);
}

uint64_t sub_1BAB0EAC0(_QWORD *a1)
{
  return FormatMediaTimingFunction.encode(to:)(a1);
}

uint64_t _s8NewsFeed25FormatMediaTimingFunctionO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t v15[4];
  uint64_t v16[4];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_BYTE *)(a1 + 32);
  v8 = *(_QWORD *)a2;
  v7 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_BYTE *)(a2 + 32);
  if ((v6 & 1) == 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
    {
      sub_1BB7F0CAC(*(_QWORD *)a1);
      v12 = v13;
      sub_1BA8964E0(v3, v2, v5, v4, 0);
      sub_1BA8964E0(v8, v7, v10, v9, 0);
      return v12 & 1;
    }
LABEL_7:
    sub_1BA896394(v8, v7, v10, v9, v11);
    sub_1BA8964E0(v3, v2, v5, v4, v6);
    sub_1BA8964E0(v8, v7, v10, v9, v11);
    v12 = 0;
    return v12 & 1;
  }
  if ((*(_BYTE *)(a2 + 32) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  v16[0] = *(_QWORD *)a1;
  v16[1] = v2;
  v16[2] = v5;
  v16[3] = v4;
  v15[0] = v8;
  v15[1] = v7;
  v15[2] = v10;
  v15[3] = v9;
  sub_1BA896394(v8, v7, v10, v9, 1);
  sub_1BA896394(v3, v2, v5, v4, 1);
  sub_1BA896394(v8, v7, v10, v9, 1);
  sub_1BA896394(v3, v2, v5, v4, 1);
  v12 = _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0(v16, v15);
  sub_1BA8964E0(v3, v2, v5, v4, 1);
  sub_1BA8964E0(v8, v7, v10, v9, 1);
  sub_1BA8964E0(v8, v7, v10, v9, 1);
  sub_1BA8964E0(v3, v2, v5, v4, 1);
  return v12 & 1;
}

unint64_t sub_1BAB0ECD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB0ECF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB0ECF8()
{
  unint64_t result;

  result = qword_1EF2B0110;
  if (!qword_1EF2B0110)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunction, &type metadata for FormatMediaTimingFunction);
    atomic_store(result, (unint64_t *)&qword_1EF2B0110);
  }
  return result;
}

unint64_t sub_1BAB0ED3C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA4FEBA0();
  a1[2] = sub_1BAB0ED70();
  result = sub_1BAB0EDB4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB0ED70()
{
  unint64_t result;

  result = qword_1ED3A0418;
  if (!qword_1ED3A0418)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunction, &type metadata for FormatMediaTimingFunction);
    atomic_store(result, (unint64_t *)&qword_1ED3A0418);
  }
  return result;
}

unint64_t sub_1BAB0EDB4()
{
  unint64_t result;

  result = qword_1EF2B0118;
  if (!qword_1EF2B0118)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatMediaTimingFunction, &type metadata for FormatMediaTimingFunction);
    atomic_store(result, (unint64_t *)&qword_1EF2B0118);
  }
  return result;
}

uint64_t destroy for FormatMediaTimingFunction(uint64_t a1)
{
  return sub_1BA8964E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for FormatMediaTimingFunction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA896394(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for FormatMediaTimingFunction(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1BA896394(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  v12 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BA8964E0(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for FormatMediaTimingFunction(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_BYTE *)(a1 + 32);
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(_BYTE *)(a1 + 32) = v3;
  sub_1BA8964E0(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t sub_1BAB0EF24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1BAB0EF2C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatMediaTimingFunction()
{
  return &type metadata for FormatMediaTimingFunction;
}

_QWORD *sub_1BAB0EF48(uint64_t a1)
{
  int v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  void (*v13)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  void (*v23)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  __int128 v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD v31[2];
  uint64_t v32;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 == 255)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v3 = *(_QWORD *)a1;
  if ((v1 & 1) != 0)
  {
    v14 = *(_QWORD *)(a1 + 8);
    v29 = *(_QWORD *)(a1 + 16);
    v30 = *(_QWORD *)(a1 + 24);
    v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v15);
    sub_1BA8C88C8(0);
    v17 = *(_QWORD *)(v16 - 8);
    v18 = *(_QWORD *)(v17 + 72);
    v19 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_1BB8827B0;
    v21 = v20 + v19;
    sub_1BAAF7494(1701869908, 0xE400000000000000, 0x206C6F72746E6F43, 0xEE0073746E696F50, (_QWORD *)(v20 + v19));
    v22 = type metadata accessor for FormatInspectionItem(0);
    v23 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
    v23(v21, 0, 1, v22);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x3120746E696F50, 0xE700000000000000, v3, (_QWORD *)(v21 + v18));
    v23(v21 + v18, 0, 1, v22);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x3220746E696F50, 0xE700000000000000, v14, (_QWORD *)(v21 + 2 * v18));
    v23(v21 + 2 * v18, 0, 1, v22);
    v24 = (_QWORD *)(v21 + 3 * v18);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x3320746E696F50, 0xE700000000000000, v29, v24);
    v23((unint64_t)v24, 0, 1, v22);
    v25 = (_QWORD *)(v21 + 4 * v18);
    swift_bridgeObjectRetain();
    sub_1BAAF3E48(0x3420746E696F50, 0xE700000000000000, v30, v25);
    v23((unint64_t)v25, 0, 1, v22);
    sub_1BAF89090(0x4620676E696D6954, 0xEF6E6F6974636E75, 0, 0, v20, v31);
  }
  else
  {
    v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v4);
    sub_1BA8C88C8(0);
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(_QWORD *)(v7 + 72);
    v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
    v11 = (_QWORD *)(v10 + v9);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 1701667150, 0xE400000000000000, v11);
    v12 = type metadata accessor for FormatInspectionItem(0);
    v13 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
    v13(v11, 0, 1, v12);
    sub_1BAAF7494(1701667150, 0xE400000000000000, *(_QWORD *)&aLinear_3[8 * (char)v3], qword_1BB89E460[(char)v3], (_QWORD *)((char *)v11 + v8));
    v13((_QWORD *)((char *)v11 + v8), 0, 1, v12);
    sub_1BAF89090(0x4620676E696D6954, 0xEF6E6F6974636E75, 0, 0, v10, v31);
  }
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v26 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v26;
  *(_QWORD *)(v26 + 48) = v32;
  v27 = v31[1];
  *(_OWORD *)(v26 + 16) = v31[0];
  *(_OWORD *)(v26 + 32) = v27;
  v28 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v28;
}

uint64_t sub_1BAB0F43C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void FormatVideoProperties.videoGravity.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatVideoProperties.looping.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 24);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

void FormatVideoProperties.playback.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 25);
}

uint64_t FormatVideoProperties.preventDisplaySleep.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatVideoProperties.muted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 72);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

void FormatVideoProperties.imageGravity.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 73);
}

void FormatVideoProperties.endAction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 74);
}

uint64_t FormatVideoProperties.shouldPlayInBackground.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 96);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

id sub_1BAB0F4F0@<X0>(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  void *v7;
  uint64_t v8;
  id v9;
  char v10;
  id v11;
  char v12;
  char v13;
  char v14;
  char v16;
  void *v17;
  uint64_t v18;
  char v20;
  void *v21;
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;

  v3 = a1;
  v4 = v1[24];
  v23 = v1[25];
  v27 = *((_QWORD *)v1 + 5);
  v28 = *((_QWORD *)v1 + 4);
  v5 = v1[48];
  v25 = *((_QWORD *)v1 + 8);
  v26 = *((_QWORD *)v1 + 7);
  v6 = v1[72];
  v22 = v1[73];
  v24 = v1[74];
  v7 = (void *)**((_QWORD **)&unk_1E7292D90 + *v1);
  if (v4 == 255)
  {
    v21 = (void *)**((_QWORD **)&unk_1E7292D90 + *v1);
    v11 = v7;
    v10 = 1;
  }
  else
  {
    v8 = *((_QWORD *)v1 + 2);
    v29 = *((_QWORD *)v1 + 1);
    v30 = v8;
    v31 = v4 & 1;
    v9 = v7;
    sub_1BA796C58(v29, v8, v4);
    sub_1BB86DD80();
    v10 = FormatBoolean.value(contextLayoutOptions:)(v32);
    sub_1BA796C70(v29, v8, v4);
    if (v2)
    {

      return (id)swift_release();
    }
    v21 = v7;
    swift_release();
    v3 = a1;
  }
  v20 = v10;
  if (v5 == 255)
  {
    v13 = 1;
    if (v6 == 255)
      goto LABEL_9;
    goto LABEL_11;
  }
  v29 = v28;
  v30 = v27;
  v31 = v5 & 1;
  sub_1BA69C808(v28, v27, v5 & 1);
  sub_1BB86DD80();
  v12 = FormatBoolean.value(contextLayoutOptions:)(v32);
  sub_1BA796C70(v28, v27, v5);
  if (v2)
    goto LABEL_12;
  swift_release();
  v13 = v12;
  if (v6 != 255)
  {
LABEL_11:
    v29 = v26;
    v30 = v25;
    v31 = v6 & 1;
    sub_1BA69C808(v26, v25, v6 & 1);
    sub_1BB86DD80();
    v14 = FormatBoolean.value(contextLayoutOptions:)(v32);
    sub_1BA796C70(v26, v25, v6);
    if (!v2)
    {
      swift_release();
      goto LABEL_15;
    }
LABEL_12:

    return (id)swift_release();
  }
LABEL_9:
  v14 = 1;
LABEL_15:
  if (v22 == 12)
    v16 = 11;
  else
    v16 = v22;
  LOBYTE(v29) = v16;
  v17 = (void *)sub_1BB2DE670((char *)&v29);
  v18 = qword_1BB89E578[v24];
  *(_QWORD *)v3 = v21;
  *(_BYTE *)(v3 + 8) = v20 & 1;
  *(_QWORD *)(v3 + 16) = v23 & 1;
  *(_BYTE *)(v3 + 24) = v13 & 1;
  *(_BYTE *)(v3 + 25) = v14 & 1;
  *(_QWORD *)(v3 + 32) = v17;
  *(_QWORD *)(v3 + 40) = v18;
  return v17;
}

uint64_t sub_1BAB0F7BC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatVideoProperties.init(from:)(a1, a2);
}

uint64_t sub_1BAB0F7D0(_QWORD *a1)
{
  return FormatVideoProperties.encode(to:)(a1);
}

BOOL _s8NewsFeed21FormatVideoPropertiesV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  char v66;
  unsigned __int8 v67;
  uint64_t v68;
  int v69;
  int v70;
  unsigned __int8 v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  char v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  unsigned __int8 v85;
  uint64_t v86;
  int v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int8 v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char v121;
  uint64_t v122;
  int v123;
  int v124;
  int v125;
  uint64_t v126;
  char v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  int v131;
  int v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  int v141;
  int v142;
  int v143;
  int v144;
  int v145;
  int v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  int v151;
  int v152;
  uint64_t v153;
  int v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  int v159;
  int v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  char v165;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 2);
  v162 = *((_QWORD *)a1 + 1);
  v4 = a1[24];
  v161 = a1[25];
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v7 = a1[48];
  v9 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v10 = a1[72];
  v11 = a1[73];
  v12 = a1[74];
  v14 = *((_QWORD *)a1 + 10);
  v13 = *((_QWORD *)a1 + 11);
  v15 = a1[96];
  v16 = *a2;
  v17 = *((_QWORD *)a2 + 1);
  v163 = *((_QWORD *)a2 + 2);
  v18 = a2[24];
  v160 = a2[25];
  v20 = *((_QWORD *)a2 + 4);
  v19 = *((_QWORD *)a2 + 5);
  v21 = a2[48];
  v22 = *((_QWORD *)a2 + 7);
  v23 = *((_QWORD *)a2 + 8);
  v24 = a2[72];
  v25 = a2[73];
  if (v2 == 3)
  {
    v159 = v7;
    v157 = v8;
    v158 = v5;
    v156 = v9;
    v154 = v12;
    v155 = a2[74];
    v151 = a2[96];
    v152 = v15;
    v150 = *((_QWORD *)a2 + 11);
    v153 = *((_QWORD *)a2 + 10);
    if (v16 != 3)
      return 0;
  }
  else
  {
    if (v16 == 3)
      return 0;
    v146 = a2[48];
    v159 = v7;
    v156 = v9;
    v157 = v8;
    v151 = a2[96];
    v152 = v15;
    v122 = v14;
    v131 = v11;
    v143 = a2[73];
    v129 = *((_QWORD *)a2 + 7);
    v133 = v13;
    if (v2)
    {
      if (v2 == 1)
        v26 = 0x7341657A69736572;
      else
        v26 = 0xD000000000000010;
      if (v2 == 1)
        v27 = 0xEC00000074636570;
      else
        v27 = 0x80000001BB95C730;
    }
    else
    {
      v27 = 0xE600000000000000;
      v26 = 0x657A69736572;
    }
    v126 = v6;
    v140 = v10;
    v28 = 0x7341657A69736572;
    v29 = 0x80000001BB95C730;
    if (v16 == 1)
      v29 = 0xEC00000074636570;
    else
      v28 = 0xD000000000000010;
    if (*a2)
      v30 = v28;
    else
      v30 = 0x657A69736572;
    if (*a2)
      v31 = v29;
    else
      v31 = 0xE600000000000000;
    v158 = v5;
    v32 = a2[72];
    v33 = *((_QWORD *)a2 + 8);
    v154 = v12;
    v155 = a2[74];
    v150 = *((_QWORD *)a2 + 11);
    v153 = *((_QWORD *)a2 + 10);
    if (v26 == v30 && v27 == v31)
    {
      swift_bridgeObjectRelease_n();
      v11 = v131;
      v22 = v129;
      v23 = v33;
      v10 = v140;
      v25 = v143;
      v24 = v32;
      v14 = v122;
      v6 = v126;
      v13 = v133;
      v21 = v146;
    }
    else
    {
      v34 = sub_1BB874398();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = 0;
      v11 = v131;
      v22 = v129;
      v23 = v33;
      v10 = v140;
      v25 = v143;
      v24 = v32;
      v14 = v122;
      v6 = v126;
      v13 = v133;
      v21 = v146;
      if ((v34 & 1) == 0)
        return v35;
    }
  }
  if (v4 == 255)
  {
    if (v18 == 255)
      goto LABEL_45;
LABEL_34:
    v38 = v17;
    v39 = v17;
    v40 = v163;
    sub_1BA796C58(v39, v163, v18);
    sub_1BA796C58(v162, v3, v4);
    sub_1BA796C70(v162, v3, v4);
    v41 = v38;
LABEL_35:
    v42 = v40;
LABEL_36:
    v43 = v18;
LABEL_37:
    sub_1BA796C70(v41, v42, v43);
    return 0;
  }
  if (v18 == 255)
    goto LABEL_34;
  v36 = v3;
  if ((v4 & 1) == 0)
  {
    v44 = v162;
    if ((v18 & 1) == 0)
    {
      v145 = v25;
      v148 = v21;
      v45 = v36;
      v132 = v11;
      v46 = v22;
      v137 = v19;
      v47 = v10;
      v48 = v23;
      v49 = v6;
      v50 = v13;
      v51 = v14;
      v52 = v24;
      sub_1BA69C828(v162, v45, 0);
      sub_1BA69C828(v17, v163, 0);
      v25 = v145;
      v21 = v148;
      v24 = v52;
      v14 = v51;
      v13 = v50;
      v6 = v49;
      v23 = v48;
      v10 = v47;
      v19 = v137;
      v22 = v46;
      v11 = v132;
      v35 = 0;
      if (((((v162 & 1) == 0) ^ v17) & 1) == 0)
        return v35;
      goto LABEL_45;
    }
LABEL_42:
    sub_1BA69C808(v17, v163, v18 & 1);
    sub_1BA69C828(v44, v36, v4 & 1);
    v53 = v17;
    v54 = v163;
    v55 = v18 & 1;
LABEL_43:
    sub_1BA69C828(v53, v54, v55);
    return 0;
  }
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    v44 = v162;
    goto LABEL_42;
  }
  v144 = v25;
  v147 = v21;
  v123 = v24;
  v134 = v13;
  v136 = v23;
  v130 = v22;
  v37 = v11;
  if (v162 == v17 && v3 == v163)
  {
    sub_1BA796C58(v162, v3, v18);
    sub_1BA796C58(v162, v3, v4);
    sub_1BA69C828(v162, v3, 1);
    sub_1BA69C828(v162, v3, 1);
    v11 = v37;
    v25 = v144;
    v22 = v130;
    v13 = v134;
    v23 = v136;
    v24 = v123;
    v21 = v147;
    goto LABEL_45;
  }
  v127 = sub_1BB874398();
  sub_1BA796C58(v17, v163, v18);
  sub_1BA796C58(v162, v3, v4);
  sub_1BA69C828(v162, v3, 1);
  sub_1BA69C828(v17, v163, 1);
  v35 = 0;
  v11 = v37;
  v25 = v144;
  v22 = v130;
  v13 = v134;
  v23 = v136;
  v24 = v123;
  v21 = v147;
  if ((v127 & 1) != 0)
  {
LABEL_45:
    if (v161 == 2)
    {
      if (v160 != 2)
        return 0;
    }
    else
    {
      if (v160 == 2)
        return 0;
      v149 = v21;
      v138 = v19;
      v128 = v6;
      v124 = v24;
      v141 = v10;
      v57 = v13;
      v58 = v23;
      v59 = v22;
      v60 = v25;
      v61 = v11;
      if ((v161 & 1) != 0)
        v62 = 0x74696E4972657375;
      else
        v62 = 1869903201;
      if ((v161 & 1) != 0)
        v63 = 0xED00006465746169;
      else
        v63 = 0xE400000000000000;
      if ((v160 & 1) != 0)
        v64 = 0x74696E4972657375;
      else
        v64 = 1869903201;
      if ((v160 & 1) != 0)
        v65 = 0xED00006465746169;
      else
        v65 = 0xE400000000000000;
      if (v62 == v64 && v63 == v65)
      {
        swift_bridgeObjectRelease_n();
        v11 = v61;
        v25 = v60;
        v22 = v59;
        v23 = v58;
        v13 = v57;
        v10 = v141;
        v24 = v124;
        v6 = v128;
        v19 = v138;
        v21 = v149;
      }
      else
      {
        v66 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v35 = 0;
        v11 = v61;
        v25 = v60;
        v22 = v59;
        v23 = v58;
        v13 = v57;
        v10 = v141;
        v24 = v124;
        v6 = v128;
        v19 = v138;
        v21 = v149;
        if ((v66 & 1) == 0)
          return v35;
      }
    }
    if (v159 == 255)
    {
      if (v21 == 255)
        goto LABEL_82;
    }
    else if (v21 != 255)
    {
      if ((v159 & 1) != 0)
      {
        if ((v21 & 1) != 0)
        {
          v67 = v21;
          v125 = v24;
          v142 = v10;
          v135 = v13;
          v139 = v23;
          v68 = v22;
          v69 = v25;
          v70 = v11;
          if (v158 == v20 && v6 == v19)
          {
            sub_1BA796C58(v158, v6, v21);
            sub_1BA796C58(v158, v6, v159);
            sub_1BA69C828(v158, v6, 1);
            sub_1BA69C828(v158, v6, 1);
            v11 = v70;
            v25 = v69;
            v22 = v68;
            v13 = v135;
            v23 = v139;
            v10 = v142;
            v24 = v125;
          }
          else
          {
            v164 = sub_1BB874398();
            sub_1BA796C58(v20, v19, v67);
            sub_1BA796C58(v158, v6, v159);
            sub_1BA69C828(v158, v6, 1);
            sub_1BA69C828(v20, v19, 1);
            v35 = 0;
            v11 = v70;
            v25 = v69;
            v22 = v68;
            v13 = v135;
            v23 = v139;
            v10 = v142;
            v24 = v125;
            if ((v164 & 1) == 0)
              return v35;
          }
LABEL_82:
          if (v10 == 255)
          {
            if (v24 == 255)
            {
LABEL_98:
              if (v11 == 12)
              {
                if (v25 != 12)
                  return 0;
              }
              else
              {
                if (v25 == 12)
                  return 0;
                v104 = v13;
                v105 = FormatImageGravity.rawValue.getter();
                v107 = v106;
                if (v105 == FormatImageGravity.rawValue.getter() && v107 == v108)
                {
                  swift_bridgeObjectRelease_n();
                  v13 = v104;
                }
                else
                {
                  v109 = sub_1BB874398();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v35 = 0;
                  v13 = v104;
                  if ((v109 & 1) == 0)
                    return v35;
                }
              }
              if (v154 == 3)
              {
                if (v155 != 3)
                  return 0;
              }
              else
              {
                if (v155 == 3)
                  return 0;
                v110 = 0x65636E61766461;
                if (v154)
                {
                  if (v154 == 1)
                  {
                    v111 = 0xE500000000000000;
                    v112 = 0x6573756170;
                  }
                  else
                  {
                    v111 = 0xE400000000000000;
                    v112 = 1701736302;
                  }
                }
                else
                {
                  v111 = 0xE700000000000000;
                  v112 = 0x65636E61766461;
                }
                if (v155)
                {
                  if (v155 == 1)
                  {
                    v113 = 0xE500000000000000;
                    v110 = 0x6573756170;
                  }
                  else
                  {
                    v113 = 0xE400000000000000;
                    v110 = 1701736302;
                  }
                }
                else
                {
                  v113 = 0xE700000000000000;
                }
                v114 = v13;
                if (v112 == v110 && v111 == v113)
                {
                  swift_bridgeObjectRelease_n();
                  v13 = v114;
                }
                else
                {
                  v115 = sub_1BB874398();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v35 = 0;
                  v13 = v114;
                  if ((v115 & 1) == 0)
                    return v35;
                }
              }
              if (v152 == 255)
              {
                LOBYTE(v18) = v151;
                v116 = v153;
                if (v151 == 255)
                  return 1;
              }
              else
              {
                LOBYTE(v18) = v151;
                v116 = v153;
                if (v151 != 255)
                {
                  if ((v152 & 1) != 0)
                  {
                    if ((v151 & 1) != 0)
                    {
                      if (v14 == v153 && v13 == v150)
                      {
                        v117 = v13;
                        sub_1BA796C58(v14, v13, v151);
                        sub_1BA796C58(v14, v117, v152);
                        v35 = 1;
                        sub_1BA69C828(v14, v117, 1);
                        sub_1BA69C828(v14, v117, 1);
                        return v35;
                      }
                      v120 = v13;
                      v121 = sub_1BB874398();
                      sub_1BA796C58(v153, v150, v151);
                      sub_1BA796C58(v14, v120, v152);
                      v35 = 1;
                      sub_1BA69C828(v14, v120, 1);
                      sub_1BA69C828(v153, v150, 1);
                      if ((v121 & 1) != 0)
                        return v35;
                      return 0;
                    }
                    v119 = v13;
                    swift_bridgeObjectRetain();
                    goto LABEL_137;
                  }
                  v119 = v13;
                  if ((v151 & 1) != 0)
                  {
LABEL_137:
                    v82 = v151 & 1;
                    sub_1BA69C808(v153, v150, v151 & 1);
                    sub_1BA69C828(v14, v119, v152 & 1);
                    v53 = v153;
                    v54 = v150;
                    goto LABEL_96;
                  }
                  sub_1BA69C828(v14, v13, 0);
                  sub_1BA69C828(v153, v150, 0);
                  return ((((v14 & 1) == 0) ^ v153) & 1) != 0;
                }
              }
              v40 = v150;
              v118 = v13;
              sub_1BA796C58(v116, v150, v18);
              sub_1BA796C58(v14, v118, v152);
              sub_1BA796C70(v14, v118, v152);
              v41 = v116;
              goto LABEL_35;
            }
          }
          else if (v24 != 255)
          {
            if ((v10 & 1) != 0)
            {
              v84 = v156;
              v83 = v157;
              if ((v24 & 1) != 0)
              {
                v85 = v10;
                v86 = v13;
                v87 = v25;
                v88 = v11;
                if (v156 == v22 && v157 == v23)
                {
                  sub_1BA796C58(v156, v157, v24);
                  sub_1BA796C58(v156, v157, v85);
                  sub_1BA69C828(v156, v157, 1);
                  sub_1BA69C828(v156, v157, 1);
                  v11 = v88;
                  v25 = v87;
                  v13 = v86;
                }
                else
                {
                  v101 = v22;
                  v102 = v23;
                  v103 = v24;
                  v165 = sub_1BB874398();
                  sub_1BA796C58(v101, v102, v103);
                  sub_1BA796C58(v156, v157, v85);
                  sub_1BA69C828(v156, v157, 1);
                  sub_1BA69C828(v101, v102, 1);
                  v35 = 0;
                  v11 = v88;
                  v25 = v87;
                  v13 = v86;
                  if ((v165 & 1) == 0)
                    return v35;
                }
                goto LABEL_98;
              }
              v96 = v22;
              v97 = v23;
              v98 = v24;
              swift_bridgeObjectRetain();
              LOBYTE(v24) = v98;
              v23 = v97;
              v22 = v96;
            }
            else
            {
              v84 = v156;
              v83 = v157;
              if ((v24 & 1) == 0)
              {
                v91 = v11;
                v92 = v25;
                v93 = v22;
                v94 = v23;
                v95 = v13;
                sub_1BA69C828(v156, v157, 0);
                sub_1BA69C828(v93, v94, 0);
                v13 = v95;
                v25 = v92;
                v11 = v91;
                v35 = 0;
                if (((((v156 & 1) == 0) ^ v93) & 1) == 0)
                  return v35;
                goto LABEL_98;
              }
            }
            v82 = v24 & 1;
            v99 = v22;
            v100 = v23;
            sub_1BA69C808(v22, v23, v24 & 1);
            sub_1BA69C828(v84, v83, v10 & 1);
            v53 = v99;
            v54 = v100;
LABEL_96:
            v55 = v82;
            goto LABEL_43;
          }
          v89 = v22;
          v90 = v23;
          LOBYTE(v18) = v24;
          sub_1BA796C58(v22, v23, v24);
          sub_1BA796C58(v156, v157, v10);
          sub_1BA796C70(v156, v157, v10);
          v41 = v89;
          v42 = v90;
          goto LABEL_36;
        }
        v81 = v21;
        swift_bridgeObjectRetain();
        LOBYTE(v21) = v81;
        v72 = v158;
      }
      else
      {
        v72 = v158;
        if ((v21 & 1) == 0)
        {
          v73 = v6;
          v74 = v11;
          v75 = v25;
          v76 = v22;
          v77 = v23;
          v78 = v13;
          v79 = v14;
          v80 = v24;
          sub_1BA69C828(v158, v73, 0);
          sub_1BA69C828(v20, v19, 0);
          v24 = v80;
          v14 = v79;
          v13 = v78;
          v23 = v77;
          v22 = v76;
          v25 = v75;
          v11 = v74;
          v35 = 0;
          if (((((v158 & 1) == 0) ^ v20) & 1) == 0)
            return v35;
          goto LABEL_82;
        }
      }
      v82 = v21 & 1;
      sub_1BA69C808(v20, v19, v21 & 1);
      sub_1BA69C828(v72, v6, v159 & 1);
      v53 = v20;
      v54 = v19;
      goto LABEL_96;
    }
    v71 = v21;
    sub_1BA796C58(v20, v19, v21);
    sub_1BA796C58(v158, v6, v159);
    sub_1BA796C70(v158, v6, v159);
    v41 = v20;
    v42 = v19;
    v43 = v71;
    goto LABEL_37;
  }
  return v35;
}

unint64_t sub_1BAB10610(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB10634();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB10634()
{
  unint64_t result;

  result = qword_1EF2B0120;
  if (!qword_1EF2B0120)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoProperties, &type metadata for FormatVideoProperties);
    atomic_store(result, (unint64_t *)&qword_1EF2B0120);
  }
  return result;
}

unint64_t sub_1BAB10678(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB106AC();
  a1[2] = sub_1BAB106F0();
  result = sub_1BAB10734();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB106AC()
{
  unint64_t result;

  result = qword_1ED3A01C8;
  if (!qword_1ED3A01C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoProperties, &type metadata for FormatVideoProperties);
    atomic_store(result, (unint64_t *)&qword_1ED3A01C8);
  }
  return result;
}

unint64_t sub_1BAB106F0()
{
  unint64_t result;

  result = qword_1EF2B0128;
  if (!qword_1EF2B0128)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoProperties, &type metadata for FormatVideoProperties);
    atomic_store(result, (unint64_t *)&qword_1EF2B0128);
  }
  return result;
}

unint64_t sub_1BAB10734()
{
  unint64_t result;

  result = qword_1EF2B0130;
  if (!qword_1EF2B0130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoProperties, &type metadata for FormatVideoProperties);
    atomic_store(result, (unint64_t *)&qword_1EF2B0130);
  }
  return result;
}

uint64_t destroy for FormatVideoProperties(uint64_t result)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;

  v1 = result;
  v2 = *(unsigned __int8 *)(result + 24);
  if (v2 != 255)
    result = sub_1BA69C828(*(_QWORD *)(result + 8), *(_QWORD *)(result + 16), v2 & 1);
  v3 = *(unsigned __int8 *)(v1 + 48);
  if (v3 != 255)
    result = sub_1BA69C828(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), v3 & 1);
  v4 = *(unsigned __int8 *)(v1 + 72);
  if (v4 != 255)
    result = sub_1BA69C828(*(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64), v4 & 1);
  v5 = *(unsigned __int8 *)(v1 + 96);
  if (v5 != 255)
    return sub_1BA69C828(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88), v5 & 1);
  return result;
}

uint64_t initializeWithCopy for FormatVideoProperties(uint64_t a1, uint64_t a2)
{
  int v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(unsigned __int8 *)(a2 + 24);
  if (v4 == 255)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  }
  else
  {
    v5 = v4 & 1;
    v6 = *(_QWORD *)(a2 + 8);
    v7 = *(_QWORD *)(a2 + 16);
    sub_1BA69C808(v6, v7, v4 & 1);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = v5;
  }
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v8 = *(unsigned __int8 *)(a2 + 48);
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v9 = v8 & 1;
    v10 = *(_QWORD *)(a2 + 32);
    v11 = *(_QWORD *)(a2 + 40);
    sub_1BA69C808(v10, v11, v8 & 1);
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v11;
    *(_BYTE *)(a1 + 48) = v9;
  }
  v12 = *(unsigned __int8 *)(a2 + 72);
  if (v12 == 255)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  }
  else
  {
    v13 = v12 & 1;
    v14 = *(_QWORD *)(a2 + 56);
    v15 = *(_QWORD *)(a2 + 64);
    sub_1BA69C808(v14, v15, v12 & 1);
    *(_QWORD *)(a1 + 56) = v14;
    *(_QWORD *)(a1 + 64) = v15;
    *(_BYTE *)(a1 + 72) = v13;
  }
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  v16 = *(unsigned __int8 *)(a2 + 96);
  if (v16 == 255)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  }
  else
  {
    v17 = v16 & 1;
    v19 = *(_QWORD *)(a2 + 80);
    v18 = *(_QWORD *)(a2 + 88);
    sub_1BA69C808(v19, v18, v16 & 1);
    *(_QWORD *)(a1 + 80) = v19;
    *(_QWORD *)(a1 + 88) = v18;
    *(_BYTE *)(a1 + 96) = v17;
  }
  return a1;
}

uint64_t assignWithCopy for FormatVideoProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 *v5;
  int v6;
  char v7;
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  char v21;
  __int128 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  __int128 *v32;
  __int128 *v33;
  int v34;
  char v35;
  __int128 v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  __int128 *v46;
  __int128 *v47;
  int v48;
  char v49;
  __int128 v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  char v57;
  uint64_t v58;
  uint64_t v59;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 + 8;
  v5 = (__int128 *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 24);
  if (*(unsigned __int8 *)(a1 + 24) == 255)
  {
    if (v6 == 255)
    {
      v8 = *v5;
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_OWORD *)v4 = v8;
    }
    else
    {
      v15 = v6 & 1;
      v16 = *(_QWORD *)(a2 + 8);
      v17 = *(_QWORD *)(a2 + 16);
      sub_1BA69C808(v16, v17, v6 & 1);
      *(_QWORD *)(a1 + 8) = v16;
      *(_QWORD *)(a1 + 16) = v17;
      *(_BYTE *)(a1 + 24) = v15;
    }
  }
  else if (v6 == 255)
  {
    sub_1BAB10C5C(a1 + 8);
    v7 = *((_BYTE *)v5 + 16);
    *(_OWORD *)v4 = *v5;
    *(_BYTE *)(v4 + 16) = v7;
  }
  else
  {
    v9 = v6 & 1;
    v10 = *(_QWORD *)(a2 + 8);
    v11 = *(_QWORD *)(a2 + 16);
    sub_1BA69C808(v10, v11, v6 & 1);
    v12 = *(_QWORD *)(a1 + 8);
    v13 = *(_QWORD *)(a1 + 16);
    v14 = *(_BYTE *)(a1 + 24);
    *(_QWORD *)(a1 + 8) = v10;
    *(_QWORD *)(a1 + 16) = v11;
    *(_BYTE *)(a1 + 24) = v9;
    sub_1BA69C828(v12, v13, v14);
  }
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v18 = (__int128 *)(a1 + 32);
  v19 = (__int128 *)(a2 + 32);
  v20 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v20 == 255)
    {
      v22 = *v19;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *v18 = v22;
    }
    else
    {
      v29 = v20 & 1;
      v30 = *(_QWORD *)(a2 + 32);
      v31 = *(_QWORD *)(a2 + 40);
      sub_1BA69C808(v30, v31, v20 & 1);
      *(_QWORD *)(a1 + 32) = v30;
      *(_QWORD *)(a1 + 40) = v31;
      *(_BYTE *)(a1 + 48) = v29;
    }
  }
  else if (v20 == 255)
  {
    sub_1BAB10C5C(a1 + 32);
    v21 = *(_BYTE *)(a2 + 48);
    *v18 = *v19;
    *(_BYTE *)(a1 + 48) = v21;
  }
  else
  {
    v23 = v20 & 1;
    v24 = *(_QWORD *)(a2 + 32);
    v25 = *(_QWORD *)(a2 + 40);
    sub_1BA69C808(v24, v25, v20 & 1);
    v26 = *(_QWORD *)(a1 + 32);
    v27 = *(_QWORD *)(a1 + 40);
    v28 = *(_BYTE *)(a1 + 48);
    *(_QWORD *)(a1 + 32) = v24;
    *(_QWORD *)(a1 + 40) = v25;
    *(_BYTE *)(a1 + 48) = v23;
    sub_1BA69C828(v26, v27, v28);
  }
  v32 = (__int128 *)(a1 + 56);
  v33 = (__int128 *)(a2 + 56);
  v34 = *(unsigned __int8 *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 72) == 255)
  {
    if (v34 == 255)
    {
      v36 = *v33;
      *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
      *v32 = v36;
    }
    else
    {
      v43 = v34 & 1;
      v44 = *(_QWORD *)(a2 + 56);
      v45 = *(_QWORD *)(a2 + 64);
      sub_1BA69C808(v44, v45, v34 & 1);
      *(_QWORD *)(a1 + 56) = v44;
      *(_QWORD *)(a1 + 64) = v45;
      *(_BYTE *)(a1 + 72) = v43;
    }
  }
  else if (v34 == 255)
  {
    sub_1BAB10C5C(a1 + 56);
    v35 = *(_BYTE *)(a2 + 72);
    *v32 = *v33;
    *(_BYTE *)(a1 + 72) = v35;
  }
  else
  {
    v37 = v34 & 1;
    v38 = *(_QWORD *)(a2 + 56);
    v39 = *(_QWORD *)(a2 + 64);
    sub_1BA69C808(v38, v39, v34 & 1);
    v40 = *(_QWORD *)(a1 + 56);
    v41 = *(_QWORD *)(a1 + 64);
    v42 = *(_BYTE *)(a1 + 72);
    *(_QWORD *)(a1 + 56) = v38;
    *(_QWORD *)(a1 + 64) = v39;
    *(_BYTE *)(a1 + 72) = v37;
    sub_1BA69C828(v40, v41, v42);
  }
  *(_BYTE *)(a1 + 73) = *(_BYTE *)(a2 + 73);
  *(_BYTE *)(a1 + 74) = *(_BYTE *)(a2 + 74);
  v46 = (__int128 *)(a1 + 80);
  v47 = (__int128 *)(a2 + 80);
  v48 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v48 == 255)
    {
      v50 = *v47;
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *v46 = v50;
    }
    else
    {
      v57 = v48 & 1;
      v59 = *(_QWORD *)(a2 + 80);
      v58 = *(_QWORD *)(a2 + 88);
      sub_1BA69C808(v59, v58, v48 & 1);
      *(_QWORD *)(a1 + 80) = v59;
      *(_QWORD *)(a1 + 88) = v58;
      *(_BYTE *)(a1 + 96) = v57;
    }
  }
  else if (v48 == 255)
  {
    sub_1BAB10C5C(a1 + 80);
    v49 = *(_BYTE *)(a2 + 96);
    *v46 = *v47;
    *(_BYTE *)(a1 + 96) = v49;
  }
  else
  {
    v51 = v48 & 1;
    v53 = *(_QWORD *)(a2 + 80);
    v52 = *(_QWORD *)(a2 + 88);
    sub_1BA69C808(v53, v52, v48 & 1);
    v54 = *(_QWORD *)(a1 + 80);
    v55 = *(_QWORD *)(a1 + 88);
    v56 = *(_BYTE *)(a1 + 96);
    *(_QWORD *)(a1 + 80) = v53;
    *(_QWORD *)(a1 + 88) = v52;
    *(_BYTE *)(a1 + 96) = v51;
    sub_1BA69C828(v54, v55, v56);
  }
  return a1;
}

uint64_t sub_1BAB10C5C(uint64_t a1)
{
  destroy for FormatBoolean(a1);
  return a1;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for FormatVideoProperties(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = a1 + 8;
  v5 = a2 + 8;
  v6 = *(unsigned __int8 *)(a1 + 24);
  if (v6 == 255)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(a2 + 24);
  if (v7 == 255)
  {
    sub_1BAB10C5C(a1 + 8);
LABEL_4:
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *(_BYTE *)(v4 + 16) = *(_BYTE *)(v5 + 16);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)v5;
  *(_BYTE *)(a1 + 24) = v7 & 1;
  sub_1BA69C828(v8, v9, v6 & 1);
LABEL_6:
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  v10 = (_OWORD *)(a2 + 32);
  v11 = *(unsigned __int8 *)(a1 + 48);
  if (v11 == 255)
  {
LABEL_9:
    *(_OWORD *)(a1 + 32) = *v10;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_11;
  }
  v12 = *(unsigned __int8 *)(a2 + 48);
  if (v12 == 255)
  {
    sub_1BAB10C5C(a1 + 32);
    goto LABEL_9;
  }
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v10;
  *(_BYTE *)(a1 + 48) = v12 & 1;
  sub_1BA69C828(v13, v14, v11 & 1);
LABEL_11:
  v15 = (_OWORD *)(a2 + 56);
  v16 = *(unsigned __int8 *)(a1 + 72);
  if (v16 == 255)
  {
LABEL_14:
    *(_OWORD *)(a1 + 56) = *v15;
    *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
    goto LABEL_16;
  }
  v17 = *(unsigned __int8 *)(a2 + 72);
  if (v17 == 255)
  {
    sub_1BAB10C5C(a1 + 56);
    goto LABEL_14;
  }
  v18 = *(_QWORD *)(a1 + 56);
  v19 = *(_QWORD *)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *v15;
  *(_BYTE *)(a1 + 72) = v17 & 1;
  sub_1BA69C828(v18, v19, v16 & 1);
LABEL_16:
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  v20 = (_OWORD *)(a2 + 80);
  v21 = *(unsigned __int8 *)(a1 + 96);
  if (v21 != 255)
  {
    v22 = *(unsigned __int8 *)(a2 + 96);
    if (v22 != 255)
    {
      v23 = *(_QWORD *)(a1 + 80);
      v24 = *(_QWORD *)(a1 + 88);
      *(_OWORD *)(a1 + 80) = *v20;
      *(_BYTE *)(a1 + 96) = v22 & 1;
      sub_1BA69C828(v23, v24, v21 & 1);
      return a1;
    }
    sub_1BAB10C5C(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *v20;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoProperties(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 97))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = (v3 ^ 0xFF) - 1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatVideoProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 97) = 0;
    if (a2)
      *(_BYTE *)(result + 24) = ~(_BYTE)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatVideoProperties()
{
  return &type metadata for FormatVideoProperties;
}

uint64_t FeedRefreshTrigger.hash(into:)()
{
  return sub_1BB8745D8();
}

BOOL static FeedRefreshTrigger.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedRefreshTrigger.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB10FA4()
{
  unint64_t result;

  result = qword_1EF2B0138;
  if (!qword_1EF2B0138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedRefreshTrigger, &type metadata for FeedRefreshTrigger);
    atomic_store(result, (unint64_t *)&qword_1EF2B0138);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for FeedRefreshTrigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB11034 + 4 * byte_1BB89E5A5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB11068 + 4 * byte_1BB89E5A0[v4]))();
}

uint64_t sub_1BAB11068(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB11070(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB11078);
  return result;
}

uint64_t sub_1BAB11084(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB1108CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB11090(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB11098(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedRefreshTrigger()
{
  return &type metadata for FeedRefreshTrigger;
}

uint64_t static FormatCodingClearColorStrategy.defaultValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 2;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t sub_1BAB110FC()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB11110@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 2;
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t static FormatCodingBlackColorStrategy.defaultValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 2;
  *(_QWORD *)(result + 24) = 0x3FF0000000000000;
  *(_BYTE *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t sub_1BAB111AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 2;
  *(_QWORD *)(result + 24) = 0x3FF0000000000000;
  *(_BYTE *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t static FormatCodingLabelColorStrategy.defaultValue.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 21;
  *(_QWORD *)(result + 24) = 0x3FF0000000000000;
  *(_BYTE *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

uint64_t sub_1BAB1124C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_BYTE *)(result + 16) = 21;
  *(_QWORD *)(result + 24) = 0x3FF0000000000000;
  *(_BYTE *)(result + 32) = 0;
  *a1 = result | 0x1000000000000000;
  return result;
}

BOOL _s8NewsFeed30FormatCodingBlackColorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v4;

  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = 0x3FF0000000000000;
  *(_BYTE *)(v0 + 32) = 0;
  v4 = v0 | 0x1000000000000000;
  static FormatColor.== infix(_:_:)((uint64_t)&v4);
  v2 = v1;
  swift_release();
  return (v2 & 1) == 0;
}

BOOL _s8NewsFeed30FormatCodingClearColorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v4;

  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 2;
  *(_QWORD *)(v0 + 24) = 0;
  *(_BYTE *)(v0 + 32) = 0;
  v4 = v0 | 0x1000000000000000;
  static FormatColor.== infix(_:_:)((uint64_t)&v4);
  v2 = v1;
  swift_release();
  return (v2 & 1) == 0;
}

BOOL _s8NewsFeed30FormatCodingLabelColorStrategyV12shouldEncode12wrappedValueSbAA0cF0O_tFZ_0()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v4;

  v0 = swift_allocObject();
  *(_BYTE *)(v0 + 16) = 21;
  *(_QWORD *)(v0 + 24) = 0x3FF0000000000000;
  *(_BYTE *)(v0 + 32) = 0;
  v4 = v0 | 0x1000000000000000;
  static FormatColor.== infix(_:_:)((uint64_t)&v4);
  v2 = v1;
  swift_release();
  return (v2 & 1) == 0;
}

unint64_t sub_1BAB11400(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB11424();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB11424()
{
  unint64_t result;

  result = qword_1EF2B0140;
  if (!qword_1EF2B0140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingClearColorStrategy, &type metadata for FormatCodingClearColorStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B0140);
  }
  return result;
}

unint64_t sub_1BAB11470(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB11494();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB11494()
{
  unint64_t result;

  result = qword_1EF2B01A8;
  if (!qword_1EF2B01A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingBlackColorStrategy, &type metadata for FormatCodingBlackColorStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B01A8);
  }
  return result;
}

unint64_t sub_1BAB114D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB114FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB114FC()
{
  unint64_t result;

  result = qword_1EF2B0210;
  if (!qword_1EF2B0210)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingLabelColorStrategy, &type metadata for FormatCodingLabelColorStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B0210);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingClearColorStrategy()
{
  return &type metadata for FormatCodingClearColorStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingBlackColorStrategy()
{
  return &type metadata for FormatCodingBlackColorStrategy;
}

ValueMetadata *type metadata accessor for FormatCodingLabelColorStrategy()
{
  return &type metadata for FormatCodingLabelColorStrategy;
}

uint64_t sub_1BAB11570()
{
  swift_release();
  return swift_deallocObject();
}

void static FeedLocation.== infix(_:_:)(uint64_t a1)
{
  uint64_t v1;

  MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  __asm { BR              X11 }
}

BOOL sub_1BAB11628()
{
  unint64_t v0;

  return v0 >> 60 == 0;
}

void sub_1BAB11A04(uint64_t a1)
{
  static FeedLocation.== infix(_:_:)(a1);
}

uint64_t FeedLocation.feedMode.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  char v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;
  _BYTE v10[40];

  sub_1BAB11AB8(*v1);
  sub_1BAB12078((uint64_t)v10, (uint64_t)v7);
  v3 = v8;
  if (v8)
  {
    v4 = v9;
    __swift_project_boxed_opaque_existential_1(v7, v8);
    FeedServiceContextType.feedMode.getter(v3, v4, &v6);
    sub_1BAB12164((uint64_t)v10);
    LOBYTE(v3) = v6;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1BAB12164((uint64_t)v10);
    result = sub_1BAB12164((uint64_t)v7);
  }
  *a1 = v3;
  return result;
}

void sub_1BAB11AB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_1BB873A2C();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BAB11B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  void (*v3)(uint64_t, uint64_t);

  v3 = *(void (**)(uint64_t, uint64_t))(v1 + 48);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v2[3] = swift_getAssociatedTypeWitness();
  v2[4] = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0(v2);
  swift_retain();
  v3(v0, v1);
  return swift_release();
}

void sub_1BAB11CDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v3 - 112) = type metadata accessor for FeedCursor(255, v1, v2, v4);
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = &type metadata for FeedRefreshStrategy;
  *(_QWORD *)(v3 - 88) = &type metadata for FeedRefreshTrigger;
  swift_getTupleTypeMetadata();
  swift_projectBox();
  JUMPOUT(0x1BAB11DB4);
}

void sub_1BAB11ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v12 - 112) = *(_QWORD *)(v8 + 16);
  type metadata accessor for FeedLocation(0, v4, v5, a4);
  swift_retain();
  FeedLocation.serviceConfig.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v4) == 1)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v7, v9);
    *(_QWORD *)(v6 + 32) = 0;
    *(_OWORD *)v6 = 0u;
    *(_OWORD *)(v6 + 16) = 0u;
    JUMPOUT(0x1BAB11F44);
  }
  *(_QWORD *)(v12 - 120) = *(_QWORD *)(v5 + 48);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v6 + 24) = swift_getAssociatedTypeWitness();
  *(_QWORD *)(v6 + 32) = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)v6);
  (*(void (**)(uint64_t, uint64_t))(v12 - 120))(v4, v5);
  swift_release();
  JUMPOUT(0x1BAB11EC0);
}

uint64_t sub_1BAB12078(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB120BC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAB120BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B0278)
  {
    sub_1BAB12110();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B0278);
  }
}

unint64_t sub_1BAB12110()
{
  unint64_t result;

  result = qword_1EF2B0280;
  if (!qword_1EF2B0280)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2B0280);
  }
  return result;
}

uint64_t sub_1BAB12164(uint64_t a1)
{
  uint64_t v2;

  sub_1BAB120BC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void FeedLocation.serviceConfig.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB121DC(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 56))(v1, 1, 1);
}

uint64_t sub_1BAB122AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t TupleTypeMetadata;
  uint64_t v7;
  uint64_t v8;

  MEMORY[0x1E0C80A78](a1);
  v4 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v2 - 80) = type metadata accessor for FeedCursor(255, v4, *(_QWORD *)(v3 + 24), v5);
  *(_QWORD *)(v2 - 72) = v4;
  *(_QWORD *)(v2 - 64) = &type metadata for FeedRefreshStrategy;
  *(_QWORD *)(v2 - 56) = &type metadata for FeedRefreshTrigger;
  TupleTypeMetadata = swift_getTupleTypeMetadata();
  v7 = swift_projectBox();
  v8 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v1, v7 + *(int *)(TupleTypeMetadata + 48), v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v8 + 56))(v1, 0, 1, v4);
}

void FeedLocation.name.getter()
{
  __asm { BR              X12 }
}

uint64_t sub_1BAB12438()
{
  return 0x646568636163;
}

void sub_1BAB12710(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(v1 - 88) = 0x28796669646F6DLL;
  *(_QWORD *)(v1 - 80) = 0xE700000000000000;
  *(_QWORD *)(v1 - 56) = v2;
  swift_retain();
  FeedLocation.name.getter();
  sub_1BB872AFC(v3);
  swift_release();
  swift_bridgeObjectRelease();
  JUMPOUT(0x1BAB126F4);
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceNode()
{
  return &type metadata for SportsTaxonomyGraphResourceNode;
}

void sub_1BAB1277C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_1BA4CDF6C(0, &qword_1EF2B0288, (uint64_t (*)(void))sub_1BAB12C54, (uint64_t)&type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BAB12818()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v6 = *(_QWORD *)(v0 + 16);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1BAB12C54();
  sub_1BB8746C8();
  *(_QWORD *)(v5 - 184) = v6;
  sub_1BAB12C98();
  sub_1BAB12CEC();
  sub_1BB8741AC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v1);
}

uint64_t sub_1BAB1293C()
{
  sub_1BAB130D4();
  return sub_1BB874710();
}

uint64_t sub_1BAB12964()
{
  sub_1BAB130D4();
  return sub_1BB87471C();
}

uint64_t sub_1BAB1298C(char *a1, char *a2)
{
  return sub_1BB7EEC80(*a1, *a2);
}

uint64_t sub_1BAB12998()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB12A10()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB12A64()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB12AD8@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAB12B34(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1953460082;
  if (!*v1)
    v2 = 0x6E6F6974636573;
  v3 = 0xE700000000000000;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAB12B6C()
{
  sub_1BAB1348C();
  return sub_1BB872D60();
}

uint64_t sub_1BAB12BC8()
{
  sub_1BAB1348C();
  return sub_1BB872D0C();
}

unint64_t sub_1BAB12C14@<X0>(_QWORD *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v2;
  unint64_t result;

  result = sub_1BAB12D90(a1);
  if (!v2)
    *a2 = result;
  return result;
}

void sub_1BAB12C3C(uint64_t a1)
{
  uint64_t *v1;

  sub_1BAB1277C(a1, *v1);
}

unint64_t sub_1BAB12C54()
{
  unint64_t result;

  result = qword_1ED3AA278;
  if (!qword_1ED3AA278)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB904038, &type metadata for SportsTaxonomyGraphResourceRootNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3AA278);
  }
  return result;
}

void sub_1BAB12C98()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB040)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB040);
  }
}

unint64_t sub_1BAB12CEC()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B0290;
  if (!qword_1EF2B0290)
  {
    sub_1BAB12C98();
    v2 = v1;
    v3 = sub_1BAB12D4C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B0290);
  }
  return result;
}

unint64_t sub_1BAB12D4C()
{
  unint64_t result;

  result = qword_1EF2B0298;
  if (!qword_1EF2B0298)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E858, &type metadata for SportsTaxonomyGraphResourceNode);
    atomic_store(result, (unint64_t *)&qword_1EF2B0298);
  }
  return result;
}

unint64_t sub_1BAB12D90(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  int v15;
  int v16;
  _QWORD *v17;
  _QWORD v18[5];
  __int128 v19;
  _OWORD v20[2];

  sub_1BA4CDF6C(0, &qword_1ED3AB4F0, (uint64_t (*)(void))sub_1BAB130D4, (uint64_t)&type metadata for SportsTaxonomyGraphResourceNode.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v18 - v6;
  v8 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB130D4();
  v9 = (unint64_t)v8;
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BAB13118();
    sub_1BB874068();
    if (LOBYTE(v18[0]) == 2)
    {
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v18);
      sub_1BB658054(v18, (uint64_t)&v19);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 = swift_allocObject();
      v13 = v20[0];
      *(_OWORD *)(v12 + 16) = v19;
      *(_OWORD *)(v12 + 32) = v13;
      *(_OWORD *)(v12 + 42) = *(_OWORD *)((char *)v20 + 10);
      v9 = v12 | 0x8000000000000000;
    }
    else if ((v18[0] & 1) != 0)
    {
      v9 = swift_allocObject();
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v18);
      v17 = sub_1BB2CE764(v18);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(_QWORD *)(v9 + 16) = v17;
    }
    else
    {
      v10 = swift_allocObject();
      sub_1BA4C010C((uint64_t)a1, (uint64_t)v18);
      v14 = sub_1BB4EF228(v18);
      v16 = v15;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(_QWORD *)(v10 + 16) = v14;
      *(_BYTE *)(v10 + 24) = v16 & 1;
      *(_BYTE *)(v10 + 25) = BYTE1(v16) & 1;
      *(_BYTE *)(v10 + 26) = BYTE2(v16) & 1;
      v9 = v10 | 0xC000000000000000;
    }
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v9;
}

unint64_t sub_1BAB130D4()
{
  unint64_t result;

  result = qword_1ED3A9500;
  if (!qword_1ED3A9500)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89EA40, &type metadata for SportsTaxonomyGraphResourceNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9500);
  }
  return result;
}

unint64_t sub_1BAB13118()
{
  unint64_t result;

  result = qword_1ED3A9518;
  if (!qword_1ED3A9518)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89EA18, &type metadata for SportsTaxonomyGraphResourceNode.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A9518);
  }
  return result;
}

uint64_t sub_1BAB1315C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB13180()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB131A4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB131D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceNode.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB13250 + 4 * byte_1BB89E7F9[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB13284 + 4 * byte_1BB89E7F4[v4]))();
}

uint64_t sub_1BAB13284(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB1328C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB13294);
  return result;
}

uint64_t sub_1BAB132A0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB132A8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB132AC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB132B4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceNode.CodingType()
{
  return &type metadata for SportsTaxonomyGraphResourceNode.CodingType;
}

uint64_t storeEnumTagSinglePayload for SportsTaxonomyGraphResourceNode.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAB13310 + 4 * byte_1BB89E7FE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAB13330 + 4 * byte_1BB89E803[v4]))();
}

_BYTE *sub_1BAB13310(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAB13330(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB13338(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB13340(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB13348(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB13350(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SportsTaxonomyGraphResourceNode.CodingKeys()
{
  return &type metadata for SportsTaxonomyGraphResourceNode.CodingKeys;
}

unint64_t sub_1BAB13370()
{
  unint64_t result;

  result = qword_1EF2B02A0;
  if (!qword_1EF2B02A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E928, &type metadata for SportsTaxonomyGraphResourceNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B02A0);
  }
  return result;
}

unint64_t sub_1BAB133B8()
{
  unint64_t result;

  result = qword_1EF2B02A8;
  if (!qword_1EF2B02A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E9F0, &type metadata for SportsTaxonomyGraphResourceNode.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B02A8);
  }
  return result;
}

unint64_t sub_1BAB13400()
{
  unint64_t result;

  result = qword_1ED3A9510;
  if (!qword_1ED3A9510)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E898, &type metadata for SportsTaxonomyGraphResourceNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9510);
  }
  return result;
}

unint64_t sub_1BAB13448()
{
  unint64_t result;

  result = qword_1ED3A9508;
  if (!qword_1ED3A9508)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E8C0, &type metadata for SportsTaxonomyGraphResourceNode.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A9508);
  }
  return result;
}

unint64_t sub_1BAB1348C()
{
  unint64_t result;

  result = qword_1ED3AC558;
  if (!qword_1ED3AC558)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89E978, &type metadata for SportsTaxonomyGraphResourceNode.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3AC558);
  }
  return result;
}

uint64_t *sub_1BAB134D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  v7 = a2[1];
  *a1 = *a2;
  swift_retain();
  if (v7 != 1)
    swift_bridgeObjectRetain();
  v4[1] = v7;
  v8 = *(int *)(a3 + 24);
  v9 = (char *)v4 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FormatVersionRequirement(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v19 = sub_1BB86EB84();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      v20(v9, v10, v19);
      sub_1BA6F3F88();
      v22 = v21;
      v20(&v9[*(int *)(v21 + 48)], &v10[*(int *)(v21 + 48)], v19);
      v18 = *(int *)(v22 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v26 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v9, v10, v26);
        goto LABEL_13;
      }
      v16 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v9, v10, v16);
      sub_1BA8D4E7C();
      v18 = *(int *)(v17 + 48);
    }
    v23 = &v9[v18];
    v24 = &v10[v18];
    v25 = *((_QWORD *)v24 + 1);
    *(_QWORD *)v23 = *(_QWORD *)v24;
    *((_QWORD *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
LABEL_13:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    return v4;
  }
  sub_1BA8E5458();
  memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  return v4;
}

uint64_t sub_1BAB136C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;

  swift_release();
  if (*(_QWORD *)(a1 + 8) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = type metadata accessor for FormatVersionRequirement(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    result = swift_getEnumCaseMultiPayload();
    switch((_DWORD)result)
    {
      case 2:
        v8 = sub_1BB86EB84();
        v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
        v9(v4, v8);
        sub_1BA6F3F88();
        v9(v4 + *(int *)(v10 + 48), v8);
        break;
      case 1:
        v11 = sub_1BB86EB84();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v4, v11);
        sub_1BA8D4E7C();
        break;
      case 0:
        v7 = sub_1BB86EB84();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v4, v7);
      default:
        return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1BAB13804(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;

  v6 = a2[1];
  *a1 = *a2;
  swift_retain();
  if (v6 != 1)
    swift_bridgeObjectRetain();
  a1[1] = v6;
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = type metadata accessor for FormatVersionRequirement(0);
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v17 = sub_1BB86EB84();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      v18(v8, v9, v17);
      sub_1BA6F3F88();
      v20 = v19;
      v18(&v8[*(int *)(v19 + 48)], &v9[*(int *)(v19 + 48)], v17);
      v16 = *(int *)(v20 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v24 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v8, v9, v24);
        goto LABEL_11;
      }
      v14 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v8, v9, v14);
      sub_1BA8D4E7C();
      v16 = *(int *)(v15 + 48);
    }
    v21 = &v8[v16];
    v22 = &v9[v16];
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    return a1;
  }
  sub_1BA8E5458();
  memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  return a1;
}

_QWORD *sub_1BAB139C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = a1 + 1;
  v7 = a2[1];
  if (a1[1] == 1)
  {
    if (v7 == 1)
    {
      v8 = 1;
LABEL_6:
      *v6 = v8;
      goto LABEL_9;
    }
    *v6 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v7 == 1)
    {
      sub_1BAB13D60((uint64_t)(a1 + 1));
      v8 = a2[1];
      goto LABEL_6;
    }
    *v6 = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
LABEL_9:
  v9 = *(int *)(a3 + 24);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = type metadata accessor for FormatVersionRequirement(0);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v28 = sub_1BB86EB84();
        v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
        v29(v10, v11, v28);
        sub_1BA6F3F88();
        v31 = v30;
        v29(&v10[*(int *)(v30 + 48)], &v11[*(int *)(v30 + 48)], v28);
        v20 = *(int *)(v31 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v34 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v10, v11, v34);
          goto LABEL_25;
        }
        v18 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v10, v11, v18);
        sub_1BA8D4E7C();
        v20 = *(int *)(v19 + 48);
      }
      v32 = &v10[v20];
      v33 = &v11[v20];
      *(_QWORD *)v32 = *(_QWORD *)v33;
      *((_QWORD *)v32 + 1) = *((_QWORD *)v33 + 1);
      swift_bridgeObjectRetain();
LABEL_25:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      return a1;
    }
    goto LABEL_16;
  }
  if (v16)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement);
LABEL_16:
    sub_1BA8E5458();
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      v36 = sub_1BB86EB84();
      v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
      v37(v10, v11, v36);
      sub_1BA6F3F88();
      v39 = v38;
      v37(&v10[*(int *)(v38 + 48)], &v11[*(int *)(v38 + 48)], v36);
      v40 = *(int *)(v39 + 64);
      v41 = &v10[v40];
      v42 = &v11[v40];
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v22 == 1)
      {
        v23 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v10, v11, v23);
        sub_1BA8D4E7C();
        v25 = *(int *)(v24 + 48);
        v26 = &v10[v25];
        v27 = &v11[v25];
        *(_QWORD *)v26 = *(_QWORD *)v27;
        *((_QWORD *)v26 + 1) = *((_QWORD *)v27 + 1);
        swift_bridgeObjectRetain();
      }
      else
      {
        v43 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v10, v11, v43);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAB13D60(uint64_t a1)
{
  destroy for FormatOptionBindingModifier();
  return a1;
}

_OWORD *sub_1BAB13D94(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for FormatVersionRequirement(0);
  v8 = *(_QWORD *)(v7 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    type metadata accessor for FormatVersionRequirement.Value(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v14 = sub_1BB86EB84();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v15(v5, v6, v14);
      sub_1BA6F3F88();
      v17 = v16;
      v15(&v5[*(int *)(v16 + 48)], &v6[*(int *)(v16 + 48)], v14);
      v13 = *(int *)(v17 + 64);
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        v18 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v5, v6, v18);
        goto LABEL_9;
      }
      v11 = sub_1BB86EB84();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v5, v6, v11);
      sub_1BA8D4E7C();
      v13 = *(int *)(v12 + 48);
    }
    *(_OWORD *)&v5[v13] = *(_OWORD *)&v6[v13];
LABEL_9:
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
    return a1;
  }
  sub_1BA8E5458();
  memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  return a1;
}

_QWORD *sub_1BAB13F28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  *a1 = *a2;
  swift_release();
  v6 = a1 + 1;
  v7 = a2[1];
  if (a1[1] == 1)
    goto LABEL_4;
  if (v7 == 1)
  {
    sub_1BAB13D60((uint64_t)(a1 + 1));
    v7 = 1;
LABEL_4:
    *v6 = v7;
    goto LABEL_6;
  }
  *v6 = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  v8 = *(int *)(a3 + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = type metadata accessor for FormatVersionRequirement(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  v14 = v13(v9, 1, v11);
  v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      type metadata accessor for FormatVersionRequirement.Value(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        v24 = sub_1BB86EB84();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
        v25(v9, v10, v24);
        sub_1BA6F3F88();
        v27 = v26;
        v25(&v9[*(int *)(v26 + 48)], &v10[*(int *)(v26 + 48)], v24);
        v19 = *(int *)(v27 + 64);
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          v28 = sub_1BB86EB84();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v9, v10, v28);
          goto LABEL_22;
        }
        v17 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v9, v10, v17);
        sub_1BA8D4E7C();
        v19 = *(int *)(v18 + 48);
      }
      *(_OWORD *)&v9[v19] = *(_OWORD *)&v10[v19];
LABEL_22:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      return a1;
    }
    goto LABEL_13;
  }
  if (v15)
  {
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement);
LABEL_13:
    sub_1BA8E5458();
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)v9, type metadata accessor for FormatVersionRequirement.Value);
    type metadata accessor for FormatVersionRequirement.Value(0);
    v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      v30 = sub_1BB86EB84();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32);
      v31(v9, v10, v30);
      sub_1BA6F3F88();
      v33 = v32;
      v31(&v9[*(int *)(v32 + 48)], &v10[*(int *)(v32 + 48)], v30);
      *(_OWORD *)&v9[*(int *)(v33 + 64)] = *(_OWORD *)&v10[*(int *)(v33 + 64)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (v21 == 1)
      {
        v22 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v9, v10, v22);
        sub_1BA8D4E7C();
        *(_OWORD *)&v9[*(int *)(v23 + 48)] = *(_OWORD *)&v10[*(int *)(v23 + 48)];
      }
      else
      {
        v34 = sub_1BB86EB84();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 32))(v9, v10, v34);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1BAB1425C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB14268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 2147483645)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return ((_DWORD)v4 - 1) & ~(((int)v4 - 1) >> 31);
  }
  else
  {
    sub_1BA8E5458();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_1BAB142EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB142F8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483645)
  {
    *(_QWORD *)(result + 8) = (a2 + 1);
  }
  else
  {
    sub_1BA8E5458();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FormatOptionsNodeStatementResult()
{
  uint64_t result;

  result = qword_1ED3D2568;
  if (!qword_1ED3D2568)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAB143AC()
{
  unint64_t v0;

  sub_1BA8E5458();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

ValueMetadata *type metadata accessor for FormatGroupBinding()
{
  return &type metadata for FormatGroupBinding;
}

uint64_t dispatch thunk of CategoryViewStylerType.titleFont.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CategoryViewStylerType.scalingRatio.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CategoryViewStylerType.selectedCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CategoryViewStylerType.styled(title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CategoryViewStylerType.styled(title:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 40))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(titleLabel:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(iconImageView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(iconImageView:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(contentView:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(checkmarkImageView:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CategoryViewStylerType.style(contentView:isSelected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

id sub_1BAB14490(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t inited;
  void *v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  id v34;
  id v35;
  void *v36;
  void *v37;
  id v38;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  void *v46;
  void *v47;
  void *v48;
  void *v49;
  void *v50;
  void *v51;
  id v52;

  v3 = v2;
  v43 = a2;
  v44 = a1;
  v42 = sub_1BB86F73C();
  v4 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v2 + 3;
  v8 = v2[6];
  v9 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v8);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v9 + 48))(&v45, v8, v9);
  v10 = v46;
  v41 = v45;
  v11 = v47;
  v12 = v48;
  v13 = v49;
  v14 = v50;
  v15 = v51;

  v16 = v3[6];
  v17 = v3[7];
  __swift_project_boxed_opaque_existential_1(v7, v16);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v17 + 48))(&v45, v16, v17);
  v18 = v45;
  v19 = v46;
  v20 = v47;
  v21 = v48;
  v22 = v49;
  v23 = v50;
  v24 = v51;

  v25 = v42;
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x1E0DB6E68], v42);
  v26 = v41;
  v27 = (void *)sub_1BB86F730();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v25);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v29 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v30 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  swift_bridgeObjectRetain();
  v31 = v29;
  *(_QWORD *)(inited + 40) = sub_1BB873690();
  v32 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v30;
  *(_QWORD *)(inited + 72) = v32;
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v27;
  v33 = v32;
  v34 = v27;
  sub_1BA76E82C(inited);
  v35 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v36 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v37 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v38 = objc_msgSend(v35, sel_initWithString_attributes_, v36, v37);

  return v38;
}

id sub_1BAB147A8(uint64_t a1, uint64_t a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  uint64_t inited;
  void *v27;
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v38;
  void *v39;
  void *v40;
  void *v41;
  void *v42;
  void *v43;
  void *v44;
  id v45;

  v4 = v3;
  v6 = v3 + 3;
  v7 = v3[6];
  v8 = v3[7];
  __swift_project_boxed_opaque_existential_1(v3 + 3, v7);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v8 + 48))(&v38, v7, v8);
  v9 = v38;
  v10 = v39;
  v11 = v40;
  v12 = v41;
  v14 = v42;
  v13 = v43;
  v15 = v44;

  if ((a3 & 1) != 0)
  {
    v16 = v4[6];
    v17 = v4[7];
    __swift_project_boxed_opaque_existential_1(v6, v16);
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v17 + 48))(&v38, v16, v17);
    v18 = v38;
    v19 = v39;
    v20 = v40;
    v21 = v41;
    v22 = v42;
    v23 = v43;
    v24 = v44;

  }
  else
  {
    v20 = v9;
  }
  v25 = v9;
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v27 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v28 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  swift_bridgeObjectRetain();
  v29 = v27;
  *(_QWORD *)(inited + 40) = sub_1BB873690();
  v30 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v28;
  *(_QWORD *)(inited + 72) = v30;
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v20;
  v31 = v30;
  v32 = v20;
  sub_1BA76E82C(inited);
  v33 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v34 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v35 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend(v33, sel_initWithString_attributes_, v34, v35);

  return v36;
}

void sub_1BAB14A2C(void *a1, char a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;

  v5 = v2[6];
  v6 = v2[7];
  __swift_project_boxed_opaque_existential_1(v2 + 3, v5);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v6 + 48))(&v14, v5, v6);
  if ((a2 & 1) != 0)
  {
    v7 = v14;
    v8 = v15;
    v9 = v16;
  }
  else
  {
    v9 = v14;
    v7 = v15;
    v8 = v16;
  }
  v10 = v17;
  v11 = v18;
  v12 = v19;
  v13 = v20;

  objc_msgSend(a1, sel_setTintColor_, v9);
}

void sub_1BAB14B04(void *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  id v15;
  double v16;
  void *v17;
  double v18;
  double v19;
  void *v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  void *v30;
  void *v31;
  void *v32;
  void *v33;
  void *v34;
  id v35;

  v3 = v2;
  v6 = *(_QWORD *)(v3 + 48);
  v7 = *(_QWORD *)(v3 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v3 + 24), v6);
  (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v7 + 48))(&v28, v6, v7);
  if ((a2 & 1) != 0)
  {
    v8 = v28;
    v9 = v29;
    v11 = v30;
    v10 = v31;
    v12 = v32;
    v13 = v33;
    v14 = v34;

    objc_msgSend(a1, sel_setBackgroundColor_, v10);
    v15 = objc_msgSend(a1, sel_layer);
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    v16 = *(double *)(v3 + 16);
    swift_retain();
    v17 = (void *)sub_1BB873690();
    objc_msgSend(v17, sel_pointSize);
    v19 = v18;
    swift_release();

    objc_msgSend(v15, sel_setCornerRadius_, v19 / v16 * 8.0);
    v27 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v27, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);
  }
  else
  {
    v21 = v28;
    v20 = v29;
    v22 = v30;
    v23 = v31;
    v24 = v32;
    v25 = v33;
    v26 = v34;

    objc_msgSend(a1, sel_setBackgroundColor_, v20);
    v27 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v27, sel_setCornerRadius_, 0.0);
  }

}

id sub_1BAB14D40(void *a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  _QWORD v22[8];

  v3 = v2;
  objc_msgSend(a1, sel_setContentMode_, 4);
  if ((a2 & 1) != 0)
  {
    v6 = (void *)sub_1BB872970();
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v6);

    if (v7)
    {
      v8 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 7, 13.0);
      v9 = objc_msgSend(v7, sel_imageWithConfiguration_, v8);

      v10 = objc_msgSend(v9, sel_imageWithRenderingMode_, 2);
    }
    sub_1BB871710();
    v11 = v3 + 3;
    v13 = v3[6];
    v12 = v3[7];
    __swift_project_boxed_opaque_existential_1(v11, v13);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v12 + 48))(v22, v13, v12);
    v14 = (void *)v22[0];
    v15 = (void *)v22[1];
    v16 = (void *)v22[2];
    v17 = (void *)v22[3];
    v18 = (void *)v22[4];
    v19 = (void *)v22[5];
    v20 = (void *)v22[6];

    objc_msgSend(a1, sel_setTintColor_, v16);
  }
  else
  {
    sub_1BB871710();
  }
  return objc_msgSend(a1, sel_setHidden_, (a2 & 1) == 0);
}

uint64_t sub_1BAB14F04()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB14F28()
{
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  return sub_1BB873690();
}

double sub_1BAB14F8C()
{
  uint64_t *v0;
  uint64_t v1;
  double v2;
  void *v3;
  double v4;
  double v5;

  v1 = *v0;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  v2 = *(double *)(v1 + 16);
  v3 = (void *)sub_1BB873690();
  objc_msgSend(v3, sel_pointSize);
  v5 = v4;

  return v5 / v2;
}

id sub_1BAB1501C(uint64_t a1, uint64_t a2)
{
  return sub_1BAB14490(a1, a2);
}

id sub_1BAB1503C(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1BAB147A8(a1, a2, a3);
}

id sub_1BAB1505C(void *a1)
{
  return objc_msgSend(a1, sel_setNumberOfLines_, 0);
}

void sub_1BAB1506C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  id v11;
  _QWORD v12[8];

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 48);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 56);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(*(_QWORD *)v1 + 24), v3);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v12, v3, v4);
  v5 = (void *)v12[1];
  v11 = (id)v12[0];
  v6 = (void *)v12[2];
  v7 = (void *)v12[3];
  v8 = (void *)v12[4];
  v9 = (void *)v12[5];
  v10 = (void *)v12[6];

  objc_msgSend(a1, sel_setTintColor_, v11);
}

void sub_1BAB1511C(void *a1, char a2)
{
  sub_1BAB14A2C(a1, a2);
}

id sub_1BAB1513C(void *a1)
{
  id v2;

  v2 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v2, sel_setCornerCurve_, *MEMORY[0x1E0CD2A68]);

  return objc_msgSend(a1, sel_setBackgroundColor_, 0);
}

id sub_1BAB1519C(void *a1, char a2)
{
  return sub_1BAB14D40(a1, a2);
}

void sub_1BAB151BC(void *a1, char a2)
{
  sub_1BAB14B04(a1, a2);
}

double sub_1BAB151DC()
{
  uint64_t *v0;
  uint64_t v1;
  double v2;
  void *v3;
  double v4;
  double v5;

  v1 = *v0;
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  v2 = *(double *)(v1 + 16);
  v3 = (void *)sub_1BB873690();
  objc_msgSend(v3, sel_pointSize);
  v5 = v4;

  return v5 / v2 * 8.0;
}

uint64_t FormatType.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatType.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatType.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatType.definition.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 80);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_1BA709DE8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatType.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

BOOL _s8NewsFeed10FormatTypeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  char v13;
  char v14;
  char v15;
  BOOL v16;
  char v17;
  char v18;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  _OWORD v32[3];
  char v33;
  _OWORD v34[3];
  char v35;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_OWORD *)(a1 + 32);
  v5 = *(_OWORD *)(a1 + 48);
  v6 = *(_OWORD *)(a1 + 64);
  v7 = *(_BYTE *)(a1 + 80);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_OWORD *)(a2 + 32);
  v11 = *(_OWORD *)(a2 + 48);
  v12 = *(_OWORD *)(a2 + 64);
  v13 = *(_BYTE *)(a2 + 80);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    goto LABEL_4;
  v28 = *(_OWORD *)(a1 + 48);
  v30 = *(_OWORD *)(a1 + 32);
  v24 = *(_OWORD *)(a2 + 32);
  v26 = *(_OWORD *)(a1 + 64);
  v20 = *(_OWORD *)(a2 + 64);
  v22 = *(_OWORD *)(a2 + 48);
  v14 = sub_1BB874398();
  v12 = v20;
  v11 = v22;
  v10 = v24;
  v6 = v26;
  v5 = v28;
  v4 = v30;
  v15 = v14;
  v16 = 0;
  if ((v15 & 1) != 0)
  {
LABEL_4:
    if (v3)
    {
      if (v8)
      {
        if (v2 != v9 || v3 != v8)
        {
          v29 = v5;
          v31 = v4;
          v25 = v10;
          v27 = v6;
          v21 = v12;
          v23 = v11;
          v17 = sub_1BB874398();
          v12 = v21;
          v11 = v23;
          v10 = v25;
          v6 = v27;
          v5 = v29;
          v4 = v31;
          v18 = v17;
          v16 = 0;
          if ((v18 & 1) == 0)
            return v16;
        }
LABEL_12:
        v34[0] = v4;
        v34[1] = v5;
        v34[2] = v6;
        v35 = v7;
        v32[0] = v10;
        v32[1] = v11;
        v32[2] = v12;
        v33 = v13;
        return _s8NewsFeed20FormatTypeDefinitionO2eeoiySbAC_ACtFZ_0((uint64_t)v34, (uint64_t)v32);
      }
    }
    else if (!v8)
    {
      goto LABEL_12;
    }
    return 0;
  }
  return v16;
}

unint64_t sub_1BAB1546C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA896870();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB15490(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8374B4();
  a1[2] = sub_1BA8374F8();
  result = sub_1BAB154C4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB154C4()
{
  unint64_t result;

  result = qword_1ED3D0150;
  if (!qword_1ED3D0150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatType, &type metadata for FormatType);
    atomic_store(result, (unint64_t *)&qword_1ED3D0150);
  }
  return result;
}

uint64_t sub_1BAB15508@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB15514(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t assignWithCopy for FormatType(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 v16;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[4];
  v5 = v2[5];
  v6 = v2[6];
  v7 = v2[7];
  v8 = v2[8];
  v9 = v2[9];
  LOBYTE(v2) = *((_BYTE *)v2 + 80);
  sub_1BA709DE8(v4, v5, v6, v7, v8, v9, v2);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(_QWORD *)(a1 + 48);
  v13 = *(_QWORD *)(a1 + 56);
  v14 = *(_QWORD *)(a1 + 64);
  v15 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 32) = v4;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  v16 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = (_BYTE)v2;
  sub_1BA6C0C20(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

ValueMetadata *type metadata accessor for FormatType()
{
  return &type metadata for FormatType;
}

void _s8NewsFeed16FormatAdjustmentO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB1568C()
{
  unint64_t v0;
  unint64_t v1;
  __int128 v2;
  __int128 v3;
  char v4;
  _OWORD v6[2];
  _OWORD v7[8];

  if ((v0 >> 59) & 0x1E | (v0 >> 2) & 1)
  {
    sub_1BA7196DC(v0);
    sub_1BA7196DC(v1);
    sub_1BA719340(v1);
    sub_1BA719340(v0);
    v4 = 0;
  }
  else
  {
    v2 = *(_OWORD *)(v1 + 32);
    v7[0] = *(_OWORD *)(v1 + 16);
    v7[1] = v2;
    v3 = *(_OWORD *)(v0 + 32);
    v6[0] = *(_OWORD *)(v0 + 16);
    v6[1] = v3;
    sub_1BA7196DC(v0);
    sub_1BA7196DC(v1);
    v4 = _s8NewsFeed24FormatEdgeInsetsEquationV2eeoiySbAC_ACtFZ_0((uint64_t *)v7, (uint64_t *)v6);
    sub_1BA719340(v1);
    sub_1BA719340(v0);
  }
  return v4 & 1;
}

unint64_t sub_1BAB15EF0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA83335C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB15F14()
{
  unint64_t result;

  result = qword_1ED3D03A0[0];
  if (!qword_1ED3D03A0[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAdjustment, &type metadata for FormatAdjustment);
    atomic_store(result, qword_1ED3D03A0);
  }
  return result;
}

unint64_t *assignWithCopy for FormatAdjustment(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA7196DC(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA719340(v4);
  return a1;
}

unint64_t *assignWithTake for FormatAdjustment(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA719340(v3);
  return a1;
}

uint64_t sub_1BAB15FC0(_QWORD *a1)
{
  unsigned int v1;

  v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x18)
    return v1;
  else
    return (*a1 >> 3) + 25;
}

_QWORD *sub_1BAB15FE4(_QWORD *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_1BAB15FF8(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x19)
    *result = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  else
    *result = (8 * (a2 - 25)) | 0xC000000000000004;
  return result;
}

ValueMetadata *type metadata accessor for FormatAdjustment()
{
  return &type metadata for FormatAdjustment;
}

uint64_t sub_1BAB16044()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

CGFloat sub_1BAB16088(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7, CGFloat a8)
{
  uint64_t v8;

  return sub_1BB7EB82C(*(_QWORD *)(v8 + 48), a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1BAB160D0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAB16104(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v18 = a2;
  sub_1BA6F3ED8(0, &qword_1ED3B0660, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v17 = v4;
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v16 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BA71937C(0, v8, 0);
    v9 = v20;
    v10 = (unint64_t *)(a1 + 32);
    while (1)
    {
      v11 = *v10++;
      v19 = v11;
      sub_1BA7196DC(v11);
      sub_1BA71B2A4(v18);
      v12 = v11;
      if (v2)
        break;
      sub_1BA719340(v12);
      v20 = v9;
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1BA71937C(v13 > 1, v14 + 1, 1);
        v9 = v20;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v14, v7, v17);
      if (!--v8)
        return v9;
    }
    sub_1BA719340(v12);
    swift_release();
  }
  return v9;
}

uint64_t static FormatOptionBindingModifier.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (v2)
  {
    if (v3)
      return sub_1BA5B35E8(v2, v3);
    return 0;
  }
  if (v3)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

unint64_t sub_1BAB162C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB162E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB162E4()
{
  unint64_t result;

  result = qword_1EF2B02B0;
  if (!qword_1EF2B02B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionBindingModifier, &type metadata for FormatOptionBindingModifier);
    atomic_store(result, (unint64_t *)&qword_1EF2B02B0);
  }
  return result;
}

uint64_t sub_1BAB16328(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  if (v2)
  {
    if (v3)
      return sub_1BA5B35E8(v2, v3);
    return 0;
  }
  if (v3)
    return 0;
  swift_bridgeObjectRelease_n();
  return 1;
}

unint64_t sub_1BAB16370(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA823D28();
  a1[2] = sub_1BA823D6C();
  result = sub_1BAB163A4();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB163A4()
{
  unint64_t result;

  result = qword_1EF2B02B8;
  if (!qword_1EF2B02B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatOptionBindingModifier, &type metadata for FormatOptionBindingModifier);
    atomic_store(result, (unint64_t *)&qword_1EF2B02B8);
  }
  return result;
}

_QWORD *assignWithCopy for FormatOptionBindingModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for FormatOptionBindingModifier(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatOptionBindingModifier()
{
  return &type metadata for FormatOptionBindingModifier;
}

uint64_t FormatWebEmbedNodeStyle.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNodeStyle.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatWebEmbedNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatWebEmbedNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 48);
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.errorCornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 89);
}

uint64_t FormatWebEmbedNodeStyle.showsLoadingSpinner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 90);
}

uint64_t FormatWebEmbedNodeStyle.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB165CC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 96) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatWebEmbedNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatWebEmbedNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatWebEmbedNodeStyle.__allocating_init(identifier:class:cornerRadius:errorCornerRadius:ignoresSmartInvertColors:showsLoadingSpinner:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, char a7, char a8, uint64_t a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = swift_allocObject();
  v16 = *a5;
  v15 = a5[1];
  LOBYTE(a5) = *((_BYTE *)a5 + 16);
  v17 = *a6;
  v18 = a6[1];
  LOBYTE(a6) = *((_BYTE *)a6 + 16);
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 48) = v16;
  *(_QWORD *)(v14 + 56) = v15;
  *(_BYTE *)(v14 + 64) = (_BYTE)a5;
  *(_QWORD *)(v14 + 72) = v17;
  *(_QWORD *)(v14 + 80) = v18;
  *(_BYTE *)(v14 + 88) = (_BYTE)a6;
  *(_BYTE *)(v14 + 89) = a7;
  *(_BYTE *)(v14 + 90) = a8;
  swift_beginAccess();
  *(_QWORD *)(v14 + 96) = a9;
  return v14;
}

uint64_t FormatWebEmbedNodeStyle.init(identifier:class:cornerRadius:errorCornerRadius:ignoresSmartInvertColors:showsLoadingSpinner:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t *a6, char a7, char a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v13 = *a5;
  v14 = a5[1];
  v15 = *((_BYTE *)a5 + 16);
  v16 = *a6;
  v17 = a6[1];
  v18 = *((_BYTE *)a6 + 16);
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  *(_QWORD *)(v9 + 32) = a3;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = v13;
  *(_QWORD *)(v9 + 56) = v14;
  *(_BYTE *)(v9 + 64) = v15;
  *(_QWORD *)(v9 + 72) = v16;
  *(_QWORD *)(v9 + 80) = v17;
  *(_BYTE *)(v9 + 88) = v18;
  *(_BYTE *)(v9 + 89) = a7;
  *(_BYTE *)(v9 + 90) = a8;
  swift_beginAccess();
  *(_QWORD *)(v9 + 96) = a9;
  return v9;
}

uint64_t sub_1BAB1685C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char isUniquelyReferenced_nonNull_native;
  char v27;
  unint64_t v28;
  uint64_t v29;
  _BOOL8 v30;
  uint64_t v31;
  char v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  BOOL v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _BYTE *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  unsigned int v77;
  int v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  char v83;
  char v84;
  char v85;
  uint64_t v86;
  char v87;
  char v88;
  unint64_t v89;
  uint64_t v90;
  _BOOL8 v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  unint64_t v95;
  char v96;
  char v97;
  char v98;
  char v99;
  unint64_t v100;
  uint64_t v101;
  _BOOL8 v102;
  uint64_t v103;
  char v104;
  unint64_t v105;
  char v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  uint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  uint64_t *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  char v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t result;
  char v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  char v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t v165;
  uint64_t v166;
  int v167;
  uint64_t v168;
  char v169;
  char v170;
  char v171;
  uint64_t v172;
  char v173;
  uint64_t v174;
  uint64_t v175;
  int64_t v176;
  uint64_t v177;
  uint64_t v178;
  char v179;
  _BYTE *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char v186;
  char v187;
  char v188;
  char v189;
  char v190;
  char v191;
  char v192;
  uint64_t v193;
  char v194;
  _QWORD *v195;
  uint64_t v196;
  _QWORD *v197;
  char v198;
  uint64_t v199;
  char v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;

  swift_beginAccess();
  v150 = *(_QWORD *)(v1 + 32);
  v151 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 48);
  v158 = *(_QWORD *)(v1 + 40);
  v159 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(unsigned __int8 *)(v1 + 64);
  v156 = v4;
  v157 = v3;
  v155 = *(_BYTE *)(v1 + 64);
  if (v5 >= 0xFE)
  {
    v156 = *(_QWORD *)(a1 + 56);
    v157 = *(_QWORD *)(a1 + 48);
    v155 = *(_BYTE *)(a1 + 64);
    sub_1BA6E6C54(v157, v156, v155);
  }
  v6 = *(_QWORD *)(v1 + 72);
  v7 = *(_QWORD *)(v1 + 80);
  v8 = *(unsigned __int8 *)(v1 + 88);
  v153 = v7;
  v154 = v6;
  v152 = *(_BYTE *)(v1 + 88);
  if (v8 >= 0xFE)
  {
    v153 = *(_QWORD *)(a1 + 80);
    v154 = *(_QWORD *)(a1 + 72);
    v152 = *(_BYTE *)(a1 + 88);
    sub_1BA6E6C54(v154, v153, v152);
  }
  v9 = *(unsigned __int8 *)(v1 + 89);
  if (v9 == 2)
    LOBYTE(v9) = *(_BYTE *)(a1 + 89);
  v149 = v9;
  v10 = *(unsigned __int8 *)(v1 + 90);
  if (v10 == 2)
    LOBYTE(v10) = *(_BYTE *)(a1 + 90);
  v148 = v10;
  swift_beginAccess();
  v11 = *(_QWORD *)(v1 + 96);
  swift_beginAccess();
  v12 = v11;
  v13 = *(_QWORD *)(a1 + 96);
  v207 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v14 = *(_QWORD *)(v12 + 16);
  v15 = *(_QWORD *)(v13 + 16);
  if (__OFADD__(v14, v15))
    goto LABEL_86;
  v161 = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v3, v4, v5);
  sub_1BA6E6C54(v6, v7, v8);
  sub_1BAB18BCC();
  swift_bridgeObjectRetain();
  v160 = v13;
  swift_bridgeObjectRetain();
  sub_1BB8727C0();
  v195 = sub_1BA6E6D30(0, v14, 0, MEMORY[0x1E0DEE9D8]);
  v16 = *(_QWORD *)(v161 + 16);
  if (!v16)
    goto LABEL_26;
  v176 = v15;
  v17 = (char *)(swift_bridgeObjectRetain() + 90);
  do
  {
    v18 = *(_QWORD *)(v17 - 58);
    v19 = *(_QWORD *)(v17 - 50);
    v20 = *(_QWORD *)(v17 - 42);
    v21 = *(_QWORD *)(v17 - 34);
    v22 = *(v17 - 26);
    v23 = *(_QWORD *)(v17 - 18);
    v24 = *(_QWORD *)(v17 - 10);
    v25 = *(v17 - 2);
    v188 = *(v17 - 1);
    v192 = *v17;
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v20, v21, v22);
    sub_1BA6E6C54(v23, v24, v25);
    swift_bridgeObjectRetain();
    v196 = v20;
    sub_1BA6E6C54(v20, v21, v22);
    v201 = v24;
    v204 = v23;
    v198 = v25;
    sub_1BA6E6C54(v23, v24, v25);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = sub_1BA6E35A8(v18, v19);
    v29 = v207[2];
    v30 = (v27 & 1) == 0;
    v31 = v29 + v30;
    if (__OFADD__(v29, v30))
    {
      __break(1u);
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
LABEL_87:
      result = sub_1BB874560();
      __break(1u);
      return result;
    }
    v32 = v27;
    if (v207[3] >= v31)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        sub_1BB4C5EA8();
    }
    else
    {
      sub_1BB4B4564(v31, isUniquelyReferenced_nonNull_native);
      v33 = sub_1BA6E35A8(v18, v19);
      if ((v32 & 1) != (v34 & 1))
        goto LABEL_87;
      v28 = v33;
    }
    v185 = v16;
    if ((v32 & 1) != 0)
    {
      v35 = v207[7] + (v28 << 6);
      v36 = *(_QWORD *)(v35 + 16);
      v37 = *(_QWORD *)(v35 + 24);
      v181 = *(_QWORD *)(v35 + 48);
      v183 = *(_QWORD *)(v35 + 40);
      v38 = *(_BYTE *)(v35 + 32);
      v179 = *(_BYTE *)(v35 + 56);
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v36, v37, v38);
      sub_1BA6E6CC4(v183, v181, v179);
      *(_QWORD *)v35 = v18;
      *(_QWORD *)(v35 + 8) = v19;
      *(_QWORD *)(v35 + 16) = v196;
      *(_QWORD *)(v35 + 24) = v21;
      *(_BYTE *)(v35 + 32) = v22;
      *(_QWORD *)(v35 + 40) = v204;
      *(_QWORD *)(v35 + 48) = v201;
      *(_BYTE *)(v35 + 56) = v198;
      *(_BYTE *)(v35 + 57) = v188;
      *(_BYTE *)(v35 + 58) = v192;
    }
    else
    {
      v207[(v28 >> 6) + 8] |= 1 << v28;
      v39 = (uint64_t *)(v207[6] + 16 * v28);
      *v39 = v18;
      v39[1] = v19;
      v40 = v207[7] + (v28 << 6);
      *(_QWORD *)v40 = v18;
      *(_QWORD *)(v40 + 8) = v19;
      *(_QWORD *)(v40 + 16) = v196;
      *(_QWORD *)(v40 + 24) = v21;
      *(_BYTE *)(v40 + 32) = v22;
      *(_QWORD *)(v40 + 40) = v204;
      *(_QWORD *)(v40 + 48) = v24;
      *(_BYTE *)(v40 + 56) = v198;
      *(_BYTE *)(v40 + 57) = v188;
      *(_BYTE *)(v40 + 58) = v192;
      v41 = v207[2];
      v42 = __OFADD__(v41, 1);
      v43 = v41 + 1;
      if (v42)
        goto LABEL_82;
      v207[2] = v43;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v44 = v195[2];
    v45 = v195[3];
    swift_bridgeObjectRetain();
    if (v44 >= v45 >> 1)
      v195 = sub_1BA6E6D30((_QWORD *)(v45 > 1), v44 + 1, 1, v195);
    v17 += 64;
    v195[2] = v44 + 1;
    v46 = &v195[2 * v44];
    v46[4] = v18;
    v46[5] = v19;
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v196, v21, v22);
    sub_1BA6E6CC4(v204, v201, v198);
    v16 = v185 - 1;
  }
  while (v185 != 1);
  swift_bridgeObjectRelease();
  v15 = v176;
LABEL_26:
  v47 = sub_1BA6E6D30(0, v15, 0, MEMORY[0x1E0DEE9D8]);
  v48 = *(_QWORD *)(v160 + 16);
  if (!v48)
    goto LABEL_66;
  v49 = (_BYTE *)(swift_bridgeObjectRetain() + 90);
  while (2)
  {
    v182 = v48;
    v197 = v47;
    v58 = *(_QWORD *)(v49 - 58);
    v59 = *(_QWORD *)(v49 - 50);
    v60 = *(_QWORD *)(v49 - 42);
    v61 = *(_QWORD *)(v49 - 34);
    v62 = *(v49 - 26);
    v63 = *(_QWORD *)(v49 - 18);
    v64 = *(_QWORD *)(v49 - 10);
    v65 = *(v49 - 2);
    v186 = *(v49 - 1);
    v180 = v49;
    v189 = *v49;
    v66 = v207[2];
    swift_bridgeObjectRetain();
    v199 = v60;
    v67 = v60;
    v68 = v59;
    v205 = v61;
    v202 = v62;
    sub_1BA6E6C54(v67, v61, v62);
    sub_1BA6E6C54(v63, v64, v65);
    v193 = v63;
    v184 = v64;
    if (!v66)
      goto LABEL_46;
    swift_bridgeObjectRetain();
    v69 = sub_1BA6E35A8(v58, v59);
    if ((v70 & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v199, v61, v62);
      v97 = v65;
      sub_1BA6E6C54(v63, v64, v65);
      swift_bridgeObjectRetain();
      v98 = swift_isUniquelyReferenced_nonNull_native();
      v100 = sub_1BA6E35A8(v58, v59);
      v101 = v207[2];
      v102 = (v99 & 1) == 0;
      v103 = v101 + v102;
      if (__OFADD__(v101, v102))
        goto LABEL_81;
      v104 = v99;
      if (v207[3] >= v103)
      {
        if ((v98 & 1) == 0)
          sub_1BB4C5EA8();
      }
      else
      {
        sub_1BB4B4564(v103, v98);
        v105 = sub_1BA6E35A8(v58, v59);
        if ((v104 & 1) != (v106 & 1))
          goto LABEL_87;
        v100 = v105;
      }
      v178 = v58;
      if ((v104 & 1) != 0)
      {
        v107 = v58;
        v108 = v207[7] + (v100 << 6);
        v109 = *(_QWORD *)(v108 + 16);
        v110 = *(_QWORD *)(v108 + 24);
        v111 = *(_QWORD *)(v108 + 40);
        v175 = *(_QWORD *)(v108 + 48);
        v112 = *(_BYTE *)(v108 + 32);
        v173 = *(_BYTE *)(v108 + 56);
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v109, v110, v112);
        sub_1BA6E6CC4(v111, v175, v173);
        *(_QWORD *)v108 = v107;
        *(_QWORD *)(v108 + 8) = v68;
        *(_QWORD *)(v108 + 16) = v199;
        *(_QWORD *)(v108 + 24) = v205;
        *(_BYTE *)(v108 + 32) = v62;
        v113 = v63;
        v114 = v184;
        *(_QWORD *)(v108 + 40) = v63;
        *(_QWORD *)(v108 + 48) = v184;
        v115 = v97;
        *(_BYTE *)(v108 + 56) = v97;
        *(_BYTE *)(v108 + 57) = v186;
        *(_BYTE *)(v108 + 58) = v189;
      }
      else
      {
        v207[(v100 >> 6) + 8] |= 1 << v100;
        v116 = (uint64_t *)(v207[6] + 16 * v100);
        *v116 = v58;
        v116[1] = v59;
        v117 = v207[7] + (v100 << 6);
        *(_QWORD *)v117 = v58;
        *(_QWORD *)(v117 + 8) = v59;
        *(_QWORD *)(v117 + 16) = v199;
        *(_QWORD *)(v117 + 24) = v205;
        *(_BYTE *)(v117 + 32) = v62;
        v113 = v63;
        v114 = v184;
        *(_QWORD *)(v117 + 40) = v63;
        *(_QWORD *)(v117 + 48) = v184;
        *(_BYTE *)(v117 + 56) = v97;
        *(_BYTE *)(v117 + 57) = v186;
        *(_BYTE *)(v117 + 58) = v189;
        v118 = v207[2];
        v42 = __OFADD__(v118, 1);
        v119 = v118 + 1;
        if (v42)
          goto LABEL_83;
        v115 = v97;
        v207[2] = v119;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = v197;
      v120 = v197[2];
      v121 = v197[3];
      swift_bridgeObjectRetain();
      if (v120 >= v121 >> 1)
        v47 = sub_1BA6E6D30((_QWORD *)(v121 > 1), v120 + 1, 1, v197);
      v57 = v182;
      v47[2] = v120 + 1;
      v122 = &v47[2 * v120];
      v122[4] = v178;
      v122[5] = v68;
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v199, v205, v202);
      sub_1BA6E6CC4(v113, v114, v115);
      goto LABEL_30;
    }
    v170 = v65;
    v71 = v207[7] + (v69 << 6);
    v174 = *(_QWORD *)v71;
    v177 = *(_QWORD *)(v71 + 8);
    v73 = *(_QWORD *)(v71 + 16);
    v72 = *(_QWORD *)(v71 + 24);
    v74 = *(unsigned __int8 *)(v71 + 32);
    v75 = *(_QWORD *)(v71 + 40);
    v76 = *(_QWORD *)(v71 + 48);
    v77 = *(unsigned __int8 *)(v71 + 56);
    v78 = *(unsigned __int8 *)(v71 + 57);
    v167 = *(unsigned __int8 *)(v71 + 58);
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v73, v72, v74);
    sub_1BA6E6C54(v75, v76, v77);
    swift_bridgeObjectRelease();
    v79 = v73;
    v172 = v72;
    v80 = v74;
    v171 = v74;
    v169 = v77;
    if (v74 > 0xFD)
    {
      v79 = v199;
      v72 = v205;
      sub_1BA6E6C54(v199, v205, v202);
      v80 = v202;
    }
    v164 = v80;
    v165 = v72;
    v166 = v79;
    v81 = v75;
    v82 = v76;
    v83 = v77;
    if (v77 >= 0xFE)
    {
      v81 = v193;
      v83 = v170;
      sub_1BA6E6C54(v193, v64, v170);
      v82 = v64;
    }
    v162 = v82;
    v163 = v81;
    v84 = v186;
    if (v78 != 2)
      v84 = v78;
    v187 = v84;
    v85 = v189;
    if (v167 != 2)
      v85 = v167;
    v190 = v85;
    swift_bridgeObjectRetain_n();
    v86 = v73;
    sub_1BA6E6C54(v73, v172, v74);
    sub_1BA6E6C54(v75, v76, v77);
    v87 = swift_isUniquelyReferenced_nonNull_native();
    v89 = sub_1BA6E35A8(v174, v177);
    v90 = v207[2];
    v91 = (v88 & 1) == 0;
    v92 = v90 + v91;
    if (__OFADD__(v90, v91))
      goto LABEL_84;
    v93 = v88;
    if (v207[3] >= v92)
    {
      if ((v87 & 1) == 0)
        sub_1BB4C5EA8();
      v94 = v177;
    }
    else
    {
      sub_1BB4B4564(v92, v87);
      v94 = v177;
      v95 = sub_1BA6E35A8(v174, v177);
      if ((v93 & 1) != (v96 & 1))
        goto LABEL_87;
      v89 = v95;
    }
    v168 = v76;
    if ((v93 & 1) != 0)
    {
      v50 = v207[7] + (v89 << 6);
      v51 = *(_QWORD *)(v50 + 16);
      v52 = *(_QWORD *)(v50 + 24);
      v54 = *(_QWORD *)(v50 + 40);
      v53 = *(_QWORD *)(v50 + 48);
      v55 = *(_BYTE *)(v50 + 32);
      v56 = *(_BYTE *)(v50 + 56);
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v51, v52, v55);
      sub_1BA6E6CC4(v54, v53, v56);
      *(_QWORD *)v50 = v174;
      *(_QWORD *)(v50 + 8) = v177;
      *(_QWORD *)(v50 + 16) = v166;
      *(_QWORD *)(v50 + 24) = v165;
      *(_BYTE *)(v50 + 32) = v164;
      *(_QWORD *)(v50 + 40) = v163;
      *(_QWORD *)(v50 + 48) = v162;
      *(_BYTE *)(v50 + 56) = v83;
      *(_BYTE *)(v50 + 57) = v187;
      *(_BYTE *)(v50 + 58) = v190;
    }
    else
    {
      v207[(v89 >> 6) + 8] |= 1 << v89;
      v123 = (uint64_t *)(v207[6] + 16 * v89);
      *v123 = v174;
      v123[1] = v94;
      v124 = v207[7] + (v89 << 6);
      *(_QWORD *)v124 = v174;
      *(_QWORD *)(v124 + 8) = v94;
      *(_QWORD *)(v124 + 16) = v166;
      *(_QWORD *)(v124 + 24) = v165;
      *(_BYTE *)(v124 + 32) = v164;
      *(_QWORD *)(v124 + 40) = v163;
      *(_QWORD *)(v124 + 48) = v162;
      *(_BYTE *)(v124 + 56) = v83;
      *(_BYTE *)(v124 + 57) = v187;
      *(_BYTE *)(v124 + 58) = v190;
      v125 = v207[2];
      v42 = __OFADD__(v125, 1);
      v126 = v125 + 1;
      if (v42)
        goto LABEL_85;
      v207[2] = v126;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v86, v172, v171);
    sub_1BA6E6CC4(v75, v168, v169);
    swift_bridgeObjectRelease();
    sub_1BA6E6CC4(v199, v205, v202);
    sub_1BA6E6CC4(v193, v184, v170);
    v47 = v197;
    v57 = v182;
LABEL_30:
    v49 = v180 + 64;
    v48 = v57 - 1;
    if (v48)
      continue;
    break;
  }
  swift_bridgeObjectRelease();
LABEL_66:
  swift_bridgeObjectRetain();
  v127 = swift_bridgeObjectRetain();
  sub_1BA6E6E94(v127);
  v128 = v47[2];
  if (v128)
  {
    swift_bridgeObjectRetain();
    v129 = v47 + 5;
    v130 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    do
    {
      if (v207[2])
      {
        v131 = *(v129 - 1);
        v132 = *v129;
        swift_bridgeObjectRetain_n();
        v133 = sub_1BA6E35A8(v131, v132);
        if ((v134 & 1) != 0)
        {
          v135 = v207[7] + (v133 << 6);
          v206 = *(_QWORD *)v135;
          v136 = *(_QWORD *)(v135 + 16);
          v137 = *(_QWORD *)(v135 + 24);
          v138 = *(_BYTE *)(v135 + 32);
          v139 = *(_QWORD *)(v135 + 40);
          v140 = *(_QWORD *)(v135 + 48);
          v141 = *(_BYTE *)(v135 + 56);
          v194 = *(_BYTE *)(v135 + 57);
          v191 = *(_BYTE *)(v135 + 58);
          v203 = *(_QWORD *)(v135 + 8);
          swift_bridgeObjectRetain();
          v200 = v138;
          sub_1BA6E6C54(v136, v137, v138);
          sub_1BA6E6C54(v139, v140, v141);
          swift_bridgeObjectRelease_n();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v130 = sub_1BB38D5A4(0, v130[2] + 1, 1, v130);
          v143 = v130[2];
          v142 = v130[3];
          v144 = v130;
          if (v143 >= v142 >> 1)
            v144 = sub_1BB38D5A4((_QWORD *)(v142 > 1), v143 + 1, 1, v130);
          v130 = v144;
          v144[2] = v143 + 1;
          v145 = &v144[8 * v143];
          v145[4] = v206;
          v145[5] = v203;
          v145[6] = v136;
          v145[7] = v137;
          *((_BYTE *)v145 + 64) = v200;
          v145[9] = v139;
          v145[10] = v140;
          *((_BYTE *)v145 + 88) = v141;
          *((_BYTE *)v145 + 89) = v194;
          *((_BYTE *)v145 + 90) = v191;
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v129 += 2;
      --v128;
    }
    while (v128);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v130 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v146 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v146 + 16) = v151;
  *(_QWORD *)(v146 + 24) = v159;
  *(_QWORD *)(v146 + 32) = v150;
  *(_QWORD *)(v146 + 40) = v158;
  *(_QWORD *)(v146 + 48) = v157;
  *(_QWORD *)(v146 + 56) = v156;
  *(_BYTE *)(v146 + 64) = v155;
  *(_QWORD *)(v146 + 72) = v154;
  *(_QWORD *)(v146 + 80) = v153;
  *(_BYTE *)(v146 + 88) = v152;
  *(_BYTE *)(v146 + 89) = v149;
  *(_BYTE *)(v146 + 90) = v148;
  swift_beginAccess();
  *(_QWORD *)(v146 + 96) = v130;
  return v146;
}

uint64_t sub_1BAB17688(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  unint64_t v25;
  size_t v26;
  uint64_t isStackAllocationSafe;
  uint64_t *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  _QWORD *v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  char v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  unint64_t v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unsigned __int8 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int v81;
  char v82;
  uint64_t result;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  int v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void *v106;
  uint64_t v107[7];

  v105 = a1;
  v106 = 0;
  v107[6] = *MEMORY[0x1E0C80C00];
  v91 = *v1;
  swift_beginAccess();
  v2 = v1[12];
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  v4 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v87 = sub_1BB38D5A4(0, v3, 0, MEMORY[0x1E0DEE9D8]);
  v86 = sub_1BB38D480(0, v3, 0, v4);
  v5 = *(_QWORD *)(v2 + 16);
  v90 = v2;
  v89 = v5;
  if (!v5)
  {
LABEL_29:
    sub_1BAB18C2C(0);
    v48 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v49 = *(_QWORD *)(v48 + 16);
    v101 = v48;
    if (v49)
    {
      v50 = (unsigned __int8 *)(v48 + 90);
      v51 = v87;
      do
      {
        v104 = *(_QWORD *)(v50 - 58);
        v52 = *(_QWORD *)(v50 - 50);
        v53 = *(_QWORD *)(v50 - 42);
        v54 = *(_QWORD *)(v50 - 34);
        v55 = *(v50 - 26);
        v56 = *(_QWORD *)(v50 - 18);
        v57 = *(_QWORD *)(v50 - 10);
        v58 = *(v50 - 2);
        LODWORD(v103) = *(v50 - 1);
        LODWORD(v102) = *v50;
        v106 = (void *)v52;
        swift_bridgeObjectRetain();
        v105 = v53;
        sub_1BA6E6C54(v53, v54, v55);
        sub_1BA6E6C54(v56, v57, v58);
        v60 = v51[2];
        v59 = v51[3];
        if (v60 >= v59 >> 1)
          v51 = sub_1BB38D5A4((_QWORD *)(v59 > 1), v60 + 1, 1, v51);
        v50 += 72;
        v51[2] = v60 + 1;
        v61 = &v51[8 * v60];
        v62 = (uint64_t)v106;
        v61[4] = v104;
        v61[5] = v62;
        v61[6] = v105;
        v61[7] = v54;
        *((_BYTE *)v61 + 64) = v55;
        v61[9] = v56;
        v61[10] = v57;
        *((_BYTE *)v61 + 88) = v58;
        *((_BYTE *)v61 + 89) = v103;
        *((_BYTE *)v61 + 90) = v102;
        --v49;
      }
      while (v49);
    }
    else
    {
      v51 = v87;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v63 = v51[2];
    if (v63)
    {
      v64 = v85;
      swift_retain();
      swift_bridgeObjectRetain();
      v87 = v51;
      v65 = (unsigned __int8 *)v51 + 90;
      do
      {
        v67 = *(_QWORD *)(v65 - 42);
        v68 = *(_QWORD *)(v65 - 34);
        v69 = *(v65 - 26);
        v70 = *(_QWORD *)(v65 - 18);
        v105 = *(_QWORD *)(v65 - 10);
        v106 = (void *)v70;
        LODWORD(v104) = *(v65 - 2);
        v71 = *(v65 - 1);
        v100 = *v65;
        v72 = swift_allocObject();
        swift_beginAccess();
        v74 = v64[2];
        v73 = v64[3];
        swift_beginAccess();
        *(_QWORD *)(v72 + 16) = v74;
        *(_QWORD *)(v72 + 24) = v73;
        v99 = v73;
        v75 = v64[5];
        v76 = v64;
        *(_QWORD *)(v72 + 32) = v64[4];
        *(_QWORD *)(v72 + 40) = v75;
        v98 = v75;
        v103 = v67;
        v102 = v68;
        v77 = v68;
        v78 = v69;
        LODWORD(v101) = v69;
        if (v69 >= 0xFE)
        {
          v67 = v76[6];
          v77 = v76[7];
          v78 = *((_BYTE *)v76 + 64);
          sub_1BA6E6C54(v67, v77, v78);
        }
        *(_QWORD *)(v72 + 48) = v67;
        *(_QWORD *)(v72 + 56) = v77;
        v80 = v105;
        v79 = (uint64_t)v106;
        v81 = v104;
        *(_BYTE *)(v72 + 64) = v78;
        if (v81 >= 0xFE)
        {
          v79 = v76[9];
          v80 = v76[10];
          LOBYTE(v81) = *((_BYTE *)v76 + 88);
          sub_1BA6E6C54(v79, v80, v81);
        }
        *(_QWORD *)(v72 + 72) = v79;
        *(_QWORD *)(v72 + 80) = v80;
        *(_BYTE *)(v72 + 88) = v81;
        if (v71 == 2)
          LOBYTE(v71) = *((_BYTE *)v76 + 89);
        *(_BYTE *)(v72 + 89) = v71;
        v82 = v100;
        if (v100 == 2)
          v82 = *((_BYTE *)v76 + 90);
        v65 += 64;
        *(_BYTE *)(v72 + 90) = v82;
        swift_beginAccess();
        v66 = v76[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v103, v102, v101);
        sub_1BA6E6C54((uint64_t)v106, v105, v104);
        swift_bridgeObjectRetain();
        swift_release();
        swift_beginAccess();
        *(_QWORD *)(v72 + 96) = v66;
        v64 = (_QWORD *)v72;
        --v63;
      }
      while (v63);
      swift_bridgeObjectRelease();
    }
    else
    {
      v72 = (uint64_t)v85;
      swift_retain();
    }
    swift_bridgeObjectRelease();
    return v72;
  }
  v88 = v2 + 32;
  swift_bridgeObjectRetain();
  v6 = 0;
LABEL_5:
  if (v6 >= *(_QWORD *)(v2 + 16))
    goto LABEL_51;
  v11 = v88 + (v6 << 6);
  v12 = *(_QWORD *)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_QWORD *)(v11 + 16);
  v15 = *(_QWORD *)(v11 + 24);
  v16 = *(unsigned __int8 *)(v11 + 32);
  v7 = *(_QWORD *)(v11 + 40);
  v8 = *(_QWORD *)(v11 + 48);
  v17 = *(unsigned __int8 *)(v11 + 56);
  v93 = *(unsigned __int8 *)(v11 + 57);
  v94 = *(unsigned __int8 *)(v11 + 58);
  swift_bridgeObjectRetain();
  v99 = v14;
  v102 = v15;
  LODWORD(v101) = v16;
  sub_1BA6E6C54(v14, v15, v16);
  v100 = v17;
  sub_1BA6E6C54(v7, v8, v17);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v92 = v12;
  v107[0] = v12;
  v107[1] = v13;
  swift_bridgeObjectRetain();
  v18 = sub_1BA6E583C(v107);
  swift_bridgeObjectRelease();
  v104 = *(_QWORD *)(v18 + 16);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = v100;
    v10 = v99;
    v2 = v90;
    goto LABEL_4;
  }
  v98 = v13;
  v95 = v8;
  v96 = v7;
  v97 = v6;
  v19 = 0;
  v20 = (uint64_t *)(v18 + 64);
  while (1)
  {
    if (v19 >= *(_QWORD *)(v18 + 16))
    {
      __break(1u);
LABEL_51:
      __break(1u);
    }
    v103 = *(v20 - 2);
    v21 = *(v20 - 1);
    v22 = *v20;
    v23 = *(_BYTE *)(v21 + 32);
    v24 = v23 & 0x3F;
    v25 = (unint64_t)((1 << v23) + 63) >> 6;
    v26 = 8 * v25;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v24 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v28 = (uint64_t *)swift_slowAlloc();
    bzero(v28, v26);
    v32 = v25;
    v30 = v106;
    v31 = sub_1BA6EB5B4((uint64_t)v28, v32, v21, v105);
    swift_bridgeObjectRelease();
    if (v30)
      goto LABEL_53;
    v106 = 0;
    MEMORY[0x1BCCE5C38](v28, -1, -1);
LABEL_18:
    v33 = sub_1BA6EB330(v31, v21);
    swift_release();
    if ((v33 & 1) != 0 && (sub_1BA6EBD20(v105, v22) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      if (v103 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v99, v102, v101);
        v7 = v96;
        v8 = v95;
        sub_1BA6E6C54(v96, v95, v100);
        v41 = v87;
        v43 = v87[2];
        v42 = v87[3];
        v2 = v90;
        v6 = v97;
        if (v43 >= v42 >> 1)
          v41 = sub_1BB38D5A4((_QWORD *)(v42 > 1), v43 + 1, 1, v87);
        v44 = v94;
        v45 = v93;
        v46 = v92;
        v41[2] = v43 + 1;
        v87 = v41;
        v47 = &v41[8 * v43];
        v47[4] = v46;
        v10 = v99;
        v47[5] = v98;
        v47[6] = v10;
        v47[7] = v102;
        *((_BYTE *)v47 + 64) = v101;
        v47[9] = v7;
        v47[10] = v8;
        v9 = v100;
        *((_BYTE *)v47 + 88) = v100;
        *((_BYTE *)v47 + 89) = v45;
        *((_BYTE *)v47 + 90) = v44;
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v99, v102, v101);
        v7 = v96;
        v8 = v95;
        sub_1BA6E6C54(v96, v95, v100);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v34 = v86;
        v36 = v86[2];
        v35 = v86[3];
        v2 = v90;
        v6 = v97;
        if (v36 >= v35 >> 1)
          v34 = sub_1BB38D480((_QWORD *)(v35 > 1), v36 + 1, 1, v86);
        v37 = v94;
        v38 = v93;
        v39 = v92;
        v34[2] = v36 + 1;
        v86 = v34;
        v40 = &v34[9 * v36];
        v40[4] = v39;
        v10 = v99;
        v40[5] = v98;
        v40[6] = v10;
        v40[7] = v102;
        *((_BYTE *)v40 + 64) = v101;
        v40[9] = v7;
        v40[10] = v8;
        v9 = v100;
        *((_BYTE *)v40 + 88) = v100;
        *((_BYTE *)v40 + 89) = v38;
        *((_BYTE *)v40 + 90) = v37;
        v40[12] = v103;
        swift_bridgeObjectRelease();
      }
LABEL_4:
      ++v6;
      sub_1BA6E6CC4(v10, v102, v101);
      sub_1BA6E6CC4(v7, v8, v9);
      if (v6 == v89)
      {
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      goto LABEL_5;
    }
    ++v19;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 += 5;
    if (v104 == v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = v90;
      v6 = v97;
      v7 = v96;
      v8 = v95;
      v9 = v100;
      v10 = v99;
      goto LABEL_4;
    }
  }
  v28 = &v84;
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  bzero((char *)&v84 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v26);
  v29 = v25;
  v30 = v106;
  v31 = sub_1BA6EB5B4((uint64_t)&v84 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v29, v21, v105);
  swift_bridgeObjectRelease();
  if (!v30)
  {
    v106 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_53:

  result = MEMORY[0x1BCCE5C38](v28, -1, -1);
  __break(1u);
  return result;
}

uint64_t sub_1BAB18108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int16 v14;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v0 + 40);
  v11 = *(_QWORD *)(v0 + 32);
  v12 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 48);
  v4 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 80);
  v13 = *(_QWORD *)(v0 + 72);
  v14 = *(_WORD *)(v0 + 89);
  v6 = *(_BYTE *)(v0 + 64);
  v7 = *(_BYTE *)(v0 + 88);
  swift_beginAccess();
  v8 = *(_QWORD *)(v0 + 96);
  v9 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v9 + 16) = v12;
  *(_QWORD *)(v9 + 24) = v1;
  *(_QWORD *)(v9 + 32) = v11;
  *(_QWORD *)(v9 + 40) = v2;
  *(_QWORD *)(v9 + 48) = v3;
  *(_QWORD *)(v9 + 56) = v4;
  *(_BYTE *)(v9 + 64) = v6;
  *(_QWORD *)(v9 + 72) = v13;
  *(_QWORD *)(v9 + 80) = v5;
  *(_BYTE *)(v9 + 88) = v7;
  *(_WORD *)(v9 + 89) = v14;
  swift_beginAccess();
  *(_QWORD *)(v9 + 96) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6E6C54(v3, v4, v6);
  sub_1BA6E6C54(v13, v5, v7);
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t FormatWebEmbedNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatWebEmbedNodeStyle.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_1BA6E6CC4(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB182D4(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed23FormatWebEmbedNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatWebEmbedNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatWebEmbedNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.Selector.errorCornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 56);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatWebEmbedNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 57);
}

uint64_t FormatWebEmbedNodeStyle.Selector.showsLoadingSpinner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 58);
}

uint64_t sub_1BAB1832C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 64);
  return result;
}

uint64_t _s8NewsFeed23FormatWebEmbedNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  unsigned int v11;
  char v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v7 = *(unsigned __int8 *)(a1 + 56);
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(unsigned __int8 *)(a2 + 32);
  v23 = *(_QWORD *)(a2 + 40);
  v24 = *(_QWORD *)(a2 + 48);
  v11 = *(unsigned __int8 *)(a2 + 56);
  v21 = *(unsigned __int8 *)(a2 + 57);
  v22 = *(unsigned __int8 *)(a1 + 57);
  v19 = *(unsigned __int8 *)(a2 + 58);
  v20 = *(unsigned __int8 *)(a1 + 58);
  if (*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
  {
    v12 = sub_1BB874398();
    result = 0;
    if ((v12 & 1) == 0)
      return result;
  }
  if (v4 > 0xFD)
  {
    if (v10 > 0xFD)
      goto LABEL_11;
LABEL_9:
    sub_1BA6E6C54(v9, v8, v10);
    sub_1BA6E6CC4(v2, v3, v4);
    v14 = v9;
    v15 = v8;
    v16 = v10;
LABEL_17:
    sub_1BA6E6CC4(v14, v15, v16);
    return 0;
  }
  v28 = v2;
  v29 = v3;
  v30 = v4;
  if (v10 > 0xFD)
  {
    sub_1BA6F2B04(v2, v3, v4);
    sub_1BA6F2B04(v2, v3, v4);
    sub_1BA6F2B88(v2, v3, v4);
    goto LABEL_9;
  }
  v25 = v9;
  v26 = v8;
  v27 = v10;
  sub_1BA6E6C54(v2, v3, v4);
  sub_1BA6F2B04(v2, v3, v4);
  v17 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v28, (uint64_t)&v25);
  sub_1BA6F2B88(v28, v29, v30);
  sub_1BA6E6CC4(v2, v3, v4);
  if ((v17 & 1) == 0)
    return 0;
LABEL_11:
  if (v7 <= 0xFD)
  {
    v28 = v6;
    v29 = v5;
    v30 = v7;
    if (v11 <= 0xFD)
    {
      v25 = v23;
      v26 = v24;
      v27 = v11;
      sub_1BA6E6C54(v6, v5, v7);
      sub_1BA6F2B04(v6, v5, v7);
      v18 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v28, (uint64_t)&v25);
      sub_1BA6F2B88(v28, v29, v30);
      sub_1BA6E6CC4(v6, v5, v7);
      if ((v18 & 1) == 0)
        return 0;
      goto LABEL_21;
    }
    sub_1BA6F2B04(v6, v5, v7);
    sub_1BA6F2B04(v6, v5, v7);
    sub_1BA6F2B88(v6, v5, v7);
    goto LABEL_16;
  }
  if (v11 <= 0xFD)
  {
LABEL_16:
    sub_1BA6E6C54(v23, v24, v11);
    sub_1BA6E6CC4(v6, v5, v7);
    v14 = v23;
    v15 = v24;
    v16 = v11;
    goto LABEL_17;
  }
LABEL_21:
  if (v22 == 2)
  {
    if (v21 == 2)
      goto LABEL_26;
    return 0;
  }
  result = 0;
  if (v21 != 2 && ((((v22 & 1) == 0) ^ v21) & 1) != 0)
  {
LABEL_26:
    if (v20 == 2)
    {
      if (v19 == 2)
        return 1;
    }
    else if (v19 != 2 && ((((v20 & 1) == 0) ^ v19) & 1) != 0)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1BAB18638(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAB1871C(&qword_1EF2B02C0, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAB1866C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAB1871C(&qword_1ED3CA660, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  result = sub_1BAB1871C(&qword_1ED3A72F8, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BAB186B8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAB1871C(&qword_1ED3CA660, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  a1[2] = sub_1BAB1871C(&qword_1ED3A72F8, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  result = sub_1BAB1871C(&qword_1EF2B02C8, (uint64_t)&protocol conformance descriptor for FormatWebEmbedNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAB1871C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatWebEmbedNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BAB18758(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB1877C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB1877C()
{
  unint64_t result;

  result = qword_1EF2B02D0;
  if (!qword_1EF2B02D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeStyle.Selector, &type metadata for FormatWebEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B02D0);
  }
  return result;
}

unint64_t sub_1BAB187C0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA828874();
  result = sub_1BA8288B8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB187EC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA828874();
  a1[2] = sub_1BA8288B8();
  result = sub_1BAB18820();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB18820()
{
  unint64_t result;

  result = qword_1EF2B02D8;
  if (!qword_1EF2B02D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedNodeStyle.Selector, &type metadata for FormatWebEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2B02D8);
  }
  return result;
}

uint64_t sub_1BAB18864@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB188B0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatWebEmbedNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatWebEmbedNodeStyle.__allocating_init(identifier:class:cornerRadius:errorCornerRadius:ignoresSmartInvertColors:showsLoadingSpinner:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t assignWithCopy for FormatWebEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  _OWORD *v17;
  unsigned int v18;
  __int128 v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v11 = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(a2 + 24);
      sub_1BA6F2B04(v11, v12, *(_BYTE *)(a2 + 32));
      v13 = *(_QWORD *)(a1 + 16);
      v14 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v12;
      v15 = *(_BYTE *)(a1 + 32);
      *(_BYTE *)(a1 + 32) = v6;
      sub_1BA6F2B88(v13, v14, v15);
    }
    else
    {
      sub_1BA9F0244(a1 + 16);
      v8 = *(_BYTE *)(a2 + 32);
      *v4 = *v5;
      *(_BYTE *)(a1 + 32) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_1BA6F2B04(v9, v10, *(_BYTE *)(a2 + 32));
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v6;
  }
  else
  {
    v7 = *v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *v4 = v7;
  }
  v16 = (_OWORD *)(a1 + 40);
  v17 = (_OWORD *)(a2 + 40);
  v18 = *(unsigned __int8 *)(a2 + 56);
  if (*(unsigned __int8 *)(a1 + 56) <= 0xFDu)
  {
    if (v18 <= 0xFD)
    {
      v23 = *(_QWORD *)(a2 + 40);
      v24 = *(_QWORD *)(a2 + 48);
      sub_1BA6F2B04(v23, v24, *(_BYTE *)(a2 + 56));
      v25 = *(_QWORD *)(a1 + 40);
      v26 = *(_QWORD *)(a1 + 48);
      *(_QWORD *)(a1 + 40) = v23;
      *(_QWORD *)(a1 + 48) = v24;
      v27 = *(_BYTE *)(a1 + 56);
      *(_BYTE *)(a1 + 56) = v18;
      sub_1BA6F2B88(v25, v26, v27);
    }
    else
    {
      sub_1BA9F0244(a1 + 40);
      v20 = *(_BYTE *)(a2 + 56);
      *v16 = *v17;
      *(_BYTE *)(a1 + 56) = v20;
    }
  }
  else if (v18 <= 0xFD)
  {
    v21 = *(_QWORD *)(a2 + 40);
    v22 = *(_QWORD *)(a2 + 48);
    sub_1BA6F2B04(v21, v22, *(_BYTE *)(a2 + 56));
    *(_QWORD *)(a1 + 40) = v21;
    *(_QWORD *)(a1 + 48) = v22;
    *(_BYTE *)(a1 + 56) = v18;
  }
  else
  {
    v19 = *v17;
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *v16 = v19;
  }
  *(_BYTE *)(a1 + 57) = *(_BYTE *)(a2 + 57);
  *(_BYTE *)(a1 + 58) = *(_BYTE *)(a2 + 58);
  return a1;
}

__n128 __swift_memcpy59_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 43) = *(_OWORD *)(a2 + 43);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for FormatWebEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 > 0xFD)
    goto LABEL_4;
  v7 = *(unsigned __int8 *)(a2 + 32);
  if (v7 > 0xFD)
  {
    sub_1BA9F0244(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *v5;
  *(_BYTE *)(a1 + 32) = v7;
  sub_1BA6F2B88(v8, v9, v6);
LABEL_6:
  v10 = (_OWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a1 + 56);
  if (v11 <= 0xFD)
  {
    v12 = *(unsigned __int8 *)(a2 + 56);
    if (v12 <= 0xFD)
    {
      v13 = *(_QWORD *)(a1 + 40);
      v14 = *(_QWORD *)(a1 + 48);
      *(_OWORD *)(a1 + 40) = *v10;
      *(_BYTE *)(a1 + 56) = v12;
      sub_1BA6F2B88(v13, v14, v11);
      goto LABEL_11;
    }
    sub_1BA9F0244(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *v10;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
LABEL_11:
  *(_WORD *)(a1 + 57) = *(_WORD *)(a2 + 57);
  return a1;
}

ValueMetadata *type metadata accessor for FormatWebEmbedNodeStyle.Selector()
{
  return &type metadata for FormatWebEmbedNodeStyle.Selector;
}

void sub_1BAB18BCC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC28)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC28);
  }
}

void sub_1BAB18C2C(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3A8438)
  {
    v2 = sub_1BAB18C84();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatWebEmbedNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3A8438);
  }
}

unint64_t sub_1BAB18C84()
{
  unint64_t result;

  result = qword_1ED3A72F0;
  if (!qword_1ED3A72F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89F08C, &type metadata for FormatWebEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3A72F0);
  }
  return result;
}

_QWORD *sub_1BAB18CC8(double *a1, uint64_t a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t (*v12)();
  uint64_t v13;
  uint64_t (**v14)();
  uint64_t v15;
  char *v16;
  void (*v17)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char v23;
  _QWORD *v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v33;
  uint64_t v35;
  _BYTE v36[40];
  uint64_t v37;
  __int128 v38;
  _QWORD v39[2];
  char v40;
  _OWORD v41[2];
  uint64_t v42;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  sub_1BA8C88C8(0);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v35 = *(_QWORD *)(v6 + 72);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v9 = (_QWORD *)(v8 + v7);
  if (a2)
  {
    v10 = *(_QWORD *)(a2 + 40);
    v33 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)v36 = sub_1BAB18108();
    memset(&v36[8], 0, 32);
    v37 = 0;
    v38 = xmmword_1BB89EF80;
    v11 = swift_allocObject();
    sub_1BA9F1094((uint64_t)v36, v11 + 16);
    swift_bridgeObjectRetain();
    v12 = sub_1BA9F10D0;
  }
  else
  {
    v11 = 0;
    v33 = 0;
    v10 = 0xE000000000000000;
    v12 = sub_1BB739F50;
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (uint64_t (**)())((char *)v9 + *(int *)(v13 + 24));
  *v14 = v12;
  v14[1] = (uint64_t (*)())v11;
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *(_QWORD *)(v8 + v7) = v33;
  v9[2] = 0;
  v9[3] = 0;
  v9[1] = v10;
  v16 = (char *)v9 + *(int *)(v13 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  v17 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v17(v9, 0, 1, v13);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v8, v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v18 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v18;
  *(_QWORD *)(v18 + 48) = v42;
  v19 = v41[1];
  *(_OWORD *)(v18 + 16) = v41[0];
  *(_OWORD *)(v18 + 32) = v19;
  v20 = v35;
  v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87FC80;
  v22 = (_QWORD *)(v21 + v7);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x65626D4520626557, 0xE900000000000064, v22);
  v17(v22, 0, 1, v13);
  if (a2)
  {
    sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, *(_BYTE *)(a2 + 89), (_QWORD *)((char *)v22 + v35));
    v17((_QWORD *)((char *)v22 + v35), 0, 1, v13);
    v23 = *(_BYTE *)(a2 + 90);
  }
  else
  {
    v23 = 2;
    sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, 2, (_QWORD *)((char *)v22 + v35));
    v20 = v35;
    v17((_QWORD *)((char *)v22 + v35), 0, 1, v13);
  }
  v24 = (_QWORD *)((char *)v22 + 2 * v20);
  sub_1BAAF6B38(0xD000000000000015, 0x80000001BB96C780, v23, v24);
  v17(v24, 0, 1, v13);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v21, v36);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v25 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v25;
  *(_QWORD *)(v25 + 48) = *(_QWORD *)&v36[32];
  v26 = *(_OWORD *)&v36[16];
  *(_OWORD *)(v25 + 16) = *(_OWORD *)v36;
  *(_OWORD *)(v25 + 32) = v26;
  if (a2)
  {
    v27 = *(_QWORD *)(a2 + 48);
    v28 = *(_QWORD *)(a2 + 56);
    v29 = *(_BYTE *)(a2 + 64);
    sub_1BA6E6C54(v27, v28, v29);
  }
  else
  {
    v27 = 0;
    v28 = 0;
    v29 = -2;
  }
  v39[0] = v27;
  v39[1] = v28;
  v40 = v29;
  v30 = sub_1BB4D88A0(a1, (uint64_t)v39);
  sub_1BA6E6CC4(v27, v28, v29);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v30;
  v31 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v31;
}

uint64_t sub_1BAB191A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB191DC()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

_QWORD *sub_1BAB1920C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v6 = v5;
  v11 = MEMORY[0x1E0DEE9E0];
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders) = MEMORY[0x1E0DEE9E0];
  v5[2] = a3;
  sub_1BA75290C(a1, (uint64_t)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext);
  if ((a4 & 1) != 0)
  {
    type metadata accessor for FormatSlot();
    swift_allocObject();
    swift_retain();
    v12 = swift_bridgeObjectRetain();
    v20 = a5;
    v13 = sub_1BB867648(v12);
    v14 = v13[2];
    v15 = v13[3];
    swift_bridgeObjectRetain();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1BB4BF840((uint64_t)v13, v14, v15, isUniquelyReferenced_nonNull_native);
    a5 = v20;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_slots) = a2;
  *((_BYTE *)v5 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_wildcardSlotFallback) = a4 & 1;
  v17 = *(_QWORD *)(a1 + 64);
  v18 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA752890(a1);
  v6[3] = v11;
  v6[4] = v11;
  v6[5] = v17;
  v6[6] = a2;
  v6[7] = v11;
  v6[8] = v11;
  v6[9] = v11;
  v6[10] = v18;
  *(_QWORD *)((char *)v6 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_sortBy) = a5;
  return v6;
}

uint64_t sub_1BAB19384(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD v32[5];

  v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v25[0] = (uint64_t)v25 - v7;
  v9 = *a1;
  v8 = a1[1];
  v11 = a1[2];
  v10 = a1[3];
  v12 = a1[4];
  v13 = a1[5];
  v14 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
  swift_beginAccess();
  sub_1BA75290C(v14, (uint64_t)v5);
  sub_1BA4C010C((uint64_t)(v5 + 8), (uint64_t)v32);
  v26 = v9;
  v27 = v8;
  v15 = v9;
  v28 = v11;
  v29 = v10;
  v16 = v12;
  v30 = v12;
  v31 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v25[0];
  sub_1BACA0CC4((uint64_t)v32, &v26, v25[0]);
  sub_1BA752890((uint64_t)v5);
  sub_1BA65E330();
  v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1BB8856E0;
  v26 = v15;
  v27 = v8;
  v28 = v11;
  v29 = v10;
  v30 = v16;
  v31 = v13;
  type metadata accessor for FormatSlot();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(_QWORD *)(v18 + 32) = sub_1BB867880(&v26);
  v26 = v18;
  sub_1BB872DCC();
  v19 = v26;
  sub_1BA75290C(v17, (uint64_t)v5);
  v26 = v19;
  sub_1BA4B07F0(0, &qword_1ED3A2F18, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlot, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BAB199C0();
  sub_1BA4A2870(&qword_1ED3A2970, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlot, (uint64_t)&unk_1BB9594A4);
  swift_bridgeObjectRetain();
  v20 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  type metadata accessor for FormatNodeAuxiliaryBinder(0);
  v21 = swift_allocObject();
  sub_1BAB19A20((uint64_t)v5, v21 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext);
  *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_slots) = v20;
  v22 = (_QWORD *)(v25[1] + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
  swift_beginAccess();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v32[0] = *v22;
  *v22 = 0x8000000000000000;
  sub_1BB4BE9C4(v21, v15, v8, isUniquelyReferenced_nonNull_native);
  *v22 = v32[0];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  return sub_1BA752890(v17);
}

Swift::Int sub_1BAB19670(Swift::String_optional *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  Swift::Int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  Swift::String_optional v20;
  uint64_t v22;

  v3 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)((char *)&a1->value._countAndFlagsBits + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  v7 = *((unsigned __int8 *)&a1[3].value._countAndFlagsBits
       + OBJC_IVAR____TtC8NewsFeed23FormatNodeBinderContext_auxiliary);
  if (v7 != 255)
  {
    if ((v7 & 1) != 0)
    {
      v11 = *v6;
      v10 = v6[1];
      v12 = v6[4];
      v13 = (void *)v6[5];
      v14 = (uint64_t *)(v1 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_auxiliaryBinders);
      swift_beginAccess();
      v15 = *v14;
      if (*(_QWORD *)(v15 + 16))
      {
        swift_bridgeObjectRetain();
        v16 = sub_1BA6E35A8(v11, v10);
        if ((v17 & 1) != 0)
        {
          v18 = *(_QWORD *)(*(_QWORD *)(v15 + 56) + 8 * v16);
          swift_endAccess();
          swift_retain();
          swift_bridgeObjectRelease();
          v19 = v18
              + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext;
          swift_beginAccess();
          sub_1BA75290C(v19, (uint64_t)v5);
          v20.value._countAndFlagsBits = v12;
          v20.value._object = v13;
          v9 = GroupLayoutBindingContext.count(forSlotIdentifier:)(v20);
          swift_release();
          goto LABEL_3;
        }
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
    }
    return 0;
  }
  v8 = v1 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext;
  swift_beginAccess();
  sub_1BA75290C(v8, (uint64_t)v5);
  v9 = GroupLayoutBindingContext.count(forSlotIdentifier:)(a1[2]);
LABEL_3:
  sub_1BA752890((uint64_t)v5);
  return v9;
}

uint64_t FormatNodeBinder.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA752890(v0 + OBJC_IVAR____TtC8NewsFeed16FormatNodeBinder_bindingContext);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BAB198D8()
{
  return type metadata accessor for FormatNodeBinder(0);
}

uint64_t method lookup function for FormatNodeBinder()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAB198EC()
{
  uint64_t v0;

  sub_1BA752890(v0 + OBJC_IVAR____TtC8NewsFeedP33_BE1642F2E86A2E1BB283E4DD4F798E4125FormatNodeAuxiliaryBinder_bindingContext);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB1992C()
{
  return type metadata accessor for FormatNodeAuxiliaryBinder(0);
}

uint64_t type metadata accessor for FormatNodeAuxiliaryBinder(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED3A2BD0);
}

uint64_t sub_1BAB19948()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutBindingContext();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

unint64_t sub_1BAB199C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A2F20;
  if (!qword_1ED3A2F20)
  {
    sub_1BA4B07F0(255, &qword_1ED3A2F18, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlot, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A2F20);
  }
  return result;
}

uint64_t sub_1BAB19A20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for GroupLayoutBindingContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB19A64()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB19A74()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB19A84()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB19A94()
{
  swift_release();
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for FormatInspectionString()
{
  return &type metadata for FormatInspectionString;
}

BOOL static FormatGroupBinding.URL.== infix(_:_:)(char *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if ((*a1 & 0x80000000) == 0)
    return (v3 & 0x80u) == 0 && v2 == v3;
  return (v3 & 0x80) != 0 && ((v3 ^ v2) & 1) == 0;
}

unint64_t sub_1BAB19B14(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB19B38();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB19B38()
{
  unint64_t result;

  result = qword_1EF2B02E0;
  if (!qword_1EF2B02E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.URL, &type metadata for FormatGroupBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2B02E0);
  }
  return result;
}

BOOL sub_1BAB19B7C(char *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if ((*a1 & 0x80000000) == 0)
    return (v3 & 0x80u) == 0 && v2 == v3;
  return (v3 & 0x80) != 0 && ((v3 ^ v2) & 1) == 0;
}

unint64_t sub_1BAB19BBC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB19BF0();
  a1[2] = sub_1BAB19C34();
  result = sub_1BAB19C78();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB19BF0()
{
  unint64_t result;

  result = qword_1EF2B02E8;
  if (!qword_1EF2B02E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.URL, &type metadata for FormatGroupBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2B02E8);
  }
  return result;
}

unint64_t sub_1BAB19C34()
{
  unint64_t result;

  result = qword_1EF2B02F0;
  if (!qword_1EF2B02F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.URL, &type metadata for FormatGroupBinding.URL);
    atomic_store(result, (unint64_t *)&qword_1EF2B02F0);
  }
  return result;
}

unint64_t sub_1BAB19C78()
{
  unint64_t result;

  result = qword_1EF2B02F8[0];
  if (!qword_1EF2B02F8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.URL, &type metadata for FormatGroupBinding.URL);
    atomic_store(result, qword_1EF2B02F8);
  }
  return result;
}

uint64_t sub_1BAB19CBC@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatGroupBinding.URL.init(from:)(a1, a2);
}

uint64_t sub_1BAB19CD0(_QWORD *a1)
{
  return FormatGroupBinding.URL.encode(to:)(a1);
}

uint64_t _s3URLOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3F)
    goto LABEL_17;
  if (a2 + 193 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 193) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 193;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 193;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 193;
  }
LABEL_17:
  v6 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
  if (v6 >= 0x3E)
    v6 = -1;
  return v6 + 1;
}

uint64_t _s3URLOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 193 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 193) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3F)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3E)
    return ((uint64_t (*)(void))((char *)&loc_1BAB19DD0 + 4 * byte_1BB89F2AD[v4]))();
  *a1 = a2 - 63;
  return ((uint64_t (*)(void))((char *)sub_1BAB19E04 + 4 * byte_1BB89F2A8[v4]))();
}

uint64_t sub_1BAB19E04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB19E0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB19E14);
  return result;
}

uint64_t sub_1BAB19E2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB19E34);
  *(_BYTE *)result = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
  return result;
}

uint64_t sub_1BAB19E38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB19E40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1BAB19E4C(_BYTE *result, char a2)
{
  *result = *result & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.URL()
{
  return &type metadata for FormatGroupBinding.URL;
}

uint64_t SharingIntent.activityProvider.getter()
{
  return swift_unknownObjectRetain();
}

uint64_t SharingIntent.onPerformBlock.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_retain();
  return v1;
}

uint64_t SharingIntent.init(activityProvider:onPerformBlock:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t destroy for SharingIntent()
{
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t _s8NewsFeed13SharingIntentVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for SharingIntent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SharingIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_unknownObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SharingIntent()
{
  return &type metadata for SharingIntent;
}

uint64_t sub_1BAB19FCC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BAB1A048(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t *, uint64_t *, uint64_t);
  unint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_DWORD *)(v6 + 80);
  v9 = v7 + v8;
  v10 = v7 + 7;
  v11 = ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    v15 = ~v8;
    v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v16(a1, a2, *(_QWORD *)(a3 + 16));
    v17 = ((unint64_t)a2 + v9) & v15;
    v16((uint64_t *)(((unint64_t)v4 + v9) & v15), (uint64_t *)v17, v5);
    *(_QWORD *)((v10 + (((unint64_t)v4 + v9) & v15)) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v10 + v17) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1BAB1A13C(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void (*v5)(unint64_t, uint64_t);

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(void (**)(unint64_t, uint64_t))(v4 + 8);
  v5(a1, v3);
  v5((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB1A1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAB1A240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB1A2E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BAB1A370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = (v8 + v9 + a1) & ~v9;
  v11 = (v8 + v9 + a2) & ~v9;
  v7(v10, v11, v5);
  *(_QWORD *)((v8 + 7 + v10) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((v8 + 7 + v11) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB1A408(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  unint64_t v15;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = *(unsigned __int8 *)(v4 + 80);
  v9 = v7 + v8;
  v10 = v7 + 7;
  if (v6 >= a2)
  {
    if (v5 < 0x7FFFFFFF)
    {
      v15 = *(_QWORD *)((v10 + ((v9 + a1) & ~v8)) & 0xFFFFFFFFFFFFF8);
      if (v15 >= 0xFFFFFFFF)
        LODWORD(v15) = -1;
      return (v15 + 1);
    }
    else
    {
      return (*(uint64_t (**)(void))(v4 + 48))();
    }
  }
  else
  {
    if (((((v10 + (v9 & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v11 = 2;
    else
      v11 = a2 - v6 + 1;
    if (v11 >= 0x10000)
      v12 = 4;
    else
      v12 = 2;
    if (v11 < 0x100)
      v12 = 1;
    if (v11 >= 2)
      v13 = v12;
    else
      v13 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BAB1A494 + 4 * byte_1BB89F3A0[v13]))();
  }
}

void sub_1BAB1A520(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v6 >= a3)
  {
    v11 = 0u;
    if (a2 <= v6)
      goto LABEL_17;
  }
  else
  {
    if ((((_DWORD)v7 + 7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v9 = a3 - v6 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v6)
LABEL_17:
      __asm { BR              X14 }
  }
  if ((((_DWORD)v7 + 7 + (((_DWORD)v7 + (_DWORD)v8) & ~(_DWORD)v8)) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v12 = ~v6 + a2;
    bzero(a1, ((v7 + 7 + ((v7 + v8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1BAB1A628()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BAB1A6A0);
}

void sub_1BAB1A630(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BAB1A638);
  JUMPOUT(0x1BAB1A6A0);
}

void sub_1BAB1A67C()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BAB1A6A0);
}

void sub_1BAB1A684()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BAB1A6A0);
}

uint64_t sub_1BAB1A68C(uint64_t a1, int a2, unsigned int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)(v5 + v6) = 0;
  if (!a2)
    JUMPOUT(0x1BAB1A6A0);
  if (a3 < 0x7FFFFFFF)
  {
    if ((a2 & 0x80000000) == 0)
      JUMPOUT(0x1BAB1A69CLL);
    JUMPOUT(0x1BAB1A698);
  }
  return (*(uint64_t (**)(uint64_t))(v4 + 56))(v5);
}

uint64_t type metadata accessor for DebugNewsroomContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugNewsroomContainer);
}

uint64_t sub_1BAB1A6C4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BAB1A774 + 4 * byte_1BB89F3AF[(v7 - 1)]))();
}

void sub_1BAB1A7C4(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for DebugNewsroomWrapper(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugNewsroomWrapper);
}

uint64_t sub_1BAB1A980@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  v30 = a4;
  v32 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v36 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for DebugNewsroomWrapper.DynamicKey(255, v8, v9, v10);
  MEMORY[0x1BCCE5B24](&unk_1BB89F508, v11);
  v37 = sub_1BB874104();
  v31 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v13 = (char *)&v28 - v12;
  v33 = a2;
  v34 = a3;
  v15 = type metadata accessor for DebugNewsroomWrapper(0, a2, a3, v14);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v35 = v13;
  v19 = v42;
  sub_1BB87468C();
  if (!v19)
  {
    v28 = v18;
    v29 = v16;
    v42 = v15;
    v20 = v31;
    v21 = v32;
    v22 = v33;
    v38 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 24))(v33, v34);
    v39 = v23;
    v40 = 0;
    v41 = 1;
    v24 = v36;
    v25 = v35;
    sub_1BB8740D4();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v37);
    v26 = v28;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v28, v24, v22);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v30, v26, v42);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1BAB1ABC4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD v13[5];
  char v14;

  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = type metadata accessor for DebugNewsroomWrapper.DynamicKey(255, v5, v6, a4);
  MEMORY[0x1BCCE5B24](&unk_1BB89F508, v7);
  v8 = sub_1BB8741D0();
  v13[0] = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v13 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746C8();
  v13[2] = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
  v13[3] = v11;
  v13[4] = 0;
  v14 = 1;
  sub_1BB8741AC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v13[0] + 8))(v10, v8);
}

uint64_t sub_1BAB1AD18()
{
  return sub_1BB87420C();
}

void sub_1BAB1AD60(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  sub_1BAB1ABB8();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v4 & 1;
}

uint64_t sub_1BAB1AD98()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1BAB1ADA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  char v4;
  uint64_t v5;

  result = sub_1BAB1AD18();
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v4 & 1;
  return result;
}

uint64_t sub_1BAB1ADDC(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB89F508, a1);
  return sub_1BB874710();
}

uint64_t sub_1BAB1AE10(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB89F508, a1);
  return sub_1BB87471C();
}

uint64_t sub_1BAB1AE44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BAB1A980(a1, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a3);
}

uint64_t sub_1BAB1AE60(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAB1ABC4(a1, a2, a3, a4);
}

uint64_t type metadata accessor for DebugNewsroomWrapper.DynamicKey(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugNewsroomWrapper.DynamicKey);
}

uint64_t initializeWithCopy for DebugFormatFile(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TraversalOnlyEncoder.AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for TraversalOnlyEncoder.AnyCodingKey(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatFile(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 25))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatFile(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 25) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void sub_1BAB1AFE8()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BAB1AFF8()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BAB1B008()
{
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = 0x7FFFFFFFFFFFFFFFLL;
  sub_1BA4F26FC();
  swift_allocObject();
  result = sub_1BB86EC44();
  qword_1EF2B0480 = result;
  return result;
}

uint64_t FeedRebuildPolicy.init(groupLimit:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  *(_QWORD *)(swift_allocObject() + 16) = a1;
  sub_1BA4F26FC();
  swift_allocObject();
  result = sub_1BB86EC44();
  *a2 = result;
  return result;
}

uint64_t static FeedRebuildPolicy.default.getter@<X0>(_QWORD *a1@<X8>)
{
  if (qword_1EF2A6CD8 != -1)
    swift_once();
  *a1 = qword_1EF2B0480;
  return swift_retain();
}

uint64_t sub_1BAB1B134()
{
  return swift_deallocObject();
}

void sub_1BAB1B144(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
}

uint64_t FeedRebuildPolicy.init(groupLimitAccessor:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1BAB1B158()
{
  return swift_deallocObject();
}

void _s8NewsFeed23FormatGroupNodeMaskPathO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB1B1FC@<X0>(char a1@<W2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, char a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v26;
  _QWORD v29[2];
  char v30;
  _QWORD v31[2];
  char v32;

  if (v14)
  {
    sub_1BA7AF9FC(v15, v7, a1, a2, a3, a4, a5, a6, a7);
    sub_1BA7AF9FC(v13, v12, v11, v10, v9, v8, v17, v16, v14);
    sub_1BAB1C320(v18 - 232);
    v20 = 0;
  }
  else
  {
    v31[0] = v15;
    v31[1] = v7;
    v32 = a1;
    v29[0] = v13;
    v29[1] = v12;
    v30 = v11;
    v26 = v7;
    v19 = v7;
    sub_1BA7AF9FC(v13, v12, v11, v10, v9, v8, v17, v16, 0);
    sub_1BA7AF9FC(v15, v19, a1, a2, a3, a4, a5, a6, 0);
    sub_1BA7AF9FC(v15, v26, a1, a2, a3, a4, a5, a6, 0);
    sub_1BA7AF9FC(v13, v12, v11, v10, v9, v8, v17, v16, 0);
    v20 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)v31, (uint64_t)v29);
    sub_1BAB1C320(v18 - 232);
    sub_1BA5608E0(v13, v12, v11, v10, v9, v8, v17, v16, 0);
    sub_1BA5608E0(v15, v26, a1, a2, a3, a4, a5, a6, 0);
  }
  return v20 & 1;
}

unint64_t sub_1BAB1B694(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB1B6B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB1B6B8()
{
  unint64_t result;

  result = qword_1EF2B0488;
  if (!qword_1EF2B0488)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeMaskPath, &type metadata for FormatGroupNodeMaskPath);
    atomic_store(result, (unint64_t *)&qword_1EF2B0488);
  }
  return result;
}

unint64_t sub_1BAB1B6FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA56978C();
  a1[2] = sub_1BA829530();
  result = sub_1BAB1B730();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB1B730()
{
  unint64_t result;

  result = qword_1EF2B0490;
  if (!qword_1EF2B0490)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupNodeMaskPath, &type metadata for FormatGroupNodeMaskPath);
    atomic_store(result, (unint64_t *)&qword_1EF2B0490);
  }
  return result;
}

uint64_t destroy for FormatGroupNodeMaskPath(uint64_t a1)
{
  return sub_1BA5608E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatGroupNodeMaskPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BA7AF9FC(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  return a1;
}

uint64_t assignWithCopy for FormatGroupNodeMaskPath(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  v11 = *(_BYTE *)(a2 + 64);
  sub_1BA7AF9FC(*(_QWORD *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_BYTE *)(a1 + 64);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_BYTE *)(a1 + 64) = v11;
  sub_1BA5608E0(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatGroupNodeMaskPath(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;

  v3 = *(_BYTE *)(a2 + 64);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  v12 = *(_BYTE *)(a1 + 64);
  v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(_BYTE *)(a1 + 64) = v3;
  sub_1BA5608E0(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t sub_1BAB1B95C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 64) <= 2u)
    return *(unsigned __int8 *)(a1 + 64);
  else
    return (*(_DWORD *)a1 + 3);
}

uint64_t sub_1BAB1B974(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_QWORD *)result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_QWORD *)(result + 56) = 0;
    LOBYTE(a2) = 3;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupNodeMaskPath()
{
  return &type metadata for FormatGroupNodeMaskPath;
}

_QWORD *sub_1BAB1B9B0(double *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t (*v50)(uint64_t, uint64_t);
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  _QWORD *v57;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v2 = *(_QWORD *)a2;
  v3 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  switch(*(_BYTE *)(a2 + 64))
  {
    case 0:
      v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      v63 = *(_QWORD *)a2;
      v64 = *(_QWORD *)(a2 + 56);
      v10 = *(_QWORD *)(a2 + 40);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v9);
      sub_1BA8C88C8(0);
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
      v14 = (v13 + 32) & ~v13;
      v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
      v59 = v15;
      v61 = (_QWORD *)(v15 + v14);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v16 = swift_initStackObject();
      *(_OWORD *)(v16 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)&v66 = v63;
      *((_QWORD *)&v66 + 1) = v3;
      LOBYTE(v67) = v5;
      sub_1BA7AF9FC(v63, v3, v5, v4, v6, v10, v7, v64, 0);
      v17 = sub_1BB4D88A0(a1, (uint64_t)&v66);
      sub_1BA7AF9E4(v63, v3, v5, v4, v6, v10, v7, v64, 0);
      *(_QWORD *)(v16 + 56) = &type metadata for FormatInspection;
      *(_QWORD *)(v16 + 64) = &off_1E7335C38;
      *(_QWORD *)(v16 + 32) = v17;
      v18 = sub_1BA9747FC(v16);
      swift_setDeallocating();
      sub_1BA89EA20();
      swift_arrayDestroy();
      v19 = sub_1BB6DF010(v18);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(1701869908, 0xE400000000000000, (uint64_t)v19, 0x522072656E726F43, 0xED00007375696461, v61);
      v20 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v61, 0, 1, v20);
      sub_1BAF89090(1752457552, 0xE400000000000000, 0, 0, v59, &v66);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
    case 1:
      v29 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      v30 = *(_QWORD *)a2;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v29);
      sub_1BA8C88C8(0);
      v32 = *(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80);
      v33 = (v32 + 32) & ~v32;
      v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v29);
      v35 = swift_initStackObject();
      *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)&v66 = v30;
      v36 = sub_1BB3668A4((uint64_t *)&v66);
      *(_QWORD *)(v35 + 56) = &type metadata for FormatInspection;
      *(_QWORD *)(v35 + 64) = &off_1E7335C38;
      *(_QWORD *)(v35 + 32) = v36;
      v37 = sub_1BA9747FC(v35);
      swift_setDeallocating();
      sub_1BA89EA20();
      swift_arrayDestroy();
      v38 = sub_1BB6DF010(v37);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(1701869908, 0xE400000000000000, (uint64_t)v38, 0x50207265697A6542, 0xEB00000000687461, (_QWORD *)(v34 + v33));
      v39 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v34 + v33, 0, 1, v39);
      sub_1BAF89090(1752457552, 0xE400000000000000, 0, 0, v34, &v66);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
    case 2:
      v40 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      v65 = *(_QWORD *)(a2 + 56);
      v60 = *(_QWORD *)(a2 + 40);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v40);
      sub_1BA8C88C8(0);
      v42 = *(unsigned __int8 *)(*(_QWORD *)(v41 - 8) + 80);
      v43 = (v42 + 32) & ~v42;
      v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_1BB87CE70;
      v62 = (_QWORD *)(v44 + v43);
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v45 = swift_initStackObject();
      *(_OWORD *)(v45 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)&v66 = v2;
      *((_QWORD *)&v66 + 1) = v3;
      *(_QWORD *)&v67 = v5;
      *((_QWORD *)&v67 + 1) = v4;
      v68 = v6;
      v69 = v60;
      v70 = v7;
      v71 = v65;
      v46 = sub_1BB341CF4((uint64_t *)&v66);
      *(_QWORD *)(v45 + 56) = &type metadata for FormatInspection;
      *(_QWORD *)(v45 + 64) = &off_1E7335C38;
      *(_QWORD *)(v45 + 32) = v46;
      v47 = sub_1BA9747FC(v45);
      swift_setDeallocating();
      sub_1BA89EA20();
      swift_arrayDestroy();
      v48 = sub_1BB6DF010(v47);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(1701869908, 0xE400000000000000, (uint64_t)v48, 0x746E656964617247, 0xE800000000000000, v62);
      v49 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v62, 0, 1, v49);
      sub_1BAF89090(1752457552, 0xE400000000000000, 0, 0, v44, &v66);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
    case 3:
      v50 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v50);
      sub_1BA8C88C8(0);
      v52 = *(unsigned __int8 *)(*(_QWORD *)(v51 - 8) + 80);
      v53 = (v52 + 32) & ~v52;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
      v26 = (_QWORD *)(v25 + v53);
      v27 = v26;
      v28 = 1818326607;
      goto LABEL_8;
    default:
      v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v21);
      sub_1BA8C88C8(0);
      v23 = *(unsigned __int8 *)(*(_QWORD *)(v22 - 8) + 80);
      v24 = (v23 + 32) & ~v23;
      v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
      v26 = (_QWORD *)(v25 + v24);
      v27 = v26;
      v28 = 1701736270;
LABEL_8:
      sub_1BAAF7494(1701869908, 0xE400000000000000, v28, 0xE400000000000000, v27);
      v54 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v26, 0, 1, v54);
      sub_1BAF89090(1752457552, 0xE400000000000000, 0, 0, v25, &v66);
      swift_setDeallocating();
      swift_arrayDestroy();
      break;
  }
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v55 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v55;
  *(_QWORD *)(v55 + 48) = v68;
  v56 = v67;
  *(_OWORD *)(v55 + 16) = v66;
  *(_OWORD *)(v55 + 32) = v56;
  v57 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v57;
}

uint64_t sub_1BAB1C2EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB1C320(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v2 = *(_QWORD *)(a1 + 72);
  v3 = *(_QWORD *)(a1 + 80);
  v4 = *(_QWORD *)(a1 + 88);
  v5 = *(_QWORD *)(a1 + 96);
  v6 = *(_QWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 112);
  v8 = *(_QWORD *)(a1 + 120);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_BYTE *)(a1 + 136);
  sub_1BA5608E0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_BYTE *)(a1 + 64));
  sub_1BA5608E0(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

void sub_1BAB1C3C4()
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v2);
  v3 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  __asm { BR              X10 }
}

BOOL sub_1BAB1C4FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  double v11;

  v4 = v1 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
  v5 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v4 + *(int *)(v5 + 20), v3, type metadata accessor for PuzzleStatisticCategory);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      sub_1BA5193C4(v3, v0, type metadata accessor for PuzzleStatisticDifficultyLevelValue);
      PuzzleStatisticValue.primaryValue.getter();
      v7 = v11;
      v9 = v0;
      v10 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
    }
    else
    {
      sub_1BA5193C4(v3, v2, type metadata accessor for PuzzleStatisticValue);
      PuzzleStatisticValue.primaryValue.getter();
      v7 = v8;
      v9 = v2;
      v10 = type metadata accessor for PuzzleStatisticValue;
    }
    sub_1BA4A2E80(v9, v10);
  }
  else
  {
    sub_1BA4A2E80(v3, type metadata accessor for PuzzleStatisticCategory);
    v7 = -1.0;
  }
  return v7 >= 0.0;
}

void sub_1BAB1C75C(char *a1)
{
  sub_1BB7F194C(*a1);
}

void sub_1BAB1C768()
{
  char *v0;

  sub_1BA8D2A34(*v0);
}

void sub_1BAB1C770(uint64_t a1)
{
  char *v1;

  sub_1BA9D1C58(a1, *v1);
}

void sub_1BAB1C778(uint64_t a1)
{
  char *v1;

  sub_1BAB08084(a1, *v1);
}

uint64_t sub_1BAB1C780@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAB1D424();
  *a1 = result;
  return result;
}

uint64_t sub_1BAB1C7AC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAB1C7E8 + 4 * byte_1BB89F68C[*v0]))();
}

void sub_1BAB1C7E8(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000001BB95E6E0;
}

void sub_1BAB1C80C(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000001BB95E700;
}

void sub_1BAB1C82C(char *a1@<X8>)
{
  strcpy(a1, "hasLeaderboard");
  a1[15] = -18;
}

uint64_t sub_1BAB1C854()
{
  sub_1BAB1CCE8();
  return sub_1BB872D60();
}

uint64_t sub_1BAB1C8B0()
{
  sub_1BAB1CCE8();
  return sub_1BB872D0C();
}

void sub_1BAB1C8FC(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7253318;
}

BOOL static FormatPuzzleStatisticBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatPuzzleStatisticBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatPuzzleStatisticBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB1C990()
{
  unint64_t result;

  result = qword_1EF2B0498;
  if (!qword_1EF2B0498)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Bool, &type metadata for FormatPuzzleStatisticBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B0498);
  }
  return result;
}

unint64_t sub_1BAB1C9D4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB1C9F8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB1C9F8()
{
  unint64_t result;

  result = qword_1EF2B04A0;
  if (!qword_1EF2B04A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Bool, &type metadata for FormatPuzzleStatisticBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B04A0);
  }
  return result;
}

unint64_t sub_1BAB1CA3C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB1CA70();
  a1[2] = sub_1BAB1CAB4();
  result = sub_1BAB1C990();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB1CA70()
{
  unint64_t result;

  result = qword_1EF2B04A8;
  if (!qword_1EF2B04A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Bool, &type metadata for FormatPuzzleStatisticBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B04A8);
  }
  return result;
}

unint64_t sub_1BAB1CAB4()
{
  unint64_t result;

  result = qword_1EF2B04B0;
  if (!qword_1EF2B04B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleStatisticBinding.Bool, &type metadata for FormatPuzzleStatisticBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B04B0);
  }
  return result;
}

uint64_t sub_1BAB1CAF8@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatPuzzleStatisticBinding.Bool.init(from:)(a1, a2);
}

void sub_1BAB1CB0C(_QWORD *a1)
{
  FormatPuzzleStatisticBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding.Bool()
{
  return &type metadata for FormatPuzzleStatisticBinding.Bool;
}

uint64_t _s4BoolOwst_3_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAB1CB80 + 4 * byte_1BB89F695[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAB1CBB4 + 4 * byte_1BB89F690[v4]))();
}

uint64_t sub_1BAB1CBB4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB1CBBC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB1CBC4);
  return result;
}

uint64_t sub_1BAB1CBD0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB1CBD8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAB1CBDC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB1CBE4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_0()
{
  return &_s4BoolO10CodingTypeON_0;
}

unint64_t sub_1BAB1CC04()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B04B8;
  if (!qword_1EF2B04B8)
  {
    sub_1BAB1CC4C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B04B8);
  }
  return result;
}

void sub_1BAB1CC4C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B04C0)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B04C0);
  }
}

unint64_t sub_1BAB1CCA4()
{
  unint64_t result;

  result = qword_1EF2B04C8;
  if (!qword_1EF2B04C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89F8A0, &_s4BoolO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B04C8);
  }
  return result;
}

unint64_t sub_1BAB1CCE8()
{
  unint64_t result;

  result = qword_1EF2B04D0;
  if (!qword_1EF2B04D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89F828, &_s4BoolO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2B04D0);
  }
  return result;
}

void sub_1BAB1CD2C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v16 = a2;
  v18 = a3;
  v19 = a1;
  v14 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
  MEMORY[0x1E0C80A78](v14);
  v15 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for PuzzleStatisticValue(0);
  MEMORY[0x1E0C80A78](v4);
  v13 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for PuzzleStatisticCategory(0);
  MEMORY[0x1E0C80A78](v17);
  MEMORY[0x1E0C80A78](v6);
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  __asm { BR              X10 }
}

uint64_t sub_1BAB1CF04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  _QWORD *v7;
  double v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  BOOL *v14;
  uint64_t v15;
  char *v16;

  sub_1BA4C2DD8(*(_QWORD *)(v3 - 112), v2, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  v4 = *(int *)(v0 + 32);
  v5 = type metadata accessor for PuzzleStatistic();
  sub_1BA4C2DD8(v2 + v4 + *(int *)(v5 + 20), v1, type metadata accessor for PuzzleStatisticCategory);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v7 = *(_QWORD **)(v3 - 96);
  if ((EnumCaseMultiPayload - 2) >= 2)
  {
    if (EnumCaseMultiPayload)
    {
      v9 = type metadata accessor for PuzzleStatisticDifficultyLevelValue;
      v10 = v1;
      v11 = *(_QWORD *)(v3 - 128);
    }
    else
    {
      v9 = type metadata accessor for PuzzleStatisticValue;
      v10 = v1;
      v11 = *(_QWORD *)(v3 - 144);
    }
    sub_1BA5193C4(v10, v11, v9);
    PuzzleStatisticValue.primaryValue.getter();
    v8 = v12;
    sub_1BA4A2E80(v11, v9);
  }
  else
  {
    sub_1BA4A2E80(v1, type metadata accessor for PuzzleStatisticCategory);
    v8 = -1.0;
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (BOOL *)v7 + *(int *)(v13 + 24);
  *v14 = v8 >= 0.0;
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *v7 = 0x616D697250736168;
  v7[1] = 0xEF65756C61567972;
  v7[2] = 0;
  v7[3] = 0;
  v16 = (char *)v7 + *(int *)(v13 + 28);
  *(_QWORD *)v16 = 0;
  *((_QWORD *)v16 + 1) = 0;
  v16[16] = -1;
  sub_1BA4A2E80(v2, (uint64_t (*)(_QWORD))type metadata accessor for FeedPuzzleStatistic);
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 0, 1, v13);
}

uint64_t sub_1BAB1D424()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

void sub_1BAB1D46C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  _QWORD v13[6];
  int v14;
  int v15;
  int v16;
  int v17;

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  v6 = v0[1];
  v7 = *((_QWORD *)v0 + 3);
  v13[0] = *((_QWORD *)v0 + 1);
  v13[1] = v7;
  v8 = *((_QWORD *)v0 + 7);
  v13[2] = *((_QWORD *)v0 + 5);
  v13[3] = v8;
  v9 = *((_QWORD *)v0 + 9);
  LODWORD(v8) = v0[80];
  v14 = v0[64];
  v15 = v8;
  v10 = *((_QWORD *)v0 + 11);
  v13[4] = v9;
  v13[5] = v10;
  LODWORD(v10) = v0[112];
  v16 = v0[96];
  v17 = v10;
  v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  objc_msgSend(v11, sel_setNumberStyle_, qword_1BB89F9C8[v5]);
  sub_1BB86C994();
  v12 = (void *)sub_1BB86C940();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v11, sel_setLocale_, v12);

  __asm { BR              X9 }
}

void *sub_1BAB1D5A4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  void *v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  double v27;
  id v28;

  objc_msgSend(v22, sel_setRoundingMode_, 1);
  if ((v24 & 1) != 0)
  {
    if ((v25 & 1) != 0)
      goto LABEL_3;
  }
  else
  {
    objc_msgSend(v22, sel_setMinimumIntegerDigits_, *(_QWORD *)(v26 - 160));
    if ((v25 & 1) != 0)
    {
LABEL_3:
      if ((v23 & 1) != 0)
        goto LABEL_4;
      goto LABEL_13;
    }
  }
  objc_msgSend(v22, sel_setMaximumIntegerDigits_, *(_QWORD *)(v26 - 152));
  if ((v23 & 1) != 0)
  {
LABEL_4:
    if ((*(_DWORD *)(v26 - 112) & 1) != 0)
      goto LABEL_6;
    goto LABEL_5;
  }
LABEL_13:
  objc_msgSend(v22, sel_setMinimumFractionDigits_, *(_QWORD *)(v26 - 144));
  if ((*(_DWORD *)(v26 - 112) & 1) == 0)
LABEL_5:
    objc_msgSend(v22, sel_setMaximumFractionDigits_, *(_QWORD *)(v26 - 136));
LABEL_6:
  if ((*(_DWORD *)(v26 - 108) & 1) != 0)
  {
    if ((*(_DWORD *)(v26 - 104) & 1) != 0)
      goto LABEL_8;
LABEL_16:
    objc_msgSend(v22, sel_setMaximumSignificantDigits_, *(_QWORD *)(v26 - 120));
    objc_msgSend(v22, sel_setUsesSignificantDigits_, 1);
    if ((*(_DWORD *)(v26 - 100) & 1) != 0)
      return v22;
    goto LABEL_9;
  }
  objc_msgSend(v22, sel_setMinimumSignificantDigits_, *(_QWORD *)(v26 - 128));
  objc_msgSend(v22, sel_setUsesSignificantDigits_, 1);
  if ((*(_DWORD *)(v26 - 104) & 1) == 0)
    goto LABEL_16;
LABEL_8:
  if ((*(_DWORD *)(v26 - 100) & 1) == 0)
  {
LABEL_9:
    v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v27);
    objc_msgSend(v22, sel_setMultiplier_, v28);

  }
  return v22;
}

uint64_t sub_1BAB1D738@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatNumberFormat.init(from:)(a1, a2);
}

uint64_t sub_1BAB1D74C(_QWORD *a1)
{
  return FormatNumberFormat.encode(to:)(a1);
}

BOOL _s8NewsFeed012FormatNumberC0V2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unsigned __int8 v15;
  uint64_t v16;
  unsigned __int8 v17;
  double v18;
  unsigned __int8 v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  double v32;
  char v33;
  unsigned __int8 v34;
  uint64_t v35;
  unsigned __int8 v36;
  int v37;
  uint64_t v38;
  unsigned __int8 v39;
  uint64_t v40;
  unsigned __int8 v41;
  char v42;
  char v43;
  unsigned __int8 v44;
  uint64_t v45;
  char v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v54;
  int v55;
  uint64_t v56;
  unsigned __int8 v57;
  unsigned __int8 v58;
  unsigned __int8 v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  unsigned __int8 v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 v79;
  unsigned __int8 v80;
  int v81;
  int v82;
  uint64_t v83;
  int v84;

  v4 = *a1;
  v5 = a1[1];
  v6 = *((_QWORD *)a1 + 1);
  v7 = a1[16];
  v8 = *((_QWORD *)a1 + 3);
  v9 = a1[32];
  v10 = *((_QWORD *)a1 + 5);
  v11 = a1[48];
  v12 = *((_QWORD *)a1 + 7);
  v13 = a1[64];
  v14 = *((_QWORD *)a1 + 9);
  v15 = a1[80];
  v16 = *((_QWORD *)a1 + 11);
  v17 = a1[96];
  v18 = *((double *)a1 + 13);
  v19 = a1[112];
  v20 = *a2;
  v21 = a2[1];
  v83 = *((_QWORD *)a2 + 1);
  v84 = a2[16];
  v22 = *((_QWORD *)a2 + 3);
  v23 = a2[32];
  v24 = *((_QWORD *)a2 + 5);
  v25 = a2[48];
  v26 = *((_QWORD *)a2 + 7);
  v27 = a2[64];
  v28 = *((_QWORD *)a2 + 9);
  v29 = a2[80];
  v30 = *((_QWORD *)a2 + 11);
  v31 = a2[96];
  v32 = *((double *)a2 + 13);
  v33 = a2[112];
  if (v4 == 9)
  {
    if (v20 != 9)
      return 0;
  }
  else
  {
    if (v20 == 9)
      return 0;
    v65 = v12;
    v67 = *((_QWORD *)a2 + 11);
    v63 = a2[96];
    v60 = v14;
    v58 = a2[112];
    v57 = v17;
    v56 = v16;
    v79 = v19;
    v81 = a2[80];
    v34 = v13;
    v35 = v10;
    v75 = *((_QWORD *)a2 + 7);
    v77 = *((_QWORD *)a2 + 9);
    v55 = v5;
    v36 = v11;
    v37 = a2[64];
    v38 = v8;
    v39 = v9;
    v73 = a2[48];
    v40 = v6;
    v71 = *((_QWORD *)a2 + 5);
    v41 = v7;
    v69 = a2[32];
    sub_1BB8072D4(v4);
    v23 = v69;
    v7 = v41;
    v24 = v71;
    v6 = v40;
    v25 = v73;
    v9 = v39;
    v26 = v75;
    v28 = v77;
    v8 = v38;
    v27 = v37;
    v11 = v36;
    v5 = v55;
    v10 = v35;
    v19 = v79;
    v29 = v81;
    v13 = v34;
    v16 = v56;
    v17 = v57;
    v33 = v58;
    v14 = v60;
    v31 = v63;
    v12 = v65;
    v30 = v67;
    if ((v42 & 1) == 0)
      return 0;
  }
  if (v5 == 7)
  {
    if (v21 != 7)
      return 0;
  }
  else
  {
    if (v21 == 7)
      return 0;
    v43 = v5;
    v80 = v19;
    v82 = v29;
    v44 = v13;
    v45 = v10;
    v76 = v26;
    v78 = v28;
    v68 = v11;
    v66 = v27;
    v64 = v8;
    v62 = v9;
    v74 = v25;
    v61 = v6;
    v72 = v24;
    v59 = v7;
    v70 = v23;
    sub_1BB80710C(v43);
    v23 = v70;
    v7 = v59;
    v24 = v72;
    v6 = v61;
    v25 = v74;
    v9 = v62;
    v26 = v76;
    v28 = v78;
    v8 = v64;
    v27 = v66;
    v11 = v68;
    v10 = v45;
    v19 = v80;
    v29 = v82;
    v13 = v44;
    if ((v46 & 1) == 0)
      return 0;
  }
  if ((v7 & 1) != 0)
  {
    if (!v84)
      return 0;
  }
  else
  {
    v47 = v84;
    if (v6 != v83)
      v47 = 1;
    if ((v47 & 1) != 0)
      return 0;
  }
  if ((v9 & 1) != 0)
  {
    if (!v23)
      return 0;
  }
  else
  {
    if (v8 == v22)
      v48 = v23;
    else
      v48 = 1;
    if ((v48 & 1) != 0)
      return 0;
  }
  if ((v11 & 1) != 0)
  {
    if (!v25)
      return 0;
  }
  else
  {
    if (v10 == v24)
      v49 = v25;
    else
      v49 = 1;
    if ((v49 & 1) != 0)
      return 0;
  }
  if ((v13 & 1) != 0)
  {
    if (!v27)
      return 0;
  }
  else
  {
    if (v12 == v26)
      v50 = v27;
    else
      v50 = 1;
    if ((v50 & 1) != 0)
      return 0;
  }
  if ((v15 & 1) != 0)
  {
    if (!v29)
      return 0;
  }
  else
  {
    if (v14 == v28)
      v51 = v29;
    else
      v51 = 1;
    if ((v51 & 1) != 0)
      return 0;
  }
  if ((v17 & 1) != 0)
  {
    if (!v31)
      return 0;
  }
  else
  {
    if (v16 == v30)
      v52 = v31;
    else
      v52 = 1;
    if ((v52 & 1) != 0)
      return 0;
  }
  if ((v19 & 1) == 0)
  {
    if (v18 == v32)
      v54 = v33;
    else
      v54 = 1;
    return (v54 & 1) == 0;
  }
  return (v33 & 1) != 0;
}

unint64_t sub_1BAB1DA60(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB1DA84();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB1DA84()
{
  unint64_t result;

  result = qword_1EF2B04D8;
  if (!qword_1EF2B04D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormat, &type metadata for FormatNumberFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B04D8);
  }
  return result;
}

unint64_t sub_1BAB1DAC8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB1DAFC();
  a1[2] = sub_1BAB1DB40();
  result = sub_1BAB1DB84();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB1DAFC()
{
  unint64_t result;

  result = qword_1ED39C410;
  if (!qword_1ED39C410)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormat, &type metadata for FormatNumberFormat);
    atomic_store(result, (unint64_t *)&qword_1ED39C410);
  }
  return result;
}

unint64_t sub_1BAB1DB40()
{
  unint64_t result;

  result = qword_1ED39A768;
  if (!qword_1ED39A768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormat, &type metadata for FormatNumberFormat);
    atomic_store(result, (unint64_t *)&qword_1ED39A768);
  }
  return result;
}

unint64_t sub_1BAB1DB84()
{
  unint64_t result;

  result = qword_1EF2B04E0;
  if (!qword_1EF2B04E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatNumberFormat, &type metadata for FormatNumberFormat);
    atomic_store(result, (unint64_t *)&qword_1EF2B04E0);
  }
  return result;
}

__n128 __swift_memcpy113_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for FormatNumberFormat(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xF9 && *(_BYTE *)(a1 + 113))
    return (*(_DWORD *)a1 + 249);
  if (*(unsigned __int8 *)(a1 + 1) <= 7u)
    v3 = 7;
  else
    v3 = *(unsigned __int8 *)(a1 + 1);
  v4 = v3 - 8;
  if (*(unsigned __int8 *)(a1 + 1) < 7u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatNumberFormat(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 112) = 0;
    *(_QWORD *)result = a2 - 249;
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 113) = 1;
  }
  else
  {
    if (a3 >= 0xF9)
      *(_BYTE *)(result + 113) = 0;
    if (a2)
      *(_BYTE *)(result + 1) = a2 + 7;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatNumberFormat()
{
  return &type metadata for FormatNumberFormat;
}

uint64_t FormatSizeEquation.width.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t FormatSizeEquation.height.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1DCD8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSizeEquation.init(from:)(a1, a2);
}

uint64_t sub_1BAB1DCEC(_QWORD *a1)
{
  return FormatSizeEquation.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatSizeEquationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA881EAC(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1BA881EAC(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

unint64_t sub_1BAB1DDA4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB1DDC8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB1DDC8()
{
  unint64_t result;

  result = qword_1EF2B04E8;
  if (!qword_1EF2B04E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeEquation, &type metadata for FormatSizeEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2B04E8);
  }
  return result;
}

unint64_t sub_1BAB1DE0C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB1DE40();
  a1[2] = sub_1BAB1DE84();
  result = sub_1BAB1DEC8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB1DE40()
{
  unint64_t result;

  result = qword_1EF2B04F0;
  if (!qword_1EF2B04F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeEquation, &type metadata for FormatSizeEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2B04F0);
  }
  return result;
}

unint64_t sub_1BAB1DE84()
{
  unint64_t result;

  result = qword_1EF2B04F8;
  if (!qword_1EF2B04F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeEquation, &type metadata for FormatSizeEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2B04F8);
  }
  return result;
}

unint64_t sub_1BAB1DEC8()
{
  unint64_t result;

  result = qword_1EF2B0500;
  if (!qword_1EF2B0500)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeEquation, &type metadata for FormatSizeEquation);
    atomic_store(result, (unint64_t *)&qword_1EF2B0500);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSizeEquation()
{
  return &type metadata for FormatSizeEquation;
}

uint64_t FormatIssueCoverNodeRenderer.render<A>(context:layoutAttributes:view:auxViews:data:token:traitCollection:)(int a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  return sub_1BAB1DFC0(a2, a3, a4, a5, a7);
}

uint64_t FormatIssueCoverNodeRenderer.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t FormatIssueCoverNodeRenderer.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB1DF80(int a1, uint64_t a2, id a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9)
{
  return sub_1BAB1DFC0(a2, a3, a4, a5, a7);
}

uint64_t sub_1BAB1DFC0(uint64_t a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  char **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  id v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  id v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  char v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[7];
  char v51;

  v9 = *(void **)a4;
  v8 = *(_QWORD *)(a4 + 8);
  v10 = *(void **)(a4 + 16);
  v11 = *(_QWORD *)(a4 + 24);
  v12 = *(void **)(a4 + 32);
  v37 = *(_QWORD *)(a4 + 40);
  v42 = *(void **)(a4 + 48);
  v41 = *(_BYTE *)(a4 + 56);
  v13 = *(_QWORD *)(a1 + 128);
  v14 = *(unsigned __int8 *)(a1 + 136);
  objc_msgSend(a2, sel_setIsAccessibilityElement_, 0);
  objc_msgSend(a2, sel_setAccessibilityElementsHidden_, 0);
  if (v14 > 0xFD)
    goto LABEL_7;
  if ((v14 & 0x80) != 0)
  {
    if (!(v13 | v14 ^ 0x80))
      goto LABEL_7;
    v15 = &selRef_setAccessibilityElementsHidden_;
  }
  else
  {
    v15 = &selRef_setIsAccessibilityElement_;
  }
  objc_msgSend(a2, *v15, 1);
LABEL_7:
  objc_msgSend(a2, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a1 + 120));
  v16 = *(_QWORD *)(a1 + 152);
  v36 = v16;
  if (v16)
    v17 = *(_BYTE *)(v16 + 177) & 1;
  else
    v17 = 0;
  objc_msgSend(a2, sel_setAccessibilityIgnoresInvertColors_, v17);
  v18 = v5[5];
  v35 = v5[6];
  __swift_project_boxed_opaque_existential_1(v5 + 2, v18);
  v50[0] = v9;
  v50[1] = v8;
  v50[2] = v10;
  v50[3] = v11;
  v34 = v11;
  v50[4] = v12;
  v50[5] = v37;
  v50[6] = v42;
  v51 = v41;
  v19 = *(_QWORD *)(a1 + 208);
  v20 = *(_QWORD *)(a1 + 216);
  v21 = *(_OWORD *)(a1 + 176);
  v45 = *(_OWORD *)(a1 + 160);
  v46 = v21;
  v47 = *(_OWORD *)(a1 + 192);
  v48 = v19;
  v49 = v20;
  sub_1BA8996DC(v9, v8, v10, v11, v12, v37, v42, v41);
  v22 = v9;
  v23 = sub_1BA994314();
  sub_1BB81B410(&v44);
  v24 = a2;
  v25 = (void *)v44;
  v43 = v44;
  v38 = v24;
  IssueCoverViewRendererType.render(_:on:with:traits:coverViewStyle:)((uint64_t)v50, (uint64_t)v24, (uint64_t)&v45, v23, &v43, v18, v35);

  swift_bridgeObjectRelease();
  sub_1BA899748(v22, v8, v10, v34, v12, v37, v42, v41);
  v26 = *(_QWORD *)(a1 + 144);
  if (v36)
  {
    v28 = *(_QWORD *)(v36 + 64);
    v27 = *(_QWORD *)(v36 + 72);
    v29 = *(_QWORD *)(v36 + 80);
    v30 = *(_BYTE *)(v36 + 88);
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v27, v29, v30);
  }
  else
  {
    v27 = 0;
    v29 = 0;
    v28 = 0;
    v30 = -2;
  }
  v31 = objc_msgSend(v38, sel_layer, v34);
  *(_QWORD *)&v45 = v27;
  *((_QWORD *)&v45 + 1) = v29;
  LOBYTE(v46) = v30;
  sub_1BA67832C(v26, v31, a5, v28, (uint64_t *)&v45);

  swift_bridgeObjectRelease();
  sub_1BA6E6CC4(v27, v29, v30);
  if (v36)
  {
    v32 = *(_QWORD *)(v36 + 56);
    swift_bridgeObjectRetain();
  }
  else
  {
    v32 = 0;
  }
  *(_QWORD *)&v45 = v32;
  sub_1BA6786EC(v26, v38, (uint64_t *)&v45, a3);
  return swift_bridgeObjectRelease();
}

uint64_t dispatch thunk of FormatIssueCoverNodeRendererType.render<A>(context:layoutAttributes:view:auxViews:data:token:traitCollection:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 8))();
}

uint64_t method lookup function for FormatIssueCoverNodeRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatSupplementary.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementary.name.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementary.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*FormatSupplementary.name.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSupplementary.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSupplementary.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*FormatSupplementary.description.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSupplementary.children.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementary.children.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*FormatSupplementary.children.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSupplementary.style.getter()
{
  return swift_retain();
}

uint64_t FormatSupplementary.styles.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementary.styles.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FormatSupplementary.styles.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSupplementary.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementary.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = a1;
  return result;
}

uint64_t (*FormatSupplementary.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatSupplementary.kind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 80);
}

_BYTE *FormatSupplementary.kind.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = *result;
  return result;
}

uint64_t (*FormatSupplementary.kind.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSupplementary.options.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementary.options.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 88) = a1;
  return result;
}

uint64_t (*FormatSupplementary.options.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSupplementary.types.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSupplementary.types.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*FormatSupplementary.types.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatSupplementary.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 104);
}

uint64_t FormatSupplementary.init(identifier:name:description:children:style:styles:selectors:kind:options:types:accessibilityRole:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, char *a15)
{
  char v15;
  char v16;

  v15 = *a12;
  v16 = *a15;
  *(_QWORD *)a9 = result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = a3;
  *(_QWORD *)(a9 + 24) = a4;
  *(_QWORD *)(a9 + 32) = a5;
  *(_QWORD *)(a9 + 40) = a6;
  *(_QWORD *)(a9 + 48) = a7;
  *(_QWORD *)(a9 + 56) = a8;
  *(_QWORD *)(a9 + 64) = a10;
  *(_QWORD *)(a9 + 72) = a11;
  *(_BYTE *)(a9 + 80) = v15;
  *(_QWORD *)(a9 + 88) = a13;
  *(_QWORD *)(a9 + 96) = a14;
  *(_BYTE *)(a9 + 104) = v16;
  return result;
}

uint64_t FormatSupplementary.Kind.collectionViewSupplementaryKind.getter@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 *v1;
  int v3;
  uint64_t v4;
  unsigned int *v5;

  v3 = *v1;
  v4 = sub_1BB870E88();
  v5 = (unsigned int *)MEMORY[0x1E0DBB2B0];
  if (!v3)
    v5 = (unsigned int *)MEMORY[0x1E0DBB2B8];
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v4 - 8) + 104))(a1, *v5, v4);
}

uint64_t FormatSupplementary.Kind.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7265746F6F66;
  else
    return 0x726564616568;
}

uint64_t sub_1BAB1E620(char *a1, char *a2)
{
  return sub_1BB7FC630(*a1, *a2);
}

uint64_t sub_1BAB1E62C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB1E698()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB1E6D8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB1E740(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 0x726564616568;
  if (*v1)
    v2 = 0x7265746F6F66;
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BAB1E774()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed19FormatSupplementaryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;
  char v14;
  char v15;
  char v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned __int8 v40;
  unsigned __int8 v41;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  v5 = *(_QWORD *)(a1 + 48);
  v37 = *(_QWORD *)(a1 + 64);
  v38 = *(_QWORD *)(a1 + 56);
  v33 = *(unsigned __int8 *)(a1 + 80);
  v31 = *(_QWORD *)(a1 + 88);
  v27 = *(unsigned __int8 *)(a1 + 104);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(_QWORD *)(a2 + 48);
  v39 = *(_QWORD *)(a2 + 56);
  v35 = *(_QWORD *)(a1 + 72);
  v36 = *(_QWORD *)(a2 + 64);
  v34 = *(_QWORD *)(a2 + 72);
  v32 = *(unsigned __int8 *)(a2 + 80);
  v29 = *(_QWORD *)(a1 + 96);
  v30 = *(_QWORD *)(a2 + 88);
  v28 = *(_QWORD *)(a2 + 96);
  v26 = *(unsigned __int8 *)(a2 + 104);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v7)
        return 0;
      if (v2 != v8 || v4 != v7)
      {
        v14 = sub_1BB874398();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v6)
    {
      if (!v9)
        return 0;
      if (v3 != v10 || v6 != v9)
      {
        v15 = sub_1BB874398();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
    }
    else if (v9)
    {
      return 0;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v16 = sub_1BA883A18(v5, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v16 & 1) != 0)
    {
      if (v38)
      {
        if (!v39)
          return 0;
        swift_retain();
        v17 = swift_retain();
        v18 = _s8NewsFeed28FormatSupplementaryNodeStyleC2eeoiySbAC_ACtFZ_0(v17, v39);
        swift_release();
        swift_release();
        if (!v18)
          return 0;
LABEL_24:
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_1BA883C24(v37, v36);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
          return 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v20 = sub_1BA6EB330(v35, v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v20 & 1) == 0)
          return 0;
        v21 = v33 ? 0x7265746F6F66 : 0x726564616568;
        v22 = v32 ? 0x7265746F6F66 : 0x726564616568;
        if (v21 == v22)
        {
          swift_bridgeObjectRelease_n();
        }
        else
        {
          v23 = sub_1BB874398();
          swift_bridgeObjectRelease_n();
          result = 0;
          if ((v23 & 1) == 0)
            return result;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v24 = sub_1BA883260(v31, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
          return 0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25 = sub_1BA88ABB4(v29, v28);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
          return 0;
        if (v27 == 7)
        {
          if (v26 != 7)
            return 0;
        }
        else
        {
          v41 = v27;
          if (v26 == 7)
            return 0;
          v40 = v26;
          if (!_s8NewsFeed23FormatAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v41, &v40))
            return 0;
        }
        return 1;
      }
      if (!v39)
        goto LABEL_24;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BAB1EB20()
{
  unint64_t result;

  result = qword_1EF2B0508;
  if (!qword_1EF2B0508)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary.Kind, &type metadata for FormatSupplementary.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2B0508);
  }
  return result;
}

unint64_t sub_1BAB1EB64(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAB1EB90();
  result = sub_1BA4A6480();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB1EB90()
{
  unint64_t result;

  result = qword_1EF2B0510;
  if (!qword_1EF2B0510)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary.Kind, &type metadata for FormatSupplementary.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2B0510);
  }
  return result;
}

unint64_t sub_1BAB1EBD4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB1EBF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB1EBF8()
{
  unint64_t result;

  result = qword_1EF2B0518;
  if (!qword_1EF2B0518)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary.Kind, &type metadata for FormatSupplementary.Kind);
    atomic_store(result, (unint64_t *)&qword_1EF2B0518);
  }
  return result;
}

uint64_t sub_1BAB1EC3C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA55FC08, (uint64_t (*)(void))sub_1BA5A205C, (uint64_t (*)(void))sub_1BAB1EB20);
}

unint64_t sub_1BAB1EC58(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA8968B4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAB1EC7C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA82E21C, (uint64_t (*)(void))sub_1BA82E260, (uint64_t (*)(void))sub_1BAB1EC98);
}

unint64_t sub_1BAB1EC98()
{
  unint64_t result;

  result = qword_1ED3D0798;
  if (!qword_1ED3D0798)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSupplementary, &type metadata for FormatSupplementary);
    atomic_store(result, (unint64_t *)&qword_1ED3D0798);
  }
  return result;
}

uint64_t sub_1BAB1ECDC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1ECE8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v4;
  *(_QWORD *)(a2 + 24) = v3;
  return result;
}

uint64_t sub_1BAB1ED28@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 32);
  v3 = *(_QWORD *)(a1 + 40);
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1ED34(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  return result;
}

uint64_t sub_1BAB1ED74@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1ED80(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1BAB1EDC0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 64);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1EDCC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 64) = v3;
  return result;
}

uint64_t sub_1BAB1EE0C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1EE18(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 72) = v3;
  return result;
}

uint64_t sub_1BAB1EE58@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 80);
  return result;
}

_BYTE *sub_1BAB1EE64(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 80) = *result;
  return result;
}

uint64_t sub_1BAB1EE70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1EE7C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 88) = v3;
  return result;
}

uint64_t sub_1BAB1EEBC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 96);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1EEC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 96) = v3;
  return result;
}

uint64_t assignWithCopy for FormatSupplementary(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t assignWithTake for FormatSupplementary(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSupplementary()
{
  return &type metadata for FormatSupplementary;
}

ValueMetadata *type metadata accessor for FormatSupplementary.Kind()
{
  return &type metadata for FormatSupplementary.Kind;
}

uint64_t FormatBracketDataVisualization.tagIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBracketDataVisualization.query.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBracketDataVisualization.query.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBracketDataVisualization.query.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBracketDataVisualization.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBracketDataVisualization.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBracketDataVisualization.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatBracketDataVisualization.properties.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatBracketDataVisualization.properties.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatBracketDataVisualization.properties.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

_QWORD *FormatBracketDataVisualization.__allocating_init(tagIdentifier:query:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v12;

  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a1;
  v12[3] = a2;
  swift_beginAccess();
  v12[4] = a3;
  v12[5] = a4;
  swift_beginAccess();
  v12[6] = a5;
  swift_beginAccess();
  v12[7] = a6;
  return v12;
}

_QWORD *FormatBracketDataVisualization.init(tagIdentifier:query:selectors:properties:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[2] = a1;
  v6[3] = a2;
  swift_beginAccess();
  v6[4] = a3;
  v6[5] = a4;
  swift_beginAccess();
  v6[6] = a5;
  swift_beginAccess();
  v6[7] = a6;
  return v6;
}

uint64_t sub_1BAB1F4B4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAB1F4F0 + 4 * byte_1BB89FDF0[*v0]))(0x746E656449676174, 0xED00007265696669);
}

uint64_t sub_1BAB1F4F0()
{
  return 0x7972657571;
}

uint64_t sub_1BAB1F504()
{
  return 0x726F7463656C6573;
}

uint64_t sub_1BAB1F520()
{
  return 0x69747265706F7270;
}

uint64_t sub_1BAB1F53C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB201B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB1F560()
{
  sub_1BA9745D8();
  return sub_1BB874710();
}

uint64_t sub_1BAB1F588()
{
  sub_1BA9745D8();
  return sub_1BB87471C();
}

uint64_t FormatBracketDataVisualization.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatBracketDataVisualization.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t FormatBracketDataVisualization.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  char v18;
  char v19;

  v3 = v1;
  sub_1BAB1FE0C(0, &qword_1EF2AB960, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA9745D8();
  sub_1BB8746C8();
  v18 = 0;
  sub_1BB87417C();
  if (!v2)
  {
    swift_beginAccess();
    v10 = v3[4];
    v11 = v3[5];
    swift_bridgeObjectRetain();
    sub_1BA973028(v10, v11, 1);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v13 = v3[6];
    if (*(_QWORD *)(v13 + 16))
    {
      v19 = 2;
      swift_bridgeObjectRetain_n();
      v14 = sub_1BA67F4CC(v13);
      swift_bridgeObjectRelease();
      v17 = v14;
      swift_retain();
      sub_1BA5BBDDC((uint64_t *)&v17);
      swift_release();
      v16 = (uint64_t)v17;
      sub_1BAB1FDB4();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B95C0);
      sub_1BA5BBCE4();
      sub_1BB874464();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_beginAccess();
    v15 = v3[7];
    if (*(_QWORD *)(v15 + 16))
    {
      v19 = 3;
      v17 = (_QWORD *)v15;
      sub_1BAB1FDB4();
      sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9470);
      sub_1BA89BC1C();
      sub_1BB874464();
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FormatBracketDataVisualization.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatBracketDataVisualization.init(from:)(a1);
  return v2;
}

_QWORD *FormatBracketDataVisualization.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  char v46;

  v42 = *v1;
  sub_1BA89B794();
  v38 = v3;
  v36 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v37 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6927D0();
  v39 = *(_QWORD **)(v5 - 8);
  v40 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB1FE0C(0, &qword_1EF2B0520, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v33 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA9745D8();
  v13 = v41;
  sub_1BB87468C();
  if (v13)
  {
    swift_deallocPartialClassInstance();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return v1;
  }
  else
  {
    v41 = v7;
    v14 = v40;
    LOBYTE(v43) = 0;
    v1[2] = sub_1BB874098();
    v1[3] = v15;
    v46 = 1;
    v16 = sub_1BB8740F8();
    v34 = v10;
    v35 = v12;
    if ((v16 & 1) != 0)
    {
      v45 = 1;
      sub_1BB8740D4();
      v17 = v43;
      v18 = v44;
    }
    else
    {
      v17 = 0;
      v18 = 0xE000000000000000;
    }
    v19 = v1;
    v20 = (uint64_t)a1;
    v21 = v39;
    v1[4] = v17;
    v1[5] = v18;
    LOBYTE(v43) = 2;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v39 = a1;
      v46 = 2;
      sub_1BA50AD30(&qword_1ED3BBE20, 255, (uint64_t (*)(uint64_t))sub_1BA6927D0, MEMORY[0x1E0DB3140]);
      v22 = v41;
      sub_1BB8740D4();
      v23 = sub_1BB86DD08();
      ((void (*)(char *, uint64_t))v21[1])(v22, v14);
      v20 = (uint64_t)v39;
    }
    else
    {
      v23 = MEMORY[0x1E0DEE9E8];
    }
    v19[6] = v23;
    LOBYTE(v43) = 3;
    v24 = v35;
    if ((sub_1BB8740F8() & 1) != 0)
    {
      v25 = v20;
      v46 = 3;
      sub_1BA50AD30(&qword_1ED39EDD8, 255, (uint64_t (*)(uint64_t))sub_1BA89B794, MEMORY[0x1E0DB3610]);
      v27 = v37;
      v26 = v38;
      sub_1BB8740D4();
      v29 = v24;
      v30 = sub_1BB86DD08();
      v31 = v27;
      v32 = v30;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v26);
      v20 = v25;
    }
    else
    {
      v32 = MEMORY[0x1E0DEE9D8];
      v29 = v24;
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v9);
    v19[7] = v32;
    __swift_destroy_boxed_opaque_existential_1(v20);
  }
  return v19;
}

_QWORD *sub_1BAB1FD34@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatBracketDataVisualization.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BAB1FD88(_QWORD *a1)
{
  return FormatBracketDataVisualization.encode(to:)(a1);
}

uint64_t sub_1BAB1FDA8(_QWORD **a1, _QWORD **a2)
{
  return static FormatBracketDataVisualization.== infix(_:_:)(*a1, *a2);
}

unint64_t sub_1BAB1FDB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2AB970;
  if (!qword_1EF2AB970)
  {
    sub_1BAB1FE0C(255, &qword_1EF2AB960, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2AB970);
  }
  return result;
}

void sub_1BAB1FE0C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BA9745D8();
    v7 = a3(a1, &type metadata for FormatBracketDataVisualization.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t sub_1BAB1FE68(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  a1[1] = sub_1BA50AD30(&qword_1EF2B0528, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatBracketDataVisualization, (uint64_t)&protocol conformance descriptor for FormatBracketDataVisualization);
  a1[2] = sub_1BA50AD30(&qword_1EF2B0530, v3, (uint64_t (*)(uint64_t))type metadata accessor for FormatBracketDataVisualization, (uint64_t)&protocol conformance descriptor for FormatBracketDataVisualization);
  result = sub_1BA50AD30(&qword_1EF2B0538, v4, (uint64_t (*)(uint64_t))type metadata accessor for FormatBracketDataVisualization, (uint64_t)&protocol conformance descriptor for FormatBracketDataVisualization);
  a1[3] = result;
  return result;
}

uint64_t type metadata accessor for FormatBracketDataVisualization()
{
  return objc_opt_self();
}

uint64_t sub_1BAB1FF00@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1FF4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB1FF98@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatBracketDataVisualization()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatBracketDataVisualization.__allocating_init(tagIdentifier:query:selectors:properties:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of FormatBracketDataVisualization.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t storeEnumTagSinglePayload for FormatBracketDataVisualization.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAB2005C + 4 * byte_1BB89FDF9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAB20090 + 4 * byte_1BB89FDF4[v4]))();
}

uint64_t sub_1BAB20090(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB20098(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB200A0);
  return result;
}

uint64_t sub_1BAB200AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB200B4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAB200B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB200C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatBracketDataVisualization.CodingKeys()
{
  return &type metadata for FormatBracketDataVisualization.CodingKeys;
}

unint64_t sub_1BAB200E0()
{
  unint64_t result;

  result = qword_1EF2B0540;
  if (!qword_1EF2B0540)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89FF8C, &type metadata for FormatBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0540);
  }
  return result;
}

unint64_t sub_1BAB20128()
{
  unint64_t result;

  result = qword_1EF2B0548;
  if (!qword_1EF2B0548)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89FEFC, &type metadata for FormatBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0548);
  }
  return result;
}

unint64_t sub_1BAB20170()
{
  unint64_t result;

  result = qword_1EF2B0550;
  if (!qword_1EF2B0550)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB89FF24, &type metadata for FormatBracketDataVisualization.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0550);
  }
  return result;
}

uint64_t sub_1BAB201B4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x746E656449676174 && a2 == 0xED00007265696669;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972657571 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F7463656C6573 && a2 == 0xE900000000000073 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69747265706F7270 && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t FormatBundleImage.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBundleImage.bundleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatBundleImage.size.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA76F5C4(v2, v3, v4);
}

void sub_1BAB20414(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  unint64_t v15;
  unint64_t v16;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = *((unsigned __int8 *)v1 + 48);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v3;
  *(_QWORD *)(v8 + 24) = v4;
  *(_QWORD *)(v8 + 32) = v5;
  *(_QWORD *)(v8 + 40) = v6;
  v9 = v8 | 0x9000000000000000;
  v10 = *(_QWORD **)(a1 + 48);
  v11 = v10[2];
  if (v11)
  {
    v12 = v10[v11 + 3];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BAA736F8(v12);
    v14 = v13;
    swift_release();
    swift_release();
    if ((v14 & 1) != 0)
    {
      swift_release();
      if (v7 == 255)
        return;
LABEL_11:
      sub_1BAC3816C();
      return;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v10 = sub_1BB38ED0C(0, v10[2] + 1, 1, v10);
  v16 = v10[2];
  v15 = v10[3];
  if (v16 >= v15 >> 1)
    v10 = sub_1BB38ED0C((_QWORD *)(v15 > 1), v16 + 1, 1, v10);
  v10[2] = v16 + 1;
  v10[v16 + 4] = v9;
  swift_release();
  *(_QWORD *)(a1 + 48) = v10;
  if (v7 != 255)
    goto LABEL_11;
}

void sub_1BAB205C8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = *((unsigned __int8 *)v0 + 48);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v2;
  *(_QWORD *)(v6 + 24) = v1;
  *(_QWORD *)(v6 + 32) = v4;
  *(_QWORD *)(v6 + 40) = v3;
  v7 = v6 | 0x9000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB3D80E0(v7);
  swift_release();
  if (v5 != 255)
    sub_1BAC3816C();
}

uint64_t sub_1BAB206A4()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

BOOL _s8NewsFeed17FormatBundleImageV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  char v12;
  _BOOL8 result;
  char v14;
  BOOL v15;
  _QWORD v16[2];
  char v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v12 = sub_1BB874398(), result = 0, (v12 & 1) != 0))
  {
    if (v4)
    {
      if (!v7)
        return 0;
      if (v2 != v8 || v4 != v7)
      {
        v14 = sub_1BB874398();
        result = 0;
        if ((v14 & 1) == 0)
          return result;
      }
    }
    else if (v7)
    {
      return 0;
    }
    if (v6 == 255)
    {
      if (v11 == 255)
        return 1;
    }
    else
    {
      v18 = v3;
      v19 = v5;
      v20 = v6;
      if (v11 != 255)
      {
        v16[0] = v10;
        v16[1] = v9;
        v17 = v11;
        sub_1BA76F5C4(v3, v5, v6);
        sub_1BA76F534(v3, v5, v6);
        v15 = _s8NewsFeed21FormatBundleImageSizeO2eeoiySbAC_ACtFZ_0((uint64_t)&v18, (uint64_t)v16);
        sub_1BA76F57C(v18, v19, v20);
        sub_1BA76F520(v3, v5, v6);
        return v15;
      }
      sub_1BA76F534(v3, v5, v6);
      sub_1BA76F534(v3, v5, v6);
      sub_1BA76F57C(v3, v5, v6);
    }
    sub_1BA76F5C4(v10, v9, v11);
    sub_1BA76F520(v3, v5, v6);
    sub_1BA76F520(v10, v9, v11);
    return 0;
  }
  return result;
}

unint64_t sub_1BAB2088C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB208B0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB208B0()
{
  unint64_t result;

  result = qword_1EF2B0558;
  if (!qword_1EF2B0558)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImage, &type metadata for FormatBundleImage);
    atomic_store(result, (unint64_t *)&qword_1EF2B0558);
  }
  return result;
}

unint64_t sub_1BAB208F4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA58618C();
  a1[2] = sub_1BA58975C();
  result = sub_1BAB20928();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB20928()
{
  unint64_t result;

  result = qword_1EF2B0560;
  if (!qword_1EF2B0560)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBundleImage, &type metadata for FormatBundleImage);
    atomic_store(result, (unint64_t *)&qword_1EF2B0560);
  }
  return result;
}

uint64_t destroy for FormatBundleImage(uint64_t a1)
{
  uint64_t result;
  int v3;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 != 255)
    return sub_1BA76F57C(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
  return result;
}

uint64_t initializeWithCopy for FormatBundleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    sub_1BA76F534(v8, v7, v6);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v7;
    *(_BYTE *)(a1 + 48) = v6;
  }
  return a1;
}

uint64_t assignWithCopy for FormatBundleImage(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 32);
  v5 = (__int128 *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v6 == 255)
    {
      v15 = *v5;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *v4 = v15;
    }
    else
    {
      v13 = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a2 + 40);
      sub_1BA76F534(v13, v12, v6);
      *(_QWORD *)(a1 + 32) = v13;
      *(_QWORD *)(a1 + 40) = v12;
      *(_BYTE *)(a1 + 48) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_1BAB20B54(a1 + 32);
    v14 = *(_BYTE *)(a2 + 48);
    *v4 = *v5;
    *(_BYTE *)(a1 + 48) = v14;
  }
  else
  {
    v8 = *(_QWORD *)(a2 + 32);
    v7 = *(_QWORD *)(a2 + 40);
    sub_1BA76F534(v8, v7, v6);
    v9 = *(_QWORD *)(a1 + 32);
    v10 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v7;
    v11 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v6;
    sub_1BA76F57C(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1BAB20B54(uint64_t a1)
{
  destroy for FormatBundleImageSize(a1);
  return a1;
}

uint64_t assignWithTake for FormatBundleImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a1 + 48);
  if (v7 == 255)
    goto LABEL_5;
  v8 = *(unsigned __int8 *)(a2 + 48);
  if (v8 == 255)
  {
    sub_1BAB20B54(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *v6;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    return a1;
  }
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v6;
  *(_BYTE *)(a1 + 48) = v8;
  sub_1BA76F57C(v9, v10, v7);
  return a1;
}

ValueMetadata *type metadata accessor for FormatBundleImage()
{
  return &type metadata for FormatBundleImage;
}

uint64_t sub_1BAB20C34()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id FeedContext.subscription.getter()
{
  id *v0;

  return *v0;
}

uint64_t FeedContext.displayFreeBadges.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 9);
}

uint64_t FeedContext.displayPremiumBadges.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 10);
}

uint64_t FeedContext.debugForcePremiumBadging.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 11);
}

uint64_t FeedContext.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedContext.segmentSetIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FeedContext.platform.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *a1 = v2;
  a1[1] = v3;
  return sub_1BA653B2C(v2, v3);
}

uint64_t FeedContext.allowsNewsProxyAudioCommands.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 48);
}

void *FeedContext.timesOfDayConfiguration.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 56);
  v2 = v1;
  return v1;
}

uint64_t FeedContext.feedEditionConfig.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *a1 = *(_QWORD *)(v1 + 64);
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedContext.init(subscription:displayFreeBadges:displayPremiumBadges:debugForcePremiumBadging:segmentSetIds:platform:allowsNewsProxyAudioCommands:timesOfDayConfiguration:userInfo:selectors:)@<X0>(char *a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, char a7@<W6>, void *a8@<X7>, uint64_t a9@<X8>, _QWORD *a10, uint64_t a11)
{
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  char v24;
  _QWORD *v25;
  char *v26;
  char v27;
  uint64_t v28;
  id v29;
  unsigned __int8 v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v39;
  char v40;
  char v41;
  char v42;
  uint64_t v43;
  void *v44;
  id v46;
  __int128 v47;
  __int128 v48;
  unsigned __int8 v49[24];
  uint64_t v50;

  v16 = *a6;
  v17 = a6[1];
  v18 = a1 + 1;
  v19 = a1;
  if (objc_getAssociatedObject(v19, v18))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v47 = 0u;
    v48 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v47, (uint64_t)v49);
  v20 = MEMORY[0x1E0DEE9B8];
  v43 = v16;
  v41 = a4;
  v42 = a2;
  v40 = a3;
  v44 = a8;
  if (!v50)
  {
    v21 = MEMORY[0x1E0DEE9B8];
    sub_1BA6ED734((uint64_t)v49, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    goto LABEL_9;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  v21 = v20;
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v22 = 0;
    v23 = 0;
    goto LABEL_10;
  }
  v22 = v46;
  v23 = (unint64_t)objc_msgSend(v46, sel_integerValue);
  if (v23 == -1)
  {

    v24 = -65;
    v25 = a10;
    v26 = v19;
    v27 = a7;
    v28 = a11;
    goto LABEL_19;
  }
LABEL_10:
  v26 = v19;
  if (objc_getAssociatedObject(v19, (const void *)~v23))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v47 = 0u;
    v48 = 0u;
  }
  v28 = a11;
  sub_1BA78DE64((uint64_t)&v47, (uint64_t)v49);
  if (!v50)
  {
    sub_1BA6ED734((uint64_t)v49, (unint64_t *)&qword_1ED3BA040, v21 + 8);
    goto LABEL_17;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_17:

    v24 = -65;
    goto LABEL_18;
  }
  v29 = v46;
  v30 = objc_msgSend(v29, sel_integerValue);

  v24 = v30 - 65;
LABEL_18:
  v25 = a10;
  v27 = a7;
LABEL_19:
  v37 = (uint64_t)v25;
  v49[0] = 0;
  v39 = sub_1BAB21038(v26, a5, (uint64_t)v44, v49, v25, v28);
  swift_bridgeObjectRelease();
  v31 = qword_1ED3C0C80;
  v32 = v44;
  if (v31 != -1)
    swift_once();
  v33 = (v23 + 1) ^ v24;
  swift_beginAccess();
  v35 = qword_1ED3C5420;
  v34 = *(_QWORD *)algn_1ED3C5428;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  result = __swift_destroy_boxed_opaque_existential_1(v37);
  *(_QWORD *)a9 = v26;
  *(_BYTE *)(a9 + 8) = v33 & 1;
  *(_BYTE *)(a9 + 9) = v42 & 1;
  *(_BYTE *)(a9 + 10) = v40 & 1;
  *(_BYTE *)(a9 + 11) = v41 & 1;
  *(_QWORD *)(a9 + 16) = v39;
  *(_QWORD *)(a9 + 24) = a5;
  *(_QWORD *)(a9 + 32) = v43;
  *(_QWORD *)(a9 + 40) = v17;
  *(_BYTE *)(a9 + 48) = v27 & 1;
  *(_QWORD *)(a9 + 56) = v44;
  *(_QWORD *)(a9 + 64) = v35;
  *(_QWORD *)(a9 + 72) = v34;
  return result;
}

uint64_t sub_1BAB21038(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, _QWORD *a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  unint64_t inited;
  id v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  id v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  uint64_t v70;
  unint64_t v71;
  _QWORD *v72;
  char v73;
  const char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  int64_t v83;
  unint64_t v84;
  unint64_t v85;
  int v86;
  _QWORD *v87;
  int64_t v88;
  unint64_t v89;
  int64_t v90;
  uint64_t v91;
  uint64_t v93;
  int v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107[2];
  uint64_t v108;
  uint64_t v109;

  v93 = a6;
  v95 = a5;
  v102 = a3;
  v105 = a2;
  v103 = a1;
  v101 = sub_1BB86C8B0();
  v100 = *(_QWORD *)(v101 - 8);
  MEMORY[0x1E0C80A78](v101);
  v99 = (char *)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  MEMORY[0x1E0C80A78](v8);
  v98 = (char *)&v93 - v9;
  sub_1BA4A3FB4(0, &qword_1ED3C4510, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v93 - v11;
  v97 = sub_1BB86C9C4();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = sub_1BB86C9DC();
  v15 = *(_QWORD *)(v104 - 8);
  MEMORY[0x1E0C80A78](v104);
  v17 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v93 - v19;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3C4500, (void (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v93 - v22;
  v94 = *a4;
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB8832C0;
  strcpy((char *)v107, "platform-");
  WORD1(v107[1]) = 0;
  HIDWORD(v107[1]) = -385875968;
  v25 = objc_msgSend((id)objc_opt_self(), sel_currentDevice, v93);
  v26 = (char *)objc_msgSend(v25, sel_userInterfaceIdiom);

  sub_1BB872AFC(v26 + 1);
  swift_bridgeObjectRelease();
  v27 = v107[1];
  *(_QWORD *)(inited + 32) = v107[0];
  *(_QWORD *)(inited + 40) = v27;
  v107[0] = 0;
  v107[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v107[0] = 0xD000000000000019;
  v107[1] = 0x80000001BB96C980;
  objc_msgSend((id)objc_opt_self(), sel_isInternalBuild);
  sub_1BB872AFC((_QWORD *)0x6C616E7265746E69);
  swift_bridgeObjectRelease();
  v28 = v107[1];
  *(_QWORD *)(inited + 48) = v107[0];
  *(_QWORD *)(inited + 56) = v28;
  v107[0] = 0x2D676E616CLL;
  v107[1] = 0xE500000000000000;
  sub_1BB86C994();
  sub_1BB86C9D0();
  v29 = *(void (**)(char *, uint64_t))(v15 + 8);
  v29(v20, v104);
  sub_1BB86C9A0();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v14, v97);
  v30 = sub_1BB86C91C();
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v23, 1, v30) == 1)
  {
    sub_1BA502AD0((uint64_t)v23, (unint64_t *)&unk_1ED3C4500, (void (*)(uint64_t))MEMORY[0x1E0CB0AE8]);
  }
  else
  {
    sub_1BB86C910();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v30);
  }
  sub_1BB872AFC(v32);
  swift_bridgeObjectRelease();
  v33 = sub_1BB872A0C();
  v35 = v34;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 64) = v33;
  *(_QWORD *)(inited + 72) = v35;
  strcpy((char *)v107, "region-");
  v107[1] = 0xE700000000000000;
  sub_1BB86C994();
  sub_1BB86C988();
  v29(v17, v104);
  v36 = sub_1BB86C97C();
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v12, 1, v36) == 1)
  {
    sub_1BA502AD0((uint64_t)v12, &qword_1ED3C4510, (void (*)(uint64_t))MEMORY[0x1E0CB0C48]);
  }
  else
  {
    sub_1BB86C910();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v12, v36);
  }
  v38 = (uint64_t)v98;
  sub_1BB872AFC(&v109);
  swift_bridgeObjectRelease();
  v39 = sub_1BB872A0C();
  v41 = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 80) = v39;
  *(_QWORD *)(inited + 88) = v41;
  strcpy((char *)v107, "app-version-");
  BYTE5(v107[1]) = 0;
  HIWORD(v107[1]) = -5120;
  v42 = (void *)objc_opt_self();
  v43 = objc_msgSend(v42, sel_mainBundle);
  sub_1BB86EBB4();
  v44 = sub_1BB86EB84();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v38, 1, v44) == 1)
  {
    sub_1BA502AD0(v38, &qword_1ED3B0930, (void (*)(uint64_t))MEMORY[0x1E0DB4DC8]);
  }
  else
  {
    sub_1BB86EB24();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v44);
  }
  v47 = (unint64_t)&v108;
  sub_1BB872AFC(v46);
  swift_bridgeObjectRelease();
  v48 = sub_1BB872A0C();
  v50 = v49;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = v48;
  *(_QWORD *)(inited + 104) = v50;
  strcpy((char *)v107, "app-build-");
  BYTE3(v107[1]) = 0;
  HIDWORD(v107[1]) = -369098752;
  v51 = objc_msgSend(v42, sel_mainBundle);
  sub_1BB873894();

  sub_1BB872AFC(v52);
  swift_bridgeObjectRelease();
  v53 = sub_1BB872A0C();
  v55 = v54;
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 112) = v53;
  *(_QWORD *)(inited + 120) = v55;
  v107[0] = 0;
  v107[1] = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v107[0] = 0x762D74616D726F66;
  v107[1] = 0xEF2D6E6F69737265;
  if (qword_1ED3BB468 != -1)
LABEL_50:
    swift_once();
  __swift_project_value_buffer(v44, (uint64_t)qword_1ED3B8FC8);
  sub_1BB86EB24();
  sub_1BB872AFC(v56);
  swift_bridgeObjectRelease();
  v57 = v107[1];
  *(_QWORD *)(inited + 128) = v107[0];
  *(_QWORD *)(inited + 136) = v57;
  v58 = sub_1BA6E43EC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)v47 = v58;
  if (qword_1ED3C6318 != -1)
    swift_once();
  v59 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v59);
  if (qword_1ED3C6D90 != -1)
    swift_once();
  v60 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v60);
  v61 = v99;
  sub_1BB86C8A4();
  v62 = sub_1BA6D5BF0();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v101);
  v63 = sub_1BA6E43EC((uint64_t)v62);
  swift_bridgeObjectRelease();
  sub_1BA6E3FB8(v63);
  if (v102)
  {
    v64 = sub_1BA7F2FB0();
    v65 = v64[2];
    if (!v65)
      goto LABEL_21;
LABEL_19:
    v66 = v64 + 5;
    do
    {
      v67 = *(v66 - 1);
      v68 = *v66;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC(v107, v67, v68);
      swift_bridgeObjectRelease();
      v66 += 2;
      --v65;
    }
    while (v65);
    goto LABEL_21;
  }
  v64 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v65 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
  if (v65)
    goto LABEL_19;
LABEL_21:
  swift_bridgeObjectRelease();
  v69 = objc_msgSend(v103, sel_unprotectedSubscriptionState);
  v70 = 0xD00000000000001BLL;
  v71 = 0x80000001BB963850;
  v72 = v95;
  v73 = v94;
  switch((unint64_t)v69)
  {
    case 0uLL:
      v71 = 0x80000001BB963830;
      v70 = 0xD000000000000019;
      break;
    case 1uLL:
      v70 = 0xD00000000000001ELL;
      v74 = "bundle-subscription-subscribed";
      goto LABEL_26;
    case 2uLL:
      break;
    case 3uLL:
      v70 = 0xD000000000000022;
      v74 = "bundle-subscription-not-subscribed";
LABEL_26:
      v71 = (unint64_t)(v74 - 32) | 0x8000000000000000;
      break;
    default:
      v71 = 0x80000001BB96C9A0;
      v72 = v95;
      v73 = v94;
      break;
  }
  sub_1BA6EE5AC(v107, v70, v71);
  swift_bridgeObjectRelease();
  LOBYTE(v107[0]) = v73;
  v75 = FeedMode.selectors.getter();
  sub_1BA6E3FB8(v75);
  v76 = v72[3];
  v77 = v72[4];
  __swift_project_boxed_opaque_existential_1(v72, v76);
  v78 = (*(uint64_t (**)(uint64_t, uint64_t))(v77 + 16))(v76, v77);
  sub_1BA6E3FB8(v78);
  v79 = v105 + 56;
  v80 = 1 << *(_BYTE *)(v105 + 32);
  v81 = -1;
  if (v80 < 64)
    v81 = ~(-1 << v80);
  v47 = v81 & *(_QWORD *)(v105 + 56);
  v82 = (unint64_t)(v80 + 63) >> 6;
  swift_bridgeObjectRetain();
  v83 = 0;
  inited = 0xE000000000000000;
  v44 = MEMORY[0x1E0DEDC18];
  while (1)
  {
    if (v47)
    {
      v84 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      v85 = v84 | (v83 << 6);
      goto LABEL_31;
    }
    v88 = v83 + 1;
    if (__OFADD__(v83, 1))
    {
      __break(1u);
LABEL_49:
      __break(1u);
      goto LABEL_50;
    }
    if (v88 >= v82)
      goto LABEL_47;
    v89 = *(_QWORD *)(v79 + 8 * v88);
    ++v83;
    if (!v89)
    {
      v83 = v88 + 1;
      if (v88 + 1 >= v82)
        goto LABEL_47;
      v89 = *(_QWORD *)(v79 + 8 * v83);
      if (!v89)
      {
        v83 = v88 + 2;
        if (v88 + 2 >= v82)
          goto LABEL_47;
        v89 = *(_QWORD *)(v79 + 8 * v83);
        if (!v89)
          break;
      }
    }
LABEL_46:
    v47 = (v89 - 1) & v89;
    v85 = __clz(__rbit64(v89)) + (v83 << 6);
LABEL_31:
    v86 = *(_DWORD *)(*(_QWORD *)(v105 + 48) + 4 * v85);
    v107[0] = 0;
    v107[1] = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v107[0] = 0xD000000000000010;
    v107[1] = 0x80000001BB96C9C0;
    v106 = v86;
    sub_1BB87420C();
    sub_1BB872AFC(v87);
    swift_bridgeObjectRelease();
    sub_1BA6EE5AC(v107, v107[0], v107[1]);
    swift_bridgeObjectRelease();
  }
  v90 = v88 + 3;
  if (v90 < v82)
  {
    v89 = *(_QWORD *)(v79 + 8 * v90);
    if (!v89)
    {
      while (1)
      {
        v83 = v90 + 1;
        if (__OFADD__(v90, 1))
          goto LABEL_49;
        if (v83 >= v82)
          goto LABEL_47;
        v89 = *(_QWORD *)(v79 + 8 * v83);
        ++v90;
        if (v89)
          goto LABEL_46;
      }
    }
    v83 = v90;
    goto LABEL_46;
  }
LABEL_47:
  swift_release();
  v91 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v91);
  return v108;
}

__n128 FeedContext.init(subscription:displayFreeBadges:displayPremiumBadges:debugForcePremiumBadging:segmentSetIds:platform:allowsNewsProxyAudioCommands:timesOfDayConfiguration:feedEditionConfig:feedMode:userInfo:selectors:)@<Q0>(char *a1@<X0>, char a2@<W1>, char a3@<W2>, char a4@<W3>, uint64_t a5@<X4>, unint64_t *a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, __n128 *a9@<X8>, __n128 *a10, unsigned __int8 *a11, _QWORD *a12, uint64_t a13)
{
  unint64_t v17;
  unint64_t v18;
  const void *v19;
  char *v20;
  uint64_t v21;
  void *v22;
  unint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unsigned __int8 v28;
  char v29;
  char v30;
  uint64_t v31;
  __n128 result;
  unsigned __int8 v34;
  char v35;
  char v36;
  unint64_t v38;
  __n128 v40;
  id v41;
  __int128 v42;
  __int128 v43;
  unsigned __int8 v44[24];
  uint64_t v45;

  v18 = *a6;
  v17 = a6[1];
  v40 = *a10;
  v34 = *a11;
  v19 = a1 + 1;
  v20 = a1;
  v35 = a2;
  v36 = a3;
  if (objc_getAssociatedObject(v20, v19))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v42 = 0u;
    v43 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v42, (uint64_t)v44);
  v21 = MEMORY[0x1E0DEE9B8];
  v38 = v18;
  if (!v45)
  {
    sub_1BA6ED734((uint64_t)v44, (unint64_t *)&qword_1ED3BA040, MEMORY[0x1E0DEE9B8] + 8);
    goto LABEL_9;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    v22 = 0;
    v23 = 0;
    goto LABEL_10;
  }
  v22 = v41;
  v23 = (unint64_t)objc_msgSend(v41, sel_integerValue);
  if (v23 == -1)
  {
    v24 = v20;
    goto LABEL_16;
  }
LABEL_10:
  v24 = v20;
  if (objc_getAssociatedObject(v20, (const void *)~v23))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v42 = 0u;
    v43 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v42, (uint64_t)v44);
  if (!v45)
  {
    v25 = a5;
    v26 = a8;
    sub_1BA6ED734((uint64_t)v44, (unint64_t *)&qword_1ED3BA040, v21 + 8);
    goto LABEL_18;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v25 = a5;
    v26 = a8;
LABEL_18:

    v29 = -92;
    goto LABEL_19;
  }
  v25 = a5;
  v26 = a8;
  v27 = v41;
  v28 = objc_msgSend(v27, sel_integerValue);

  v29 = v28 - 92;
LABEL_19:
  v30 = v29 ^ v23;
  v44[0] = v34;
  v31 = sub_1BAB21038(v24, v25, v26, v44, a12, a13);

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a12);
  a9->n128_u64[0] = (unint64_t)v24;
  a9->n128_u8[8] = v30 & 1;
  a9->n128_u8[9] = v35 & 1;
  a9->n128_u8[10] = v36 & 1;
  a9->n128_u8[11] = a4 & 1;
  a9[1].n128_u64[0] = v31;
  a9[1].n128_u64[1] = v25;
  a9[2].n128_u64[0] = v38;
  a9[2].n128_u64[1] = v17;
  a9[3].n128_u8[0] = a7 & 1;
  a9[3].n128_u64[1] = v26;
  result = v40;
  a9[4] = v40;
  return result;
}

id FeedContext.premiumBadge(forIssue:)@<X0>(id result@<X0>, char *a2@<X8>)
{
  unsigned __int8 *v2;
  void *v4;
  int v5;
  unsigned __int8 v6;
  char v7;

  if ((v2[11] & 1) != 0
    || (v4 = result, v5 = v2[9], v6 = v2[10], result = objc_msgSend(result, sel_isPaid), (_DWORD)result)
    && (v6 & 1) != 0)
  {
    v7 = 1;
  }
  else
  {
    result = objc_msgSend(v4, sel_isPaid);
    if (result | v5 ^ 1)
      v7 = 0;
    else
      v7 = 2;
  }
  *a2 = v7;
  return result;
}

uint64_t assignWithCopy for FeedContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  unint64_t v7;
  void *v8;
  void *v9;
  id v10;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40) - 1;
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
  {
    if (v7 >= 3)
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BA6ED734(a1 + 32, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
    goto LABEL_6;
  }
  if (v7 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(void **)(a1 + 56);
  v9 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = v9;

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FeedContext(uint64_t a1, uint64_t a2)
{
  void *v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_BYTE *)(a1 + 10) = *(_BYTE *)(a2 + 10);
  *(_BYTE *)(a1 + 11) = *(_BYTE *)(a2 + 11);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v5 = (_QWORD *)(a2 + 32);
  if ((unint64_t)(*(_QWORD *)(a1 + 40) - 1) >= 3)
  {
    v6 = *(_QWORD *)(a2 + 40);
    if ((unint64_t)(v6 - 1) >= 3)
    {
      *(_QWORD *)(a1 + 32) = *v5;
      *(_QWORD *)(a1 + 40) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA6ED734(a1 + 32, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
  }
  *(_OWORD *)(a1 + 32) = *(_OWORD *)v5;
LABEL_6:
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v7 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_1BAB222A8()
{
  unint64_t result;

  result = qword_1EF2B0568;
  if (!qword_1EF2B0568)
  {
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEBB28], MEMORY[0x1E0DEBAF0]);
    atomic_store(result, (unint64_t *)&qword_1EF2B0568);
  }
  return result;
}

ValueMetadata *type metadata accessor for A12_V8()
{
  return &type metadata for A12_V8;
}

uint64_t sub_1BAB222FC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2B06A8, (uint64_t (*)(void))sub_1BAB25A74, (uint64_t)&type metadata for A12_V8.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB25A74();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAB224B0()
{
  sub_1BAB25A74();
  return sub_1BB874710();
}

uint64_t sub_1BAB224D8()
{
  sub_1BAB25A74();
  return sub_1BB87471C();
}

double sub_1BAB22500@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BAB25860(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BAB22544(_QWORD *a1)
{
  return sub_1BAB222FC(a1);
}

uint64_t sub_1BAB22558()
{
  sub_1BAB2554C();
  return sub_1BB86D96C();
}

uint64_t sub_1BAB225C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char v15;
  void *v16;
  unsigned __int8 v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  char v44;
  unint64_t v45;
  unint64_t v46;
  _QWORD *v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unint64_t v72;
  __int128 v73;
  unsigned __int8 v74;
  ValueMetadata *v75;
  unint64_t v76;
  uint64_t v77;

  v62 = a2;
  v55 = a3;
  v56 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v63 = *(_QWORD *)(v9 - 8);
  v64 = v9;
  MEMORY[0x1E0C80A78](v9);
  v77 = (uint64_t)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - v12;
  v61 = type metadata accessor for GroupLayoutBindingContext();
  v60 = *(_QWORD *)(v61 - 8);
  MEMORY[0x1E0C80A78](v61);
  v59 = (uint64_t)&v54 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *v3;
  v16 = (void *)*((_QWORD *)v3 + 1);
  v17 = v3[16];
  v66 = a1;
  sub_1BA4C2DD8(a1, v59, v18);
  sub_1BA4C2DD8(a2, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA7C26A0(v16, v17);
  sub_1BB86C8D4();
  v58 = sub_1BB86C8C8();
  v57 = v19;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v56);
  v75 = &type metadata for A12_V8;
  v20 = sub_1BA8EE4D4();
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  type metadata accessor for GroupLayoutKey();
  v21 = swift_allocObject();
  sub_1BA7C26A0(v16, v17);
  v67 = sub_1BB874734();
  v68 = v22;
  v71 = 95;
  v72 = 0xE100000000000000;
  v69 = 45;
  v70 = 0xE100000000000000;
  sub_1BA7114A0();
  v23 = sub_1BB873B04();
  v25 = v24;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 16) = v23;
  *(_QWORD *)(v21 + 24) = v25;
  v26 = (uint64_t *)(v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
  v27 = v57;
  *v26 = v58;
  v26[1] = v27;
  sub_1BA4C010C((uint64_t)&v73, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
  v28 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
  sub_1BA5193C4(v59, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v60 + 56))(v28, 0, 1, v61);
  v29 = v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
  sub_1BA5193C4((uint64_t)v13, v21 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v63 + 56))(v29, 0, 1, v64);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  sub_1BA7C2538(v16, v17);
  v75 = &type metadata for A12_V8;
  v76 = v20;
  LOBYTE(v73) = v15;
  *((_QWORD *)&v73 + 1) = v16;
  v74 = v17;
  sub_1BA4C2DD8(v62, v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
  sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
  v30 = swift_allocObject();
  v31 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v30 + 16) = MEMORY[0x1E0DEE9D8];
  v32 = (_QWORD *)(v30 + 16);
  swift_beginAccess();
  v33 = *(_QWORD **)(v30 + 16);
  sub_1BA7C26A0(v16, v17);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v30 + 16) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v33 = sub_1BA7892A0(0, v33[2] + 1, 1, v33);
    *v32 = v33;
  }
  v36 = v33[2];
  v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    v33 = sub_1BA7892A0((_QWORD *)(v35 > 1), v36 + 1, 1, v33);
    *v32 = v33;
  }
  v33[2] = v36 + 1;
  v37 = &v33[2 * v36];
  v37[4] = sub_1BACB8D7C;
  v37[5] = 0;
  swift_endAccess();
  v38 = v65;
  v39 = sub_1BA7E1F18((uint64_t)&unk_1E7268DC0, 0, 0, v30, 4, 0, 0, 0);
  if (v38)
  {
    swift_release();
    swift_release();
    sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v73);
  }
  else
  {
    v40 = v39;
    swift_release();
    v41 = swift_allocObject();
    *(_QWORD *)(v41 + 16) = v31;
    v42 = (_QWORD *)(v41 + 16);
    swift_beginAccess();
    v43 = *(_QWORD **)(v41 + 16);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v41 + 16) = v43;
    if ((v44 & 1) == 0)
    {
      v43 = sub_1BA7892A0(0, v43[2] + 1, 1, v43);
      *v42 = v43;
    }
    v46 = v43[2];
    v45 = v43[3];
    if (v46 >= v45 >> 1)
    {
      v43 = sub_1BA7892A0((_QWORD *)(v45 > 1), v46 + 1, 1, v43);
      *v42 = v43;
    }
    v43[2] = v46 + 1;
    v47 = &v43[2 * v46];
    v47[4] = sub_1BACB8D7C;
    v47[5] = 0;
    swift_endAccess();
    v49 = sub_1BA7E1F18((uint64_t)&unk_1E7268DE8, 0, 0, v41, 0, 0, 0, 0);
    swift_release();
    v67 = v40;
    sub_1BA7DD6A0(v49);
    v50 = v67;
    v51 = type metadata accessor for A12_V8.Bound();
    v52 = v55;
    v55[3] = v51;
    v52[4] = sub_1BA4A2870(qword_1EF2B0580, (uint64_t (*)(uint64_t))type metadata accessor for A12_V8.Bound, (uint64_t)&unk_1BB8A02B0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v52);
    *boxed_opaque_existential_0 = v21;
    sub_1BA4CECCC(&v73, (uint64_t)(boxed_opaque_existential_0 + 1));
    result = sub_1BA5193C4(v77, (uint64_t)boxed_opaque_existential_0 + *(int *)(v51 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v51 + 28)) = v50;
  }
  return result;
}

double sub_1BAB22BF4@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t inited;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  double result;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _BYTE *v48;
  _QWORD v49[6];
  char v50[105];
  __int128 v51[9];
  __int128 v52[2];
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v2 = v1;
  v48 = a1;
  v3 = sub_1BB86DA38();
  v43 = *(_QWORD *)(v3 - 8);
  v44 = v3;
  MEMORY[0x1E0C80A78](v3);
  *(_QWORD *)&v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v6 = type metadata accessor for A12_V8.Bound();
  v7 = v1 + *(int *)(v6 + 24);
  v8 = type metadata accessor for GroupLayoutContext();
  v9 = *(_QWORD *)(v7 + *(int *)(v8 + 40));
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(int *)(v8 + 32);
  v45 = v7;
  v12 = *(double *)(v7 + v11);
  sub_1BA4C010C(v10 + 16, (uint64_t)&v53);
  sub_1BA4C010C(v10 + 56, (uint64_t)v52);
  v13 = v12 * *(double *)(v10 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v53, v14 + 16);
  sub_1BA4CECCC(v52, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v51[0]) = 1;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v51, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v9 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v52);
  sub_1BA4C010C(v15 + 56, (uint64_t)v51);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v52, v17 + 16);
  sub_1BA4CECCC(v51, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v50[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v50, (uint64_t *)&v53);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v53, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v6 + 28)) + 16) - 1);
  *(_QWORD *)&v53 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v53;
  v47 = v2;
  v49[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(v21 + 16);
  if (v22 >= 4)
    v23 = 4;
  else
    v23 = *(_QWORD *)(v21 + 16);
  sub_1BB874434();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain_n();
  v24 = swift_dynamicCastClass();
  if (!v24)
  {
    swift_bridgeObjectRelease();
    v24 = MEMORY[0x1E0DEE9D8];
  }
  v25 = *(_QWORD *)(v24 + 16);
  swift_release();
  if (v25 == v22 - v23)
  {
    v26 = swift_dynamicCastClass();
    if (!v26)
    {
      swift_bridgeObjectRelease();
      v26 = MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    v41 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v26 = sub_1BA85CDD8(v21, v21 + ((v41 + 32) & ~v41), v23, (2 * v22) | 1);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)&v53 = v26;
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v28 = v27;
  sub_1BA8F1DA0(&qword_1EF2A9F08, MEMORY[0x1E0DEAF50]);
  v42 = v28;
  sub_1BB8730F0();
  swift_release();
  v29 = *MEMORY[0x1E0DB5D88];
  v30 = sub_1BB86D678();
  v31 = v46;
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 104))(v46, v29, v30);
  v32 = (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v43 + 104))(v31, *MEMORY[0x1E0DB6200], v44);
  MEMORY[0x1E0C80A78](v32);
  sub_1BAB255F0(0, &qword_1EF2B0628, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  sub_1BB86DB34();
  swift_bridgeObjectRelease();
  v33 = sub_1BB86DB40();
  v46 = v53;
  v34 = v54;
  v35 = v55;
  *(_QWORD *)&v53 = v21;
  *(_QWORD *)&v52[0] = v56;
  MEMORY[0x1E0C80A78](v33);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA8F1DA0((unint64_t *)&qword_1ED3B94C0, MEMORY[0x1E0DEAF38]);
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v36 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v53 = v36;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v37 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v38 = v48;
  *v48 = 0;
  result = *(double *)&v46;
  *(_OWORD *)(v38 + 8) = v46;
  *((_QWORD *)v38 + 3) = v34;
  *((_QWORD *)v38 + 4) = v35;
  v40 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v38 + 5) = v37;
  *((_QWORD *)v38 + 6) = v40;
  return result;
}

uint64_t sub_1BAB23218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BAB255F0(0, &qword_1EF2B0648, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAB255B0(&qword_1EF2B0650, &qword_1EF2B0648, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BAB23374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t *);
  uint64_t (*v14)(uint64_t, _QWORD *);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  void (*v34)(unint64_t, _QWORD, uint64_t);
  void (*v35)(uint64_t *, uint64_t);
  void (*v36)(uint64_t *, uint64_t);
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t *);
  uint64_t v50;
  unsigned int v51;
  void (*v52)(uint64_t);
  unsigned int v53;
  void (*v54)(uint64_t *, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v56 = a3;
  v57 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v46 - v7);
  v60 = a1;
  v9 = a1;
  v10 = sub_1BB86D438();
  v11 = swift_allocBox();
  v53 = *MEMORY[0x1E0DB5A38];
  v52 = *(void (**)(uint64_t))(*(_QWORD *)(v10 - 8) + 104);
  v52(v12);
  *v8 = v11;
  v51 = *MEMORY[0x1E0DB6318];
  v13 = *(void (**)(uint64_t *))(v6 + 104);
  v13(v8);
  v14 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
  v55 = v15;
  v50 = sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v14, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v54 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v54(v8, v5);
  v60 = v9;
  sub_1BAA71EEC();
  v17 = v16;
  v18 = swift_allocBox();
  v20 = (char *)v19 + *(int *)(v17 + 48);
  *v19 = 7;
  v21 = *MEMORY[0x1E0DB61C8];
  v22 = sub_1BB86DA20();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v20, v21, v22);
  *v8 = v18;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v13)(v8, *MEMORY[0x1E0DB6338], v5);
  v59 = v57;
  sub_1BB86D498();
  v23 = v54;
  v54(v8, v5);
  v60 = v9;
  v24 = v9;
  v25 = swift_allocBox();
  v26 = v10;
  ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v27, v53, v10);
  *v8 = v25;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v13)(v8, v51, v5);
  sub_1BB86D4EC();
  v23(v8, v5);
  v60 = v24;
  v28 = *MEMORY[0x1E0DB6410];
  v49 = v13;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v13)(v8, v28, v5);
  sub_1BAB25674();
  sub_1BA4CDF6C(0, &qword_1EF2B0670, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v30 = v29;
  v31 = *(_QWORD *)(v29 - 8);
  v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
  v34 = *(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104);
  v35 = v54;
  v34(v33 + v32, *MEMORY[0x1E0DB5C80], v30);
  v58 = v57;
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v36 = v35;
  result = ((uint64_t (*)(uint64_t *, uint64_t))v35)(v8, v5);
  v38 = *(_QWORD *)(v56 + 16);
  if (v38)
  {
    swift_bridgeObjectRetain();
    v47 = v5;
    v39 = 0;
    HIDWORD(v46) = *MEMORY[0x1E0DB63C0];
    v48 = v38;
    do
    {
      v40 = v36;
      v57 = *(_QWORD *)(v56 + 8 * v39++ + 32);
      v60 = v24;
      v41 = swift_allocBox();
      ((void (*)(uint64_t, _QWORD, uint64_t))v52)(v42, v53, v26);
      *v8 = v41;
      v43 = v49;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v49)(v8, v51, v5);
      swift_bridgeObjectRetain();
      sub_1BB86D4EC();
      v40(v8, v5);
      v60 = v24;
      v44 = ((uint64_t (*)(uint64_t *, _QWORD, uint64_t))v43)(v8, HIDWORD(v46), v5);
      MEMORY[0x1E0C80A78](v44);
      sub_1BB86D498();
      v45 = v48;
      v36 = v54;
      v54(v8, v5);
      swift_bridgeObjectRelease();
    }
    while (v45 != v39);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1BAB2389C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t result;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t (*v24)(uint64_t, _QWORD *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (uint64_t *)((char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = type metadata accessor for HeadlineViewLayout.Context(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v25 - v14;
  v28 = a1;
  swift_getKeyPath();
  result = (*(uint64_t (**)(char *, _QWORD, uint64_t))(v13 + 104))(v15, *MEMORY[0x1E0DB63C0], v12);
  if (*(_QWORD *)(a2 + 16))
  {
    sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), (uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v17 = (char *)v6 + v4[5];
    v27 = v12;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v26 = v13;
    v20 = v19;
    v21 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v21 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v17, 0, 1, v20);
    v22 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 1;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v22;
    v23 = v22;
    sub_1BAB62528((uint64_t)v10, (uint64_t)v6);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for HeadlineViewLayout.Context);
    v24 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
    sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v24, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v27);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAB23B50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v19 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v18 - v7);
  v23 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 4;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v22 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
  sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v23 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 4;
  *v8 = v14;
  v11(v8, v10, v5);
  v15 = v19;
  v21 = v19;
  sub_1BB86D4BC();
  v13(v8, v5);
  v23 = a1;
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = 4;
  *v8 = v16;
  v11(v8, v10, v5);
  v20 = v15;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAB23DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
  sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAB241C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
  sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAB245D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void **v27;
  void *v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  double v32;
  uint64_t (*v33)(uint64_t, _QWORD *);
  unint64_t v35;
  _QWORD v36[2];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v36 - v19;
  v44 = a1;
  KeyPath = swift_getKeyPath();
  v22 = *MEMORY[0x1E0DB63C0];
  v43 = v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 104))(v20, v22, v17);
  if (*(_QWORD *)(a2 + 16) < 4uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v36[1] = KeyPath;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 3 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v23 = (char *)v11 + v9[5];
  v24 = *MEMORY[0x1E0DB61C8];
  v25 = sub_1BB86DA20();
  v26 = *(_QWORD *)(v25 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v23, v24, v25);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  v27 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 0;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v28 = *v27;
  *(_QWORD *)((char *)v11 + v9[7]) = v28;
  v29 = qword_1ED3BC390;
  v30 = v28;
  if (v29 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v31 = swift_release();
  v32 = MEMORY[0x1E0C80A78](v31);
  v36[-4] = v15;
  v36[-3] = v11;
  v35 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v32);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v33 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
  sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v33, MEMORY[0x1E0DB5A18]);
  v35 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v20, v37);
}

uint64_t sub_1BAB249E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
  sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 6;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BAB24BC8(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16))
  {
    v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for HeadlineViewLayout.Context(0) - 8) + 80);
    v15 = a2 + ((v14 + 32) & ~v14);
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
    sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1BAB24E7C(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  double v22;
  double v23;
  double v24;
  double v25;
  id v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _QWORD v28[2];

  v4 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (_QWORD *)((char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4CDF6C(0, &qword_1EF2B0640, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (_QWORD *)((char *)v28 - v10);
  v28[1] = a1;
  swift_getKeyPath();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = 0x4060E00000000000;
  *v11 = v12;
  result = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x1E0DB6330], v8);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    v14 = type metadata accessor for HeadlineViewLayout.Context(0);
    v15 = a2
        + *(_QWORD *)(*(_QWORD *)(v14 - 8) + 72)
        + ((*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v14 - 8) + 80));
    v16 = v4[5];
    v28[0] = v8;
    v17 = (char *)v6 + v16;
    v18 = *MEMORY[0x1E0DB61C8];
    v19 = sub_1BB86DA20();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    v21 = (void *)*MEMORY[0x1E0DC4918];
    *v6 = 0;
    *(_QWORD *)((char *)v6 + v4[6]) = 0;
    *(_QWORD *)((char *)v6 + v4[7]) = v21;
    v22 = *MEMORY[0x1E0DC49E8];
    v23 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v24 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v25 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v26 = v21;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v15, (uint64_t)v6, v22, v23, v24, v25);
    sub_1BA4A2E80((uint64_t)v6, type metadata accessor for HeadlineViewLayout.Options);
    v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
    sub_1BAB255F0(0, &qword_1EF2B0658, MEMORY[0x1E0DB5A10]);
    sub_1BAB255B0(&qword_1EF2B0660, &qword_1EF2B0658, v27, MEMORY[0x1E0DB5A18]);
    sub_1BA595D14();
    sub_1BB86D4C8();
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t *, _QWORD))(v9 + 8))(v11, v28[0]);
  }
  return result;
}

uint64_t sub_1BAB2513C@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V8.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BAB2521C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BAB225C0(a1, a2, a3);
}

uint64_t sub_1BAB25230()
{
  return sub_1BB690B3C();
}

unint64_t sub_1BAB25240(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAB2526C();
  result = sub_1BAB252B0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB2526C()
{
  unint64_t result;

  result = qword_1EF2B0570;
  if (!qword_1EF2B0570)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A01FC, &type metadata for A12_V8);
    atomic_store(result, (unint64_t *)&qword_1EF2B0570);
  }
  return result;
}

unint64_t sub_1BAB252B0()
{
  unint64_t result;

  result = qword_1EF2B0578;
  if (!qword_1EF2B0578)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0224, &type metadata for A12_V8);
    atomic_store(result, (unint64_t *)&qword_1EF2B0578);
  }
  return result;
}

uint64_t type metadata accessor for A12_V8.Bound()
{
  uint64_t result;

  result = qword_1EF2B05E0;
  if (!qword_1EF2B05E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAB25330()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB2533C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BAB253B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAB253C4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BAB25438()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAB254C4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2B0620, (uint64_t (*)(uint64_t))type metadata accessor for A12_V8.Bound, (uint64_t)&unk_1BB8A0288);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAB25500(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB23218(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BAB25508()
{
  unint64_t result;

  result = qword_1EF2B0630;
  if (!qword_1EF2B0630)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A03E0, &type metadata for A12_V8.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2B0630);
  }
  return result;
}

unint64_t sub_1BAB2554C()
{
  unint64_t result;

  result = qword_1EF2B0638;
  if (!qword_1EF2B0638)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A03B0, &type metadata for A12_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0638);
  }
  return result;
}

uint64_t sub_1BAB25590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BAB2513C(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BAB25598()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB255A8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB23374(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAB255B0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAB255F0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAB255F0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V8.Layout;
    v8[1] = &type metadata for A12_V8.Layout.Attributes;
    v8[2] = sub_1BAB25508();
    v8[3] = sub_1BAB2554C();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BAB2566C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB2389C(a1, *(_QWORD *)(v1 + 16));
}

void sub_1BAB25674()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B0668)
  {
    sub_1BA4CDF6C(255, &qword_1EF2B0670, (uint64_t (*)(void))sub_1BAB25508, (uint64_t)&type metadata for A12_V8.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B0668);
  }
}

uint64_t sub_1BAB256E8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB23B50(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB256F0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB249E0(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB256F8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB24BC8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB25700(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB24E7C(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB25708(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB23DB8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB25710(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB241C4(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB25718(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB245D0(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V8.Layout.Attributes()
{
  return &type metadata for A12_V8.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V8.Layout()
{
  return &type metadata for A12_V8.Layout;
}

unint64_t sub_1BAB25744()
{
  unint64_t result;

  result = qword_1EF2B0678;
  if (!qword_1EF2B0678)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0350, &type metadata for A12_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0678);
  }
  return result;
}

unint64_t sub_1BAB2578C()
{
  unint64_t result;

  result = qword_1EF2B0680;
  if (!qword_1EF2B0680)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0328, &type metadata for A12_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0680);
  }
  return result;
}

unint64_t sub_1BAB257D4()
{
  unint64_t result;

  result = qword_1EF2B0688;
  if (!qword_1EF2B0688)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0300, &type metadata for A12_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0688);
  }
  return result;
}

unint64_t sub_1BAB2581C()
{
  unint64_t result;

  result = qword_1EF2B0690;
  if (!qword_1EF2B0690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0378, &type metadata for A12_V8.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0690);
  }
  return result;
}

uint64_t sub_1BAB25860@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2B0698, (uint64_t (*)(void))sub_1BAB25A74, (uint64_t)&type metadata for A12_V8.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB25A74();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BAB25A74()
{
  unint64_t result;

  result = qword_1EF2B06A0;
  if (!qword_1EF2B06A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A04D4, &type metadata for A12_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B06A0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V8.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB25B04 + 4 * byte_1BB8A01ED[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB25B38 + 4 * asc_1BB8A01E8[v4]))();
}

uint64_t sub_1BAB25B38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB25B40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB25B48);
  return result;
}

uint64_t sub_1BAB25B54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB25B5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB25B60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB25B68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V8.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V8.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BAB25B88()
{
  unint64_t result;

  result = qword_1EF2B06B0;
  if (!qword_1EF2B06B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A04AC, &type metadata for A12_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B06B0);
  }
  return result;
}

unint64_t sub_1BAB25BD0()
{
  unint64_t result;

  result = qword_1EF2B06B8;
  if (!qword_1EF2B06B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A041C, &type metadata for A12_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B06B8);
  }
  return result;
}

unint64_t sub_1BAB25C18()
{
  unint64_t result;

  result = qword_1EF2B06C0;
  if (!qword_1EF2B06C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0444, &type metadata for A12_V8.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B06C0);
  }
  return result;
}

uint64_t sub_1BAB25C5C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t result;
  uint64_t v7;

  result = sub_1BB874734();
  *a3 = result;
  a3[1] = v7;
  a3[2] = a1;
  a3[3] = a2;
  return result;
}

uint64_t sub_1BAB25C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;

  v10 = sub_1BB874734();
  v12 = v11;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  *a5 = v10;
  a5[1] = v12;
  a5[2] = a2;
  a5[3] = a3;
  return result;
}

uint64_t GroupLayoutBindingKey.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  if (!v1)
    return sub_1BB8745E4();
  sub_1BB8745E4();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t GroupLayoutBindingKey.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

uint64_t sub_1BAB25E4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

uint64_t sub_1BAB25EE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1BB872A90();
  if (!v1)
    return sub_1BB8745E4();
  sub_1BB8745E4();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB25F5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1BB8745CC();
  sub_1BB872A90();
  sub_1BB8745E4();
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    swift_bridgeObjectRelease();
  }
  return sub_1BB874608();
}

uint64_t _s8NewsFeed21GroupLayoutBindingKeyV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;
  char v7;
  uint64_t result;
  BOOL v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = a2[2];
  v4 = a2[3];
  v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (v7 = sub_1BB874398(), result = 0, (v7 & 1) != 0))
  {
    if (v3)
    {
      if (v4)
      {
        v9 = v2 == v5 && v3 == v4;
        if (v9 || (sub_1BB874398() & 1) != 0)
          return 1;
      }
    }
    else if (!v4)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAbstract()
{
  return &type metadata for FormatAbstract;
}

uint64_t FormatPackageDirection.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  char v24;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  char v34;

  v3 = v2;
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v31 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v30 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (v2)
  {
    v10 = a2;
    goto LABEL_4;
  }
  __swift_project_boxed_opaque_existential_1(&v32, v33);
  v11 = sub_1BB8743B0();
  v21 = v11;
  v22 = v12;
  v23 = v11 == 0x746E6F7A69726F68 && v12 == 0xEA00000000006C61;
  if (v23 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v24 = 2;
LABEL_20:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_21:
    *a2 = v24;
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  if (v21 == 0x6C61636974726576 && v22 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v24 = 4;
    goto LABEL_20;
  }
  v10 = a2;
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *v29 = v21;
  v29[1] = v22;
  v29[2] = 0;
  v29[3] = 0;
  v29[4] = 0xE000000000000000;
  swift_willThrow();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v32);
LABEL_4:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v13 = sub_1BB872874();
  v14 = Dictionary<>.errorOnUnknownKeys.getter(v13);
  swift_bridgeObjectRelease();
  a2 = v10;
  v15 = v7;
  v16 = v31;
  if ((v14 & 1) == 0)
    goto LABEL_10;
  v17 = sub_1BB8740EC();
  v18 = *(_QWORD *)(v17 + 16);
  if (!v18)
  {
LABEL_9:
    swift_bridgeObjectRelease();
LABEL_10:
    sub_1BAB26EC0();
    v32 = 0uLL;
    sub_1BB8740D4();
    if ((v34 & 1) != 0)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);

      v24 = 4;
    }
    else
    {
      v32 = xmmword_1BB87FC90;
      sub_1BAB26F04();
      sub_1BB874068();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);

      if (v34 == 4)
        v24 = 2;
      else
        v24 = v34;
    }
    goto LABEL_21;
  }
  v19 = (unint64_t *)(v17 + 40);
  while (1)
  {
    v20 = *v19;
    if (*v19 >= 4)
      break;
    v19 += 2;
    if (!--v18)
      goto LABEL_9;
  }
  v26 = *(v19 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v27 = (void *)swift_allocError();
  *(_QWORD *)v28 = v26;
  *(_QWORD *)(v28 + 8) = v20;
  *(_QWORD *)(v28 + 16) = &unk_1E7268E48;
  *(_OWORD *)(v28 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v26, v20);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v9, v16);

  sub_1BA7F8B78(a1, (uint64_t)v27);
  swift_willThrow();

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t FormatPackageDirection.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  uint64_t v45;
  _BYTE v46[24];
  uint64_t v47;
  int v48;
  char v49;

  sub_1BA6EE1B8(0);
  MEMORY[0x1E0C80A78](v3);
  v44 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v5);
  v42 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v40 = (char *)&v39 - v8;
  MEMORY[0x1E0C80A78](v9);
  v43 = (char *)&v39 - v10;
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v39 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v39 - v14;
  v48 = *v1;
  v16 = a1[3];
  v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  if (qword_1ED3C6D78 != -1)
    swift_once();
  v18 = sub_1BB86EB84();
  v19 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476C68);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  v20(v15, v19, v18);
  v21 = type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  v22 = v45;
  sub_1BA69F160((uint64_t)v15, (uint64_t)sub_1BA90CF04, 0, v16, v17);
  if (v22)
  {
    v23 = type metadata accessor for FormatVersionRequirement;
    return sub_1BA4A2E80((uint64_t)v15, v23);
  }
  v39 = v20;
  v45 = v21;
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for FormatVersionRequirement);
  v25 = v48;
  if (v48 == 4)
  {
    v29 = a1[3];
    v30 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v29);
    v31 = (uint64_t)v42;
    v39(v42, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v31, (uint64_t)sub_1BA90CF04, 0, v29, v30);
    sub_1BA4A2E80(v31, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    v49 = 1;
  }
  else
  {
    if (v48 != 2)
    {
      v32 = a1[3];
      v33 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v32);
      sub_1BA6B8518();
      v15 = v44;
      sub_1BA6EC090((uint64_t)&type metadata for FormatCodingKeys, v34, v32, (uint64_t)&type metadata for FormatVersions.CrystalGlow, v33, (uint64_t)&off_1E734BC60, (uint64_t)v44);
      if (qword_1ED3C4170 != -1)
        swift_once();
      v35 = __swift_project_value_buffer(v18, (uint64_t)qword_1ED476998);
      v36 = (uint64_t)v43;
      v37 = v39;
      v39(v43, v35, v18);
      swift_storeEnumTagMultiPayload();
      sub_1BAD76CB8(0, v36);
      sub_1BA4A2E80(v36, type metadata accessor for FormatVersionRequirement);
      v38 = (uint64_t)v40;
      v37(v40, v35, v18);
      swift_storeEnumTagMultiPayload();
      sub_1BAD16354(v25, 0, 1uLL, v38, (uint64_t)sub_1BA90CF04, 0);
      sub_1BA4A2E80(v38, type metadata accessor for FormatVersionRequirement);
      v23 = (uint64_t (*)(_QWORD))sub_1BA6EE1B8;
      return sub_1BA4A2E80((uint64_t)v15, v23);
    }
    v26 = a1[3];
    v27 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v26);
    v28 = (uint64_t)v41;
    v39(v41, v19, v18);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160(v28, (uint64_t)sub_1BA90CF04, 0, v26, v27);
    sub_1BA4A2E80(v28, type metadata accessor for FormatVersionRequirement);
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    sub_1BB8746B0();
    v49 = 0;
  }
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v46, v47);
  sub_1BAB26F48();
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
}

uint64_t FormatPackageDirection.description.getter()
{
  _BYTE *v0;

  if (*v0 == 4)
    return 0x6C61636974726576;
  sub_1BB872AFC((_QWORD *)0xE000000000000000);
  sub_1BB873E34();
  return 0;
}

uint64_t sub_1BAB26AE4(char *a1, char *a2)
{
  return sub_1BB7F78AC(*a1, *a2);
}

uint64_t sub_1BAB26AF0()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB26B74()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB26BD4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB26C54@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAB26CB0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x746E6F7A69726F68;
  if (*v1)
    v2 = 0x6C61636974726576;
  v3 = 0xEA00000000006C61;
  if (*v1)
    v3 = 0xE800000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAB26CF4()
{
  sub_1BAB27234();
  return sub_1BB872D60();
}

uint64_t sub_1BAB26D50()
{
  sub_1BAB27234();
  return sub_1BB872D0C();
}

BOOL static FormatPackageDirection.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 == 4)
    return v3 == 4;
  if (v3 == 4)
    return 0;
  return v2 == v3;
}

uint64_t sub_1BAB26DD8()
{
  _BYTE *v0;

  if (*v0 == 4)
    return 0x6C61636974726576;
  sub_1BB872AFC((_QWORD *)0xE000000000000000);
  sub_1BB873E34();
  return 0;
}

uint64_t sub_1BAB26E74@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatPackageDirection.init(from:)(a1, a2);
}

uint64_t sub_1BAB26E88(_QWORD *a1)
{
  return FormatPackageDirection.encode(to:)(a1);
}

BOOL sub_1BAB26E9C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2;
  int v3;
  _BOOL4 v4;
  _BOOL4 v6;

  v2 = *a1;
  v3 = *a2;
  v4 = v3 == 4;
  v6 = v3 != 4 && v2 == v3;
  if (v2 == 4)
    return v4;
  else
    return v6;
}

unint64_t sub_1BAB26EC0()
{
  unint64_t result;

  result = qword_1EF2B06C8;
  if (!qword_1EF2B06C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A07D4, &type metadata for FormatPackageDirection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B06C8);
  }
  return result;
}

unint64_t sub_1BAB26F04()
{
  unint64_t result;

  result = qword_1EF2B06D0;
  if (!qword_1EF2B06D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirectionHorizontal, &type metadata for FormatPackageDirectionHorizontal);
    atomic_store(result, (unint64_t *)&qword_1EF2B06D0);
  }
  return result;
}

unint64_t sub_1BAB26F48()
{
  unint64_t result;

  result = qword_1ED3A2B60;
  if (!qword_1ED3A2B60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A07AC, &type metadata for FormatPackageDirection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B60);
  }
  return result;
}

unint64_t sub_1BAB26F8C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5BBA8C();
  a1[2] = sub_1BAB26FC0();
  result = sub_1BAB27004();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB26FC0()
{
  unint64_t result;

  result = qword_1ED3A2B70;
  if (!qword_1ED3A2B70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirection, &type metadata for FormatPackageDirection);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B70);
  }
  return result;
}

unint64_t sub_1BAB27004()
{
  unint64_t result;

  result = qword_1EF2B06D8;
  if (!qword_1EF2B06D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPackageDirection, &type metadata for FormatPackageDirection);
    atomic_store(result, (unint64_t *)&qword_1EF2B06D8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatPackageDirection(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  BOOL v7;
  unsigned int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
  {
    v6 = *a1;
    v7 = v6 >= 4;
    v8 = v6 - 4;
    if (!v7)
      v8 = -1;
    if (v8 + 1 >= 2)
      return v8;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BAB27098 + 4 * asc_1BB8A0600[v4]))();
  }
}

uint64_t sub_1BAB270EC(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 4)
    return v1 - 3;
  else
    return 0;
}

_BYTE *sub_1BAB27100(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 3;
  return result;
}

ValueMetadata *type metadata accessor for FormatPackageDirection()
{
  return &type metadata for FormatPackageDirection;
}

uint64_t storeEnumTagSinglePayload for FormatPackageDirection.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB2716C + 4 * byte_1BB8A0614[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB271A0 + 4 * byte_1BB8A060F[v4]))();
}

uint64_t sub_1BAB271A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB271A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB271B0);
  return result;
}

uint64_t sub_1BAB271BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB271C4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB271C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB271D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatPackageDirection.CodingType()
{
  return &type metadata for FormatPackageDirection.CodingType;
}

unint64_t sub_1BAB271F0()
{
  unint64_t result;

  result = qword_1EF2B06E0;
  if (!qword_1EF2B06E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0784, &type metadata for FormatPackageDirection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B06E0);
  }
  return result;
}

unint64_t sub_1BAB27234()
{
  unint64_t result;

  result = qword_1ED3A2B68;
  if (!qword_1ED3A2B68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A070C, &type metadata for FormatPackageDirection.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A2B68);
  }
  return result;
}

uint64_t sub_1BAB27278()
{
  _QWORD *v0;

  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  *v0 = 0xD00000000000005DLL;
  v0[1] = 0x80000001BB96CA00;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BAB272F0()
{
  return sub_1BAB27278();
}

void destroy for FormatInspectionContext(uint64_t a1)
{
  swift_bridgeObjectRelease();

}

uint64_t initializeWithCopy for FormatInspectionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;
  void *v5;
  id v6;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  v5 = *(void **)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  swift_bridgeObjectRetain();
  v6 = v5;
  return a1;
}

_QWORD *assignWithCopy for FormatInspectionContext(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  v4 = (void *)a2[7];
  v5 = (void *)a1[7];
  a1[7] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for FormatInspectionContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  void *v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v6 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for FormatMenuGroupData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 64))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatMenuGroupData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatInspectionContext()
{
  return &type metadata for FormatInspectionContext;
}

uint64_t FeedNativeAdInsertion.nativeAd.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB872208();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t FeedNativeAdInsertion.sectionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t type metadata accessor for FeedNativeAdInsertion()
{
  uint64_t result;

  result = qword_1ED3B1E08;
  if (!qword_1ED3B1E08)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FeedNativeAdInsertion.replacing(sectionIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  _QWORD *v8;

  v7 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a3, v3, v7);
  v8 = (_QWORD *)(a3 + *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20));
  *v8 = a1;
  v8[1] = a2;
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BAB27604()
{
  return 0xD000000000000035;
}

BOOL static FeedNativeAdManager.PlacementPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FeedNativeAdManager.PlacementPolicy.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FeedNativeAdManager.PlacementPolicy.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t FeedNativeAdManager.__allocating_init(nativeAdService:placementPolicy:)(__int128 *a1, _BYTE *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v4);
  v5 = swift_allocObject();
  LOBYTE(a2) = *a2;
  *(_QWORD *)(v5 + 64) = MEMORY[0x1E0DEE9D8];
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  v6 = sub_1BB86DD50();
  v7 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v5 + 72) = v6;
  *(_QWORD *)(v5 + 80) = v7;
  *(_BYTE *)(v5 + 88) = 0;
  sub_1BA4CECCC(a1, v5 + 16);
  *(_BYTE *)(v5 + 56) = (_BYTE)a2;
  return v5;
}

uint64_t FeedNativeAdManager.init(nativeAdService:placementPolicy:)(__int128 *a1, char *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v2;
  v6 = sub_1BB86DD44();
  MEMORY[0x1E0C80A78](v6);
  v7 = *a2;
  *(_QWORD *)(v3 + 64) = MEMORY[0x1E0DEE9D8];
  sub_1BB86DD38();
  sub_1BB86DD5C();
  swift_allocObject();
  v8 = sub_1BB86DD50();
  v9 = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v3 + 72) = v8;
  *(_QWORD *)(v3 + 80) = v9;
  *(_BYTE *)(v3 + 88) = 0;
  sub_1BA4CECCC(a1, v3 + 16);
  *(_BYTE *)(v3 + 56) = v7;
  return v3;
}

uint64_t FeedNativeAdManager.fetchNativeAd(for:sectionIdentifier:group:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  _QWORD *v12;
  id v13;
  uint64_t v14;
  uint64_t v17;

  sub_1BB86DD20();
  swift_beginAccess();
  v8 = *(_QWORD *)(v5 + 80);
  swift_bridgeObjectRetain();
  v9 = sub_1BA761FE4(a3, a4, v8);
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(v5 + 56) & 1) == 0)
  {
    if (!((*(_BYTE *)(v5 + 88) != 0) | v9 & 1))
      goto LABEL_3;
LABEL_5:
    sub_1BB86DD2C();
    sub_1BAB27AD8();
    swift_allocError();
    sub_1BA4B07F0(0, &qword_1ED3BA878, (uint64_t (*)(uint64_t))type metadata accessor for FeedNativeAdInsertion, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  if ((v9 & 1) != 0)
    goto LABEL_5;
LABEL_3:
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1BA6EE5AC(&v17, a3, a4);
  swift_endAccess();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v5 + 88) = 1;
  sub_1BB86DD2C();
  swift_allocObject();
  v10 = swift_weakInit();
  MEMORY[0x1E0C80A78](v10);
  sub_1BB872208();
  sub_1BB86EC14();
  swift_release();
  sub_1BA657D64();
  v11 = (void *)sub_1BB87345C();
  v12 = (_QWORD *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a4;
  v12[4] = a5;
  type metadata accessor for FeedNativeAdInsertion();
  swift_bridgeObjectRetain();
  v13 = a5;
  v14 = sub_1BB86E98C();
  swift_release();

  swift_release();
  return v14;
}

unint64_t sub_1BAB27AD8()
{
  unint64_t result;

  result = qword_1ED3BA918;
  if (!qword_1ED3BA918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0BF4, &type metadata for FeedNativeAdManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1ED3BA918);
  }
  return result;
}

uint64_t sub_1BAB27B1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *Strong;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  swift_beginAccess();
  Strong = (_QWORD *)swift_weakLoadStrong();
  if (Strong)
  {
    v10 = Strong[5];
    v11 = Strong[6];
    __swift_project_boxed_opaque_existential_1(Strong + 2, v10);
    v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8))(a2, a3, a4, a5, v10, v11);
    swift_release();
  }
  else
  {
    v12 = sub_1BB86DF00();
    sub_1BA4A2870((unint64_t *)&unk_1EF2C5B30, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v13, *MEMORY[0x1E0DB3590], v12);
    swift_willThrow();
  }
  return v12;
}

uint64_t sub_1BAB27C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  _QWORD *v11;

  v10 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a5, a1, v10);
  v11 = (_QWORD *)(a5 + *(int *)(type metadata accessor for FeedNativeAdInsertion() + 20));
  *v11 = a2;
  v11[1] = a3;
  swift_bridgeObjectRetain();
  return sub_1BAB27CE0(a5, a4);
}

uint64_t sub_1BAB27CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v21 = a2;
  v18 = a1;
  v2 = sub_1BB872610();
  v22 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB872664();
  v19 = *(_QWORD *)(v5 - 8);
  v20 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FeedNativeAdInsertion();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  MEMORY[0x1E0C80A78](v8);
  sub_1BA657D64();
  v11 = (void *)sub_1BB87345C();
  v12 = swift_allocObject();
  swift_weakInit();
  sub_1BAB28E14(v18, (uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = v12;
  sub_1BAB28EEC((uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  aBlock[4] = sub_1BAB28F30;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_23;
  v15 = _Block_copy(aBlock);
  swift_retain();
  sub_1BB872634();
  v23 = MEMORY[0x1E0DEE9D8];
  v16 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9310, v16, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA571C58();
  sub_1BB873BC4();
  sub_1BB873414();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
  swift_release();
  return swift_release();
}

Swift::Void __swiftcall FeedNativeAdManager.nativeAdInsertionDidComplete(success:)(Swift::Bool success)
{
  uint64_t v1;
  char v3;

  sub_1BB86DD20();
  if (success)
    v3 = 2;
  else
    v3 = 0;
  *(_BYTE *)(v1 + 88) = v3;
  sub_1BB86DD2C();
}

uint64_t sub_1BAB27FB4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t i;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t);
  unint64_t v17;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    v5 = (unint64_t *)(result + 64);
    swift_beginAccess();
    v6 = *(_QWORD *)(v4 + 64);
    v17 = MEMORY[0x1E0DEE9D8];
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1BB873F30();
      v7 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          goto LABEL_28;
        }
        for (i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0)
          {
            v9 = MEMORY[0x1BCCE4630](i, v6);
          }
          else
          {
            v9 = *(_QWORD *)(v6 + 8 * i + 32);
            swift_retain();
          }
          v10 = MEMORY[0x1BCCE5D40](v9 + 32);
          swift_unknownObjectRelease();
          if (v10)
          {
            sub_1BB873DB0();
            sub_1BB873DE0();
            sub_1BB873DEC();
            sub_1BB873DBC();
          }
          else
          {
            swift_release();
          }
        }
        swift_bridgeObjectRelease();
        v11 = v17;
LABEL_16:
        *v5 = v11;
        swift_bridgeObjectRelease();
        v12 = *v5;
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain_n();
          result = sub_1BB873F30();
          v13 = result;
          if (result)
          {
LABEL_18:
            if (v13 >= 1)
            {
              v14 = 0;
              do
              {
                if ((v12 & 0xC000000000000001) != 0)
                {
                  v15 = MEMORY[0x1BCCE4630](v14, v12);
                }
                else
                {
                  v15 = *(_QWORD *)(v12 + 8 * v14 + 32);
                  swift_retain();
                }
                ++v14;
                v16 = *(void (**)(uint64_t))(v15 + 16);
                swift_retain();
                v16(a2);
                swift_release();
                swift_release();
              }
              while (v13 != v14);
              goto LABEL_25;
            }
LABEL_28:
            __break(1u);
            return result;
          }
        }
        else
        {
          v13 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
          result = swift_bridgeObjectRetain_n();
          if (v13)
            goto LABEL_18;
        }
LABEL_25:
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease();
    v11 = MEMORY[0x1E0DEE9D8];
    goto LABEL_16;
  }
  return result;
}

uint64_t FeedNativeAdManager.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FeedNativeAdManager.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB28294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  return FeedNativeAdManager.fetchNativeAd(for:sectionIdentifier:group:build:)(a1, a2, a3, a4, a5);
}

uint64_t sub_1BAB282B4(char a1)
{
  uint64_t *v1;
  uint64_t v3;
  char v4;

  v3 = *v1;
  sub_1BB86DD20();
  if ((a1 & 1) != 0)
    v4 = 2;
  else
    v4 = 0;
  *(_BYTE *)(v3 + 88) = v4;
  return sub_1BB86DD2C();
}

uint64_t sub_1BAB282F8()
{
  uint64_t v0;

  swift_release();
  sub_1BA8FD860(v0 + 32);
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB28324()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t DisabledFeedNativeAdManager.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t DisabledFeedNativeAdManager.init()()
{
  uint64_t v0;

  return v0;
}

Swift::Bool __swiftcall DisabledFeedNativeAdManager.shouldFetchNativeAd(for:)(Swift::String a1)
{
  return 0;
}

uint64_t DisabledFeedNativeAdManager.fetchNativeAd(for:sectionIdentifier:group:build:)()
{
  sub_1BAB285F4();
  swift_allocError();
  sub_1BA4B07F0(0, &qword_1ED3BA878, (uint64_t (*)(uint64_t))type metadata accessor for FeedNativeAdInsertion, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9C8();
}

uint64_t DisabledFeedNativeAdManager.onFetch(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for DisposableObserver();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 16) = nullsub_1;
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakAssign();
  a1[3] = v2;
  result = sub_1BA4A2870(&qword_1ED3B52C8, (uint64_t (*)(uint64_t))type metadata accessor for DisposableObserver, (uint64_t)&unk_1BB8A0BC4);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t DisabledFeedNativeAdManager.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t DisabledFeedNativeAdManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB2846C()
{
  sub_1BAB285F4();
  swift_allocError();
  sub_1BA4B07F0(0, &qword_1ED3BA878, (uint64_t (*)(uint64_t))type metadata accessor for FeedNativeAdInsertion, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9C8();
}

uint64_t sub_1BAB284DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = type metadata accessor for DisposableObserver();
  v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v3 + 16) = nullsub_1;
  *(_QWORD *)(v3 + 24) = 0;
  swift_unknownObjectWeakAssign();
  a1[3] = v2;
  result = sub_1BA4A2870(&qword_1ED3B52C8, (uint64_t (*)(uint64_t))type metadata accessor for DisposableObserver, (uint64_t)&unk_1BB8A0BC4);
  a1[4] = result;
  *a1 = v3;
  return result;
}

uint64_t sub_1BAB28568()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAB2858C()
{
  uint64_t *v0;

  return sub_1BAB27B1C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1BAB285AC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1BAB285D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1BAB27C44(a1, v2[2], v2[3], v2[4], a2);
}

unint64_t sub_1BAB285F4()
{
  unint64_t result;

  result = qword_1EF2B06E8;
  if (!qword_1EF2B06E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0B84, &type metadata for DisabledFeedNativeAdManager.Error);
    atomic_store(result, (unint64_t *)&qword_1EF2B06E8);
  }
  return result;
}

unint64_t sub_1BAB2863C()
{
  unint64_t result;

  result = qword_1EF2B06F0;
  if (!qword_1EF2B06F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedNativeAdManager.PlacementPolicy, &type metadata for FeedNativeAdManager.PlacementPolicy);
    atomic_store(result, (unint64_t *)&qword_1EF2B06F0);
  }
  return result;
}

uint64_t dispatch thunk of FeedNativeAdManagerType.shouldFetchNativeAd(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FeedNativeAdManagerType.fetchNativeAd(for:sectionIdentifier:group:build:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 16))();
}

uint64_t dispatch thunk of FeedNativeAdManagerType.nativeAdInsertionDidComplete(success:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedNativeAdInsertion(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB872208();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FeedNativeAdInsertion(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeedNativeAdInsertion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeedNativeAdInsertion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeedNativeAdInsertion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for FeedNativeAdInsertion(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedNativeAdInsertion()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB28934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB872208();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for FeedNativeAdInsertion()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB289C0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB872208();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

uint64_t sub_1BAB28A3C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB872208();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t method lookup function for FeedNativeAdManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedNativeAdManager.__allocating_init(nativeAdService:placementPolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t storeEnumTagSinglePayload for FeedNativeAdManager.PlacementPolicy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB28B0C + 4 * byte_1BB8A0835[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB28B40 + 4 * asc_1BB8A0830[v4]))();
}

uint64_t sub_1BAB28B40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB28B48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB28B50);
  return result;
}

uint64_t sub_1BAB28B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB28B64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB28B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB28B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedNativeAdManager.PlacementPolicy()
{
  return &type metadata for FeedNativeAdManager.PlacementPolicy;
}

uint64_t type metadata accessor for DisabledFeedNativeAdManager()
{
  return objc_opt_self();
}

uint64_t method lookup function for DisabledFeedNativeAdManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DisabledFeedNativeAdManager.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t storeEnumTagSinglePayload for FeedNativeAdManager.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAB28C0C + 4 * byte_1BB8A083F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAB28C40 + 4 * byte_1BB8A083A[v4]))();
}

uint64_t sub_1BAB28C40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB28C48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB28C50);
  return result;
}

uint64_t sub_1BAB28C5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB28C64);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAB28C68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB28C70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedNativeAdManager.State()
{
  return &type metadata for FeedNativeAdManager.State;
}

ValueMetadata *type metadata accessor for DisabledFeedNativeAdManager.Error()
{
  return &type metadata for DisabledFeedNativeAdManager.Error;
}

uint64_t _s8NewsFeed27DisabledFeedNativeAdManagerC5ErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAB28CE0 + 4 * byte_1BB8A0844[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAB28D00 + 4 * byte_1BB8A0849[v4]))();
}

_BYTE *sub_1BAB28CE0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAB28D00(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB28D08(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB28D10(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB28D18(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB28D20(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedNativeAdManager.Errors()
{
  return &type metadata for FeedNativeAdManager.Errors;
}

unint64_t sub_1BAB28D40()
{
  unint64_t result;

  result = qword_1EF2B06F8;
  if (!qword_1EF2B06F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0A8C, &type metadata for FeedNativeAdManager.Errors);
    atomic_store(result, (unint64_t *)&qword_1EF2B06F8);
  }
  return result;
}

unint64_t sub_1BAB28D88()
{
  unint64_t result;

  result = qword_1EF2B0700;
  if (!qword_1EF2B0700)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0AF4, &type metadata for DisabledFeedNativeAdManager.Error);
    atomic_store(result, (unint64_t *)&qword_1EF2B0700);
  }
  return result;
}

unint64_t sub_1BAB28DD0()
{
  unint64_t result;

  result = qword_1EF2B0708;
  if (!qword_1EF2B0708)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A0B5C, &type metadata for FeedNativeAdManager.State);
    atomic_store(result, (unint64_t *)&qword_1EF2B0708);
  }
  return result;
}

uint64_t sub_1BAB28E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedNativeAdInsertion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB28E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedNativeAdInsertion() - 8) + 80);
  v2 = (v1 + 24) & ~v1;
  swift_release();
  v3 = sub_1BB872208();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v0 + v2, v3);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB28EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedNativeAdInsertion();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB28F30()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedNativeAdInsertion() - 8) + 80);
  return sub_1BAB27FB4(*(_QWORD *)(v0 + 16), v0 + ((v1 + 24) & ~v1));
}

NewsFeed::FeedJournalConfig __swiftcall FeedJournalConfig.init(_:)(NewsFeed::FeedJournalConfig result)
{
  NewsFeed::FeedJournalConfig *v1;

  v1->entries._rawValue = result.entries._rawValue;
  return result;
}

void sub_1BAB28F68(_QWORD *a1@<X8>)
{
  FeedJournalConfigProviding.journalConfig.getter(a1);
}

void FeedJournalConfigProviding.journalConfig.getter(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x1E0DEE9D8];
}

ValueMetadata *type metadata accessor for FeedJournalConfig()
{
  return &type metadata for FeedJournalConfig;
}

uint64_t dispatch thunk of FeedJournalConfigProviding.journalConfig.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t WebEmbedDatastore.visualization.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BA5E01A4(v1 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization, a1, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
}

id WebEmbedDatastore.datastore.getter()
{
  uint64_t v0;

  return *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore);
}

_QWORD *sub_1BAB28FEC(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ObjectType;
  unint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  id v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  id v49;
  void *v50;
  id v51;
  _QWORD *v52;
  void *v53;
  _BYTE *v54;
  _QWORD v55[2];
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  __int128 v66;
  _OWORD v67[20];
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v63 = *v2;
  v5 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *v7 = v8;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v62 = v7;
  v10(v7, 0, 1, v9);
  v60 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v65 = v2;
  v61 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v59 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  v58 = v11;
  inited = swift_initStackObject();
  v66 = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CC00;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB980, (uint64_t (*)(uint64_t))sub_1BAB300E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v66;
  *(_QWORD *)(v14 + 32) = 0x65726F6373;
  *(_QWORD *)(v14 + 40) = 0xE500000000000000;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB990, (uint64_t (*)(uint64_t))sub_1BAB3014C, v13);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v66;
  v16 = a1[6];
  *(_QWORD *)(v15 + 32) = a1[5];
  *(_QWORD *)(v15 + 40) = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v64;
  v18 = sub_1BAB2978C(a2);
  *(_QWORD *)&v66 = v17;
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
  }
  else
  {
    v55[1] = inited + 32;
    v56 = v18;
    v55[0] = v14 + 32;
    v59 = inited;
    swift_bridgeObjectRelease();
    v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_1BB87D7A0;
    strcpy((char *)(v19 + 32), "umcCanonicalId");
    *(_BYTE *)(v19 + 47) = -18;
    v20 = a1[6];
    v21 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v19 + 48) = a1[5];
    *(_QWORD *)(v19 + 56) = v20;
    *(_QWORD *)(v19 + 72) = v21;
    *(_QWORD *)(v19 + 80) = 0x746E657665;
    *(_QWORD *)(v19 + 88) = 0xE500000000000000;
    sub_1BA56BF70(0, (unint64_t *)&unk_1ED3AACC0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    *(_QWORD *)(v19 + 120) = v22;
    v64 = a1;
    if (a1[7])
    {
      ObjectType = swift_getObjectType();
      swift_bridgeObjectRetain();
      v24 = sub_1BAB29A18(ObjectType);
    }
    else
    {
      swift_bridgeObjectRetain();
      v24 = 0;
    }
    v25 = v66;
    *(_QWORD *)(v19 + 96) = v24;
    *(_QWORD *)(v19 + 128) = 0xD000000000000010;
    *(_QWORD *)(v19 + 136) = 0x80000001BB96CC20;
    v26 = v64;
    v27 = v64[4];
    *(_QWORD *)&v67[0] = 0;
    v28 = sub_1BAB29CBC(v27, (uint64_t *)v67);
    *(_QWORD *)&v66 = MEMORY[0x1E0DEE9B8] + 8;
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v30 = v29;
    *(_QWORD *)(v19 + 144) = v28;
    *(_QWORD *)(v19 + 168) = v29;
    *(_QWORD *)(v19 + 176) = 0x6E6F436465626D65;
    *(_QWORD *)(v19 + 184) = 0xEB00000000676966;
    v31 = *(_OWORD *)((char *)v26 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config + 16);
    v67[0] = *(_OWORD *)((char *)v26 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config);
    v67[1] = v31;
    v67[2] = *(_OWORD *)((char *)v26 + OBJC_IVAR____TtC8NewsFeed28SportsScoreDataVisualization_config + 32);
    v32 = sub_1BAB2A088((uint64_t *)v67);
    *(_QWORD *)(v19 + 216) = v30;
    *(_QWORD *)(v19 + 192) = v32;
    v33 = (_QWORD *)sub_1BA76E994(v19);
    v34 = sub_1BAB2A3D8(v56, v33);
    if (v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BAB3014C();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BAB300E8();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
      swift_arrayDestroy();
    }
    else
    {
      v37 = v34;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 48) = v37;
      *(_QWORD *)(v14 + 48) = sub_1BA8F3754(v15);
      v38 = sub_1BA8F3768(v14);
      sub_1BAB301CC();
      v39 = v59;
      *(_QWORD *)(v59 + 72) = v40;
      *(_QWORD *)(v39 + 48) = v38;
      sub_1BA76E994(v39);
      v41 = (void *)objc_opt_self();
      v42 = (void *)sub_1BB872760();
      *(_QWORD *)&v67[0] = 0;
      v43 = objc_msgSend(v41, sel_dataWithJSONObject_options_error_, v42, 2, v67);

      v44 = *(id *)&v67[0];
      if (v43)
      {
        v45 = sub_1BB86C6E8();
        v47 = v46;

        sub_1BB8729DC();
        sub_1BB8729B8();
        if (v48)
        {
          sub_1BA69D314(v45, v47);
          swift_bridgeObjectRelease();
          v49 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
          v50 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
          v51 = objc_msgSend(v49, sel_initWithJSONString_, v50);
          swift_release();

          v52 = v65;
          *(_QWORD *)((char *)v65 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v51;
          return v52;
        }
        sub_1BAB30230();
        swift_allocError();
        *v54 = 2;
        swift_willThrow();
        sub_1BA69D314(v45, v47);
        swift_bridgeObjectRelease();
      }
      else
      {
        v53 = v44;
        sub_1BB86C484();

        swift_willThrow();
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_release();
  sub_1BA5C699C((uint64_t)v62, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  v35 = v65;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v35;
}

uint64_t sub_1BAB2978C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  char v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  char v25;
  uint64_t *v26;
  uint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  _QWORD *v35;

  v2 = v1;
  v4 = type metadata accessor for WebEmbedDatastoreProperty();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (uint64_t *)((char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (_QWORD *)sub_1BA8F3754(MEMORY[0x1E0DEE9D8]);
  v9 = *(_QWORD *)(a1 + 16);
  if (!v9)
    return (uint64_t)v8;
  v10 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  v11 = *(_QWORD *)(v5 + 72);
  v31 = a1;
  v32 = v11;
  swift_bridgeObjectRetain();
  v33 = v7;
  while (1)
  {
    sub_1BA4C2DD8(v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
    v14 = *v7;
    v13 = v7[1];
    swift_bridgeObjectRetain();
    v15 = sub_1BAB2ED10((uint64_t)v7);
    if (v2)
    {
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
    v16 = v15;
    v34 = 0;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v35 = v8;
    v19 = sub_1BA6E35A8(v14, v13);
    v20 = v8[2];
    v21 = (v18 & 1) == 0;
    v22 = v20 + v21;
    if (__OFADD__(v20, v21))
      break;
    v23 = v18;
    if (v8[3] >= v22)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v8 = v35;
        if ((v18 & 1) != 0)
          goto LABEL_3;
      }
      else
      {
        sub_1BB4C6304();
        v8 = v35;
        if ((v23 & 1) != 0)
          goto LABEL_3;
      }
    }
    else
    {
      sub_1BB4B4CCC(v22, isUniquelyReferenced_nonNull_native);
      v24 = sub_1BA6E35A8(v14, v13);
      if ((v23 & 1) != (v25 & 1))
        goto LABEL_22;
      v19 = v24;
      v8 = v35;
      if ((v23 & 1) != 0)
      {
LABEL_3:
        v12 = v8[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v12 + 8 * v19) = v16;
        goto LABEL_4;
      }
    }
    v8[(v19 >> 6) + 8] |= 1 << v19;
    v26 = (uint64_t *)(v8[6] + 16 * v19);
    *v26 = v14;
    v26[1] = v13;
    *(_QWORD *)(v8[7] + 8 * v19) = v16;
    v27 = v8[2];
    v28 = __OFADD__(v27, 1);
    v29 = v27 + 1;
    if (v28)
      goto LABEL_21;
    v8[2] = v29;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v33;
    sub_1BA4A2E80((uint64_t)v33, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
    v10 += v32;
    --v9;
    v2 = v34;
    if (!v9)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v8;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

unint64_t sub_1BAB29A18(uint64_t a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  unsigned __int8 v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  id v10;
  uint64_t ObjectType;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  unint64_t v21;
  uint64_t v23;
  unint64_t v24;
  _OWORD v25[2];
  __int128 v26;
  uint64_t v27;

  v2 = v1;
  v23 = a1;
  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v23 - v4;
  v6 = sub_1BA76E994(MEMORY[0x1E0DEE9D8]);
  v7 = objc_msgSend(v2, sel_isRouteable);
  v27 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v26) = v7;
  sub_1BA76EAE0(&v26, v25);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v24 = v6;
  sub_1BA785F30(v25, 0x626174756F527369, 0xEA0000000000656CLL, isUniquelyReferenced_nonNull_native);
  v9 = v24;
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v2, sel_eventLeagueTag);
  ObjectType = swift_getObjectType();
  v12 = type metadata accessor for SportsRoster();
  v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v13(v5, 1, 1, v12);
  v14 = sub_1BAB2B968((uint64_t)v5, 0, ObjectType);
  swift_unknownObjectRelease();
  sub_1BA5C699C((uint64_t)v5, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  v16 = v15;
  v27 = v15;
  *(_QWORD *)&v26 = v14;
  sub_1BA76EAE0(&v26, v25);
  v17 = swift_isUniquelyReferenced_nonNull_native();
  v24 = v9;
  sub_1BA785F30(v25, 0x654C7374726F7073, 0xEC00000065756761, v17);
  v18 = v24;
  swift_bridgeObjectRelease();
  v13(v5, 1, 1, v12);
  v19 = sub_1BAB2B968((uint64_t)v5, 0, v23);
  sub_1BA5C699C((uint64_t)v5, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
  v27 = v16;
  *(_QWORD *)&v26 = v19;
  sub_1BA76EAE0(&v26, v25);
  v20 = swift_isUniquelyReferenced_nonNull_native();
  v24 = v18;
  sub_1BA785F30(v25, 0x76457374726F7073, 0xEB00000000746E65, v20);
  v21 = v24;
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_1BAB29CBC(unint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  unint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  void *v13;
  uint64_t ObjectType;
  id v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  _OWORD v49[2];
  __int128 v50;
  uint64_t v51;

  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v39 - v5;
  v7 = *a2;
  v8 = sub_1BA76E994(MEMORY[0x1E0DEE9D8]);
  v9 = (void *)swift_bridgeObjectRetain();
  v44 = _s8NewsFeed37FormatSportsEventMatchupColorProviderC14competitorTagsACSaySo17FCSportsProviding_pG_tcfC_0(v9);
  v46 = a1;
  if (!(a1 >> 62))
  {
    v10 = *(_QWORD *)((v46 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v10)
      goto LABEL_3;
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
    return v8;
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v10 = result;
  if (!result)
    goto LABEL_22;
LABEL_3:
  if (v10 >= 1)
  {
    v12 = 0;
    v45 = v46 & 0xC000000000000001;
    v42 = v10;
    v43 = MEMORY[0x1E0DEE9B8] + 8;
    v40 = v7;
    do
    {
      if (v45)
      {
        v13 = (void *)MEMORY[0x1BCCE4630](v12, v46);
      }
      else
      {
        v13 = *(void **)(v46 + 8 * v12 + 32);
        swift_unknownObjectRetain();
      }
      ObjectType = swift_getObjectType();
      v15 = objc_msgSend(v13, sel_UMCCanonicalID);
      if (v15)
      {
        v16 = v15;
        v47 = sub_1BB8729A0();
        v18 = v17;

        if (v7)
        {
          swift_bridgeObjectRetain();
          v19 = objc_msgSend(v13, sel_identifier);
          v20 = sub_1BB8729A0();
          v22 = v21;

          if (*(_QWORD *)(v7 + 16))
          {
            swift_bridgeObjectRetain();
            v23 = sub_1BA6E35A8(v20, v22);
            if ((v24 & 1) != 0)
            {
              v25 = v23;
              v41 = v8;
              v26 = *(_QWORD *)(v7 + 56);
              v27 = type metadata accessor for SportsRoster();
              v28 = (uint64_t)v6;
              v29 = *(_QWORD *)(v27 - 8);
              v30 = v26 + *(_QWORD *)(v29 + 72) * v25;
              v8 = v41;
              sub_1BA4C2DD8(v30, v28, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
              v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56);
              v6 = (char *)v28;
              v7 = v40;
              v31(v6, 0, 1, v27);
            }
            else
            {
              v34 = type metadata accessor for SportsRoster();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v6, 1, 1, v34);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v33 = type metadata accessor for SportsRoster();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v6, 1, 1, v33);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v10 = v42;
        }
        else
        {
          v32 = type metadata accessor for SportsRoster();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v6, 1, 1, v32);
        }
        v35 = (uint64_t)v44;
        swift_retain();
        v36 = sub_1BAB2B968((uint64_t)v6, v35, ObjectType);
        swift_release();
        sub_1BA5C699C((uint64_t)v6, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
        sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v43, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
        v51 = v37;
        *(_QWORD *)&v50 = v36;
        sub_1BA76EAE0(&v50, v49);
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v48 = v8;
        sub_1BA785F30(v49, v47, v18, isUniquelyReferenced_nonNull_native);
        v8 = v48;
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
      ++v12;
    }
    while (v10 != v12);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

unint64_t sub_1BAB2A088(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  unint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  unint64_t result;
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = a1[1];
  if (!v1)
    return sub_1BA76E994(MEMORY[0x1E0DEE9D8]);
  v2 = *a1;
  v3 = a1[5];
  v4 = *(_QWORD *)(v3 + 16);
  if (!v4)
  {
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_20:
    sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    *(_QWORD *)(inited + 32) = 0x696669746E656469;
    *(_QWORD *)(inited + 40) = 0xEA00000000007265;
    v28 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(inited + 48) = v2;
    *(_QWORD *)(inited + 56) = v1;
    *(_QWORD *)(inited + 72) = v28;
    *(_QWORD *)(inited + 80) = 0x6574656D61726170;
    *(_QWORD *)(inited + 88) = 0xEA00000000007372;
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3AF490, v28, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    *(_QWORD *)(inited + 120) = v29;
    *(_QWORD *)(inited + 96) = v6;
    swift_bridgeObjectRetain();
    v30 = sub_1BA76E994(inited);
    sub_1BA993900(v2, v1);
    return v30;
  }
  v31 = *a1;
  v32 = a1[1];
  sub_1BA99178C(v2, v1);
  swift_bridgeObjectRetain();
  v5 = (uint64_t *)(v3 + 56);
  v6 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  while (1)
  {
    v9 = *(v5 - 3);
    v8 = *(v5 - 2);
    v10 = *(v5 - 1);
    v11 = *v5;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = sub_1BA6E35A8(v9, v8);
    v15 = v6[2];
    v16 = (v13 & 1) == 0;
    v17 = v15 + v16;
    if (__OFADD__(v15, v16))
      break;
    v18 = v13;
    if (v6[3] >= v17)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        if ((v13 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C216C();
        if ((v18 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BB4AE750(v17, isUniquelyReferenced_nonNull_native);
      v19 = sub_1BA6E35A8(v9, v8);
      if ((v18 & 1) != (v20 & 1))
        goto LABEL_23;
      v14 = v19;
      if ((v18 & 1) != 0)
      {
LABEL_4:
        v7 = (_QWORD *)(v6[7] + 16 * v14);
        swift_bridgeObjectRelease();
        *v7 = v10;
        v7[1] = v11;
        goto LABEL_5;
      }
    }
    v6[(v14 >> 6) + 8] |= 1 << v14;
    v21 = (uint64_t *)(v6[6] + 16 * v14);
    *v21 = v9;
    v21[1] = v8;
    v22 = (_QWORD *)(v6[7] + 16 * v14);
    *v22 = v10;
    v22[1] = v11;
    v23 = v6[2];
    v24 = __OFADD__(v23, 1);
    v25 = v23 + 1;
    if (v24)
      goto LABEL_22;
    v6[2] = v25;
    swift_bridgeObjectRetain();
LABEL_5:
    v5 += 4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      v1 = v32;
      v2 = v31;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t sub_1BAB2A3D8(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  int64_t v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t *v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;
  int64_t v34;
  uint64_t v35;
  _OWORD v36[2];
  __int128 v37;
  uint64_t v38;
  _QWORD *v39;

  v4 = 1 << *(_BYTE *)(a1 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a1 + 64);
  v34 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = 0;
  v35 = MEMORY[0x1E0DEE9B8] + 8;
  while (1)
  {
    if (v6)
    {
      v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      v10 = v9 | (v7 << 6);
    }
    else
    {
      v11 = v7 + 1;
      if (__OFADD__(v7, 1))
        goto LABEL_36;
      if (v11 >= v34)
      {
LABEL_33:
        swift_release();
        return (uint64_t)a2;
      }
      v12 = *(_QWORD *)(v33 + 8 * v11);
      ++v7;
      if (!v12)
      {
        v7 = v11 + 1;
        if (v11 + 1 >= v34)
          goto LABEL_33;
        v12 = *(_QWORD *)(v33 + 8 * v7);
        if (!v12)
        {
          v7 = v11 + 2;
          if (v11 + 2 >= v34)
            goto LABEL_33;
          v12 = *(_QWORD *)(v33 + 8 * v7);
          if (!v12)
          {
            v13 = v11 + 3;
            if (v13 >= v34)
              goto LABEL_33;
            v12 = *(_QWORD *)(v33 + 8 * v13);
            if (!v12)
            {
              while (1)
              {
                v7 = v13 + 1;
                if (__OFADD__(v13, 1))
                  goto LABEL_37;
                if (v7 >= v34)
                  goto LABEL_33;
                v12 = *(_QWORD *)(v33 + 8 * v7);
                ++v13;
                if (v12)
                  goto LABEL_21;
              }
            }
            v7 = v13;
          }
        }
      }
LABEL_21:
      v6 = (v12 - 1) & v12;
      v10 = __clz(__rbit64(v12)) + (v7 << 6);
    }
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v16 = *v14;
    v15 = v14[1];
    v17 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v35, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v38 = v18;
    *(_QWORD *)&v37 = v17;
    sub_1BA76EAE0(&v37, v36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v39 = a2;
    v21 = sub_1BA6E35A8(v16, v15);
    v22 = a2[2];
    v23 = (v20 & 1) == 0;
    v24 = v22 + v23;
    if (__OFADD__(v22, v23))
      break;
    v25 = v20;
    if (a2[3] >= v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        a2 = v39;
        if ((v20 & 1) != 0)
          goto LABEL_4;
      }
      else
      {
        sub_1BB4C18B8();
        a2 = v39;
        if ((v25 & 1) != 0)
          goto LABEL_4;
      }
    }
    else
    {
      sub_1BA7860C8(v24, isUniquelyReferenced_nonNull_native);
      v26 = sub_1BA6E35A8(v16, v15);
      if ((v25 & 1) != (v27 & 1))
        goto LABEL_38;
      v21 = v26;
      a2 = v39;
      if ((v25 & 1) != 0)
      {
LABEL_4:
        v8 = (_OWORD *)(a2[7] + 32 * v21);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
        sub_1BA76EAE0(v36, v8);
        goto LABEL_5;
      }
    }
    a2[(v21 >> 6) + 8] |= 1 << v21;
    v28 = (uint64_t *)(a2[6] + 16 * v21);
    *v28 = v16;
    v28[1] = v15;
    sub_1BA76EAE0(v36, (_OWORD *)(a2[7] + 32 * v21));
    v29 = a2[2];
    v30 = __OFADD__(v29, 1);
    v31 = v29 + 1;
    if (v30)
      goto LABEL_35;
    a2[2] = v31;
    swift_bridgeObjectRetain();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  result = sub_1BB874560();
  __break(1u);
  return result;
}

_QWORD *sub_1BAB2A6F4(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  id v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  id v43;
  void *v44;
  id v45;
  _QWORD *v46;
  void *v47;
  _BYTE *v48;
  _QWORD v49[7];
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  __int128 v55;
  _OWORD v56[17];
  uint64_t v57;

  v57 = *MEMORY[0x1E0C80C00];
  v51 = *v2;
  v5 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v5);
  v49[3] = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *v7 = v8 | 0x2000000000000000;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v50 = v7;
  v10(v7, 0, 1, v9);
  v49[5] = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v54 = v2;
  v49[6] = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v53 = (_QWORD *)(MEMORY[0x1E0DEE9B8] + 8);
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  v49[4] = v11;
  inited = swift_initStackObject();
  v55 = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CC00;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB980, (uint64_t (*)(uint64_t))sub_1BAB300E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v55;
  *(_QWORD *)(v14 + 32) = 0x676E69646E617473;
  *(_QWORD *)(v14 + 40) = 0xE800000000000000;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB990, (uint64_t (*)(uint64_t))sub_1BAB3014C, v13);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v55;
  v16 = a1[6];
  *(_QWORD *)(v15 + 32) = a1[5];
  *(_QWORD *)(v15 + 40) = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v52;
  v52 = sub_1BAB2978C(a2);
  *(_QWORD *)&v55 = v17;
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
  }
  else
  {
    v49[1] = v14 + 32;
    v49[2] = inited + 32;
    swift_bridgeObjectRelease();
    v18 = swift_initStackObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87FC80;
    strcpy((char *)(v18 + 32), "umcCanonicalId");
    *(_BYTE *)(v18 + 47) = -18;
    v19 = MEMORY[0x1E0DEA968];
    v20 = a1[6];
    *(_QWORD *)(v18 + 48) = a1[5];
    *(_QWORD *)(v18 + 56) = v20;
    *(_QWORD *)(v18 + 72) = v19;
    *(_QWORD *)(v18 + 80) = 0xD000000000000010;
    *(_QWORD *)(v18 + 88) = 0x80000001BB96CC20;
    v21 = a1[4];
    *(_QWORD *)&v56[0] = 0;
    swift_bridgeObjectRetain();
    v22 = sub_1BAB29CBC(v21, (uint64_t *)v56);
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, (uint64_t)v53, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    v24 = v23;
    *(_QWORD *)(v18 + 96) = v22;
    *(_QWORD *)(v18 + 120) = v23;
    *(_QWORD *)(v18 + 128) = 0x6E6F436465626D65;
    *(_QWORD *)(v18 + 136) = 0xEB00000000676966;
    v53 = a1;
    v25 = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 16);
    v56[0] = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config);
    v56[1] = v25;
    v56[2] = *(_OWORD *)((char *)a1 + OBJC_IVAR____TtC8NewsFeed31SportsStandingDataVisualization_config + 32);
    v26 = sub_1BAB2A088((uint64_t *)v56);
    *(_QWORD *)(v18 + 168) = v24;
    *(_QWORD *)(v18 + 144) = v26;
    v27 = (_QWORD *)sub_1BA76E994(v18);
    v28 = v55;
    v29 = sub_1BAB2A3D8(v52, v27);
    *(_QWORD *)&v55 = v28;
    if (v28)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BAB3014C();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BAB300E8();
      swift_arrayDestroy();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
      swift_arrayDestroy();
    }
    else
    {
      v32 = v29;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v15 + 48) = v32;
      *(_QWORD *)(v14 + 48) = sub_1BA8F3754(v15);
      v33 = sub_1BA8F3768(v14);
      sub_1BAB301CC();
      *(_QWORD *)(inited + 72) = v34;
      *(_QWORD *)(inited + 48) = v33;
      sub_1BA76E994(inited);
      v35 = (void *)objc_opt_self();
      v36 = (void *)sub_1BB872760();
      *(_QWORD *)&v56[0] = 0;
      v37 = objc_msgSend(v35, sel_dataWithJSONObject_options_error_, v36, 2, v56);

      v38 = *(id *)&v56[0];
      if (v37)
      {
        v39 = sub_1BB86C6E8();
        v41 = v40;

        sub_1BB8729DC();
        sub_1BB8729B8();
        if (v42)
        {
          sub_1BA69D314(v39, v41);
          swift_bridgeObjectRelease();
          v43 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
          v44 = (void *)sub_1BB872970();
          swift_bridgeObjectRelease();
          v45 = objc_msgSend(v43, sel_initWithJSONString_, v44);
          swift_release();

          v46 = v54;
          *(_QWORD *)((char *)v54 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v45;
          return v46;
        }
        sub_1BAB30230();
        swift_allocError();
        *v48 = 2;
        swift_willThrow();
        sub_1BA69D314(v39, v41);
      }
      else
      {
        v47 = v38;
        sub_1BB86C484();

        swift_willThrow();
      }
      swift_bridgeObjectRelease();
    }
  }
  swift_release();
  sub_1BA5C699C((uint64_t)v50, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  v30 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v30;
}

uint64_t *sub_1BAB2AE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  _BYTE *v35;
  _QWORD v37[2];
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45[22];

  v45[21] = *(id *)MEMORY[0x1E0C80C00];
  v42 = *v3;
  v7 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v7);
  v37[1] = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *v9 = v10 | 0x4000000000000000;
  v11 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v12 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v41 = v9;
  v12(v9, 0, 1, v11);
  v39 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v40 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = a3;
  v44 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  inited = swift_initStackObject();
  v38 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x74656B63617262;
  *(_QWORD *)(inited + 40) = 0xE700000000000000;
  v14 = a1 + OBJC_IVAR____TtC8NewsFeed35SportsBracketGroupDataVisualization_visualizations;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v15 = sub_1BA8F377C(MEMORY[0x1E0DEE9D8]);
  sub_1BAB30274();
  *(_QWORD *)(inited + 72) = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v43;
  v18 = sub_1BAB2F75C(v15, v14, a3, a1, a2);
  if (v17)
  {
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease_n();
    __swift_deallocate_boxed_opaque_existential_0(inited + 48);
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
LABEL_9:
    swift_release();
    sub_1BA5C699C((uint64_t)v41, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v3;
  }
  v19 = v18;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 48) = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v20 = sub_1BA76E994(inited);
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = v38;
  *(_QWORD *)(v21 + 32) = 0xD00000000000001DLL;
  *(_QWORD *)(v21 + 40) = 0x80000001BB96CC00;
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v44, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  *(_QWORD *)(v21 + 72) = v22;
  *(_QWORD *)(v21 + 48) = v20;
  sub_1BA76E994(v21);
  v23 = (void *)objc_opt_self();
  v24 = (void *)sub_1BB872760();
  v45[0] = 0;
  v25 = objc_msgSend(v23, sel_dataWithJSONObject_options_error_, v24, 2, v45);

  v26 = v45[0];
  if (!v25)
  {
    v34 = v26;
    sub_1BB86C484();

    swift_willThrow();
LABEL_8:
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  v27 = sub_1BB86C6E8();
  v29 = v28;

  sub_1BB8729DC();
  sub_1BB8729B8();
  if (!v30)
  {
    sub_1BAB30230();
    swift_allocError();
    *v35 = 2;
    swift_willThrow();
    sub_1BA69D314(v27, v29);
    goto LABEL_8;
  }
  sub_1BA69D314(v27, v29);
  swift_bridgeObjectRelease();
  v31 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
  v32 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(v31, sel_initWithJSONString_, v32);
  swift_release();

  *(uint64_t *)((char *)v3 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = (uint64_t)v33;
  return v3;
}

uint64_t sub_1BAB2B380(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t ObjectType;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  __int128 v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  _QWORD *v55;

  v6 = v5;
  v47 = a5;
  v48 = a1;
  v44 = a4;
  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v9);
  v49 = (char *)&v42 - v10;
  v11 = (_QWORD *)*a2;
  v12 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  *(_QWORD *)(inited + 32) = 0x6E6F6E6143636D75;
  v43 = inited + 32;
  *(_QWORD *)(inited + 40) = 0xEE0064496C616369;
  v15 = v11[5];
  v14 = v11[6];
  *(_QWORD *)(inited + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 80) = 0xD000000000000010;
  *(_QWORD *)(inited + 48) = v15;
  *(_QWORD *)(inited + 56) = v14;
  *(_QWORD *)(inited + 88) = 0x80000001BB96CC20;
  v16 = v11[4];
  *(_QWORD *)&v52 = 0;
  swift_bridgeObjectRetain();
  v17 = sub_1BAB29CBC(v16, (uint64_t *)&v52);
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v12, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  v19 = v18;
  *(_QWORD *)(inited + 120) = v18;
  *(_QWORD *)(inited + 96) = v17;
  *(_QWORD *)(inited + 128) = 0x6E6F436465626D65;
  *(_QWORD *)(inited + 136) = 0xEB00000000676966;
  v46 = v11;
  v52 = *(_OWORD *)((char *)v11 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config);
  v53 = *(_OWORD *)((char *)v11 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 16);
  v54 = *(_OWORD *)((char *)v11 + OBJC_IVAR____TtC8NewsFeed30SportsBracketDataVisualization_config + 32);
  *(_QWORD *)(inited + 144) = sub_1BAB2A088((uint64_t *)&v52);
  v45 = v19;
  *(_QWORD *)(inited + 168) = v19;
  strcpy((char *)(inited + 176), "childrenData");
  *(_BYTE *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  v20 = MEMORY[0x1E0DEE9D8];
  if (a3 && (*(_QWORD *)&v52 = MEMORY[0x1E0DEE9D8], (v21 = *(_QWORD *)(a3 + 16)) != 0))
  {
    swift_bridgeObjectRetain();
    v22 = 0;
    while (1)
    {
      *(_QWORD *)&v50 = *(_QWORD *)(a3 + 8 * v22 + 32);
      swift_bridgeObjectRetain();
      sub_1BAB2F330((_QWORD **)&v52, (uint64_t *)&v50);
      if (v6)
        break;
      ++v22;
      swift_bridgeObjectRelease();
      if (v21 == v22)
      {
        swift_bridgeObjectRelease();
        v20 = v52;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BAB30310(inited + 128);
    sub_1BAB30310(inited + 80);
    sub_1BAB30310(v43);
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    return swift_arrayDestroy();
  }
  else
  {
LABEL_7:
    sub_1BA56BF70(0, (unint64_t *)&qword_1EF2B0738, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    *(_QWORD *)(inited + 216) = v23;
    *(_QWORD *)(inited + 192) = v20;
    v24 = (_QWORD *)sub_1BA76E994(inited);
    sub_1BA89C564();
    sub_1BB86EC68();
    v25 = *(_QWORD *)(v52 + 56);
    swift_unknownObjectRetain();
    swift_release();
    if (v25)
    {
      ObjectType = swift_getObjectType();
      v27 = type metadata accessor for SportsRoster();
      v28 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v49, 1, 1, v27);
      v29 = sub_1BAB2B968(v28, 0, ObjectType);
      swift_unknownObjectRelease();
      sub_1BA5C699C(v28, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
      v30 = v45;
      *((_QWORD *)&v53 + 1) = v45;
      *(_QWORD *)&v52 = v29;
      sub_1BA76EAE0(&v52, &v50);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v55 = v24;
      sub_1BA785F30(&v50, 0x654C7374726F7073, 0xEC00000065756761, isUniquelyReferenced_nonNull_native);
      v24 = v55;
      swift_bridgeObjectRelease();
    }
    else
    {
      v30 = v45;
    }
    sub_1BB86EC68();
    v32 = *(_QWORD *)(v52 + 64);
    swift_unknownObjectRetain();
    swift_release();
    if (v32)
    {
      v33 = swift_getObjectType();
      v34 = type metadata accessor for SportsRoster();
      v35 = (uint64_t)v49;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v49, 1, 1, v34);
      v36 = sub_1BAB2B968(v35, 0, v33);
      swift_unknownObjectRelease();
      sub_1BA5C699C(v35, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
      *((_QWORD *)&v53 + 1) = v30;
      *(_QWORD *)&v52 = v36;
      sub_1BA76EAE0(&v52, &v50);
      v37 = swift_isUniquelyReferenced_nonNull_native();
      v55 = v24;
      sub_1BA785F30(&v50, 0xD000000000000012, 0x80000001BB96CC80, v37);
      v24 = v55;
      swift_bridgeObjectRelease();
    }
    v38 = v46[6];
    *(_QWORD *)&v50 = v46[5];
    *((_QWORD *)&v50 + 1) = v38;
    swift_bridgeObjectRetain();
    sub_1BB873C48();
    v39 = sub_1BAB2978C(v47);
    if (v6)
    {
      sub_1BA9ECE7C((uint64_t)&v52);
      return swift_bridgeObjectRelease();
    }
    else
    {
      v41 = sub_1BAB2A3D8(v39, v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v51 = v30;
      *(_QWORD *)&v50 = v41;
      return sub_1BB4AA2BC((uint64_t)&v50, (uint64_t)&v52);
    }
  }
}

unint64_t sub_1BAB2B968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char isUniquelyReferenced_nonNull_native;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  unint64_t v25;
  char v26;
  unint64_t v27;
  id v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  id v36;
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  char v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char v59;
  id v60;
  id v61;
  id v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  char v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  char v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  id v82;
  id v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  void *v89;
  void *v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  id v94;
  id v95;
  id v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100;
  id v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  char v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  _OWORD v127[2];
  __int128 v128;
  uint64_t v129;
  unint64_t v130;

  v4 = v3;
  v120 = a3;
  v121 = a2;
  v124 = a1;
  sub_1BA4B07F0(0, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v122 = (uint64_t)&v118 - v6;
  v125 = type metadata accessor for SportsRoster();
  v123 = *(_QWORD *)(v125 - 8);
  MEMORY[0x1E0C80A78](v125);
  v119 = (uint64_t)&v118 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v118 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BA76E994(MEMORY[0x1E0DEE9D8]);
  v13 = objc_msgSend(v4, sel_identifier);
  v14 = sub_1BB8729A0();
  v16 = v15;

  v17 = MEMORY[0x1E0DEA968];
  v129 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v128 = v14;
  *((_QWORD *)&v128 + 1) = v16;
  sub_1BA76EAE0(&v128, v127);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v126 = v12;
  sub_1BA785F30(v127, 0x6449676174, 0xE500000000000000, isUniquelyReferenced_nonNull_native);
  v130 = v126;
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v4, sel_identifier);
  if (!v19)
  {
    sub_1BB8729A0();
    v19 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_feedConfiguration_, v19, 0);

  sub_1BB86C5EC();
  v21 = sub_1BB86C538();
  v23 = v22;
  v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v11, v8);
  v129 = v17;
  *(_QWORD *)&v128 = v21;
  *((_QWORD *)&v128 + 1) = v23;
  sub_1BA76EAE0(&v128, v127);
  v25 = v130;
  v26 = swift_isUniquelyReferenced_nonNull_native();
  v126 = v25;
  sub_1BA785F30(v127, 0x5564656546676174, 0xEA00000000006C72, v26);
  v27 = v126;
  v130 = v126;
  swift_bridgeObjectRelease();
  v28 = objc_msgSend(v4, sel_sportsTheme);
  if (v28)
  {
    v29 = objc_msgSend(v28, sel_sportsLogoImageAssetHandle);
    swift_unknownObjectRelease();
    if (v29)
    {
      v30 = objc_msgSend(v29, sel_remoteURL);
      sub_1BB86C5EC();

      v31 = sub_1BB86C538();
      v33 = v32;
      v24(v11, v8);

      v129 = v17;
      *(_QWORD *)&v128 = v31;
      *((_QWORD *)&v128 + 1) = v33;
      sub_1BA76EAE0(&v128, v127);
      v34 = v130;
      v35 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v34;
      sub_1BA785F30(v127, 0x6C72556F676F6CLL, 0xE700000000000000, v35);
      v27 = v126;
      v130 = v126;
      swift_bridgeObjectRelease();
    }
  }
  v36 = objc_msgSend(v4, sel_sportsTheme);
  if (v36)
  {
    v37 = objc_msgSend(v36, sel_sportsLogoImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v37)
    {
      v38 = objc_msgSend(v37, sel_remoteURL);
      sub_1BB86C5EC();

      v39 = sub_1BB86C538();
      v41 = v40;
      v24(v11, v8);

      v129 = v17;
      *(_QWORD *)&v128 = v39;
      *((_QWORD *)&v128 + 1) = v41;
      sub_1BA76EAE0(&v128, v127);
      v42 = v130;
      v43 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v42;
      sub_1BA785F30(v127, 0x436C72556F676F6CLL, 0xEE00746361706D6FLL, v43);
      v27 = v126;
      v130 = v126;
      swift_bridgeObjectRelease();
    }
  }
  v44 = objc_msgSend(v4, sel_sportsTheme);
  if (v44)
  {
    v45 = objc_msgSend(v44, sel_sportsLogoImageLargeAssetHandle);
    swift_unknownObjectRelease();
    if (v45)
    {
      v46 = objc_msgSend(v45, sel_remoteURL);
      sub_1BB86C5EC();

      v47 = sub_1BB86C538();
      v49 = v48;
      v24(v11, v8);

      v129 = v17;
      *(_QWORD *)&v128 = v47;
      *((_QWORD *)&v128 + 1) = v49;
      sub_1BA76EAE0(&v128, v127);
      v50 = v130;
      v51 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v50;
      sub_1BA785F30(v127, 0x4C6C72556F676F6CLL, 0xEC00000065677261, v51);
      v27 = v126;
      v130 = v126;
      swift_bridgeObjectRelease();
    }
  }
  v52 = objc_msgSend(v4, sel_sportsTheme);
  if (v52)
  {
    v53 = objc_msgSend(v52, sel_sportsLogoAltImageAssetHandle);
    swift_unknownObjectRelease();
    if (v53)
    {
      v54 = objc_msgSend(v53, sel_remoteURL);
      sub_1BB86C5EC();

      v55 = sub_1BB86C538();
      v57 = v56;
      v24(v11, v8);

      v129 = v17;
      *(_QWORD *)&v128 = v55;
      *((_QWORD *)&v128 + 1) = v57;
      sub_1BA76EAE0(&v128, v127);
      v58 = v130;
      v59 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v58;
      sub_1BA785F30(v127, 0x55746C416F676F6CLL, 0xEA00000000006C72, v59);
      v27 = v126;
      v130 = v126;
      swift_bridgeObjectRelease();
    }
  }
  v60 = objc_msgSend(v4, sel_sportsTheme);
  if (v60)
  {
    v61 = objc_msgSend(v60, sel_sportsLogoAltImageCompactAssetHandle);
    swift_unknownObjectRelease();
    if (v61)
    {
      v62 = objc_msgSend(v61, sel_remoteURL);
      sub_1BB86C5EC();

      v63 = sub_1BB86C538();
      v65 = v64;
      v24(v11, v8);

      v129 = v17;
      *(_QWORD *)&v128 = v63;
      *((_QWORD *)&v128 + 1) = v65;
      sub_1BA76EAE0(&v128, v127);
      v66 = v130;
      v67 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v66;
      sub_1BA785F30(v127, 0xD000000000000011, 0x80000001BB96CC60, v67);
      v27 = v126;
      v130 = v126;
      swift_bridgeObjectRelease();
    }
  }
  v68 = objc_msgSend(v4, sel_sportsTheme);
  if (v68)
  {
    v69 = objc_msgSend(v68, sel_sportsLogoAltImageLargeAssetHandle);
    swift_unknownObjectRelease();
    if (v69)
    {
      v70 = objc_msgSend(v69, sel_remoteURL);
      sub_1BB86C5EC();

      v71 = sub_1BB86C538();
      v73 = v72;
      v24(v11, v8);

      v129 = v17;
      *(_QWORD *)&v128 = v71;
      *((_QWORD *)&v128 + 1) = v73;
      sub_1BA76EAE0(&v128, v127);
      v74 = v130;
      v75 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v74;
      sub_1BA785F30(v127, 0x55746C416F676F6CLL, 0xEF656772614C6C72, v75);
      v27 = v126;
      v130 = v126;
      swift_bridgeObjectRelease();
    }
  }
  v76 = objc_msgSend(v4, sel_sportsData);
  if (v76)
  {
    v77 = v76;
    v78 = sub_1BB8729A0();
    v80 = v79;

    v129 = v17;
    *(_QWORD *)&v128 = v78;
    *((_QWORD *)&v128 + 1) = v80;
    sub_1BA76EAE0(&v128, v127);
    v81 = swift_isUniquelyReferenced_nonNull_native();
    v126 = v27;
    sub_1BA785F30(v127, 0x61447374726F7073, 0xEA00000000006174, v81);
    v27 = v126;
    v130 = v126;
    swift_bridgeObjectRelease();
  }
  v82 = objc_msgSend(v4, sel_sportsTheme);
  if (v82)
  {
    v83 = objc_msgSend(v82, sel_sportsPrimaryColor);
    swift_unknownObjectRelease();
    if (v83)
    {
      v84 = objc_msgSend(v83, sel_hex);
      v85 = sub_1BB8729A0();
      v87 = v86;

      v129 = v17;
      *(_QWORD *)&v128 = v85;
      *((_QWORD *)&v128 + 1) = v87;
      sub_1BA76EAE0(&v128, v127);
      v88 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v27;
      sub_1BA785F30(v127, 0xD000000000000012, 0x80000001BB95A1A0, v88);
      v27 = v126;
      v130 = v126;

      swift_bridgeObjectRelease();
    }
  }
  if (v121)
  {
    v89 = sub_1BA98E150(v4, v121);
    if (v89)
    {
      v90 = v89;
      v91 = sub_1BB0A7F04();
      v129 = v17;
      *(_QWORD *)&v128 = v91;
      *((_QWORD *)&v128 + 1) = v92;
      sub_1BA76EAE0(&v128, v127);
      v93 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v27;
      sub_1BA785F30(v127, 0xD000000000000012, 0x80000001BB96CC40, v93);
      v27 = v126;
      v130 = v126;

      swift_bridgeObjectRelease();
    }
  }
  v94 = objc_msgSend(v4, sel_sportsTheme);
  if (v94)
  {
    v95 = objc_msgSend(v94, sel_sportsSecondaryColor);
    swift_unknownObjectRelease();
    if (v95)
    {
      v96 = objc_msgSend(v95, sel_hex);
      v97 = sub_1BB8729A0();
      v99 = v98;

      v129 = v17;
      *(_QWORD *)&v128 = v97;
      *((_QWORD *)&v128 + 1) = v99;
      sub_1BA76EAE0(&v128, v127);
      v100 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v27;
      sub_1BA785F30(v127, 0xD000000000000014, 0x80000001BB95A1C0, v100);
      v27 = v126;
      v130 = v126;

      swift_bridgeObjectRelease();
    }
  }
  v101 = objc_msgSend(v4, sel_sportsTheme);
  if (v101)
  {
    v102 = objc_msgSend(v101, sel_sportsEventNavigationForegroundColor);
    swift_unknownObjectRelease();
    if (v102)
    {
      v103 = objc_msgSend(v102, sel_hex);
      v104 = sub_1BB8729A0();
      v106 = v105;

      v129 = v17;
      *(_QWORD *)&v128 = v104;
      *((_QWORD *)&v128 + 1) = v106;
      sub_1BA76EAE0(&v128, v127);
      v107 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v27;
      sub_1BA785F30(v127, 0xD000000000000024, 0x80000001BB95A2E0, v107);
      v27 = v126;
      v130 = v126;

      swift_bridgeObjectRelease();
    }
  }
  v108 = v125;
  v110 = v122;
  v109 = v123;
  sub_1BA5E01A4(v124, v122, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v109 + 48))(v110, 1, v108) == 1)
  {
    sub_1BA5C699C(v110, &qword_1ED3A56F0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster);
  }
  else
  {
    v111 = v119;
    sub_1BA5193C4(v110, v119, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
    sub_1BA4A2870(&qword_1ED3A56D0, (uint64_t (*)(uint64_t))type metadata accessor for SportsRoster, (uint64_t)&protocol conformance descriptor for SportsRoster);
    v112 = sub_1BB872844();
    if (v112)
    {
      v113 = v112;
      sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
      v129 = v114;
      *(_QWORD *)&v128 = v113;
      sub_1BA76EAE0(&v128, v127);
      v115 = v130;
      v116 = swift_isUniquelyReferenced_nonNull_native();
      v126 = v115;
      sub_1BA785F30(v127, 0x726574736F72, 0xE600000000000000, v116);
      v27 = v126;
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAA48D9C(0x726574736F72, 0xE600000000000000, &v128);
      sub_1BA4A2E80((uint64_t)&v128, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
      v27 = v130;
    }
    sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for SportsRoster);
  }
  return v27;
}

_QWORD *sub_1BAB2C648(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  _BYTE *v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  _OWORD v76[20];
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v71 = *v2;
  v5 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *v7 = v8 | 0x6000000000000000;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v70 = v7;
  v11 = v9;
  v12 = v2;
  v10(v7, 0, 1, v11);
  v68 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v69 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v73 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  v66 = v13;
  inited = swift_initStackObject();
  v75 = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  v67 = inited + 32;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CC00;
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB980, (uint64_t (*)(uint64_t))sub_1BAB300E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = v75;
  *(_QWORD *)(v16 + 32) = 0x65726F6353786F62;
  *(_QWORD *)(v16 + 40) = 0xE800000000000000;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB990, (uint64_t (*)(uint64_t))sub_1BAB3014C, v15);
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = v75;
  v18 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v17 + 40) = v18;
  v74 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v72;
  v20 = sub_1BAB2978C(a2);
  *(_QWORD *)&v75 = v19;
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
LABEL_14:
    swift_release();
    sub_1BA5C699C((uint64_t)v70, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v12;
  }
  v61 = v17;
  v62 = v20;
  v60[1] = v16 + 32;
  v63 = v16;
  v64 = inited;
  v72 = v12;
  swift_bridgeObjectRelease();
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87D7A0;
  strcpy((char *)(v21 + 32), "umcCanonicalId");
  *(_BYTE *)(v21 + 47) = -18;
  v22 = v74;
  v23 = *(_QWORD *)(v74 + 40);
  v24 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v74 + 32);
  *(_QWORD *)(v21 + 56) = v23;
  *(_QWORD *)(v21 + 72) = v24;
  *(_QWORD *)(v21 + 80) = 0x746E657665;
  *(_QWORD *)(v21 + 88) = 0xE500000000000000;
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  v26 = sub_1BAB29A18(ObjectType);
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v73, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  *(_QWORD *)(v21 + 96) = v26;
  v28 = v27;
  *(_QWORD *)(v21 + 120) = v27;
  *(_QWORD *)(v21 + 128) = 0xD000000000000010;
  *(_QWORD *)(v21 + 136) = 0x80000001BB96CC20;
  v29 = objc_msgSend(*(id *)(v22 + 48), sel_eventCompetitorTags);
  if (v29)
  {
    v30 = v29;
    sub_1BA8EB1C8();
    v31 = sub_1BB872DB4();

  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  v32 = v61;
  *(_QWORD *)&v76[0] = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_roster);
  swift_bridgeObjectRetain();
  v33 = sub_1BAB29CBC(v31, (uint64_t *)v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 144) = v33;
  v34 = v74;
  *(_QWORD *)(v21 + 168) = v28;
  *(_QWORD *)(v21 + 176) = 0x6E6F436465626D65;
  *(_QWORD *)(v21 + 184) = 0xEB00000000676966;
  v35 = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 16);
  v76[0] = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config);
  v76[1] = v35;
  v76[2] = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed31SportsBoxScoreDataVisualization_config + 32);
  v36 = sub_1BAB2A088((uint64_t *)v76);
  *(_QWORD *)(v21 + 216) = v28;
  *(_QWORD *)(v21 + 192) = v36;
  v37 = (_QWORD *)sub_1BA76E994(v21);
  v38 = v75;
  v39 = sub_1BAB2A3D8(v62, v37);
  if (v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
    v12 = v72;
    goto LABEL_14;
  }
  v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 48) = v40;
  v41 = sub_1BA8F3754(v32);
  v42 = v63;
  *(_QWORD *)(v63 + 48) = v41;
  v43 = sub_1BA8F3768(v42);
  sub_1BAB301CC();
  v44 = v64;
  *(_QWORD *)(v64 + 72) = v45;
  *(_QWORD *)(v44 + 48) = v43;
  sub_1BA76E994(v44);
  v46 = (void *)objc_opt_self();
  v47 = (void *)sub_1BB872760();
  *(_QWORD *)&v76[0] = 0;
  v48 = objc_msgSend(v46, sel_dataWithJSONObject_options_error_, v47, 2, v76);

  v49 = *(id *)&v76[0];
  if (!v48)
  {
    v57 = v49;
    sub_1BB86C484();

    swift_willThrow();
LABEL_13:
    swift_bridgeObjectRelease();
    v12 = v72;
    goto LABEL_14;
  }
  v50 = sub_1BB86C6E8();
  v52 = v51;

  sub_1BB8729DC();
  sub_1BB8729B8();
  if (!v53)
  {
    sub_1BAB30230();
    swift_allocError();
    *v58 = 2;
    swift_willThrow();
    sub_1BA69D314(v50, v52);
    goto LABEL_13;
  }
  sub_1BA69D314(v50, v52);
  swift_bridgeObjectRelease();
  v54 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
  v55 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v54, sel_initWithJSONString_, v55);
  swift_release();

  v12 = v72;
  *(_QWORD *)((char *)v72 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v56;
  return v12;
}

_QWORD *sub_1BAB2CE4C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  _BYTE *v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  _OWORD v76[20];
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v71 = *v2;
  v5 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *v7 = v8 | 0x8000000000000000;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v70 = v7;
  v11 = v9;
  v12 = v2;
  v10(v7, 0, 1, v11);
  v68 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v69 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v73 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  v66 = v13;
  inited = swift_initStackObject();
  v75 = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  v67 = inited + 32;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CC00;
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB980, (uint64_t (*)(uint64_t))sub_1BAB300E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = v75;
  *(_QWORD *)(v16 + 32) = 0x726F6353656E696CLL;
  *(_QWORD *)(v16 + 40) = 0xE900000000000065;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB990, (uint64_t (*)(uint64_t))sub_1BAB3014C, v15);
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = v75;
  v18 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v17 + 40) = v18;
  v74 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v72;
  v20 = sub_1BAB2978C(a2);
  *(_QWORD *)&v75 = v19;
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
LABEL_14:
    swift_release();
    sub_1BA5C699C((uint64_t)v70, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v12;
  }
  v61 = v17;
  v62 = v20;
  v60[1] = v16 + 32;
  v63 = v16;
  v64 = inited;
  v72 = v12;
  swift_bridgeObjectRelease();
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87D7A0;
  strcpy((char *)(v21 + 32), "umcCanonicalId");
  *(_BYTE *)(v21 + 47) = -18;
  v22 = v74;
  v23 = *(_QWORD *)(v74 + 40);
  v24 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v74 + 32);
  *(_QWORD *)(v21 + 56) = v23;
  *(_QWORD *)(v21 + 72) = v24;
  *(_QWORD *)(v21 + 80) = 0x746E657665;
  *(_QWORD *)(v21 + 88) = 0xE500000000000000;
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  v26 = sub_1BAB29A18(ObjectType);
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v73, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  *(_QWORD *)(v21 + 96) = v26;
  v28 = v27;
  *(_QWORD *)(v21 + 120) = v27;
  *(_QWORD *)(v21 + 128) = 0xD000000000000010;
  *(_QWORD *)(v21 + 136) = 0x80000001BB96CC20;
  v29 = objc_msgSend(*(id *)(v22 + 48), sel_eventCompetitorTags);
  if (v29)
  {
    v30 = v29;
    sub_1BA8EB1C8();
    v31 = sub_1BB872DB4();

  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  v32 = v61;
  *(_QWORD *)&v76[0] = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_roster);
  swift_bridgeObjectRetain();
  v33 = sub_1BAB29CBC(v31, (uint64_t *)v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 144) = v33;
  v34 = v74;
  *(_QWORD *)(v21 + 168) = v28;
  *(_QWORD *)(v21 + 176) = 0x6E6F436465626D65;
  *(_QWORD *)(v21 + 184) = 0xEB00000000676966;
  v35 = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 16);
  v76[0] = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config);
  v76[1] = v35;
  v76[2] = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed32SportsLineScoreDataVisualization_config + 32);
  v36 = sub_1BAB2A088((uint64_t *)v76);
  *(_QWORD *)(v21 + 216) = v28;
  *(_QWORD *)(v21 + 192) = v36;
  v37 = (_QWORD *)sub_1BA76E994(v21);
  v38 = v75;
  v39 = sub_1BAB2A3D8(v62, v37);
  if (v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
    v12 = v72;
    goto LABEL_14;
  }
  v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 48) = v40;
  v41 = sub_1BA8F3754(v32);
  v42 = v63;
  *(_QWORD *)(v63 + 48) = v41;
  v43 = sub_1BA8F3768(v42);
  sub_1BAB301CC();
  v44 = v64;
  *(_QWORD *)(v64 + 72) = v45;
  *(_QWORD *)(v44 + 48) = v43;
  sub_1BA76E994(v44);
  v46 = (void *)objc_opt_self();
  v47 = (void *)sub_1BB872760();
  *(_QWORD *)&v76[0] = 0;
  v48 = objc_msgSend(v46, sel_dataWithJSONObject_options_error_, v47, 2, v76);

  v49 = *(id *)&v76[0];
  if (!v48)
  {
    v57 = v49;
    sub_1BB86C484();

    swift_willThrow();
LABEL_13:
    swift_bridgeObjectRelease();
    v12 = v72;
    goto LABEL_14;
  }
  v50 = sub_1BB86C6E8();
  v52 = v51;

  sub_1BB8729DC();
  sub_1BB8729B8();
  if (!v53)
  {
    sub_1BAB30230();
    swift_allocError();
    *v58 = 2;
    swift_willThrow();
    sub_1BA69D314(v50, v52);
    goto LABEL_13;
  }
  sub_1BA69D314(v50, v52);
  swift_bridgeObjectRelease();
  v54 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
  v55 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v54, sel_initWithJSONString_, v55);
  swift_release();

  v12 = v72;
  *(_QWORD *)((char *)v72 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v56;
  return v12;
}

_QWORD *sub_1BAB2D654(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t inited;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t ObjectType;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  void *v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  id v52;
  void *v53;
  id v54;
  _QWORD *v55;
  _QWORD *v56;
  void *v57;
  uint64_t v58;
  _BYTE *v59;
  _QWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  __int128 v74;
  _OWORD v75[20];
  uint64_t v76;

  v76 = *MEMORY[0x1E0C80C00];
  v70 = *v2;
  v5 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *v7 = v8 | 0xA000000000000000;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v69 = v7;
  v10(v7, 0, 1, v9);
  v67 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v73 = v2;
  v68 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v72 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  v66 = v11;
  inited = swift_initStackObject();
  v74 = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CC00;
  v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB980, (uint64_t (*)(uint64_t))sub_1BAB300E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v14 = swift_initStackObject();
  *(_OWORD *)(v14 + 16) = v74;
  strcpy((char *)(v14 + 32), "injuryReport");
  *(_BYTE *)(v14 + 45) = 0;
  *(_WORD *)(v14 + 46) = -5120;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB990, (uint64_t (*)(uint64_t))sub_1BAB3014C, v13);
  v15 = swift_initStackObject();
  *(_OWORD *)(v15 + 16) = v74;
  v16 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v15 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v15 + 40) = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = v71;
  v18 = sub_1BAB2978C(a2);
  *(_QWORD *)&v74 = v17;
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
LABEL_14:
    swift_release();
    sub_1BA5C699C((uint64_t)v69, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    v56 = v73;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v56;
  }
  v63 = v14;
  v64 = v18;
  v61[1] = v15 + 32;
  v61[2] = v14 + 32;
  v19 = inited;
  v61[3] = inited + 32;
  swift_bridgeObjectRelease();
  v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87D7A0;
  strcpy((char *)(v20 + 32), "umcCanonicalId");
  *(_BYTE *)(v20 + 47) = -18;
  v21 = *(_QWORD *)(a1 + 32);
  v71 = a1;
  v22 = *(_QWORD *)(a1 + 40);
  v23 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 48) = v21;
  *(_QWORD *)(v20 + 56) = v22;
  *(_QWORD *)(v20 + 72) = v23;
  *(_QWORD *)(v20 + 80) = 0x746E657665;
  *(_QWORD *)(v20 + 88) = 0xE500000000000000;
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  v25 = sub_1BAB29A18(ObjectType);
  v26 = v71;
  v27 = v25;
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v72, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  *(_QWORD *)(v20 + 96) = v27;
  v29 = v28;
  *(_QWORD *)(v20 + 120) = v28;
  *(_QWORD *)(v20 + 128) = 0xD000000000000010;
  *(_QWORD *)(v20 + 136) = 0x80000001BB96CC20;
  v30 = objc_msgSend(*(id *)(v26 + 48), sel_eventCompetitorTags);
  v62 = v19;
  if (v30)
  {
    v31 = v30;
    sub_1BA8EB1C8();
    v32 = sub_1BB872DB4();

  }
  else
  {
    v32 = MEMORY[0x1E0DEE9D8];
  }
  v33 = v63;
  *(_QWORD *)&v75[0] = *(_QWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_roster);
  swift_bridgeObjectRetain();
  v34 = sub_1BAB29CBC(v32, (uint64_t *)v75);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v20 + 144) = v34;
  *(_QWORD *)(v20 + 168) = v29;
  *(_QWORD *)(v20 + 176) = 0x6E6F436465626D65;
  *(_QWORD *)(v20 + 184) = 0xEB00000000676966;
  v35 = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 16);
  v75[0] = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config);
  v75[1] = v35;
  v75[2] = *(_OWORD *)(v26 + OBJC_IVAR____TtC8NewsFeed35SportsInjuryReportDataVisualization_config + 32);
  v36 = sub_1BAB2A088((uint64_t *)v75);
  *(_QWORD *)(v20 + 216) = v29;
  *(_QWORD *)(v20 + 192) = v36;
  v37 = (_QWORD *)sub_1BA76E994(v20);
  v38 = v74;
  v39 = sub_1BAB2A3D8(v64, v37);
  *(_QWORD *)&v74 = v38;
  if (v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
    goto LABEL_14;
  }
  v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v15 + 48) = v40;
  *(_QWORD *)(v33 + 48) = sub_1BA8F3754(v15);
  v41 = sub_1BA8F3768(v33);
  sub_1BAB301CC();
  v42 = v62;
  *(_QWORD *)(v62 + 72) = v43;
  *(_QWORD *)(v42 + 48) = v41;
  sub_1BA76E994(v42);
  v44 = (void *)objc_opt_self();
  v45 = (void *)sub_1BB872760();
  *(_QWORD *)&v75[0] = 0;
  v46 = objc_msgSend(v44, sel_dataWithJSONObject_options_error_, v45, 2, v75);

  v47 = *(id *)&v75[0];
  if (!v46)
  {
    v57 = v47;
    v58 = sub_1BB86C484();

    *(_QWORD *)&v74 = v58;
    swift_willThrow();
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  v48 = sub_1BB86C6E8();
  v50 = v49;

  sub_1BB8729DC();
  sub_1BB8729B8();
  if (!v51)
  {
    sub_1BAB30230();
    *(_QWORD *)&v74 = swift_allocError();
    *v59 = 2;
    swift_willThrow();
    sub_1BA69D314(v48, v50);
    goto LABEL_13;
  }
  sub_1BA69D314(v48, v50);
  swift_bridgeObjectRelease();
  v52 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
  v53 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v54 = objc_msgSend(v52, sel_initWithJSONString_, v53);
  swift_release();

  v55 = v73;
  *(_QWORD *)((char *)v73 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v54;
  return v55;
}

_QWORD *sub_1BAB2DE5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(unint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t inited;
  uint64_t (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjectType;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  unint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  void *v47;
  id v48;
  id v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  _BYTE *v58;
  _QWORD v60[2];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  _OWORD v76[20];
  uint64_t v77;

  v77 = *MEMORY[0x1E0C80C00];
  v71 = *v2;
  v5 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v5);
  v65 = (char *)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *v7 = v8 | 0xC000000000000000;
  v9 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v10 = *(void (**)(unint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56);
  v70 = v7;
  v11 = v9;
  v12 = v2;
  v10(v7, 0, 1, v11);
  v68 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v69 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v73 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  v66 = v13;
  inited = swift_initStackObject();
  v75 = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0xD00000000000001DLL;
  v67 = inited + 32;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CC00;
  v15 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB980, (uint64_t (*)(uint64_t))sub_1BAB300E8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v16 = swift_initStackObject();
  *(_OWORD *)(v16 + 16) = v75;
  *(_QWORD *)(v16 + 32) = 0x6579616C5079656BLL;
  *(_QWORD *)(v16 + 40) = 0xE900000000000072;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AB990, (uint64_t (*)(uint64_t))sub_1BAB3014C, v15);
  v17 = swift_initStackObject();
  *(_OWORD *)(v17 + 16) = v75;
  v18 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(v17 + 32) = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(v17 + 40) = v18;
  v74 = a1;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19 = v72;
  v20 = sub_1BAB2978C(a2);
  *(_QWORD *)&v75 = v19;
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
LABEL_14:
    swift_release();
    sub_1BA5C699C((uint64_t)v70, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return v12;
  }
  v61 = v17;
  v62 = v20;
  v60[1] = v16 + 32;
  v63 = v16;
  v64 = inited;
  v72 = v12;
  swift_bridgeObjectRelease();
  v21 = swift_initStackObject();
  *(_OWORD *)(v21 + 16) = xmmword_1BB87D7A0;
  strcpy((char *)(v21 + 32), "umcCanonicalId");
  *(_BYTE *)(v21 + 47) = -18;
  v22 = v74;
  v23 = *(_QWORD *)(v74 + 40);
  v24 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v21 + 48) = *(_QWORD *)(v74 + 32);
  *(_QWORD *)(v21 + 56) = v23;
  *(_QWORD *)(v21 + 72) = v24;
  *(_QWORD *)(v21 + 80) = 0x746E657665;
  *(_QWORD *)(v21 + 88) = 0xE500000000000000;
  ObjectType = swift_getObjectType();
  swift_bridgeObjectRetain();
  v26 = sub_1BAB29A18(ObjectType);
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v73, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  *(_QWORD *)(v21 + 96) = v26;
  v28 = v27;
  *(_QWORD *)(v21 + 120) = v27;
  *(_QWORD *)(v21 + 128) = 0xD000000000000010;
  *(_QWORD *)(v21 + 136) = 0x80000001BB96CC20;
  v29 = objc_msgSend(*(id *)(v22 + 48), sel_eventCompetitorTags);
  if (v29)
  {
    v30 = v29;
    sub_1BA8EB1C8();
    v31 = sub_1BB872DB4();

  }
  else
  {
    v31 = MEMORY[0x1E0DEE9D8];
  }
  v32 = v61;
  *(_QWORD *)&v76[0] = *(_QWORD *)(v22 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_roster);
  swift_bridgeObjectRetain();
  v33 = sub_1BAB29CBC(v31, (uint64_t *)v76);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v21 + 144) = v33;
  v34 = v74;
  *(_QWORD *)(v21 + 168) = v28;
  *(_QWORD *)(v21 + 176) = 0x6E6F436465626D65;
  *(_QWORD *)(v21 + 184) = 0xEB00000000676966;
  v35 = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 16);
  v76[0] = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config);
  v76[1] = v35;
  v76[2] = *(_OWORD *)(v34 + OBJC_IVAR____TtC8NewsFeed32SportsKeyPlayerDataVisualization_config + 32);
  v36 = sub_1BAB2A088((uint64_t *)v76);
  *(_QWORD *)(v21 + 216) = v28;
  *(_QWORD *)(v21 + 192) = v36;
  v37 = (_QWORD *)sub_1BA76E994(v21);
  v38 = v75;
  v39 = sub_1BAB2A3D8(v62, v37);
  if (v38)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3014C();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB300E8();
    swift_arrayDestroy();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
    v12 = v72;
    goto LABEL_14;
  }
  v40 = v39;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 48) = v40;
  v41 = sub_1BA8F3754(v32);
  v42 = v63;
  *(_QWORD *)(v63 + 48) = v41;
  v43 = sub_1BA8F3768(v42);
  sub_1BAB301CC();
  v44 = v64;
  *(_QWORD *)(v64 + 72) = v45;
  *(_QWORD *)(v44 + 48) = v43;
  sub_1BA76E994(v44);
  v46 = (void *)objc_opt_self();
  v47 = (void *)sub_1BB872760();
  *(_QWORD *)&v76[0] = 0;
  v48 = objc_msgSend(v46, sel_dataWithJSONObject_options_error_, v47, 2, v76);

  v49 = *(id *)&v76[0];
  if (!v48)
  {
    v57 = v49;
    sub_1BB86C484();

    swift_willThrow();
LABEL_13:
    swift_bridgeObjectRelease();
    v12 = v72;
    goto LABEL_14;
  }
  v50 = sub_1BB86C6E8();
  v52 = v51;

  sub_1BB8729DC();
  sub_1BB8729B8();
  if (!v53)
  {
    sub_1BAB30230();
    swift_allocError();
    *v58 = 2;
    swift_willThrow();
    sub_1BA69D314(v50, v52);
    goto LABEL_13;
  }
  sub_1BA69D314(v50, v52);
  swift_bridgeObjectRelease();
  v54 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
  v55 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v56 = objc_msgSend(v54, sel_initWithJSONString_, v55);
  swift_release();

  v12 = v72;
  *(_QWORD *)((char *)v72 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v56;
  return v12;
}

_QWORD *sub_1BAB2E664(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  _BYTE *v41;
  _QWORD v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  id v50[30];

  v50[29] = *(id *)MEMORY[0x1E0C80C00];
  v47 = *v2;
  v6 = sub_1BB8729E8();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization;
  v49 = (_QWORD *)a1;
  sub_1BA4C2DD8(a1, (uint64_t)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  v10 = type metadata accessor for WebEmbedDataVisualization();
  swift_storeEnumTagMultiPayload();
  v11 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  v46 = v9;
  v11(v9, 0, 1, v10);
  v44 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = a2;
  v45 = OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents;
  v48 = v2;
  *(_QWORD *)((char *)v2 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
  v12 = MEMORY[0x1E0DEE9B8];
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  inited = swift_initStackObject();
  *(_QWORD *)(inited + 32) = 0xD000000000000016;
  v43 = xmmword_1BB87CE70;
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 40) = 0x80000001BB96CCA0;
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1BAB2978C(v14);
  if (v3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_setDeallocating();
    sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
    swift_arrayDestroy();
    v24 = (uint64_t)v49;
    v25 = v48;
  }
  else
  {
    v16 = v15;
    v42[1] = v8;
    swift_bridgeObjectRelease();
    v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = v43;
    *(_QWORD *)(v17 + 32) = 0x617461446174656DLL;
    *(_QWORD *)(v17 + 40) = 0xE800000000000000;
    v18 = MEMORY[0x1E0DEA968];
    sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FC0, &qword_1ED3B9218);
    v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = v43;
    *(_QWORD *)(v19 + 32) = 0x696669746E656469;
    *(_QWORD *)(v19 + 40) = 0xEA00000000007265;
    v20 = v49[1];
    *(_QWORD *)(v19 + 48) = *v49;
    *(_QWORD *)(v19 + 56) = v20;
    swift_bridgeObjectRetain();
    v21 = sub_1BA8F2B44(v19);
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3AF490, v18, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    *(_QWORD *)(v17 + 72) = v22;
    *(_QWORD *)(v17 + 48) = v21;
    v23 = (_QWORD *)sub_1BA76E994(v17);
    v27 = sub_1BAB2A3D8(v16, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v12 + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    *(_QWORD *)(inited + 72) = v28;
    *(_QWORD *)(inited + 48) = v27;
    sub_1BA76E994(inited);
    v29 = (void *)objc_opt_self();
    v30 = (void *)sub_1BB872760();
    v50[0] = 0;
    v31 = objc_msgSend(v29, sel_dataWithJSONObject_options_error_, v30, 2, v50);

    v32 = v50[0];
    v25 = v48;
    if (v31)
    {
      v33 = sub_1BB86C6E8();
      v35 = v34;

      sub_1BB8729DC();
      sub_1BB8729B8();
      v24 = (uint64_t)v49;
      if (v36)
      {
        sub_1BA69D314(v33, v35);
        swift_bridgeObjectRelease();
        v37 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
        v38 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
        v39 = objc_msgSend(v37, sel_initWithJSONString_, v38);

        sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
        *(_QWORD *)((char *)v25 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v39;
        return v25;
      }
      sub_1BAB30230();
      swift_allocError();
      *v41 = 2;
      swift_willThrow();
      sub_1BA69D314(v33, v35);
      swift_bridgeObjectRelease();
    }
    else
    {
      v40 = v32;
      sub_1BB86C484();

      swift_willThrow();
      swift_bridgeObjectRelease();
      v24 = (uint64_t)v49;
    }
  }
  sub_1BA4A2E80(v24, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  sub_1BA5C699C(v46, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  return v25;
}

uint64_t WebEmbedDatastore.deinit()
{
  uint64_t v0;

  sub_1BA5C699C(v0 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WebEmbedDatastore.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA5C699C(v0 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB2ED04(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed17WebEmbedDatastoreC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t sub_1BAB2ED10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  id v17;
  void **v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  _BYTE *v29;
  void *v30;
  void *v31;
  id v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  char v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t inited;
  uint64_t v44;
  id v45;
  _BYTE *v46;
  uint64_t v48;
  uint64_t v49;
  void **v50;
  uint64_t v51;
  unint64_t v52;
  _OWORD v53[2];
  __int128 v54;
  uint64_t v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v51 = sub_1BB86E6E0();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v50 = (void **)((char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = sub_1BB8729E8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = type metadata accessor for WebEmbedDatastoreProperty();
  sub_1BA4C2DD8(a1 + *(int *)(v13 + 20), (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA5193C4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
    sub_1BB8729DC();
    v26 = sub_1BB8729AC();
    v28 = v27;
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v28 >> 60 == 15)
    {
      sub_1BAB30230();
      swift_allocError();
      *v29 = 0;
      swift_willThrow();
    }
    else
    {
      v30 = (void *)objc_opt_self();
      v31 = (void *)sub_1BB86C6DC();
      *(_QWORD *)&v54 = 0;
      v32 = objc_msgSend(v30, sel_JSONObjectWithData_options_error_, v31, 0, &v54);

      if (v32)
      {
        v33 = (id)v54;
        sub_1BB873B64();
        swift_unknownObjectRelease();
        sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
        if (swift_dynamicCast())
        {
          sub_1BA69D490(v26, v28);
          v4 = *(_QWORD *)&v53[0];
          sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
          return v4;
        }
        sub_1BAB30230();
        swift_allocError();
        *v46 = 1;
      }
      else
      {
        v45 = (id)v54;
        sub_1BB86C484();

      }
      swift_willThrow();
      sub_1BA69D490(v26, v28);
    }
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
    return v4;
  }
  v14 = *v12;
  v15 = v12[1];
  v16 = sub_1BA76E994(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)&v54 = *(_QWORD *)(v14 + 16);
  v17 = (id)v54;
  sub_1BA8EBDF8();
  v18 = v50;
  v19 = v51;
  v20 = swift_dynamicCast();
  v21 = MEMORY[0x1E0DEB418];
  if (!v20)
    goto LABEL_11;
  v22 = v49;
  if ((*(unsigned int (**)(void **, uint64_t))(v49 + 88))(v18, v19) != *MEMORY[0x1E0DB4750])
  {
    (*(void (**)(void **, uint64_t))(v22 + 8))(v18, v19);
LABEL_11:

    goto LABEL_12;
  }
  (*(void (**)(void **, uint64_t))(v22 + 96))(v18, v19);
  v23 = *v18;

  v24 = objc_msgSend(v23, sel_statusCode);
  v55 = v21;
  *(_QWORD *)&v54 = v24;
  sub_1BA76EAE0(&v54, v53);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v52 = v16;
  sub_1BA785F30(v53, 0x6F43737574617473, 0xEA00000000006564, isUniquelyReferenced_nonNull_native);
  v16 = v52;
  swift_bridgeObjectRelease();
LABEL_12:
  *(_QWORD *)&v54 = *(_QWORD *)(v14 + 16);
  v34 = (id)v54;
  v35 = sub_1BB872A00();
  v55 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v54 = v35;
  *((_QWORD *)&v54 + 1) = v36;
  sub_1BA76EAE0(&v54, v53);
  v37 = swift_isUniquelyReferenced_nonNull_native();
  v52 = v16;
  sub_1BA785F30(v53, 0x7470697263736564, 0xEB000000006E6F69, v37);
  v38 = v52;
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(v14 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_maxAge + 8))
    v39 = v15;
  else
    v39 = *(_QWORD *)(v14 + OBJC_IVAR____TtC8NewsFeed43WebEmbedDataVisualizationDataServiceFailure_maxAge);
  v55 = v21;
  *(_QWORD *)&v54 = v39;
  sub_1BA76EAE0(&v54, v53);
  v40 = swift_isUniquelyReferenced_nonNull_native();
  v52 = v38;
  sub_1BA785F30(v53, 0x65674178616DLL, 0xE600000000000000, v40);
  v41 = v52;
  swift_bridgeObjectRelease();
  v42 = MEMORY[0x1E0DEE9B8] + 8;
  sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(inited + 32) = 0x726F727265;
  *(_QWORD *)(inited + 40) = 0xE500000000000000;
  sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v42, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
  *(_QWORD *)(inited + 72) = v44;
  *(_QWORD *)(inited + 48) = v41;
  v4 = sub_1BA76E994(inited);
  swift_release();
  return v4;
}

unint64_t sub_1BAB2F330(_QWORD **a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t result;
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t i;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  _QWORD **v36;
  _QWORD v37[2];
  __int128 v38;
  uint64_t v39;

  result = sub_1BAB2978C(*a2);
  if (v2)
    return result;
  v5 = 0;
  v6 = *(_QWORD *)(result + 64);
  v34 = result + 64;
  v7 = 1 << *(_BYTE *)(result + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v35 = (unint64_t)(v7 + 63) >> 6;
  v39 = MEMORY[0x1E0DEE9B8] + 8;
  v36 = a1;
  if ((v8 & v6) == 0)
    goto LABEL_6;
LABEL_5:
  v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (i = v10 | (v5 << 6); ; i = __clz(__rbit64(v13)) + (v5 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v17 = *v16;
    v18 = v16[1];
    v19 = *(_QWORD *)(*(_QWORD *)(result + 56) + 8 * i);
    v20 = v39;
    sub_1BAB30094(0, (unint64_t *)&qword_1ED3B9FD0, (unint64_t *)&qword_1ED3B9220);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(inited + 32) = v17;
    *(_QWORD *)(inited + 40) = v18;
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3C02C0, v20, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    *(_QWORD *)(inited + 72) = v22;
    *(_QWORD *)(inited + 48) = v19;
    sub_1BAB30360(0, (unint64_t *)&qword_1ED3B9B70, v20, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DECD58]);
    v23 = (_QWORD *)sub_1BB873F6C();
    sub_1BAB303B4(inited + 32, (uint64_t)v37);
    v24 = v37[0];
    v25 = v37[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    result = sub_1BA6E35A8(v24, v25);
    if ((v26 & 1) != 0)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    v23[(result >> 6) + 8] |= 1 << result;
    v27 = (uint64_t *)(v23[6] + 16 * result);
    *v27 = v24;
    v27[1] = v25;
    result = (unint64_t)sub_1BA76EAE0(&v38, (_OWORD *)(v23[7] + 32 * result));
    v28 = v23[2];
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
      goto LABEL_31;
    v23[2] = v30;
    swift_release();
    swift_bridgeObjectRelease();
    v31 = *v36;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v31 = sub_1BB3905B0(0, v31[2] + 1, 1, v31);
    v33 = v31[2];
    v32 = v31[3];
    if (v33 >= v32 >> 1)
      v31 = sub_1BB3905B0((_QWORD *)(v32 > 1), v33 + 1, 1, v31);
    v31[2] = v33 + 1;
    v31[v33 + 4] = v23;
    *v36 = v31;
    result = v15;
    if (v9)
      goto LABEL_5;
LABEL_6:
    v12 = v5 + 1;
    if (__OFADD__(v5, 1))
      goto LABEL_32;
    if (v12 >= v35)
      return swift_release();
    v13 = *(_QWORD *)(v34 + 8 * v12);
    ++v5;
    if (!v13)
    {
      v5 = v12 + 1;
      if (v12 + 1 >= v35)
        return swift_release();
      v13 = *(_QWORD *)(v34 + 8 * v5);
      if (!v13)
      {
        v5 = v12 + 2;
        if (v12 + 2 >= v35)
          return swift_release();
        v13 = *(_QWORD *)(v34 + 8 * v5);
        if (!v13)
          break;
      }
    }
LABEL_19:
    v9 = (v13 - 1) & v13;
  }
  v14 = v12 + 3;
  if (v14 >= v35)
    return swift_release();
  v13 = *(_QWORD *)(v34 + 8 * v14);
  if (v13)
  {
    v5 = v14;
    goto LABEL_19;
  }
  while (1)
  {
    v5 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v5 >= v35)
      return swift_release();
    v13 = *(_QWORD *)(v34 + 8 * v5);
    ++v14;
    if (v13)
      goto LABEL_19;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed17WebEmbedDatastoreC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;

  v3 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a1
                                                             + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
  v4 = sub_1BB8729A0();
  v6 = v5;

  v7 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(a2
                                                             + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
  v8 = sub_1BB8729A0();
  v10 = v9;

  if (v4 == v8 && v6 == v10)
    v12 = 1;
  else
    v12 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_1BAB2F75C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  double v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;

  v23 = a4;
  v24 = a5;
  sub_1BA89C564();
  v10 = v9;
  v11 = MEMORY[0x1E0C80A78](v9);
  v28 = a1;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v13 + 16))((char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10, v11);
  sub_1BA4A2870(&qword_1EF2B0730, (uint64_t (*)(uint64_t))sub_1BA89C564, MEMORY[0x1E0DB4F60]);
  result = sub_1BB872BA4();
  v15 = v26;
  v16 = v27;
  if (v26 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    result = swift_bridgeObjectRelease();
    if (v16 == v17)
      goto LABEL_3;
  }
  else if (v27 == *(_QWORD *)((v26 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_3:
    swift_bridgeObjectRelease();
    return v28;
  }
  if (v15 < 0)
    v18 = v15;
  else
    v18 = v15 & 0xFFFFFFFFFFFFFF8;
  v22 = v18;
  while ((v15 & 0xC000000000000001) != 0)
  {
    result = MEMORY[0x1BCCE4630](v16, v15);
    v20 = result;
    v21 = v16 + 1;
    if (__OFADD__(v16, 1))
      goto LABEL_22;
LABEL_18:
    v25 = v20;
    sub_1BAB2B380((uint64_t)&v28, &v25, a3, v23, v24);
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    result = swift_release();
    if ((unint64_t)v15 >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_1BB873F30();
      result = swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    ++v16;
    if (v21 == v19)
      goto LABEL_3;
  }
  if ((v16 & 0x8000000000000000) != 0)
    goto LABEL_23;
  if (v16 >= *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_24;
  v20 = *(_QWORD *)(v15 + 8 * v16 + 32);
  result = swift_retain();
  v21 = v16 + 1;
  if (!__OFADD__(v16, 1))
    goto LABEL_18;
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t _s8NewsFeed17WebEmbedDatastoreC5empty3forAcA0cD17DataVisualizationO_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v15;

  v2 = type metadata accessor for WebEmbedDataVisualization();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v5, v6);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for WebEmbedDatastore();
    v7 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization, 1, 1, v2);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = 0;
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
    v8 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
    v9 = (void *)sub_1BB872970();
    v10 = objc_msgSend(v8, sel_initWithJSONString_, v9);

    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v10;
    sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  }
  else
  {
    swift_release();
    type metadata accessor for WebEmbedDatastore();
    v7 = swift_allocObject();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 56))(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_visualization, 1, 1, v2);
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents) = 0;
    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents) = 0;
    v11 = objc_allocWithZone(MEMORY[0x1E0D977C8]);
    v12 = (void *)sub_1BB872970();
    v13 = objc_msgSend(v11, sel_initWithJSONString_, v12);

    *(_QWORD *)(v7 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore) = v13;
  }
  return v7;
}

uint64_t sub_1BAB2FB84()
{
  return type metadata accessor for WebEmbedDatastore();
}

uint64_t type metadata accessor for WebEmbedDatastore()
{
  uint64_t result;

  result = qword_1ED3A5ED0;
  if (!qword_1ED3A5ED0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAB2FBC8()
{
  unint64_t v0;

  sub_1BA4B07F0(319, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for WebEmbedDatastore()
{
  return swift_lookUpClassMethod();
}

_QWORD *sub_1BAB2FC70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(_QWORD);
  _QWORD *v14;
  uint64_t v16;

  v4 = type metadata accessor for GenericDataVisualization();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v16 - v8;
  v10 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v12, v13);
  if (swift_getEnumCaseMultiPayload() != 1)
    __asm { BR              X10 }
  swift_bridgeObjectRelease();
  sub_1BA5193C4((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  type metadata accessor for WebEmbedDatastore();
  swift_allocObject();
  v14 = sub_1BAB2E664((uint64_t)v6, a2);
  sub_1BA4A2E80(a1, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for GenericDataVisualization);
  return v14;
}

void sub_1BAB30008()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_bridgeObjectRelease();
  type metadata accessor for WebEmbedDatastore();
  swift_allocObject();
  v2 = swift_retain();
  sub_1BAB2DE5C(v2, v0);
  if (!v1)
    JUMPOUT(0x1BAB30050);
  JUMPOUT(0x1BAB2FFCCLL);
}

uint64_t sub_1BAB30070()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAB30094(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BAB3040C(255, a3);
    v4 = sub_1BB874218();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1BAB300E8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AAD28)
  {
    sub_1BA8F58C0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AAD28);
  }
}

void sub_1BAB3014C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AAD38)
  {
    sub_1BAB30360(255, (unint64_t *)&qword_1ED3C02C0, MEMORY[0x1E0DEE9B8] + 8, (uint64_t (*)(_QWORD, _QWORD, uint64_t, _QWORD))MEMORY[0x1E0DEA048]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AAD38);
  }
}

void sub_1BAB301CC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAC88)
  {
    sub_1BA8F58C0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAC88);
  }
}

unint64_t sub_1BAB30230()
{
  unint64_t result;

  result = qword_1EF2B0710;
  if (!qword_1EF2B0710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB91E2B0, &type metadata for WebEmbedDatastoreError);
    atomic_store(result, (unint64_t *)&qword_1EF2B0710);
  }
  return result;
}

void sub_1BAB30274()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B0720)
  {
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B0720);
  }
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1BCCE5C38);
  return result;
}

uint64_t sub_1BAB30310(uint64_t a1)
{
  uint64_t v2;

  sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAB30360(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, _QWORD, uint64_t, _QWORD))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, MEMORY[0x1E0DEA968], a3, MEMORY[0x1E0DEA978]);
    if (!v6)
      atomic_store(v5, a2);
  }
}

uint64_t sub_1BAB303B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB3040C(0, (unint64_t *)&qword_1ED3B9220);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAB3040C(uint64_t a1, unint64_t *a2)
{
  unint64_t TupleTypeMetadata2;
  uint64_t v4;

  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t FormatSymbolWeight.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAB30490 + 4 * byte_1BB8A0D00[*v0]))(0x6669636570736E75, 0xEA00000000006465);
}

uint64_t sub_1BAB30490()
{
  return 0x67694C6172746C75;
}

uint64_t sub_1BAB304AC()
{
  return 1852401780;
}

uint64_t sub_1BAB304BC()
{
  return 0x746867696CLL;
}

uint64_t sub_1BAB304D0()
{
  return 0x72616C75676572;
}

uint64_t sub_1BAB304E8()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1BAB304FC()
{
  return 0x646C6F62696D6573;
}

uint64_t sub_1BAB30514()
{
  return 1684828002;
}

uint64_t sub_1BAB30524()
{
  return 0x7976616568;
}

uint64_t sub_1BAB30538()
{
  return 0x6B63616C62;
}

void sub_1BAB3054C(char *a1)
{
  sub_1BB803130(*a1);
}

unint64_t sub_1BAB3055C()
{
  unint64_t result;

  result = qword_1EF2B0740;
  if (!qword_1EF2B0740)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolWeight, &type metadata for FormatSymbolWeight);
    atomic_store(result, (unint64_t *)&qword_1EF2B0740);
  }
  return result;
}

uint64_t sub_1BAB305A0()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D38F4((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BAB305E4(uint64_t a1)
{
  char *v1;

  sub_1BA9D38F4(a1, *v1);
}

uint64_t sub_1BAB305EC()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D38F4((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BAB3062C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatSymbolWeight.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1BAB30650(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAB3067C();
  result = sub_1BA4CC888();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB3067C()
{
  unint64_t result;

  result = qword_1EF2B0748;
  if (!qword_1EF2B0748)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolWeight, &type metadata for FormatSymbolWeight);
    atomic_store(result, (unint64_t *)&qword_1EF2B0748);
  }
  return result;
}

unint64_t sub_1BAB306C0(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB306E4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB306E4()
{
  unint64_t result;

  result = qword_1EF2B0750;
  if (!qword_1EF2B0750)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolWeight, &type metadata for FormatSymbolWeight);
    atomic_store(result, (unint64_t *)&qword_1EF2B0750);
  }
  return result;
}

unint64_t sub_1BAB30728(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA598F3C();
  a1[2] = sub_1BA5FE24C();
  result = sub_1BAB3055C();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatSymbolWeight()
{
  return &type metadata for FormatSymbolWeight;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatStateViewNodeDataLayoutAttributes.stateLayoutAttributes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatStateViewNodeDataLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatStateViewNodeDataLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

unint64_t FormatStateViewNodeDataLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatStateViewNodeDataLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatStateViewNodeDataLayoutAttributes.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatStateViewNodeDataLayoutAttributes.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

double FormatStateViewNodeDataLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t FormatStateViewNodeDataLayoutAttributes.__allocating_init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v15;
  uint64_t v16;

  result = swift_allocObject();
  v15 = *a3;
  v16 = *a5;
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = v15;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = v16;
  *(_BYTE *)(result + 56) = a6;
  *(_QWORD *)(result + 64) = a7;
  return result;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t *a5, char a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v8 = *a3;
  v9 = *a5;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = v9;
  *(_BYTE *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = a7;
  return v7;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  return v0;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.__deallocating_deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 48));
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t FormatStateViewNodeDataLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BAB30A08()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.formatImageRequests(options:inventory:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v35 = a1;
  v36 = a2;
  v30 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v30);
  v29 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = sub_1BA6B0504();
  v4 = *(_QWORD *)(v2 + 24);
  v5 = *(_QWORD *)(v4 + 64);
  v23 = v4 + 64;
  v6 = 1 << *(_BYTE *)(v4 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v24 = (unint64_t)(v6 + 63) >> 6;
  v25 = v4;
  swift_bridgeObjectRetain();
  v9 = 0;
  while (1)
  {
    if (v8)
    {
      v26 = (v8 - 1) & v8;
      v27 = v9;
      v10 = __clz(__rbit64(v8)) | (v9 << 6);
      goto LABEL_24;
    }
    v11 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_33;
    if (v11 >= v24)
      break;
    v12 = *(_QWORD *)(v23 + 8 * v11);
    v13 = v9 + 1;
    if (!v12)
    {
      v13 = v9 + 2;
      if (v9 + 2 >= v24)
        break;
      v12 = *(_QWORD *)(v23 + 8 * v13);
      if (!v12)
      {
        v13 = v9 + 3;
        if (v9 + 3 >= v24)
          break;
        v12 = *(_QWORD *)(v23 + 8 * v13);
        if (!v12)
        {
          v13 = v9 + 4;
          if (v9 + 4 >= v24)
            break;
          v12 = *(_QWORD *)(v23 + 8 * v13);
          if (!v12)
          {
            v14 = v9 + 5;
            if (v9 + 5 >= v24)
              break;
            v12 = *(_QWORD *)(v23 + 8 * v14);
            if (!v12)
            {
              while (1)
              {
                v13 = v14 + 1;
                if (__OFADD__(v14, 1))
                  goto LABEL_34;
                if (v13 >= v24)
                  goto LABEL_29;
                v12 = *(_QWORD *)(v23 + 8 * v13);
                ++v14;
                if (v12)
                  goto LABEL_23;
              }
            }
            v13 = v9 + 5;
          }
        }
      }
    }
LABEL_23:
    v26 = (v12 - 1) & v12;
    v27 = v13;
    v10 = __clz(__rbit64(v12)) + (v13 << 6);
LABEL_24:
    v15 = *(_QWORD *)(*(_QWORD *)(v25 + 56) + 8 * v10);
    v16 = *(_QWORD *)(v15 + 32);
    v17 = sub_1BA6B0504();
    v37 = v17;
    v28 = *(_QWORD *)(v16 + 112);
    v18 = sub_1BA79B898(v28);
    if (v18)
    {
      if (v18 >= 1)
      {
        v19 = v28;
        v34 = v18;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        v33 = v15;
        v31 = v16;
        v32 = v19 + 32;
        __asm { BR              X9 }
      }
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
      JUMPOUT(0x1BAB336A4);
    }
    swift_retain();
    swift_retain();
    if (sub_1BA79B890(v17))
    {
      swift_release();
      sub_1BA65D3A4(v17);
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v9 = v27;
    v8 = v26;
  }
LABEL_29:
  swift_release();
  v20 = v38;
  if (!sub_1BA79B890(v38))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v20;
}

uint64_t FormatStateViewNodeDataLayoutAttributes.issueCoverImageRequests(options:inventory:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t i;
  int64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v22 = MEMORY[0x1E0DEE9D8];
  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 + 64);
  v16 = v1 + 64;
  v3 = 1 << *(_BYTE *)(v1 + 32);
  v4 = -1;
  if (v3 < 64)
    v4 = ~(-1 << v3);
  v20 = v4 & v2;
  v17 = (unint64_t)(v3 + 63) >> 6;
  v18 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  v5 = 0;
  v6 = v20;
  if (!v20)
    goto LABEL_7;
LABEL_4:
  v7 = __clz(__rbit64(v6));
  v8 = (v6 - 1) & v6;
  for (i = v7 | (v5 << 6); ; i = __clz(__rbit64(v11)) + (v5 << 6))
  {
    v21 = v8;
    v13 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v18 + 56) + 8 * i) + 32) + 112);
    v19 = v5;
    if (*(_QWORD *)(v13 + 16))
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      __asm { BR              X9 }
    }
    swift_retain();
    swift_retain();
    v14 = MEMORY[0x1E0DEE9D8];
    if (*(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16))
    {
      swift_release();
      sub_1BA65D3A4(v14);
      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v5 = v19;
    v6 = v21;
    if (v21)
      goto LABEL_4;
LABEL_7:
    v10 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v10 >= v17)
      goto LABEL_27;
    v11 = *(_QWORD *)(v16 + 8 * v10);
    ++v5;
    if (!v11)
    {
      v5 = v10 + 1;
      if (v10 + 1 >= v17)
        goto LABEL_27;
      v11 = *(_QWORD *)(v16 + 8 * v5);
      if (!v11)
      {
        v5 = v10 + 2;
        if (v10 + 2 >= v17)
          goto LABEL_27;
        v11 = *(_QWORD *)(v16 + 8 * v5);
        if (!v11)
        {
          v5 = v10 + 3;
          if (v10 + 3 >= v17)
            goto LABEL_27;
          v11 = *(_QWORD *)(v16 + 8 * v5);
          if (!v11)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v11 - 1) & v11;
  }
  v12 = v10 + 4;
  if (v12 < v17)
  {
    v11 = *(_QWORD *)(v16 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        v5 = v12 + 1;
        if (__OFADD__(v12, 1))
          break;
        if (v5 >= v17)
          goto LABEL_27;
        v11 = *(_QWORD *)(v16 + 8 * v5);
        ++v12;
        if (v11)
          goto LABEL_22;
      }
LABEL_31:
      __break(1u);
      JUMPOUT(0x1BAB36224);
    }
    v5 = v12;
    goto LABEL_22;
  }
LABEL_27:
  swift_release();
  result = v22;
  if (!*(_QWORD *)(v22 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1BAB363E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVideoPlayerData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB3642C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatVideoPlayerData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatStateViewNodeDataLayoutAttributes()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatStateViewNodeDataLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatStateViewNodeDataLayoutAttributes.__allocating_init(layoutAttributes:stateLayoutAttributes:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t FormatVideoPlayerOverlayContent.logoContent.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

unint64_t FormatVideoPlayerOverlayContent.logoSize.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 8);
  *a1 = v2;
  return sub_1BA738D44(v2);
}

uint64_t FormatVideoPlayerOverlayContent.logoStyle.getter()
{
  return swift_retain();
}

uint64_t FormatVideoPlayerOverlayContent.logoResize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_retain();
}

uint64_t FormatVideoPlayerOverlayContent.showDuration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_BYTE *)(v1 + 48);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA69C808(v2, v3, v4);
}

uint64_t sub_1BAB364E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  __int128 *v8;
  uint64_t v9;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t result;
  uint64_t v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  double v34;
  double v35;
  void *v36;
  void *v37;
  id v38;
  void *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __n128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  char v50;
  _BYTE v51[8];
  _BYTE v52[8];
  __n128 v53;
  unint64_t v54[2];
  uint64_t v55;

  v44 = a4;
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v43 - v21;
  v23 = v8[1];
  v47 = *v8;
  v48 = v23;
  v49 = v8[2];
  v50 = *((_BYTE *)v8 + 48);
  v24 = a1;
  v25 = a3;
  result = sub_1BAB369D0(&v47, a5, a6, a7, a8, v24, a2, a3);
  if (v9)
    return result;
  v27 = v44;
  v43 = v46.n128_u64[0];
  sub_1BAB37458((_QWORD *)&v47 + 1, v54);
  sub_1BAB37458(v54, &v46);
  sub_1BAB37494(v54);
  v28 = sub_1BA7394E8();
  v29 = (uint64_t)v22;
  sub_1BAB374BC(v54);
  sub_1BA70DDB0(*(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_bindingStack), (uint64_t)v22);
  v30 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v22, 0, 1, v30);
  sub_1BAB374E4((uint64_t)v22, (uint64_t)v19);
  type metadata accessor for FeedHeadline(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v19, 1, v30) == 1)
  {
    sub_1BAB37538((uint64_t)v19);
  }
  else
  {
    v33 = (void *)*((_QWORD *)v19 + 5);
    swift_unknownObjectRetain();
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FeedHeadline);
    objc_msgSend(v33, sel_videoDuration);
    v35 = v34;
    swift_unknownObjectRelease();
    if (v35 <= 0.0)
    {
      v31 = 0;
      v32 = 0;
      v29 = (uint64_t)v22;
      goto LABEL_18;
    }
    if (v35 >= 60.0)
    {
      if (qword_1EF2A7040 != -1)
        swift_once();
      v37 = (void *)qword_1EF2B8280;
      objc_msgSend((id)qword_1EF2B8280, sel_setAllowedUnits_, 224);
      objc_msgSend(v37, sel_setZeroFormattingBehavior_, 1);
    }
    else
    {
      if (qword_1EF2A7040 != -1)
        swift_once();
      v36 = (void *)qword_1EF2B8280;
      objc_msgSend((id)qword_1EF2B8280, sel_setAllowedUnits_, 192);
      objc_msgSend(v36, sel_setZeroFormattingBehavior_, 8);
    }
    if (qword_1EF2A7040 != -1)
      swift_once();
    v38 = objc_msgSend((id)qword_1EF2B8280, sel_stringFromTimeInterval_, v35);
    v29 = (uint64_t)v22;
    if (v38)
    {
      v39 = v38;
      v31 = sub_1BB8729A0();
      v32 = v40;

      goto LABEL_18;
    }
  }
  v31 = 0;
  v32 = 0;
LABEL_18:
  sub_1BAB37584((__n128 *)&v49, &v53);
  sub_1BAB37584(&v53, &v46);
  sub_1BAB375C0((uint64_t)&v53);
  sub_1BB86DD80();
  v41 = FormatBoolean.value(contextLayoutOptions:)(v45);
  swift_release();
  sub_1BAB375F0((uint64_t)&v53);
  sub_1BAB37538(v29);
  sub_1BAB37620((uint64_t)&v48 + 8, (uint64_t)v51);
  sub_1BAB37620((uint64_t)v51, (uint64_t)&v55);
  if (v55)
  {
    v42 = *(_QWORD *)(v55 + 16);
    swift_retain();
  }
  else
  {
    v42 = 0;
  }
  sub_1BAB376B8((uint64_t)&v48, (uint64_t)v52);
  *(_QWORD *)v27 = v43;
  *(double *)(v27 + 8) = v28;
  sub_1BAB376B8((uint64_t)v52, v27 + 16);
  *(_QWORD *)(v27 + 24) = v42;
  *(_BYTE *)(v27 + 32) = v41 & 1;
  *(_QWORD *)(v27 + 40) = v31;
  *(_QWORD *)(v27 + 48) = v32;
  return sub_1BA761748((uint64_t)v52);
}

uint64_t sub_1BAB369D0(_QWORD *a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15;
  uint64_t v16;

  sub_1BAB3770C(a1, &v16);
  sub_1BAB3770C(&v16, &v15);
  sub_1BA744388((uint64_t)&v16);
  sub_1BB873CB4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BB872AFC("stateLayoutAttributes");
  sub_1BA67CC20();
  swift_bridgeObjectRelease();
  sub_1BA74435C((uint64_t)&v16);
  swift_bridgeObjectRetain();
  sub_1BAB36B30(a1, a8, a2, a3, a4, a5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB36B30(_QWORD *a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD v29[10];
  char v30;
  uint64_t v31;
  _BYTE v32[16];
  uint64_t v33;

  sub_1BAB376B8((uint64_t)(a1 + 2), (uint64_t)v32);
  sub_1BAB376B8((uint64_t)v32, (uint64_t)&v33);
  if (!v33 || (v11 = *(_QWORD *)(v33 + 240), v11 == 1))
  {
    v28 = a1;
    v26 = 0;
    v27 = 0;
    v24 = 0;
    v25 = 0;
    v22 = 0;
    v23 = 0;
    v12 = 0;
    v13 = 0;
    v14 = 0;
    v15 = 0;
    v16 = 0;
LABEL_4:
    swift_retain();
    sub_1BB86D774();
    v18 = v17;
    v19 = sub_1BB86D738();
    swift_release();
    type metadata accessor for FormatImageNodeContext();
    v20 = swift_allocObject();
    *(double *)(v20 + 16) = a5;
    *(double *)(v20 + 24) = a6;
    *(_QWORD *)(v20 + 32) = v18;
    *(_QWORD *)(v20 + 40) = v19;
    *(_QWORD *)(v20 + 48) = v27;
    *(_QWORD *)(v20 + 56) = v26;
    *(_QWORD *)(v20 + 64) = v25;
    *(_QWORD *)(v20 + 72) = v24;
    *(_QWORD *)(v20 + 80) = v23;
    *(_QWORD *)(v20 + 88) = v22;
    *(_QWORD *)(v20 + 96) = v12;
    *(_QWORD *)(v20 + 104) = v13;
    *(_QWORD *)(v20 + 112) = v14;
    *(_QWORD *)(v20 + 120) = v15;
    *(_BYTE *)(v20 + 128) = v16;
    sub_1BAB3770C(v28, &v31);
    sub_1BAB3770C(&v31, v29);
    sub_1BA744388((uint64_t)&v31);
    sub_1BA73B78C();
    sub_1BA74435C((uint64_t)&v31);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA52688C(a2, (uint64_t)v29, a5, a6);
  result = sub_1BA6E6D00(v11);
  if (!v6)
  {
    v28 = a1;
    v26 = v29[1];
    v27 = v29[0];
    v24 = v29[3];
    v25 = v29[2];
    v12 = v29[6];
    v22 = v29[5];
    v23 = v29[4];
    v13 = v29[7];
    v14 = v29[8];
    v15 = v29[9];
    v16 = v30;
    goto LABEL_4;
  }
  return result;
}

uint64_t sub_1BAB36D60(_QWORD *a1)
{
  return FormatVideoPlayerOverlayContent.encode(to:)(a1);
}

BOOL _s8NewsFeed31FormatVideoPlayerOverlayContentV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26[3];
  unint64_t v27[3];

  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_BYTE *)(a1 + 48);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v24 = *(_QWORD *)(a2 + 32);
  v25 = *(_QWORD *)(a2 + 40);
  v12 = *(_BYTE *)(a2 + 48);
  v27[0] = *(_QWORD *)a1;
  v26[0] = v8;
  static FormatAsyncImageContent.== infix(_:_:)((uint64_t)v27);
  if ((v13 & 1) == 0)
    return 0;
  v27[0] = v2;
  v26[0] = v9;
  if ((_s8NewsFeed25FormatPublisherLogoSizingO2eeoiySbAC_ACtFZ_0(v27, v26) & 1) == 0)
    return 0;
  if (v4)
  {
    if (!v10)
      return 0;
    type metadata accessor for FormatImageNodeStyle();
    swift_retain();
    v14 = swift_retain();
    v15 = static FormatImageNodeStyle.== infix(_:_:)(v14, v10);
    swift_release();
    swift_release();
    if ((v15 & 1) == 0)
      return 0;
  }
  else if (v10)
  {
    return 0;
  }
  if (v3)
  {
    if (!v11)
      return 0;
    v16 = *(_QWORD *)(v3 + 16);
    v17 = *(_QWORD *)(v11 + 16);
    swift_beginAccess();
    v18 = *(_QWORD *)(v16 + 16);
    swift_beginAccess();
    v19 = *(_QWORD *)(v17 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = sub_1BA8583F8(v18, v19);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
      return 0;
  }
  else if (v11)
  {
    return 0;
  }
  if ((v7 & 1) == 0)
  {
    if ((v12 & 1) != 0)
    {
LABEL_22:
      sub_1BA69C808(v24, v25, v12);
      sub_1BA69C828(v6, v5, v7);
      sub_1BA69C828(v24, v25, v12);
      sub_1BA69C828(v6, v5, v7);
      return 0;
    }
    sub_1BA69C828(v6, v5, 0);
    sub_1BA69C828(v24, v25, 0);
    return ((((v6 & 1) == 0) ^ v24) & 1) != 0;
  }
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    goto LABEL_22;
  }
  if (v6 != v24 || v5 != v25)
  {
    v22 = sub_1BB874398();
    v20 = 1;
    sub_1BA69C808(v24, v25, 1);
    sub_1BA69C808(v6, v5, 1);
    sub_1BA69C828(v6, v5, 1);
    sub_1BA69C828(v24, v25, 1);
    if ((v22 & 1) != 0)
      return v20;
    return 0;
  }
  v20 = 1;
  sub_1BA69C808(v6, v5, 1);
  sub_1BA69C808(v6, v5, 1);
  sub_1BA69C828(v6, v5, 1);
  sub_1BA69C828(v6, v5, 1);
  return v20;
}

unint64_t sub_1BAB37084(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB370A8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB370A8()
{
  unint64_t result;

  result = qword_1EF2B0760;
  if (!qword_1EF2B0760)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerOverlayContent, &type metadata for FormatVideoPlayerOverlayContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B0760);
  }
  return result;
}

unint64_t sub_1BAB370EC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA821624();
  a1[2] = sub_1BAB37120();
  result = sub_1BAB37164();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB37120()
{
  unint64_t result;

  result = qword_1ED3A9160;
  if (!qword_1ED3A9160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerOverlayContent, &type metadata for FormatVideoPlayerOverlayContent);
    atomic_store(result, (unint64_t *)&qword_1ED3A9160);
  }
  return result;
}

unint64_t sub_1BAB37164()
{
  unint64_t result;

  result = qword_1EF2B0768;
  if (!qword_1EF2B0768)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatVideoPlayerOverlayContent, &type metadata for FormatVideoPlayerOverlayContent);
    atomic_store(result, (unint64_t *)&qword_1EF2B0768);
  }
  return result;
}

uint64_t destroy for FormatVideoPlayerOverlayContent(uint64_t a1)
{
  swift_release();
  if (*(_QWORD *)(a1 + 8) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return sub_1BA69C828(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for FormatVideoPlayerOverlayContent(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  if (v4 >= 3)
    swift_bridgeObjectRetain();
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_retain();
  swift_retain();
  sub_1BA69C808(v7, v8, v9);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerOverlayContent(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = (unint64_t *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >= 3uLL)
  {
    if (v5 >= 3)
    {
      *v4 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80(a1 + 8, (uint64_t (*)(_QWORD))sub_1BA84D8E4);
      *v4 = *(_QWORD *)(a2 + 8);
    }
  }
  else
  {
    *v4 = v5;
    if (v5 >= 3)
      swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(_BYTE *)(a2 + 48);
  sub_1BA69C808(v6, v7, v8);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_BYTE *)(a1 + 48);
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = v8;
  sub_1BA69C828(v9, v10, v11);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerOverlayContent(uint64_t a1, uint64_t a2)
{
  unint64_t *v4;
  unint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = (unint64_t *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >= 3uLL)
  {
    if (v5 >= 3)
    {
      *v4 = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BA4A2E80(a1 + 8, (uint64_t (*)(_QWORD))sub_1BA84D8E4);
  }
  *v4 = v5;
LABEL_6:
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_release();
  v6 = *(_BYTE *)(a2 + 48);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_BYTE *)(a1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = v6;
  sub_1BA69C828(v7, v8, v9);
  return a1;
}

ValueMetadata *type metadata accessor for FormatVideoPlayerOverlayContent()
{
  return &type metadata for FormatVideoPlayerOverlayContent;
}

_QWORD *sub_1BAB37458(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

unint64_t *sub_1BAB37494(unint64_t *a1)
{
  sub_1BA738D44(*a1);
  return a1;
}

unint64_t *sub_1BAB374BC(unint64_t *a1)
{
  sub_1BA738D54(*a1);
  return a1;
}

uint64_t sub_1BAB374E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB37538(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

__n128 *sub_1BAB37584(__n128 *a1, __n128 *a2)
{
  __swift_memcpy17_8(a2, a1);
  return a2;
}

uint64_t sub_1BAB375C0(uint64_t a1)
{
  sub_1BA69C808(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1BAB375F0(uint64_t a1)
{
  sub_1BA69C828(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return a1;
}

uint64_t sub_1BAB37620(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB37664();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1BAB37664()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B0770)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B0770);
  }
}

uint64_t sub_1BAB376B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4A3FB4(0, &qword_1EF2B0778, (void (*)(uint64_t))type metadata accessor for FormatImageNodeStyle);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

_QWORD *sub_1BAB3770C(_QWORD *a1, _QWORD *a2)
{
  __swift_memcpy8_8(a2, a1);
  return a2;
}

uint64_t FormatLayoutViewRenderer.presentingViewController.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

void FormatLayoutViewRenderer.presentingViewController.setter(void *a1)
{
  sub_1BA4B8EF0();

}

void (*FormatLayoutViewRenderer.presentingViewController.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = MEMORY[0x1BCCE5D40](v1 + 16);
  return sub_1BAB37814;
}

void sub_1BAB37814(uint64_t *a1, char a2)
{
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;

  v3 = *a1;
  v4 = *(void **)(*a1 + 24);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 32) + 16;
    swift_endAccess();

    v6 = (void *)MEMORY[0x1BCCE5D40](v5);
    v7 = swift_unknownObjectWeakAssign();
    v8 = (void *)MEMORY[0x1BCCE5D40](v7);
    swift_beginAccess();
    swift_unknownObjectWeakAssign();

  }
  free((void *)v3);
}

uint64_t FormatLayoutViewRenderer.analyticsDataProvider.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 24);
}

uint64_t sub_1BAB3791C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 32) = v2;
  v4 = swift_unknownObjectWeakAssign();
  v5 = *(_QWORD *)(*(_QWORD *)(v3 + 184) + 56);
  MEMORY[0x1BCCE5D40](v4);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v3 + 32);
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

uint64_t FormatLayoutViewRenderer.analyticsDataProvider.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a2;
  v4 = swift_unknownObjectWeakAssign();
  v5 = *(_QWORD *)(*(_QWORD *)(v2 + 184) + 56);
  MEMORY[0x1BCCE5D40](v4);
  *(_QWORD *)(v5 + 24) = *(_QWORD *)(v2 + 32);
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRelease();
  return swift_unknownObjectRelease();
}

void (*FormatLayoutViewRenderer.analyticsDataProvider.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BAB37AA0;
}

void sub_1BAB37AA0(uint64_t a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)a1;
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)a1 + 40) + 32) = *(_QWORD *)(*(_QWORD *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    v4 = v3[5];
    swift_endAccess();
    swift_unknownObjectRelease();
    v5 = *(_QWORD *)(*(_QWORD *)(v4 + 184) + 56);
    MEMORY[0x1BCCE5D40](v4 + 24);
    *(_QWORD *)(v5 + 24) = *(_QWORD *)(v4 + 32);
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRelease();
  }
  free(v3);
}

uint64_t FormatLayoutViewRenderer.debugger.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t FormatLayoutViewRenderer.debugger.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t (*FormatLayoutViewRenderer.debugger.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(uint64_t a1, double *a2, char *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  CGFloat v37;
  CGFloat v38;
  CGFloat v39;
  CGFloat v40;
  uint64_t v41;
  int v42;
  void (*v43)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66[4];

  v11 = v10;
  v58 = a8;
  v59 = a7;
  v62 = a6;
  v56 = a1;
  v57 = a4;
  v64 = a10;
  v60 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](a1);
  v61 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C28E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v52 - v18;
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, v16);
  v53 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v54 = v21;
  v55 = (uint64_t)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v63 = (uint64_t)&v52 - v23;
  v24 = *a5;
  v25 = a5[1];
  v26 = a5[2];
  type metadata accessor for FormatAccessibilityRenderer();
  v28 = v11[34];
  v27 = v11[35];
  LOBYTE(v66[0]) = 7;
  v29 = sub_1BB1FAC3C((uint64_t)a3, (uint64_t)&off_1E73348A0, a2, v28, v27, (unsigned __int8 *)v66);
  v66[0] = v24;
  v66[1] = v25;
  v66[2] = v26;
  swift_unknownObjectRetain();
  v30 = v56;
  v31 = v62;
  v62 = v29;
  sub_1BAB380E0(v56, a2, a3, v57, v66, v31, v29, v59, v58, a9, v64);
  swift_beginAccess();
  v32 = (void *)MEMORY[0x1BCCE5D40](v11 + 2);
  if (v32)
  {
    v33 = v32;
    if (v25)
      sub_1BAB429B0(v24, v25, v26, a3, v32, v11[42]);

  }
  v34 = v11[33];
  v35 = v30;
  v36 = (*(uint64_t (**)(uint64_t))(v64 + 8))(a9);
  v37 = a2[2];
  v38 = a2[3];
  v39 = a2[4];
  v40 = a2[5];
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v61, v35, a9);
  v41 = type metadata accessor for FormatItemNodeLayoutContext();
  v42 = swift_dynamicCast();
  v43 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  if (v42)
  {
    v43(v19, 0, 1, v41);
    v44 = v63;
    sub_1BA4C2DD8((uint64_t)&v19[*(int *)(v41 + 28)], v63, type metadata accessor for FeedItem);
    sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
    v45 = type metadata accessor for FeedItem(0);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  }
  else
  {
    v43(v19, 1, 1, v41);
    sub_1BA5C699C((uint64_t)v19, &qword_1ED3C28E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutContext);
    v46 = type metadata accessor for FeedItem(0);
    v44 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 56))(v63, 1, 1, v46);
  }
  if (*(_BYTE *)(v34 + 72) == 1)
  {
    sub_1BB86DD80();
    v47 = v65;
    v48 = v55;
    sub_1BAB42DE4(v44, v55);
    v49 = (*(unsigned __int8 *)(v53 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    v50 = swift_allocObject();
    sub_1BA646EFC(v48, v50 + v49, &qword_1ED3B2A50, type metadata accessor for FeedItem);
    sub_1BB7DA938(v47, v36, (void (*)(void))sub_1BAB43938, v50, v37, v38, v39, v40);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1BB86DD68();
    v47 = v65;
    if (!v65)
    {
      swift_release();
      swift_release();
      return sub_1BA5C699C(v44, &qword_1ED3B2A50, type metadata accessor for FeedItem);
    }
    objc_msgSend(v65, sel_setHidden_, 1);
    swift_release();
  }
  swift_release();

  return sub_1BA5C699C(v44, &qword_1ED3B2A50, type metadata accessor for FeedItem);
}

uint64_t FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:actionSenderHandler:)(uint64_t a1, double *a2, char *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;

  v10 = *((_QWORD *)a5 + 2);
  v12 = *a5;
  v13 = v10;
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(a1, a2, a3, a4, (uint64_t *)&v12, *(_QWORD *)(v9 + 320), a6, a7, a8, a9);
}

void sub_1BAB380E0(uint64_t a1, _QWORD *a2, char *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  void *v85;
  void *v86;
  void *v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t i;
  uint64_t v92;
  void *v93;
  _QWORD v94[16];
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t *v98;
  uint64_t *v99;
  uint64_t *v100;
  uint64_t *v101;
  uint64_t *v102;
  uint64_t *v103;
  _QWORD *v104;
  char *v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  uint64_t v121;
  char *v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  char *v141;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD v159[38];
  void *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;

  v12 = v11;
  v151 = a8;
  v121 = a7;
  v152 = a6;
  v153 = a4;
  v154 = a1;
  v156 = a11;
  v136 = *a2;
  v16 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C28E0, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v113 = (char *)v94 - v18;
  v112 = type metadata accessor for FormatItemNodeData();
  v94[4] = *(_QWORD *)(v112 - 8);
  MEMORY[0x1E0C80A78](v112);
  v94[15] = (char *)v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v158 = v19;
  MEMORY[0x1E0C80A78](v20);
  v128 = (char *)v94 - v21;
  v22 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v22);
  v123 = (char *)v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = type metadata accessor for FormatSponsoredBannerData();
  MEMORY[0x1E0C80A78](v24);
  v111 = (char *)v94 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for FormatShareAttributionData();
  MEMORY[0x1E0C80A78](v26);
  v126 = (char *)v94 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = type metadata accessor for FormatVideoData(0);
  MEMORY[0x1E0C80A78](v28);
  v124 = (char *)v94 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for FormatMicaData();
  MEMORY[0x1E0C80A78](v30);
  v141 = (char *)v94 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = type metadata accessor for FormatAdMetricsData();
  MEMORY[0x1E0C80A78](v32);
  v120 = (char *)v94 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, v16);
  v94[3] = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v94[14] = (char *)v94 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v36);
  v94[12] = (char *)v94 - v37;
  MEMORY[0x1E0C80A78](v38);
  v110 = (char *)v94 - v39;
  v94[2] = v40;
  MEMORY[0x1E0C80A78](v41);
  v109 = (char *)v94 - v42;
  v127 = type metadata accessor for FeedItem(0);
  v125 = *(_QWORD *)(v127 - 8);
  v43 = *(_QWORD *)(v125 + 64);
  MEMORY[0x1E0C80A78](v127);
  v118 = (char *)v94 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v116 = (char *)v94 - v45;
  MEMORY[0x1E0C80A78](v46);
  v97 = (char *)v94 - v47;
  sub_1BA4B07F0(0, &qword_1ED3CB700, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataAction, v16);
  MEMORY[0x1E0C80A78](v48);
  v96 = (char *)v94 - v49;
  v95 = type metadata accessor for FormatButtonNodeData();
  MEMORY[0x1E0C80A78](v95);
  v122 = (char *)v94 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  v137 = *(_QWORD *)(a10 - 8);
  MEMORY[0x1E0C80A78](v51);
  v94[13] = (char *)v94 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v53);
  v94[1] = (char *)v94 - v54;
  MEMORY[0x1E0C80A78](v55);
  v108 = (char *)v94 - v56;
  MEMORY[0x1E0C80A78](v57);
  v131 = (char *)v94 - v58;
  MEMORY[0x1E0C80A78](v59);
  v107 = (char *)v94 - v60;
  MEMORY[0x1E0C80A78](v61);
  v106 = (char *)v94 - v62;
  v129 = v63;
  MEMORY[0x1E0C80A78](v64);
  v105 = (char *)v94 - v65;
  v66 = type metadata accessor for FormatViewData(0);
  MEMORY[0x1E0C80A78](v66);
  v119 = (char *)v94 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v148 = *a5;
  v149 = a5[1];
  v147 = a5[2];
  v69 = a2[6];
  v68 = a2[7];
  v70 = &a3[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_identifier];
  swift_beginAccess();
  *(_QWORD *)v70 = v69;
  *((_QWORD *)v70 + 1) = v68;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v160 = 0;
  v71 = objc_opt_self();
  v72 = (_QWORD *)swift_allocObject();
  v155 = a10;
  v73 = v156;
  v72[2] = a10;
  v72[3] = v73;
  v72[4] = &v160;
  v72[5] = a3;
  v72[6] = a2;
  v72[7] = v11;
  v74 = swift_allocObject();
  *(_QWORD *)(v74 + 16) = sub_1BAB44A50;
  *(_QWORD *)(v74 + 24) = v72;
  v104 = v72;
  v159[4] = sub_1BA4D7948;
  v159[5] = v74;
  v159[0] = MEMORY[0x1E0C809B0];
  v159[1] = 1107296256;
  v159[2] = sub_1BA4D7928;
  v159[3] = &block_descriptor_24;
  v75 = _Block_copy(v159);
  v76 = a3;
  swift_retain();
  v157 = v12;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend((id)v71, sel_performWithoutAnimation_, v75);
  _Block_release(v75);
  LOBYTE(v71) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((v71 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v77 = v121;
    *(_QWORD *)&v76[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_accessibilityRenderer] = v121;
    swift_release();
    type metadata accessor for FormatVisibilityData();
    v78 = swift_allocObject();
    v139 = v78;
    *(_QWORD *)(v78 + 16) = MEMORY[0x1E0DEE9E0];
    v134 = v78 + 16;
    v79 = a2[14];
    v80 = v77;
    v81 = v76;
    if (*(_QWORD *)(v79 + 16))
    {
      v150 = a9;
      v130 = v80 + 40;
      v117 = (char *)a2 + *(_QWORD *)(*a2 + 176);
      v82 = v157 + 16;
      v132 = &v81[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
      v135 = &v81[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_layoutObservers];
      v144 = v81;
      v146 = &v81[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_scrollObservers];
      v114 = v80 + 32;
      v140 = (_QWORD *)(v79 + 32);
      swift_retain();
      v143 = v79;
      swift_bridgeObjectRetain();
      v138 = v82;
      swift_beginAccess();
      swift_beginAccess();
      v115 = v43 + 7;
      v94[0] = v158 + 7;
      v133 = v129 + 7;
      v102 = &v170;
      v101 = &v168;
      v94[7] = &v169;
      v94[8] = &v171;
      v103 = &v166;
      v94[11] = &v167;
      v99 = &v162;
      v100 = &v161;
      v98 = &v164;
      v94[5] = &v165;
      v94[6] = &v163;
      v94[10] = MEMORY[0x1E0DEE9C0] + 8;
      v94[9] = MEMORY[0x1E0DEE9B8] + 8;
      if (*(_QWORD *)(v143 + 16))
      {
        v83 = (char *)&loc_1BAB38A10 + dword_1BAB3F474[(*v140 >> 59) & 0x1E | (*v140 >> 2) & 1];
        v145 = 1;
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x1BAB3F2FCLL);
    }
    swift_retain();
    v84 = v157 + 16;
    swift_beginAccess();
    v85 = (void *)MEMORY[0x1BCCE5D40](v84);
    if (v85)
    {
      v86 = v85;
      if (v149)
        sub_1BAB429B0(v148, v149, v147, v81, v85, *(_QWORD *)(v157 + 336));

    }
    sub_1BA6762E0(v139);
    v76 = &v81[OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewAnimations];
    swift_beginAccess();
    if (!(*(_QWORD *)v76 >> 62))
    {
      if (!*(_QWORD *)((*(_QWORD *)v76 & 0xFFFFFFFFFFFFF8) + 0x10))
        goto LABEL_28;
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  v92 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v92)
    goto LABEL_28;
LABEL_13:
  if (!UIAccessibilityIsReduceMotionEnabled())
  {
    v87 = (void *)objc_opt_self();
    objc_msgSend(v87, sel_begin);
    v88 = *(_QWORD *)v76;
    if (*(_QWORD *)v76 >> 62)
    {
      swift_bridgeObjectRetain();
      v89 = sub_1BB873F30();
      if (v89)
        goto LABEL_16;
    }
    else
    {
      v89 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v89)
      {
LABEL_16:
        if (v89 < 1)
        {
          __break(1u);
          JUMPOUT(0x1BAB3F3C8);
        }
        v90 = sub_1BB6C683C(v88);
        for (i = 0; i != v89; ++i)
        {
          if (v90)
            swift_retain();
          else
            MEMORY[0x1BCCE4630](i, v88);
          sub_1BB842BCC();
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease();
    objc_msgSend(v87, sel_commit);
  }
LABEL_28:
  swift_release();
  v93 = v160;
  swift_release();

}

unint64_t FormatLayoutViewRenderer.renderAction<A>(context:itemData:contextLayoutOptions:view:sourceItemData:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  void *v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  void *v30;
  void *v31;
  id v32;
  void *v35;

  MEMORY[0x1E0C80A78](a1);
  v13 = type metadata accessor for FormatItemNodeData();
  MEMORY[0x1E0C80A78](v13);
  v15 = *(_QWORD *)(a2 + *(int *)(v14 + 24));
  if (v15 >> 62)
  {
    if (v15 >> 62 != 1)
      __asm { BR              X10 }
    v16 = swift_allocObject();
    *(_QWORD *)(v16 + 16) = a6;
    *(_QWORD *)(v16 + 24) = a7;
    *(_BYTE *)(v16 + 32) = v15;
    swift_retain();
    swift_retain();
    sub_1BB86DD80();
    v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18 = (_QWORD *)swift_allocObject();
    v18[2] = v17;
    v18[3] = sub_1BAB48394;
    v18[4] = v16;
    swift_retain();
    v19 = (void *)sub_1BB871338();

    swift_release();
    v20 = *(void **)(a4 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture);
    if (v20)
    {
      v21 = v20;
      objc_msgSend(v21, sel_setEnabled_, 1, a1, a9);

    }
    return swift_release_n();
  }
  else
  {
    v24 = a5[1];
    v23 = a5[2];
    v25 = *a5;
    v26 = swift_allocObject();
    swift_weakInit();
    v27 = (_QWORD *)swift_allocObject();
    v27[2] = v26;
    v27[3] = v25;
    v27[4] = v24;
    v27[5] = v23;
    v27[6] = v15;
    sub_1BA728598(v15);
    sub_1BA728598(v15);
    swift_retain();
    swift_retain();
    sub_1BA8E9488(v25, v24);
    sub_1BB86DD80();
    v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v29 = (_QWORD *)swift_allocObject();
    v29[2] = v28;
    v29[3] = sub_1BAB4469C;
    v29[4] = v27;
    swift_retain();
    v30 = (void *)sub_1BB871338();

    swift_release();
    v31 = *(void **)(a4 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture);
    if (v31)
    {
      v32 = v31;
      objc_msgSend(v32, sel_setEnabled_, 1, a1, a9);
      swift_release();

    }
    else
    {
      swift_release();
    }
    swift_release_n();
    return sub_1BA7280A0(v15);
  }
}

void sub_1BAB3F888()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  _QWORD *v17;
  void *v18;
  void *v19;
  id v20;

  v6 = swift_allocObject();
  swift_weakInit();
  sub_1BA4C2DD8(v4, v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
  v8 = *(_QWORD *)(v5 - 128);
  v7 = *(_QWORD *)(v5 - 120);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v8 + 16))(v2, *(_QWORD *)(v5 - 144), v7);
  v9 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v10 = (v0 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v11 = (*(unsigned __int8 *)(v8 + 80) + v10 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v12 = (char *)swift_allocObject();
  v13 = *(_QWORD *)(v5 - 136);
  *((_QWORD *)v12 + 2) = v7;
  *((_QWORD *)v12 + 3) = v13;
  *((_QWORD *)v12 + 4) = v6;
  sub_1BA5193C4(v3, (uint64_t)&v12[v9], (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeData);
  *(_QWORD *)&v12[v10] = *(_QWORD *)(v5 - 112);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(&v12[v11], v2, v7);
  v14 = *(_QWORD *)(v5 - 96);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB86DD80();
  v15 = *(void **)(v5 - 88);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = (_QWORD *)swift_allocObject();
  v17[2] = v16;
  v17[3] = sub_1BAB445D0;
  v17[4] = v12;
  swift_retain();
  v18 = (void *)sub_1BB871338();

  swift_release();
  v19 = *(void **)(v14 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_tapGesture);
  if (v19)
  {
    v20 = v19;
    objc_msgSend(v20, sel_setEnabled_, 1);
    swift_release();

  }
  else
  {
    swift_release();
  }
  JUMPOUT(0x1BAB3F694);
}

uint64_t sub_1BAB3FB78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t result;
  _QWORD *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  char v26;

  v9 = sub_1BB8709F0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v14 = (_QWORD *)result;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0DB9EF8], v9);
    if (a4)
    {
      v15 = v14[36];
      v22 = sub_1BB86DC0C();
      v23 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
      v21 = v15;
      v24 = 0u;
      v25 = 0u;
      v26 = 1;
      sub_1BB87069C();
      swift_allocObject();
      v16 = a1;
      swift_bridgeObjectRetain();
      swift_retain();
      v17 = sub_1BB870654();
    }
    else
    {
      v18 = v14[36];
      v22 = sub_1BB86DC0C();
      v23 = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
      v21 = v18;
      v24 = 0u;
      v25 = 0u;
      v26 = 1;
      sub_1BB87069C();
      swift_allocObject();
      swift_retain();
      v19 = a1;
      v17 = sub_1BB870684();
    }
    (*(void (**)(_QWORD, _QWORD, uint64_t))(a6 + 56))(v14[34], v14[35], v17);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1BAB3FDB8(uint64_t a1)
{
  sub_1BAB3FDD0(a1, (void (*)(uint64_t))sub_1BB2826C0);
}

void sub_1BAB3FDC4(uint64_t a1)
{
  sub_1BAB3FDD0(a1, (void (*)(uint64_t))sub_1BB282BF0);
}

void sub_1BAB3FDD0(uint64_t a1, void (*a2)(uint64_t))
{
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;

  v3 = (unint64_t *)(a1 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewControllers);
  swift_beginAccess();
  v4 = *v3;
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
LABEL_10:
    swift_bridgeObjectRelease();
    return;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  v5 = sub_1BB873F30();
  if (!v5)
    goto LABEL_10;
LABEL_3:
  v6 = 4;
  while (1)
  {
    if ((v4 & 0xC000000000000001) != 0)
      v7 = (id)MEMORY[0x1BCCE4630](v6 - 4, v4);
    else
      v7 = *(id *)(v4 + 8 * v6);
    v8 = v7;
    v9 = v6 - 3;
    if (__OFADD__(v6 - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    type metadata accessor for FormatVideoPlayerViewController();
    v10 = swift_dynamicCastClass();
    if (v10)
      break;

    ++v6;
    if (v9 == v5)
      goto LABEL_10;
  }
  v11 = v10;
  v12 = v8;
  swift_bridgeObjectRelease();
  if (MEMORY[0x1BCCE5D40](v11 + OBJC_IVAR____TtC8NewsFeed31FormatVideoPlayerViewController_delegate))
  {
    a2(v11);

    swift_unknownObjectRelease();
  }
  else
  {

  }
}

uint64_t sub_1BAB3FF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21[2];
  _QWORD v22[2];

  v12 = type metadata accessor for FormatLayoutViewRoute();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v20 = a1;
    sub_1BA4C2DD8(a3, (uint64_t)v14, type metadata accessor for FeedItem);
    swift_storeEnumTagMultiPayload();
    v16 = *(_QWORD *)(*(_QWORD *)(a4 + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v16 + 16) + 16))
    {
      v22[0] = *(_QWORD *)(a4 + 56);
      v17 = swift_bridgeObjectRetain();
      v18 = sub_1BA6E42A0(v17);
      sub_1BA6E3FB8(v18);
      v19 = v22[0];
    }
    else
    {
      v19 = sub_1BA6E3F38();
    }
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a7 + 24))(v22, a6, a7);
    v21[0] = v22[0];
    v21[1] = v22[1];
    sub_1BB3A2F94((uint64_t)v14, v20, v19, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutViewRoute);
    return swift_release();
  }
  return result;
}

uint64_t FormatLayoutViewRenderer.prepareForReuse<A, B>(context:layoutAttributes:view:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v12[21];

  v12[20] = a5;
  v12[18] = a1;
  v12[19] = a4;
  v12[13] = a3;
  v6 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v6);
  v12[9] = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = *(_QWORD *)(a2 + 112);
  v9 = *(_QWORD *)(result + 16);
  if (v9)
  {
    v10 = result + 32;
    v11 = swift_bridgeObjectRetain();
    v12[11] = v9;
    v12[12] = v11;
    v12[10] = v10;
    if (*(_QWORD *)(v11 + 16))
      __asm { BR              X10 }
    __break(1u);
    JUMPOUT(0x1BAB40B68);
  }
  return result;
}

uint64_t sub_1BAB40C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t result;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;

  v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed16FormatLayoutView_viewContainers);
  swift_beginAccess();
  v8 = *v7;
  if (!*(_QWORD *)(*v7 + 16))
    goto LABEL_23;
  swift_bridgeObjectRetain();
  v9 = sub_1BA6E35A8(a1, a2);
  if ((v10 & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
LABEL_23:
    swift_endAccess();
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB872AFC((_QWORD *)0xD000000000000020);
    sub_1BB872AFC(v24);
    type metadata accessor for FormatLayoutViewContainer();
    swift_bridgeObjectRetain();
    sub_1BB8727D8();
    sub_1BB872AFC(v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = sub_1BB873EAC();
    __break(1u);
    return result;
  }
  v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  swift_endAccess();
  swift_retain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(v11 + 56);
  swift_retain();
  sub_1BA799868(v12);
  v14 = v13;
  swift_release();
  v15 = *(void **)(v11 + 64);
  objc_msgSend(v15, sel_setAutoresizingMask_, 0);
  if (a3)
  {
    swift_retain();
    objc_msgSend(v15, sel_setAutoresizingMask_, sub_1BB275944());
    swift_release();
  }
  v16 = *(_QWORD *)(v11 + 72);
  v26 = v14;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    v17 = sub_1BB873F30();
    if (v17)
      goto LABEL_7;
  }
  else
  {
    v17 = *(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
    {
LABEL_7:
      if (v17 >= 1)
      {
        v18 = 0;
        while (1)
        {
          if ((v16 & 0xC000000000000001) != 0)
          {
            v19 = (id)MEMORY[0x1BCCE4630](v18, v16);
            if (a3)
              goto LABEL_15;
          }
          else
          {
            v19 = *(id *)(v16 + 8 * v18 + 32);
            if (a3)
            {
LABEL_15:
              swift_retain();
              v20 = sub_1BA863F8C((uint64_t)&unk_1E7268FB0);
              type metadata accessor for FormatResizeAuto();
              v21 = swift_allocObject();
              swift_beginAccess();
              *(_QWORD *)(v21 + 16) = v20;
              swift_release();
              objc_msgSend(v19, sel_setAutoresizingMask_, 0);
              swift_retain();
              objc_msgSend(v19, sel_setAutoresizingMask_, sub_1BB275944());

              swift_release_n();
              goto LABEL_10;
            }
          }
          objc_msgSend(v19, sel_setAutoresizingMask_, 0);

LABEL_10:
          if (v17 == ++v18)
            goto LABEL_17;
        }
      }
      __break(1u);
      goto LABEL_22;
    }
  }
LABEL_17:
  swift_bridgeObjectRelease();
  if (((*(_QWORD *)(v11 + 56) >> 59) & 0x1E | (*(_QWORD *)(v11 + 56) >> 2) & 1) == 6)
  {
    v22 = *(void **)(v11 + 64);
    swift_bridgeObjectRetain();
    v22;
  }
  else
  {
    *(id *)(v11 + 64);
    sub_1BA67604C(MEMORY[0x1E0DEE9D8]);
  }
  swift_release();
  return v26;
}

uint64_t sub_1BAB40FFC(uint64_t a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  unsigned __int8 v20;

  v3 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 112);
    v7 = *(_QWORD *)(v4 + 120);
    v6 = *(_QWORD *)(v4 + 128);
    v8 = *(_QWORD *)(v4 + 136);
    v9 = *(_QWORD *)(v4 + 144);
    v15 = *(_QWORD *)(v4 + 176);
    v16 = *(_QWORD *)(v4 + 168);
    v17 = *(_QWORD *)(v4 + 160);
    v18 = *(_QWORD *)(v4 + 104);
    v11 = *(_QWORD *)(v4 + 152);
    sub_1BA6E8A48(v18, v5, v7, v6, v8, v9, v11, v17, v16, v15, *(_BYTE *)(v4 + 184));
    v3 = a3;
    v12 = v6;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v12 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v14 = -2;
  }
  v19[0] = v18;
  v19[1] = v5;
  v19[2] = v7;
  v19[3] = v12;
  v19[4] = v8;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = v17;
  v19[8] = v16;
  v19[9] = v15;
  v20 = v14;
  sub_1BB103A9C((uint64_t)v19, v3);
  return sub_1BA6E8A78(v18, v5, v7, v12, v8, v9, v11, v17, v16, v15, v14);
}

uint64_t sub_1BAB41134(uint64_t a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  unsigned __int8 v20;

  v3 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 208);
    v7 = *(_QWORD *)(v4 + 216);
    v6 = *(_QWORD *)(v4 + 224);
    v8 = *(_QWORD *)(v4 + 232);
    v9 = *(_QWORD *)(v4 + 240);
    v15 = *(_QWORD *)(v4 + 272);
    v16 = *(_QWORD *)(v4 + 264);
    v17 = *(_QWORD *)(v4 + 256);
    v18 = *(_QWORD *)(v4 + 200);
    v11 = *(_QWORD *)(v4 + 248);
    sub_1BA6E8A48(v18, v5, v7, v6, v8, v9, v11, v17, v16, v15, *(_BYTE *)(v4 + 280));
    v3 = a3;
    v12 = v6;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v12 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v14 = -2;
  }
  v19[0] = v18;
  v19[1] = v5;
  v19[2] = v7;
  v19[3] = v12;
  v19[4] = v8;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = v17;
  v19[8] = v16;
  v19[9] = v15;
  v20 = v14;
  sub_1BB103A9C((uint64_t)v19, v3);
  return sub_1BA6E8A78(v18, v5, v7, v12, v8, v9, v11, v17, v16, v15, v14);
}

uint64_t sub_1BAB4126C(uint64_t a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  unsigned __int8 v20;

  v3 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 96);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 144);
    v7 = *(_QWORD *)(v4 + 152);
    v6 = *(_QWORD *)(v4 + 160);
    v8 = *(_QWORD *)(v4 + 168);
    v9 = *(_QWORD *)(v4 + 176);
    v15 = *(_QWORD *)(v4 + 208);
    v16 = *(_QWORD *)(v4 + 200);
    v17 = *(_QWORD *)(v4 + 192);
    v18 = *(_QWORD *)(v4 + 136);
    v11 = *(_QWORD *)(v4 + 184);
    sub_1BA6E8A48(v18, v5, v7, v6, v8, v9, v11, v17, v16, v15, *(_BYTE *)(v4 + 216));
    v3 = a3;
    v12 = v6;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v12 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v14 = -2;
  }
  v19[0] = v18;
  v19[1] = v5;
  v19[2] = v7;
  v19[3] = v12;
  v19[4] = v8;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = v17;
  v19[8] = v16;
  v19[9] = v15;
  v20 = v14;
  sub_1BB103A9C((uint64_t)v19, v3);
  return sub_1BA6E8A78(v18, v5, v7, v12, v8, v9, v11, v17, v16, v15, v14);
}

uint64_t sub_1BAB413A4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *), uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t result;
  uint64_t v22;
  void *v23;
  id v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[2];
  uint64_t v28;

  v27[1] = a3;
  v28 = a7;
  v11 = type metadata accessor for FeedActionSender();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FeedAction(0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for FeedActionInternal(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a1, (uint64_t)v19, v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1BA5193C4((uint64_t)v19, (uint64_t)v16, type metadata accessor for FeedAction);
    sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v13, type metadata accessor for FeedAction);
    v23 = *(void **)(a1 + *(int *)(type metadata accessor for FeedActionSenderInternal(0) + 20));
    *(_QWORD *)&v13[*(int *)(v11 + 20)] = v23;
    v24 = v23;
    a4(v13);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FeedActionSender);
    return sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FeedAction);
  }
  if (*v19)
  {
    if (*v19 == 1)
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (!result)
        return result;
      swift_retain();
      swift_release();
      v22 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(v28, a8);
      sub_1BB7D9B9C(v22);
    }
    else
    {
      swift_beginAccess();
      result = swift_weakLoadStrong();
      if (!result)
        return result;
      swift_retain();
      swift_release();
      v26 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(v28, a8);
      sub_1BB7D9BB8(v26);
    }
  }
  else
  {
    swift_beginAccess();
    result = swift_weakLoadStrong();
    if (!result)
      return result;
    swift_retain();
    swift_release();
    v25 = (*(uint64_t (**)(uint64_t, uint64_t))(a8 + 8))(v28, a8);
    sub_1BB7D9B80(v25);
  }
  swift_release();
  return swift_release();
}

uint64_t sub_1BAB41658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  uint64_t v14;
  _QWORD v15[9];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    v14 = swift_release();
    MEMORY[0x1E0C80A78](v14);
    v15[2] = a5;
    v15[3] = a6;
    v15[4] = a7;
    v15[5] = a3;
    v15[6] = a4;
    v15[7] = a1;
    sub_1BB7D9A2C((uint64_t (*)(uint64_t))sub_1BAB482E8, (uint64_t)v15);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB4172C(uint64_t a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  unsigned __int8 v20;

  v3 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 200);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 104);
    v7 = *(_QWORD *)(v4 + 112);
    v6 = *(_QWORD *)(v4 + 120);
    v8 = *(_QWORD *)(v4 + 128);
    v9 = *(_QWORD *)(v4 + 136);
    v15 = *(_QWORD *)(v4 + 168);
    v16 = *(_QWORD *)(v4 + 160);
    v17 = *(_QWORD *)(v4 + 152);
    v18 = *(_QWORD *)(v4 + 96);
    v11 = *(_QWORD *)(v4 + 144);
    sub_1BA6E8A48(v18, v5, v7, v6, v8, v9, v11, v17, v16, v15, *(_BYTE *)(v4 + 176));
    v3 = a3;
    v12 = v6;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v12 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v14 = -2;
  }
  v19[0] = v18;
  v19[1] = v5;
  v19[2] = v7;
  v19[3] = v12;
  v19[4] = v8;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = v17;
  v19[8] = v16;
  v19[9] = v15;
  v20 = v14;
  sub_1BB103A9C((uint64_t)v19, v3);
  return sub_1BA6E8A78(v18, v5, v7, v12, v8, v9, v11, v17, v16, v15, v14);
}

void sub_1BAB41864(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (void *)MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_layer);
    objc_msgSend(v4, sel_setMask_, 0);

  }
}

_QWORD *sub_1BAB418DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *result;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27[2];
  _QWORD v28[2];

  v13 = type metadata accessor for FormatLayoutViewRoute();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    swift_beginAccess();
    v18 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v18)
    {
      v19 = (void *)v18;
      v26[1] = v17[41];
      sub_1BA4C2DD8(a3, (uint64_t)v15, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      result = objc_msgSend(v19, sel_view);
      if (!result)
      {
        __break(1u);
        return result;
      }
      v20 = result;
      v21 = *(_QWORD *)(*(_QWORD *)a4 + 136);
      v22 = *(_QWORD *)(*(_QWORD *)(v21 + 40) + 16);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v22 + 16) + 16))
      {
        v28[0] = *(_QWORD *)(v21 + 56);
        v23 = swift_bridgeObjectRetain();
        v24 = sub_1BA6E42A0(v23);
        sub_1BA6E3FB8(v24);
        v25 = v28[0];
      }
      else
      {
        v25 = sub_1BA6E3F38();
      }
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a8 + 24))(v28, a7, a8);
      v27[0] = v28[0];
      v27[1] = v28[1];
      sub_1BB3A2F94((uint64_t)v15, (uint64_t)v20, v25, v27);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutViewRoute);
    }
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_1BAB41AE8(uint64_t a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  unsigned __int8 v20;

  v3 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 152);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 112);
    v7 = *(_QWORD *)(v4 + 120);
    v6 = *(_QWORD *)(v4 + 128);
    v8 = *(_QWORD *)(v4 + 136);
    v9 = *(_QWORD *)(v4 + 144);
    v15 = *(_QWORD *)(v4 + 176);
    v16 = *(_QWORD *)(v4 + 168);
    v17 = *(_QWORD *)(v4 + 160);
    v18 = *(_QWORD *)(v4 + 104);
    v11 = *(_QWORD *)(v4 + 152);
    sub_1BA6E8A48(v18, v5, v7, v6, v8, v9, v11, v17, v16, v15, *(_BYTE *)(v4 + 184));
    v3 = a3;
    v12 = v6;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v12 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v14 = -2;
  }
  v19[0] = v18;
  v19[1] = v5;
  v19[2] = v7;
  v19[3] = v12;
  v19[4] = v8;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = v17;
  v19[8] = v16;
  v19[9] = v15;
  v20 = v14;
  sub_1BB103A9C((uint64_t)v19, v3);
  return sub_1BA6E8A78(v18, v5, v7, v12, v8, v9, v11, v17, v16, v15, v14);
}

uint64_t sub_1BAB41C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t (*a11)(uint64_t))
{
  uint64_t result;
  uint64_t v18;
  _QWORD v19[11];

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v19[10] = a11;
    swift_retain();
    v18 = swift_release();
    MEMORY[0x1E0C80A78](v18);
    v19[2] = a8;
    v19[3] = a9;
    v19[4] = a10;
    v19[5] = a3;
    v19[6] = a4;
    v19[7] = a5;
    v19[8] = a6;
    v19[9] = a7;
    sub_1BB7D9A2C(a11, (uint64_t)v19);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB41D08(uint64_t a1, int a2, id a3)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[10];
  unsigned __int8 v20;

  v3 = a3;
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 152);
  if (v4)
  {
    v5 = *(_QWORD *)(v4 + 104);
    v7 = *(_QWORD *)(v4 + 112);
    v6 = *(_QWORD *)(v4 + 120);
    v8 = *(_QWORD *)(v4 + 128);
    v9 = *(_QWORD *)(v4 + 136);
    v15 = *(_QWORD *)(v4 + 168);
    v16 = *(_QWORD *)(v4 + 160);
    v17 = *(_QWORD *)(v4 + 152);
    v18 = *(_QWORD *)(v4 + 96);
    v11 = *(_QWORD *)(v4 + 144);
    sub_1BA6E8A48(v18, v5, v7, v6, v8, v9, v11, v17, v16, v15, *(_BYTE *)(v4 + 176));
    v3 = a3;
    v12 = v6;
  }
  else
  {
    v17 = 0;
    v18 = 0;
    v5 = 0;
    v7 = 0;
    v12 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v15 = 0;
    v16 = 0;
    v14 = -2;
  }
  v19[0] = v18;
  v19[1] = v5;
  v19[2] = v7;
  v19[3] = v12;
  v19[4] = v8;
  v19[5] = v9;
  v19[6] = v11;
  v19[7] = v17;
  v19[8] = v16;
  v19[9] = v15;
  v20 = v14;
  sub_1BB103A9C((uint64_t)v19, v3);
  return sub_1BA6E8A78(v18, v5, v7, v12, v8, v9, v11, v17, v16, v15, v14);
}

_QWORD *sub_1BAB41E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *result;
  _QWORD *v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27[2];
  _QWORD v28[2];

  v13 = type metadata accessor for FormatLayoutViewRoute();
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = (_QWORD *)swift_weakLoadStrong();
  if (result)
  {
    v17 = result;
    swift_beginAccess();
    v18 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v18)
    {
      v19 = (void *)v18;
      v26[1] = v17[41];
      sub_1BA4C2DD8(a3, (uint64_t)v15, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      result = objc_msgSend(v19, sel_view);
      if (!result)
      {
        __break(1u);
        return result;
      }
      v20 = result;
      v21 = *(_QWORD *)(a4 + 184);
      v22 = *(_QWORD *)(*(_QWORD *)(v21 + 40) + 16);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v22 + 16) + 16))
      {
        v28[0] = *(_QWORD *)(v21 + 56);
        v23 = swift_bridgeObjectRetain();
        v24 = sub_1BA6E42A0(v23);
        sub_1BA6E3FB8(v24);
        v25 = v28[0];
      }
      else
      {
        v25 = sub_1BA6E3F38();
      }
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(a8 + 24))(v28, a7, a8);
      v27[0] = v28[0];
      v27[1] = v28[1];
      sub_1BB3A2F94((uint64_t)v15, (uint64_t)v20, v25, v27);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutViewRoute);
    }
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t sub_1BAB42048(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD v17[7];
  __int128 v18;
  __int128 v19;
  char v20;

  v5 = sub_1BB8709F0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x1E0DB9EF8], v5);
    v11 = *(_QWORD *)(v10 + 288);
    v17[5] = sub_1BB86DC0C();
    v17[6] = sub_1BA4A2870((unint64_t *)&qword_1ED3B0750, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF8638], (uint64_t)&protocol conformance descriptor for Tracker);
    v17[2] = v11;
    v18 = 0u;
    v19 = 0u;
    v20 = 1;
    sub_1BB87069C();
    swift_allocObject();
    swift_retain();
    v12 = a1;
    v13 = sub_1BB870684();
    v14 = *(_QWORD *)(v10 + 280);
    v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 56);
    v16 = swift_unknownObjectRetain();
    v15(v16, v14, v13);
    swift_release();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BAB421DC(void *a1, void (*a2)(_BYTE *), uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  uint64_t v12;

  v7 = type metadata accessor for FeedActionSender();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *v9 = a4;
  type metadata accessor for FeedAction(0);
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v9[*(int *)(v7 + 20)] = a1;
  v10 = a1;
  a2(v9);
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for FeedActionSender);
}

uint64_t sub_1BAB4229C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(_QWORD);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v41 = a6;
  v42 = a8;
  v40 = a5;
  v43 = a1;
  v11 = type metadata accessor for FormatLayoutViewRoute();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v39 - v15;
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v39 - v18;
  v20 = type metadata accessor for FeedItem(0);
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v39 = a9;
    sub_1BAB42DE4(a3, (uint64_t)v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_1BA5C699C((uint64_t)v19, &qword_1ED3B2A50, type metadata accessor for FeedItem);
      sub_1BA4C2DD8(a4, (uint64_t)v16, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      v25 = *(_QWORD *)(v40 + 64);
      v26 = *(_QWORD *)(*(_QWORD *)(v25 + 40) + 16);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v26 + 16) + 16))
      {
        v46 = *(_QWORD *)(v25 + 56);
        v27 = swift_bridgeObjectRetain();
        v28 = sub_1BA6E42A0(v27);
        sub_1BA6E3FB8(v28);
        v29 = v46;
      }
      else
      {
        v29 = sub_1BA6E3F38();
      }
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(v39 + 24))(&v46, v42);
      v44 = v46;
      v45 = v47;
      sub_1BB3A2F94((uint64_t)v16, v43, v29, &v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutViewRoute;
      v38 = (uint64_t)v16;
    }
    else
    {
      sub_1BA5193C4((uint64_t)v19, (uint64_t)v23, type metadata accessor for FeedItem);
      sub_1BAB4832C();
      v31 = (uint64_t)&v13[*(int *)(v30 + 48)];
      sub_1BA4C2DD8(a4, (uint64_t)v13, type metadata accessor for FeedItem);
      sub_1BA4C2DD8((uint64_t)v23, v31, type metadata accessor for FeedItem);
      swift_storeEnumTagMultiPayload();
      v32 = *(_QWORD *)(v40 + 64);
      v33 = *(_QWORD *)(*(_QWORD *)(v32 + 40) + 16);
      swift_beginAccess();
      if (*(_QWORD *)(*(_QWORD *)(v33 + 16) + 16))
      {
        v46 = *(_QWORD *)(v32 + 56);
        v34 = swift_bridgeObjectRetain();
        v35 = sub_1BA6E42A0(v34);
        sub_1BA6E3FB8(v35);
        v36 = v46;
      }
      else
      {
        v36 = sub_1BA6E3F38();
      }
      (*(void (**)(uint64_t *__return_ptr, uint64_t))(v39 + 24))(&v46, v42);
      v44 = v46;
      v45 = v47;
      sub_1BB3A2F94((uint64_t)v13, v43, v36, &v44);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatLayoutViewRoute);
      v37 = type metadata accessor for FeedItem;
      v38 = (uint64_t)v23;
    }
    sub_1BA4A2E80(v38, v37);
    return swift_release();
  }
  return result;
}

uint64_t FormatLayoutViewRenderer.deinit()
{
  uint64_t v0;

  swift_unknownObjectWeakDestroy();
  sub_1BA8FD860(v0 + 24);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 224);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FormatLayoutViewRenderer.__deallocating_deinit()
{
  FormatLayoutViewRenderer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB427A0()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

uint64_t (*sub_1BAB427E0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FormatLayoutViewRenderer.presentingViewController.modify(v2);
  return sub_1BAB42824;
}

uint64_t sub_1BAB42828()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 24);
}

uint64_t (*sub_1BAB4286C(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = FormatLayoutViewRenderer.analyticsDataProvider.modify(v2);
  return sub_1BAB42824;
}

uint64_t sub_1BAB428B0()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t (*sub_1BAB428E4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1BAB42920(uint64_t a1, double *a2, char *a3, uint64_t a4, __int128 *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:actionSenderHandler:)(a1, a2, a3, a4, a5, a6, a7, a9, a10);
}

uint64_t sub_1BAB4292C(uint64_t a1, double *a2, char *a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return FormatLayoutViewRenderer.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

unint64_t sub_1BAB42938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return FormatLayoutViewRenderer.renderAction<A>(context:itemData:contextLayoutOptions:view:sourceItemData:actionSenderHandler:)(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1BAB42944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return FormatLayoutViewRenderer.prepareForReuse<A, B>(context:layoutAttributes:view:)(a1, a2, a3, a5, a6);
}

Swift::Void __swiftcall FormatLayoutViewRenderer.sceneDidEnterBackground()()
{
  sub_1BB5BE61C();
}

Swift::Void __swiftcall FormatLayoutViewRenderer.sceneWillEnterForeground()()
{
  sub_1BA4B5BAC();
}

void sub_1BAB42990()
{
  sub_1BB5BE61C();
}

void sub_1BAB429B0(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  id v31;
  NSObject *v32;
  os_log_type_t v33;
  _QWORD v34[2];
  __int128 v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54[2];

  v50 = a5;
  v51 = a6;
  v49 = a4;
  v9 = sub_1BB86F718();
  v47 = *(_QWORD *)(v9 - 8);
  v48 = v9;
  MEMORY[0x1E0C80A78](v9);
  v46 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB8717AC();
  v44 = *(_QWORD *)(v11 - 8);
  v45 = v11;
  MEMORY[0x1E0C80A78](v11);
  v43 = (char *)v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1BB86EFEC();
  v40 = *(_QWORD *)(v13 - 8);
  v41 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = type metadata accessor for FormatSourceItemTipSource();
  MEMORY[0x1E0C80A78](v42);
  v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v34 - v20;
  v53 = a3;
  v22 = *(_QWORD *)(a3 + 16);
  if (v22)
  {
    v23 = v53 + ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80));
    v38 = *(_QWORD *)(v19 + 72);
    swift_bridgeObjectRetain();
    *(_QWORD *)&v24 = 136315394;
    v35 = v24;
    v34[1] = MEMORY[0x1E0DEE9B8] + 8;
    v52 = v15;
    v39 = v17;
    v36 = v21;
    v37 = a1;
    do
    {
      sub_1BA4C2DD8(v23, (uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
      sub_1BB86EFBC();
      sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v32 = sub_1BB86EFC8();
      v33 = sub_1BB8732E8();
      if (os_log_type_enabled(v32, v33))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        v54[0] = v26;
        *(_DWORD *)v25 = v35;
        v27 = sub_1BB8717A0();
        *(_QWORD *)(v25 + 4) = sub_1BA5D2E14(v27, v28, v54);
        swift_bridgeObjectRelease();
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
        *(_WORD *)(v25 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(_QWORD *)(v25 + 14) = sub_1BA5D2E14(v37, a2, v54);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1BA493000, v32, v33, "Registering format tip source=%s, identifier=%s", (uint8_t *)v25, 0x16u);
        swift_arrayDestroy();
        v29 = v26;
        v21 = v36;
        MEMORY[0x1BCCE5C38](v29, -1, -1);
        MEMORY[0x1BCCE5C38](v25, -1, -1);

        (*(void (**)(char *, uint64_t))(v40 + 8))(v52, v41);
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v41);
      }
      (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v43, v21, v45);
      (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v46, &v21[*(int *)(v42 + 20)], v48);
      sub_1BB86F724();
      swift_allocObject();
      swift_bridgeObjectRetain();
      v30 = v49;
      v31 = v50;
      sub_1BB86F6F4();
      sub_1BB86F4F0();
      swift_release();
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatSourceItemTipSource);
      v17 = v39;
      v23 += v38;
      --v22;
      v15 = v52;
    }
    while (v22);
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1BAB42DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB42E40()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t);

  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = v0 + ((v2 + 16) & ~v2);
  v4 = type metadata accessor for FeedItem(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(v3, 1, v4))
    return swift_deallocObject();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 48) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 80) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    case 2u:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for FeedBannerAd();
      v7 = v3 + *(int *)(v6 + 20);
      v8 = sub_1BB8721C0();
      goto LABEL_55;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v9 = (int *)type metadata accessor for FeedHeadline(0);
      v10 = v9[10];
      v11 = v3 + v10 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v12 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 48))(v11, 1, v12))
      {
        v13 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);

        v14 = v11 + *(int *)(v12 + 28);
        v15 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      }
      v16 = v3 + v9[11];
      v17 = sub_1BB871B24();
      v18 = *(_QWORD *)(v17 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      if (*(_QWORD *)(v3 + v9[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + v9[13]) >= 3uLL)
        swift_unknownObjectRelease();

      return swift_deallocObject();
    case 4u:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = (int *)type metadata accessor for FeedWebEmbed();
      v20 = v3 + v19[8];
      v21 = sub_1BB86C67C();
      v22 = *(_QWORD *)(v21 - 8);
      v23 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
      v23(v20, v21);
      v24 = v3 + v19[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v24, 1, v21))
        v23(v24, v21);
      v67 = v23;
      swift_release();
      swift_release();
      v25 = v3 + v19[12];
      v26 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v26 - 1) + 48))(v25, 1, v26))
      {
        v66 = v21;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v27 = v26[10];
        v28 = v25 + v27 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v29 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
        {
          v30 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v28, v30);

          v67(v28 + *(int *)(v29 + 28), v66);
        }
        v31 = v25 + v26[11];
        v32 = sub_1BB871B24();
        v65 = *(_QWORD *)(v32 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v31, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v31, v32);
        if (*(_QWORD *)(v25 + v26[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v21 = v66;
        if (*(_QWORD *)(v25 + v26[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v33 = v3 + v19[13];
      v34 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 48))(v33, 1, v34))
        return swift_deallocObject();
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_57;
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for GenericDataVisualization();
      v67(v33 + *(int *)(v35 + 20), v21);
      goto LABEL_72;
    case 5u:
      goto LABEL_38;
    case 6u:
      v36 = *(unsigned __int8 *)(v3 + 281);
      if (v36 == 2)
        goto LABEL_42;
      if (v36 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v43 = *(void **)(v3 + 144);
        if (v43)
        {

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v3 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v3 + 272) >= 0x11uLL)
LABEL_72:
            swift_bridgeObjectRelease();
        }
      }
      else
      {
        if (*(_BYTE *)(v3 + 281))
          return swift_deallocObject();
LABEL_38:

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
          goto LABEL_72;
      }
      return swift_deallocObject();
    case 7u:
LABEL_42:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v3 + 120))
          __swift_destroy_boxed_opaque_existential_1(v3 + 96);
      }
      return swift_deallocObject();
    case 8u:
      swift_bridgeObjectRelease();
      v37 = v3 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v38 = v37 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v39 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
      {
        v40 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v38, v40);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 56))
        __swift_destroy_boxed_opaque_existential_1(v3 + 32);
      if (*(_QWORD *)(v3 + 96))
        __swift_destroy_boxed_opaque_existential_1(v3 + 72);
      if (*(_QWORD *)(v3 + 136))
        __swift_destroy_boxed_opaque_existential_1(v3 + 112);
      return swift_deallocObject();
    case 0xAu:
      swift_bridgeObjectRelease();
      v6 = type metadata accessor for FeedEngagementBanner();
      v7 = v3 + *(int *)(v6 + 20);
      v8 = sub_1BB86EDAC();
LABEL_55:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      if (*(_QWORD *)(v3 + *(int *)(v6 + 32) + 8) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    case 0xBu:
LABEL_57:
      swift_release();
      return swift_deallocObject();
    case 0xCu:
      goto LABEL_66;
    case 0xDu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 112))
        __swift_destroy_boxed_opaque_existential_1(v3 + 88);
      if (*(_QWORD *)(v3 + 152))
        __swift_destroy_boxed_opaque_existential_1(v3 + 128);
      return swift_deallocObject();
    case 0xEu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_66:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return swift_deallocObject();
    case 0xFu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v41 = v3 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v42 = v41 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_91;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v45 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v42, 1, v45))
            {
              v46 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v42, v46);
            }
          }
          v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v48 = v42 + *(int *)(v47 + 20);
          v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5 || v49 == 4)
          {
            v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v48, 1, v50))
            {
              v51 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v48, v51);
            }
          }
          v42 += *(int *)(v47 + 24);
LABEL_91:
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v42, 1, v53))goto LABEL_102;
          }
          return swift_deallocObject();
        case 2u:
          v54 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v42, 1, v54))
            return swift_deallocObject();
          v55 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v42, v55);
          v56 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v57 = v42 + *(int *)(v56 + 24);
          swift_bridgeObjectRelease();
          v58 = *(_QWORD *)(v57 + 24);
          if (v58 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v57 + 16), v58);
          goto LABEL_72;
        case 3u:
          v59 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v60 = v42 + *(int *)(v59 + 24);
          v61 = type metadata accessor for PuzzleStreak();
          v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
          if (!v62(v60, 1, v61))
          {
            v63 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v60, v63);
          }
          v42 += *(int *)(v59 + 28);
          if (!v62(v42, 1, v61))
          {
LABEL_102:
            v64 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 8))(v42, v64);
          }
          return swift_deallocObject();
        default:
          return swift_deallocObject();
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 240) >= 0x11uLL)
        goto LABEL_72;
      return swift_deallocObject();
    default:
      return swift_deallocObject();
  }
}

uint64_t sub_1BAB43938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BB7DB500(v1 + ((v4 + 16) & ~v4), a1);
}

uint64_t sub_1BAB4398C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAB439B4()
{
  uint64_t v0;

  sub_1BB6C3510(*(_QWORD *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1BAB439C0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAB439E4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = (int *)type metadata accessor for FormatItemNodeData();
  v3 = *((_QWORD *)v2 - 1);
  v4 = *(unsigned __int8 *)(v3 + 80);
  v76 = *(_QWORD *)(v3 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v77 = v1;
  swift_release();
  v7 = v0 + ((v4 + 40) & ~v4);
  type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 48) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 80) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 2u:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for FeedBannerAd();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v11 = (int *)type metadata accessor for FeedHeadline(0);
      v12 = v11[10];
      v13 = v7 + v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v15 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

        v16 = v13 + *(int *)(v14 + 28);
        v17 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      v18 = v7 + v11[11];
      v19 = sub_1BB871B24();
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      if (*(_QWORD *)(v7 + v11[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + v11[13]) >= 3uLL)
        swift_unknownObjectRelease();

      goto LABEL_71;
    case 4u:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = (int *)type metadata accessor for FeedWebEmbed();
      v22 = v7 + v21[8];
      v23 = sub_1BB86C67C();
      v24 = *(_QWORD *)(v23 - 8);
      v74 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v74(v22, v23);
      v25 = v7 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23))
        v74(v25, v23);
      v73 = v23;
      swift_release();
      swift_release();
      v26 = v7 + v21[12];
      v27 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v27 - 1) + 48))(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v28 = v27[10];
        v29 = v26 + v28 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v71 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v29, 1))
        {
          v30 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);

          v74(v29 + *(int *)(v71 + 28), v73);
        }
        v31 = v26 + v27[11];
        v32 = sub_1BB871B24();
        v70 = *(_QWORD *)(v32 - 8);
        v72 = v31;
        v33 = v31;
        v34 = v32;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v33, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v72, v34);
        if (*(_QWORD *)(v26 + v27[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v26 + v27[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v35 = v7 + v21[13];
      v36 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
        goto LABEL_71;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v37 = type metadata accessor for GenericDataVisualization();
      v74(v35 + *(int *)(v37 + 20), v73);
      goto LABEL_70;
    case 5u:
      goto LABEL_36;
    case 6u:
      v38 = *(unsigned __int8 *)(v7 + 281);
      if (v38 == 2)
        goto LABEL_40;
      if (v38 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v7 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v49 = *(void **)(v7 + 144);
        if (!v49)
          goto LABEL_71;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v7 + 272) < 0x11uLL)
          goto LABEL_71;
LABEL_70:
        swift_bridgeObjectRelease();
        goto LABEL_71;
      }
      if (*(_BYTE *)(v7 + 281))
        goto LABEL_71;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v7 + 128) >= 0x11uLL)
        goto LABEL_70;
LABEL_71:
      v45 = v7 + v2[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v45 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7280A0(*(_QWORD *)(v7 + v2[6]));
      v46 = v7 + v2[7];
      v47 = sub_1BB86FE38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
      if (*(_QWORD *)(v7 + v2[8] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v6 + ((v76 + ((v4 + 40) & ~v4) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6), v77);
      return swift_deallocObject();
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 120))
          __swift_destroy_boxed_opaque_existential_1(v7 + 96);
      }
      goto LABEL_71;
    case 8u:
      swift_bridgeObjectRelease();
      v39 = v7 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v39 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v41 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
      {
        v42 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
      }
      goto LABEL_70;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 56))
        __swift_destroy_boxed_opaque_existential_1(v7 + 32);
      if (*(_QWORD *)(v7 + 96))
        __swift_destroy_boxed_opaque_existential_1(v7 + 72);
      if (*(_QWORD *)(v7 + 136))
        __swift_destroy_boxed_opaque_existential_1(v7 + 112);
      goto LABEL_71;
    case 0xAu:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for FeedEngagementBanner();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      if (*(_QWORD *)(v7 + *(int *)(v8 + 32) + 8) < 0x11uLL)
        goto LABEL_71;
      goto LABEL_70;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_71;
    case 0xCu:
      goto LABEL_64;
    case 0xDu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 112))
        __swift_destroy_boxed_opaque_existential_1(v7 + 88);
      if (*(_QWORD *)(v7 + 152))
        __swift_destroy_boxed_opaque_existential_1(v7 + 128);
      goto LABEL_71;
    case 0xEu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_71;
    case 0xFu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v7 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v44 = v43 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_94;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v51 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v44, 1, v51))
            {
              v52 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 8))(v44, v52);
            }
          }
          v53 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v54 = v44 + *(int *)(v53 + 20);
          v55 = swift_getEnumCaseMultiPayload();
          if (v55 == 5 || v55 == 4)
          {
            v56 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v54, 1, v56))
            {
              v57 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 8))(v54, v57);
            }
          }
          v44 += *(int *)(v53 + 24);
LABEL_94:
          v58 = swift_getEnumCaseMultiPayload();
          if (v58 == 5 || v58 == 4)
          {
            v59 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v44, 1, v59))goto LABEL_105;
          }
          goto LABEL_71;
        case 2u:
          v60 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v44, 1, v60))
            goto LABEL_71;
          v61 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 8))(v44, v61);
          v62 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v63 = v44 + *(int *)(v62 + 24);
          swift_bridgeObjectRelease();
          v64 = *(_QWORD *)(v63 + 24);
          if (v64 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v63 + 16), v64);
          goto LABEL_70;
        case 3u:
          v75 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v65 = v44 + *(int *)(v75 + 24);
          v66 = type metadata accessor for PuzzleStreak();
          v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48);
          if (!v67(v65, 1, v66))
          {
            v68 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v65, v68);
          }
          v44 += *(int *)(v75 + 28);
          if (!v67(v44, 1, v66))
          {
LABEL_105:
            v69 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 8))(v44, v69);
          }
          goto LABEL_71;
        default:
          goto LABEL_71;
      }
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 240) >= 0x11uLL)
        goto LABEL_70;
      goto LABEL_71;
    default:
      goto LABEL_71;
  }
}

uint64_t sub_1BAB445D0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  v3 = v1[2];
  v4 = v1[3];
  v5 = *(_QWORD *)(type metadata accessor for FormatItemNodeData() - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  return sub_1BAB3FF38(a1, v1[4], (uint64_t)v1 + v6, *(_QWORD *)((char *)v1 + v7), (uint64_t)v1 + ((v8 + v7 + 8) & ~v8), v3, v4);
}

uint64_t sub_1BAB4465C()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAB4469C(void *a1)
{
  uint64_t *v1;

  return sub_1BAB3FB78(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1BAB446B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  unsigned __int8 v7;
  uint64_t v11;
  int v12;

  v7 = a5;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = a5;
  *(_QWORD *)(a6 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a6 + 80) = &off_1E73394A0;
  *(_QWORD *)(a6 + 88) = 0;
  swift_unknownObjectWeakAssign();
  if (v12 == 7)
    v7 = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a6 + 16) = v7;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = a4;
  *(_QWORD *)(a6 + 48) = v11;
  *(_QWORD *)(a6 + 24) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a6;
}

uint64_t sub_1BAB44754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  unsigned __int8 v7;
  uint64_t v11;
  int v12;

  v7 = a5;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = a5;
  *(_QWORD *)(a6 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a6 + 80) = &off_1E73348A0;
  *(_QWORD *)(a6 + 88) = 0;
  swift_unknownObjectWeakAssign();
  if (v12 == 7)
    v7 = *(_BYTE *)(a2 + 128);
  *(_BYTE *)(a6 + 16) = v7;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = a4;
  *(_QWORD *)(a6 + 48) = v11;
  *(_QWORD *)(a6 + 24) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  return a6;
}

uint64_t sub_1BAB447F8(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6)
{
  unsigned __int8 v7;
  uint64_t v11;
  int v12;

  v7 = a5;
  v11 = MEMORY[0x1E0DEE9D8];
  v12 = a5;
  *(_QWORD *)(a6 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a6 + 40) = v11;
  *(_QWORD *)(a6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(a6 + 80) = &off_1E73348A0;
  *(_QWORD *)(a6 + 88) = 0;
  swift_unknownObjectWeakAssign();
  if (v12 == 7)
    v7 = *((_BYTE *)a2 + *(_QWORD *)(*a2 + 152));
  *(_BYTE *)(a6 + 16) = v7;
  *(_QWORD *)(a6 + 56) = a3;
  *(_QWORD *)(a6 + 64) = a4;
  *(_QWORD *)(a6 + 48) = v11;
  *(_QWORD *)(a6 + 24) = a2[15];
  swift_bridgeObjectRetain();
  return a6;
}

uint64_t sub_1BAB448A4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  *a2 = result;
  return result;
}

void sub_1BAB448F0(id *a1)
{
  id v1;

  v1 = *a1;
  sub_1BA4B8EF0();

}

uint64_t sub_1BAB4492C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 24;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  v6 = *(_QWORD *)(v3 + 32);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.presentingViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.presentingViewController.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.analyticsDataProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.analyticsDataProvider.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.debugger.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.debugger.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.render<A, B>(for:with:in:traitCollection:sourceItemData:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return (*(uint64_t (**)(void))(a12 + 80))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.render<A, B>(for:with:in:traitCollection:sourceItemData:resizingProvider:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(a13 + 88))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.renderAction<A>(context:itemData:contextLayoutOptions:view:sourceItemData:actionSenderHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(void))(a11 + 96))();
}

uint64_t dispatch thunk of FormatLayoutViewRendererType.prepareForReuse<A, B>(context:layoutAttributes:view:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 104))();
}

uint64_t method lookup function for FormatLayoutViewRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAB44A1C()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BAB44A50()
{
  _QWORD *v0;
  void **v1;
  id v2;
  void *v3;

  v1 = (void **)v0[4];
  v2 = sub_1BA796E04(v0[6], *(_QWORD *)(v0[7] + 112), *(_QWORD *)(v0[7] + 176), *(_QWORD *)(v0[7] + 192), *(_QWORD *)(v0[7] + 208));
  v3 = *v1;
  *v1 = v2;

}

uint64_t sub_1BAB44A90()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB44AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB44AFC(void *a1)
{
  uint64_t v1;

  return sub_1BAB421DC(a1, *(void (**)(_BYTE *))(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
}

uint64_t sub_1BAB44B1C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAB44B48(void *a1)
{
  uint64_t v1;

  return sub_1BAB42048(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAB44B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  void (*v92)(uint64_t, uint64_t);
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int EnumCaseMultiPayload;
  void *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unsigned int (*v116)(uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  void *v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unsigned int (*v137)(uint64_t, uint64_t, uint64_t);
  uint64_t v138;
  unsigned int v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  uint64_t v145;
  void (*v146)(uint64_t, uint64_t);
  void (*v147)(uint64_t, uint64_t);
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;

  v1 = *(_QWORD *)(v0 + 24);
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v3 + 64);
  v6 = (int *)type metadata accessor for FormatItemNodeData();
  v7 = *((_QWORD *)v6 - 1);
  v8 = (v4 + v5 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v152 = *(_QWORD *)(v1 - 8);
  v153 = v1;
  v151 = *(unsigned __int8 *)(v152 + 80);
  swift_release();
  v10 = v0 + v4;
  v11 = type metadata accessor for FeedItem(0);
  v154 = v8;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v10 + 48) >= 0x11uLL)
          goto LABEL_150;
        break;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v10 + 80) >= 0x11uLL)
          goto LABEL_150;
        break;
      case 2u:
        swift_bridgeObjectRelease();
        v55 = type metadata accessor for FeedBannerAd();
        v56 = v8;
        v57 = v10 + *(int *)(v55 + 20);
        v58 = sub_1BB8721C0();
        goto LABEL_131;
      case 3u:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v59 = (int *)type metadata accessor for FeedHeadline(0);
        v60 = v59[10];
        v61 = v10 + v60 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v62 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
        {
          v63 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v61, v63);

          v64 = v61 + *(int *)(v62 + 28);
          v65 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 8))(v64, v65);
        }
        v66 = v10 + v59[11];
        v67 = sub_1BB871B24();
        v68 = *(_QWORD *)(v67 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
          (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
        if (*(_QWORD *)(v10 + v59[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v8 = v154;
        if (*(_QWORD *)(v10 + v59[13]) >= 3uLL)
          swift_unknownObjectRelease();

        break;
      case 4u:
        v150 = v9;
        if (*(_QWORD *)(v10 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v69 = (int *)type metadata accessor for FeedWebEmbed();
        v70 = v10 + v69[8];
        v71 = sub_1BB86C67C();
        v72 = *(_QWORD *)(v71 - 8);
        v146 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v146(v70, v71);
        v73 = v10 + v69[9];
        v148 = v71;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v73, 1, v71))
          v146(v73, v71);
        swift_release();
        swift_release();
        v74 = v10 + v69[12];
        v75 = (int *)type metadata accessor for FeedHeadline(0);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v75 - 1) + 48))(v74, 1, v75))
        {
          v144 = v69;
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          v76 = v75[10];
          v77 = v74 + v76 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
          v78 = type metadata accessor for SharedItem();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 48))(v77, 1, v78))
          {
            v79 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 8))(v77, v79);

            v146(v77 + *(int *)(v78 + 28), v148);
          }
          v80 = v74 + v75[11];
          v81 = sub_1BB871B24();
          v82 = *(_QWORD *)(v81 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81))
            (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v80, v81);
          if (*(_QWORD *)(v74 + v75[12] + 8) >= 0x11uLL)
            swift_bridgeObjectRelease();
          v9 = v150;
          if (*(_QWORD *)(v74 + v75[13]) >= 3uLL)
            swift_unknownObjectRelease();

          v69 = v144;
        }
        v83 = v10 + v69[13];
        v84 = type metadata accessor for WebEmbedDataVisualization();
        v8 = v154;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v83, 1, v84))
          break;
        if (swift_getEnumCaseMultiPayload() != 1)
          goto LABEL_133;
        swift_bridgeObjectRelease();
        v85 = type metadata accessor for GenericDataVisualization();
        v146(v83 + *(int *)(v85 + 20), v148);
        goto LABEL_150;
      case 5u:
        goto LABEL_114;
      case 6u:
        v86 = *(unsigned __int8 *)(v10 + 281);
        if (v86 == 2)
          goto LABEL_118;
        if (v86 == 1)
        {

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v10 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v10 + 128) >= 0x11uLL)
            swift_bridgeObjectRelease();
          v118 = *(void **)(v10 + 144);
          if (!v118)
            break;

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v10 + 224) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v10 + 272) < 0x11uLL)
            break;
        }
        else
        {
          if (*(_BYTE *)(v10 + 281))
            break;
LABEL_114:

          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v10 + 80) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

          }
          if (*(_QWORD *)(v10 + 128) < 0x11uLL)
            break;
        }
LABEL_150:
        swift_bridgeObjectRelease();
        break;
      case 7u:
LABEL_118:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v10 + 88) != 1)
        {
          swift_bridgeObjectRelease();
          if (*(_QWORD *)(v10 + 120))
            __swift_destroy_boxed_opaque_existential_1(v10 + 96);
        }
        break;
      case 8u:
        swift_bridgeObjectRelease();
        v87 = v10 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v88 = v87 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
        v89 = type metadata accessor for FormatCustomItem.Action();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v89 - 8) + 48))(v88, 1, v89))
        {
          v90 = sub_1BB86C67C();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 8))(v88, v90);
        }
LABEL_123:
        swift_bridgeObjectRelease();
        v8 = v154;
        break;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v10 + 56))
          __swift_destroy_boxed_opaque_existential_1(v10 + 32);
        if (*(_QWORD *)(v10 + 96))
          __swift_destroy_boxed_opaque_existential_1(v10 + 72);
        if (*(_QWORD *)(v10 + 136))
          __swift_destroy_boxed_opaque_existential_1(v10 + 112);
        break;
      case 0xAu:
        swift_bridgeObjectRelease();
        v55 = type metadata accessor for FeedEngagementBanner();
        v56 = v8;
        v57 = v10 + *(int *)(v55 + 20);
        v58 = sub_1BB86EDAC();
LABEL_131:
        v91 = v58;
        v92 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 8);
        v93 = v57;
        v8 = v56;
        v92(v93, v91);
        if (*(_QWORD *)(v10 + *(int *)(v55 + 32) + 8) >= 0x11uLL)
          goto LABEL_150;
        break;
      case 0xBu:
LABEL_133:
        swift_release();
        break;
      case 0xCu:
        goto LABEL_142;
      case 0xDu:
        if (*(_QWORD *)(v10 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v10 + 112))
          __swift_destroy_boxed_opaque_existential_1(v10 + 88);
        if (*(_QWORD *)(v10 + 152))
          __swift_destroy_boxed_opaque_existential_1(v10 + 128);
        break;
      case 0xEu:
        if (*(_QWORD *)(v10 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
LABEL_142:
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        break;
      case 0xFu:
        if (*(_QWORD *)(v10 + 32) >= 0x11uLL)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v94 = v10 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        swift_unknownObjectRelease();
        v95 = v94 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
        type metadata accessor for PuzzleStatisticCategory(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            type metadata accessor for PuzzleStatisticValue(0);
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
              goto LABEL_200;
            break;
          case 1u:
            type metadata accessor for PuzzleStatisticValue(0);
            v119 = swift_getEnumCaseMultiPayload();
            if (v119 == 5 || v119 == 4)
            {
              v120 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 48))(v95, 1, v120))
              {
                v121 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v121 - 8) + 8))(v95, v121);
              }
            }
            v122 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
            v123 = v95 + *(int *)(v122 + 20);
            v124 = swift_getEnumCaseMultiPayload();
            if (v124 == 5 || v124 == 4)
            {
              v125 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v125 - 8) + 48))(v123, 1, v125))
              {
                v126 = sub_1BB86BEC0();
                (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 8))(v123, v126);
              }
            }
            v95 += *(int *)(v122 + 24);
            v127 = swift_getEnumCaseMultiPayload();
            if (v127 == 5)
            {
              v142 = type metadata accessor for PuzzleStreak();
              v8 = v154;
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v142 - 8) + 48))(v95, 1, v142))goto LABEL_214;
            }
            else
            {
              v8 = v154;
              if (v127 == 4)
              {
LABEL_200:
                v128 = type metadata accessor for PuzzleStreak();
                if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v128 - 8) + 48))(v95, 1, v128))goto LABEL_214;
              }
            }
            break;
          case 2u:
            v129 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 48))(v95, 1, v129))
            {
              v130 = sub_1BB86C8B0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 8))(v95, v130);
              v131 = type metadata accessor for PuzzleLeaderboardEntry();
              swift_bridgeObjectRelease();
              v132 = v95 + *(int *)(v131 + 24);
              swift_bridgeObjectRelease();
              v133 = *(_QWORD *)(v132 + 24);
              if (v133 >> 60 != 15)
                sub_1BA69D314(*(_QWORD *)(v132 + 16), v133);
              goto LABEL_123;
            }
            break;
          case 3u:
            v134 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
            v135 = v95 + *(int *)(v134 + 24);
            v136 = type metadata accessor for PuzzleStreak();
            v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v136 - 8) + 48);
            if (!v137(v135, 1, v136))
            {
              v138 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v138 - 8) + 8))(v135, v138);
            }
            v95 += *(int *)(v134 + 28);
            v139 = v137(v95, 1, v136);
            v8 = v154;
            if (!v139)
            {
LABEL_214:
              v143 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v143 - 8) + 8))(v95, v143);
            }
            break;
          default:
            goto LABEL_2;
        }
        break;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v10 + 240) >= 0x11uLL)
          goto LABEL_150;
        break;
      default:
        break;
    }
  }
LABEL_2:
  v12 = v0 + v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 48) >= 0x11uLL)
        goto LABEL_76;
      goto LABEL_77;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 80) >= 0x11uLL)
        goto LABEL_76;
      goto LABEL_77;
    case 2u:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for FeedBannerAd();
      v14 = v12 + *(int *)(v13 + 20);
      v15 = sub_1BB8721C0();
      goto LABEL_57;
    case 3u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v16 = (int *)type metadata accessor for FeedHeadline(0);
      v17 = v16[10];
      v18 = v12 + v17 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v19 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v18, 1, v19))
      {
        v20 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 8))(v18, v20);

        v21 = v18 + *(int *)(v19 + 28);
        v22 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 8))(v21, v22);
      }
      v23 = v12 + v16[11];
      v24 = sub_1BB871B24();
      v25 = *(_QWORD *)(v24 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v23, v24);
      if (*(_QWORD *)(v12 + v16[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + v16[13]) >= 3uLL)
        swift_unknownObjectRelease();

      goto LABEL_77;
    case 4u:
      if (*(_QWORD *)(v12 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 = (int *)type metadata accessor for FeedWebEmbed();
      v27 = v12 + v26[8];
      v28 = sub_1BB86C67C();
      v29 = *(_QWORD *)(v28 - 8);
      v147 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
      v147(v27, v28);
      v30 = v12 + v26[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v30, 1, v28))
        v147(v30, v28);
      v145 = v28;
      swift_release();
      swift_release();
      v31 = v12 + v26[12];
      v32 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v32 - 1) + 48))(v31, 1, v32))
      {
        v149 = v9;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v33 = v32[10];
        v34 = v31 + v33 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v35 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
        {
          v36 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 8))(v34, v36);

          v147(v34 + *(int *)(v35 + 28), v145);
        }
        v37 = v31 + v32[11];
        v38 = sub_1BB871B24();
        v39 = *(_QWORD *)(v38 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
          (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
        if (*(_QWORD *)(v31 + v32[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v9 = v149;
        if (*(_QWORD *)(v31 + v32[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v40 = v12 + v26[13];
      v41 = type metadata accessor for WebEmbedDataVisualization();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
        goto LABEL_77;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_59;
      swift_bridgeObjectRelease();
      v42 = type metadata accessor for GenericDataVisualization();
      v147(v40 + *(int *)(v42 + 20), v145);
      goto LABEL_76;
    case 5u:
      goto LABEL_40;
    case 6u:
      v43 = *(unsigned __int8 *)(v12 + 281);
      if (v43 == 2)
        goto LABEL_44;
      if (v43 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v12 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v12 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v97 = *(void **)(v12 + 144);
        if (!v97)
          goto LABEL_77;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v12 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v12 + 272) < 0x11uLL)
          goto LABEL_77;
LABEL_76:
        swift_bridgeObjectRelease();
        goto LABEL_77;
      }
      if (*(_BYTE *)(v12 + 281))
        goto LABEL_77;
LABEL_40:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v12 + 128) >= 0x11uLL)
        goto LABEL_76;
LABEL_77:
      v51 = v12 + v6[5];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v51 + 56) >= 0xFuLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA7280A0(*(_QWORD *)(v12 + v6[6]));
      v52 = v12 + v6[7];
      v53 = sub_1BB86FE38();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 8))(v52, v53);
      if (*(_QWORD *)(v12 + v6[8] + 8))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v152 + 8))(v0 + ((v151 + ((v9 + v154 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v151), v153);
      return swift_deallocObject();
    case 7u:
LABEL_44:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v12 + 120))
          __swift_destroy_boxed_opaque_existential_1(v12 + 96);
      }
      goto LABEL_77;
    case 8u:
      swift_bridgeObjectRelease();
      v44 = v12 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v45 = v44 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v46 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46))
      {
        v47 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v45, v47);
      }
      goto LABEL_76;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 56))
        __swift_destroy_boxed_opaque_existential_1(v12 + 32);
      if (*(_QWORD *)(v12 + 96))
        __swift_destroy_boxed_opaque_existential_1(v12 + 72);
      if (*(_QWORD *)(v12 + 136))
        __swift_destroy_boxed_opaque_existential_1(v12 + 112);
      goto LABEL_77;
    case 0xAu:
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for FeedEngagementBanner();
      v14 = v12 + *(int *)(v13 + 20);
      v15 = sub_1BB86EDAC();
LABEL_57:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
      if (*(_QWORD *)(v12 + *(int *)(v13 + 32) + 8) < 0x11uLL)
        goto LABEL_77;
      goto LABEL_76;
    case 0xBu:
LABEL_59:
      swift_release();
      goto LABEL_77;
    case 0xCu:
      goto LABEL_68;
    case 0xDu:
      if (*(_QWORD *)(v12 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 112))
        __swift_destroy_boxed_opaque_existential_1(v12 + 88);
      if (*(_QWORD *)(v12 + 152))
        __swift_destroy_boxed_opaque_existential_1(v12 + 128);
      goto LABEL_77;
    case 0xEu:
      if (*(_QWORD *)(v12 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_68:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_77;
    case 0xFu:
      if (*(_QWORD *)(v12 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = v12 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v49 = v48 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          v50 = swift_getEnumCaseMultiPayload();
          if (v50 == 5 || v50 == 4)
            goto LABEL_170;
          break;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          v98 = swift_getEnumCaseMultiPayload();
          if (v98 == 5 || v98 == 4)
          {
            v99 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v99 - 8) + 48))(v49, 1, v99))
            {
              v100 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 8))(v49, v100);
            }
          }
          v101 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v102 = v49 + *(int *)(v101 + 20);
          v103 = swift_getEnumCaseMultiPayload();
          if (v103 == 5 || v103 == 4)
          {
            v104 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v102, 1, v104))
            {
              v105 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 8))(v102, v105);
            }
          }
          v49 += *(int *)(v101 + 24);
          v106 = swift_getEnumCaseMultiPayload();
          if (v106 == 5)
          {
            v140 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 48))(v49, 1, v140))goto LABEL_212;
          }
          else if (v106 == 4)
          {
LABEL_170:
            v107 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v49, 1, v107))goto LABEL_212;
          }
          break;
        case 2u:
          v108 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v49, 1, v108))
          {
            v109 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 8))(v49, v109);
            v110 = type metadata accessor for PuzzleLeaderboardEntry();
            swift_bridgeObjectRelease();
            v111 = v49 + *(int *)(v110 + 24);
            swift_bridgeObjectRelease();
            v112 = *(_QWORD *)(v111 + 24);
            if (v112 >> 60 != 15)
              sub_1BA69D314(*(_QWORD *)(v111 + 16), v112);
            goto LABEL_76;
          }
          break;
        case 3u:
          v113 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v114 = v49 + *(int *)(v113 + 24);
          v115 = type metadata accessor for PuzzleStreak();
          v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v115 - 8) + 48);
          if (!v116(v114, 1, v115))
          {
            v117 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v117 - 8) + 8))(v114, v117);
          }
          v49 += *(int *)(v113 + 28);
          if (!v116(v49, 1, v115))
          {
LABEL_212:
            v141 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v141 - 8) + 8))(v49, v141);
          }
          break;
        default:
          goto LABEL_77;
      }
      goto LABEL_77;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v12 + 240) >= 0x11uLL)
        goto LABEL_76;
      goto LABEL_77;
    default:
      goto LABEL_77;
  }
}

uint64_t sub_1BAB462E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;

  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  sub_1BA4B07F0(0, &qword_1ED3B2A50, type metadata accessor for FeedItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_QWORD *)(type metadata accessor for FormatItemNodeData() - 8);
  v11 = (v8 + v9 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v12 = (*(_QWORD *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  return sub_1BAB4229C(a1, v1[5], (uint64_t)v1 + v8, (uint64_t)v1 + v11, *(_QWORD *)((char *)v1 + v12), (uint64_t)v1 + ((v13 + v12 + 8) & ~v13), v3, v4, v5);
}

void sub_1BAB463CC(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;

  sub_1BB6C3404(v8, a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_1BAB463D4(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  uint64_t v8;

  sub_1BB6C3410(v8, a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1BAB463DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  void *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v2 + 64);
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  v7 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 48) >= 0x11uLL)
        goto LABEL_72;
      goto LABEL_73;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 80) >= 0x11uLL)
        goto LABEL_72;
      goto LABEL_73;
    case 2u:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for FeedBannerAd();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      v77 = v1;
      v80 = v4;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v11 = (int *)type metadata accessor for FeedHeadline(0);
      v12 = v11[10];
      v13 = v7 + v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v15 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

        v16 = v13 + *(int *)(v14 + 28);
        v17 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      v18 = v7 + v11[11];
      v19 = sub_1BB871B24();
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      if (*(_QWORD *)(v7 + v11[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      v1 = v77;
      v4 = v80;
      if (*(_QWORD *)(v7 + v11[13]) >= 3uLL)
        swift_unknownObjectRelease();

      goto LABEL_73;
    case 4u:
      v78 = v1;
      v81 = v4;
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = (int *)type metadata accessor for FeedWebEmbed();
      v22 = v7 + v21[8];
      v23 = sub_1BB86C67C();
      v24 = *(_QWORD *)(v23 - 8);
      v76 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v76(v22, v23);
      v25 = v7 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23))
        v76(v25, v23);
      v75 = v23;
      swift_release();
      swift_release();
      v26 = v7 + v21[12];
      v27 = (int *)type metadata accessor for FeedHeadline(0);
      v4 = v81;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v27 - 1) + 48))(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v28 = v27[10];
        v29 = v26 + v28 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v73 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v29, 1))
        {
          v30 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);

          v76(v29 + *(int *)(v73 + 28), v75);
        }
        v31 = v26 + v27[11];
        v32 = sub_1BB871B24();
        v72 = *(_QWORD *)(v32 - 8);
        v74 = v31;
        v33 = v31;
        v34 = v32;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v33, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v34);
        if (*(_QWORD *)(v26 + v27[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v4 = v81;
        if (*(_QWORD *)(v26 + v27[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v35 = v7 + v21[13];
      v36 = type metadata accessor for WebEmbedDataVisualization();
      v1 = v78;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
        goto LABEL_73;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v37 = type metadata accessor for GenericDataVisualization();
      v76(v35 + *(int *)(v37 + 20), v75);
      goto LABEL_72;
    case 5u:
      goto LABEL_36;
    case 6u:
      v38 = *(unsigned __int8 *)(v7 + 281);
      if (v38 == 2)
        goto LABEL_40;
      if (v38 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v7 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v47 = *(void **)(v7 + 144);
        if (!v47)
          goto LABEL_73;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v7 + 272) < 0x11uLL)
          goto LABEL_73;
LABEL_72:
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      if (*(_BYTE *)(v7 + 281))
        goto LABEL_73;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v7 + 128) >= 0x11uLL)
        goto LABEL_72;
LABEL_73:
      swift_release();
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v6 + ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6), v1);
      return swift_deallocObject();
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 120))
          __swift_destroy_boxed_opaque_existential_1(v7 + 96);
      }
      goto LABEL_73;
    case 8u:
      swift_bridgeObjectRelease();
      v39 = v7 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v39 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v41 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
      {
        v42 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 56))
        __swift_destroy_boxed_opaque_existential_1(v7 + 32);
      if (*(_QWORD *)(v7 + 96))
        __swift_destroy_boxed_opaque_existential_1(v7 + 72);
      if (*(_QWORD *)(v7 + 136))
        __swift_destroy_boxed_opaque_existential_1(v7 + 112);
      goto LABEL_73;
    case 0xAu:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for FeedEngagementBanner();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      if (*(_QWORD *)(v7 + *(int *)(v8 + 32) + 8) < 0x11uLL)
        goto LABEL_73;
      goto LABEL_72;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_73;
    case 0xCu:
      goto LABEL_64;
    case 0xDu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 112))
        __swift_destroy_boxed_opaque_existential_1(v7 + 88);
      if (*(_QWORD *)(v7 + 152))
        __swift_destroy_boxed_opaque_existential_1(v7 + 128);
      goto LABEL_73;
    case 0xEu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_73;
    case 0xFu:
      v82 = v4;
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v7 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v44 = v43 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      v4 = v82;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
            goto LABEL_93;
          break;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          v48 = swift_getEnumCaseMultiPayload();
          v49 = v1;
          if (v48 == 5 || v48 == 4)
          {
            v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v44, 1, v50))
            {
              v51 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v44, v51);
            }
          }
          v52 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v53 = v44 + *(int *)(v52 + 20);
          v54 = swift_getEnumCaseMultiPayload();
          if (v54 == 5 || v54 == 4)
          {
            v55 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v53, 1, v55))
            {
              v56 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v53, v56);
            }
          }
          v44 += *(int *)(v52 + 24);
          v57 = swift_getEnumCaseMultiPayload();
          if (v57 == 5)
          {
            v70 = type metadata accessor for PuzzleStreak();
            v69 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v44, 1, v70);
            v1 = v49;
            goto LABEL_104;
          }
          v1 = v49;
          v4 = v82;
          if (v57 == 4)
          {
LABEL_93:
            v58 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v44, 1, v58))goto LABEL_105;
          }
          break;
        case 2u:
          v59 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v44, 1, v59))
          {
            v60 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v44, v60);
            v61 = type metadata accessor for PuzzleLeaderboardEntry();
            swift_bridgeObjectRelease();
            v62 = v44 + *(int *)(v61 + 24);
            swift_bridgeObjectRelease();
            v63 = *(_QWORD *)(v62 + 24);
            if (v63 >> 60 != 15)
              sub_1BA69D314(*(_QWORD *)(v62 + 16), v63);
            swift_bridgeObjectRelease();
            v4 = v82;
          }
          break;
        case 3u:
          v79 = v1;
          v64 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v65 = v44 + *(int *)(v64 + 24);
          v66 = type metadata accessor for PuzzleStreak();
          v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48);
          if (!v67(v65, 1, v66))
          {
            v68 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v65, v68);
          }
          v44 += *(int *)(v64 + 28);
          v69 = v67(v44, 1, v66);
          v1 = v79;
LABEL_104:
          v4 = v82;
          if (!v69)
          {
LABEL_105:
            v71 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v44, v71);
          }
          break;
        default:
          goto LABEL_73;
      }
      goto LABEL_73;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 240) >= 0x11uLL)
        goto LABEL_72;
      goto LABEL_73;
    default:
      goto LABEL_73;
  }
}

_QWORD *sub_1BAB46F80()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1BAB41E40(v0[5], v0[6], (uint64_t)v0 + v5, *(_QWORD *)((char *)v0 + v6), (uint64_t)v0 + ((v7 + v6 + 8) & ~v7), v1, v2, v3);
}

uint64_t sub_1BAB47004(uint64_t a1)
{
  return sub_1BAB470CC(a1, (uint64_t (*)(uint64_t))sub_1BAB48320);
}

void sub_1BAB47010()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3D2548)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3D2548);
  }
}

uint64_t *sub_1BAB47064(uint64_t *a1)
{
  sub_1BA8E9488(*a1, a1[1]);
  return a1;
}

uint64_t *sub_1BAB47090(uint64_t *a1)
{
  sub_1BA8E94B8(*a1, a1[1]);
  return a1;
}

uint64_t sub_1BAB470C0(uint64_t a1)
{
  return sub_1BAB470CC(a1, (uint64_t (*)(uint64_t))sub_1BAB482F8);
}

uint64_t sub_1BAB470CC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t *v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  v3 = *(_QWORD *)(v2[3] - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1BAB41C20(a1, v2[5], (uint64_t)(v2 + 6), (uint64_t)v2 + v4, *(uint64_t *)((char *)v2 + v5), *(uint64_t *)((char *)v2 + v5 + 8), *(uint64_t *)((char *)v2 + v5 + 16), v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1BAB47130(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1BAB4715C()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BAB47180()
{
  unint64_t TupleTypeMetadata3;
  uint64_t v1;

  if (!qword_1ED3C1520[0])
  {
    type metadata accessor for FormatAdMetricsData();
    sub_1BA4B07F0(255, (unint64_t *)&unk_1ED3C1CA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatFrameNodeLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1)
      atomic_store(TupleTypeMetadata3, qword_1ED3C1520);
  }
}

uint64_t sub_1BAB4720C(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v2);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1BAB47294(uint64_t a1)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 96);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(v2);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB4731C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAB47344()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BAB47368()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int EnumCaseMultiPayload;
  void *v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unsigned int (*v67)(uint64_t, uint64_t, uint64_t);
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = *(_QWORD *)(v1 - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  swift_release();
  swift_release();
  v7 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 48) >= 0x11uLL)
        goto LABEL_72;
      goto LABEL_73;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 80) >= 0x11uLL)
        goto LABEL_72;
      goto LABEL_73;
    case 2u:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for FeedBannerAd();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_1BB8721C0();
      goto LABEL_53;
    case 3u:
      v77 = v1;
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v11 = (int *)type metadata accessor for FeedHeadline(0);
      v12 = v11[10];
      v13 = v7 + v12 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v14 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
      {
        v15 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v13, v15);

        v16 = v13 + *(int *)(v14 + 28);
        v17 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
      }
      v18 = v7 + v11[11];
      v19 = sub_1BB871B24();
      v20 = *(_QWORD *)(v19 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
      if (*(_QWORD *)(v7 + v11[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      v1 = v77;
      if (*(_QWORD *)(v7 + v11[13]) >= 3uLL)
        swift_unknownObjectRelease();

      goto LABEL_73;
    case 4u:
      v78 = v1;
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 = (int *)type metadata accessor for FeedWebEmbed();
      v22 = v7 + v21[8];
      v23 = sub_1BB86C67C();
      v24 = *(_QWORD *)(v23 - 8);
      v76 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v76(v22, v23);
      v25 = v7 + v21[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v25, 1, v23))
        v76(v25, v23);
      v75 = v23;
      swift_release();
      swift_release();
      v26 = v7 + v21[12];
      v27 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v27 - 1) + 48))(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v28 = v27[10];
        v29 = v26 + v28 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v73 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v29, 1))
        {
          v30 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 8))(v29, v30);

          v76(v29 + *(int *)(v73 + 28), v75);
        }
        v31 = v26 + v27[11];
        v32 = sub_1BB871B24();
        v72 = *(_QWORD *)(v32 - 8);
        v74 = v31;
        v33 = v31;
        v34 = v32;
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v33, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v74, v34);
        if (*(_QWORD *)(v26 + v27[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        if (*(_QWORD *)(v26 + v27[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v35 = v7 + v21[13];
      v36 = type metadata accessor for WebEmbedDataVisualization();
      v1 = v78;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
        goto LABEL_73;
      if (swift_getEnumCaseMultiPayload() != 1)
        goto LABEL_55;
      swift_bridgeObjectRelease();
      v37 = type metadata accessor for GenericDataVisualization();
      v76(v35 + *(int *)(v37 + 20), v75);
      goto LABEL_72;
    case 5u:
      goto LABEL_36;
    case 6u:
      v38 = *(unsigned __int8 *)(v7 + 281);
      if (v38 == 2)
        goto LABEL_40;
      if (v38 == 1)
      {

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 80) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v7 + 128) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v47 = *(void **)(v7 + 144);
        if (!v47)
          goto LABEL_73;

        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 224) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

        }
        if (*(_QWORD *)(v7 + 272) < 0x11uLL)
          goto LABEL_73;
LABEL_72:
        swift_bridgeObjectRelease();
        goto LABEL_73;
      }
      if (*(_BYTE *)(v7 + 281))
        goto LABEL_73;
LABEL_36:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v7 + 128) >= 0x11uLL)
        goto LABEL_72;
LABEL_73:
      swift_release();
      swift_release();
      if (*(_QWORD *)(v0 + v4 + 24))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + ((v6 + v4 + 40) & ~v6), v1);
      return swift_deallocObject();
    case 7u:
LABEL_40:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 88) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v7 + 120))
          __swift_destroy_boxed_opaque_existential_1(v7 + 96);
      }
      goto LABEL_73;
    case 8u:
      swift_bridgeObjectRelease();
      v39 = v7 + *(int *)(type metadata accessor for FeedCustomItem() + 20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v39 + *(int *)(type metadata accessor for FormatCustomItem.Resolved() + 24);
      v41 = type metadata accessor for FormatCustomItem.Action();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
      {
        v42 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v40, v42);
      }
      goto LABEL_72;
    case 9u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 56))
        __swift_destroy_boxed_opaque_existential_1(v7 + 32);
      if (*(_QWORD *)(v7 + 96))
        __swift_destroy_boxed_opaque_existential_1(v7 + 72);
      if (*(_QWORD *)(v7 + 136))
        __swift_destroy_boxed_opaque_existential_1(v7 + 112);
      goto LABEL_73;
    case 0xAu:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for FeedEngagementBanner();
      v9 = v7 + *(int *)(v8 + 20);
      v10 = sub_1BB86EDAC();
LABEL_53:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
      if (*(_QWORD *)(v7 + *(int *)(v8 + 32) + 8) < 0x11uLL)
        goto LABEL_73;
      goto LABEL_72;
    case 0xBu:
LABEL_55:
      swift_release();
      goto LABEL_73;
    case 0xCu:
      goto LABEL_64;
    case 0xDu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 112))
        __swift_destroy_boxed_opaque_existential_1(v7 + 88);
      if (*(_QWORD *)(v7 + 152))
        __swift_destroy_boxed_opaque_existential_1(v7 + 128);
      goto LABEL_73;
    case 0xEu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_64:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      goto LABEL_73;
    case 0xFu:
      if (*(_QWORD *)(v7 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = v7 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v44 = v43 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
            goto LABEL_95;
          break;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          v48 = swift_getEnumCaseMultiPayload();
          v49 = v1;
          if (v48 == 5 || v48 == 4)
          {
            v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v44, 1, v50))
            {
              v51 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v44, v51);
            }
          }
          v52 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v53 = v44 + *(int *)(v52 + 20);
          v54 = swift_getEnumCaseMultiPayload();
          if (v54 == 5 || v54 == 4)
          {
            v55 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v53, 1, v55))
            {
              v56 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 8))(v53, v56);
            }
          }
          v44 += *(int *)(v52 + 24);
          v57 = swift_getEnumCaseMultiPayload();
          if (v57 == 5)
          {
            v70 = type metadata accessor for PuzzleStreak();
            v1 = v49;
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v44, 1, v70))goto LABEL_107;
          }
          else
          {
            v1 = v49;
            if (v57 == 4)
            {
LABEL_95:
              v58 = type metadata accessor for PuzzleStreak();
              if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v44, 1, v58))goto LABEL_107;
            }
          }
          break;
        case 2u:
          v59 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v44, 1, v59))
          {
            v60 = sub_1BB86C8B0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 8))(v44, v60);
            v61 = type metadata accessor for PuzzleLeaderboardEntry();
            swift_bridgeObjectRelease();
            v62 = v44 + *(int *)(v61 + 24);
            swift_bridgeObjectRelease();
            v63 = *(_QWORD *)(v62 + 24);
            if (v63 >> 60 != 15)
              sub_1BA69D314(*(_QWORD *)(v62 + 16), v63);
            goto LABEL_72;
          }
          break;
        case 3u:
          v79 = v1;
          v64 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v65 = v44 + *(int *)(v64 + 24);
          v66 = type metadata accessor for PuzzleStreak();
          v67 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48);
          if (!v67(v65, 1, v66))
          {
            v68 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 8))(v65, v68);
          }
          v44 += *(int *)(v64 + 28);
          v69 = v67(v44, 1, v66);
          v1 = v79;
          if (!v69)
          {
LABEL_107:
            v71 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(v44, v71);
          }
          break;
        default:
          goto LABEL_73;
      }
      goto LABEL_73;
    case 0x10u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v7 + 240) >= 0x11uLL)
        goto LABEL_72;
      goto LABEL_73;
    default:
      goto LABEL_73;
  }
}

_QWORD *sub_1BAB47F10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
  v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = (*(_QWORD *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1BAB418DC(v0[5], v0[6], (uint64_t)v0 + v5, (uint64_t)v0 + v6, (uint64_t)v0 + ((v7 + v6 + 40) & ~v7), v1, v2, v3);
}

void sub_1BAB47F90(double a1, double a2)
{
  uint64_t v2;

  sub_1BB6C3340(*(_QWORD *)(v2 + 16), a1, a2, *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48));
}

uint64_t sub_1BAB47FA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  swift_release();
  if (*(_QWORD *)(v0 + 72))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + ((v3 + 88) & ~v3), v1);
  return swift_deallocObject();
}

uint64_t sub_1BAB48030(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[3];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_1BAB41658(a1, v1[5], (uint64_t)(v1 + 6), (uint64_t)v1 + ((v3 + 88) & ~v3), v1[2], v2, v1[4]);
}

uint64_t sub_1BAB48054(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_retain();
    swift_retain();
    return sub_1BA8E9488(a3, a4);
  }
  return result;
}

uint64_t sub_1BAB480B0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (result)
  {
    swift_release();
    swift_release();
    return sub_1BA8E94B8(a3, a4);
  }
  return result;
}

void sub_1BAB48100()
{
  uint64_t v0;

  sub_1BAB41864(v0);
}

uint64_t sub_1BAB48108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BAB48194(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char *v5;

  v2 = v1[3];
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = (char *)v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1BAB413A4(a1, v1[5], (uint64_t)v1 + v4, *(void (**)(char *))v5, *((_QWORD *)v5 + 1), v1[2], v2, v1[4]);
}

uint64_t sub_1BAB481D0(uint64_t a1)
{
  return sub_1BAB470CC(a1, (uint64_t (*)(uint64_t))sub_1BAB482DC);
}

uint64_t sub_1BAB481E0(uint64_t a1)
{
  return sub_1BAB470CC(a1, (uint64_t (*)(uint64_t))sub_1BAB482B8);
}

uint64_t sub_1BAB481EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_retain();
  swift_retain();
  sub_1BA8E9488(v2, v3);
  return a1;
}

uint64_t sub_1BAB48248(uint64_t a1)
{
  return sub_1BAB470CC(a1, (uint64_t (*)(uint64_t))sub_1BAB482AC);
}

uint64_t sub_1BAB48254(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  swift_release();
  swift_release();
  sub_1BA8E94B8(v2, v3);
  return a1;
}

uint64_t sub_1BAB482AC()
{
  return sub_1BAB482C4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAB40FFC);
}

uint64_t sub_1BAB482B8()
{
  return sub_1BAB482C4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAB41134);
}

uint64_t sub_1BAB482C4(uint64_t (*a1)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v1;

  return a1(v1[5], v1[6], v1[7], v1[8], v1[9], v1[2], v1[3], v1[4]);
}

uint64_t sub_1BAB482DC()
{
  return sub_1BAB482C4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAB4126C);
}

uint64_t sub_1BAB482E8()
{
  uint64_t v0;

  return sub_1BAB4172C(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(id *)(v0 + 56));
}

uint64_t sub_1BAB482FC()
{
  uint64_t v0;

  return sub_1BAB41AE8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(id *)(v0 + 56));
}

uint64_t sub_1BAB48320()
{
  return sub_1BAB482C4((uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAB41D08);
}

void sub_1BAB4832C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2B0790)
  {
    type metadata accessor for FeedItem(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2B0790);
  }
}

uint64_t sub_1BAB483C4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v1, 0);
    v2 = v15;
    v4 = *(_QWORD *)(type metadata accessor for FormatCompilerProperty(0) - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      FormatCompilerProperty.identifier.getter();
      v8 = v7;
      v10 = v9;
      v12 = *(_QWORD *)(v15 + 16);
      v11 = *(_QWORD *)(v15 + 24);
      if (v12 >= v11 >> 1)
        sub_1BA7447E8(v11 > 1, v12 + 1, 1);
      *(_QWORD *)(v15 + 16) = v12 + 1;
      v13 = v15 + 16 * v12;
      *(_QWORD *)(v13 + 32) = v8;
      *(_QWORD *)(v13 + 40) = v10;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t FormatSectionDescriptor.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, v11);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v12 = *v4;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v12;
}

uint64_t type metadata accessor for FormatSectionDescriptor()
{
  uint64_t result;

  result = qword_1ED3A7248;
  if (!qword_1ED3A7248)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t FormatSectionDescriptor.slotItems.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v1 = v0;
  v2 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v2);
  v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v5);
  v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BA4C2DD8(v1, (uint64_t)v7, v8);
  sub_1BA5193C4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  type metadata accessor for FormatContent.Resolved();
  v9 = swift_bridgeObjectRetain();
  v10 = sub_1BB13FE50(v9);
  swift_bridgeObjectRelease();
  v11 = sub_1BB140088(v10);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  return v11;
}

uint64_t FormatSectionDescriptor.formatContent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v11;

  v3 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v8, v9);
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v5, a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t FormatSectionDescriptor.hasItemConstrainingHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  _QWORD v58[2];
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;

  sub_1BA6EFB14(0, (unint64_t *)&unk_1ED3CD620, (uint64_t (*)(void))sub_1BA7F6E24, (uint64_t)&type metadata for FormatAsyncImageContent);
  MEMORY[0x1E0C80A78](v1);
  v75 = (char *)v58 - v2;
  sub_1BA6EFB14(0, &qword_1ED3CD630, (uint64_t (*)(void))sub_1BA8378F4, (uint64_t)&type metadata for FormatFont);
  MEMORY[0x1E0C80A78](v3);
  v74 = (char *)v58 - v4;
  sub_1BA68D544(0, (unint64_t *)&qword_1ED3CD5F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED3C44E0, (uint64_t)&protocol conformance descriptor for URL);
  MEMORY[0x1E0C80A78](v5);
  v73 = (char *)v58 - v6;
  sub_1BA68D480(0, &qword_1ED3CD650, MEMORY[0x1E0DEA968], (uint64_t)&protocol witness table for String);
  MEMORY[0x1E0C80A78](v7);
  v72 = (char *)v58 - v8;
  sub_1BA68D480(0, &qword_1ED3CD670, MEMORY[0x1E0DEB418], (uint64_t)&protocol witness table for Int);
  MEMORY[0x1E0C80A78](v9);
  v71 = (char *)v58 - v10;
  sub_1BA6EFB14(0, &qword_1ED3CD610, (uint64_t (*)(void))sub_1BA841CF4, MEMORY[0x1E0DEF040]);
  MEMORY[0x1E0C80A78](v11);
  v70 = (char *)v58 - v12;
  v13 = type metadata accessor for FormatCompilerEnumProperty(0);
  MEMORY[0x1E0C80A78](v13);
  v69 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA68D544(0, (unint64_t *)&qword_1ED3CD600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (unint64_t *)&qword_1ED3C44F0, (uint64_t)&protocol conformance descriptor for Date);
  MEMORY[0x1E0C80A78](v15);
  v68 = (char *)v58 - v16;
  sub_1BA6EFB14(0, &qword_1ED3CD640, (uint64_t (*)(void))sub_1BA7FDD98, (uint64_t)&type metadata for FormatColor);
  MEMORY[0x1E0C80A78](v17);
  v67 = (char *)v58 - v18;
  sub_1BA68D480(0, (unint64_t *)&unk_1ED3CD660, MEMORY[0x1E0DEAFA0], (uint64_t)&protocol witness table for Bool);
  MEMORY[0x1E0C80A78](v19);
  v66 = (char *)v58 - v20;
  v86 = type metadata accessor for FormatCompilerProperty(0);
  v60 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v22 = (char *)v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v26);
  v28 = (char *)v58 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v29);
  v31 = (char *)v58 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v28, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA5193C4((uint64_t)v28, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v32 = *(int *)(v29 + 32);
  v59 = v31;
  v33 = *(_QWORD *)&v31[v32];
  v34 = MEMORY[0x1E0DEE9D8];
  v90 = MEMORY[0x1E0DEE9D8];
  v62 = *(_QWORD *)(v33 + 16);
  if (v62)
  {
    v61 = v33 + 32;
    v58[1] = v33;
    swift_bridgeObjectRetain_n();
    v35 = 0;
    v65 = v22;
    do
    {
      v84 = v35;
      v36 = (uint64_t *)(v61 + 80 * v35);
      v37 = v36[1];
      v83 = *v36;
      v38 = v36[2];
      v39 = v36[3];
      v41 = v36[4];
      v40 = v36[5];
      v43 = v36[6];
      v42 = v36[7];
      v45 = v36[8];
      v44 = v36[9];
      v79 = *(_QWORD *)(v41 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
      sub_1BA6D78DC();
      v81 = v45;
      v77 = v39;
      v78 = v38;
      v76 = v42;
      sub_1BA6D78DC();
      v46 = *(_QWORD *)(v79 + 16);
      v82 = v40;
      v80 = v43;
      v64 = v37;
      v63 = v44;
      if (v46)
      {
        sub_1BA6D78DC();
        sub_1BA6D78DC();
        v88 = MEMORY[0x1E0DEE9D8];
        v47 = v79;
        swift_bridgeObjectRetain();
        sub_1BA7447E8(0, v46, 0);
        v48 = v47 + ((*(unsigned __int8 *)(v60 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80));
        v87 = *(_QWORD *)(v60 + 72);
        v85 = v41;
        sub_1BA4C2DD8(v48, (uint64_t)v22, type metadata accessor for FormatCompilerProperty);
        v49 = (char *)&loc_1BAB48FF8 + 4 * byte_1BB8A1340[swift_getEnumCaseMultiPayload()];
        __asm { BR              X9 }
      }
      sub_1BA6D78DC();
      sub_1BA6D78DC();
      v50 = MEMORY[0x1E0DEE9D8];
      v89 = sub_1BB873060();
      v51 = *(_QWORD *)(v50 + 16);
      if (v51)
      {
        v52 = (uint64_t *)(v50 + 40);
        do
        {
          v53 = *(v52 - 1);
          v54 = *v52;
          swift_bridgeObjectRetain();
          sub_1BA6EE5AC(&v88, v53, v54);
          swift_bridgeObjectRelease();
          v52 += 2;
          --v51;
        }
        while (v51);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      ++v84;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA67FB48(v89);
      v35 = v84;
    }
    while (v84 != v62);
    swift_bridgeObjectRelease_n();
    v34 = v90;
  }
  v55 = sub_1BA6E43EC(v34);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v59, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  v56 = sub_1BA761FE4(0xD000000000000018, 0x80000001BB96D1A0, v55);
  swift_bridgeObjectRelease();
  return v56 & 1;
}

uint64_t sub_1BAB495B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (uint64_t *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v11 = *v4;
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v11;
}

uint64_t static FormatSectionDescriptor.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BAB4A464();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA4C2DD8(a2, v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  return 1;
}

uint64_t sub_1BAB497AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  sub_1BAB4A464();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = (uint64_t)&v6[*(int *)(v7 + 48)];
  sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA4C2DD8(a2, v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA4A2E80(v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  return 1;
}

uint64_t FormatSectionDescriptor.feedLayoutOrder.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v5, v6);
  *a1 = 1;
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t FormatSectionDescriptor.feedGroupKind.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v5, v6);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 6;
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t FormatSectionDescriptor.feedGroupDebug.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v11;

  v3 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v8, v9);
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)&v5[*(int *)(v3 + 24)], a1, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t sub_1BAB49A68@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  *a2 = 1;
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t sub_1BAB49AE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  a2[1] = 0;
  a2[2] = 0;
  *a2 = 6;
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t sub_1BAB49B6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;

  v3 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA5193C4((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)&v5[*(int *)(v3 + 24)], a1, (uint64_t (*)(_QWORD))sub_1BA6CAB30);
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t FormatSectionDescriptor.allowAdjacentAd.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v8;

  v3 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v5, v6);
  *a1 = 3;
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t FormatSectionDescriptor.adGroupKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v3 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v5, v6);
  v7 = *MEMORY[0x1E0D52B60];
  v8 = sub_1BB871C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 104))(a1, v7, v8);
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t FormatSectionDescriptor.tag.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, v11);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v12 = *(_QWORD *)&v4[*(int *)(v2 + 44)];
  swift_unknownObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v12;
}

uint64_t FormatSectionDescriptor.adKeywords.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v14;

  v1 = v0;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, v11);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v12 = *(_QWORD *)&v4[*(int *)(v2 + 24)];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v12;
}

uint64_t FormatSectionDescriptor.allowsPrerollAds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v6;

  v1 = type metadata accessor for FormatSectionDescriptor();
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v0, (uint64_t)v3, v4);
  sub_1BA4A2E80((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  return 1;
}

uint64_t sub_1BAB4A0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v2, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  v6 = *MEMORY[0x1E0D52B60];
  v7 = sub_1BB871C50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(a2, v6, v7);
  return sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
}

uint64_t sub_1BAB4A14C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v11 = *(_QWORD *)&v4[*(int *)(v2 + 44)];
  swift_unknownObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v11;
}

uint64_t sub_1BAB4A290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for FormatPluginData();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(v1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatSectionDescriptor);
  sub_1BA5193C4((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  sub_1BA4C2DD8((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FormatPluginData);
  v11 = *(_QWORD *)&v4[*(int *)(v2 + 24)];
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  return v11;
}

uint64_t sub_1BAB4A3D4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t), unint64_t *a5, uint64_t a6)
{
  uint64_t v8;

  sub_1BA68D544(0, a3, a4, a5, a6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a2, a1, v8);
  return a2;
}

uint64_t sub_1BAB4A428(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), unint64_t *a4, uint64_t a5)
{
  uint64_t v6;

  sub_1BA68D544(0, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  return a1;
}

void sub_1BAB4A464()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AC2C8)
  {
    type metadata accessor for FormatSectionDescriptor();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AC2C8);
  }
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatSectionDescriptor(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  _QWORD *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  int *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(uint64_t *, uint64_t, uint64_t);
  _QWORD *v52;
  uint64_t v53;
  int *v54;
  int EnumCaseMultiPayload;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  unsigned int (*v76)(char *, uint64_t, uint64_t);
  id v77;
  uint64_t v78;
  int *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  void *v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  id v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  void *v98;
  uint64_t v99;
  char *v100;
  uint64_t *v101;
  uint64_t v102;
  id v103;
  char *v105;
  uint64_t v106;
  void (*v107)(char *, char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  char *v112;
  uint64_t v113;
  _QWORD *v114;
  int *v115;
  unsigned int (*v116)(_QWORD *, uint64_t, uint64_t);
  int *v117;
  _QWORD *__dst;
  _QWORD *v119;
  _QWORD *v120;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = (int *)type metadata accessor for FormatContent.Resolved();
    v8 = v7[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86C8B0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(_QWORD *)((char *)v4 + v7[6]) = *(_QWORD *)((char *)a2 + v7[6]);
    *(_QWORD *)((char *)v4 + v7[7]) = *(_QWORD *)((char *)a2 + v7[7]);
    *(_QWORD *)((char *)v4 + v7[8]) = *(_QWORD *)((char *)a2 + v7[8]);
    v13 = a2;
    *(_QWORD *)((char *)v4 + v7[9]) = *(_QWORD *)((char *)a2 + v7[9]);
    *(_QWORD *)((char *)v4 + v7[10]) = *(_QWORD *)((char *)a2 + v7[10]);
    *(_QWORD *)((char *)v4 + v7[11]) = *(_QWORD *)((char *)a2 + v7[11]);
    v14 = v7[12];
    v15 = *(void **)((char *)a2 + v14);
    *(_QWORD *)((char *)v4 + v14) = v15;
    *(_QWORD *)((char *)v4 + v7[13]) = *(_QWORD *)((char *)v13 + v7[13]);
    v114 = v4;
    v115 = v7;
    v16 = v7[14];
    __dst = (_QWORD *)((char *)v4 + v16);
    v120 = v13;
    v119 = (_QWORD *)((char *)v13 + v16);
    v17 = type metadata accessor for FormatWebEmbed.Resolved();
    v18 = *(_QWORD *)(v17 - 8);
    v116 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v18 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v19 = v15;
    swift_unknownObjectRetain();
    if (v116(v119, 1, v17))
    {
      sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v119, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      v21 = v115;
      v22 = v120;
    }
    else
    {
      v109 = v18;
      v24 = v119[1];
      *__dst = *v119;
      __dst[1] = v24;
      v117 = (int *)v17;
      v25 = *(int *)(v17 + 20);
      v26 = (_QWORD *)((char *)__dst + v25);
      v27 = (char *)v119 + v25;
      v28 = *(_QWORD *)((char *)v119 + v25 + 8);
      *v26 = *(_QWORD *)((char *)v119 + v25);
      v26[1] = v28;
      v29 = (int *)type metadata accessor for FormatWebEmbed();
      v30 = v29[5];
      v110 = &v27[v30];
      v112 = (char *)v26 + v30;
      v31 = sub_1BB86C67C();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
      swift_bridgeObjectRetain();
      v34 = v31;
      swift_bridgeObjectRetain();
      v33(v112, v110, v31);
      v35 = v29[6];
      v36 = (char *)v26 + v35;
      v37 = &v27[v35];
      v107 = v33;
      v108 = v34;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v27[v35], 1, v34))
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v33(v36, v37, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v34);
      }
      *(_QWORD *)((char *)v26 + v29[7]) = *(_QWORD *)&v27[v29[7]];
      v39 = v29[8];
      v40 = (_QWORD *)((char *)v26 + v39);
      v41 = &v27[v39];
      v42 = *((_QWORD *)v41 + 1);
      *v40 = *(_QWORD *)v41;
      v40[1] = v42;
      v43 = v29[9];
      v44 = (_QWORD *)((char *)v26 + v43);
      v45 = &v27[v43];
      v46 = *((_QWORD *)v45 + 1);
      *v44 = *(_QWORD *)v45;
      v44[1] = v46;
      *(_QWORD *)((char *)v26 + v29[10]) = *(_QWORD *)&v27[v29[10]];
      *(_QWORD *)((char *)v26 + v29[11]) = *(_QWORD *)&v27[v29[11]];
      *(_QWORD *)((char *)v26 + v29[12]) = *(_QWORD *)&v27[v29[12]];
      *(_QWORD *)((char *)__dst + v117[6]) = *(_QWORD *)((char *)v119 + v117[6]);
      *(_QWORD *)((char *)__dst + v117[7]) = *(_QWORD *)((char *)v119 + v117[7]);
      v47 = v117[8];
      v111 = (_QWORD *)((char *)__dst + v47);
      v48 = (_QWORD *)((char *)v119 + v47);
      v49 = type metadata accessor for WebEmbedDataVisualization();
      v50 = *(_QWORD *)(v49 - 8);
      v51 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v50 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      if (v51(v48, 1, v49))
      {
        v52 = __dst;
        sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v111, v48, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v21 = v115;
        v54 = v117;
        v22 = v120;
        v4 = v114;
      }
      else
      {
        v113 = v50;
        v52 = __dst;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        v56 = *v48;
        v21 = v115;
        v54 = v117;
        v22 = v120;
        v4 = v114;
        if (EnumCaseMultiPayload == 1)
        {
          v106 = v49;
          v57 = v48[1];
          *v111 = v56;
          v111[1] = v57;
          v58 = v48;
          v59 = type metadata accessor for GenericDataVisualization();
          v60 = *(int *)(v59 + 20);
          v61 = (char *)v111 + v60;
          v105 = (char *)v58 + v60;
          v49 = v106;
          swift_bridgeObjectRetain();
          v107(v61, v105, v108);
          *(_QWORD *)((char *)v111 + *(int *)(v59 + 24)) = *(uint64_t *)((char *)v58 + *(int *)(v59 + 24));
          swift_bridgeObjectRetain();
        }
        else
        {
          *v111 = v56;
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v113 + 56))(v111, 0, 1, v49);
      }
      v62 = v54[9];
      v63 = (char *)v52 + v62;
      v64 = (char *)v119 + v62;
      sub_1BA6C5A68();
      v66 = v65;
      v67 = *(_QWORD *)(v65 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48))(v64, 1, v65))
      {
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v63, v64, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v63, v64, v66);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v63, 0, 1, v66);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v109 + 56))(v52, 0, 1, v54);
    }
    v69 = v21[15];
    v70 = *(void **)((char *)v22 + v69);
    *(_QWORD *)((char *)v4 + v69) = v70;
    *((_BYTE *)v4 + v21[16]) = *((_BYTE *)v22 + v21[16]);
    *(_QWORD *)((char *)v4 + v21[17]) = *(_QWORD *)((char *)v22 + v21[17]);
    v71 = v21[18];
    v72 = (char *)v4 + v71;
    v73 = (char *)v22 + v71;
    v74 = sub_1BB871E24();
    v75 = *(_QWORD *)(v74 - 8);
    v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
    v77 = v70;
    swift_bridgeObjectRetain();
    if (v76(v73, 1, v74))
    {
      sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
    }
    v79 = (int *)type metadata accessor for FormatPluginData();
    v80 = v79[5];
    v81 = (char *)v4 + v80;
    v82 = (uint64_t)v22 + v80;
    v83 = *(void **)((char *)v22 + v80);
    *(_QWORD *)v81 = v83;
    *((_DWORD *)v81 + 2) = *(_DWORD *)(v82 + 8);
    v84 = *(_QWORD *)(v82 + 24);
    *((_QWORD *)v81 + 2) = *(_QWORD *)(v82 + 16);
    *((_QWORD *)v81 + 3) = v84;
    v85 = (_QWORD *)(v82 + 32);
    v86 = *(_QWORD *)(v82 + 40);
    v87 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((unint64_t)(v86 - 1) >= 3)
    {
      *((_QWORD *)v81 + 4) = *v85;
      *((_QWORD *)v81 + 5) = v86;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v81 + 2) = *(_OWORD *)v85;
    }
    v81[48] = *(_BYTE *)(v82 + 48);
    v88 = *(void **)(v82 + 56);
    v89 = *(_QWORD *)(v82 + 64);
    *((_QWORD *)v81 + 7) = v88;
    *((_QWORD *)v81 + 8) = v89;
    *((_QWORD *)v81 + 9) = *(_QWORD *)(v82 + 72);
    v90 = v79[6];
    v91 = (char *)v4 + v90;
    v92 = (uint64_t)v120 + v90;
    v93 = *(_QWORD *)((char *)v120 + v90 + 24);
    v94 = v88;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v93)
    {
      v95 = *(_QWORD *)(v92 + 32);
      *((_QWORD *)v91 + 3) = v93;
      *((_QWORD *)v91 + 4) = v95;
      (**(void (***)(char *, uint64_t, uint64_t))(v93 - 8))(v91, v92, v93);
    }
    else
    {
      v96 = *(_OWORD *)(v92 + 16);
      *(_OWORD *)v91 = *(_OWORD *)v92;
      *((_OWORD *)v91 + 1) = v96;
      *((_QWORD *)v91 + 4) = *(_QWORD *)(v92 + 32);
    }
    *((_BYTE *)v4 + v79[7]) = *((_BYTE *)v120 + v79[7]);
    v97 = v79[8];
    v98 = *(void **)((char *)v120 + v97);
    *(_QWORD *)((char *)v4 + v97) = v98;
    *(_QWORD *)((char *)v4 + v79[9]) = *(_QWORD *)((char *)v120 + v79[9]);
    v99 = v79[10];
    v100 = (char *)v4 + v99;
    v101 = (_QWORD *)((char *)v120 + v99);
    v102 = *v101;
    LOBYTE(v101) = *((_BYTE *)v101 + 8);
    *(_QWORD *)v100 = v102;
    v100[8] = (char)v101;
    *((_BYTE *)v4 + v79[11]) = *((_BYTE *)v120 + v79[11]);
    *((_BYTE *)v4 + v79[12]) = *((_BYTE *)v120 + v79[12]);
    v103 = v98;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FormatSectionDescriptor(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  uint64_t v26;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for FormatContent.Resolved();
  v3 = a1 + v2[5];
  v4 = sub_1BB86C8B0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  v5 = a1 + v2[14];
  v6 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v6 - 1) + 48))(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    v7 = v5 + v6[5];
    swift_bridgeObjectRelease();
    v8 = type metadata accessor for FormatWebEmbed();
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1BB86C67C();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v12(v9, v10);
    v13 = v7 + *(int *)(v8 + 24);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10))
      v12(v13, v10);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    v14 = v5 + v6[8];
    v15 = type metadata accessor for WebEmbedDataVisualization();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for GenericDataVisualization();
        v12(v14 + *(int *)(v16 + 20), v10);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_release();
      }
    }
    v17 = v5 + v6[9];
    sub_1BA6C5A68();
    v19 = v18;
    v20 = *(_QWORD *)(v18 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(v17, 1, v18))
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  }

  swift_bridgeObjectRelease();
  v21 = a1 + v2[18];
  v22 = sub_1BB871E24();
  v23 = *(_QWORD *)(v22 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v21, v22);
  v24 = (int *)type metadata accessor for FormatPluginData();
  v25 = a1 + v24[5];

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(v25 + 40) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v26 = a1 + v24[6];
  if (*(_QWORD *)(v26 + 24))
    __swift_destroy_boxed_opaque_existential_1(v26);

  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  int *v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  int *v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  char *v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  char *v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t *, uint64_t, uint64_t);
  int *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned int (*v71)(char *, uint64_t, uint64_t);
  id v72;
  uint64_t v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  id v82;
  void *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  __int128 v91;
  uint64_t v92;
  void *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  id v98;
  char *v100;
  char *v101;
  void (*v102)(char *, char *, uint64_t);
  uint64_t v103;
  _QWORD *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  int *v110;
  unsigned int (*v111)(_QWORD *, uint64_t, int *);
  uint64_t v112;
  void *v113;
  _QWORD *v114;
  _QWORD *__dst;
  _QWORD *v116;
  _QWORD *v117;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for FormatContent.Resolved();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
  *(_QWORD *)((char *)a1 + v5[8]) = *(_QWORD *)((char *)a2 + v5[8]);
  *(_QWORD *)((char *)a1 + v5[9]) = *(_QWORD *)((char *)a2 + v5[9]);
  *(_QWORD *)((char *)a1 + v5[10]) = *(_QWORD *)((char *)a2 + v5[10]);
  *(_QWORD *)((char *)a1 + v5[11]) = *(_QWORD *)((char *)a2 + v5[11]);
  v11 = v5[12];
  v113 = *(void **)((char *)a2 + v11);
  *(_QWORD *)((char *)a1 + v11) = v113;
  *(_QWORD *)((char *)a1 + v5[13]) = *(_QWORD *)((char *)a2 + v5[13]);
  v110 = v5;
  v12 = v5[14];
  __dst = (_QWORD *)((char *)a1 + v12);
  v116 = a1;
  v117 = a2;
  v13 = (_QWORD *)((char *)a2 + v12);
  v14 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v15 = *((_QWORD *)v14 - 1);
  v111 = *(unsigned int (**)(_QWORD *, uint64_t, int *))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v16 = v113;
  swift_unknownObjectRetain();
  if (v111(v13, 1, v14))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    v18 = v110;
    v19 = v117;
    v20 = v116;
  }
  else
  {
    v112 = v15;
    v114 = v13;
    v21 = v13[1];
    *__dst = *v13;
    __dst[1] = v21;
    v22 = v14[5];
    v23 = (_QWORD *)((char *)__dst + v22);
    v24 = (char *)v13 + v22;
    v25 = *(_QWORD *)((char *)v13 + v22 + 8);
    *v23 = *(_QWORD *)((char *)v13 + v22);
    v23[1] = v25;
    v26 = (int *)type metadata accessor for FormatWebEmbed();
    v27 = v26[5];
    v105 = &v24[v27];
    v108 = (char *)v23 + v27;
    v28 = sub_1BB86C67C();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30(v108, v105, v28);
    v31 = v26[6];
    v32 = (char *)v23 + v31;
    v33 = &v24[v31];
    v102 = v30;
    v103 = v28;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(&v24[v31], 1, v28))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      v30(v32, v33, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v32, 0, 1, v28);
    }
    *(_QWORD *)((char *)v23 + v26[7]) = *(_QWORD *)&v24[v26[7]];
    v35 = v26[8];
    v36 = (_QWORD *)((char *)v23 + v35);
    v37 = &v24[v35];
    v106 = *((_QWORD *)v37 + 1);
    *v36 = *(_QWORD *)v37;
    v36[1] = v106;
    v38 = v26[9];
    v39 = (_QWORD *)((char *)v23 + v38);
    v40 = &v24[v38];
    v41 = *((_QWORD *)v40 + 1);
    *v39 = *(_QWORD *)v40;
    v39[1] = v41;
    *(_QWORD *)((char *)v23 + v26[10]) = *(_QWORD *)&v24[v26[10]];
    *(_QWORD *)((char *)v23 + v26[11]) = *(_QWORD *)&v24[v26[11]];
    *(_QWORD *)((char *)v23 + v26[12]) = *(_QWORD *)&v24[v26[12]];
    *(_QWORD *)((char *)__dst + v14[6]) = *(_QWORD *)((char *)v114 + v14[6]);
    *(_QWORD *)((char *)__dst + v14[7]) = *(_QWORD *)((char *)v114 + v14[7]);
    v42 = v14[8];
    v104 = (_QWORD *)((char *)__dst + v42);
    v43 = (_QWORD *)((char *)v114 + v42);
    v44 = type metadata accessor for WebEmbedDataVisualization();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v45 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v46(v43, 1, v44))
    {
      v47 = v14;
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v104, v43, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      v18 = v110;
      v19 = v117;
      v49 = __dst;
      v20 = v116;
      v50 = v114;
    }
    else
    {
      v109 = v45;
      v47 = v14;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v52 = *v43;
      v18 = v110;
      v19 = v117;
      v49 = __dst;
      v20 = v116;
      v50 = v114;
      if (EnumCaseMultiPayload == 1)
      {
        v107 = v44;
        v53 = v43[1];
        *v104 = v52;
        v104[1] = v53;
        v54 = v43;
        v55 = type metadata accessor for GenericDataVisualization();
        v56 = *(int *)(v55 + 20);
        v100 = (char *)v54 + v56;
        v101 = (char *)v104 + v56;
        v44 = v107;
        swift_bridgeObjectRetain();
        v102(v101, v100, v103);
        *(_QWORD *)((char *)v104 + *(int *)(v55 + 24)) = *(uint64_t *)((char *)v54 + *(int *)(v55 + 24));
        swift_bridgeObjectRetain();
      }
      else
      {
        *v104 = v52;
        swift_retain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v104, 0, 1, v44);
    }
    v57 = v47[9];
    v58 = (char *)v49 + v57;
    v59 = (char *)v50 + v57;
    sub_1BA6C5A68();
    v61 = v60;
    v62 = *(_QWORD *)(v60 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v59, 1, v60))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v58, v59, v61);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v58, 0, 1, v61);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v112 + 56))(v49, 0, 1, v47);
  }
  v64 = v18[15];
  v65 = *(void **)((char *)v19 + v64);
  *(_QWORD *)((char *)v20 + v64) = v65;
  *((_BYTE *)v20 + v18[16]) = *((_BYTE *)v19 + v18[16]);
  *(_QWORD *)((char *)v20 + v18[17]) = *(_QWORD *)((char *)v19 + v18[17]);
  v66 = v18[18];
  v67 = (char *)v20 + v66;
  v68 = (char *)v19 + v66;
  v69 = sub_1BB871E24();
  v70 = *(_QWORD *)(v69 - 8);
  v71 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48);
  v72 = v65;
  swift_bridgeObjectRetain();
  if (v71(v68, 1, v69))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v67, v68, *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v67, v68, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v67, 0, 1, v69);
  }
  v74 = (int *)type metadata accessor for FormatPluginData();
  v75 = v74[5];
  v76 = (uint64_t)v20 + v75;
  v77 = (uint64_t)v19 + v75;
  v78 = *(void **)((char *)v19 + v75);
  *(_QWORD *)v76 = v78;
  *(_DWORD *)(v76 + 8) = *(_DWORD *)(v77 + 8);
  v79 = *(_QWORD *)(v77 + 24);
  *(_QWORD *)(v76 + 16) = *(_QWORD *)(v77 + 16);
  *(_QWORD *)(v76 + 24) = v79;
  v80 = (_QWORD *)(v77 + 32);
  v81 = *(_QWORD *)(v77 + 40);
  v82 = v78;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v81 - 1) >= 3)
  {
    *(_QWORD *)(v76 + 32) = *v80;
    *(_QWORD *)(v76 + 40) = v81;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v76 + 32) = *(_OWORD *)v80;
  }
  *(_BYTE *)(v76 + 48) = *(_BYTE *)(v77 + 48);
  v83 = *(void **)(v77 + 56);
  v84 = *(_QWORD *)(v77 + 64);
  *(_QWORD *)(v76 + 56) = v83;
  *(_QWORD *)(v76 + 64) = v84;
  *(_QWORD *)(v76 + 72) = *(_QWORD *)(v77 + 72);
  v85 = v74[6];
  v86 = (char *)v116 + v85;
  v87 = (char *)v117 + v85;
  v88 = *(_QWORD *)((char *)v117 + v85 + 24);
  v89 = v83;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v88)
  {
    v90 = *((_QWORD *)v87 + 4);
    *((_QWORD *)v86 + 3) = v88;
    *((_QWORD *)v86 + 4) = v90;
    (**(void (***)(char *, char *, uint64_t))(v88 - 8))(v86, v87, v88);
  }
  else
  {
    v91 = *((_OWORD *)v87 + 1);
    *(_OWORD *)v86 = *(_OWORD *)v87;
    *((_OWORD *)v86 + 1) = v91;
    *((_QWORD *)v86 + 4) = *((_QWORD *)v87 + 4);
  }
  *((_BYTE *)v116 + v74[7]) = *((_BYTE *)v117 + v74[7]);
  v92 = v74[8];
  v93 = *(void **)((char *)v117 + v92);
  *(_QWORD *)((char *)v116 + v92) = v93;
  *(_QWORD *)((char *)v116 + v74[9]) = *(_QWORD *)((char *)v117 + v74[9]);
  v94 = v74[10];
  v95 = (char *)v116 + v94;
  v96 = (char *)v117 + v94;
  v97 = *(_QWORD *)v96;
  LOBYTE(v96) = v96[8];
  *(_QWORD *)v95 = v97;
  v95[8] = (char)v96;
  *((_BYTE *)v116 + v74[11]) = *((_BYTE *)v117 + v74[11]);
  *((_BYTE *)v116 + v74[12]) = *((_BYTE *)v117 + v74[12]);
  v98 = v93;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v116;
}

_QWORD *assignWithCopy for FormatSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD *, uint64_t, uint64_t);
  int v19;
  int v20;
  uint64_t (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  size_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t (*v49)(void);
  int v50;
  uint64_t v51;
  size_t v52;
  char *v53;
  uint64_t v54;
  _QWORD *v55;
  char *v56;
  uint64_t v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  int *v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  void *v83;
  id v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t (*v90)(char *, uint64_t, uint64_t);
  int v91;
  int v92;
  uint64_t v93;
  int *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  void *v98;
  void *v99;
  id v100;
  unint64_t v101;
  void *v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  uint64_t v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  void *v112;
  void *v113;
  id v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v120;
  _QWORD *v121;
  char *v122;
  uint64_t v123;
  _QWORD *v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t (*v131)(_QWORD *, uint64_t, uint64_t);
  int v132;
  int v133;
  uint64_t (*v134)(uint64_t, uint64_t);
  uint64_t v135;
  int EnumCaseMultiPayload;
  uint64_t v137;
  uint64_t v138;
  void (*v139)(char *, char *, uint64_t);
  int *v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  void (*v144)(char *, char *, uint64_t);
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t (*v151)(char *, uint64_t, uint64_t);
  int v152;
  int v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  void (*__dst)(char *, char *, uint64_t);
  _QWORD *__dsta;
  char *__dstb;
  char *__dstc;
  uint64_t v161;
  _QWORD *v162;
  int *v163;
  uint64_t v164;
  unsigned int (*v165)(_QWORD *, uint64_t, uint64_t);
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  char *__srca;
  void *__src;
  int *__srcb;
  int *__srcc;
  int *v174;
  int *v175;
  _QWORD *v176;
  _QWORD *v177;
  _QWORD *v178;
  _QWORD *v179;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FormatContent.Resolved();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v9 = v4[12];
  v10 = *(void **)((char *)a1 + v9);
  v11 = *(void **)((char *)a2 + v9);
  *(_QWORD *)((char *)a1 + v9) = v11;
  v12 = v11;

  *(_QWORD *)((char *)a1 + v4[13]) = *(_QWORD *)((char *)a2 + v4[13]);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v13 = v4[14];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = type metadata accessor for FormatWebEmbed.Resolved();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v17 + 48);
  v19 = v18(v14, 1, v16);
  v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (v20)
    {
      sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    *v14 = *v15;
    v14[1] = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v175 = (int *)v16;
    v177 = v15;
    v38 = *(int *)(v16 + 20);
    v179 = v14;
    v39 = (_QWORD *)((char *)v14 + v38);
    v40 = (char *)v15 + v38;
    *v39 = *(_QWORD *)((char *)v15 + v38);
    v39[1] = *(_QWORD *)((char *)v15 + v38 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v41 = (int *)type metadata accessor for FormatWebEmbed();
    v42 = v41[5];
    v43 = (char *)v39 + v42;
    v44 = &v40[v42];
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    __dst = *(void (**)(char *, char *, uint64_t))(v46 + 24);
    __dst(v43, v44, v45);
    v47 = v41[6];
    v48 = &v40[v47];
    v161 = v46;
    v49 = *(uint64_t (**)(void))(v46 + 48);
    v167 = (char *)v39 + v47;
    LODWORD(v46) = v49();
    v164 = v45;
    v50 = ((uint64_t (*)(char *, uint64_t, uint64_t))v49)(v48, 1, v45);
    if ((_DWORD)v46)
    {
      if (v50)
      {
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v52 = *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64);
        v53 = v167;
LABEL_20:
        memcpy(v53, v48, v52);
        goto LABEL_51;
      }
      (*(void (**)(char *, char *, uint64_t))(v161 + 16))(v167, v48, v45);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v161 + 56))(v167, 0, 1, v45);
    }
    else
    {
      if (v50)
      {
        (*(void (**)(char *, uint64_t))(v161 + 8))(v167, v45);
        sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v52 = *(_QWORD *)(*(_QWORD *)(v73 - 8) + 64);
        v53 = v167;
        goto LABEL_20;
      }
      __dst(v167, v48, v45);
    }
LABEL_51:
    *(_QWORD *)((char *)v39 + v41[7]) = *(_QWORD *)&v40[v41[7]];
    swift_retain();
    swift_release();
    v120 = v41[8];
    v121 = (_QWORD *)((char *)v39 + v120);
    v122 = &v40[v120];
    *v121 = *(_QWORD *)v122;
    v121[1] = *((_QWORD *)v122 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v123 = v41[9];
    v124 = (_QWORD *)((char *)v39 + v123);
    v125 = &v40[v123];
    *v124 = *(_QWORD *)v125;
    v124[1] = *((_QWORD *)v125 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v39 + v41[10]) = *(_QWORD *)&v40[v41[10]];
    *(_QWORD *)((char *)v39 + v41[11]) = *(_QWORD *)&v40[v41[11]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v39 + v41[12]) = *(_QWORD *)&v40[v41[12]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)((char *)v179 + v175[6]) = *(_QWORD *)((char *)v177 + v175[6]);
    swift_retain();
    swift_release();
    *(_QWORD *)((char *)v179 + v175[7]) = *(_QWORD *)((char *)v177 + v175[7]);
    swift_retain();
    swift_release();
    v126 = v175[8];
    v127 = (_QWORD *)((char *)v179 + v126);
    v128 = (_QWORD *)((char *)v177 + v126);
    v129 = type metadata accessor for WebEmbedDataVisualization();
    v130 = *(_QWORD *)(v129 - 8);
    v131 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(v130 + 48);
    v132 = v131(v127, 1, v129);
    v133 = v131(v128, 1, v129);
    if (v132)
    {
      if (!v133)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v127 = *v128;
        if (EnumCaseMultiPayload == 1)
        {
          v127[1] = v128[1];
          v137 = type metadata accessor for GenericDataVisualization();
          v138 = *(int *)(v137 + 20);
          v168 = (char *)v127 + v138;
          __srcb = (int *)v137;
          __dstb = (char *)v128 + v138;
          v139 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
          swift_bridgeObjectRetain();
          v139(v168, __dstb, v164);
          *(_QWORD *)((char *)v127 + __srcb[6]) = *(_QWORD *)((char *)v128 + __srcb[6]);
          swift_bridgeObjectRetain();
        }
        else
        {
          swift_retain();
        }
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
        goto LABEL_65;
      }
      v134 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    else
    {
      if (!v133)
      {
        v140 = v175;
        if (a1 != a2)
        {
          sub_1BA4A2E80((uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
          v141 = swift_getEnumCaseMultiPayload();
          *v127 = *v128;
          if (v141 == 1)
          {
            v127[1] = v128[1];
            v142 = type metadata accessor for GenericDataVisualization();
            v143 = *(int *)(v142 + 20);
            v169 = (char *)v127 + v143;
            __srcc = (int *)v142;
            __dstc = (char *)v128 + v143;
            v144 = *(void (**)(char *, char *, uint64_t))(v161 + 16);
            swift_bridgeObjectRetain();
            v144(v169, __dstc, v164);
            *(_QWORD *)((char *)v127 + __srcc[6]) = *(_QWORD *)((char *)v128 + __srcc[6]);
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_66:
        v145 = v140[9];
        v146 = (char *)v179 + v145;
        v147 = (char *)v177 + v145;
        sub_1BA6C5A68();
        v149 = v148;
        v150 = *(_QWORD *)(v148 - 8);
        v151 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v150 + 48);
        v152 = v151(v146, 1, v148);
        v153 = v151(v147, 1, v149);
        if (v152)
        {
          if (!v153)
          {
            (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v146, v147, v149);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v150 + 56))(v146, 0, 1, v149);
            goto LABEL_27;
          }
        }
        else
        {
          if (!v153)
          {
            (*(void (**)(char *, char *, uint64_t))(v150 + 24))(v146, v147, v149);
            goto LABEL_27;
          }
          (*(void (**)(char *, uint64_t))(v150 + 8))(v146, v149);
        }
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v23 = *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64);
        v24 = v146;
        v25 = v147;
        goto LABEL_7;
      }
      sub_1BA4A2E80((uint64_t)v127, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v134 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
    }
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v134);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
LABEL_65:
    v140 = v175;
    goto LABEL_66;
  }
  if (v20)
  {
    v21 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v21);
    v23 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64);
    v24 = (char *)v14;
    v25 = (char *)v15;
LABEL_7:
    memcpy(v24, v25, v23);
    goto LABEL_27;
  }
  v163 = v4;
  v156 = v17;
  *v14 = *v15;
  v14[1] = v15[1];
  v174 = (int *)v16;
  v176 = v15;
  v26 = *(int *)(v16 + 20);
  v178 = v14;
  v27 = (_QWORD *)((char *)v14 + v26);
  v28 = (char *)v15 + v26;
  *v27 = *(_QWORD *)((char *)v15 + v26);
  v27[1] = *(_QWORD *)((char *)v15 + v26 + 8);
  v29 = (int *)type metadata accessor for FormatWebEmbed();
  v30 = v29[5];
  v166 = &v28[v30];
  __srca = (char *)v27 + v30;
  v31 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(void (**)(char *, char *, uint64_t))(v32 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(__srca, v166, v31);
  v34 = v29[6];
  v35 = (char *)v27 + v34;
  v36 = &v28[v34];
  v155 = v31;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v28[v34], 1, v31))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v33(v35, v36, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
  }
  v4 = v163;
  *(_QWORD *)((char *)v27 + v29[7]) = *(_QWORD *)&v28[v29[7]];
  v54 = v29[8];
  v55 = (_QWORD *)((char *)v27 + v54);
  v56 = &v28[v54];
  *v55 = *(_QWORD *)v56;
  v55[1] = *((_QWORD *)v56 + 1);
  v57 = v29[9];
  v58 = (_QWORD *)((char *)v27 + v57);
  v59 = &v28[v57];
  *v58 = *(_QWORD *)v59;
  v58[1] = *((_QWORD *)v59 + 1);
  *(_QWORD *)((char *)v27 + v29[10]) = *(_QWORD *)&v28[v29[10]];
  *(_QWORD *)((char *)v27 + v29[11]) = *(_QWORD *)&v28[v29[11]];
  *(_QWORD *)((char *)v27 + v29[12]) = *(_QWORD *)&v28[v29[12]];
  *(_QWORD *)((char *)v178 + v174[6]) = *(_QWORD *)((char *)v176 + v174[6]);
  *(_QWORD *)((char *)v178 + v174[7]) = *(_QWORD *)((char *)v176 + v174[7]);
  v60 = v174[8];
  __dsta = (_QWORD *)((char *)v178 + v60);
  v162 = (_QWORD *)((char *)v176 + v60);
  v61 = type metadata accessor for WebEmbedDataVisualization();
  v62 = *(_QWORD **)(v61 - 8);
  v165 = (unsigned int (*)(_QWORD *, uint64_t, uint64_t))v62[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  if (v165(v162, 1, v61))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dsta, v162, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
    v65 = v176;
    v64 = v178;
    v66 = v174;
    v67 = v156;
  }
  else
  {
    __src = v62;
    v68 = swift_getEnumCaseMultiPayload();
    *__dsta = *v162;
    if (v68 == 1)
    {
      __dsta[1] = v162[1];
      v69 = type metadata accessor for GenericDataVisualization();
      v70 = *(int *)(v69 + 20);
      v71 = (char *)__dsta + v70;
      v72 = (char *)v162 + v70;
      swift_bridgeObjectRetain();
      v33(v71, v72, v155);
      *(_QWORD *)((char *)__dsta + *(int *)(v69 + 24)) = *(_QWORD *)((char *)v162 + *(int *)(v69 + 24));
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_retain();
    }
    v66 = v174;
    v65 = v176;
    v67 = v156;
    swift_storeEnumTagMultiPayload();
    (*((void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))__src + 7))(__dsta, 0, 1, v61);
    v64 = v178;
  }
  v74 = v66[9];
  v75 = (char *)v64 + v74;
  v76 = (char *)v65 + v74;
  sub_1BA6C5A68();
  v78 = v77;
  v79 = *(_QWORD *)(v77 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48))(v76, 1, v77))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v75, v76, *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v75, v76, v78);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v79 + 56))(v75, 0, 1, v78);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v67 + 56))(v178, 0, 1, v66);
LABEL_27:
  v81 = v4[15];
  v82 = *(void **)((char *)a1 + v81);
  v83 = *(void **)((char *)a2 + v81);
  *(_QWORD *)((char *)a1 + v81) = v83;
  v84 = v83;

  *((_BYTE *)a1 + v4[16]) = *((_BYTE *)a2 + v4[16]);
  *(_QWORD *)((char *)a1 + v4[17]) = *(_QWORD *)((char *)a2 + v4[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v85 = v4[18];
  v86 = (char *)a1 + v85;
  v87 = (char *)a2 + v85;
  v88 = sub_1BB871E24();
  v89 = *(_QWORD *)(v88 - 8);
  v90 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v89 + 48);
  v91 = v90(v86, 1, v88);
  v92 = v90(v87, 1, v88);
  if (v91)
  {
    if (!v92)
    {
      (*(void (**)(char *, char *, uint64_t))(v89 + 16))(v86, v87, v88);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v89 + 56))(v86, 0, 1, v88);
      goto LABEL_33;
    }
    goto LABEL_32;
  }
  if (v92)
  {
    (*(void (**)(char *, uint64_t))(v89 + 8))(v86, v88);
LABEL_32:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v89 + 24))(v86, v87, v88);
LABEL_33:
  v94 = (int *)type metadata accessor for FormatPluginData();
  v95 = v94[5];
  v96 = (char *)a1 + v95;
  v97 = (char *)a2 + v95;
  v98 = *(void **)((char *)a2 + v95);
  v99 = *(void **)v96;
  *(_QWORD *)v96 = v98;
  v100 = v98;

  v96[8] = v97[8];
  v96[9] = v97[9];
  v96[10] = v97[10];
  v96[11] = v97[11];
  *((_QWORD *)v96 + 2) = *((_QWORD *)v97 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v96 + 3) = *((_QWORD *)v97 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v101 = *((_QWORD *)v97 + 5) - 1;
  if ((unint64_t)(*((_QWORD *)v96 + 5) - 1) < 3)
  {
    if (v101 >= 3)
    {
      *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
      *((_QWORD *)v96 + 5) = *((_QWORD *)v97 + 5);
      swift_bridgeObjectRetain();
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  if (v101 < 3)
  {
    sub_1BA4A2E80((uint64_t)(v96 + 32), (uint64_t (*)(_QWORD))sub_1BA76D834);
LABEL_38:
    *((_OWORD *)v96 + 2) = *((_OWORD *)v97 + 2);
    goto LABEL_40;
  }
  *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
  *((_QWORD *)v96 + 5) = *((_QWORD *)v97 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_40:
  v96[48] = v97[48];
  v102 = (void *)*((_QWORD *)v96 + 7);
  v103 = (void *)*((_QWORD *)v97 + 7);
  *((_QWORD *)v96 + 7) = v103;
  v104 = v103;

  *((_QWORD *)v96 + 8) = *((_QWORD *)v97 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v96 + 9) = *((_QWORD *)v97 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v105 = v94[6];
  v106 = (uint64_t)a1 + v105;
  v107 = (char *)a2 + v105;
  v108 = *(_QWORD *)((char *)a2 + v105 + 24);
  if (!*(_QWORD *)((char *)a1 + v105 + 24))
  {
    if (v108)
    {
      *(_QWORD *)(v106 + 24) = v108;
      *(_QWORD *)(v106 + 32) = *((_QWORD *)v107 + 4);
      (**(void (***)(uint64_t, char *))(v108 - 8))(v106, v107);
      goto LABEL_47;
    }
LABEL_46:
    v109 = *(_OWORD *)v107;
    v110 = *((_OWORD *)v107 + 1);
    *(_QWORD *)(v106 + 32) = *((_QWORD *)v107 + 4);
    *(_OWORD *)v106 = v109;
    *(_OWORD *)(v106 + 16) = v110;
    goto LABEL_47;
  }
  if (!v108)
  {
    __swift_destroy_boxed_opaque_existential_1(v106);
    goto LABEL_46;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v106, (uint64_t *)v107);
LABEL_47:
  *((_BYTE *)a1 + v94[7]) = *((_BYTE *)a2 + v94[7]);
  v111 = v94[8];
  v112 = *(void **)((char *)a1 + v111);
  v113 = *(void **)((char *)a2 + v111);
  *(_QWORD *)((char *)a1 + v111) = v113;
  v114 = v113;

  *(_QWORD *)((char *)a1 + v94[9]) = *(_QWORD *)((char *)a2 + v94[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v115 = v94[10];
  v116 = (char *)a1 + v115;
  v117 = (char *)a2 + v115;
  v118 = *(_QWORD *)v117;
  LOBYTE(v117) = v117[8];
  *(_QWORD *)v116 = v118;
  v116[8] = (char)v117;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v94[11]) = *((_BYTE *)a2 + v94[11]);
  *((_BYTE *)a1 + v94[12]) = *((_BYTE *)a2 + v94[12]);
  return a1;
}

_OWORD *initializeWithTake for FormatSectionDescriptor(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  char *v17;
  int *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  __int128 v56;
  uint64_t v57;
  char *v58;
  char *v59;
  void (*v61)(char *, char *, uint64_t);
  _OWORD *v62;
  uint64_t v63;
  _OWORD *v64;
  char *__dsta;
  char *__dst;
  int *v67;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for FormatContent.Resolved();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  *(_QWORD *)((char *)a1 + v4[10]) = *(_QWORD *)((char *)a2 + v4[10]);
  *(_QWORD *)((char *)a1 + v4[11]) = *(_QWORD *)((char *)a2 + v4[11]);
  *(_QWORD *)((char *)a1 + v4[12]) = *(_QWORD *)((char *)a2 + v4[12]);
  *(_QWORD *)((char *)a1 + v4[13]) = *(_QWORD *)((char *)a2 + v4[13]);
  v9 = v4[14];
  v10 = (_OWORD *)((char *)a1 + v9);
  v11 = (_OWORD *)((char *)a2 + v9);
  v12 = type metadata accessor for FormatWebEmbed.Resolved();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v63 = v13;
    v64 = v10;
    *v10 = *v11;
    v67 = (int *)v12;
    v15 = *(int *)(v12 + 20);
    v16 = (_OWORD *)((char *)v10 + v15);
    v62 = v11;
    v17 = (char *)v11 + v15;
    *v16 = *(_OWORD *)((char *)v11 + v15);
    v18 = (int *)type metadata accessor for FormatWebEmbed();
    v19 = v18[5];
    __dsta = (char *)v16 + v19;
    v20 = &v17[v19];
    v21 = sub_1BB86C67C();
    v22 = *(_QWORD *)(v21 - 8);
    v23 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
    v23(__dsta, v20, v21);
    v24 = v18[6];
    __dst = (char *)v16 + v24;
    v25 = &v17[v24];
    v61 = v23;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(&v17[v24], 1, v21))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v23(__dst, v25, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(_QWORD *)((char *)v16 + v18[7]) = *(_QWORD *)&v17[v18[7]];
    *(_OWORD *)((char *)v16 + v18[8]) = *(_OWORD *)&v17[v18[8]];
    *(_OWORD *)((char *)v16 + v18[9]) = *(_OWORD *)&v17[v18[9]];
    *(_QWORD *)((char *)v16 + v18[10]) = *(_QWORD *)&v17[v18[10]];
    *(_QWORD *)((char *)v16 + v18[11]) = *(_QWORD *)&v17[v18[11]];
    *(_QWORD *)((char *)v16 + v18[12]) = *(_QWORD *)&v17[v18[12]];
    *(_QWORD *)((char *)v64 + v67[6]) = *(_QWORD *)((char *)v62 + v67[6]);
    *(_QWORD *)((char *)v64 + v67[7]) = *(_QWORD *)((char *)v62 + v67[7]);
    v27 = v67[8];
    v28 = (_OWORD *)((char *)v64 + v27);
    v29 = (_OWORD *)((char *)v62 + v27);
    v30 = type metadata accessor for WebEmbedDataVisualization();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v28 = *v29;
        v33 = type metadata accessor for GenericDataVisualization();
        v61((char *)v28 + *(int *)(v33 + 20), (char *)v29 + *(int *)(v33 + 20), v21);
        *(_QWORD *)((char *)v28 + *(int *)(v33 + 24)) = *(_QWORD *)((char *)v29 + *(int *)(v33 + 24));
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v28, v29, *(_QWORD *)(v31 + 64));
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v34 = v67[9];
    v35 = (char *)v64 + v34;
    v36 = (char *)v62 + v34;
    sub_1BA6C5A68();
    v38 = v37;
    v39 = *(_QWORD *)(v37 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v36, 1, v37))
    {
      sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v36, v38);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v63 + 56))(v64, 0, 1, v67);
  }
  *(_QWORD *)((char *)a1 + v4[15]) = *(_QWORD *)((char *)a2 + v4[15]);
  *((_BYTE *)a1 + v4[16]) = *((_BYTE *)a2 + v4[16]);
  *(_QWORD *)((char *)a1 + v4[17]) = *(_QWORD *)((char *)a2 + v4[17]);
  v41 = v4[18];
  v42 = (char *)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = sub_1BB871E24();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v47 = (int *)type metadata accessor for FormatPluginData();
  v48 = v47[5];
  v49 = (_OWORD *)((char *)a1 + v48);
  v50 = (_OWORD *)((char *)a2 + v48);
  v51 = v50[3];
  v49[2] = v50[2];
  v49[3] = v51;
  v49[4] = v50[4];
  v52 = v50[1];
  *v49 = *v50;
  v49[1] = v52;
  v53 = v47[6];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v56;
  *((_QWORD *)v54 + 4) = *((_QWORD *)v55 + 4);
  *((_BYTE *)a1 + v47[7]) = *((_BYTE *)a2 + v47[7]);
  *(_QWORD *)((char *)a1 + v47[8]) = *(_QWORD *)((char *)a2 + v47[8]);
  *(_QWORD *)((char *)a1 + v47[9]) = *(_QWORD *)((char *)a2 + v47[9]);
  v57 = v47[10];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  v58[8] = v59[8];
  *((_BYTE *)a1 + v47[11]) = *((_BYTE *)a2 + v47[11]);
  *((_BYTE *)a1 + v47[12]) = *((_BYTE *)a2 + v47[12]);
  return a1;
}

_QWORD *assignWithTake for FormatSectionDescriptor(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  int *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD *, uint64_t, int *);
  int v18;
  int v19;
  uint64_t (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  size_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  _OWORD *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t (*v50)(char *, uint64_t, uint64_t);
  int v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _OWORD *v72;
  _OWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_OWORD *, uint64_t, uint64_t);
  int v77;
  int v78;
  uint64_t (*v79)(uint64_t, uint64_t);
  uint64_t v80;
  size_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t (*v96)(char *, uint64_t, uint64_t);
  int v97;
  int v98;
  uint64_t v99;
  int *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  void *v104;
  _OWORD *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  char *v109;
  __int128 v110;
  uint64_t v111;
  void *v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t (*v126)(char *, uint64_t, uint64_t);
  int v127;
  int v128;
  uint64_t v129;
  void (*v130)(char *, char *, uint64_t);
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  int *v133;
  uint64_t v134;
  uint64_t v135;
  int *v136;
  char *__dstb;
  char *__dst;
  char *__dstc;
  char *__dsta;
  _QWORD *v141;
  _QWORD *v142;
  _QWORD *v143;
  _QWORD *v144;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for FormatContent.Resolved();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[8]) = *(_QWORD *)((char *)a2 + v5[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[9]) = *(_QWORD *)((char *)a2 + v5[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[10]) = *(_QWORD *)((char *)a2 + v5[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v5[11]) = *(_QWORD *)((char *)a2 + v5[11]);
  swift_unknownObjectRelease();
  v10 = v5[12];
  v11 = *(void **)((char *)a1 + v10);
  *(_QWORD *)((char *)a1 + v10) = *(_QWORD *)((char *)a2 + v10);

  *(_QWORD *)((char *)a1 + v5[13]) = *(_QWORD *)((char *)a2 + v5[13]);
  swift_unknownObjectRelease();
  v12 = v5[14];
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = (int *)type metadata accessor for FormatWebEmbed.Resolved();
  v16 = *((_QWORD *)v15 - 1);
  v17 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (v19)
    {
      sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for FormatWebEmbed.Resolved);
      v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
      goto LABEL_6;
    }
    v37 = v14[1];
    *v13 = *v14;
    v13[1] = v37;
    swift_bridgeObjectRelease();
    v38 = v15[5];
    v142 = v13;
    v144 = v14;
    v39 = (char *)v13 + v38;
    v40 = (char *)v14 + v38;
    v41 = *(_QWORD *)((char *)v14 + v38 + 8);
    *(_QWORD *)v39 = *(_QWORD *)((char *)v14 + v38);
    *((_QWORD *)v39 + 1) = v41;
    swift_bridgeObjectRelease();
    v42 = type metadata accessor for FormatWebEmbed();
    v43 = *(int *)(v42 + 20);
    __dstc = &v39[v43];
    v44 = &v40[v43];
    v45 = sub_1BB86C67C();
    v46 = *(_QWORD *)(v45 - 8);
    v130 = *(void (**)(char *, char *, uint64_t))(v46 + 40);
    v130(__dstc, v44, v45);
    v136 = (int *)v42;
    __dsta = v40;
    v47 = *(int *)(v42 + 24);
    v48 = &v39[v47];
    v49 = &v40[v47];
    v132 = v46;
    v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
    LODWORD(v40) = v50(&v39[v47], 1, v45);
    v134 = v45;
    v51 = v50(v49, 1, v45);
    if ((_DWORD)v40)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v48, v49, v45);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v132 + 56))(v48, 0, 1, v45);
        goto LABEL_21;
      }
    }
    else
    {
      if (!v51)
      {
        v130(v48, v49, v45);
LABEL_21:
        *(_QWORD *)&v39[v136[7]] = *(_QWORD *)&__dsta[v136[7]];
        swift_release();
        v61 = v136[8];
        v62 = &v39[v61];
        v63 = &__dsta[v61];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = v65;
        *((_QWORD *)v62 + 1) = v64;
        swift_bridgeObjectRelease();
        v66 = v136[9];
        v67 = &v39[v66];
        v68 = &__dsta[v66];
        v70 = *(_QWORD *)v68;
        v69 = *((_QWORD *)v68 + 1);
        *(_QWORD *)v67 = v70;
        *((_QWORD *)v67 + 1) = v69;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v39[v136[10]] = *(_QWORD *)&__dsta[v136[10]];
        *(_QWORD *)&v39[v136[11]] = *(_QWORD *)&__dsta[v136[11]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&v39[v136[12]] = *(_QWORD *)&__dsta[v136[12]];
        swift_bridgeObjectRelease();
        *(_QWORD *)((char *)v142 + v15[6]) = *(_QWORD *)((char *)v144 + v15[6]);
        swift_release();
        *(_QWORD *)((char *)v142 + v15[7]) = *(_QWORD *)((char *)v144 + v15[7]);
        swift_release();
        v71 = v15[8];
        v72 = (_OWORD *)((char *)v142 + v71);
        v73 = (_OWORD *)((char *)v144 + v71);
        v74 = type metadata accessor for WebEmbedDataVisualization();
        v75 = *(_QWORD *)(v74 - 8);
        v76 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v75 + 48);
        v77 = v76(v72, 1, v74);
        v78 = v76(v73, 1, v74);
        if (v77)
        {
          if (v78)
          {
            v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_26:
            sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, v79);
            v81 = *(_QWORD *)(*(_QWORD *)(v80 - 8) + 64);
LABEL_27:
            memcpy(v72, v73, v81);
            goto LABEL_57;
          }
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *v72 = *v73;
            v118 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v132 + 32))((char *)v72 + *(int *)(v118 + 20), (char *)v73 + *(int *)(v118 + 20), v134);
            *(_QWORD *)((char *)v72 + *(int *)(v118 + 24)) = *(_QWORD *)((char *)v73 + *(int *)(v118 + 24));
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v72, v73, *(_QWORD *)(v75 + 64));
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
        }
        else
        {
          if (v78)
          {
            sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            v79 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
            goto LABEL_26;
          }
          if (a1 != a2)
          {
            sub_1BA4A2E80((uint64_t)v72, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
            if (swift_getEnumCaseMultiPayload() != 1)
            {
              v81 = *(_QWORD *)(v75 + 64);
              goto LABEL_27;
            }
            *v72 = *v73;
            v119 = type metadata accessor for GenericDataVisualization();
            (*(void (**)(char *, char *, uint64_t))(v132 + 32))((char *)v72 + *(int *)(v119 + 20), (char *)v73 + *(int *)(v119 + 20), v134);
            *(_QWORD *)((char *)v72 + *(int *)(v119 + 24)) = *(_QWORD *)((char *)v73 + *(int *)(v119 + 24));
            swift_storeEnumTagMultiPayload();
          }
        }
LABEL_57:
        v120 = v15[9];
        v121 = (char *)v142 + v120;
        v122 = (char *)v144 + v120;
        sub_1BA6C5A68();
        v124 = v123;
        v125 = *(_QWORD *)(v123 - 8);
        v126 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v125 + 48);
        v127 = v126(v121, 1, v123);
        v128 = v126(v122, 1, v124);
        if (v127)
        {
          if (!v128)
          {
            (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v121, v122, v124);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v121, 0, 1, v124);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v128)
          {
            (*(void (**)(char *, char *, uint64_t))(v125 + 40))(v121, v122, v124);
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v125 + 8))(v121, v124);
        }
        sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        v22 = *(_QWORD *)(*(_QWORD *)(v129 - 8) + 64);
        v23 = v121;
        v24 = v122;
        goto LABEL_7;
      }
      (*(void (**)(char *, uint64_t))(v132 + 8))(v48, v45);
    }
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_21;
  }
  if (v19)
  {
    v20 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
LABEL_6:
    sub_1BA4B07F0(0, &qword_1ED3D54C0, (uint64_t (*)(uint64_t))type metadata accessor for FormatWebEmbed.Resolved, v20);
    v22 = *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64);
    v23 = (char *)v13;
    v24 = (char *)v14;
LABEL_7:
    memcpy(v23, v24, v22);
    goto LABEL_34;
  }
  v133 = v15;
  v135 = v16;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v25 = v15[5];
  v141 = v13;
  v143 = v14;
  v26 = (_OWORD *)((char *)v13 + v25);
  v27 = (char *)v14 + v25;
  *v26 = *(_OWORD *)((char *)v14 + v25);
  v28 = (int *)type metadata accessor for FormatWebEmbed();
  v29 = v28[5];
  __dstb = (char *)v26 + v29;
  v30 = &v27[v29];
  v31 = sub_1BB86C67C();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
  v33(__dstb, v30, v31);
  v34 = v28[6];
  __dst = (char *)v26 + v34;
  v35 = &v27[v34];
  v131 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&v27[v34], 1, v31))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(__dst, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v33(__dst, v35, v31);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(__dst, 0, 1, v31);
  }
  *(_QWORD *)((char *)v26 + v28[7]) = *(_QWORD *)&v27[v28[7]];
  *(_OWORD *)((char *)v26 + v28[8]) = *(_OWORD *)&v27[v28[8]];
  *(_OWORD *)((char *)v26 + v28[9]) = *(_OWORD *)&v27[v28[9]];
  *(_QWORD *)((char *)v26 + v28[10]) = *(_QWORD *)&v27[v28[10]];
  *(_QWORD *)((char *)v26 + v28[11]) = *(_QWORD *)&v27[v28[11]];
  *(_QWORD *)((char *)v26 + v28[12]) = *(_QWORD *)&v27[v28[12]];
  *(_QWORD *)((char *)v141 + v133[6]) = *(_QWORD *)((char *)v143 + v133[6]);
  *(_QWORD *)((char *)v141 + v133[7]) = *(_QWORD *)((char *)v143 + v133[7]);
  v52 = v133[8];
  v53 = (_OWORD *)((char *)v141 + v52);
  v54 = (_OWORD *)((char *)v143 + v52);
  v55 = type metadata accessor for WebEmbedDataVisualization();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    sub_1BA4B07F0(0, &qword_1ED3CB5E0, (uint64_t (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    v58 = v141;
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v53 = *v54;
      v59 = type metadata accessor for GenericDataVisualization();
      v131((char *)v53 + *(int *)(v59 + 20), (char *)v54 + *(int *)(v59 + 20), v31);
      *(_QWORD *)((char *)v53 + *(int *)(v59 + 24)) = *(_QWORD *)((char *)v54 + *(int *)(v59 + 24));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v53, v54, *(_QWORD *)(v56 + 64));
    }
    v58 = v141;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  v82 = v133[9];
  v83 = (char *)v58 + v82;
  v84 = (char *)v143 + v82;
  sub_1BA6C5A68();
  v86 = v85;
  v87 = *(_QWORD *)(v85 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v84, 1, v85))
  {
    sub_1BA4B07F0(0, &qword_1ED3D2C50, (uint64_t (*)(uint64_t))sub_1BA6C5A68, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v83, v84, v86);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v83, 0, 1, v86);
  }
  (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v135 + 56))(v58, 0, 1, v133);
LABEL_34:
  v89 = v5[15];
  v90 = *(void **)((char *)a1 + v89);
  *(_QWORD *)((char *)a1 + v89) = *(_QWORD *)((char *)a2 + v89);

  *((_BYTE *)a1 + v5[16]) = *((_BYTE *)a2 + v5[16]);
  *(_QWORD *)((char *)a1 + v5[17]) = *(_QWORD *)((char *)a2 + v5[17]);
  swift_bridgeObjectRelease();
  v91 = v5[18];
  v92 = (char *)a1 + v91;
  v93 = (char *)a2 + v91;
  v94 = sub_1BB871E24();
  v95 = *(_QWORD *)(v94 - 8);
  v96 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v95 + 48);
  v97 = v96(v92, 1, v94);
  v98 = v96(v93, 1, v94);
  if (v97)
  {
    if (!v98)
    {
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v92, v93, v94);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v95 + 56))(v92, 0, 1, v94);
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  if (v98)
  {
    (*(void (**)(char *, uint64_t))(v95 + 8))(v92, v94);
LABEL_39:
    sub_1BA4B07F0(0, &qword_1ED3C20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52E40], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v92, v93, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(v95 + 40))(v92, v93, v94);
LABEL_40:
  v100 = (int *)type metadata accessor for FormatPluginData();
  v101 = v100[5];
  v102 = (char *)a1 + v101;
  v103 = (char *)a2 + v101;
  v104 = *(void **)((char *)a1 + v101);
  *(_QWORD *)((char *)a1 + v101) = *(_QWORD *)((char *)a2 + v101);

  v102[8] = v103[8];
  v102[9] = v103[9];
  v102[10] = v103[10];
  v102[11] = v103[11];
  *((_QWORD *)v102 + 2) = *((_QWORD *)v103 + 2);
  swift_bridgeObjectRelease();
  *((_QWORD *)v102 + 3) = *((_QWORD *)v103 + 3);
  swift_bridgeObjectRelease();
  v105 = v103 + 32;
  if ((unint64_t)(*((_QWORD *)v102 + 5) - 1) < 3)
  {
LABEL_43:
    *((_OWORD *)v102 + 2) = *v105;
    goto LABEL_45;
  }
  v106 = *((_QWORD *)v103 + 5);
  if ((unint64_t)(v106 - 1) < 3)
  {
    sub_1BA4A2E80((uint64_t)(v102 + 32), (uint64_t (*)(_QWORD))sub_1BA76D834);
    goto LABEL_43;
  }
  *((_QWORD *)v102 + 4) = *(_QWORD *)v105;
  *((_QWORD *)v102 + 5) = v106;
  swift_bridgeObjectRelease();
LABEL_45:
  v102[48] = v103[48];
  v107 = (void *)*((_QWORD *)v102 + 7);
  *((_QWORD *)v102 + 7) = *((_QWORD *)v103 + 7);

  *((_QWORD *)v102 + 8) = *((_QWORD *)v103 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v102 + 9) = *((_QWORD *)v103 + 9);
  swift_bridgeObjectRelease();
  v108 = v100[6];
  v109 = (char *)a1 + v108;
  if (*(_QWORD *)((char *)a1 + v108 + 24))
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v108);
  v110 = *(_OWORD *)((char *)a2 + v108 + 16);
  *(_OWORD *)v109 = *(_OWORD *)((char *)a2 + v108);
  *((_OWORD *)v109 + 1) = v110;
  *((_QWORD *)v109 + 4) = *(_QWORD *)((char *)a2 + v108 + 32);
  *((_BYTE *)a1 + v100[7]) = *((_BYTE *)a2 + v100[7]);
  v111 = v100[8];
  v112 = *(void **)((char *)a1 + v111);
  *(_QWORD *)((char *)a1 + v111) = *(_QWORD *)((char *)a2 + v111);

  *(_QWORD *)((char *)a1 + v100[9]) = *(_QWORD *)((char *)a2 + v100[9]);
  swift_bridgeObjectRelease();
  v113 = v100[10];
  v114 = (char *)a1 + v113;
  v115 = (char *)a2 + v113;
  v116 = *(_QWORD *)v115;
  LOBYTE(v115) = v115[8];
  *(_QWORD *)v114 = v116;
  v114[8] = (char)v115;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + v100[11]) = *((_BYTE *)a2 + v100[11]);
  *((_BYTE *)a1 + v100[12]) = *((_BYTE *)a2 + v100[12]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSectionDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAB4D8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

void sub_1BAB4D8D8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A5A10)
  {
    v0 = type metadata accessor for FormatPluginData();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A5A10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  sub_1BAB4D8D8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, a2, a3, v6);
}

uint64_t sub_1BAB4D970(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for FormatPluginData();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t FormatSizeConstraint.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746867696568;
  if (*v0 != 1)
    v1 = 1702521203;
  if (*v0)
    return v1;
  else
    return 0x6874646977;
}

uint64_t sub_1BAB4DA18(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB7FA88C(*a1, *a2);
}

uint64_t sub_1BAB4DA24()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB4DAB4()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB4DB20()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB4DBAC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x746867696568;
  if (v2 != 1)
  {
    v5 = 1702521203;
    v4 = 0xE400000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6874646977;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t FormatSizeConstraint.description.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746867696568;
  if (*v0 != 1)
    v1 = 1702521203;
  if (*v0)
    return v1;
  else
    return 0x6874646977;
}

unint64_t sub_1BAB4DC4C()
{
  unint64_t result;

  result = qword_1EF2B0798;
  if (!qword_1EF2B0798)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeConstraint, &type metadata for FormatSizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1EF2B0798);
  }
  return result;
}

unint64_t sub_1BAB4DC90(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAB4DCBC();
  result = sub_1BA49ABD0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB4DCBC()
{
  unint64_t result;

  result = qword_1EF2B07A0;
  if (!qword_1EF2B07A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeConstraint, &type metadata for FormatSizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1EF2B07A0);
  }
  return result;
}

unint64_t sub_1BAB4DD00(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB4DD24();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB4DD24()
{
  unint64_t result;

  result = qword_1EF2B07A8;
  if (!qword_1EF2B07A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSizeConstraint, &type metadata for FormatSizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1EF2B07A8);
  }
  return result;
}

unint64_t sub_1BAB4DD68(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA521740();
  a1[2] = sub_1BA82C7F8();
  result = sub_1BAB4DC4C();
  a1[3] = result;
  return result;
}

uint64_t sub_1BAB4DD9C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x746867696568;
  if (*v0 != 1)
    v1 = 1702521203;
  if (*v0)
    return v1;
  else
    return 0x6874646977;
}

ValueMetadata *type metadata accessor for FormatSizeConstraint()
{
  return &type metadata for FormatSizeConstraint;
}

uint64_t FormatSwitchNodeDefault.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB4DE2C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 16) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t FormatSwitchNodeDefault.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSwitchNodeDefault.children.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSwitchNodeDefault.__allocating_init(children:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  return v2;
}

uint64_t FormatSwitchNodeDefault.init(children:)(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return v1;
}

uint64_t FormatSwitchNodeDefault.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSwitchNodeDefault.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BAB4DFDC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BAB4E074(&qword_1EF2B07B0, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeDefault);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BAB4E010(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BAB4E074(&qword_1ED3CA568, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeDefault);
  a1[2] = sub_1BAB4E074(&qword_1ED3A72E0, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeDefault);
  result = sub_1BAB4E074(&qword_1EF2B07B8, (uint64_t)&protocol conformance descriptor for FormatSwitchNodeDefault);
  a1[3] = result;
  return result;
}

uint64_t sub_1BAB4E074(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSwitchNodeDefault();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BAB4E0B0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA883A18(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BAB4E144@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSwitchNodeDefault()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSwitchNodeDefault.__allocating_init(children:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t static FormatTextAdjustmentBaseline.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatTextAdjustmentBaseline.style.getter()
{
  return swift_retain();
}

uint64_t sub_1BAB4E1B8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed19FormatTextNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t sub_1BAB4E1C4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB4E1E8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB4E1E8()
{
  unint64_t result;

  result = qword_1EF2B07C0;
  if (!qword_1EF2B07C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentBaseline, &type metadata for FormatTextAdjustmentBaseline);
    atomic_store(result, (unint64_t *)&qword_1EF2B07C0);
  }
  return result;
}

unint64_t sub_1BAB4E22C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6366B8();
  a1[2] = sub_1BA616500();
  result = sub_1BAB4E260();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB4E260()
{
  unint64_t result;

  result = qword_1EF2B07C8;
  if (!qword_1EF2B07C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTextAdjustmentBaseline, &type metadata for FormatTextAdjustmentBaseline);
    atomic_store(result, (unint64_t *)&qword_1EF2B07C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTextAdjustmentBaseline()
{
  return &type metadata for FormatTextAdjustmentBaseline;
}

id CoverIssueFontBook.titleFont.getter()
{
  id *v0;

  return *v0;
}

id CoverIssueFontBook.accessoryFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id CoverIssueFontBook.followButtonFontBook.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v9;

  v2 = (void *)v1[2];
  v3 = (void *)v1[3];
  v4 = (void *)v1[4];
  v9 = (id)v1[5];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v9;
  v5 = v2;
  v6 = v3;
  v7 = v4;
  return v9;
}

id CoverIssueFontBook.FollowButtonFontBook.followButtonFont.getter()
{
  id *v0;

  return *v0;
}

id CoverIssueFontBook.FollowButtonFontBook.followingButtonFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id CoverIssueFontBook.FollowButtonFontBook.plusSignFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id CoverIssueFontBook.FollowButtonFontBook.checkmarkFont.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

void __swiftcall CoverIssueFontBook.init(titleFont:accessoryFont:followButtonFontBook:)(NewsFeed::CoverIssueFontBook *__return_ptr retstr, UIFont titleFont, UIFont accessoryFont, NewsFeed::CoverIssueFontBook::FollowButtonFontBook followButtonFontBook)
{
  __int128 v4;

  retstr->titleFont = titleFont;
  retstr->accessoryFont = accessoryFont;
  v4 = *((_OWORD *)followButtonFontBook.followButtonFont.super.isa + 1);
  *(_OWORD *)&retstr->followButtonFontBook.followButtonFont.super.isa = *(_OWORD *)followButtonFontBook.followButtonFont.super.isa;
  *(_OWORD *)&retstr->followButtonFontBook.plusSignFont.super.isa = v4;
}

void destroy for CoverIssueFontBook(id *a1)
{

}

_QWORD *initializeWithCopy for CoverIssueFontBook(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  v12 = v6;
  v13 = v7;
  v14 = v8;
  return a1;
}

uint64_t assignWithCopy for CoverIssueFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  return a1;
}

uint64_t assignWithTake for CoverIssueFontBook(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = a2[2];

  return a1;
}

ValueMetadata *type metadata accessor for CoverIssueFontBook()
{
  return &type metadata for CoverIssueFontBook;
}

void destroy for CoverIssueFontBook.FollowButtonFontBook(id *a1)
{

}

_QWORD *initializeWithCopy for CoverIssueFontBook.FollowButtonFontBook(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = v3;
  v8 = v4;
  v9 = v5;
  v10 = v6;
  return a1;
}

uint64_t assignWithCopy for CoverIssueFontBook.FollowButtonFontBook(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  return a1;
}

uint64_t assignWithTake for CoverIssueFontBook.FollowButtonFontBook(uint64_t a1, _OWORD *a2)
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

ValueMetadata *type metadata accessor for CoverIssueFontBook.FollowButtonFontBook()
{
  return &type metadata for CoverIssueFontBook.FollowButtonFontBook;
}

uint64_t SportsEmbedConfigResourceGroup.embeds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEmbedConfigResourceGroup.type.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SportsEmbedConfigResourceGroup.embeds.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*SportsEmbedConfigResourceGroup.embeds.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t SportsEmbedConfigResourceGroup.record.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1BAA3501C(v2, v3);
}

uint64_t sub_1BAB4E6E8()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736465626D65;
  if (*v0 != 1)
    v1 = 0x64726F636572;
  if (*v0)
    return v1;
  else
    return 1701869940;
}

uint64_t sub_1BAB4E734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB4F4B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB4E758()
{
  sub_1BAB4E96C();
  return sub_1BB874710();
}

uint64_t sub_1BAB4E780()
{
  sub_1BAB4E96C();
  return sub_1BB87471C();
}

uint64_t SportsEmbedConfigResourceGroup.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;

  sub_1BAB4EF34(0, &qword_1EF2B07D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = v1[2];
  v18 = v1[3];
  v19 = v8;
  v9 = v1[4];
  v16 = v1[5];
  v17 = v9;
  v15 = v1[6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB4E96C();
  sub_1BB8746C8();
  LOBYTE(v21) = 0;
  v10 = v20;
  sub_1BB87417C();
  if (!v10)
  {
    v12 = v16;
    v11 = v17;
    v13 = v18;
    if (*(_QWORD *)(v19 + 16))
    {
      v25 = 1;
      v21 = v19;
      sub_1BAB4E9B0();
      sub_1BAB4EA08();
      sub_1BAB4EA5C();
      sub_1BB874464();
    }
    v21 = v13;
    v22 = v11;
    v23 = v12;
    v24 = v15;
    v25 = 2;
    sub_1BAB4EB00();
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BAB4E96C()
{
  unint64_t result;

  result = qword_1ED3A8E58;
  if (!qword_1ED3A8E58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1914, &type metadata for SportsEmbedConfigResourceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8E58);
  }
  return result;
}

unint64_t sub_1BAB4E9B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2B07D8;
  if (!qword_1EF2B07D8)
  {
    sub_1BAB4EF34(255, &qword_1EF2B07D0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DED188], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2B07D8);
  }
  return result;
}

void sub_1BAB4EA08()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AAF50)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AAF50);
  }
}

unint64_t sub_1BAB4EA5C()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_1EF2B07E0;
  if (!qword_1EF2B07E0)
  {
    sub_1BAB4EA08();
    v2 = v1;
    v3 = sub_1BAB4EABC();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF10], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_1EF2B07E0);
  }
  return result;
}

unint64_t sub_1BAB4EABC()
{
  unint64_t result;

  result = qword_1ED3A78D0;
  if (!qword_1ED3A78D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsConfigResourceEmbed, &type metadata for SportsConfigResourceEmbed);
    atomic_store(result, (unint64_t *)&qword_1ED3A78D0);
  }
  return result;
}

unint64_t sub_1BAB4EB00()
{
  unint64_t result;

  result = qword_1EF2B07E8;
  if (!qword_1EF2B07E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceRecord, &type metadata for SportsEmbedConfigResourceRecord);
    atomic_store(result, (unint64_t *)&qword_1EF2B07E8);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceGroup.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  char *v16;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;

  v36 = a2;
  sub_1BAB4EE8C();
  v35 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB4EF34(0, &qword_1ED3AB4C0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v32 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB4E96C();
  v12 = v37;
  sub_1BB87468C();
  if (v12)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v37 = v4;
  v13 = v9;
  v14 = v35;
  v15 = v36;
  LOBYTE(v38) = 0;
  v16 = v11;
  v33 = sub_1BB874098();
  v34 = v18;
  LOBYTE(v38) = 1;
  swift_bridgeObjectRetain();
  v19 = sub_1BB8740F8();
  if ((v19 & 1) != 0)
  {
    v42 = 1;
    sub_1BAB4EFD4();
    v20 = v6;
    v21 = v14;
    sub_1BB8740D4();
    v22 = (uint64_t)a1;
    v23 = v20;
    v11 = v16;
    v24 = sub_1BB86DD08();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v21);
    v25 = v15;
    v26 = v24;
  }
  else
  {
    v25 = v15;
    v26 = MEMORY[0x1E0DEE9D8];
    v22 = (uint64_t)a1;
  }
  v42 = 2;
  sub_1BAB4EF90();
  swift_bridgeObjectRetain();
  sub_1BB874068();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v8);
  v27 = v38;
  v28 = v39;
  v29 = v40;
  v30 = v41;
  v31 = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAA3501C(v27, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v25 = v33;
  v25[1] = v31;
  v25[2] = v26;
  v25[3] = v27;
  v25[4] = v28;
  v25[5] = v29;
  v25[6] = v30;
  __swift_destroy_boxed_opaque_existential_1(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1BA6CABAC(v27, v28);
}

void sub_1BAB4EE8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A37D8)
  {
    sub_1BAB4EEF0();
    sub_1BAB4EABC();
    v0 = sub_1BB86DF60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A37D8);
  }
}

unint64_t sub_1BAB4EEF0()
{
  unint64_t result;

  result = qword_1ED3A78D8[0];
  if (!qword_1ED3A78D8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsConfigResourceEmbed, &type metadata for SportsConfigResourceEmbed);
    atomic_store(result, qword_1ED3A78D8);
  }
  return result;
}

void sub_1BAB4EF34(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAB4E96C();
    v7 = a3(a1, &type metadata for SportsEmbedConfigResourceGroup.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAB4EF90()
{
  unint64_t result;

  result = qword_1ED3A9310;
  if (!qword_1ED3A9310)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceRecord, &type metadata for SportsEmbedConfigResourceRecord);
    atomic_store(result, (unint64_t *)&qword_1ED3A9310);
  }
  return result;
}

unint64_t sub_1BAB4EFD4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3A37D0;
  if (!qword_1ED3A37D0)
  {
    sub_1BAB4EE8C();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB3610], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3A37D0);
  }
  return result;
}

uint64_t sub_1BAB4F01C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsEmbedConfigResourceGroup.init(from:)(a1, a2);
}

uint64_t sub_1BAB4F030(_QWORD *a1)
{
  return SportsEmbedConfigResourceGroup.encode(to:)(a1);
}

uint64_t sub_1BAB4F044@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BAB4F050(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t destroy for SportsEmbedConfigResourceGroup(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for SportsEmbedConfigResourceGroup(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[3] = a2[3];
    a1[4] = v5;
    v6 = a2[5];
    v7 = a2[6];
    a1[5] = v6;
    a1[6] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 5) = v8;
  }
  return a1;
}

_QWORD *assignWithCopy for SportsEmbedConfigResourceGroup(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 3;
  v5 = a2 + 3;
  v6 = a2[4];
  if (a1[4])
  {
    if (v6)
    {
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAA34B14((uint64_t)(a1 + 3));
      v7 = *(_OWORD *)(a2 + 5);
      *v4 = *v5;
      *(_OWORD *)(a1 + 5) = v7;
    }
  }
  else if (v6)
  {
    a1[3] = a2[3];
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 5);
    *v4 = *v5;
    *(_OWORD *)(a1 + 5) = v8;
  }
  return a1;
}

uint64_t assignWithTake for SportsEmbedConfigResourceGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  v5 = *(_QWORD *)(a2 + 32);
  if (!v5)
  {
    sub_1BAA34B14(a1 + 24);
LABEL_5:
    v7 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
    return a1;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceGroup()
{
  return &type metadata for SportsEmbedConfigResourceGroup;
}

uint64_t storeEnumTagSinglePayload for SportsEmbedConfigResourceGroup.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BAB4F360 + 4 * byte_1BB8A17C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BAB4F394 + 4 * asc_1BB8A17C0[v4]))();
}

uint64_t sub_1BAB4F394(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB4F39C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB4F3A4);
  return result;
}

uint64_t sub_1BAB4F3B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB4F3B8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BAB4F3BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB4F3C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsEmbedConfigResourceGroup.CodingKeys()
{
  return &type metadata for SportsEmbedConfigResourceGroup.CodingKeys;
}

unint64_t sub_1BAB4F3E4()
{
  unint64_t result;

  result = qword_1EF2B07F0;
  if (!qword_1EF2B07F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A18EC, &type metadata for SportsEmbedConfigResourceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B07F0);
  }
  return result;
}

unint64_t sub_1BAB4F42C()
{
  unint64_t result;

  result = qword_1ED3A8E68;
  if (!qword_1ED3A8E68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A185C, &type metadata for SportsEmbedConfigResourceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8E68);
  }
  return result;
}

unint64_t sub_1BAB4F474()
{
  unint64_t result;

  result = qword_1ED3A8E60;
  if (!qword_1ED3A8E60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1884, &type metadata for SportsEmbedConfigResourceGroup.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8E60);
  }
  return result;
}

uint64_t sub_1BAB4F4B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736465626D65 && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x64726F636572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

id FeedScoredHeadline.init(headline:scoreProfile:)@<X0>(id result@<X0>, id a2@<X1>, _QWORD *a3@<X8>)
{
  id v3;

  v3 = result;
  if (!a2)
  {
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
    a2 = result;
  }
  *a3 = v3;
  a3[1] = a2;
  return result;
}

uint64_t Sequence<>.scoredHeadlines()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1BB5B50D4((void (*)(char *, char *))sub_1BAB4F998, 0, a1, (uint64_t)&type metadata for FeedScoredHeadline, MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], a8);
}

uint64_t FeedScoredHeadline.headline.getter()
{
  return swift_unknownObjectRetain();
}

id FeedScoredHeadline.scoreProfile.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id FeedScoredHeadline.item.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  id v3;

  v3 = (id)v1[1];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = 0;
  swift_unknownObjectRetain();
  return v3;
}

uint64_t FeedScoredHeadline.publisherID.getter()
{
  return sub_1BAB4F768((SEL *)&selRef_publisherID);
}

uint64_t FeedScoredHeadline.date.getter@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  return FCHeadlineProviding.date.getter(a1);
}

uint64_t _s8NewsFeed0B14ScoredHeadlineV10identifierSSvg_0()
{
  id *v0;
  id v1;
  uint64_t v2;

  v1 = objc_msgSend(*v0, sel_articleID);
  v2 = sub_1BB8729A0();

  return v2;
}

uint64_t FeedScoredHeadline.clusterID.getter()
{
  return sub_1BAB4F768((SEL *)&selRef_clusterID);
}

uint64_t sub_1BAB4F768(SEL *a1)
{
  id *v1;
  id v2;
  void *v3;
  uint64_t v4;

  v2 = objc_msgSend(*v1, *a1);
  if (!v2)
    return 0;
  v3 = v2;
  v4 = sub_1BB8729A0();

  return v4;
}

uint64_t FeedScoredHeadline.publishDate.getter@<X0>(uint64_t a1@<X8>)
{
  id *v1;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3 = objc_msgSend(*v1, sel_publishDate);
  if (v3)
  {
    v4 = v3;
    sub_1BB86C874();

    v5 = sub_1BB86C8B0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 0;
  }
  else
  {
    v5 = sub_1BB86C8B0();
    v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56);
    v7 = a1;
    v8 = 1;
  }
  return v6(v7, v8, 1, v5);
}

id FeedScoredHeadline.score.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 8), sel_sortingScore);
}

uint64_t sub_1BAB4F860()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_publisherID);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

id sub_1BAB4F8C4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 8), sel_sortingScore);
}

uint64_t sub_1BAB4F8D4@<X0>(uint64_t a1@<X8>)
{
  swift_getObjectType();
  return FCHeadlineProviding.date.getter(a1);
}

uint64_t Sequence<>.items.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_1BB5B50D4((void (*)(char *, char *))sub_1BAB4F960, 0, a1, (uint64_t)&type metadata for FeedScoredItem, MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], a8);
}

{
  return sub_1BB5B50D4((void (*)(char *, char *))sub_1BAF33F24, 0, a1, (uint64_t)&type metadata for FeedScoredItem, MEMORY[0x1E0DEDCE8], a2, MEMORY[0x1E0DEDD18], a8);
}

id sub_1BAB4F960@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;

  v2 = (void *)a1[1];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = 0;
  swift_unknownObjectRetain();
  return v2;
}

id sub_1BAB4F998@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  id result;

  v3 = *a1;
  result = objc_msgSend((id)swift_unknownObjectRetain(), sel_scoreProfile);
  if (!result)
    result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D58B48]), sel_init);
  *a2 = v3;
  a2[1] = result;
  return result;
}

BOOL _s8NewsFeed0B14ScoredHeadlineV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  void *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  _BOOL8 result;
  double v16;
  double v17;
  double v18;

  v2 = *(void **)(a1 + 8);
  v4 = *(void **)a2;
  v3 = *(void **)(a2 + 8);
  v5 = objc_msgSend(*(id *)a1, sel_articleID);
  v6 = sub_1BB8729A0();
  v8 = v7;

  v9 = objc_msgSend(v4, sel_articleID);
  v10 = sub_1BB8729A0();
  v12 = v11;

  if (v6 == v10 && v8 == v12)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  v14 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v14 & 1) != 0)
  {
LABEL_8:
    objc_msgSend(v2, sel_sortingScore);
    v17 = v16;
    objc_msgSend(v3, sel_sortingScore);
    return v17 == v18;
  }
  return result;
}

unint64_t sub_1BAB4FB10(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB4FB34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB4FB34()
{
  unint64_t result;

  result = qword_1ED3B19F0;
  if (!qword_1ED3B19F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedScoredHeadline, &type metadata for FeedScoredHeadline);
    atomic_store(result, (unint64_t *)&qword_1ED3B19F0);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedScoredHeadline(_QWORD *a1, _QWORD *a2)
{
  void *v3;
  id v4;

  v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  v4 = v3;
  return a1;
}

_QWORD *assignWithCopy for FeedScoredHeadline(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;

  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = (void *)a2[1];
  v5 = (void *)a1[1];
  a1[1] = v4;
  v6 = v4;

  return a1;
}

uint64_t assignWithTake for FeedScoredHeadline(uint64_t a1, _OWORD *a2)
{
  void *v4;

  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for FeedScoredHeadline()
{
  return &type metadata for FeedScoredHeadline;
}

uint64_t FormatTemperature.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v21;
  _QWORD v22[4];

  v3 = v2;
  sub_1BA6EE0BC(0, &qword_1ED3B9C10, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v22[-1] - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (v2)
    goto LABEL_10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  v11 = sub_1BB872874();
  v12 = Dictionary<>.errorOnUnknownKeys.getter(v11);
  swift_bridgeObjectRelease();
  if ((v12 & 1) == 0)
  {
LABEL_8:
    sub_1BAB50124();
    v22[0] = 0;
    v22[1] = 0;
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  v13 = sub_1BB8740EC();
  v14 = *(_QWORD *)(v13 + 16);
  if (!v14)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v15 = (unint64_t *)(v13 + 40);
  while (1)
  {
    v16 = *v15;
    if (*v15 >= 4)
      break;
    v15 += 2;
    if (!--v14)
      goto LABEL_7;
  }
  v17 = *(v15 - 1);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  sub_1BA98D1F0();
  v3 = (void *)swift_allocError();
  *(_QWORD *)v18 = v17;
  *(_QWORD *)(v18 + 8) = v16;
  *(_QWORD *)(v18 + 16) = &unk_1E7269190;
  *(_OWORD *)(v18 + 24) = xmmword_1BB889D20;
  swift_willThrow();
  sub_1BA98D234(v17, v16);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_10:
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  __swift_project_boxed_opaque_existential_1(v22, v22[3]);
  sub_1BAB50124();
  sub_1BB8743D4();

  v19 = 0xC080804000uLL >> (8 * v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  *(_QWORD *)a2 = 1;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = v19;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BAB4FFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 144) = xmmword_1BB87FC90;
  sub_1BAB50F04();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
    JUMPOUT(0x1BAB4FF7CLL);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  JUMPOUT(0x1BAB4FEBCLL);
}

void sub_1BAB50020()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 144) = xmmword_1BB87FC90;
  sub_1BAB50F04();
  sub_1BB874068();
  if (!v2)
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
    JUMPOUT(0x1BAB4FF7CLL);
  }
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  JUMPOUT(0x1BAB4FEBCLL);
}

void sub_1BAB50094()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)(v4 - 144) = xmmword_1BB87FC90;
  sub_1BAB50F04();
  sub_1BB874068();
  if (v2)
    JUMPOUT(0x1BAB500D4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v0);
  JUMPOUT(0x1BAB4FF7CLL);
}

unint64_t sub_1BAB50124()
{
  unint64_t result;

  result = qword_1ED3A5CB0;
  if (!qword_1ED3A5CB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1BE8, &type metadata for FormatTemperature.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A5CB0);
  }
  return result;
}

void FormatTemperature.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = v1[1];
  v9 = *((_BYTE *)v1 + 16);
  v10 = a1[3];
  v11 = a1[4];
  v12 = __swift_project_boxed_opaque_existential_1(a1, v10);
  if ((sub_1BA5F45FC((uint64_t)v12, v10, (uint64_t)&type metadata for FormatVersions.Sydro, v11, (uint64_t)&off_1E734BD40) & 1) != 0)
  {
    v17 = v7;
    v18 = v8;
    v19 = v9;
    sub_1BAB50318(a1);
  }
  else
  {
    v13 = a1[3];
    v20 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    if (qword_1ED3C6D60 != -1)
      swift_once();
    v14 = sub_1BB86EB84();
    v15 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED476C38);
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v6, v15, v14);
    type metadata accessor for FormatVersionRequirement.Value(0);
    swift_storeEnumTagMultiPayload();
    sub_1BA69F160((uint64_t)v6, (uint64_t)sub_1BA90CF04, 0, v13, v20);
    sub_1BA69DCC0((uint64_t)v6);
    if (!v2)
    {
      v17 = v7;
      v18 = v8;
      v19 = v9;
      sub_1BAB50514(a1);
    }
  }
}

void sub_1BAB50318(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  sub_1BA6EE0BC(0, &qword_1ED39DBE0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  MEMORY[0x1E0C80A78](v3);
  v4 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB8746C8();
  __asm { BR              X10 }
}

uint64_t sub_1BAB503E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v5 - 128) = 0;
  sub_1BAB51710();
  *(_QWORD *)(v5 - 104) = 0;
  *(_QWORD *)(v5 - 96) = 0;
  sub_1BB8741AC();
  if (!v2)
  {
    if ((v4 & 1) != 0)
    {
      swift_bridgeObjectRetain();
      v6 = *(_QWORD *)(v5 - 136);
      sub_1BA69C828(v6, v3, 1);
      sub_1BA69C828(1, 0, 0);
LABEL_5:
      *(_QWORD *)(v5 - 104) = v6;
      *(_QWORD *)(v5 - 96) = v3;
      *(_BYTE *)(v5 - 88) = v4 & 1;
      *(_OWORD *)(v5 - 128) = xmmword_1BB87FC90;
      sub_1BAB51754();
      sub_1BB8741AC();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 72) + 8))(v1, v0);
    }
    v6 = *(_QWORD *)(v5 - 136);
    sub_1BA69C828(v6, v3, 0);
    sub_1BA69C828(1, 0, 0);
    if ((v6 & 1) == 0)
      goto LABEL_5;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 72) + 8))(v1, v0);
}

void sub_1BAB50514(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  v3 = type metadata accessor for FormatVersionRequirement(0);
  MEMORY[0x1E0C80A78](v3);
  v4 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  __asm { BR              X10 }
}

uint64_t sub_1BAB505B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if ((v4 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1BA69C828(1, 0, 0);
    sub_1BA69C828(v2, v3, 1);
  }
  else
  {
    sub_1BA69C828(1, 0, 0);
    sub_1BA69C828(v2, v3, 0);
    if ((v2 & 1) != 0)
    {
      *(_BYTE *)(v5 - 65) = 0;
      __swift_mutable_project_boxed_opaque_existential_1(v5 - 120, *(_QWORD *)(v5 - 96));
      sub_1BAB51710();
      sub_1BB874404();
      return __swift_destroy_boxed_opaque_existential_1(v5 - 120);
    }
  }
  v6 = v1[3];
  v7 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v6);
  if (qword_1ED3C6D20 != -1)
    swift_once();
  v8 = sub_1BB86EB84();
  v9 = __swift_project_value_buffer(v8, (uint64_t)qword_1ED476B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v0, v9, v8);
  type metadata accessor for FormatVersionRequirement.Value(0);
  swift_storeEnumTagMultiPayload();
  sub_1BA69F160(v0, (uint64_t)sub_1BA90CF04, 0, v6, v7);
  sub_1BA69DCC0(v0);
  return __swift_destroy_boxed_opaque_existential_1(v5 - 120);
}

void sub_1BAB507C4(char *a1)
{
  sub_1BB7FF7A0(*a1);
}

void sub_1BAB507D0()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAB50828()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB508B4()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB508FC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAB50974()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAB509C8()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB50A54@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAB516C8();
  *a1 = result;
  return result;
}

uint64_t sub_1BAB50A80()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAB50ABC + 4 * byte_1BB8A1A3C[*v0]))();
}

void sub_1BAB50ABC(_QWORD *a1@<X8>)
{
  *a1 = 0x737569736C6563;
  a1[1] = 0xE700000000000000;
}

void sub_1BAB50AD8(_QWORD *a1@<X8>)
{
  *a1 = 0x65686E6572686166;
  a1[1] = 0xEA00000000007469;
}

void sub_1BAB50AF8(_QWORD *a1@<X8>)
{
  *a1 = 0x6965686E65726166;
  a1[1] = 0xE900000000000074;
}

void sub_1BAB50B18(_QWORD *a1@<X8>)
{
  *a1 = 0x6E69766C656BLL;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1BAB50B30()
{
  sub_1BAB51684();
  return sub_1BB872D60();
}

uint64_t sub_1BAB50B8C()
{
  sub_1BAB51684();
  return sub_1BB872D0C();
}

double static FormatTemperature.default.getter@<D0>(uint64_t a1@<X8>)
{
  double result;

  *(_QWORD *)&result = 1;
  *(_OWORD *)a1 = xmmword_1BB8A1A10;
  *(_BYTE *)(a1 + 16) = 0;
  return result;
}

uint64_t sub_1BAB50BF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatTemperature.init(from:)(a1, a2);
}

void sub_1BAB50C04(_QWORD *a1)
{
  FormatTemperature.encode(to:)(a1);
}

void sub_1BAB50C1C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1BB86C9DC();
  MEMORY[0x1E0C80A78](v4);
  MEMORY[0x1E0C80A78](v5);
  __asm { BR              X10 }
}

uint64_t sub_1BAB50CB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  char v5;
  void *v6;
  id v7;
  void (*v8)(uint64_t, uint64_t);

  sub_1BB86C994();
  v4 = (id)sub_1BB86C904();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v1, v0);
  if (!v4)
  {
    v5 = sub_1BB86C934();
    v6 = (void *)objc_opt_self();
    if ((v5 & 1) != 0)
      v7 = objc_msgSend(v6, sel_celsius);
    else
      v7 = objc_msgSend(v6, sel_fahrenheit);
    v4 = v7;
  }
  v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v8(v2, v0);
  sub_1BA8425B0();
  sub_1BB86BD88();

  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v1, v0);
}

id sub_1BAB50E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  id result;
  uint64_t v7;

  v0 = sub_1BB86C9DC();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37F0]), sel_init);
  sub_1BB86C94C();
  v5 = (void *)sub_1BB86C940();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setLocale_, v5);

  result = objc_msgSend(v4, sel_setMaximumFractionDigits_, 0);
  qword_1ED3A5CB8 = (uint64_t)v4;
  return result;
}

unint64_t sub_1BAB50F04()
{
  unint64_t result;

  result = qword_1ED3A42F0;
  if (!qword_1ED3A42F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTemperatureFormat, &type metadata for FormatTemperatureFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A42F0);
  }
  return result;
}

void _s8NewsFeed17FormatTemperatureO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

BOOL sub_1BAB50F8C()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  if (v4 >= 0x40)
  {
    sub_1BA9680DC(v3, v5, v4);
    sub_1BA9680DC(v2, v1, v0);
    sub_1BA968268(v2, v1, v0);
    v7 = v3;
    v8 = v5;
    v9 = v4;
LABEL_13:
    sub_1BA968268(v7, v8, v9);
    return 0;
  }
  if ((v0 & 1) == 0)
  {
    if ((v4 & 1) == 0)
    {
      sub_1BA9680DC(v3, v5, v4);
      sub_1BA9680DC(v3, v5, v4);
      sub_1BA9680DC(v2, v1, v0);
      sub_1BA69C828(v2, v1, 0);
      sub_1BA69C828(v3, v5, 0);
      sub_1BA968268(v2, v1, v0);
      sub_1BA968268(v3, v5, v4);
      sub_1BA968268(v3, v5, v4);
      sub_1BA968268(v2, v1, v0);
      return ((((v2 & 1) == 0) ^ v3) & 1) != 0;
    }
    goto LABEL_12;
  }
  if ((v4 & 1) == 0)
  {
    sub_1BA69C808(v2, v1, 1);
    sub_1BA69C808(v2, v1, 1);
    sub_1BA69C808(v2, v1, 1);
LABEL_12:
    sub_1BA69C808(v3, v5, v4 & 1);
    sub_1BA69C808(v3, v5, v4 & 1);
    sub_1BA69C808(v3, v5, v4 & 1);
    sub_1BA69C828(v2, v1, v0 & 1);
    sub_1BA69C828(v3, v5, v4 & 1);
    sub_1BA968268(v2, v1, v0);
    sub_1BA968268(v3, v5, v4);
    sub_1BA968268(v3, v5, v4);
    v7 = v2;
    v8 = v1;
    v9 = v0;
    goto LABEL_13;
  }
  if (v2 == v3 && v1 == v5)
    v6 = 1;
  else
    v6 = sub_1BB874398();
  sub_1BA9680DC(v3, v5, v4);
  sub_1BA9680DC(v2, v1, v0);
  sub_1BA9680DC(v3, v5, v4);
  sub_1BA9680DC(v2, v1, v0);
  sub_1BA9680DC(v3, v5, v4);
  sub_1BA9680DC(v2, v1, v0);
  v10 = 1;
  sub_1BA69C828(v2, v1, 1);
  sub_1BA69C828(v3, v5, 1);
  sub_1BA968268(v2, v1, v0);
  sub_1BA968268(v3, v5, v4);
  sub_1BA968268(v3, v5, v4);
  sub_1BA968268(v2, v1, v0);
  if ((v6 & 1) == 0)
    return 0;
  return v10;
}

unint64_t sub_1BAB51294(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB512C8();
  a1[2] = sub_1BAB5130C();
  result = sub_1BAB51350();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB512C8()
{
  unint64_t result;

  result = qword_1ED39EB30;
  if (!qword_1ED39EB30)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTemperature, &type metadata for FormatTemperature);
    atomic_store(result, (unint64_t *)&qword_1ED39EB30);
  }
  return result;
}

unint64_t sub_1BAB5130C()
{
  unint64_t result;

  result = qword_1ED39E5C8;
  if (!qword_1ED39E5C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTemperature, &type metadata for FormatTemperature);
    atomic_store(result, (unint64_t *)&qword_1ED39E5C8);
  }
  return result;
}

unint64_t sub_1BAB51350()
{
  unint64_t result;

  result = qword_1EF2B07F8;
  if (!qword_1EF2B07F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTemperature, &type metadata for FormatTemperature);
    atomic_store(result, (unint64_t *)&qword_1EF2B07F8);
  }
  return result;
}

uint64_t destroy for FormatTemperature(uint64_t a1)
{
  return sub_1BA968268(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed17FormatTemperatureOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA9680DC(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatTemperature(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA9680DC(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA968268(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatTemperature(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA968268(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTemperature(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7D && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 125);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7C)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatTemperature(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 125;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1BAB51530(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_1BAB5153C(uint64_t result)
{
  *(_BYTE *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_1BAB5154C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for FormatTemperature()
{
  return &type metadata for FormatTemperature;
}

uint64_t storeEnumTagSinglePayload for FormatTemperature.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAB515BC + 4 * byte_1BB8A1A4A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAB515F0 + 4 * byte_1BB8A1A45[v4]))();
}

uint64_t sub_1BAB515F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB515F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB51600);
  return result;
}

uint64_t sub_1BAB5160C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB51614);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAB51618(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB51620(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTemperature.CodingType()
{
  return &type metadata for FormatTemperature.CodingType;
}

unint64_t sub_1BAB51640()
{
  unint64_t result;

  result = qword_1EF2B0800;
  if (!qword_1EF2B0800)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1BC0, &type metadata for FormatTemperature.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B0800);
  }
  return result;
}

unint64_t sub_1BAB51684()
{
  unint64_t result;

  result = qword_1ED3A5CA8;
  if (!qword_1ED3A5CA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1B48, &type metadata for FormatTemperature.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A5CA8);
  }
  return result;
}

uint64_t sub_1BAB516C8()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

unint64_t sub_1BAB51710()
{
  unint64_t result;

  result = qword_1ED3A5CA0;
  if (!qword_1ED3A5CA0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A1B20, &type metadata for FormatTemperature.CodingType);
    atomic_store(result, (unint64_t *)&qword_1ED3A5CA0);
  }
  return result;
}

unint64_t sub_1BAB51754()
{
  unint64_t result;

  result = qword_1ED3A42E8;
  if (!qword_1ED3A42E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTemperatureFormat, &type metadata for FormatTemperatureFormat);
    atomic_store(result, (unint64_t *)&qword_1ED3A42E8);
  }
  return result;
}

uint64_t sub_1BAB51798(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  sub_1BA6C2DDC(a1, (uint64_t)v18 - v10);
  sub_1BA6C2DDC((uint64_t)v11, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BA4A2E80((uint64_t)&v8[*(int *)(v12 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
    return 0;
  }
  else
  {
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v15 = (uint64_t)&v8[*(int *)(v14 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1BA4A40CC(0, &qword_1ED3CFB20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v16 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_1BB87CE70;
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v17 + v16, v5, v2);
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_1BA4A2E80(v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v18[0] = v17;
    sub_1BB86E7D0();
    swift_bridgeObjectRelease();
    return v18[1];
  }
}

ValueMetadata *type metadata accessor for FormatPackageInventoryCacheKey()
{
  return &type metadata for FormatPackageInventoryCacheKey;
}

uint64_t sub_1BAB519CC()
{
  uint64_t *v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA56BD8C((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BAB51A10(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t (*v15)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD v17[2];

  v3 = sub_1BB86C67C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A40CC(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v17 - v8;
  v10 = *v1;
  v11 = *(_QWORD *)(*v1 + 16);
  v17[1] = a1;
  sub_1BB8745D8();
  if (v11)
  {
    v12 = v10 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v13 = *(_QWORD *)(v4 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v14(v9, v12, v3);
      v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v15(v9, 0, 1, v3);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3);
      if ((_DWORD)result == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v9, v3);
      sub_1BA4A2870((unint64_t *)&qword_1ED3B04C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
      sub_1BB872868();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      v12 += v13;
      if (!--v11)
        return v15(v9, 1, 1, v3);
    }
  }
  else
  {
    v15 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    return v15(v9, 1, 1, v3);
  }
  return result;
}

uint64_t sub_1BAB51BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD v20[2];

  v4 = sub_1BB86C67C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BCBF8(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v20 - v12;
  sub_1BA6C2DDC(a1, (uint64_t)v20 - v12);
  sub_1BA6C2DDC((uint64_t)v13, (uint64_t)v10);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    sub_1BA6BC630(0, (unint64_t *)&unk_1EF2A9770, (void (*)(uint64_t))type metadata accessor for FormatPackage);
    sub_1BA4A2E80((uint64_t)&v10[*(int *)(v14 + 48)], (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatPackage);
  }
  else
  {
    sub_1BA6BC630(0, (unint64_t *)&qword_1ED3B0500, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    v16 = (uint64_t)&v10[*(int *)(v15 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1BA4A40CC(0, &qword_1ED3CFB20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v17 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87CE70;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 16))(v18 + v17, v7, v4);
    sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BA6BCBF8);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    sub_1BA4A2E80(v16, (uint64_t (*)(_QWORD))type metadata accessor for FormatMetadata);
    v20[0] = v18;
    v20[1] = a2;
    swift_retain();
    sub_1BB86E7DC();
  }
  return a2;
}

uint64_t sub_1BAB51DEC()
{
  _QWORD *v0;

  type metadata accessor for FormatLayoutError();
  sub_1BA689E84();
  swift_allocError();
  *v0 = 0xD000000000000066;
  v0[1] = 0x80000001BB964840;
  swift_storeEnumTagMultiPayload();
  return swift_willThrow();
}

uint64_t sub_1BAB51E64()
{
  return sub_1BAB51DEC();
}

uint64_t initializeBufferWithCopyOfBuffer for FormatDecorationContext(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v9 = a2 + 4;
    v8 = a2[4];
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v10 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v10;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v8)
    {
      v12 = (void *)a2[5];
      v11 = a2[6];
      *(_QWORD *)(a1 + 32) = v8;
      *(_QWORD *)(a1 + 40) = v12;
      v13 = a2[7];
      v14 = a2[8];
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v13;
      *(_QWORD *)(a1 + 64) = v14;
      swift_bridgeObjectRetain();
      v15 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v16 = *((_OWORD *)v9 + 1);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)v9;
      *(_OWORD *)(a1 + 48) = v16;
      *(_QWORD *)(a1 + 64) = v9[4];
    }
    v17 = (void *)a2[9];
    *(_QWORD *)(a1 + 72) = v17;
    v18 = a3[7];
    v19 = a1 + v18;
    v20 = (uint64_t)a2 + v18;
    v21 = sub_1BB86D7A4();
    v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v23 = v17;
    v22(v19, v20, v21);
    v24 = a3[8];
    v25 = a1 + v24;
    v26 = (uint64_t)a2 + v24;
    v27 = sub_1BB86D660();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[10];
    *(_QWORD *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(_QWORD *)(a1 + v28) = *(uint64_t *)((char *)a2 + v28);
    *(_QWORD *)(a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for FormatDecorationContext(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  void *v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 32);
  v8 = (_OWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v7)
    {
      *(_QWORD *)(a1 + 32) = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v9 = *(void **)(a1 + 40);
      v10 = *(void **)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v10;
      v11 = v10;

      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BAB52240(a1 + 32);
      v14 = *(_QWORD *)(a2 + 64);
      v15 = *(_OWORD *)(a2 + 48);
      *v6 = *v8;
      *(_OWORD *)(a1 + 48) = v15;
      *(_QWORD *)(a1 + 64) = v14;
    }
  }
  else if (v7)
  {
    *(_QWORD *)(a1 + 32) = v7;
    v12 = *(void **)(a2 + 40);
    *(_QWORD *)(a1 + 40) = v12;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    v13 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v16 = *v8;
    v17 = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *v6 = v16;
    *(_OWORD *)(a1 + 48) = v17;
  }
  v18 = *(void **)(a2 + 72);
  v19 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v18;
  v20 = v18;

  v21 = a3[7];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB52240(uint64_t a1)
{
  destroy for FeedAppConfig(a1);
  return a1;
}

uint64_t initializeWithTake for FormatDecorationContext(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_OWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v7 = a3[7];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + 56) = v6;
  v10 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[8];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  v15 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v15) = *(_QWORD *)(a2 + v15);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  return a1;
}

uint64_t assignWithTake for FormatDecorationContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  __int128 v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 32);
  if (!*(_QWORD *)(a1 + 32))
    goto LABEL_5;
  if (!v7)
  {
    sub_1BAB52240(a1 + 32);
LABEL_5:
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
  v8 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
LABEL_6:
  v10 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  v11 = a3[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  v15 = a3[8];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 40))(v16, v17, v18);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_release();
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDecorationContext()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB524E8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86D7A4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 28);
    }
    else
    {
      v10 = sub_1BB86D660();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 32);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatDecorationContext()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BAB52594(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1BB86D7A4();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 28);
    }
    else
    {
      v10 = sub_1BB86D660();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 32);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t destroy for FormatDecorationContext.Errors(uint64_t a1)
{
  unsigned int v2;

  v2 = *(unsigned __int8 *)(a1 + 56);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  swift_bridgeObjectRelease();
  if (v2 == 1)
    return __swift_destroy_boxed_opaque_existential_1(a1 + 16);
  else
    return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatDecorationContext.Errors(uint64_t a1, uint64_t a2)
{
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  char v9;

  v3 = *(unsigned __int8 *)(a2 + 56);
  if (v3 >= 2)
    v3 = *(_DWORD *)a2 + 2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  if (v3 == 1)
  {
    v5 = a2 + 16;
    v6 = *(_OWORD *)(a2 + 40);
    *(_OWORD *)(a1 + 40) = v6;
    v7 = v6;
    v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
    swift_bridgeObjectRetain();
    v8(a1 + 16, v5, v7);
    v9 = 1;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = 0;
  }
  *(_BYTE *)(a1 + 56) = v9;
  return a1;
}

uint64_t assignWithCopy for FormatDecorationContext.Errors(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    swift_bridgeObjectRelease();
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    else
      swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    if (v5 == 1)
    {
      v6 = a2 + 16;
      v7 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 40) = v7;
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
      swift_bridgeObjectRetain();
      v8(a1 + 16, v6, v7);
      *(_BYTE *)(a1 + 56) = 1;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 56) = 0;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithTake for FormatDecorationContext.Errors(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unsigned int v5;
  __int128 v6;
  char v7;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 56);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    swift_bridgeObjectRelease();
    if (v4 == 1)
      __swift_destroy_boxed_opaque_existential_1(a1 + 16);
    else
      swift_bridgeObjectRelease();
    v5 = *(unsigned __int8 *)(a2 + 56);
    if (v5 >= 2)
      v5 = *(_DWORD *)a2 + 2;
    if (v5 == 1)
    {
      v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      v7 = 1;
    }
    else
    {
      v7 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    }
    *(_BYTE *)(a1 + 56) = v7;
  }
  return a1;
}

ValueMetadata *type metadata accessor for FormatDecorationContext.Errors()
{
  return &type metadata for FormatDecorationContext.Errors;
}

void static FormatCodingHighGroupPriorityStrategy.defaultValue.getter(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

void _s8NewsFeed37FormatCodingHighGroupPriorityStrategyV12shouldEncode12wrappedValueSbAA0cfG0O_tFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB5293C()
{
  unsigned __int8 v0;

  v0 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return (v0 ^ 1) & 1;
}

unint64_t sub_1BAB529AC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB529D0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB529D0()
{
  unint64_t result;

  result = qword_1EF2B0808;
  if (!qword_1EF2B0808)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCodingHighGroupPriorityStrategy, &type metadata for FormatCodingHighGroupPriorityStrategy);
    atomic_store(result, (unint64_t *)&qword_1EF2B0808);
  }
  return result;
}

unint64_t sub_1BAB52A1C()
{
  unint64_t result;

  result = qword_1ED39B520;
  if (!qword_1ED39B520)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupPriority, &type metadata for FormatGroupPriority);
    atomic_store(result, (unint64_t *)&qword_1ED39B520);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatCodingHighGroupPriorityStrategy()
{
  return &type metadata for FormatCodingHighGroupPriorityStrategy;
}

BOOL static FormatRoute.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t FormatRoute.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatRoute.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB52AF4()
{
  unint64_t result;

  result = qword_1EF2B0870;
  if (!qword_1EF2B0870)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRoute, &type metadata for FormatRoute);
    atomic_store(result, (unint64_t *)&qword_1EF2B0870);
  }
  return result;
}

unint64_t sub_1BAB52B38(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB52B5C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB52B5C()
{
  unint64_t result;

  result = qword_1EF2B0878;
  if (!qword_1EF2B0878)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRoute, &type metadata for FormatRoute);
    atomic_store(result, (unint64_t *)&qword_1EF2B0878);
  }
  return result;
}

unint64_t sub_1BAB52BA0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA7FDD54();
  a1[2] = sub_1BA836D20();
  result = sub_1BAB52AF4();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatRoute()
{
  return &type metadata for FormatRoute;
}

void sub_1BAB52BE4(uint64_t a1)
{
  __asm { BR              X10 }
}

_QWORD *sub_1BAB52C18()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  _QWORD *v11;

  v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v1);
  sub_1BA8C88C8(0);
  v4 = *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80);
  v5 = (v4 + 32) & ~v4;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  v7 = (_QWORD *)(v6 + v5);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6469562079616C50, 0xEA00000000006F65, v7);
  v8 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 0, 1, v8);
  sub_1BAF89090(0x6574756F52, 0xE500000000000000, 0, 0, v6, (_QWORD *)(v0 - 88));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v9 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v9;
  *(_QWORD *)(v9 + 48) = *(_QWORD *)(v0 - 56);
  v10 = *(_OWORD *)(v0 - 72);
  *(_OWORD *)(v9 + 16) = *(_OWORD *)(v0 - 88);
  *(_OWORD *)(v9 + 32) = v10;
  v11 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v11;
}

uint64_t sub_1BAB5303C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB53074(char *a1, char *a2)
{
  return sub_1BB800D30(*a1, *a2);
}

uint64_t sub_1BAB53080()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB530EC()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB5312C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB53198(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17[3];
  char v18;

  v5 = *(_QWORD *)v1;
  v4 = *(_QWORD *)(v1 + 8);
  v6 = *(_QWORD *)(v1 + 16);
  if (*(_BYTE *)(v1 + 24) == 1)
  {
    v17[0] = *(_QWORD *)v1;
    v17[1] = v4;
    v17[2] = v6;
    v18 = 5;
    sub_1BA60DF54(v5, v4, v6, 1);
    result = sub_1BB6B84D4(v17, &v18);
    if (!v2)
    {
      v8 = result;
      swift_bridgeObjectRetain();
      sub_1BB3D7F90(v5, v4, v8, 0);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v9 = swift_allocObject();
    *(_QWORD *)(v9 + 16) = v5;
    *(_QWORD *)(v9 + 24) = v4;
    v10 = v9 | 0x8000000000000000;
    v11 = *(_QWORD **)(a1 + 48);
    v12 = v11[2];
    if (v12)
    {
      v13 = v11[v12 + 3];
      sub_1BA60DF54(v5, v4, v6, 0);
      swift_retain();
      swift_retain();
      sub_1BAA736F8(v13);
      LOBYTE(v13) = v14;
      swift_release();
      swift_release();
      if ((v13 & 1) != 0)
        return swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v11 = sub_1BB38ED0C(0, v11[2] + 1, 1, v11);
    v16 = v11[2];
    v15 = v11[3];
    if (v16 >= v15 >> 1)
      v11 = sub_1BB38ED0C((_QWORD *)(v15 > 1), v16 + 1, 1, v11);
    v11[2] = v16 + 1;
    v11[v16 + 4] = v10;
    result = swift_release();
    *(_QWORD *)(a1 + 48) = v11;
  }
  return result;
}

uint64_t sub_1BAB53384(uint64_t a1)
{
  return sub_1BAB53198(a1);
}

void FormatSymbolName.bind(binder:context:)()
{
  sub_1BAB5364C();
}

void sub_1BAB533B0()
{
  sub_1BAB5364C();
}

uint64_t _s8NewsFeed16FormatSymbolNameO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  BOOL v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v5 = *(_BYTE *)(a1 + 24);
  v7 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_BYTE *)(a2 + 24);
  if ((v5 & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    {
      v10 = v3 == v7 && v2 == v6;
      if (v10 || (sub_1BB874398() & 1) != 0)
      {
        v11 = 1;
        sub_1BA60DF54(v7, v6, v8, 1);
        sub_1BA60DF54(v3, v2, v4, 1);
        sub_1BA60DF54(v7, v6, v8, 1);
        sub_1BA60DF54(v3, v2, v4, 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12 = sub_1BA8869D0(v4, v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA60DFC4(v3, v2, v4, 1);
        sub_1BA60DFC4(v7, v6, v8, 1);
        sub_1BA60DFC4(v7, v6, v8, 1);
        sub_1BA60DFC4(v3, v2, v4, 1);
        if ((v12 & 1) != 0)
          return v11 & 1;
        goto LABEL_13;
      }
      sub_1BA60DF54(v7, v6, v8, 1);
      sub_1BA60DF54(v3, v2, v4, 1);
      sub_1BA60DFC4(v3, v2, v4, 1);
      v13 = v7;
      v14 = v6;
      v15 = v8;
      v16 = 1;
LABEL_12:
      sub_1BA60DFC4(v13, v14, v15, v16);
LABEL_13:
      v11 = 0;
      return v11 & 1;
    }
LABEL_11:
    sub_1BA60DF54(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v8, v9);
    sub_1BA60DF54(v3, v2, v4, v5);
    sub_1BA60DFC4(v3, v2, v4, v5);
    v13 = v7;
    v14 = v6;
    v15 = v8;
    v16 = v9;
    goto LABEL_12;
  }
  if ((*(_BYTE *)(a2 + 24) & 1) != 0)
    goto LABEL_11;
  if (v3 == v7 && v2 == v6)
    v11 = 1;
  else
    v11 = sub_1BB874398();
  sub_1BA60DF54(v7, v6, v8, 0);
  sub_1BA60DF54(v3, v2, v4, 0);
  sub_1BA60DFC4(v3, v2, v4, 0);
  sub_1BA60DFC4(v7, v6, v8, 0);
  return v11 & 1;
}

void sub_1BAB5364C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[3];
  char v12;

  v2 = v1;
  sub_1BA856968();
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_BYTE *)(v0 + 24) == 1)
  {
    v7 = *(_QWORD *)(v0 + 8);
    v6 = *(_QWORD *)(v0 + 16);
    v8 = *(_QWORD *)v0;
    v11[0] = *(_QWORD *)v0;
    v11[1] = v7;
    v11[2] = v6;
    v12 = 5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9 = sub_1BB6B84D4(v11, &v12);
    if (!v2)
    {
      sub_1BB3757A0(v8, v7, v9, 1, (uint64_t)v5);
      sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))sub_1BA856968);
      swift_bridgeObjectRelease();
    }
  }
}

unint64_t sub_1BAB53754(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA59DFDC();
  a1[2] = sub_1BA60DF80();
  result = sub_1BAB53788();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB53788()
{
  unint64_t result;

  result = qword_1EF2B0880;
  if (!qword_1EF2B0880)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSymbolName, &type metadata for FormatSymbolName);
    atomic_store(result, (unint64_t *)&qword_1EF2B0880);
  }
  return result;
}

uint64_t destroy for FormatSymbolName(uint64_t a1)
{
  return sub_1BA60DFC4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_BYTE *)(a1 + 24));
}

uint64_t initializeWithCopy for FormatSymbolName(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA60DF54(*(_QWORD *)a2, v4, v5, v6);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for FormatSymbolName(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_BYTE *)(a2 + 24);
  sub_1BA60DF54(*(_QWORD *)a2, v4, v5, v6);
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(_QWORD *)(a1 + 16);
  v10 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  sub_1BA60DFC4(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for FormatSymbolName(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)(a2 + 16);
  v4 = *(_BYTE *)(a2 + 24);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_BYTE *)(a1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  sub_1BA60DFC4(v5, v7, v6, v8);
  return a1;
}

ValueMetadata *type metadata accessor for FormatSymbolName()
{
  return &type metadata for FormatSymbolName;
}

ValueMetadata *type metadata accessor for FormatSymbolName.CodingType()
{
  return &type metadata for FormatSymbolName.CodingType;
}

unint64_t sub_1BAB53918()
{
  unint64_t result;

  result = qword_1EF2B0888;
  if (!qword_1EF2B0888)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A20B8, &type metadata for FormatSymbolName.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2B0888);
  }
  return result;
}

uint64_t sub_1BAB5395C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB53980(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatLayoutError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id HeadlineColorPalette.backgroundColor.getter()
{
  id *v0;

  return *v0;
}

id HeadlineColorPalette.titleColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 8);
}

id HeadlineColorPalette.excerptColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 16);
}

id HeadlineColorPalette.accessoryColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 24);
}

id HeadlineColorPalette.publisherNameColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 32);
}

id HeadlineColorPalette.thumbnailPlaceholderColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 40);
}

id HeadlineColorPalette.badgePressReleaseColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 48);
}

id HeadlineColorPalette.badgeBreakingColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

id HeadlineColorPalette.badgeDevelopingColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 64);
}

id HeadlineColorPalette.badgeUpdatedColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 72);
}

id HeadlineColorPalette.badgeSubscriptionColor.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 80);
}

NewsFeed::HeadlineColorPalette::Theme __swiftcall HeadlineColorPalette.theme(for:)(UITraitCollection_optional a1)
{
  BOOL *v1;
  uint64_t v2;
  Class isa;
  BOOL *v4;
  void *v5;
  id v6;
  void *v7;
  double v8;
  double v9;
  NewsFeed::HeadlineColorPalette::Theme result;

  isa = a1.value.super.isa;
  v4 = v1;
  v5 = *(void **)(v2 + 8);
  if (isa)
    v6 = objc_msgSend(v5, sel_resolvedColorWithTraitCollection_);
  else
    v6 = v5;
  v7 = v6;
  objc_msgSend(v6, sel_ts_luminance);
  v9 = v8;

  *v4 = v9 > 0.7;
  return result;
}

BOOL static HeadlineColorPalette.Theme.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t HeadlineColorPalette.Theme.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t HeadlineColorPalette.Theme.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

id sub_1BAB53B1C()
{
  return sub_1BAB53B28(&qword_1ED39D020);
}

id sub_1BAB53B28@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id result;
  id v16;
  id v17;
  id v18;
  id v19;

  v2 = (void *)objc_opt_self();
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.235294118, 0.235294118, 0.262745098, 0.6);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), (SEL)&selRef_imageWithRenderingMode_ + 3, 0.764705882, 0.764705882, 0.764705882, 1.0);
  v19 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v3, v4);

  v5 = objc_msgSend(v2, sel_whiteColor);
  v6 = objc_msgSend(v2, sel_blackColor);
  v18 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v5, v6);

  v17 = objc_msgSend(v2, sel_labelColor);
  v16 = objc_msgSend(v2, sel_secondaryLabelColor);
  v7 = objc_msgSend(v2, sel_grayColor);
  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.9, 1.0);
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithWhite_alpha_, 0.1, 1.0);
  v10 = objc_msgSend(v2, sel_ts_dynamicColor_withDarkStyleVariant_, v8, v9);

  v11 = objc_msgSend(v2, sel_systemBlueColor);
  v12 = objc_msgSend(v2, sel_systemRedColor);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.882352941, 0.647058824, 0.0, 1.0);
  v14 = objc_msgSend(v2, sel_systemBlueColor);
  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.960784314, 0.62745098, 0.0901960784, 1.0);
  *a1 = v18;
  a1[1] = v17;
  a1[2] = v16;
  a1[3] = v19;
  a1[4] = v7;
  a1[5] = v10;
  a1[6] = v11;
  a1[7] = v12;
  a1[8] = v13;
  a1[9] = v14;
  a1[10] = result;
  return result;
}

id static HeadlineColorPalette.default.getter@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v24;

  if (qword_1ED39E160 != -1)
    swift_once();
  v2 = (void *)qword_1ED39D020;
  v3 = *(void **)algn_1ED39D028;
  v4 = (void *)qword_1ED39D030;
  v5 = (void *)unk_1ED39D038;
  v6 = (void *)qword_1ED39D040;
  v7 = (void *)unk_1ED39D048;
  v8 = (void *)qword_1ED39D050;
  v9 = (void *)unk_1ED39D058;
  v10 = (void *)qword_1ED39D060;
  v11 = (void *)unk_1ED39D068;
  v12 = qword_1ED39D070;
  v24 = (id)qword_1ED39D070;
  *a1 = qword_1ED39D020;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  v13 = v2;
  v14 = v3;
  v15 = v4;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v8;
  v20 = v9;
  v21 = v10;
  v22 = v11;
  return v24;
}

void __swiftcall HeadlineColorPalette.init(backgroundColor:titleColor:excerptColor:accessoryColor:publisherNameColor:thumbnailPlaceholderColor:badgePressReleaseColor:badgeBreakingColor:badgeDevelopingColor:badgeUpdatedColor:)(NewsFeed::HeadlineColorPalette *__return_ptr retstr, UIColor backgroundColor, UIColor titleColor, UIColor excerptColor, UIColor accessoryColor, UIColor publisherNameColor, UIColor thumbnailPlaceholderColor, UIColor badgePressReleaseColor, UIColor badgeBreakingColor, UIColor badgeDevelopingColor, UIColor badgeUpdatedColor)
{
  objc_class *v19;

  v19 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3658]), sel_initWithRed_green_blue_alpha_, 0.960784314, 0.62745098, 0.0901960784, 1.0);
  retstr->backgroundColor = backgroundColor;
  retstr->titleColor = titleColor;
  retstr->excerptColor = excerptColor;
  retstr->accessoryColor = accessoryColor;
  retstr->publisherNameColor = publisherNameColor;
  retstr->thumbnailPlaceholderColor = thumbnailPlaceholderColor;
  retstr->badgePressReleaseColor = badgePressReleaseColor;
  retstr->badgeBreakingColor = badgeBreakingColor;
  retstr->badgeDevelopingColor = badgeDevelopingColor;
  retstr->badgeUpdatedColor = badgeUpdatedColor;
  retstr->badgeSubscriptionColor.super.isa = v19;
}

unint64_t sub_1BAB53F9C()
{
  unint64_t result;

  result = qword_1EF2B0890;
  if (!qword_1EF2B0890)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineColorPalette.Theme, &type metadata for HeadlineColorPalette.Theme);
    atomic_store(result, (unint64_t *)&qword_1EF2B0890);
  }
  return result;
}

void destroy for HeadlineColorPalette(id *a1)
{

}

_QWORD *initializeWithCopy for HeadlineColorPalette(_QWORD *a1, uint64_t a2)
{
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v25;

  v3 = *(void **)a2;
  v4 = *(void **)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(void **)(a2 + 32);
  v8 = *(void **)(a2 + 40);
  a1[4] = v7;
  a1[5] = v8;
  v9 = *(void **)(a2 + 48);
  v10 = *(void **)(a2 + 56);
  a1[6] = v9;
  a1[7] = v10;
  v11 = *(void **)(a2 + 64);
  v12 = *(void **)(a2 + 72);
  a1[8] = v11;
  a1[9] = v12;
  v25 = *(void **)(a2 + 80);
  a1[10] = v25;
  v13 = v3;
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v9;
  v20 = v10;
  v21 = v11;
  v22 = v12;
  v23 = v25;
  return a1;
}

uint64_t assignWithCopy for HeadlineColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  v7 = *(void **)(a2 + 8);
  v8 = *(void **)(a1 + 8);
  *(_QWORD *)(a1 + 8) = v7;
  v9 = v7;

  v10 = *(void **)(a2 + 16);
  v11 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v10;
  v12 = v10;

  v13 = *(void **)(a2 + 24);
  v14 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v13;
  v15 = v13;

  v16 = *(void **)(a2 + 32);
  v17 = *(void **)(a1 + 32);
  *(_QWORD *)(a1 + 32) = v16;
  v18 = v16;

  v19 = *(void **)(a2 + 40);
  v20 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v19;
  v21 = v19;

  v22 = *(void **)(a2 + 48);
  v23 = *(void **)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v22;
  v24 = v22;

  v25 = *(void **)(a2 + 56);
  v26 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v25;
  v27 = v25;

  v28 = *(void **)(a2 + 64);
  v29 = *(void **)(a1 + 64);
  *(_QWORD *)(a1 + 64) = v28;
  v30 = v28;

  v31 = *(void **)(a2 + 72);
  v32 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = v31;
  v33 = v31;

  v34 = *(void **)(a2 + 80);
  v35 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = v34;
  v36 = v34;

  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for HeadlineColorPalette(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  v7 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);

  v8 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  v9 = *(void **)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineViewLayout(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineViewLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for HeadlineColorPalette()
{
  return &type metadata for HeadlineColorPalette;
}

uint64_t storeEnumTagSinglePayload for HeadlineColorPalette.Theme(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB543CC + 4 * byte_1BB8A2135[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB54400 + 4 * byte_1BB8A2130[v4]))();
}

uint64_t sub_1BAB54400(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB54408(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB54410);
  return result;
}

uint64_t sub_1BAB5441C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB54424);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB54428(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB54430(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineColorPalette.Theme()
{
  return &type metadata for HeadlineColorPalette.Theme;
}

BOOL FormatWeatherBinding.Bool.BOOL(from:)(uint64_t a1)
{
  unsigned __int8 *v1;
  int v2;

  v2 = *v1;
  return ((v2 ^ *(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for FeedWeather(0) + 32))) & 1) == 0;
}

uint64_t sub_1BAB5448C(char *a1, char *a2)
{
  return sub_1BB7FA3EC(*a1, *a2);
}

uint64_t sub_1BAB54498()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB54514()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB5456C()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB545E4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BAB54640(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7961447369;
  if (*v1)
    v2 = 0x746867694E7369;
  v3 = 0xE500000000000000;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BAB5467C()
{
  sub_1BAB54AE8();
  return sub_1BB872D60();
}

uint64_t sub_1BAB546D8()
{
  sub_1BAB54AE8();
  return sub_1BB872D0C();
}

void sub_1BAB54724(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72520E8;
}

BOOL static FormatWeatherBinding.Bool.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatWeatherBinding.Bool.hash(into:)()
{
  return sub_1BB8745D8();
}

void *static FormatWeatherBinding.Bool.allCases.getter()
{
  return &unk_1E7269280;
}

uint64_t FormatWeatherBinding.Bool.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB547C8()
{
  unint64_t result;

  result = qword_1EF2B0898;
  if (!qword_1EF2B0898)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Bool, &type metadata for FormatWeatherBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B0898);
  }
  return result;
}

unint64_t sub_1BAB5480C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB54830();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB54830()
{
  unint64_t result;

  result = qword_1EF2B08A0;
  if (!qword_1EF2B08A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Bool, &type metadata for FormatWeatherBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1EF2B08A0);
  }
  return result;
}

uint64_t sub_1BAB54874()
{
  return sub_1BA9BD27C(&qword_1EF2B08A8, &qword_1EF2B08B0);
}

void sub_1BAB548A0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252110;
}

unint64_t sub_1BAB548B0(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB548E4();
  a1[2] = sub_1BAB54928();
  result = sub_1BAB547C8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB548E4()
{
  unint64_t result;

  result = qword_1ED39EB50;
  if (!qword_1ED39EB50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Bool, &type metadata for FormatWeatherBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39EB50);
  }
  return result;
}

unint64_t sub_1BAB54928()
{
  unint64_t result;

  result = qword_1ED39E698;
  if (!qword_1ED39E698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Bool, &type metadata for FormatWeatherBinding.Bool);
    atomic_store(result, (unint64_t *)&qword_1ED39E698);
  }
  return result;
}

uint64_t sub_1BAB5496C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatWeatherBinding.Bool.init(from:)(a1, a2);
}

uint64_t sub_1BAB54980(_QWORD *a1)
{
  return FormatWeatherBinding.Bool.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Bool()
{
  return &type metadata for FormatWeatherBinding.Bool;
}

uint64_t _s4BoolOwst_1_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB549F4 + 4 * byte_1BB8A2209[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB54A28 + 4 * byte_1BB8A2204[v4]))();
}

uint64_t sub_1BAB54A28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB54A30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB54A38);
  return result;
}

uint64_t sub_1BAB54A44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB54A4CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB54A50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB54A58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4BoolO10CodingTypeOMa_1()
{
  return &_s4BoolO10CodingTypeON_1;
}

uint64_t sub_1BAB54A74()
{
  return sub_1BA9BD27C(&qword_1EF2B08B8, &qword_1EF2B08C0);
}

unint64_t sub_1BAB54AA4()
{
  unint64_t result;

  result = qword_1EF2B08C8;
  if (!qword_1EF2B08C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2440, &_s4BoolO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2B08C8);
  }
  return result;
}

unint64_t sub_1BAB54AE8()
{
  unint64_t result;

  result = qword_1ED3AFAC8;
  if (!qword_1ED3AFAC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A23C8, &_s4BoolO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3AFAC8);
  }
  return result;
}

uint64_t sub_1BAB54B2C@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v6 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1BAA63AB8(a2, (uint64_t)v8);
  v9 = v8[*(int *)(v6 + 32)];
  v10 = type metadata accessor for FormatInspectionItem(0);
  if ((a1 & 1) != 0)
  {
    v11 = (char *)(a3 + *(int *)(v10 + 24));
    *v11 = v9;
    v12 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v11, 0, 1, v12);
    v13 = xmmword_1BB8A24A0;
  }
  else
  {
    v14 = (_BYTE *)(a3 + *(int *)(v10 + 24));
    *v14 = v9 ^ 1;
    v15 = type metadata accessor for FormatInspectionItem.Value(0);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
    v13 = xmmword_1BB8A2490;
  }
  *(_OWORD *)a3 = v13;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = 0;
  v16 = a3 + *(int *)(v10 + 28);
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = -1;
  sub_1BAA63AFC((uint64_t)v8);
  type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 0, 1, v10);
}

uint64_t sub_1BAB54CC0(uint64_t a1, uint64_t a2)
{
  return sub_1BAB54CE4(a1, a2, (uint64_t (*)(void *))sub_1BAB54E38);
}

uint64_t FormatDecodingError.errorDescription.getter()
{
  return sub_1BAB54D94((uint64_t (*)(void *))sub_1BAB54E38);
}

uint64_t sub_1BAB54CD8(uint64_t a1, uint64_t a2)
{
  return sub_1BAB54CE4(a1, a2, (uint64_t (*)(void *))sub_1BAB561B4);
}

uint64_t sub_1BAB54CE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void *))
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t *v11;
  uint64_t v12;

  v5 = *v3;
  v6 = v3[1];
  v7 = v3[2];
  v8 = v3[3];
  v9 = v3[4];
  sub_1BA98D1F0();
  v10 = (void *)swift_allocError();
  *v11 = v5;
  v11[1] = v6;
  v11[2] = v7;
  v11[3] = v8;
  v11[4] = v9;
  sub_1BAB56108(v5, v6, v7, v8, v9);
  v12 = a3(v10);

  return v12;
}

uint64_t FormatDecodingError.errorHint.getter()
{
  return sub_1BAB54D94((uint64_t (*)(void *))sub_1BAB561B4);
}

uint64_t sub_1BAB54D94(uint64_t (*a1)(void *))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;
  uint64_t *v9;
  uint64_t v10;

  v3 = *v1;
  v4 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  sub_1BA98D1F0();
  v8 = (void *)swift_allocError();
  *v9 = v3;
  v9[1] = v4;
  v9[2] = v5;
  v9[3] = v6;
  v9[4] = v7;
  sub_1BAB56108(v3, v4, v5, v6, v7);
  v10 = a1(v8);

  return v10;
}

uint64_t sub_1BAB54E38(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t, uint64_t);
  int v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  const char *v36;
  _QWORD *v37;
  unint64_t v38;
  const char *v39;
  uint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  void *v44;
  _QWORD *v45;
  _QWORD *v46;
  _QWORD *v47;
  _QWORD *v48;
  _QWORD *v49;
  _QWORD *v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  unint64_t v57;
  _QWORD v58[6];

  sub_1BA4A3FB4(0, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v55 = (uint64_t)&v54 - v6;
  v7 = sub_1BB873D5C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v54 - v15;
  v56 = a1;
  v17 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v18 = sub_1BB873D68();
  v19 = swift_dynamicCast();
  v20 = *(_QWORD *)(v18 - 8);
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56);
  if (v19)
  {
    v21(v16, 0, 1, v18);
    sub_1BA57B488((uint64_t)v16, (uint64_t)v13, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
    v22 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v13, v18);
    if (v22 == *MEMORY[0x1E0DEC450])
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v13, v18);
      sub_1BA909FB4();
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v13[*(int *)(v23 + 48)], v7);
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v24 = 0x73694D2065707954;
      v25 = 0xEF203A686374616DLL;
LABEL_14:
      v58[0] = v24;
      v58[1] = v25;
      sub_1BB873D50();
      sub_1BB872AFC(v37);
      swift_bridgeObjectRelease();
      v33 = v58[0];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_15:
      sub_1BA502AD0((uint64_t)v16, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
      return v33;
    }
    if (v22 == *MEMORY[0x1E0DEC460])
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v13, v18);
      sub_1BA909FB4();
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v13[*(int *)(v35 + 48)], v7);
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v24 = 0xD000000000000011;
      v36 = "Value Not Found: ";
LABEL_13:
      v25 = (unint64_t)(v36 - 32) | 0x8000000000000000;
      goto LABEL_14;
    }
    if (v22 == *MEMORY[0x1E0DEC448])
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v13, v18);
      sub_1BA90A154();
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, &v13[*(int *)(v40 + 48)], v7);
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v58[0] = 0x20746F4E2079654BLL;
      v58[1] = 0xEF203A646E756F46;
      sub_1BB873D50();
      sub_1BB872AFC(v41);
      swift_bridgeObjectRelease();
      v33 = v58[0];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
      goto LABEL_15;
    }
    if (v22 == *MEMORY[0x1E0DEC458])
    {
      (*(void (**)(char *, uint64_t))(v20 + 96))(v13, v18);
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v24 = 0xD000000000000010;
      v36 = "Data Corrupted: ";
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v13, v18);
  }
  else
  {
    v21(v16, 1, 1, v18);
  }
  sub_1BA502AD0((uint64_t)v16, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
  v58[5] = a1;
  v26 = a1;
  v27 = sub_1BB86E3B0();
  v28 = v55;
  v29 = swift_dynamicCast();
  v30 = *(_QWORD *)(v27 - 8);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 56);
  if (v29)
  {
    v31(v28, 0, 1, v27);
    sub_1BA57B488(v28, (uint64_t)v4, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
    v32 = (*(uint64_t (**)(char *, uint64_t))(v30 + 88))(v4, v27);
    if (v32 == *MEMORY[0x1E0DB3E50])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      sub_1BA502AD0(v28, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
      return 0x6F43207974706D45;
    }
    if (v32 == *MEMORY[0x1E0DB3E10])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v38 = 0xD00000000000001DLL;
      v39 = "Expected Object: Actual type ";
LABEL_23:
      v58[0] = v38;
      v58[1] = (unint64_t)(v39 - 32) | 0x8000000000000000;
LABEL_24:
      sub_1BB872AFC((_QWORD *)v38);
      swift_bridgeObjectRelease();
LABEL_25:
      v33 = v58[0];
LABEL_26:
      sub_1BA502AD0(v28, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
      return v33;
    }
    if (v32 == *MEMORY[0x1E0DB3E08])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v38 = 0xD00000000000001CLL;
      v39 = "Expected Array: Actual type ";
      goto LABEL_23;
    }
    if (v32 == *MEMORY[0x1E0DB3E00])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      sub_1BA4CECCC((__int128 *)v4, (uint64_t)v58);
      v56 = 0;
      v57 = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC(v56);
      __swift_project_boxed_opaque_existential_1(v58, v58[3]);
      sub_1BB874350();
      v33 = (uint64_t)v56;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
      goto LABEL_26;
    }
    if (v32 == *MEMORY[0x1E0DB3E28])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC("Invalid Date Format: ");
      sub_1BB872FF4();
      sub_1BB872AFC(v42);
      goto LABEL_24;
    }
    if (v32 == *MEMORY[0x1E0DB3E30])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      v44 = (void *)*((_QWORD *)v4 + 1);
      swift_bridgeObjectRelease();

      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v38 = 0xD000000000000015;
      v39 = "Invalid Date Format: ";
      goto LABEL_23;
    }
    if (v32 == *MEMORY[0x1E0DB3DF8])
    {
      v33 = 0x2064696C61766E49;
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA502AD0(v28, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
      return v33;
    }
    if (v32 == *MEMORY[0x1E0DB3E18])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC("Invalid ISO 8601 Date: ");
      sub_1BB872FF4();
      goto LABEL_25;
    }
    if (v32 == *MEMORY[0x1E0DB3E40])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v38 = 0xD000000000000017;
      v39 = "Invalid ISO 8601 Date: ";
      goto LABEL_23;
    }
    if (v32 == *MEMORY[0x1E0DB3DF0])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v38 = 0x2064696C61766E49;
      strcpy((char *)v58, "Invalid URL: ");
      HIWORD(v58[1]) = -4864;
      goto LABEL_24;
    }
    if (v32 == *MEMORY[0x1E0DB3E58])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v58[0] = 0xD000000000000018;
      v58[1] = 0x80000001BB96D6B0;
      sub_1BB872AFC((_QWORD *)0xD000000000000018);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v45);
      goto LABEL_24;
    }
    if (v32 == *MEMORY[0x1E0DB3E20])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v58[0] = 0xD000000000000020;
      v58[1] = 0x80000001BB96D680;
      sub_1BB872AFC((_QWORD *)0xD000000000000020);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v46);
      sub_1BB872AFC(v47);
      swift_bridgeObjectRelease();
      v33 = v58[0];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v4 + 8));
      goto LABEL_26;
    }
    if (v32 == *MEMORY[0x1E0DB3E38])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      v48 = (_QWORD *)*((_QWORD *)v4 + 1);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC("Cannot Decode Numeric: ");
      sub_1BB872AFC(v49);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v50);
      sub_1BB872AFC(v51);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v52);
      v56 = v48;
      sub_1BB87420C();
LABEL_53:
      sub_1BB872AFC(v53);
      swift_bridgeObjectRelease();
      v33 = v58[0];
      sub_1BA502AD0(v55, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
      return v33;
    }
    if (v32 == *MEMORY[0x1E0DB3E48])
    {
      (*(void (**)(char *, uint64_t))(v30 + 96))(v4, v27);
      swift_bridgeObjectRelease();
      v58[0] = 0;
      v58[1] = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v53 = (_QWORD *)0xD000000000000017;
      v58[0] = 0xD000000000000017;
      v58[1] = 0x80000001BB96D630;
      goto LABEL_53;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v27);
    v28 = v55;
  }
  else
  {
    v31(v28, 1, 1, v27);
  }
  sub_1BA502AD0(v28, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
  v56 = a1;
  v34 = a1;
  if (swift_dynamicCast())
    __asm { BR              X10 }
  v58[0] = 0;
  v58[1] = 0xE000000000000000;
  v56 = a1;
  sub_1BB873E34();
  return v58[0];
}

id sub_1BAB56108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  id result;
  void *v6;

  switch(a5 >> 60)
  {
    case 0uLL:
    case 1uLL:
    case 6uLL:
    case 0xBuLL:
    case 0xEuLL:
      goto LABEL_3;
    case 2uLL:
    case 7uLL:
    case 8uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xDuLL:
      swift_bridgeObjectRetain();
LABEL_3:
      result = (id)swift_bridgeObjectRetain();
      break;
    case 0xCuLL:
      v6 = (void *)(a5 & 0xFFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRetain();
      result = v6;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1BAB561B4(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  id v16;
  int v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v19;
  id v20;
  int v21;
  void (*v22)(char *, uint64_t, uint64_t, uint64_t);
  id v23;
  uint64_t v25;
  void *v26;
  void *v28;

  sub_1BA4A3FB4(0, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v25 - v3;
  v5 = sub_1BB86E3B0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v25 - v10;
  v12 = sub_1BB873D68();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = a1;
  v16 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  v17 = swift_dynamicCast();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v17)
  {
    v18(v11, 0, 1, v12);
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    v19 = sub_1BA9099A8((uint64_t)v15);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v18(v11, 1, 1, v12);
    sub_1BA502AD0((uint64_t)v11, &qword_1EF2AA6A0, (void (*)(uint64_t))MEMORY[0x1E0DEC498]);
    v26 = a1;
    v20 = a1;
    v21 = swift_dynamicCast();
    v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    if (v21)
    {
      v22(v4, 0, 1, v5);
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      sub_1BA4A2870(&qword_1EF2B08D8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3E60], MEMORY[0x1E0DB3E68]);
      v19 = sub_1BB87420C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    else
    {
      v22(v4, 1, 1, v5);
      sub_1BA502AD0((uint64_t)v4, &qword_1EF2B08D0, (void (*)(uint64_t))MEMORY[0x1E0DB3E60]);
      v28 = a1;
      v23 = a1;
      if (swift_dynamicCast())
        __asm { BR              X10 }
      return 0;
    }
  }
  return v19;
}

unint64_t sub_1BAB56E24(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA98D1F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

void destroy for FormatDecodingError(uint64_t a1)
{
  sub_1BA8EBE4C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
}

uint64_t *initializeWithCopy for FormatDecodingError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_1BAB56108(*a2, v4, v5, v6, v7);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return a1;
}

uint64_t *assignWithCopy for FormatDecodingError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  sub_1BAB56108(*a2, v4, v5, v6, v7);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  v12 = a1[4];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  sub_1BA8EBE4C(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for FormatDecodingError(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  __int128 v9;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *a1;
  v6 = a1[1];
  v5 = a1[2];
  v7 = a1[3];
  v8 = a1[4];
  v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  a1[4] = v3;
  sub_1BA8EBE4C(v4, v6, v5, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDecodingError(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x71 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 113);
  v3 = ((*(_QWORD *)(a1 + 32) >> 60) & 0x8F | (16 * (*(_QWORD *)(a1 + 32) & 7))) ^ 0x7F;
  if (v3 >= 0x70)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDecodingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x70)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 - 113;
    if (a3 >= 0x71)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if (a3 >= 0x71)
      *(_BYTE *)(result + 40) = 0;
    if (a2)
    {
      v3 = (-a2 >> 4) & 7 | (8 * (-a2 & 0x7F));
      *(_OWORD *)result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(_QWORD *)(result + 32) = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1BAB57024(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 32) >> 60;
  if ((_DWORD)v1 == 15)
    return (*(_DWORD *)a1 + 15);
  else
    return v1;
}

uint64_t sub_1BAB57040(uint64_t result)
{
  *(_QWORD *)(result + 32) &= 0xFFFFFFFFFFFFFFFuLL;
  return result;
}

_QWORD *sub_1BAB57050(_QWORD *result, uint64_t a2)
{
  if (a2 < 0xF)
  {
    result[4] = result[4] & 0xFFFFFFFFFFFFFF8 | (a2 << 60);
  }
  else
  {
    *result = (a2 - 15);
    result[1] = 0;
    result[2] = 0;
    result[3] = 0;
    result[4] = 0xF000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDecodingError()
{
  return &type metadata for FormatDecodingError;
}

uint64_t sub_1BAB57090(_QWORD *a1, _QWORD *a2, uint64_t *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a3;
  v5 = a3[1];
  v6 = a4[1];
  *a1 = *a4;
  a1[1] = v6;
  *a2 = v4;
  a2[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

void *sub_1BAB570C8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;
  id v11;

  v2 = sub_1BB86DF6C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = a1;
  v6 = a1;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  if (!swift_dynamicCast())
    goto LABEL_5;
  if ((*(unsigned int (**)(_QWORD *, uint64_t))(v3 + 88))(v5, v2) != *MEMORY[0x1E0DB3618])
  {
    (*(void (**)(_QWORD *, uint64_t))(v3 + 8))(v5, v2);
LABEL_5:

    v8 = a1;
    return a1;
  }
  (*(void (**)(_QWORD *, uint64_t))(v3 + 96))(v5, v2);
  v7 = (void *)*v5;
  a1 = (void *)sub_1BAB570C8(*v5);

  return a1;
}

uint64_t sub_1BAB571E8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAB57230()
{
  return sub_1BB872A90();
}

uint64_t sub_1BAB57240()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BAB57284@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BAB572D4(_QWORD *a1@<X8>)
{
  *a1 = 1885433183;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1BAB572E8@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1BAB5733C()
{
  sub_1BA82F074();
  return sub_1BB874710();
}

uint64_t sub_1BAB57364()
{
  sub_1BA82F074();
  return sub_1BB87471C();
}

uint64_t sub_1BAB5738C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v2, 0);
    v3 = v18;
    v6 = (uint64_t *)(a1 + 40);
    while (1)
    {
      v8 = *(v6 - 1);
      v7 = *v6;
      v9 = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      if (!v9)
        goto LABEL_7;
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v8, v7);
      if ((v10 & 1) == 0)
        break;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v11);
      sub_1BB872AFC(v12);
LABEL_8:
      sub_1BB872AFC(v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = *(_QWORD *)(v18 + 16);
      v14 = *(_QWORD *)(v18 + 24);
      if (v15 >= v14 >> 1)
        sub_1BA7447E8(v14 > 1, v15 + 1, 1);
      v6 += 2;
      *(_QWORD *)(v18 + 16) = v15 + 1;
      v16 = v18 + 16 * v15;
      *(_QWORD *)(v16 + 32) = 539828256;
      *(_QWORD *)(v16 + 40) = 0xE400000000000000;
      if (!--v2)
        return v3;
    }
    swift_bridgeObjectRelease();
LABEL_7:
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  return v3;
}

uint64_t storeEnumTagSinglePayload for FormatDecodingError.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAB57568 + 4 * byte_1BB8A24EE[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAB57588 + 4 * byte_1BB8A24F3[v4]))();
}

_BYTE *sub_1BAB57568(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAB57588(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB57590(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB57598(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB575A0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB575A8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FormatDecodingError.CodingKeys()
{
  return &type metadata for FormatDecodingError.CodingKeys;
}

unint64_t sub_1BAB575C8()
{
  unint64_t result;

  result = qword_1EF2B08E0;
  if (!qword_1EF2B08E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2690, &type metadata for FormatDecodingError.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B08E0);
  }
  return result;
}

BOOL static FormatBindingLayeredMediaExpressionLogic.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatBindingLayeredMediaExpressionLogic.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatBindingLayeredMediaExpressionLogic.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BAB57694()
{
  unint64_t result;

  result = qword_1EF2B08E8;
  if (!qword_1EF2B08E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingLayeredMediaExpressionLogic, &type metadata for FormatBindingLayeredMediaExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B08E8);
  }
  return result;
}

unint64_t sub_1BAB576D8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB576FC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB576FC()
{
  unint64_t result;

  result = qword_1EF2B08F0;
  if (!qword_1EF2B08F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatBindingLayeredMediaExpressionLogic, &type metadata for FormatBindingLayeredMediaExpressionLogic);
    atomic_store(result, (unint64_t *)&qword_1EF2B08F0);
  }
  return result;
}

unint64_t sub_1BAB57740(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA946B08();
  a1[2] = sub_1BA946B50();
  result = sub_1BAB57694();
  a1[3] = result;
  return result;
}

uint64_t sub_1BAB57774@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatBindingLayeredMediaExpressionLogic.init(from:)(a1, a2);
}

uint64_t sub_1BAB57788(_QWORD *a1)
{
  return FormatBindingLayeredMediaExpressionLogic.encode(to:)(a1);
}

uint64_t storeEnumTagSinglePayload for FormatBindingLayeredMediaExpressionLogic(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB577E8 + 4 * byte_1BB8A2715[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB5781C + 4 * byte_1BB8A2710[v4]))();
}

uint64_t sub_1BAB5781C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB57824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5782CLL);
  return result;
}

uint64_t sub_1BAB57838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB57840);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB57844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5784C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatBindingLayeredMediaExpressionLogic()
{
  return &type metadata for FormatBindingLayeredMediaExpressionLogic;
}

uint64_t dispatch thunk of FormatFeedPluginSubFactoryType.createFormatPlugin(group:formatContent:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t dispatch thunk of FeedBannerAdIntegrating.integrateBannerAdUpdates(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1BAB57878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)();
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  id v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  void (*v65)(void);
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  int64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  unint64_t v91;
  unint64_t v92;
  int64_t v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  uint64_t v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t (*v114)();
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  unint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t (*v137)();
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  _QWORD *v145;
  unint64_t v146;
  void (*v147)(void);
  uint64_t v148;
  unint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  _QWORD *v161;
  unint64_t v162;
  uint64_t v163;
  unint64_t v164;
  unint64_t v165;
  _QWORD *v166;
  _QWORD *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  uint64_t *v179;
  uint64_t *v180;
  _QWORD *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  char *v196;
  char *v197;
  uint64_t *v198;
  uint64_t *v199;
  uint64_t *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  void (*v212)(char *, uint64_t *, uint64_t);
  uint64_t v213;
  char *v214;
  void (*v215)(void);
  uint64_t *v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  unint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t v226;

  v187 = a3;
  v184 = sub_1BB86FE2C();
  v183 = *(_QWORD *)(v184 - 8);
  MEMORY[0x1E0C80A78](v184);
  v185 = (char *)&v176 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1EF2C0530, (void (*)(uint64_t))MEMORY[0x1E0DB74E0]);
  MEMORY[0x1E0C80A78](v7);
  v182 = (char *)&v176 - v8;
  sub_1BA4A3FB4(0, &qword_1EF2CC0F0, (void (*)(uint64_t))MEMORY[0x1E0DBC2A8]);
  MEMORY[0x1E0C80A78](v9);
  v186 = (char *)&v176 - v10;
  v11 = type metadata accessor for WebEmbedDataSourceJson();
  MEMORY[0x1E0C80A78](v11);
  v202 = (char *)&v176 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v201 = (uint64_t)&v176 - v14;
  v209 = type metadata accessor for WebEmbedDataSourceCacheEntry();
  MEMORY[0x1E0C80A78](v209);
  v205 = (char *)&v176 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v195 = (uint64_t *)((char *)&v176 - v17);
  v208 = sub_1BB87174C();
  v207 = *(_QWORD *)(v208 - 8);
  MEMORY[0x1E0C80A78](v208);
  v203 = (uint64_t)&v176 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v196 = (char *)&v176 - v20;
  v206 = type metadata accessor for WebEmbedDatastoreProperty();
  v194 = *(_QWORD *)(v206 - 8);
  MEMORY[0x1E0C80A78](v206);
  v204 = (char *)&v176 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v217 = (uint64_t)&v176 - v23;
  MEMORY[0x1E0C80A78](v24);
  v197 = (char *)&v176 - v25;
  MEMORY[0x1E0C80A78](v26);
  v199 = (uint64_t *)((char *)&v176 - v27);
  v219 = sub_1BB86FC28();
  v28 = *(_QWORD *)(v219 - 8);
  MEMORY[0x1E0C80A78](v219);
  v200 = (uint64_t *)((char *)&v176 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v30);
  v216 = (uint64_t *)((char *)&v176 - v31);
  MEMORY[0x1E0C80A78](v32);
  v198 = (uint64_t *)((char *)&v176 - v33);
  MEMORY[0x1E0C80A78](v34);
  v180 = (uint64_t *)((char *)&v176 - v35);
  MEMORY[0x1E0C80A78](v36);
  v179 = (uint64_t *)((char *)&v176 - v37);
  MEMORY[0x1E0C80A78](v38);
  v214 = (char *)&v176 - v39;
  MEMORY[0x1E0C80A78](v40);
  v42 = (uint64_t *)((char *)&v176 - v41);
  v191 = type metadata accessor for WebEmbedDataVisualization();
  MEMORY[0x1E0C80A78](v191);
  v190 = (char *)&v176 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v44);
  v189 = (uint64_t *)((char *)&v176 - v45);
  MEMORY[0x1E0C80A78](v46);
  v48 = (uint64_t (*)())((char *)&v176 - v47);
  MEMORY[0x1E0C80A78](v49);
  v51 = (char *)&v176 - v50;
  v52 = v3[5];
  v53 = v3[6];
  v181 = v3;
  v178 = v3 + 2;
  __swift_project_boxed_opaque_existential_1(v3 + 2, v52);
  v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v53 + 32);
  v193 = a1;
  v55 = v54(a1, v52, v53);
  v192 = v55;
  v188 = a2;
  if (v55)
  {
    v56 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v55
                                                                + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_datastore), sel_JSONString));
    v57 = sub_1BB8729A0();
    v218 = v58;

  }
  else
  {
    v218 = 0xE400000000000000;
    v57 = 1819047278;
  }
  sub_1BAB58E90();
  v60 = v59;
  v61 = swift_allocBox();
  v63 = v62;
  v211 = v60;
  v64 = (_QWORD *)(v62 + *(int *)(v60 + 48));
  sub_1BA4C2DD8(v193, (uint64_t)v51, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  sub_1BB74D960((uint64_t)v51, v63);
  *v64 = 0xD000000000000018;
  v64[1] = 0x80000001BB96D810;
  *v42 = v61;
  v65 = *(void (**)(void))(v28 + 104);
  v210 = *MEMORY[0x1E0DB79D0];
  v215 = v65;
  ((void (*)(uint64_t *))v65)(v42);
  v66 = sub_1BB391A84(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v68 = *(_QWORD *)(v66 + 16);
  v67 = *(_QWORD *)(v66 + 24);
  v69 = v68 + 1;
  v70 = (uint64_t)v204;
  if (v68 < v67 >> 1)
    goto LABEL_5;
LABEL_60:
  v66 = sub_1BB391A84(v67 > 1, v69, 1, v66);
LABEL_5:
  v71 = (uint64_t)v196;
  v72 = (uint64_t *)v214;
  *(_QWORD *)(v66 + 16) = v69;
  v214 = (char *)((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
  v73 = *(_QWORD *)(v28 + 72);
  v74 = v42;
  v75 = v219;
  v76 = v66;
  v212 = *(void (**)(char *, uint64_t *, uint64_t))(v28 + 32);
  v213 = v73;
  v212(&v214[v66 + v73 * v68], v74, v219);
  v77 = (_QWORD *)swift_allocObject();
  v78 = v218;
  v77[2] = v57;
  v77[3] = v78;
  v77[4] = 0xD00000000000001CLL;
  v77[5] = 0x80000001BB96D830;
  *v72 = (uint64_t)v77;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v215)(v72, *MEMORY[0x1E0DB79C0], v75);
  v79 = v76;
  v81 = *(_QWORD *)(v76 + 16);
  v80 = *(_QWORD *)(v76 + 24);
  if (v81 >= v80 >> 1)
    v79 = sub_1BB391A84(v80 > 1, v81 + 1, 1, v76);
  v28 = (uint64_t)v205;
  v68 = (unint64_t)v197;
  *(_QWORD *)(v79 + 16) = v81 + 1;
  v218 = v79;
  v212(&v214[v79 + v81 * v213], v72, v219);
  sub_1BA4C2DD8(v193, (uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v48, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    goto LABEL_12;
  }
  v226 = *(_QWORD *)v48;
  SportsDataVisualization.config.getter();
  swift_release();
  v82 = v221;
  if (v221)
  {
    v72 = (uint64_t *)v220;
    v83 = v222;
    v84 = v223;
    v85 = v224;
    v86 = v225;
    v87 = v211;
    v177 = swift_allocBox();
    v89 = v88;
    v90 = (_QWORD *)(v88 + *(int *)(v87 + 48));
    v220 = (uint64_t)v72;
    v221 = v82;
    v222 = v83;
    v223 = v84;
    v224 = v85;
    v225 = v86;
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB74FA80(&v220, v89);
    *v90 = 0xD000000000000020;
    v90[1] = 0x80000001BB96D890;
    *v179 = v177;
    v215();
    v91 = v218;
    v68 = *(_QWORD *)(v218 + 16);
    v92 = *(_QWORD *)(v218 + 24);
    v93 = v68 + 1;
    if (v68 >= v92 >> 1)
      goto LABEL_73;
    goto LABEL_11;
  }
  while (1)
  {
LABEL_12:
    v94 = v193;
    v95 = v189;
    sub_1BA4C2DD8(v193, (uint64_t)v189, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v95, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v96 = v192;
    }
    else
    {
      v220 = *v95;
      SportsDataVisualization.event.getter();
      v98 = v97;
      swift_release();
      if (v98)
      {
        v99 = v211;
        v100 = swift_allocBox();
        v102 = v101;
        v103 = v101 + *(int *)(v99 + 48);
        v104 = (void *)swift_unknownObjectRetain();
        sub_1BB750180(v104, v102);
        strcpy((char *)v103, "sports-event");
        *(_BYTE *)(v103 + 13) = 0;
        *(_WORD *)(v103 + 14) = -5120;
        *v180 = v100;
        v215();
        v105 = v218;
        v107 = *(_QWORD *)(v218 + 16);
        v106 = *(_QWORD *)(v218 + 24);
        if (v107 >= v106 >> 1)
          v105 = sub_1BB391A84(v106 > 1, v107 + 1, 1, v218);
        v68 = (unint64_t)v197;
        *(_QWORD *)(v105 + 16) = v107 + 1;
        v218 = v105;
        v212(&v214[v105 + v107 * v213], v180, v219);
        swift_unknownObjectRelease();
      }
      v96 = v192;
      v94 = v193;
    }
    v108 = (uint64_t *)v190;
    v42 = v199;
    if (!v96)
      goto LABEL_66;
    v109 = *(_QWORD *)(v96 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_contents);
    if (!v109)
    {
      v126 = swift_retain();
      v69 = v217;
LABEL_32:
      v127 = v181;
      goto LABEL_33;
    }
    v72 = *(uint64_t **)(v109 + 16);
    v69 = v217;
    if (!v72)
    {
      v126 = swift_retain();
      goto LABEL_32;
    }
    v110 = v109 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
    v111 = *(_QWORD *)(v194 + 72);
    swift_retain();
    v189 = (uint64_t *)v109;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA4C2DD8(v110, (uint64_t)v42, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
      sub_1BA4C2DD8((uint64_t)v42, v68, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
      v112 = v195;
      sub_1BA4C2DD8(v68 + *(int *)(v206 + 20), (uint64_t)v195, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1BB75086C(*v112, v71);
        v113 = v68;
        v114 = type metadata accessor for WebEmbedDatastoreProperty;
      }
      else
      {
        v115 = v201;
        sub_1BAB58F70((uint64_t)v112, v201);
        v116 = v202;
        sub_1BA4C2DD8(v115, (uint64_t)v202, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
        sub_1BB7531C8(v116, v71);
        sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
        v113 = v115;
        v114 = type metadata accessor for WebEmbedDataSourceJson;
      }
      sub_1BA4A2E80(v113, (uint64_t (*)(_QWORD))v114);
      v117 = v211;
      v118 = swift_allocBox();
      v120 = (_QWORD *)(v119 + *(int *)(v117 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 32))(v119, v71, v208);
      v220 = 0;
      v221 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v220 = 0xD000000000000013;
      v221 = 0x80000001BB96D870;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v121);
      swift_bridgeObjectRelease();
      v122 = v221;
      *v120 = v220;
      v120[1] = v122;
      *v198 = v118;
      v215();
      v123 = v218;
      v125 = *(_QWORD *)(v218 + 16);
      v124 = *(_QWORD *)(v218 + 24);
      if (v125 >= v124 >> 1)
        v123 = sub_1BB391A84(v124 > 1, v125 + 1, 1, v218);
      *(_QWORD *)(v123 + 16) = v125 + 1;
      v218 = v123;
      v212(&v214[v123 + v125 * v213], v198, v219);
      v42 = v199;
      sub_1BA4A2E80((uint64_t)v199, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
      v110 += v111;
      v72 = (uint64_t *)((char *)v72 - 1);
      v69 = v217;
      v71 = (uint64_t)v196;
      v68 = (unint64_t)v197;
    }
    while (v72);
    swift_bridgeObjectRelease();
    v126 = v192;
    v127 = v181;
    v28 = (uint64_t)v205;
    v70 = (uint64_t)v204;
LABEL_33:
    v128 = *(_QWORD *)(v126 + OBJC_IVAR____TtC8NewsFeed17WebEmbedDatastore_childrenContents);
    if (v128)
    {
      v198 = *(uint64_t **)(v128 + 16);
      if (v198)
      {
        v197 = (char *)(v128 + 32);
        v129 = swift_bridgeObjectRetain();
        v57 = 0;
        v48 = type metadata accessor for WebEmbedDatastoreProperty;
        v196 = (char *)v129;
        while (1)
        {
          v67 = *(_QWORD *)(v129 + 16);
          if (v57 >= v67)
            break;
          v130 = *(_QWORD *)&v197[8 * v57];
          v72 = *(uint64_t **)(v130 + 16);
          if (v72)
          {
            v131 = v194;
            v132 = v130
                 + ((*(unsigned __int8 *)(v194 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v194 + 80));
            v199 = *(uint64_t **)&v197[8 * v57];
            swift_bridgeObjectRetain();
            v133 = *(_QWORD *)(v131 + 72);
            do
            {
              sub_1BA4C2DD8(v132, v69, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
              sub_1BA4C2DD8(v69, v70, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
              sub_1BA4C2DD8(v70 + *(int *)(v206 + 20), v28, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceCacheEntry);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v134 = *(_QWORD *)v28;
                v135 = v203;
                sub_1BB75086C(v134, v203);
                v136 = v70;
                v137 = type metadata accessor for WebEmbedDatastoreProperty;
              }
              else
              {
                v138 = v201;
                sub_1BAB58F70(v28, v201);
                v139 = v202;
                sub_1BA4C2DD8(v138, (uint64_t)v202, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataSourceJson);
                v135 = v203;
                sub_1BB7531C8(v139, v203);
                sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
                v136 = v138;
                v137 = type metadata accessor for WebEmbedDataSourceJson;
              }
              sub_1BA4A2E80(v136, (uint64_t (*)(_QWORD))v137);
              v140 = v211;
              v141 = swift_allocBox();
              v68 = v142 + *(int *)(v140 + 48);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v207 + 32))(v142, v135, v208);
              v220 = 0;
              v221 = 0xE000000000000000;
              sub_1BB873CB4();
              swift_bridgeObjectRelease();
              v220 = 0x6968632D61746164;
              v221 = 0xEB000000002D646CLL;
              v226 = v57;
              sub_1BB87420C();
              sub_1BB872AFC(v143);
              swift_bridgeObjectRelease();
              sub_1BB872AFC(v144);
              swift_bridgeObjectRetain();
              sub_1BB872AFC(v145);
              swift_bridgeObjectRelease();
              v146 = v221;
              *(_QWORD *)v68 = v220;
              *(_QWORD *)(v68 + 8) = v146;
              v147 = v215;
              *v216 = v141;
              v147();
              v148 = v218;
              v150 = *(_QWORD *)(v218 + 16);
              v149 = *(_QWORD *)(v218 + 24);
              v42 = (uint64_t *)(v150 + 1);
              if (v150 >= v149 >> 1)
                v148 = sub_1BB391A84(v149 > 1, v150 + 1, 1, v218);
              *(_QWORD *)(v148 + 16) = v42;
              v218 = v148;
              v212(&v214[v148 + v150 * v213], v216, v219);
              v69 = v217;
              sub_1BA4A2E80(v217, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDatastoreProperty);
              v132 += v133;
              v72 = (uint64_t *)((char *)v72 - 1);
              v28 = (uint64_t)v205;
              v70 = (uint64_t)v204;
            }
            while (v72);
            swift_bridgeObjectRelease();
            v129 = (uint64_t)v196;
          }
          if ((uint64_t *)++v57 == v198)
          {
            swift_bridgeObjectRelease();
            v127 = v181;
            goto LABEL_48;
          }
        }
        __break(1u);
        goto LABEL_60;
      }
    }
LABEL_48:
    v151 = v127[5];
    v152 = v127[6];
    __swift_project_boxed_opaque_existential_1(v178, v151);
    v93 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v152 + 48))(v192, v151, v152);
    v82 = *(_QWORD *)(v93 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    if ((unint64_t)v82 >> 62)
    {
      if (v82 < 0)
        v93 = v82;
      else
        v93 = v82 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      v153 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (!v153)
        goto LABEL_65;
    }
    else
    {
      v92 = v82 & 0xFFFFFFFFFFFFF8;
      v153 = *(_QWORD *)((v82 & 0xFFFFFFFFFFFFF8) + 0x10);
      if (!v153)
        goto LABEL_65;
    }
    if (v153 >= 1)
      break;
    __break(1u);
LABEL_73:
    v91 = sub_1BB391A84(v92 > 1, v93, 1, v91);
LABEL_11:
    *(_QWORD *)(v91 + 16) = v93;
    v218 = v91;
    v212(&v214[v91 + v68 * v213], v179, v219);
    sub_1BA993900((uint64_t)v72, v82);
    v71 = (uint64_t)v196;
    v68 = (unint64_t)v197;
  }
  v154 = 0;
  do
  {
    if ((v82 & 0xC000000000000001) != 0)
      MEMORY[0x1BCCE4630](v154, v82);
    else
      swift_retain();
    v155 = v211;
    v156 = swift_allocBox();
    v158 = v157;
    v159 = (_QWORD *)(v157 + *(int *)(v155 + 48));
    v160 = swift_retain();
    sub_1BB75086C(v160, v158);
    v220 = 0;
    v221 = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v220 = 0xD00000000000001BLL;
    v221 = 0x80000001BB96D850;
    v226 = v154;
    sub_1BB87420C();
    sub_1BB872AFC(v161);
    swift_bridgeObjectRelease();
    v162 = v221;
    *v159 = v220;
    v159[1] = v162;
    *v200 = v156;
    v215();
    v163 = v218;
    v165 = *(_QWORD *)(v218 + 16);
    v164 = *(_QWORD *)(v218 + 24);
    if (v165 >= v164 >> 1)
      v163 = sub_1BB391A84(v164 > 1, v165 + 1, 1, v218);
    ++v154;
    *(_QWORD *)(v163 + 16) = v165 + 1;
    v218 = v163;
    v212(&v214[v163 + v165 * v213], v200, v219);
    swift_release();
  }
  while (v153 != v154);
LABEL_65:
  swift_release();
  swift_bridgeObjectRelease();
  v94 = v193;
  v108 = (uint64_t *)v190;
LABEL_66:
  sub_1BA4C2DD8(v94, (uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v168 = *v108;
    v220 = 0x207374726F7053;
    v221 = 0xE700000000000000;
    __asm { BR              X11 }
  }
  v220 = 0x65626D4520626557;
  v221 = 0xEB000000003C2064;
  WebEmbedDataVisualization.identifier.getter();
  sub_1BB872AFC(v166);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v167);
  sub_1BA4A2E80((uint64_t)v108, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  swift_getObjectType();
  sub_1BB8714A0();
  sub_1BB871464();
  if (qword_1EF2A7080 != -1)
    swift_once();
  v169 = sub_1BB86F9A0();
  v170 = __swift_project_value_buffer(v169, (uint64_t)qword_1EF2BC8D8);
  v171 = *(_QWORD *)(v169 - 8);
  v172 = v182;
  (*(void (**)(char *, uint64_t, uint64_t))(v171 + 16))(v182, v170, v169);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v171 + 56))(v172, 0, 1, v169);
  (*(void (**)(char *, _QWORD, uint64_t))(v183 + 104))(v185, *MEMORY[0x1E0DB7E18], v184);
  v173 = (uint64_t)v186;
  sub_1BB871320();
  v174 = sub_1BB87132C();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v174 - 8) + 56))(v173, 0, 1, v174);
  sub_1BB86FF70();
  sub_1BAB58F24(v173);
  swift_release();
  return swift_release();
}

uint64_t sub_1BAB58E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BAB57878(a4, a1, a2);
}

void sub_1BAB58E90()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AFB80)
  {
    sub_1BB87174C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AFB80);
  }
}

uint64_t sub_1BAB58EF8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BAB58F24(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4A3FB4(0, &qword_1EF2CC0F0, (void (*)(uint64_t))MEMORY[0x1E0DBC2A8]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BAB58F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WebEmbedDataSourceJson();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB58FB8()
{
  sub_1BA83C40C();
  return sub_1BB874710();
}

uint64_t sub_1BAB58FE0()
{
  sub_1BA83C40C();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59008()
{
  return 0;
}

uint64_t sub_1BAB59014()
{
  sub_1BA83C238();
  return sub_1BB874710();
}

uint64_t sub_1BAB5903C()
{
  sub_1BA83C238();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59064@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1BAB59090()
{
  sub_1BA83C30C();
  return sub_1BB874710();
}

uint64_t sub_1BAB590B8()
{
  sub_1BA83C30C();
  return sub_1BB87471C();
}

uint64_t sub_1BAB590E0()
{
  sub_1BA83C164();
  return sub_1BB874710();
}

uint64_t sub_1BAB59108()
{
  sub_1BA83C164();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59134()
{
  sub_1BA83BFBC();
  return sub_1BB874710();
}

uint64_t sub_1BAB5915C()
{
  sub_1BA83BFBC();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59184()
{
  sub_1BA83C090();
  return sub_1BB874710();
}

uint64_t sub_1BAB591AC()
{
  sub_1BA83C090();
  return sub_1BB87471C();
}

void FeedServiceOptions.RootCursorSource.encode(to:)(_QWORD *a1)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  _QWORD v18[14];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1ED3A3140, (uint64_t (*)(void))sub_1BA83C30C, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.NetworkOnlyCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v18[12] = v3;
  v18[9] = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v18[7] = (char *)v18 - v4;
  sub_1BA4CDF6C(0, &qword_1ED3A3160, (uint64_t (*)(void))sub_1BA83BFBC, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseDateIntervalCodingKeys, v2);
  v20 = v5;
  v18[13] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v18[11] = (char *)v18 - v6;
  v19 = sub_1BB86BEC0();
  v18[10] = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v18[8] = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3A3158, (uint64_t (*)(void))sub_1BA83C090, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseMaxAgeCodingKeys, v2);
  v18[5] = *(_QWORD *)(v8 - 8);
  v18[6] = v8;
  MEMORY[0x1E0C80A78](v8);
  v18[4] = (char *)v18 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3A3150, (uint64_t (*)(void))sub_1BA83C164, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseCodingKeys, v2);
  v18[2] = *(_QWORD *)(v10 - 8);
  v18[3] = v10;
  MEMORY[0x1E0C80A78](v10);
  v18[1] = (char *)v18 - v11;
  sub_1BA4CDF6C(0, &qword_1ED3A3148, (uint64_t (*)(void))sub_1BA83C238, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.DatabaseOnlyCodingKeys, v2);
  v18[0] = v12;
  MEMORY[0x1E0C80A78](v12);
  v13 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED3A3138, (uint64_t (*)(void))sub_1BA83C40C, (uint64_t)&type metadata for FeedServiceOptions.RootCursorSource.CodingKeys, v2);
  v21 = *(_QWORD *)(v16 - 8);
  v22 = v16;
  MEMORY[0x1E0C80A78](v16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83C40C();
  sub_1BB8746C8();
  sub_1BA4C2DD8(v23, (uint64_t)v15, type metadata accessor for FeedServiceOptions.RootCursorSource);
  v17 = (char *)sub_1BAB594EC + 4 * byte_1BB8A2925[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BAB594EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v1 - 91) = 2;
  sub_1BA83C090();
  v2 = *(_QWORD *)(v1 - 224);
  v3 = *(_QWORD *)(v1 - 120);
  sub_1BB874110();
  v4 = *(_QWORD *)(v1 - 208);
  sub_1BB874194();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 216) + 8))(v2, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 128) + 8))(v0, v3);
}

void sub_1BAB59744(_QWORD *a1)
{
  FeedServiceOptions.RootCursorSource.encode(to:)(a1);
}

uint64_t static FeedServiceOptions.RootCursorFreshness.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1BAB59788()
{
  sub_1BA83BD44();
  return sub_1BB874710();
}

uint64_t sub_1BAB597B0()
{
  sub_1BA83BD44();
  return sub_1BB87471C();
}

uint64_t sub_1BAB597D8()
{
  sub_1BA83BE74();
  return sub_1BB874710();
}

uint64_t sub_1BAB59800()
{
  sub_1BA83BE74();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1BB874398();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1BAB598A4()
{
  sub_1BA83BC70();
  return sub_1BB874710();
}

uint64_t sub_1BAB598CC()
{
  sub_1BA83BC70();
  return sub_1BB87471C();
}

uint64_t FeedServiceOptions.RootCursorFreshness.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1ED3A3178, (uint64_t (*)(void))sub_1BA83BC70, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.NewerThanCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v22 = *(_QWORD *)(v4 - 8);
  v23 = v4;
  MEMORY[0x1E0C80A78](v4);
  v21 = (char *)&v19 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3A3170, (uint64_t (*)(void))sub_1BA83BD44, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.AnyCodingKeys, v3);
  v19 = *(_QWORD *)(v6 - 8);
  v20 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v19 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3A3168, (uint64_t (*)(void))sub_1BA83BE74, (uint64_t)&type metadata for FeedServiceOptions.RootCursorFreshness.CodingKeys, v3);
  v24 = v9;
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v19 - v11;
  v13 = *(_BYTE *)(v1 + 8);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83BE74();
  sub_1BB8746C8();
  if ((v13 & 1) != 0)
  {
    v25 = 0;
    sub_1BA83BD44();
    v14 = v24;
    sub_1BB874110();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v20);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v14);
  }
  else
  {
    v26 = 1;
    sub_1BA83BC70();
    v16 = v21;
    v17 = v24;
    sub_1BB874110();
    v18 = v23;
    sub_1BB874194();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
}

uint64_t sub_1BAB59B58(uint64_t a1, uint64_t a2)
{
  int v3;
  unsigned int v4;
  uint64_t result;

  v3 = *(unsigned __int8 *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a2 + 8);
  result = v3 & v4;
  if ((v3 & 1) == 0 && (v4 & 1) == 0)
    return *(double *)a1 == *(double *)a2;
  return result;
}

uint64_t sub_1BAB59B88(_QWORD *a1)
{
  return FeedServiceOptions.RootCursorFreshness.encode(to:)(a1);
}

uint64_t FeedServiceOptions.Database.hash(into:)()
{
  return sub_1BB8745D8();
}

BOOL static FeedServiceOptions.Database.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1BAB59BD8()
{
  sub_1BA83BA2C();
  return sub_1BB874710();
}

uint64_t sub_1BAB59C00()
{
  sub_1BA83BA2C();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59C28()
{
  sub_1BA83B80C();
  return sub_1BB874710();
}

uint64_t sub_1BAB59C50()
{
  sub_1BA83B80C();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59C78()
{
  sub_1BA83B8E0();
  return sub_1BB874710();
}

uint64_t sub_1BAB59CA0()
{
  sub_1BA83B8E0();
  return sub_1BB87471C();
}

uint64_t sub_1BAB59CC8()
{
  sub_1BA83B738();
  return sub_1BB874710();
}

uint64_t sub_1BAB59CF0()
{
  sub_1BA83B738();
  return sub_1BB87471C();
}

uint64_t FeedServiceOptions.Database.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;

  v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170];
  sub_1BA4CDF6C(0, &qword_1ED3A3198, (uint64_t (*)(void))sub_1BA83B738, (uint64_t)&type metadata for FeedServiceOptions.Database.OfflineCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v26 = *(_QWORD *)(v4 - 8);
  v27 = v4;
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v20 - v5;
  sub_1BA4CDF6C(0, &qword_1ED3A3190, (uint64_t (*)(void))sub_1BA83B80C, (uint64_t)&type metadata for FeedServiceOptions.Database.DefaultCodingKeys, v3);
  v23 = *(_QWORD *)(v6 - 8);
  v24 = v6;
  MEMORY[0x1E0C80A78](v6);
  v22 = (char *)&v20 - v7;
  sub_1BA4CDF6C(0, &qword_1ED3A3188, (uint64_t (*)(void))sub_1BA83B8E0, (uint64_t)&type metadata for FeedServiceOptions.Database.NoneCodingKeys, v3);
  v20 = *(_QWORD *)(v8 - 8);
  v21 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - v9;
  sub_1BA4CDF6C(0, &qword_1ED3A3180, (uint64_t (*)(void))sub_1BA83BA2C, (uint64_t)&type metadata for FeedServiceOptions.Database.CodingKeys, v3);
  v12 = v11;
  v28 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - v13;
  v15 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83BA2C();
  sub_1BB8746C8();
  if (v15)
  {
    if (v15 == 1)
    {
      v30 = 1;
      sub_1BA83B80C();
      v16 = v22;
      sub_1BB874110();
      v18 = v23;
      v17 = v24;
    }
    else
    {
      v31 = 2;
      sub_1BA83B738();
      v16 = v25;
      sub_1BB874110();
      v18 = v26;
      v17 = v27;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v17);
  }
  else
  {
    v29 = 0;
    sub_1BA83B8E0();
    sub_1BB874110();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
}

uint64_t FeedServiceOptions.Database.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BAB5A014(_QWORD *a1)
{
  return FeedServiceOptions.Database.encode(to:)(a1);
}

void FeedServiceOptions.feedMode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FeedServiceOptions.rootCursorSource.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for FeedServiceOptions(0);
  return sub_1BA4C2DD8(v1 + *(int *)(v3 + 20), a1, type metadata accessor for FeedServiceOptions.RootCursorSource);
}

uint64_t FeedServiceOptions.rootCursorFreshness.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for FeedServiceOptions(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 24));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t FeedServiceOptions.database.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for FeedServiceOptions(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t static FeedServiceOptions.default.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C20E8 != -1)
    swift_once();
  v2 = type metadata accessor for FeedServiceOptions(0);
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3C40C8);
  return sub_1BA4C2DD8(v3, a1, type metadata accessor for FeedServiceOptions);
}

uint64_t sub_1BAB5A14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB5B3B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB5A170()
{
  sub_1BA83C59C();
  return sub_1BB874710();
}

uint64_t sub_1BAB5A198()
{
  sub_1BA83C59C();
  return sub_1BB87471C();
}

uint64_t FeedServiceOptions.encode(to:)(_QWORD *a1)
{
  char *v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1ED3A3130, (uint64_t (*)(void))sub_1BA83C59C, (uint64_t)&type metadata for FeedServiceOptions.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v14 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA83C59C();
  sub_1BB8746C8();
  v21 = *v3;
  v20 = 0;
  sub_1BA838BA4();
  sub_1BB8741AC();
  if (!v2)
  {
    v10 = type metadata accessor for FeedServiceOptions(0);
    v19 = 1;
    type metadata accessor for FeedServiceOptions.RootCursorSource(0);
    sub_1BA4A2870(&qword_1ED3A2798, type metadata accessor for FeedServiceOptions.RootCursorSource, (uint64_t)&protocol conformance descriptor for FeedServiceOptions.RootCursorSource);
    sub_1BB8741AC();
    v11 = &v3[*(int *)(v10 + 24)];
    v12 = *(_QWORD *)v11;
    LOBYTE(v11) = v11[8];
    v14 = v12;
    v15 = (char)v11;
    v18 = 2;
    sub_1BAB5A3FC();
    sub_1BB8741AC();
    v17 = v3[*(int *)(v10 + 28)];
    v16 = 3;
    sub_1BAB5A440();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAB5A3E8(_QWORD *a1)
{
  return FeedServiceOptions.encode(to:)(a1);
}

unint64_t sub_1BAB5A3FC()
{
  unint64_t result;

  result = qword_1ED3A27F0;
  if (!qword_1ED3A27F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceOptions.RootCursorFreshness, &type metadata for FeedServiceOptions.RootCursorFreshness);
    atomic_store(result, (unint64_t *)&qword_1ED3A27F0);
  }
  return result;
}

unint64_t sub_1BAB5A440()
{
  unint64_t result;

  result = qword_1ED3A2860;
  if (!qword_1ED3A2860)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceOptions.Database, &type metadata for FeedServiceOptions.Database);
    atomic_store(result, (unint64_t *)&qword_1ED3A2860);
  }
  return result;
}

unint64_t sub_1BAB5A488()
{
  unint64_t result;

  result = qword_1EF2B08F8;
  if (!qword_1EF2B08F8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedServiceOptions.Database, &type metadata for FeedServiceOptions.Database);
    atomic_store(result, (unint64_t *)&qword_1EF2B08F8);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for FeedServiceOptions(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v11 = sub_1BB86BEC0();
      (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    v13 = a3[6];
    v14 = a3[7];
    v15 = (char *)v4 + v13;
    v16 = (char *)a2 + v13;
    *(_QWORD *)v15 = *(_QWORD *)v16;
    v15[8] = v16[8];
    *((_BYTE *)v4 + v14) = *((_BYTE *)a2 + v14);
  }
  return v4;
}

uint64_t destroy for FeedServiceOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v4 = sub_1BB86BEC0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  }
  return result;
}

_BYTE *initializeWithCopy for FeedServiceOptions(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1BB86BEC0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  a1[v12] = a2[v12];
  return a1;
}

_BYTE *assignWithCopy for FeedServiceOptions(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    sub_1BA4A2E80((uint64_t)&a1[v6], type metadata accessor for FeedServiceOptions.RootCursorSource);
    v9 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1BB86BEC0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v14;
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

_BYTE *initializeWithTake for FeedServiceOptions(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v10 = sub_1BB86BEC0();
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  a1[v12] = a2[v12];
  return a1;
}

_BYTE *assignWithTake for FeedServiceOptions(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _BYTE *v14;

  *a1 = *a2;
  if (a1 != a2)
  {
    v6 = a3[5];
    v7 = &a1[v6];
    v8 = &a2[v6];
    sub_1BA4A2E80((uint64_t)&a1[v6], type metadata accessor for FeedServiceOptions.RootCursorSource);
    v9 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v10 = sub_1BB86BEC0();
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
  }
  v11 = a3[6];
  v12 = a3[7];
  v13 = &a1[v11];
  v14 = &a2[v11];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v13[8] = v14[8];
  a1[v12] = a2[v12];
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedServiceOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB5A9D0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    if (v4 >= 2)
      return v4 - 1;
    else
      return 0;
  }
  else
  {
    v8 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

_BYTE *sub_1BAB5AA44(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v7 = type metadata accessor for FeedServiceOptions.RootCursorSource(0);
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FeedServiceOptions.RootCursorSource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_1BB86BEC0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t destroy for FeedServiceOptions.RootCursorSource(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_1BB86BEC0();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *initializeWithCopy for FeedServiceOptions.RootCursorSource(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for FeedServiceOptions.RootCursorSource(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedServiceOptions.RootCursorSource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BB86BEC0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for FeedServiceOptions.RootCursorSource(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_1BB86BEC0();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for FeedServiceOptions.RootCursorSource(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, type metadata accessor for FeedServiceOptions.RootCursorSource);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1BB86BEC0();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t storeEnumTagSinglePayload for FeedServiceOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAB5AE60 + 4 * byte_1BB8A293D[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAB5AE94 + 4 * byte_1BB8A2938[v4]))();
}

uint64_t sub_1BAB5AE94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5AE9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5AEA4);
  return result;
}

uint64_t sub_1BAB5AEB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB5AEB8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAB5AEBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5AEC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.CodingKeys()
{
  return &type metadata for FeedServiceOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.Database.CodingKeys()
{
  return &type metadata for FeedServiceOptions.Database.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.Database.NoneCodingKeys()
{
  return &type metadata for FeedServiceOptions.Database.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.Database.DefaultCodingKeys()
{
  return &type metadata for FeedServiceOptions.Database.DefaultCodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.Database.OfflineCodingKeys()
{
  return &type metadata for FeedServiceOptions.Database.OfflineCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FeedServiceOptions.RootCursorFreshness.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB5AF6C + 4 * byte_1BB8A2951[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB5AFA0 + 4 * byte_1BB8A294C[v4]))();
}

uint64_t sub_1BAB5AFA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5AFA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5AFB0);
  return result;
}

uint64_t sub_1BAB5AFBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB5AFC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB5AFC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5AFD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorFreshness.CodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorFreshness.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorFreshness.AnyCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorFreshness.AnyCodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorFreshness.NewerThanCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorFreshness.NewerThanCodingKeys;
}

uint64_t storeEnumTagSinglePayload for FeedServiceOptions.RootCursorSource.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAB5B05C + 4 * byte_1BB8A295B[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAB5B090 + 4 * byte_1BB8A2956[v4]))();
}

uint64_t sub_1BAB5B090(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5B098(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5B0A0);
  return result;
}

uint64_t sub_1BAB5B0AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB5B0B4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAB5B0B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5B0C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorSource.CodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorSource.CodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorSource.DatabaseOnlyCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorSource.DatabaseOnlyCodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorSource.PreferDatabaseCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseCodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorSource.PreferDatabaseMaxAgeCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseMaxAgeCodingKeys;
}

uint64_t _s8NewsFeed18FeedServiceOptionsV19RootCursorFreshnessO19NewerThanCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BAB5B14C + 4 * byte_1BB8A2960[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BAB5B16C + 4 * byte_1BB8A2965[v4]))();
}

_BYTE *sub_1BAB5B14C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BAB5B16C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB5B174(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB5B17C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BAB5B184(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BAB5B18C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorSource.PreferDatabaseDateIntervalCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseDateIntervalCodingKeys;
}

ValueMetadata *type metadata accessor for FeedServiceOptions.RootCursorSource.NetworkOnlyCodingKeys()
{
  return &type metadata for FeedServiceOptions.RootCursorSource.NetworkOnlyCodingKeys;
}

unint64_t sub_1BAB5B1BC()
{
  unint64_t result;

  result = qword_1EF2B0900;
  if (!qword_1EF2B0900)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2E78, &type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseDateIntervalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0900);
  }
  return result;
}

unint64_t sub_1BAB5B204()
{
  unint64_t result;

  result = qword_1EF2B0908;
  if (!qword_1EF2B0908)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A2F30, &type metadata for FeedServiceOptions.RootCursorSource.PreferDatabaseMaxAgeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0908);
  }
  return result;
}

unint64_t sub_1BAB5B24C()
{
  unint64_t result;

  result = qword_1EF2B0910;
  if (!qword_1EF2B0910)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3088, &type metadata for FeedServiceOptions.RootCursorSource.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0910);
  }
  return result;
}

unint64_t sub_1BAB5B294()
{
  unint64_t result;

  result = qword_1EF2B0918;
  if (!qword_1EF2B0918)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3140, &type metadata for FeedServiceOptions.RootCursorFreshness.NewerThanCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0918);
  }
  return result;
}

unint64_t sub_1BAB5B2DC()
{
  unint64_t result;

  result = qword_1EF2B0920;
  if (!qword_1EF2B0920)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3248, &type metadata for FeedServiceOptions.RootCursorFreshness.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0920);
  }
  return result;
}

unint64_t sub_1BAB5B324()
{
  unint64_t result;

  result = qword_1EF2B0928;
  if (!qword_1EF2B0928)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A33F0, &type metadata for FeedServiceOptions.Database.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0928);
  }
  return result;
}

unint64_t sub_1BAB5B36C()
{
  unint64_t result;

  result = qword_1EF2B0930;
  if (!qword_1EF2B0930)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A34A8, &type metadata for FeedServiceOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0930);
  }
  return result;
}

uint64_t sub_1BAB5B3B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65646F4D64656566 && a2 == 0xE800000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB96D900 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB96D920 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6573616261746164 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

BOOL static CommandShareContext.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CommandShareContext.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t CommandShareContext.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

id CommandShareContentComplete.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(void **)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_1BAB5B604(v2, v3, v4, v5, v6, v7, v8);
}

id sub_1BAB5B604(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_bridgeObjectRetain();
      swift_unknownObjectRetain();
      result = (id)swift_bridgeObjectRetain();
      break;
    case 1:
      swift_unknownObjectRetain();
      result = (id)sub_1BAB5B700(a2, a3, a4, a5);
      break;
    case 2:
    case 4:
      result = (id)swift_unknownObjectRetain();
      break;
    case 3:
    case 5:
      result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BAB5B700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

id CommandShareContentComplete.activityType.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 56);
}

void *CommandShareContentComplete.sourceView.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 64);
  v2 = v1;
  return v1;
}

__n128 CommandShareContentComplete.init(content:activityType:sourceView:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v4;
  __int128 v5;
  __n128 result;

  v4 = *(_BYTE *)(a1 + 48);
  v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v5;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(a4 + 32) = result;
  *(_BYTE *)(a4 + 48) = v4;
  *(_QWORD *)(a4 + 56) = a2;
  *(_QWORD *)(a4 + 64) = a3;
  return result;
}

uint64_t static SwipeAction.share(headline:feedItemIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  uint64_t ObjCClassFromMetadata;
  id v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v23 = a4;
  v7 = sub_1BB86F628();
  v21 = *(_QWORD *)(v7 - 8);
  v22 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1BB86F634();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3BC200 != -1)
    swift_once();
  v24 = a1;
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = a2;
  v29 = a3;
  v30 = 0;
  v14 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  v15 = objc_msgSend(v14, sel_systemBlueColor);
  if (qword_1ED39ECD0 != -1)
    swift_once();
  v16 = (void *)qword_1ED39ECC0;
  v17 = objc_msgSend(v14, sel_whiteColor, v21, v22, v23);
  _s8NewsFeed6ImagesC8template5image4withSo7UIImageCAH_So7UIColorCtFZ_0(v16, v17);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v19 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DB6BB0], v10);
  (*(void (**)(char *, _QWORD, uint64_t))(v21 + 104))(v9, *MEMORY[0x1E0DB6BA0], v22);
  return sub_1BB86F640();
}

uint64_t static SharingActivity.share(headline:selectedText:shareContext:feedItemIdentifier:)()
{
  uint64_t v0;
  uint64_t ObjCClassFromMetadata;
  id v2;
  id v3;

  v0 = sub_1BB8703E4();
  MEMORY[0x1E0C80A78](v0);
  if (qword_1ED3BC200 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872970();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v2 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB38 != -1)
    swift_once();
  v3 = (id)qword_1ED3AF888;
  sub_1BB8703D8();
  swift_allocObject();
  return sub_1BB86FC94();
}

uint64_t static ContextMenuItem.share(headline:selectedText:shareContext:feedItemIdentifier:)(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  v21 = a2;
  v22 = a5;
  v10 = sub_1BB870150();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a4;
  if (qword_1ED3BC200 != -1)
    swift_once();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BAB5BDCC(a1);
  v19[1] = v14;
  v15 = a6;
  if (qword_1ED3AFB38 != -1)
    swift_once();
  v16 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v13, *MEMORY[0x1E0DB8530], v10);
  v23 = a1;
  v24 = v21;
  v25 = a3;
  v26 = v20;
  v27 = v22;
  v28 = v15;
  v29 = 0;
  swift_allocObject();
  v17 = v16;
  return sub_1BB86FB20();
}

uint64_t sub_1BAB5BDCC(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  id v11;
  void *v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  uint64_t v15;
  uint64_t v17;

  v2 = sub_1BB86C67C();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v6, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - v9;
  v11 = objc_msgSend(a1, sel_routeURL, v8);
  if (v11)
  {
    v12 = v11;
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v10, v5, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
    (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v10, 1, 1, v2);
  }
  sub_1BA7F0A80((uint64_t)v10);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v15 = sub_1BB86C340();

  return v15;
}

uint64_t static ContextMenuItem.share(tag:prefersTagName:shareContext:)(void *a1, char a2, unsigned __int8 *a3)
{
  swift_getObjectType();
  return sub_1BAB5CB58(a1, a2, a3);
}

void CommandShareContent.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB5C0D4()
{
  _QWORD *v0;
  _QWORD *v1;

  swift_unknownObjectRetain();
  sub_1BB873CB4();
  sub_1BB872AFC(0);
  sub_1BA4EFE00(0, (unint64_t *)&qword_1ED3D4450);
  sub_1BB873E34();
  sub_1BB872AFC(v0);
  sub_1BB873E34();
  sub_1BB872AFC(v1);
  swift_unknownObjectRelease();
  return 0;
}

void CommandShareContent.shareContext.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  if (*(unsigned __int8 *)(v1 + 48) - 2 >= 4)
  {
    if (*(_BYTE *)(v1 + 48))
      v2 = *(_QWORD *)(v1 + 40) >> 8;
    else
      v2 = *(_QWORD *)(v1 + 24);
    *a1 = v2;
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 8);
  }
}

uint64_t CommandShareContent.feedItemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  if (*(_BYTE *)(v0 + 48))
    return 0;
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CommandShareContent.headline.getter()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 48))
    return 0;
  else
    return swift_unknownObjectRetain();
}

void CommandShareContent.sourceChannel.getter()
{
  __asm { BR              X10 }
}

id sub_1BAB5C764(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  void *v18;

  return objc_msgSend(v18, sel_sourceChannel);
}

uint64_t sub_1BAB5C8A8()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD v14[3];
  char v15;

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C4978, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8200], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v14 - v2;
  sub_1BA4B07F0(0, &qword_1ED3C48E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB6A80], v0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v14 - v5;
  v7 = sub_1BB87150C();
  __swift_allocate_value_buffer(v7, qword_1ED3C4C70);
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED3C4C70);
  if (qword_1ED3BC200 != -1)
    swift_once();
  memset(v14, 0, sizeof(v14));
  v15 = -1;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = (void *)objc_opt_self();
  swift_retain();
  v10 = objc_msgSend(v9, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v11 = sub_1BB86F55C();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v6, 1, 1, v11);
  v12 = sub_1BB86FFAC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v3, 1, 1, v12);
  return sub_1BB871500();
}

uint64_t static MenuItem.Sharing.share.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1ED3C2270 != -1)
    swift_once();
  v2 = sub_1BB87150C();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1ED3C4C70);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1BAB5CB58(void *a1, char a2, unsigned __int8 *a3)
{
  uint64_t v6;
  double v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  dispatch_group_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t ObjCClassFromMetadata;
  void *v18;
  id v19;
  uint64_t v20;
  id v21;
  unint64_t v22;
  void *v23;
  id v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  char v33;

  v6 = sub_1BB870150();
  v27 = *(_QWORD *)(v6 - 8);
  v28 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *a3;
  v10 = objc_msgSend(a1, sel_feedNavImageAssetHandle, v7);
  if (v10)
  {
    v11 = v10;
    v12 = dispatch_group_create();
    v13 = objc_msgSend(v11, sel_downloadIfNeededWithGroup_, v12);

    swift_unknownObjectRelease();
  }
  if ((objc_msgSend(a1, sel_isPuzzleType) & 1) != 0)
  {
    v14 = 0;
    v15 = 0xE000000000000000;
  }
  else
  {
    v14 = FCTagProviding.localizedTagType.getter();
    v15 = v16;
  }
  if (qword_1ED3BC200 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v18 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v19 = objc_msgSend(v18, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1BB87CE70;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    v21 = objc_msgSend(a1, sel_name);
    v14 = sub_1BB8729A0();
    v15 = v22;

  }
  *(_QWORD *)(v20 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v20 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v20 + 32) = v14;
  *(_QWORD *)(v20 + 40) = v15;
  sub_1BB8729D0();
  swift_bridgeObjectRelease();
  if (qword_1ED3AFB38 != -1)
    swift_once();
  v23 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v27 + 104))(v9, *MEMORY[0x1E0DB8530], v28);
  v29 = a1;
  v30 = v26;
  v31 = 0u;
  v32 = 0u;
  v33 = 4;
  swift_allocObject();
  v24 = v23;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5share6puzzle0H4Data0hC0ACSgSo17FCPuzzleProviding_p_AD011PuzzleShareJ0VSgAD07CommandnC0OtFZ_0(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  void *v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  void *v19;
  id v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;

  v26 = sub_1BB870150();
  v24 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)a2;
  v9 = *(_QWORD *)(a2 + 8);
  v10 = *(_QWORD *)(a2 + 16);
  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(unsigned __int8 *)(a2 + 32);
  v23 = *a3;
  if (qword_1ED3BC200 != -1)
    swift_once();
  v13 = qword_1ED3BC1F0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v15 = (void *)objc_opt_self();
  v25 = v13;
  swift_retain();
  swift_unknownObjectRetain();
  sub_1BAB5B700(v8, v9, v10, v11);
  v16 = a1;
  v17 = objc_msgSend(v15, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB38 != -1)
    swift_once();
  v18 = v12 | (v23 << 8);
  v19 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v24 + 104))(v7, *MEMORY[0x1E0DB8530], v26);
  v27 = v16;
  v28 = v8;
  v29 = v9;
  v30 = v10;
  v31 = v11;
  v32 = v18;
  v33 = 1;
  sub_1BB86FB38();
  swift_allocObject();
  v20 = v19;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5share10puzzleType0hC0ACSgSo08FCPuzzleJ9Providing_p_AD012CommandShareC0OtFZ_0(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  void *v12;
  id v13;
  _QWORD v15[3];
  __int128 v16;
  __int128 v17;
  char v18;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  if (qword_1ED3BC200 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v11 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB38 != -1)
    swift_once();
  v12 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  v15[1] = a1;
  v15[2] = v8;
  v16 = 0u;
  v17 = 0u;
  v18 = 2;
  sub_1BB86FB38();
  swift_allocObject();
  v13 = v12;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5share5issue0hC0ACSgSo7FCIssueC_AD012CommandShareC0OtFZ_0(void *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  void *v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  _QWORD v16[3];
  __int128 v17;
  __int128 v18;
  char v19;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a2;
  if (qword_1ED3BC200 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = (void *)objc_opt_self();
  swift_retain();
  v11 = a1;
  v12 = objc_msgSend(v10, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1ED3AFB38 != -1)
    swift_once();
  v13 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  v16[1] = v11;
  v16[2] = v8;
  v17 = 0u;
  v18 = 0u;
  v19 = 3;
  sub_1BB86FB38();
  swift_allocObject();
  v14 = v13;
  return sub_1BB86FB20();
}

uint64_t _s5TeaUI15ContextMenuItemC8NewsFeedE5share14feedDescriptor0hC0ACSgSo06FCFeedJ0C_AD012CommandShareC0OtFZ_0(void *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  id v8;
  dispatch_group_t v9;
  id v10;
  uint64_t ObjCClassFromMetadata;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  id v20;
  _QWORD v22[3];
  __int128 v23;
  __int128 v24;
  char v25;

  v4 = sub_1BB870150();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[0] = *a2;
  v8 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_feedNavImageAssetHandle);
  swift_unknownObjectRelease();
  if (v8)
  {
    v9 = dispatch_group_create();
    v10 = objc_msgSend(v8, sel_downloadIfNeededWithGroup_, v9);

    swift_unknownObjectRelease();
  }
  if (qword_1ED3BC200 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = (void *)objc_opt_self();
  swift_retain();
  v13 = a1;
  v14 = objc_msgSend(v12, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D4470, (uint64_t (*)(uint64_t))sub_1BA81BA70, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v16 = FCFeedDescriptor.localizedFeedType.getter();
  v18 = v17;
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v15 + 32) = v16;
  *(_QWORD *)(v15 + 40) = v18;
  sub_1BB8729D0();
  swift_bridgeObjectRelease();
  if (qword_1ED3AFB38 != -1)
    swift_once();
  v19 = (void *)qword_1ED3AF888;
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB8530], v4);
  v22[1] = v13;
  v22[2] = v22[0];
  v23 = 0u;
  v24 = 0u;
  v25 = 5;
  sub_1BB86FB38();
  swift_allocObject();
  v20 = v19;
  return sub_1BB86FB20();
}

void sub_1BAB5D7D0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  switch(a7)
  {
    case 0:
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 1:
      swift_unknownObjectRelease();
      sub_1BAB5D8AC(a2, a3, a4, a5);
      break;
    case 2:
    case 4:
      swift_unknownObjectRelease();
      break;
    case 3:
    case 5:

      break;
    default:
      return;
  }
}

uint64_t sub_1BAB5D8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  if (a4 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_1BAB5D8C4()
{
  unint64_t result;

  result = qword_1EF2B0940;
  if (!qword_1EF2B0940)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CommandShareContext, &type metadata for CommandShareContext);
    atomic_store(result, (unint64_t *)&qword_1EF2B0940);
  }
  return result;
}

void destroy for CommandShareContent(uint64_t a1)
{
  sub_1BAB5D7D0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
}

uint64_t initializeWithCopy for CommandShareContent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BAB5B604(*(id *)a2, v4, v5, v6, v7, v8, v9);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  return a1;
}

uint64_t assignWithCopy for CommandShareContent(uint64_t a1, uint64_t a2)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = *(id *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BAB5B604(*(id *)a2, v4, v5, v6, v7, v8, v9);
  v10 = *(void **)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_QWORD *)(a1 + 16);
  v13 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v16 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BAB5D7D0(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t assignWithTake for CommandShareContent(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_BYTE *)(a2 + 48);
  v4 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = *(_QWORD *)(a1 + 40);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v3;
  sub_1BAB5D7D0(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatBezierPathComponent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFB && *(_BYTE *)(a1 + 49))
    return (*(_DWORD *)a1 + 251);
  v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 5)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatBezierPathComponent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 48) = 0;
    *(_QWORD *)result = a2 - 251;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 49) = 0;
    if (a2)
      *(_BYTE *)(result + 48) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BAB5DB14(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_1BAB5DB1C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 48) = a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for CommandShareContext(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1BAB5DB70 + 4 * byte_1BB8A3971[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1BAB5DBA4 + 4 * byte_1BB8A396C[v4]))();
}

uint64_t sub_1BAB5DBA4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5DBAC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5DBB4);
  return result;
}

uint64_t sub_1BAB5DBC0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB5DBC8);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1BAB5DBCC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5DBD4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CommandShareContext()
{
  return &type metadata for CommandShareContext;
}

void destroy for CommandShareContentComplete(uint64_t a1)
{
  sub_1BAB5D7D0(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));

}

uint64_t initializeWithCopy for CommandShareContentComplete(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  void *v12;
  id v13;
  id v14;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_1BAB5B604(*(id *)a2, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_BYTE *)(a1 + 48) = v10;
  v11 = *(void **)(a2 + 56);
  v12 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 56) = v11;
  *(_QWORD *)(a1 + 64) = v12;
  v13 = v11;
  v14 = v12;
  return a1;
}

uint64_t assignWithCopy for CommandShareContentComplete(uint64_t a1, uint64_t a2)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  void *v22;
  id v23;

  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 48);
  sub_1BAB5B604(*(id *)a2, v5, v6, v7, v8, v9, v10);
  v11 = *(void **)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  v16 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  v17 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v10;
  sub_1BAB5D7D0(v11, v12, v13, v14, v15, v16, v17);
  v18 = *(void **)(a2 + 56);
  v19 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v18;
  v20 = v18;

  v21 = *(void **)(a1 + 64);
  v22 = *(void **)(a2 + 64);
  *(_QWORD *)(a1 + 64) = v22;
  v23 = v22;

  return a1;
}

uint64_t assignWithTake for CommandShareContentComplete(uint64_t a1, uint64_t a2)
{
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  void *v13;

  v4 = *(_BYTE *)(a2 + 48);
  v5 = *(void **)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v12 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v4;
  sub_1BAB5D7D0(v5, v6, v7, v8, v9, v10, v12);

  v13 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  return a1;
}

uint64_t getEnumTagSinglePayload for CommandShareContentComplete(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommandShareContentComplete(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 56) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Commands.Sharing()
{
  return &type metadata for Commands.Sharing;
}

ValueMetadata *type metadata accessor for MenuItem.Sharing()
{
  return &type metadata for MenuItem.Sharing;
}

uint64_t *sub_1BAB5DEA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86EB84();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BAB5DF34(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB5DF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BAB5DFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB5E044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1BAB5E0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1BB86EB84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  *(_QWORD *)(a1 + *(int *)(a3 + 20)) = *(_QWORD *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BAB5E104()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB5E110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BAB5E18C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB5E198(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86EB84();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t type metadata accessor for DebugFormatCacheFileMetadata()
{
  uint64_t result;

  result = qword_1EF2B09A0;
  if (!qword_1EF2B09A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BAB5E24C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86EB84();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BAB5E2C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];
  uint64_t v12;
  char v13;

  v3 = v1;
  sub_1BAB5E8FC(0, &qword_1EF2B09F0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = &v11[-v8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB5E7F4();
  sub_1BB8746C8();
  v13 = 0;
  sub_1BB86EB84();
  sub_1BA66184C(&qword_1ED39C370, MEMORY[0x1E0DB4DD8]);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for DebugFormatCacheFileMetadata() + 20));
    v11[15] = 1;
    sub_1BAB5E958();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAB5E428@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a2;
  v24 = sub_1BB86EB84();
  v21 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB5E8FC(0, &qword_1EF2B09D8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v23 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v18 - v7;
  v9 = type metadata accessor for DebugFormatCacheFileMetadata();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB5E7F4();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v18 = a1;
  v19 = v6;
  v12 = (uint64_t)v11;
  v13 = v21;
  v27 = 0;
  sub_1BA66184C(&qword_1ED3B0918, MEMORY[0x1E0DB4DF0]);
  v15 = v22;
  v14 = v23;
  v16 = v24;
  sub_1BB8740D4();
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 32))(v12, v15, v16);
  v26 = 1;
  sub_1BAB5E838();
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v14);
  *(_QWORD *)(v12 + *(int *)(v9 + 20)) = v25;
  sub_1BAB5E87C(v12, v20);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_1BAB5E8C0(v12);
}

uint64_t sub_1BAB5E6B0()
{
  _BYTE *v0;

  if (*v0)
    return 0x704F676E69646F63;
  else
    return 0x6556726576726573;
}

uint64_t sub_1BAB5E704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB5EB40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB5E728()
{
  sub_1BAB5E7F4();
  return sub_1BB874710();
}

uint64_t sub_1BAB5E750()
{
  sub_1BAB5E7F4();
  return sub_1BB87471C();
}

uint64_t sub_1BAB5E778@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAB5E428(a1, a2);
}

uint64_t sub_1BAB5E78C(_QWORD *a1)
{
  return sub_1BAB5E2C0(a1);
}

BOOL sub_1BAB5E7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (sub_1BB86EB3C() & 1) != 0
      && sub_1BA882868(*(_QWORD *)(a1 + *(int *)(a3 + 20)), *(_QWORD *)(a2 + *(int *)(a3 + 20)));
}

unint64_t sub_1BAB5E7F4()
{
  unint64_t result;

  result = qword_1EF2B09E0;
  if (!qword_1EF2B09E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3C1C, &type metadata for DebugFormatCacheFileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B09E0);
  }
  return result;
}

unint64_t sub_1BAB5E838()
{
  unint64_t result;

  result = qword_1EF2B09E8;
  if (!qword_1EF2B09E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912A7C, &type metadata for DebugFormatCodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B09E8);
  }
  return result;
}

uint64_t sub_1BAB5E87C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugFormatCacheFileMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BAB5E8C0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for DebugFormatCacheFileMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BAB5E8FC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAB5E7F4();
    v7 = a3(a1, &type metadata for DebugFormatCacheFileMetadata.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAB5E958()
{
  unint64_t result;

  result = qword_1EF2B09F8;
  if (!qword_1EF2B09F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB912A54, &type metadata for DebugFormatCodingOptions);
    atomic_store(result, (unint64_t *)&qword_1EF2B09F8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugFormatCacheFileMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB5E9E8 + 4 * byte_1BB8A3AB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB5EA1C + 4 * asc_1BB8A3AB0[v4]))();
}

uint64_t sub_1BAB5EA1C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5EA24(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5EA2CLL);
  return result;
}

uint64_t sub_1BAB5EA38(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB5EA40);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB5EA44(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5EA4C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatCacheFileMetadata.CodingKeys()
{
  return &type metadata for DebugFormatCacheFileMetadata.CodingKeys;
}

unint64_t sub_1BAB5EA6C()
{
  unint64_t result;

  result = qword_1EF2B0A00;
  if (!qword_1EF2B0A00)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3BF4, &type metadata for DebugFormatCacheFileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A00);
  }
  return result;
}

unint64_t sub_1BAB5EAB4()
{
  unint64_t result;

  result = qword_1EF2B0A08;
  if (!qword_1EF2B0A08)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3B64, &type metadata for DebugFormatCacheFileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A08);
  }
  return result;
}

unint64_t sub_1BAB5EAFC()
{
  unint64_t result;

  result = qword_1EF2B0A10;
  if (!qword_1EF2B0A10)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3B8C, &type metadata for DebugFormatCacheFileMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A10);
  }
  return result;
}

uint64_t sub_1BAB5EB40(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6556726576726573 && a2 == 0xED00006E6F697372;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x704F676E69646F63 && a2 == 0xED0000736E6F6974)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BAB5EC7C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_retain();
  else
    return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatMenuTitleData(uint64_t a1)
{
  return sub_1BAB5EC9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_1BAB5EC9C(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) != 0)
    return swift_release();
  else
    return swift_bridgeObjectRelease();
}

uint64_t _s8NewsFeed19FormatMenuTitleDataOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAB5EC7C(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatMenuTitleData(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BAB5EC7C(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BAB5EC9C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatMenuTitleData(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BAB5EC9C(v4, v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenuTitleData()
{
  return &type metadata for FormatMenuTitleData;
}

uint64_t EngagementBannerViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t EngagementBannerViewLayout.engagementBannerViewLayoutAttributes.getter()
{
  return swift_retain();
}

uint64_t EngagementBannerViewLayout.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1ED39ED80, (uint64_t (*)(void))sub_1BAB5EE60, (uint64_t)&type metadata for EngagementBannerViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v2;
  a1[1] = result;
  return result;
}

unint64_t sub_1BAB5EE60()
{
  unint64_t result;

  result = qword_1ED3A0690;
  if (!qword_1ED3A0690)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayoutAttributes, &type metadata for EngagementBannerViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0690);
  }
  return result;
}

double EngagementBannerViewLayout.Attributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

__n128 EngagementBannerViewLayout.Attributes.engagementBannerViewLayoutAttributes.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __n128 result;
  __int128 v4;

  v2 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(v1 + 64);
  v4 = *(_OWORD *)(v1 + 80);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t sub_1BAB5EEC4()
{
  _BYTE *v0;

  if (*v0)
    return 0xD000000000000024;
  else
    return 0x656D617266;
}

uint64_t sub_1BAB5EF00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB6030C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB5EF24()
{
  sub_1BAB5F14C();
  return sub_1BB874710();
}

uint64_t sub_1BAB5EF4C()
{
  sub_1BAB5F14C();
  return sub_1BB87471C();
}

uint64_t EngagementBannerViewLayout.Attributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;

  sub_1BA4CDF6C(0, &qword_1EF2B0A18, (uint64_t (*)(void))sub_1BAB5F14C, (uint64_t)&type metadata for EngagementBannerViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v21 = *v1;
  v9 = *((_QWORD *)v1 + 2);
  v10 = *((_QWORD *)v1 + 3);
  v11 = *((_QWORD *)v1 + 4);
  v12 = *((_QWORD *)v1 + 6);
  v19 = *((_QWORD *)v1 + 5);
  v20 = v11;
  v13 = *((_QWORD *)v1 + 7);
  v14 = *((_QWORD *)v1 + 8);
  v15 = *((_QWORD *)v1 + 9);
  v16 = *((_QWORD *)v1 + 10);
  v17 = *((_QWORD *)v1 + 11);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB5F14C();
  sub_1BB8746C8();
  v22 = v21;
  v23 = v9;
  v24 = v10;
  v29 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v22 = v20;
    *((_QWORD *)&v22 + 1) = v19;
    v23 = v12;
    v24 = v13;
    v25 = v14;
    v26 = v15;
    v27 = v16;
    v28 = v17;
    v29 = 1;
    sub_1BAB5F190();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BAB5F14C()
{
  unint64_t result;

  result = qword_1ED3A0438;
  if (!qword_1ED3A0438)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3F74, &type metadata for EngagementBannerViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0438);
  }
  return result;
}

unint64_t sub_1BAB5F190()
{
  unint64_t result;

  result = qword_1ED3A06A0;
  if (!qword_1ED3A06A0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayoutAttributes, &type metadata for EngagementBannerViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A06A0);
  }
  return result;
}

uint64_t EngagementBannerViewLayout.Attributes.init(from:)@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _OWORD *v10;
  __int128 v11;
  __int128 v12;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v19 = a2;
  sub_1BA4CDF6C(0, &qword_1ED3A0988, (uint64_t (*)(void))sub_1BAB5F14C, (uint64_t)&type metadata for EngagementBannerViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v18 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB5F14C();
  sub_1BB87468C();
  if (!v2)
  {
    v9 = v6;
    v10 = v19;
    type metadata accessor for CGRect(0);
    v24 = 0;
    sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    sub_1BB8740D4();
    v11 = v20;
    v12 = v21;
    v24 = 1;
    sub_1BAB5F3B8();
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    v14 = v20;
    v15 = v21;
    v16 = v22;
    v17 = v23;
    *v10 = v11;
    v10[1] = v12;
    v10[2] = v14;
    v10[3] = v15;
    v10[4] = v16;
    v10[5] = v17;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

unint64_t sub_1BAB5F3B8()
{
  unint64_t result;

  result = qword_1ED3A06A8[0];
  if (!qword_1ED3A06A8[0])
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayoutAttributes, &type metadata for EngagementBannerViewLayoutAttributes);
    atomic_store(result, qword_1ED3A06A8);
  }
  return result;
}

uint64_t sub_1BAB5F40C()
{
  sub_1BAB60434();
  return sub_1BB870FF0();
}

uint64_t sub_1BAB5F434()
{
  return sub_1BB870D5C();
}

uint64_t sub_1BAB5F44C@<X0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  return EngagementBannerViewLayout.Attributes.init(from:)(a1, a2);
}

uint64_t sub_1BAB5F460(_QWORD *a1)
{
  return EngagementBannerViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1BAB5F474()
{
  sub_1BAB603F0();
  return sub_1BB86D96C();
}

uint64_t EngagementBannerViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1BAB5F4E8(v1, a1);
}

uint64_t sub_1BAB5F4E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedEngagementBanner();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BAB5F530()
{
  unint64_t result;

  result = qword_1ED3A0458;
  if (!qword_1ED3A0458)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0458);
  }
  return result;
}

unint64_t sub_1BAB5F578()
{
  unint64_t result;

  result = qword_1EF2B0A20;
  if (!qword_1EF2B0A20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A20);
  }
  return result;
}

unint64_t sub_1BAB5F5C0()
{
  unint64_t result;

  result = qword_1ED3A0470;
  if (!qword_1ED3A0470)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0470);
  }
  return result;
}

unint64_t sub_1BAB5F608()
{
  unint64_t result;

  result = qword_1ED3A0468;
  if (!qword_1ED3A0468)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0468);
  }
  return result;
}

unint64_t sub_1BAB5F650()
{
  unint64_t result;

  result = qword_1ED3A0450;
  if (!qword_1ED3A0450)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0450);
  }
  return result;
}

uint64_t sub_1BAB5F694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1BA62E724();
  swift_allocObject();
  v2 = sub_1BB86D450();
  sub_1BA4CDF6C(0, &qword_1ED39ED80, (uint64_t (*)(void))sub_1BAB5EE60, (uint64_t)&type metadata for EngagementBannerViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  swift_allocObject();
  result = sub_1BB86D450();
  *a1 = v2;
  a1[1] = result;
  return result;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayout()
{
  return &type metadata for EngagementBannerViewLayout;
}

uint64_t getEnumTagSinglePayload for EngagementBannerViewLayout.Attributes(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EngagementBannerViewLayout.Attributes(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 96) = v3;
  return result;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayout.Attributes()
{
  return &type metadata for EngagementBannerViewLayout.Attributes;
}

uint64_t *initializeBufferWithCopyOfBuffer for EngagementBannerViewLayout.Context(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;

  v4 = type metadata accessor for FeedEngagementBanner();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86EDAC();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)a1 + v6[6]) = *(uint64_t *)((char *)a2 + v6[6]);
    v13 = v6[7];
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    *(_QWORD *)v14 = *(_QWORD *)v15;
    v14[8] = v15[8];
    v16 = v6[8];
    v17 = (uint64_t *)((char *)a1 + v16);
    v18 = (uint64_t *)((char *)a2 + v16);
    v19 = v18[1];
    if (v19 >= 0x11)
    {
      *v17 = *v18;
      v17[1] = v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
    }
  }
  return a1;
}

unint64_t destroy for EngagementBannerViewLayout.Context(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t result;

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for FeedEngagementBanner();
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_1BB86EDAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  result = *(_QWORD *)(a1 + *(int *)(v2 + 32) + 8);
  if (result >= 0x11)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *initializeWithCopy for EngagementBannerViewLayout.Context(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  unint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = (int *)type metadata accessor for FeedEngagementBanner();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86EDAC();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  v11 = v5[7];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v14 = v5[8];
  v15 = (_QWORD *)((char *)a1 + v14);
  v16 = (_QWORD *)((char *)a2 + v14);
  v17 = v16[1];
  if (v17 >= 0x11)
  {
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
  }
  return a1;
}

_QWORD *assignWithCopy for EngagementBannerViewLayout.Context(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FeedEngagementBanner();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86EDAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  v9 = v4[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = v11[8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  v10[8] = v12;
  v13 = v4[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *(_QWORD *)((char *)a1 + v13 + 8);
  v17 = v15[1];
  if (v16 >= 0x11)
  {
    if (v17 >= 0x11)
    {
      *v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v14);
    goto LABEL_6;
  }
  if (v17 < 0x11)
  {
LABEL_6:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    return a1;
  }
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *initializeWithTake for EngagementBannerViewLayout.Context(_OWORD *a1, _OWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for FeedEngagementBanner();
  v5 = v4[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB86EDAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  v9 = v4[7];
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v10[8] = v11[8];
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_OWORD *)((char *)a1 + v4[8]) = *(_OWORD *)((char *)a2 + v4[8]);
  return a1;
}

_QWORD *assignWithTake for EngagementBannerViewLayout.Context(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = (int *)type metadata accessor for FeedEngagementBanner();
  v6 = v5[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86EDAC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
  v10 = v5[7];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  v11[8] = v12[8];
  v13 = v5[8];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  if (*(_QWORD *)((char *)a1 + v13 + 8) >= 0x11uLL)
  {
    v16 = v15[1];
    if (v16 >= 0x11)
    {
      *v14 = *v15;
      v14[1] = v16;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA905D68((uint64_t)v14);
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t getEnumTagSinglePayload for EngagementBannerViewLayout.Context()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB5FCFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedEngagementBanner();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EngagementBannerViewLayout.Context()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB5FD44(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedEngagementBanner();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t storeEnumTagSinglePayload for EngagementBannerViewLayout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BAB5FDD0 + 4 * byte_1BB8A3CC5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BAB5FE04 + 4 * asc_1BB8A3CC0[v4]))();
}

uint64_t sub_1BAB5FE04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5FE0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB5FE14);
  return result;
}

uint64_t sub_1BAB5FE20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB5FE28);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BAB5FE2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB5FE34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EngagementBannerViewLayout.Attributes.CodingKeys()
{
  return &type metadata for EngagementBannerViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1BAB5FE54()
{
  unint64_t result;

  result = qword_1EF2B0A50;
  if (!qword_1EF2B0A50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3F4C, &type metadata for EngagementBannerViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A50);
  }
  return result;
}

unint64_t sub_1BAB5FE9C()
{
  unint64_t result;

  result = qword_1ED3A0448;
  if (!qword_1ED3A0448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3EBC, &type metadata for EngagementBannerViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0448);
  }
  return result;
}

unint64_t sub_1BAB5FEE4()
{
  unint64_t result;

  result = qword_1ED3A0440;
  if (!qword_1ED3A0440)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A3EE4, &type metadata for EngagementBannerViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A0440);
  }
  return result;
}

uint64_t sub_1BAB5FF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1ED39EDD0, (uint64_t (*)(void))sub_1BAB60478, (uint64_t)&type metadata for EngagementBannerViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = &v14[-v10];
  v17 = a1;
  v15 = a2;
  v16 = a3;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v8 + 104))(&v14[-v10], *MEMORY[0x1E0DB63C0], v7, v9);
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BAB60650(0, &qword_1ED39EDA0, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BAB604C4(&qword_1ED39ED98, &qword_1ED39EDA0, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1BAB60064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t (*v17)(uint64_t, _QWORD *);
  uint64_t KeyPath;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = type metadata accessor for FeedEngagementBanner();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB60504();
  v21 = *(_QWORD *)(v9 - 8);
  v22 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1ED39EDD0, (uint64_t (*)(void))sub_1BAB60478, (uint64_t)&type metadata for EngagementBannerViewLayout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v13 = v12;
  v14 = *(_QWORD *)(v12 - 8);
  v20 = v12;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&KeyPath - v15;
  v24 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v14 + 104))(v16, *MEMORY[0x1E0DB6408], v13);
  v23 = *(_QWORD *)(a2 + 40);
  sub_1BAB5F4E8(a3, (uint64_t)v8);
  sub_1BA4CDF6C(0, &qword_1ED39ED80, (uint64_t (*)(void))sub_1BAB5EE60, (uint64_t)&type metadata for EngagementBannerViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
  type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
  sub_1BAB60478();
  sub_1BAB605E8();
  sub_1BA4A2870(&qword_1ED3A0738, (uint64_t (*)(uint64_t))type metadata accessor for EngagementBannerViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for EngagementBannerViewLayoutAttributesFactory);
  swift_retain();
  sub_1BB86D684();
  v17 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BAB60650(0, &qword_1ED39ED70, MEMORY[0x1E0DB5A10]);
  sub_1BAB604C4(&qword_1ED39ED68, &qword_1ED39ED70, v17, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4D4();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v20);
}

uint64_t sub_1BAB6030C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001BB96DC00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_1BAB603F0()
{
  unint64_t result;

  result = qword_1ED3A0460;
  if (!qword_1ED3A0460)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0460);
  }
  return result;
}

unint64_t sub_1BAB60434()
{
  unint64_t result;

  result = qword_1EF2B0A58;
  if (!qword_1EF2B0A58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout.Attributes, &type metadata for EngagementBannerViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A58);
  }
  return result;
}

unint64_t sub_1BAB60478()
{
  unint64_t result;

  result = qword_1ED3A0480;
  if (!qword_1ED3A0480)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayout, &type metadata for EngagementBannerViewLayout);
    atomic_store(result, (unint64_t *)&qword_1ED3A0480);
  }
  return result;
}

uint64_t sub_1BAB604BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB60064(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BAB604C4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BAB60650(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BAB60504()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39ED90)
  {
    sub_1BA4CDF6C(255, &qword_1ED39ED80, (uint64_t (*)(void))sub_1BAB5EE60, (uint64_t)&type metadata for EngagementBannerViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    type metadata accessor for EngagementBannerViewLayoutAttributesFactory();
    sub_1BAB60478();
    sub_1BAB605E8();
    sub_1BA4A2870(&qword_1ED3A0738, (uint64_t (*)(uint64_t))type metadata accessor for EngagementBannerViewLayoutAttributesFactory, (uint64_t)&protocol conformance descriptor for EngagementBannerViewLayoutAttributesFactory);
    v0 = sub_1BB86D690();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39ED90);
  }
}

unint64_t sub_1BAB605E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39ED78;
  if (!qword_1ED39ED78)
  {
    sub_1BA4CDF6C(255, &qword_1ED39ED80, (uint64_t (*)(void))sub_1BAB5EE60, (uint64_t)&type metadata for EngagementBannerViewLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5A48]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB5A60], v1);
    atomic_store(result, (unint64_t *)&qword_1ED39ED78);
  }
  return result;
}

void sub_1BAB60650(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for EngagementBannerViewLayout;
    v8[1] = &type metadata for EngagementBannerViewLayout.Attributes;
    v8[2] = sub_1BAB60478();
    v8[3] = sub_1BAB603F0();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

ValueMetadata *type metadata accessor for FeedJournalEntrySlot()
{
  return &type metadata for FeedJournalEntrySlot;
}

uint64_t static FormatQueryValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (*(_QWORD *)(*(_QWORD *)a1 + 16) == *(_QWORD *)(*(_QWORD *)a2 + 16)
    && *(_QWORD *)(*(_QWORD *)a1 + 24) == *(_QWORD *)(*(_QWORD *)a2 + 24))
  {
    return 1;
  }
  else
  {
    return sub_1BB874398();
  }
}

unint64_t sub_1BAB6070C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB60730();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB60730()
{
  unint64_t result;

  result = qword_1EF2B0A60;
  if (!qword_1EF2B0A60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatQueryValue, &type metadata for FormatQueryValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A60);
  }
  return result;
}

unint64_t sub_1BAB60774(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA51F9EC();
  a1[2] = sub_1BA7A8DAC();
  result = sub_1BAB607A8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB607A8()
{
  unint64_t result;

  result = qword_1EF2B0A68;
  if (!qword_1EF2B0A68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatQueryValue, &type metadata for FormatQueryValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0A68);
  }
  return result;
}

_QWORD *__swift_initWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

_QWORD *__swift_assignWithCopy_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *__swift_assignWithTake_strong(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatQueryValue()
{
  return &type metadata for FormatQueryValue;
}

uint64_t sub_1BAB60950()
{
  uint64_t v0;

  sub_1BA69D490(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t StubAssetHandle.dataProvider.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed15StubAssetHandle_identifier);
  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed15StubAssetHandle_identifier + 8);
  type metadata accessor for StubAssetHandle.StubAssetDataProvider();
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8A40F0;
  *(_QWORD *)(v3 + 32) = v2;
  *(_QWORD *)(v3 + 40) = v1;
  *(_BYTE *)(v3 + 48) = 1;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t type metadata accessor for StubAssetHandle.StubAssetDataProvider()
{
  return objc_opt_self();
}

uint64_t StubAssetHandle.uniqueKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed15StubAssetHandle_identifier);
  swift_bridgeObjectRetain();
  return v1;
}

id StubAssetHandle.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id StubAssetHandle.init()()
{
  char *v0;
  objc_class *ObjectType;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  ObjectType = (objc_class *)swift_getObjectType();
  v2 = sub_1BB86C8E0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (uint64_t *)&v0[OBJC_IVAR____TtC8NewsFeed15StubAssetHandle_identifier];
  v7 = v0;
  sub_1BB86C8D4();
  v8 = sub_1BB86C8C8();
  v10 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  *v6 = v8;
  v6[1] = v10;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_init);
}

id StubAssetHandle.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for StubAssetHandle()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for DebugFormatInventoryItem()
{
  return &type metadata for DebugFormatInventoryItem;
}

uint64_t sub_1BAB60D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t (*v22)(void);
  _BYTE v24[16];
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  uint64_t v31;
  uint64_t v32;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v24[-v20];
  v32 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v18 + 104))(&v24[-v20], *MEMORY[0x1E0DB63C0], v17, v19);
  v25 = a2;
  v26 = a3;
  v27 = a5;
  v28 = a6;
  v29 = a7;
  v30 = a8;
  v31 = a4;
  v22 = MEMORY[0x1E0DB5DD0];
  sub_1BA65781C(0, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BA657898(&qword_1ED3B0688, &qword_1ED3B0690, (uint64_t (*)(uint64_t, _QWORD *))v22, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D498();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1BAB60EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v30)(uint64_t, _QWORD *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t *, uint64_t);
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v40)();
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v48 = a4;
  v46 = a3;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v15 = v14;
  v16 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v18 = (uint64_t *)((char *)&v44 - v17);
  sub_1BA6566D4();
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = a1;
  v49 = a1;
  swift_getKeyPath();
  v22 = sub_1BB86DA2C();
  v23 = swift_allocBox();
  v25 = v24;
  v26 = *(int *)(type metadata accessor for HeadlineViewLayout.Options(0) + 20);
  v47 = a2;
  sub_1BA4C2DD8(a2 + v26, (uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6566D4);
  v27 = sub_1BB86DA20();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v21, 1, v27) == 1)
  {
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v25, *MEMORY[0x1E0DB61B8], v27);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6566D4);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 32))(v25, v21, v27);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(v25, *MEMORY[0x1E0DB61E8], v22);
  *v18 = v23;
  v29 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v16 + 104);
  v29(v18, *MEMORY[0x1E0DB63E0], v15);
  v30 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v32 = v31;
  v33 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v30, MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  v34 = *(void (**)(uint64_t *, uint64_t))(v16 + 8);
  v34(v18, v15);
  v35 = objc_msgSend(*(id *)(v46 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasVideo);
  v36 = *MEMORY[0x1E0DB63C0];
  v37 = v45;
  if (v35)
  {
    v49 = v45;
    v29(v18, v36, v15);
    v42 = v32;
    v43 = v33;
    v40 = sub_1BAB60D38;
    v41 = 0;
    sub_1BB86D540();
    v34(v18, v15);
  }
  v49 = v37;
  v38 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v29)(v18, v36, v15);
  MEMORY[0x1E0C80A78](v38);
  *((double *)&v44 - 8) = a5;
  *((double *)&v44 - 7) = a6;
  *((double *)&v44 - 6) = a7;
  *((double *)&v44 - 5) = a8;
  v42 = v33;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v34)(v18, v15);
}

uint64_t sub_1BAB61278(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)v16 - v5;
  v16[1] = a1;
  swift_getKeyPath();
  sub_1BA657B44();
  sub_1BB86DB70();
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  v10 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  v12 = v11 + v10;
  v13 = *MEMORY[0x1E0DB5C38];
  sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v9 + 104))(v12, *MEMORY[0x1E0DB5C68], v8);
  sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10], MEMORY[0x1E0DB5A18]);
  sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1BAB61488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  _BYTE v24[16];
  double v25;
  double v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v24[-v20];
  v32 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v18 + 104))(&v24[-v20], *MEMORY[0x1E0DB63C0], v17, v19);
  v25 = a5;
  v26 = a6;
  v27 = a7;
  v28 = a8;
  v29 = a2;
  v30 = a3;
  v31 = a4;
  v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v22, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1BAB615EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6, double a7, double a8)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  _BYTE *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  double *v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  _BYTE v29[16];
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = &v29[-v20];
  v33 = a1;
  (*(void (**)(_BYTE *, _QWORD, uint64_t, double))(v18 + 104))(&v29[-v20], *MEMORY[0x1E0DB63C0], v17, v19);
  sub_1BA656FEC();
  sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
  v23 = *(_QWORD *)(v22 - 8);
  v24 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v26 = (double *)(v25 + v24);
  *v26 = a5;
  v26[1] = a6;
  v26[2] = a7;
  v26[3] = a8;
  (*(void (**)(void))(v23 + 104))();
  v30 = a2;
  v31 = a3;
  v32 = a4;
  v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v27, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v18 + 8))(v21, v17);
}

uint64_t sub_1BAB617D4(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  double v15;
  double v16;
  double v17;
  id v18;
  id v19;
  id v20;
  uint64_t (*v21)(uint64_t, _QWORD *);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t *);
  uint64_t v30;
  double v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  id v40;
  char v41;
  uint64_t result;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t *);
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  id v53;
  char v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  id v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD v84[2];
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  id v89;
  uint64_t v90;
  _BYTE *KeyPath;
  unsigned int v92;
  uint64_t v93;
  void (*v94)(uint64_t *);
  uint64_t v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  void (*v100)(uint64_t *, uint64_t);
  uint64_t v101;
  uint64_t v102;

  KeyPath = a4;
  v6 = (_QWORD *)sub_1BB8726B8();
  v88 = *(v6 - 1);
  v89 = v6;
  MEMORY[0x1E0C80A78](v6);
  v87 = (uint64_t *)((char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v99 = v8;
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (uint64_t *)((char *)&v87 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v87 - v13;
  v96 = a1;
  v102 = a1;
  swift_getKeyPath();
  sub_1BB86D930();
  v16 = round(v15 * 56.0 * 0.25);
  if (byte_1EF3D0978)
    v17 = v16;
  else
    v17 = 14.0;
  v97 = (int *)type metadata accessor for HeadlineViewLayout.Context(0);
  v18 = objc_msgSend(*(id *)(a3 + v97[5] + 40), sel_sourceChannel);
  v93 = a3;
  if (v18)
  {
    v19 = objc_msgSend(v18, sel_theme);
    swift_unknownObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  v20 = objc_msgSend((id)objc_opt_self(), sel_defaultMetrics);
  sub_1BA6578EC(v19, v20, (uint64_t)v14, v17);

  swift_unknownObjectRelease();
  v21 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v23 = v22;
  v24 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v21, MEMORY[0x1E0DB5A18]);
  v90 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  sub_1BB86D4E0();
  swift_release();
  v25 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26 = v99;
  v25(v14, v99);
  v27 = v96;
  v102 = v96;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0x4020000000000000;
  *v11 = v28;
  v29 = *(void (**)(uint64_t *))(v9 + 104);
  v92 = *MEMORY[0x1E0DB63F0];
  v29(v11);
  sub_1BB86D4EC();
  v30 = ((uint64_t (*)(uint64_t *, uint64_t))v25)(v11, v26);
  v102 = v27;
  v31 = MEMORY[0x1E0C80A78](v30);
  v32 = v93;
  v85 = v93;
  v33 = *MEMORY[0x1E0DB63C0];
  v94 = v29;
  ((void (*)(uint64_t *, uint64_t, uint64_t, double))v29)(v11, v33, v26, v31);
  v95 = v24;
  v86 = v24;
  v98 = v23;
  v84[1] = v84;
  v85 = v23;
  v84[0] = sub_1BA656728;
  sub_1BB86D540();
  v34 = v26;
  v35 = v32;
  v100 = (void (*)(uint64_t *, uint64_t))v25;
  v25((char *)v11, v34);
  v101 = v27;
  swift_getKeyPath();
  v36 = *(_QWORD *)(v32 + v97[7]);
  if ((*(_BYTE *)(v36 + qword_1ED3B2F88) & 1) != 0)
    goto LABEL_9;
  sub_1BA657D64();
  v37 = sub_1BB87345C();
  v39 = v87;
  v38 = v88;
  *v87 = v37;
  v40 = v89;
  (*(void (**)(uint64_t *, _QWORD, id))(v38 + 104))(v39, *MEMORY[0x1E0DEF738], v89);
  v41 = sub_1BB8726D0();
  result = (*(uint64_t (**)(uint64_t *, id))(v38 + 8))(v39, v40);
  if ((v41 & 1) != 0)
  {
LABEL_9:
    v43 = swift_allocObject();
    v44 = *(void **)(v36 + *(_QWORD *)(*(_QWORD *)v36 + 136));
    *(_QWORD *)(v43 + 16) = v44;
    *v11 = v43;
    v45 = *MEMORY[0x1E0DB6398];
    v46 = v99;
    v47 = v94;
    ((void (*)(uint64_t *, uint64_t, uint64_t))v94)(v11, v45, v99);
    v48 = v44;
    sub_1BB86D4E0();
    swift_release();
    v100(v11, v46);
    if ((*KeyPath & 1) == 0)
      goto LABEL_14;
    v49 = *(_QWORD *)(v32 + v97[8]);
    if (!v49)
      goto LABEL_14;
    if ((*(_BYTE *)(v49 + qword_1ED3B2F88) & 1) != 0)
      goto LABEL_13;
    sub_1BA657D64();
    v50 = sub_1BB87345C();
    v52 = v87;
    v51 = v88;
    *v87 = v50;
    v53 = v89;
    (*(void (**)(uint64_t *, _QWORD, id))(v51 + 104))(v52, *MEMORY[0x1E0DEF738], v89);
    v54 = sub_1BB8726D0();
    result = (*(uint64_t (**)(uint64_t *, id))(v51 + 8))(v52, v53);
    if ((v54 & 1) != 0)
    {
LABEL_13:
      v55 = *(void **)(v49 + *(_QWORD *)(*(_QWORD *)v49 + 136));
      v56 = v96;
      v101 = v96;
      v57 = swift_allocObject();
      *(_QWORD *)(v57 + 16) = 0x4010000000000000;
      *v11 = v57;
      v58 = v99;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v47)(v11, v92, v99);
      v59 = v55;
      v89 = v59;
      sub_1BB86D4EC();
      v100(v11, v58);
      v101 = v56;
      KeyPath = (_BYTE *)swift_getKeyPath();
      v60 = swift_allocObject();
      *(_QWORD *)(v60 + 16) = v59;
      *v11 = v60;
      ((void (*)(uint64_t *, uint64_t, uint64_t))v94)(v11, v45, v58);
      sub_1BA656FEC();
      sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
      v62 = *(_QWORD *)(v61 - 8);
      v63 = (*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      v64 = swift_allocObject();
      *(_OWORD *)(v64 + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(v64 + v63) = 2;
      (*(void (**)(void))(v62 + 104))();
      v65 = v89;
      v47 = v94;
      sub_1BB86D4E0();

      swift_release();
      swift_bridgeObjectRelease();
      v100(v11, v58);
      v35 = v93;
LABEL_14:
      v66 = v96;
      v102 = v96;
      v67 = swift_allocObject();
      *(_QWORD *)(v67 + 16) = 0x4030000000000000;
      *v11 = v67;
      v68 = v92;
      v69 = v99;
      ((void (*)(uint64_t *, _QWORD, uint64_t))v47)(v11, v92, v99);
      v70 = v95;
      sub_1BB86D4EC();
      v100(v11, v69);
      v102 = v66;
      v71 = swift_allocObject();
      v72 = (_QWORD *)(v35 + v97[6]);
      v73 = v72[3];
      v74 = v72[4];
      __swift_project_boxed_opaque_existential_1(v72, v73);
      *(double *)(v71 + 16) = (*(double (**)(uint64_t, uint64_t))(v74 + 16))(v73, v74);
      *v11 = v71;
      ((void (*)(uint64_t *, uint64_t, uint64_t))v47)(v11, v68, v69);
      sub_1BA656FEC();
      sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
      v76 = v75;
      v77 = *(_QWORD *)(v75 - 8);
      v78 = (*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80);
      v79 = swift_allocObject();
      *(_OWORD *)(v79 + 16) = xmmword_1BB87CE70;
      v80 = v79 + v78;
      v81 = *MEMORY[0x1E0DB5C30];
      sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v82 - 8) + 104))(v80, v81, v82);
      v83 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t))(v77 + 104))(v80, *MEMORY[0x1E0DB5C68], v76);
      MEMORY[0x1E0C80A78](v83);
      v85 = v70;
      sub_1BB86D498();
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t *, uint64_t))v100)(v11, v69);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1BAB62104(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  unsigned __int8 *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t *, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v43 = a2;
  sub_1BA6577C0(0, &qword_1ED3B0730, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v37 - v7);
  v39 = a1;
  v44 = a1;
  swift_getKeyPath();
  v9 = swift_allocObject();
  v10 = type metadata accessor for HeadlineViewLayout.Context(0);
  v11 = (_QWORD *)(a2 + *(int *)(v10 + 24));
  v12 = v11[3];
  v13 = v11[4];
  __swift_project_boxed_opaque_existential_1(v11, v12);
  *(double *)(v9 + 16) = (*(double (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13);
  *v8 = v9;
  v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v6 + 104);
  v14(v8, *MEMORY[0x1E0DB63F0], v5);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BA65781C(0, &qword_1ED3B05C8, MEMORY[0x1E0DB5A10]);
  v17 = v16;
  v18 = sub_1BA657898(&qword_1ED3B05C0, &qword_1ED3B05C8, v15, MEMORY[0x1E0DB5A18]);
  v19 = sub_1BA4A2870(&qword_1ED3B0620, (uint64_t (*)(uint64_t))sub_1BA62E724, MEMORY[0x1E0DB5A60]);
  v41 = v18;
  v42 = v17;
  v40 = v19;
  sub_1BB86D4E0();
  swift_release();
  v20 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v21 = v5;
  v20(v8, v5);
  v22 = v43 + *(int *)(v10 + 20);
  result = type metadata accessor for FeedHeadline(0);
  v24 = (unsigned __int8 *)(v22 + *(int *)(result + 40));
  if (v24[1] != 1 || *v24 <= 1u)
  {
    v25 = v39;
    v44 = v39;
    v26 = swift_allocObject();
    *(_QWORD *)(v26 + 16) = 0x4010000000000000;
    *v8 = v26;
    v14(v8, *MEMORY[0x1E0DB63E8], v5);
    v38 = (uint64_t (*)(uint64_t *, uint64_t))v20;
    sub_1BB86D4EC();
    v20(v8, v5);
    v44 = v25;
    swift_getKeyPath();
    v27 = v11[3];
    v28 = v11[4];
    __swift_project_boxed_opaque_existential_1(v11, v27);
    (*(void (**)(uint64_t, uint64_t))(v28 + 24))(v27, v28);
    sub_1BA657B44();
    sub_1BB86DB70();
    sub_1BA656FEC();
    sub_1BA6577C0(0, &qword_1ED3B0668, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DB5CC0]);
    v30 = v29;
    v31 = *(_QWORD *)(v29 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_1BB87CE70;
    v34 = v33 + v32;
    v35 = *MEMORY[0x1E0DB5C58];
    sub_1BA6577C0(0, &qword_1ED3B0658, MEMORY[0x1E0DB5C60]);
    (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 104))(v34, v35, v36);
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v31 + 104))(v34, *MEMORY[0x1E0DB5C68], v30);
    sub_1BB86D4E0();
    swift_release();
    swift_bridgeObjectRelease();
    return v38(v8, v21);
  }
  return result;
}

uint64_t sub_1BAB624E8(uint64_t a1)
{
  return sub_1BAB628B4(a1, sub_1BB622938);
}

uint64_t sub_1BAB624F4()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB62504()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BAB62528(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;

  v4 = sub_1BB86DA38();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = sub_1BB86D93C();
  v8 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (uint64_t *)((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = objc_msgSend(*(id *)(a1 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20) + 40), sel_hasThumbnail);
  sub_1BA4C2DD8(a2, (uint64_t)v13, type metadata accessor for HeadlineViewLayout.Options);
  if (v14)
  {
    v15 = *v13;
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Options);
    if ((v15 & 2) == 0)
    {
      if (qword_1ED3BC390 != -1)
        swift_once();
      swift_retain();
      sub_1BB86D2B8();
      v16 = swift_release();
      MEMORY[0x1E0C80A78](v16);
      *(&v25 - 8) = a2;
      *(&v25 - 7) = a1;
      *((_OWORD *)&v25 - 3) = xmmword_1BB8A4190;
      *(&v25 - 4) = 0;
      *(&v25 - 3) = 0;
      *(&v25 - 2) = (uint64_t)v10;
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DB6208], v4);
      sub_1BA65781C(0, (unint64_t *)&qword_1ED3B06F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
      swift_allocObject();
      goto LABEL_10;
    }
  }
  else
  {
    sub_1BA4A2E80((uint64_t)v13, type metadata accessor for HeadlineViewLayout.Options);
  }
  v17 = *MEMORY[0x1E0DC49E8];
  v18 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 8);
  v19 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 16);
  v20 = *(_QWORD *)(MEMORY[0x1E0DC49E8] + 24);
  if (qword_1ED3BC390 != -1)
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v21 = swift_release();
  v22 = MEMORY[0x1E0C80A78](v21);
  *(&v25 - 8) = v17;
  *(&v25 - 7) = v18;
  *(&v25 - 6) = v19;
  *(&v25 - 5) = v20;
  *(&v25 - 4) = (uint64_t)v10;
  *(&v25 - 3) = a1;
  *(&v25 - 2) = a2;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v5 + 104))(v7, *MEMORY[0x1E0DB6208], v4, v22);
  sub_1BA65781C(0, (unint64_t *)&qword_1ED3B06F8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
LABEL_10:
  v23 = sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v26);
  return v23;
}

uint64_t sub_1BAB6286C(uint64_t a1)
{
  return sub_1BAB62884(a1, sub_1BAB60D3C);
}

uint64_t sub_1BAB62878(uint64_t a1)
{
  return sub_1BAB62884(a1, sub_1BAB60EA0);
}

uint64_t sub_1BAB62884(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, double, double, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 64), *(double *)(v2 + 32), *(double *)(v2 + 40), *(double *)(v2 + 48), *(double *)(v2 + 56));
}

uint64_t sub_1BAB6289C(uint64_t a1)
{
  return sub_1BAB628B4(a1, sub_1BAB61488);
}

uint64_t sub_1BAB628A8(uint64_t a1)
{
  return sub_1BAB628B4(a1, sub_1BAB615EC);
}

uint64_t sub_1BAB628B4(uint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, double, double, double, double))
{
  uint64_t v2;

  return a2(a1, *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(double *)(v2 + 16), *(double *)(v2 + 24), *(double *)(v2 + 32), *(double *)(v2 + 40));
}

uint64_t sub_1BAB628CC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB617D4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE **)(v1 + 32));
}

uint64_t sub_1BAB628D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1BAB62104(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BAB628F4()
{
  _QWORD *v0;
  uint64_t v1;
  char v2;

  v1 = *v0 >> 61;
  v2 = 0;
  if (((1 << v1) & 0x57) == 0)
  {
    if ((_DWORD)v1 == 3)
      v2 = sub_1BAB628F4(0);
    else
      v2 = 1;
  }
  return v2 & 1;
}

void static FormatDimensionSizingValue.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB62994()
{
  unint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  if (v0 >> 61)
  {
    sub_1BA71C7D8(v0);
    sub_1BA71C7D8(v1);
    sub_1BA71C808(v1);
    sub_1BA71C808(v0);
    v4 = 0;
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    v3 = *(_QWORD *)(v0 + 16);
    sub_1BA71C7D8(v0);
    sub_1BA71C7D8(v1);
    v4 = sub_1BA881EAC(v2, v3);
    sub_1BA71C808(v1);
    sub_1BA71C808(v0);
  }
  return v4 & 1;
}

unint64_t sub_1BAB62B94(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB62BB8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB62BB8()
{
  unint64_t result;

  result = qword_1EF2B0B50;
  if (!qword_1EF2B0B50)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizingValue, &type metadata for FormatDimensionSizingValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0B50);
  }
  return result;
}

unint64_t sub_1BAB62BFC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA5A79D0();
  a1[2] = sub_1BA76371C();
  result = sub_1BAB62C30();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB62C30()
{
  unint64_t result;

  result = qword_1EF2B0B58;
  if (!qword_1EF2B0B58)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDimensionSizingValue, &type metadata for FormatDimensionSizingValue);
    atomic_store(result, (unint64_t *)&qword_1EF2B0B58);
  }
  return result;
}

unint64_t *initializeBufferWithCopyOfBuffer for FormatDimensionSizingValue(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a2;
  sub_1BA71C7D8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FormatDimensionSizingValue(unint64_t *a1)
{
  return sub_1BA71C808(*a1);
}

unint64_t *assignWithCopy for FormatDimensionSizingValue(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;
  unint64_t v4;

  v3 = *a2;
  sub_1BA71C7D8(*a2);
  v4 = *a1;
  *a1 = v3;
  sub_1BA71C808(v4);
  return a1;
}

unint64_t *assignWithTake for FormatDimensionSizingValue(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3;

  v3 = *a1;
  *a1 = *a2;
  sub_1BA71C808(v3);
  return a1;
}

uint64_t sub_1BAB62D14(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if (v1 <= 5)
    return v1;
  else
    return (*a1 >> 3) + 6;
}

unint64_t *sub_1BAB62D30(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 6)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 6);
    v3 = 0xC000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatDimensionSizingValue()
{
  return &type metadata for FormatDimensionSizingValue;
}

uint64_t sub_1BAB62D6C()
{
  return swift_deallocObject();
}

uint64_t sub_1BAB62D7C()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BAB62DA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t result;
  uint64_t v6;

  sub_1BA4D787C(0, &qword_1ED3BBFE0, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DBC400]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v4 = (char *)&v6 - v3;
  sub_1BA4D787C(0, &qword_1ED3BC058, MEMORY[0x1E0DBC428]);
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v4, *MEMORY[0x1E0DBC3F8], v1);
  result = sub_1BB871458();
  qword_1ED3C4B28 = result;
  return result;
}

uint64_t static Commands.ShowTextResize.article.getter()
{
  if (qword_1ED3C4B38 != -1)
    swift_once();
  return swift_retain();
}

uint64_t sub_1BAB62EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t ObjCClassFromMetadata;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v10;

  v0 = sub_1BB870150();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED3C4B38 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = (void *)objc_opt_self();
  swift_retain();
  v6 = objc_msgSend(v5, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72E8 != -1)
    swift_once();
  v7 = (void *)qword_1EF2C47B8;
  (*(void (**)(char *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB8530], v0);
  sub_1BB86FB38();
  swift_allocObject();
  v8 = v7;
  return sub_1BB86FB14();
}

ValueMetadata *type metadata accessor for Commands.ShowTextResize()
{
  return &type metadata for Commands.ShowTextResize;
}

uint64_t sub_1BAB6308C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  unint64_t v49;
  size_t v50;
  uint64_t isStackAllocationSafe;
  uint64_t v52;
  void *v53;
  char v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75[7];

  v3 = v2;
  v75[5] = *MEMORY[0x1E0C80C00];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v57 - v7;
  v9 = sub_1BB86C8B0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v57 - v20;
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  v23 = *(_QWORD *)(v3 + *(int *)(v22 + 36));
  if (!*(_QWORD *)(v23 + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(a2, v3, v9);
  v66 = v15;
  v59 = v23;
  v58 = a2;
  v24 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v24 + 16) + 16))
  {
    v75[0] = *(_QWORD *)(a1 + 56);
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1BA6E42A0(v25);
    sub_1BA6E3FB8(v26);
    v74 = v75[0];
  }
  else
  {
    v74 = sub_1BA6E3F38();
  }
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v28(v21, v3, v9);
  v73 = (void (*)(char *, char *, uint64_t))v28;
  v28(v18, (uint64_t)v21, v9);
  v29 = v59;
  v69 = *(_QWORD *)(v59 + 16);
  v57 = v21;
  if (v69)
  {
    sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3BA910, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v60 = v30;
    v31 = *(_QWORD *)(v30 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v33 != -1)
      swift_once();
    v34 = 0;
    v68 = v29 + v32;
    v67 = *(_QWORD *)(v31 + 72);
    v35 = v66;
    v64 = v10;
    v65 = v9;
    v62 = v12;
    v63 = v8;
    v61 = v18;
    do
    {
      v38 = (uint64_t *)(v68 + v67 * v34);
      v39 = *v38;
      v40 = v38[1];
      v70 = v38;
      v75[0] = v39;
      v75[1] = v40;
      swift_bridgeObjectRetain();
      v41 = sub_1BA6E583C(v75);
      swift_bridgeObjectRelease();
      v42 = v41;
      v43 = *(_QWORD *)(v41 + 16);
      if (v43)
      {
        v71 = v42;
        v72 = v34;
        v44 = (uint64_t *)(v42 + 64);
        do
        {
          v45 = *(v44 - 1);
          v46 = *v44;
          v47 = *(_BYTE *)(v45 + 32);
          v48 = v47 & 0x3F;
          v49 = (unint64_t)((1 << v47) + 63) >> 6;
          v50 = 8 * v49;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v48 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
            v52 = sub_1BA6EB5B4((uint64_t)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v74);
            swift_bridgeObjectRelease();
          }
          else
          {
            v53 = (void *)swift_slowAlloc();
            bzero(v53, v50);
            v52 = sub_1BA6EB5B4((uint64_t)v53, v49, v45, v74);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v53, -1, -1);
          }
          v54 = sub_1BA6EB330(v52, v45);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20(v74, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v8 = v63;
              v9 = v65;
              v73(v63, (char *)v70 + *(int *)(v60 + 36), v65);
              v56 = 0;
              v10 = v64;
              goto LABEL_24;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 += 5;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        v56 = 1;
        v10 = v64;
        v9 = v65;
        v8 = v63;
LABEL_24:
        v18 = v61;
        v12 = v62;
        v35 = v66;
        v34 = v72;
      }
      else
      {
        swift_bridgeObjectRelease();
        v56 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v56, 1, v9);
      v73(v12, v18, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v36(v35, v12, v9);
        sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3B0540, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        v37 = *(void (**)(char *, uint64_t))(v10 + 8);
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t))(v10 + 8);
        v37(v12, v9);
        v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v36(v35, v8, v9);
      }
      ++v34;
      v37(v18, v9);
      v36(v18, v35, v9);
    }
    while (v34 != v69);
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    swift_bridgeObjectRetain();
  }
  v36(v58, v18, v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v57, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BAB636F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  unsigned int v53;
  unint64_t v54;
  size_t v55;
  uint64_t isStackAllocationSafe;
  uint64_t v57;
  void *v58;
  char v59;
  char v60;
  uint64_t result;
  _QWORD v62[2];
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74[2];
  _QWORD v75[8];

  v75[6] = *MEMORY[0x1E0C80C00];
  v66 = *(_QWORD *)(a4 + 16);
  if (v66)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
    swift_beginAccess();
    v9 = *(_QWORD *)(*(_QWORD *)(v8 + 16) + 16);
    v63 = a2;
    if (v9)
    {
      v75[0] = *(_QWORD *)(a1 + 56);
      v10 = swift_bridgeObjectRetain();
      v11 = sub_1BA6E42A0(v10);
      sub_1BA6E3FB8(v11);
      v73 = v75[0];
    }
    else
    {
      v73 = sub_1BA6E3F38();
    }
    v65 = a4 + 32;
    v62[0] = a4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v12 = 0;
    v62[1] = a3;
    v64 = a3;
    while (1)
    {
      v14 = (uint64_t *)(v65 + 32 * v12);
      v16 = *v14;
      v15 = v14[1];
      v17 = v14[3];
      v67 = v14[2];
      v18 = qword_1ED3BE7F8;
      swift_bridgeObjectRetain();
      v70 = v17;
      swift_bridgeObjectRetain();
      if (v18 != -1)
        swift_once();
      v19 = qword_1ED4768D0;
      v20 = *(_QWORD *)(qword_1ED4768D0 + 24);
      swift_bridgeObjectRetain();
      sub_1BB86DD20();
      v21 = (uint64_t *)(v19 + 16);
      swift_beginAccess();
      v22 = *(_QWORD *)(v19 + 16);
      v23 = *(_QWORD *)(v22 + 16);
      v71 = v12;
      if (!v23)
        goto LABEL_15;
      swift_bridgeObjectRetain();
      v24 = sub_1BA6E35A8(v16, v15);
      if ((v25 & 1) == 0)
        break;
      v26 = *(_QWORD *)(*(_QWORD *)(v22 + 56) + 24 * v24 + 16);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
LABEL_27:
      swift_bridgeObjectRelease();
      sub_1BB86DD2C();
      swift_bridgeObjectRelease();
      v48 = *(_QWORD *)(v26 + 16);
      if (!v48)
      {
LABEL_7:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v13 = v71;
        goto LABEL_8;
      }
      v69 = v15;
      v72 = v26;
      v49 = (uint64_t *)(v26 + 64);
      while (1)
      {
        v50 = *(v49 - 1);
        v51 = *v49;
        v52 = *(_BYTE *)(v50 + 32);
        v53 = v52 & 0x3F;
        v54 = (unint64_t)((1 << v52) + 63) >> 6;
        v55 = 8 * v54;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v53 <= 0xD
          || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          MEMORY[0x1E0C80A78](isStackAllocationSafe);
          bzero((char *)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v55);
          v57 = sub_1BA6EB5B4((uint64_t)v62 - ((v55 + 15) & 0x3FFFFFFFFFFFFFF0), v54, v50, v73);
          swift_bridgeObjectRelease();
        }
        else
        {
          v58 = (void *)swift_slowAlloc();
          bzero(v58, v55);
          v57 = sub_1BA6EB5B4((uint64_t)v58, v54, v50, v73);
          swift_bridgeObjectRelease();
          MEMORY[0x1BCCE5C38](v58, -1, -1);
        }
        v59 = sub_1BA6EB330(v57, v50);
        swift_release();
        if ((v59 & 1) != 0)
          break;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_30:
        v49 += 5;
        if (!--v48)
          goto LABEL_7;
      }
      v60 = sub_1BA6EBD20(v73, v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v60 & 1) == 0)
        goto LABEL_30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = v71;
      v63 = v67;
      v64 = v70;
LABEL_8:
      swift_bridgeObjectRelease();
      v12 = v13 + 1;
      if (v12 == v66)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v63;
      }
    }
    swift_bridgeObjectRelease();
LABEL_15:
    v68 = v20;
    swift_endAccess();
    v74[0] = v16;
    v74[1] = v15;
    swift_bridgeObjectRetain();
    sub_1BA6F2E38(v74, v75);
    v27 = v75[1];
    v69 = v75[0];
    v28 = v75[2];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v72 = v28;
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v74[0] = *v21;
    v30 = v74[0];
    *v21 = 0x8000000000000000;
    v31 = v16;
    v32 = v15;
    v34 = sub_1BA6E35A8(v16, v15);
    v35 = *(_QWORD *)(v30 + 16);
    v36 = (v33 & 1) == 0;
    v37 = v35 + v36;
    if (__OFADD__(v35, v36))
    {
      __break(1u);
LABEL_42:
      __break(1u);
    }
    v38 = v33;
    if (*(_QWORD *)(v30 + 24) < v37)
    {
      sub_1BA7AAAE4(v37, isUniquelyReferenced_nonNull_native);
      v39 = sub_1BA6E35A8(v31, v32);
      if ((v38 & 1) != (v40 & 1))
      {
        result = sub_1BB874560();
        __break(1u);
        return result;
      }
      v34 = v39;
      v41 = (_QWORD *)v74[0];
      if ((v38 & 1) == 0)
        goto LABEL_24;
LABEL_22:
      v42 = (uint64_t *)(v41[7] + 24 * v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v42 = v69;
      v42[1] = v27;
      v26 = v72;
      v42[2] = v72;
      v15 = v32;
LABEL_26:
      *v21 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
    {
      v41 = (_QWORD *)v74[0];
      if ((v33 & 1) != 0)
        goto LABEL_22;
    }
    else
    {
      sub_1BB4C1F6C();
      v41 = (_QWORD *)v74[0];
      if ((v38 & 1) != 0)
        goto LABEL_22;
    }
LABEL_24:
    v41[(v34 >> 6) + 8] |= 1 << v34;
    v43 = (uint64_t *)(v41[6] + 16 * v34);
    *v43 = v31;
    v43[1] = v32;
    v44 = (uint64_t *)(v41[7] + 24 * v34);
    *v44 = v69;
    v44[1] = v27;
    v26 = v72;
    v44[2] = v72;
    v45 = v41[2];
    v46 = __OFADD__(v45, 1);
    v47 = v45 + 1;
    if (v46)
      goto LABEL_42;
    v15 = v32;
    v41[2] = v47;
    swift_bridgeObjectRetain();
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1BAB63D60@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, char *, uint64_t);
  void (*v37)(char *, uint64_t);
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  unsigned int v48;
  unint64_t v49;
  size_t v50;
  uint64_t isStackAllocationSafe;
  uint64_t v52;
  void *v53;
  char v54;
  char v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  void (*v73)(char *, char *, uint64_t);
  uint64_t v74;
  uint64_t v75[7];

  v3 = v2;
  v75[5] = *MEMORY[0x1E0C80C00];
  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v57 - v7;
  v9 = sub_1BB86C67C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v57 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v57 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v57 - v20;
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  v23 = *(_QWORD *)(v3 + *(int *)(v22 + 36));
  if (!*(_QWORD *)(v23 + 16))
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 16))(a2, v3, v9);
  v66 = v15;
  v59 = v23;
  v58 = a2;
  v24 = *(_QWORD *)(*(_QWORD *)(a1 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v24 + 16) + 16))
  {
    v75[0] = *(_QWORD *)(a1 + 56);
    v25 = swift_bridgeObjectRetain();
    v26 = sub_1BA6E42A0(v25);
    sub_1BA6E3FB8(v26);
    v74 = v75[0];
  }
  else
  {
    v74 = sub_1BA6E3F38();
  }
  v28 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v28(v21, v3, v9);
  v73 = (void (*)(char *, char *, uint64_t))v28;
  v28(v18, (uint64_t)v21, v9);
  v29 = v59;
  v69 = *(_QWORD *)(v59 + 16);
  v57 = v21;
  if (v69)
  {
    sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3BA908, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValueSelector);
    v60 = v30;
    v31 = *(_QWORD *)(v30 - 8);
    v32 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
    v33 = qword_1ED3BE7F8;
    swift_bridgeObjectRetain();
    if (v33 != -1)
      swift_once();
    v34 = 0;
    v68 = v29 + v32;
    v67 = *(_QWORD *)(v31 + 72);
    v35 = v66;
    v64 = v10;
    v65 = v9;
    v62 = v12;
    v63 = v8;
    v61 = v18;
    do
    {
      v38 = (uint64_t *)(v68 + v67 * v34);
      v39 = *v38;
      v40 = v38[1];
      v70 = v38;
      v75[0] = v39;
      v75[1] = v40;
      swift_bridgeObjectRetain();
      v41 = sub_1BA6E583C(v75);
      swift_bridgeObjectRelease();
      v42 = v41;
      v43 = *(_QWORD *)(v41 + 16);
      if (v43)
      {
        v71 = v42;
        v72 = v34;
        v44 = (uint64_t *)(v42 + 64);
        do
        {
          v45 = *(v44 - 1);
          v46 = *v44;
          v47 = *(_BYTE *)(v45 + 32);
          v48 = v47 & 0x3F;
          v49 = (unint64_t)((1 << v47) + 63) >> 6;
          v50 = 8 * v49;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v48 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            bzero((char *)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v50);
            v52 = sub_1BA6EB5B4((uint64_t)&v57 - ((v50 + 15) & 0x3FFFFFFFFFFFFFF0), v49, v45, v74);
            swift_bridgeObjectRelease();
          }
          else
          {
            v53 = (void *)swift_slowAlloc();
            bzero(v53, v50);
            v52 = sub_1BA6EB5B4((uint64_t)v53, v49, v45, v74);
            swift_bridgeObjectRelease();
            MEMORY[0x1BCCE5C38](v53, -1, -1);
          }
          v54 = sub_1BA6EB330(v52, v45);
          swift_release();
          if ((v54 & 1) != 0)
          {
            v55 = sub_1BA6EBD20(v74, v46);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v55 & 1) != 0)
            {
              swift_bridgeObjectRelease();
              v8 = v63;
              v9 = v65;
              v73(v63, (char *)v70 + *(int *)(v60 + 36), v65);
              v56 = 0;
              v10 = v64;
              goto LABEL_24;
            }
          }
          else
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 += 5;
          --v43;
        }
        while (v43);
        swift_bridgeObjectRelease();
        v56 = 1;
        v10 = v64;
        v9 = v65;
        v8 = v63;
LABEL_24:
        v18 = v61;
        v12 = v62;
        v35 = v66;
        v34 = v72;
      }
      else
      {
        swift_bridgeObjectRelease();
        v56 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, v56, 1, v9);
      v73(v12, v18, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v36(v35, v12, v9);
        sub_1BA502AD0((uint64_t)v8, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        v37 = *(void (**)(char *, uint64_t))(v10 + 8);
      }
      else
      {
        v37 = *(void (**)(char *, uint64_t))(v10 + 8);
        v37(v12, v9);
        v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
        v36(v35, v8, v9);
      }
      ++v34;
      v37(v18, v9);
      v36(v18, v35, v9);
    }
    while (v34 != v69);
  }
  else
  {
    v36 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
    swift_bridgeObjectRetain();
  }
  v36(v58, v18, v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v57, v9);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id FormatCustomNodeRenderer.render<A>(context:data:layoutAttributes:in:token:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1BAB65930(a2, a3, a4);
}

void sub_1BAB643DC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = sub_1BB86C67C();
  MEMORY[0x1E0C80A78](v5);
  sub_1BA68D4C8(0, (unint64_t *)&qword_1ED3B5EE8, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v2);
  v3 = sub_1BB86C8B0();
  MEMORY[0x1E0C80A78](v3);
  sub_1BA68D5EC(0, (unint64_t *)&qword_1ED3B5EF0, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatSelectorValue);
  MEMORY[0x1E0C80A78](v4);
  __asm { BR              X11 }
}

void sub_1BAB64534(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  _BOOL8 v36;
  uint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  _QWORD *v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  _QWORD *v45;
  uint64_t v46;
  BOOL v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unsigned int v54;
  unint64_t v55;
  size_t v56;
  uint64_t isStackAllocationSafe;
  char *v58;
  uint64_t v59;
  char v60;
  char v61;
  void *v62;
  void *v63;
  uint64_t v64;

  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  if (*(_QWORD *)(v4 + 16))
  {
    *(_QWORD *)(v2 - 280) = v4;
    *(_DWORD *)(v2 - 272) = v3;
    v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 - 192) + 40) + 16);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v5 + 16) + 16))
    {
      *(_QWORD *)(v2 - 160) = *(_QWORD *)(*(_QWORD *)(v2 - 192) + 56);
      v6 = swift_bridgeObjectRetain();
      v7 = sub_1BA6E42A0(v6);
      sub_1BA6E3FB8(v7);
      *(_QWORD *)(v2 - 192) = *(_QWORD *)(v2 - 160);
    }
    else
    {
      *(_QWORD *)(v2 - 192) = sub_1BA6E3F38();
    }
    v9 = *(_QWORD *)(v2 - 280);
    v10 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v2 - 256) = v10;
    if (v10)
    {
      *(_QWORD *)(v2 - 264) = v9 + 32;
      swift_bridgeObjectRetain();
      v11 = 0;
      while (1)
      {
        v12 = *(_QWORD *)(v2 - 264) + 24 * v11;
        v14 = *(_QWORD *)v12;
        v13 = *(_QWORD *)(v12 + 8);
        v15 = *(unsigned __int8 *)(v12 + 16);
        v16 = qword_1ED3BE7F8;
        swift_bridgeObjectRetain();
        if (v16 != -1)
          swift_once();
        v17 = qword_1ED4768D0;
        v18 = *(_QWORD *)(qword_1ED4768D0 + 24);
        swift_bridgeObjectRetain();
        sub_1BB86DD20();
        v19 = (uint64_t *)(v17 + 16);
        swift_beginAccess();
        v20 = *(_QWORD *)(v17 + 16);
        v21 = *(_QWORD *)(v20 + 16);
        *(_QWORD *)(v2 - 208) = v11;
        *(_DWORD *)(v2 - 248) = v15;
        if (!v21)
          goto LABEL_16;
        swift_bridgeObjectRetain();
        v22 = sub_1BA6E35A8(v14, v13);
        if ((v23 & 1) == 0)
          break;
        v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 24 * v22 + 16);
        swift_endAccess();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        sub_1BB86DD2C();
        swift_bridgeObjectRelease();
        v49 = *(_QWORD *)(v24 + 16);
        if (!v49)
        {
LABEL_8:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
        *(_QWORD *)(v2 - 240) = v13;
        *(_QWORD *)(v2 - 200) = v24;
        v50 = (uint64_t *)(v24 + 64);
        while (1)
        {
          v51 = *(v50 - 1);
          v52 = *v50;
          v53 = *(_BYTE *)(v51 + 32);
          v54 = v53 & 0x3F;
          v55 = (unint64_t)((1 << v53) + 63) >> 6;
          v56 = 8 * v55;
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain();
          isStackAllocationSafe = swift_bridgeObjectRetain();
          if (v54 <= 0xD
            || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
          {
            MEMORY[0x1E0C80A78](isStackAllocationSafe);
            v58 = (char *)&v64 - ((v56 + 15) & 0x3FFFFFFFFFFFFFF0);
            bzero(v58, v56);
            v59 = sub_1BA6EB5B4((uint64_t)v58, v55, v51, *(_QWORD *)(v2 - 192));
            swift_bridgeObjectRelease();
            if (v1)
            {
              swift_willThrow();

              __break(1u);
LABEL_46:

              MEMORY[0x1BCCE5C38](v58, -1, -1);
              __break(1u);
LABEL_47:
              sub_1BB874560();
              __break(1u);
              JUMPOUT(0x1BAB658B4);
            }
          }
          else
          {
            v58 = (char *)swift_slowAlloc();
            bzero(v58, v56);
            v59 = sub_1BA6EB5B4((uint64_t)v58, v55, v51, *(_QWORD *)(v2 - 192));
            swift_bridgeObjectRelease();
            if (v1)
              goto LABEL_46;
            MEMORY[0x1BCCE5C38](v58, -1, -1);
          }
          v60 = sub_1BA6EB330(v59, v51);
          swift_release();
          if ((v60 & 1) != 0)
            break;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_30:
          v50 += 5;
          if (!--v49)
            goto LABEL_8;
        }
        v61 = sub_1BA6EBD20(*(_QWORD *)(v2 - 192), v52);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v61 & 1) == 0)
          goto LABEL_30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_DWORD *)(v2 - 272) = *(_DWORD *)(v2 - 248);
LABEL_9:
        v11 = *(_QWORD *)(v2 - 208) + 1;
        if (v11 == *(_QWORD *)(v2 - 256))
        {
          swift_bridgeObjectRelease();
          goto LABEL_42;
        }
      }
      swift_bridgeObjectRelease();
LABEL_16:
      *(_QWORD *)(v2 - 240) = v18;
      swift_endAccess();
      *(_QWORD *)(v2 - 176) = v14;
      *(_QWORD *)(v2 - 168) = v13;
      swift_bridgeObjectRetain();
      sub_1BA6F2E38((uint64_t *)(v2 - 176), (_QWORD *)(v2 - 160));
      v25 = *(_QWORD *)(v2 - 160);
      v26 = *(_QWORD *)(v2 - 152);
      v27 = *(_QWORD *)(v2 - 144);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(_QWORD *)(v2 - 200) = v27;
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v29 = v14;
      v30 = isUniquelyReferenced_nonNull_native;
      v31 = *v19;
      *(_QWORD *)(v2 - 176) = *v19;
      *v19 = 0x8000000000000000;
      v32 = v29;
      v34 = sub_1BA6E35A8(v29, v13);
      v35 = *(_QWORD *)(v31 + 16);
      v36 = (v33 & 1) == 0;
      v37 = v35 + v36;
      if (__OFADD__(v35, v36))
      {
        __break(1u);
        JUMPOUT(0x1BAB65860);
      }
      v38 = v33;
      if (*(_QWORD *)(v31 + 24) >= v37)
      {
        if ((v30 & 1) == 0)
          sub_1BB4C1F6C();
      }
      else
      {
        sub_1BA7AAAE4(v37, v30);
        v39 = sub_1BA6E35A8(v32, v13);
        if ((v38 & 1) != (v40 & 1))
          goto LABEL_47;
        v34 = v39;
      }
      v41 = *(_QWORD **)(v2 - 176);
      if ((v38 & 1) != 0)
      {
        v42 = (_QWORD *)(v41[7] + 24 * v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *v42 = v25;
        v42[1] = v26;
        v43 = *(_QWORD *)(v2 - 200);
        v42[2] = v43;
        v24 = v43;
      }
      else
      {
        v41[(v34 >> 6) + 8] |= 1 << v34;
        v44 = (uint64_t *)(v41[6] + 16 * v34);
        *v44 = v32;
        v44[1] = v13;
        v45 = (_QWORD *)(v41[7] + 24 * v34);
        *v45 = v25;
        v45[1] = v26;
        v24 = *(_QWORD *)(v2 - 200);
        v45[2] = v24;
        v46 = v41[2];
        v47 = __OFADD__(v46, 1);
        v48 = v46 + 1;
        if (v47)
        {
          __break(1u);
          JUMPOUT(0x1BAB6586CLL);
        }
        v41[2] = v48;
        swift_bridgeObjectRetain();
      }
      *v19 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_endAccess();
      goto LABEL_27;
    }
LABEL_42:
    swift_bridgeObjectRelease();
    v8 = *(void **)(v2 - 216);
  }
  else
  {
    v8 = *(void **)(v2 - 216);
  }
  v62 = (void *)sub_1BB872F10();
  v63 = (void *)sub_1BB872970();
  objc_msgSend(v8, sel_setValue_forKey_, v62, v63);

}

uint64_t FormatCustomNodeRenderer.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FormatCustomNodeRenderer.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1BAB65904(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1BAB65930(a2, a3, a4);
}

id sub_1BAB65930(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  id result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB8736F0();
  objc_msgSend(a3, sel_setUserInteractionEnabled_, *(unsigned __int8 *)(a2 + 120));
  v9 = *(_QWORD *)(a2 + 128);
  if (!v9)
    return objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, 0);
  result = objc_msgSend(a3, sel_setAccessibilityIgnoresInvertColors_, *(_BYTE *)(v9 + 48) & 1);
  v11 = *(_QWORD *)(v9 + 56);
  if (v11)
  {
    v12 = *(_QWORD *)(v11 + 16);
    if (v12)
    {
      v13 = v11 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v14 = *(_QWORD *)(v6 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1BA900B30(v13, (uint64_t)v8);
        v16 = *((_QWORD *)v8 + 2);
        swift_retain();
        swift_bridgeObjectRetain();
        sub_1BA900B74((uint64_t)v8);
        sub_1BAB643DC((uint64_t)&v16);
        swift_bridgeObjectRelease();
        swift_release();
        v13 += v14;
        --v12;
      }
      while (v12);
      return (id)swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t dispatch thunk of FormatCustomNodeRendererType.render<A>(context:data:layoutAttributes:in:token:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(a9 + 8))();
}

uint64_t method lookup function for FormatCustomNodeRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BAB65AE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRadialGradientCircleRadius.init(from:)(a1, a2);
}

uint64_t sub_1BAB65AFC(_QWORD *a1)
{
  return FormatRadialGradientCircleRadius.encode(to:)(a1);
}

BOOL _s8NewsFeed32FormatRadialGradientCircleRadiusO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  _BOOL4 v4;

  v2 = *(double *)a1;
  v3 = *(double *)a2;
  if ((*(_BYTE *)(a1 + 32) & 1) == 0)
    return (*(_BYTE *)(a2 + 32) & 1) == 0 && v2 == v3;
  if ((*(_BYTE *)(a2 + 32) & 1) == 0)
    return 0;
  v4 = v2 == v3;
  if (*(double *)(a1 + 8) != *(double *)(a2 + 8))
    v4 = 0;
  if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
    v4 = 0;
  return *(double *)(a1 + 24) == *(double *)(a2 + 24) && v4;
}

unint64_t sub_1BAB65B8C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAB65BB0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BAB65BB0()
{
  unint64_t result;

  result = qword_1EF2B0B60;
  if (!qword_1EF2B0B60)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircleRadius, &type metadata for FormatRadialGradientCircleRadius);
    atomic_store(result, (unint64_t *)&qword_1EF2B0B60);
  }
  return result;
}

unint64_t sub_1BAB65BF4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAB65C28();
  a1[2] = sub_1BAB65C6C();
  result = sub_1BAB65CB0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BAB65C28()
{
  unint64_t result;

  result = qword_1ED3CDDE0;
  if (!qword_1ED3CDDE0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircleRadius, &type metadata for FormatRadialGradientCircleRadius);
    atomic_store(result, (unint64_t *)&qword_1ED3CDDE0);
  }
  return result;
}

unint64_t sub_1BAB65C6C()
{
  unint64_t result;

  result = qword_1ED3AC560;
  if (!qword_1ED3AC560)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircleRadius, &type metadata for FormatRadialGradientCircleRadius);
    atomic_store(result, (unint64_t *)&qword_1ED3AC560);
  }
  return result;
}

unint64_t sub_1BAB65CB0()
{
  unint64_t result;

  result = qword_1EF2B0B68;
  if (!qword_1EF2B0B68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradientCircleRadius, &type metadata for FormatRadialGradientCircleRadius);
    atomic_store(result, (unint64_t *)&qword_1EF2B0B68);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatRadialGradientCircleRadius()
{
  return &type metadata for FormatRadialGradientCircleRadius;
}

_QWORD *sub_1BAB65D04(uint64_t a1)
{
  int v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  void (*v21)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  void (*v34)(uint64_t *, _QWORD, uint64_t, uint64_t);
  uint64_t *v35;
  uint64_t *v36;
  _QWORD *v37;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v1 = *(unsigned __int8 *)(a1 + 32);
  if (v1 == 255)
  {
    v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
    sub_1BA8C88C8(0);
    v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
    v6 = (v5 + 32) & ~v5;
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
    v8 = (_QWORD *)(v7 + v6);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v8);
    v9 = type metadata accessor for FormatInspectionItem(0);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
    sub_1BAF89090(0x5220656C63726943, 0xED00007375696461, 0, 0, v7, &v40);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  else
  {
    v11 = *(_QWORD *)a1;
    v10 = *(_QWORD *)(a1 + 8);
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(a1 + 24);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    if ((v1 & 1) != 0)
    {
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      sub_1BA8C88C8(0);
      v39 = v12;
      v26 = *(_QWORD *)(v25 - 8);
      v27 = v11;
      v28 = *(_QWORD *)(v26 + 72);
      v29 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      v30 = 2 * v28;
      v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_1BB87FC80;
      v32 = (uint64_t *)(v31 + v29);
      sub_1BAAF7494(1701869908, 0xE400000000000000, 0x6F69746365726944, 0xE90000000000006ELL, v32);
      v33 = type metadata accessor for FormatInspectionItem(0);
      v34 = *(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56);
      v34(v32, 0, 1, v33);
      v35 = (uint64_t *)((char *)v32 + v28);
      sub_1BAAFBBF4(0x6F50207472617453, 0xEB00000000746E69, v27, v10, 0, v35);
      v34(v35, 0, 1, v33);
      v36 = (uint64_t *)((char *)v32 + v30);
      sub_1BAAFBBF4(0x6E696F5020646E45, 0xE900000000000074, v39, v13, 0, v36);
      v34(v36, 0, 1, v33);
      sub_1BAF89090(0x5220656C63726943, 0xED00007375696461, 0, 0, v31, &v40);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
      *(_QWORD *)(inited + 64) = &off_1E72D2F60;
      v22 = swift_allocObject();
      *(_QWORD *)(inited + 32) = v22;
      *(_QWORD *)(v22 + 48) = v42;
      v24 = v40;
      v23 = v41;
      goto LABEL_7;
    }
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    sub_1BA8C88C8(0);
    v15 = *(_QWORD *)(v14 - 8);
    v16 = *(_QWORD *)(v15 + 72);
    v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1BB87A390;
    v19 = (_QWORD *)(v18 + v17);
    sub_1BAAF7494(1701869908, 0xE400000000000000, 0x737569646152, 0xE600000000000000, v19);
    v20 = type metadata accessor for FormatInspectionItem(0);
    v21 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
    v21(v19, 0, 1, v20);
    sub_1BAAF3A18(0x737569646152, 0xE600000000000000, v11, 0, (_QWORD *)((char *)v19 + v16));
    v21((_QWORD *)((char *)v19 + v16), 0, 1, v20);
    sub_1BAF89090(0x5220656C63726943, 0xED00007375696461, 0, 0, v18, &v40);
    swift_setDeallocating();
    swift_arrayDestroy();
  }
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v22 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(v22 + 48) = v42;
  v24 = v40;
  v23 = v41;
LABEL_7:
  *(_OWORD *)(v22 + 16) = v24;
  *(_OWORD *)(v22 + 32) = v23;
  v37 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v37;
}

uint64_t sub_1BAB6629C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

_QWORD *sub_1BAB662D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  unsigned int (*v18)(const void *, uint64_t, uint64_t);
  void *__dst;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v5;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v7;
    v8 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v8;
    v9 = a2[10];
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    v10 = a2[13];
    v11 = *(int *)(a3 + 52);
    __dst = (void *)(a1 + v11);
    v12 = (char *)a2 + v11;
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v10;
    v13 = sub_1BB86EB84();
    v17 = *(_QWORD *)(v13 - 8);
    v18 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v17 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v18(v12, 1, v13))
    {
      sub_1BA6BF9E8(0);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v17 + 16))(__dst, v12, v13);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v17 + 56))(__dst, 0, 1, v13);
    }
  }
  return v3;
}

uint64_t sub_1BAB66454(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 52);
  v5 = sub_1BB86EB84();
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

uint64_t sub_1BAB66500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unsigned int (*v16)(const void *, uint64_t, uint64_t);
  void *__dst;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v9 = *(_QWORD *)(a2 + 104);
  v10 = *(int *)(a3 + 52);
  __dst = (void *)(a1 + v10);
  v11 = (const void *)(a2 + v10);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v9;
  v12 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v12 - 8);
  v16 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v15 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v16(v11, 1, v12))
  {
    sub_1BA6BF9E8(0);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v15 + 16))(__dst, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(__dst, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1BAB66658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 52);
  v7 = (void *)(a1 + v6);
  v8 = (void *)(a2 + v6);
  v9 = sub_1BB86EB84();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA6BF9E8(0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1BAB6683C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  void *v6;
  const void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v5 = *(int *)(a3 + 52);
  v6 = (void *)(a1 + v5);
  v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  v8 = sub_1BB86EB84();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    sub_1BA6BF9E8(0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t sub_1BAB66924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v11 = *(int *)(a3 + 52);
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1BB86EB84();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (!v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    sub_1BA6BF9E8(0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  return a1;
}

uint64_t sub_1BAB66AA8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB66AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BA6BF9E8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 52), a2, v8);
  }
}

uint64_t sub_1BAB66B30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BAB66B3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BA6BF9E8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 52), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DebugNewsroomLayoutData()
{
  uint64_t result;

  result = qword_1EF2B0BC8;
  if (!qword_1EF2B0BC8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BAB66BEC()
{
  unint64_t v0;

  sub_1BA6BF9E8(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BAB66C90(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BAB66CB8 + 4 * byte_1BB8A4510[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1BAB66CB8()
{
  return 1701667182;
}

uint64_t sub_1BAB66CC8()
{
  return 1701605234;
}

uint64_t sub_1BAB66CD8()
{
  return 0x4A6567616B636170;
}

uint64_t sub_1BAB66D20()
{
  return 0x6465766968637261;
}

unint64_t sub_1BAB66D38()
{
  return 0xD000000000000011;
}

unint64_t sub_1BAB66D54()
{
  return 0xD000000000000012;
}

uint64_t sub_1BAB66D74()
{
  return 0x655674736574616CLL;
}

uint64_t sub_1BAB66D98()
{
  unsigned __int8 *v0;

  return sub_1BAB66C90(*v0);
}

uint64_t sub_1BAB66DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB67E54(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB66DC4()
{
  sub_1BAB67654();
  return sub_1BB874710();
}

uint64_t sub_1BAB66DEC()
{
  sub_1BAB67654();
  return sub_1BB87471C();
}

uint64_t sub_1BAB66E14(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  char v12;

  v3 = v1;
  sub_1BAB67720(0, &qword_1EF2B0C40, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB67654();
  sub_1BB8746C8();
  LOBYTE(v11) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v11) = 1;
    sub_1BB87411C();
    LOBYTE(v11) = *(_BYTE *)(v3 + 32);
    v12 = 2;
    sub_1BAB6777C();
    sub_1BB87414C();
    LOBYTE(v11) = 3;
    sub_1BB87411C();
    LOBYTE(v11) = 4;
    sub_1BB87411C();
    LOBYTE(v11) = 5;
    sub_1BB87411C();
    LOBYTE(v11) = 6;
    sub_1BB874128();
    v11 = *(_QWORD *)(v3 + 96);
    v12 = 7;
    sub_1BAACF73C();
    sub_1BAACF964(&qword_1EF2AFB70, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEA0B8]);
    sub_1BB87414C();
    v11 = *(_QWORD *)(v3 + 104);
    v12 = 8;
    sub_1BAACF79C();
    sub_1BAACF9C0();
    sub_1BB87414C();
    type metadata accessor for DebugNewsroomLayoutData();
    LOBYTE(v11) = 9;
    sub_1BB86EB84();
    sub_1BA4A2870(&qword_1ED39C370, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DD8]);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BAB67120@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(_QWORD);
  uint64_t v30;
  _QWORD v31[2];
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;

  v33 = a2;
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v3);
  v32 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BAB67720(0, &qword_1EF2B0C28, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v35 = v5;
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v31 - v7;
  v9 = type metadata accessor for DebugNewsroomLayoutData();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v11 + 2) = 0;
  *((_QWORD *)v11 + 3) = 0;
  v11[32] = 5;
  *(_OWORD *)(v11 + 40) = 0u;
  *(_OWORD *)(v11 + 56) = 0u;
  *(_OWORD *)(v11 + 72) = 0u;
  v11[88] = 2;
  *((_QWORD *)v11 + 12) = 0;
  *((_QWORD *)v11 + 13) = 0;
  v13 = (uint64_t)&v11[*(int *)(v12 + 52)];
  v14 = sub_1BB86EB84();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v37 = v13;
  v15(v13, 1, 1, v14);
  v16 = a1[3];
  v36 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v16);
  sub_1BAB67654();
  v34 = v8;
  v17 = v38;
  sub_1BB87468C();
  if (v17)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    v20 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = (uint64_t (*)(_QWORD))sub_1BA6BF9E8;
    v30 = v20;
  }
  else
  {
    v18 = (uint64_t)v32;
    v19 = v33;
    LOBYTE(v39) = 0;
    *(_QWORD *)v11 = sub_1BB874098();
    *((_QWORD *)v11 + 1) = v22;
    LOBYTE(v39) = 1;
    v23 = sub_1BB87402C();
    v38 = v6;
    *((_QWORD *)v11 + 2) = v23;
    *((_QWORD *)v11 + 3) = v24;
    v40 = 2;
    sub_1BAB67698();
    sub_1BB874068();
    v11[32] = v39;
    LOBYTE(v39) = 3;
    *((_QWORD *)v11 + 5) = sub_1BB87402C();
    *((_QWORD *)v11 + 6) = v25;
    LOBYTE(v39) = 4;
    *((_QWORD *)v11 + 7) = sub_1BB87402C();
    *((_QWORD *)v11 + 8) = v26;
    LOBYTE(v39) = 5;
    *((_QWORD *)v11 + 9) = sub_1BB87402C();
    *((_QWORD *)v11 + 10) = v27;
    LOBYTE(v39) = 6;
    v11[88] = sub_1BB874038();
    sub_1BAACF73C();
    v31[1] = v28;
    v40 = 7;
    sub_1BAACF964((unint64_t *)&qword_1EF2AFB50, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEA0D8]);
    sub_1BB874068();
    *((_QWORD *)v11 + 12) = v39;
    sub_1BAACF79C();
    v40 = 8;
    sub_1BAACF800();
    sub_1BB874068();
    *((_QWORD *)v11 + 13) = v39;
    LOBYTE(v39) = 9;
    sub_1BA4A2870(&qword_1ED3B0918, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DF0]);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v34, v35);
    sub_1BAACF880(v18, v37);
    sub_1BAB676DC((uint64_t)v11, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v36);
    v29 = (uint64_t (*)(_QWORD))type metadata accessor for DebugNewsroomLayoutData;
    v30 = (uint64_t)v11;
  }
  return sub_1BA4A2E80(v30, v29);
}

unint64_t sub_1BAB675B4()
{
  return 0xD000000000000017;
}

uint64_t sub_1BAB675D0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BAB67120(a1, a2);
}

uint64_t sub_1BAB675E4(_QWORD *a1)
{
  return sub_1BAB66E14(a1);
}

uint64_t sub_1BAB675F8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BA4A2870(&qword_1EF2B0C20, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, (uint64_t)&unk_1BB8A4608);
  result = sub_1BA4A2870(&qword_1EF2ADAF0, (uint64_t (*)(uint64_t))type metadata accessor for DebugNewsroomLayoutData, (uint64_t)&unk_1BB8A45E0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BAB67654()
{
  unint64_t result;

  result = qword_1EF2B0C30;
  if (!qword_1EF2B0C30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4820, &type metadata for DebugNewsroomLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C30);
  }
  return result;
}

unint64_t sub_1BAB67698()
{
  unint64_t result;

  result = qword_1EF2B0C38;
  if (!qword_1EF2B0C38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A47F8, &type metadata for DebugNewsroomLayoutRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C38);
  }
  return result;
}

uint64_t sub_1BAB676DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DebugNewsroomLayoutData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BAB67720(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAB67654();
    v7 = a3(a1, &type metadata for DebugNewsroomLayoutData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAB6777C()
{
  unint64_t result;

  result = qword_1EF2B0C48;
  if (!qword_1EF2B0C48)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A47D0, &type metadata for DebugNewsroomLayoutRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C48);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for DebugNewsroomLayoutData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_1BAB6780C + 4 * byte_1BB8A451F[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_1BAB67840 + 4 * byte_1BB8A451A[v4]))();
}

uint64_t sub_1BAB67840(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB67848(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB67850);
  return result;
}

uint64_t sub_1BAB6785C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB67864);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_1BAB67868(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB67870(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugNewsroomLayoutData.CodingKeys()
{
  return &type metadata for DebugNewsroomLayoutData.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for DebugNewsroomLayoutRole(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BAB678D8 + 4 * byte_1BB8A4529[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BAB6790C + 4 * byte_1BB8A4524[v4]))();
}

uint64_t sub_1BAB6790C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB67914(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BAB6791CLL);
  return result;
}

uint64_t sub_1BAB67928(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BAB67930);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BAB67934(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BAB6793C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugNewsroomLayoutRole()
{
  return &type metadata for DebugNewsroomLayoutRole;
}

void sub_1BAB67958(char *a1)
{
  sub_1BB7F6EE0(*a1);
}

void sub_1BAB67964()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAB679AC()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

void sub_1BAB67A28()
{
  __asm { BR              X10 }
}

uint64_t sub_1BAB67A60()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BAB67AC8()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1BB8745CC();
  __asm { BR              X9 }
}

uint64_t sub_1BAB67B0C()
{
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BAB67B88@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BAB67E0C();
  *a1 = result;
  return result;
}

uint64_t sub_1BAB67BB4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BAB67BE0 + 4 * byte_1BB8A453D[*v0]))();
}

void sub_1BAB67BE0(_QWORD *a1@<X8>)
{
  *a1 = 1497648962;
  a1[1] = 0xE400000000000000;
}

void sub_1BAB67BF4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0x5245544F4F46;
  a1[1] = v1;
}

void sub_1BAB67C08(_QWORD *a1@<X8>)
{
  *a1 = 0x4C4C4157594150;
  a1[1] = 0xE700000000000000;
}

void sub_1BAB67C24(_QWORD *a1@<X8>)
{
  *a1 = 0x554F52474B434142;
  a1[1] = 0xEA0000000000444ELL;
}

unint64_t sub_1BAB67C48()
{
  unint64_t result;

  result = qword_1EF2B0C50;
  if (!qword_1EF2B0C50)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A46F0, &type metadata for DebugNewsroomLayoutRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C50);
  }
  return result;
}

unint64_t sub_1BAB67C90()
{
  unint64_t result;

  result = qword_1EF2B0C58;
  if (!qword_1EF2B0C58)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A47A8, &type metadata for DebugNewsroomLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C58);
  }
  return result;
}

uint64_t sub_1BAB67CD4()
{
  sub_1BAB68284();
  return sub_1BB872D60();
}

uint64_t sub_1BAB67D30()
{
  sub_1BAB68284();
  return sub_1BB872D0C();
}

unint64_t sub_1BAB67D80()
{
  unint64_t result;

  result = qword_1EF2B0C60;
  if (!qword_1EF2B0C60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4718, &type metadata for DebugNewsroomLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C60);
  }
  return result;
}

unint64_t sub_1BAB67DC8()
{
  unint64_t result;

  result = qword_1EF2B0C68;
  if (!qword_1EF2B0C68)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4740, &type metadata for DebugNewsroomLayoutData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C68);
  }
  return result;
}

uint64_t sub_1BAB67E0C()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BAB67E54(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1701605234 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xEE006C72556E6F73 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xEB000000006E6F73 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x4A6567616B636170 && a2 == 0xED000064496E6F73 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6465766968637261 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB96B470 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001BB96B490 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x655674736574616CLL && a2 == 0xED00006E6F697372)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 9;
    else
      return 10;
  }
}

unint64_t sub_1BAB68284()
{
  unint64_t result;

  result = qword_1EF2B0C70;
  if (!qword_1EF2B0C70)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A4678, &type metadata for DebugNewsroomLayoutRole);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C70);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceTag.tagIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SportsEmbedConfigResourceTag.config.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[1];
  v3 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  v7 = v1[5];
  v6 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v7;
  a1[5] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BAA3501C(v4, v5);
}

uint64_t SportsEmbedConfigResourceTag.childrenConfig.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1[7];
  v3 = v1[8];
  v4 = v1[9];
  v5 = v1[10];
  v6 = v1[11];
  v7 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_1BAA3504C(v2, v3, v4, v5);
}

uint64_t sub_1BAB68348()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6769666E6F63;
  if (*v0 != 1)
    v1 = 0x6E6572646C696863;
  if (*v0)
    return v1;
  else
    return 0x736449676174;
}

uint64_t sub_1BAB683A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BAB69288(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BAB683CC()
{
  sub_1BAB6863C();
  return sub_1BB874710();
}

uint64_t sub_1BAB683F4()
{
  sub_1BAB6863C();
  return sub_1BB87471C();
}

uint64_t SportsEmbedConfigResourceTag.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;

  sub_1BAB68AB0(0, &qword_1EF2B0C78, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v9 = *v1;
  v29 = *(_OWORD *)(v1 + 1);
  v10 = v1[3];
  v27 = v1[4];
  v28 = v10;
  v11 = v1[5];
  v25 = v1[6];
  v26 = v11;
  v12 = v1[7];
  v23 = v1[8];
  v24 = v12;
  v13 = v1[9];
  v21 = v1[10];
  v22 = v13;
  v14 = v1[11];
  v19 = v1[12];
  v20 = v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB6863C();
  sub_1BB8746C8();
  *(_QWORD *)&v30 = v9;
  v35 = 0;
  sub_1BA6BCC84();
  sub_1BA64D3D4((unint64_t *)&qword_1ED39BFB0, MEMORY[0x1E0DEA970], MEMORY[0x1E0DEB3B8]);
  sub_1BB8741AC();
  if (!v2)
  {
    v16 = v22;
    v15 = v23;
    v30 = v29;
    v31 = v28;
    v32 = v27;
    v17 = v24;
    v33 = v26;
    v34 = v25;
    v35 = 1;
    sub_1BAB68680();
    sub_1BB8741AC();
    *(_QWORD *)&v30 = v17;
    *((_QWORD *)&v30 + 1) = v15;
    v31 = v16;
    v32 = v21;
    v33 = v20;
    v34 = v19;
    v35 = 2;
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1BAB6863C()
{
  unint64_t result;

  result = qword_1ED3A8480;
  if (!qword_1ED3A8480)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8A49C0, &type metadata for SportsEmbedConfigResourceTag.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A8480);
  }
  return result;
}

unint64_t sub_1BAB68680()
{
  unint64_t result;

  result = qword_1EF2B0C80;
  if (!qword_1EF2B0C80)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceConfig, &type metadata for SportsEmbedConfigResourceConfig);
    atomic_store(result, (unint64_t *)&qword_1EF2B0C80);
  }
  return result;
}

uint64_t SportsEmbedConfigResourceTag.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;

  sub_1BAB68AB0(0, &qword_1ED3A1718, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BAB6863C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  sub_1BA6BCC84();
  v53 = 0;
  sub_1BA64D3D4((unint64_t *)&qword_1ED3B96D0, MEMORY[0x1E0DEA9A0], MEMORY[0x1E0DEB3D8]);
  sub_1BB8740D4();
  v11 = v47;
  v53 = 1;
  sub_1BAB68B0C();
  swift_bridgeObjectRetain();
  sub_1BB8740D4();
  v12 = v48;
  v13 = v50;
  v44 = v11;
  v45 = v49;
  v42 = 0;
  v43 = v47;
  v14 = v51;
  v15 = v52;
  v53 = 2;
  swift_bridgeObjectRetain();
  v39 = v12;
  swift_bridgeObjectRetain();
  v40 = v15;
  v41 = v13;
  v46 = v14;
  sub_1BAA3501C(v45, v13);
  v16 = v42;
  sub_1BB874068();
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 = v45;
    v18 = v41;
    sub_1BA6CABAC(v45, v41);
    swift_bridgeObjectRelease();
    v19 = v42;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    result = swift_bridgeObjectRelease();
    if (!v19)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return sub_1BA6CABAC(v17, v18);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    v20 = v48;
    v42 = v47;
    v21 = v50;
    v35 = v50;
    v36 = v48;
    v37 = v51;
    v38 = v49;
    v34 = v52;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v45;
    v23 = v40;
    sub_1BAA3501C(v45, v41);
    sub_1BAA3504C(v42, v20, v38, v21);
    swift_bridgeObjectRelease();
    v24 = v43;
    swift_bridgeObjectRelease();
    v25 = v41;
    v26 = v46;
    sub_1BA6CABAC(v22, v41);
    v27 = v44;
    swift_bridgeObjectRelease();
    *a2 = v27;
    a2[1] = v24;
    a2[2] = v39;
    a2[3] = v22;
    a2[4] = v25;
    a2[5] = v26;
    v28 = v42;
    a2[6] = v23;
    a2[7] = v28;
    v30 = v35;
    v29 = v36;
    v31 = v38;
    a2[8] = v36;
    a2[9] = v31;
    v32 = v37;
    a2[10] = v30;
    a2[11] = v32;
    a2[12] = v34;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BA6CABAC(v22, v25);
    return sub_1BAA350AC(v42, v29, v38, v30);
  }
  return result;
}

void sub_1BAB68AB0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BAB6863C();
    v7 = a3(a1, &type metadata for SportsEmbedConfigResourceTag.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BAB68B0C()
{
  unint64_t result;

  result = qword_1ED3A1100;
  if (!qword_1ED3A1100)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsEmbedConfigResourceConfig, &type metadata for SportsEmbedConfigResourceConfig);
    atomic_store(result, (unint64_t *)&qword_1ED3A1100);
  }
  return result;
}

uint64_t sub_1BAB68B50@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return SportsEmbedConfigResourceTag.init(from:)(a1, a2);
}

uint64_t sub_1BAB68B64(_QWORD *a1)
{
  return SportsEmbedConfigResourceTag.encode(to:)(a1);
}

uint64_t destroy for SportsEmbedConfigResourceTag(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[4])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[7];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = a1[10];
    if (result)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_QWORD *initializeWithCopy for SportsEmbedConfigResourceTag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5)
  {
    a1[3] = a2[3];
    a1[4] = v5;
    v6 = a2[6];
    a1[5] = a2[5];
    a1[6] = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 5) = v7;
  }
  v8 = a2[7];
  if (v8)
  {
    v9 = a2[8];
    a1[7] = v8;
    a1[8] = v9;
    v10 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10)
    {
      a1[9] = a2[9];
      a1[10] = v10;
      v11 = a2[11];
      v12 = a2[12];
      a1[11] = v11;
      a1[12] = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v14 = *(_OWORD *)(a2 + 11);
      *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
      *(_OWORD *)(a1 + 11) = v14;
    }
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 9);
    *(_OWORD *)(a1 + 7) = *(_OWORD *)(a2 + 7);
    *(_OWORD *)(a1 + 9) = v13;
    *(_OWORD *)(a1 + 11) = *(_OWORD *)(a2 + 11);
  }
  return a1;
}

