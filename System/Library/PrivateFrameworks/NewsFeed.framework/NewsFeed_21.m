uint64_t FormatAnimationNodeStyle.animations.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 72) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAnimationNodeStyle.animations.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

void FormatAnimationNodeStyle.runMode.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 80);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(v1 + 84);
  *(_DWORD *)a1 = v2;
}

uint64_t FormatAnimationNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatAnimationNodeStyle.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatAnimationNodeStyle.__allocating_init(identifier:class:anchorPoint:animations:runMode:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, int *a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  int v19;

  v14 = swift_allocObject();
  v16 = *a5;
  v15 = a5[1];
  LOBYTE(a5) = *((_BYTE *)a5 + 16);
  v19 = *a7;
  v17 = *((_BYTE *)a7 + 4);
  *(_QWORD *)(v14 + 72) = 0;
  swift_beginAccess();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 48) = v16;
  *(_QWORD *)(v14 + 56) = v15;
  *(_BYTE *)(v14 + 64) = (_BYTE)a5;
  swift_beginAccess();
  *(_QWORD *)(v14 + 72) = a6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v14 + 84) = v17;
  *(_DWORD *)(v14 + 80) = v19;
  swift_beginAccess();
  *(_QWORD *)(v14 + 88) = a8;
  return v14;
}

uint64_t FormatAnimationNodeStyle.init(identifier:class:anchorPoint:animations:runMode:selectors:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, int *a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  int v18;

  v13 = *a5;
  v14 = a5[1];
  v15 = *((_BYTE *)a5 + 16);
  v18 = *a7;
  v16 = *((_BYTE *)a7 + 4);
  *(_QWORD *)(v8 + 72) = 0;
  swift_beginAccess();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 48) = v13;
  *(_QWORD *)(v8 + 56) = v14;
  *(_BYTE *)(v8 + 64) = v15;
  swift_beginAccess();
  *(_QWORD *)(v8 + 72) = a6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v8 + 84) = v16;
  *(_DWORD *)(v8 + 80) = v18;
  swift_beginAccess();
  *(_QWORD *)(v8 + 88) = a8;
  return v8;
}

uint64_t FormatAnimationNodeStyle.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1BB1DDDF0(_QWORD *a1)
{
  return FormatAnimationNodeStyle.encode(to:)(a1);
}

uint64_t sub_1BB1DDE10(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed24FormatAnimationNodeStyleC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t FormatAnimationNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

__n128 FormatAnimationNodeStyle.Selector.anchorPoint.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[2].n128_u8[0];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t FormatAnimationNodeStyle.Selector.animations.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatAnimationNodeStyle.Selector.runMode.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;

  v2 = *(_DWORD *)(v1 + 48);
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(v1 + 52);
  *(_DWORD *)a1 = v2;
}

uint64_t sub_1BB1DDE5C(_QWORD *a1)
{
  return FormatAnimationNodeStyle.Selector.encode(to:)(a1);
}

uint64_t sub_1BB1DDE74@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 56);
  return result;
}

uint64_t _s8NewsFeed24FormatAnimationNodeStyleC8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2;
  double v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  double v8;
  double v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *(double *)(a1 + 16);
  v3 = *(double *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 52);
  v7 = *(unsigned int *)(a1 + 48);
  v8 = *(double *)(a2 + 16);
  v9 = *(double *)(a2 + 24);
  v10 = *(unsigned __int8 *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v12 = *(unsigned __int8 *)(a2 + 52);
  v13 = *(unsigned int *)(a2 + 48);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v14 = sub_1BB874398(), result = 0, (v14 & 1) != 0))
  {
    if ((v4 & 1) != 0)
    {
      if (!v10)
        return 0;
LABEL_13:
      if (v5)
      {
        if (!v11)
          return 0;
        swift_bridgeObjectRetain();
        v17 = swift_bridgeObjectRetain();
        v18 = sub_1BA8835AC(v17, v11);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v18 & 1) == 0)
          return 0;
      }
      else if (v11)
      {
        return 0;
      }
      v19 = v7 | (v6 << 32);
      v20 = v13 | (v12 << 32);
      if (BYTE4(v19) == 255)
        return BYTE4(v20) == 255;
      if (BYTE4(v20) == 255)
        return 0;
      if (BYTE4(v19))
      {
        if (BYTE4(v19) != 1)
        {
          if ((_DWORD)v7)
          {
            if ((_DWORD)v7 == 1)
            {
              if (BYTE4(v20) != 2 || (_DWORD)v13 != 1)
                return 0;
            }
            else if (BYTE4(v20) != 2 || (_DWORD)v13 != 2)
            {
              return 0;
            }
          }
          else if (BYTE4(v20) != 2 || (_DWORD)v13)
          {
            return 0;
          }
          return 1;
        }
        if (BYTE4(v20) != 1)
          return 0;
      }
      else if (BYTE4(v20))
      {
        return 0;
      }
      return *(float *)&v7 == *(float *)&v13;
    }
    result = 0;
    if ((v10 & 1) == 0 && v2 == v8 && v3 == v9)
      goto LABEL_13;
  }
  return result;
}

uint64_t sub_1BB1DE02C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB1DE110(&qword_1EF2BD650, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB1DE060(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BB1DE110(&qword_1ED3BF0C0, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  result = sub_1BB1DE110(&qword_1ED3A0288, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB1DE0AC(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB1DE110(&qword_1ED3BF0C0, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  a1[2] = sub_1BB1DE110(&qword_1ED3A0288, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  result = sub_1BB1DE110(&qword_1EF2BD658, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeStyle);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1DE110(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatAnimationNodeStyle();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB1DE14C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1DE170();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1DE170()
{
  unint64_t result;

  result = qword_1EF2BD660;
  if (!qword_1EF2BD660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeStyle.Selector, &type metadata for FormatAnimationNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2BD660);
  }
  return result;
}

unint64_t sub_1BB1DE1B4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA8281EC();
  a1[2] = sub_1BA828230();
  result = sub_1BB1DE1E8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1DE1E8()
{
  unint64_t result;

  result = qword_1EF2BD668;
  if (!qword_1EF2BD668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAnimationNodeStyle.Selector, &type metadata for FormatAnimationNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2BD668);
  }
  return result;
}

uint64_t sub_1BB1DE22C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1DE278@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 72);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1DE2C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatAnimationNodeStyle()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatAnimationNodeStyle.__allocating_init(identifier:class:anchorPoint:animations:runMode:selectors:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 128))();
}

uint64_t assignWithCopy for FormatAnimationNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  int v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  *(_DWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t assignWithTake for FormatAnimationNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 52) = *(_BYTE *)(a2 + 52);
  return a1;
}

ValueMetadata *type metadata accessor for FormatAnimationNodeStyle.Selector()
{
  return &type metadata for FormatAnimationNodeStyle.Selector;
}

uint64_t sub_1BB1DE41C(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  unint64_t *v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD v18[5];
  uint64_t v19;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E7C(0, v2, 0);
    v3 = v19;
    v5 = (unint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      v8 = v7 >> 62;
      if (v7 >> 62)
      {
        if ((_DWORD)v8 == 1)
        {
          swift_retain();
          v9 = swift_retain();
          v10 = sub_1BB125164(v9);
        }
        else
        {
          v12 = *(_QWORD *)(v6 + 16);
          swift_retain();
          swift_retain();
          v10 = sub_1BAA2BAA4(a2, v12);
        }
      }
      else
      {
        swift_retain();
        v11 = swift_retain();
        v10 = sub_1BB23F4E8(v11);
      }
      v13 = v10;
      swift_release();
      v18[3] = &type metadata for FormatInspection;
      v18[4] = &off_1E7335C38;
      v18[0] = v13;
      swift_release();
      v19 = v3;
      v15 = *(_QWORD *)(v3 + 16);
      v14 = *(_QWORD *)(v3 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1BAC79E7C(v14 > 1, v15 + 1, 1);
        v3 = v19;
      }
      *(_QWORD *)(v3 + 16) = v15 + 1;
      sub_1BAFB3794((uint64_t)v18, v3 + 40 * v15 + 32);
      --v2;
    }
    while (v2);
  }
  return v3;
}

_QWORD *sub_1BB1DE598(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t inited;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t v18;
  uint64_t (**v19)();
  uint64_t v20;
  char *v21;
  void (*v22)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v23;
  __int128 v24;
  unint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[40];
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  _OWORD v48[2];
  uint64_t v49;

  v4 = 0xEF7373616C43206ELL;
  v5 = 0x6F6974616D696E41;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v7 = a1[1];
  v43 = (uint64_t)a1;
  if (v7)
  {
    *(_QWORD *)v44 = *a1;
    *(_QWORD *)&v44[8] = v7;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v8);
    sub_1BB872AFC(v9);
    v4 = *(_QWORD *)&v44[8];
    v5 = *(_QWORD *)v44;
  }
  v40 = v4;
  v41 = v5;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v42 = *(_QWORD *)(v11 + 72);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  v14 = (_QWORD *)(v13 + v12);
  if (a2)
  {
    v15 = *(_QWORD *)(a2 + 40);
    v39 = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    *(_QWORD *)v44 = sub_1BB1DD898();
    memset(&v44[8], 0, 32);
    v45 = 0;
    v46 = xmmword_1BB8F7510;
    v16 = swift_allocObject();
    sub_1BA9F1094((uint64_t)v44, v16 + 16);
    v17 = sub_1BA9F10D0;
  }
  else
  {
    v16 = 0;
    v39 = 0;
    v15 = 0xE000000000000000;
    v17 = sub_1BB739F50;
  }
  v18 = type metadata accessor for FormatInspectionItem(0);
  v19 = (uint64_t (**)())((char *)v14 + *(int *)(v18 + 24));
  *v19 = v17;
  v19[1] = (uint64_t (*)())v16;
  v20 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  *v14 = v39;
  v14[1] = v15;
  v14[2] = 0;
  v14[3] = 0;
  v21 = (char *)v14 + *(int *)(v18 + 28);
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v21[16] = -1;
  v22 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56);
  v22(v14, 0, 1, v18);
  sub_1BAF89090(v41, v40, 0, 0, v13, v48);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v23 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v23;
  *(_QWORD *)(v23 + 48) = v49;
  v24 = v48[1];
  *(_OWORD *)(v23 + 16) = v48[0];
  *(_OWORD *)(v23 + 32) = v24;
  if (a2)
    v25 = *(unsigned int *)(a2 + 80) | ((unint64_t)*(unsigned __int8 *)(a2 + 84) << 32);
  else
    v25 = 0xFF00000000;
  *(_DWORD *)v44 = v25;
  v44[4] = BYTE4(v25);
  v26 = sub_1BB3BD624((unsigned int *)v44);
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 104) = &off_1E7335C38;
  *(_QWORD *)(inited + 72) = v26;
  v27 = swift_allocObject();
  v28 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_1BB87A390;
  v29 = v27 + v12;
  if (a2)
  {
    if ((*(_BYTE *)(a2 + 64) & 1) != 0)
      v30 = 0;
    else
      v30 = *(_QWORD *)(a2 + 48);
    sub_1BAAF3A18(88, 0xE100000000000000, v30, *(_BYTE *)(a2 + 64), (_QWORD *)(v27 + v12));
    v31 = 1;
    v22((_QWORD *)v29, 0, 1, v18);
    if ((*(_BYTE *)(a2 + 64) & 1) == 0)
    {
      v31 = 0;
      v32 = *(_QWORD *)(a2 + 56);
      goto LABEL_17;
    }
  }
  else
  {
    v31 = 1;
    sub_1BAAF3A18(88, 0xE100000000000000, 0, 1, (_QWORD *)(v27 + v12));
    v22((_QWORD *)v29, 0, 1, v18);
  }
  v32 = 0;
LABEL_17:
  sub_1BAAF3A18(89, 0xE100000000000000, v32, v31, (_QWORD *)(v29 + v42));
  v22((_QWORD *)(v29 + v42), 0, 1, v18);
  sub_1BAF89090(0x5020726F68636E41, 0xEC000000746E696FLL, 0, 0, v28, v44);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v33 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v33;
  *(_QWORD *)(v33 + 48) = *(_QWORD *)&v44[32];
  v34 = *(_OWORD *)&v44[16];
  *(_OWORD *)(v33 + 16) = *(_OWORD *)v44;
  *(_OWORD *)(v33 + 32) = v34;
  if (a2 && (swift_beginAccess(), (v35 = *(_QWORD *)(a2 + 72)) != 0))
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA8DACF0(v43);
  v36 = sub_1BB1DE41C(v35, v43);
  sub_1BA8DAD20(v43);
  swift_bridgeObjectRelease();
  v47 = inited;
  sub_1BB384774(v36);
  v37 = sub_1BB6DF010(v47);
  swift_bridgeObjectRelease();
  return v37;
}

uint64_t sub_1BB1DEAD4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1DEB08()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

id sub_1BB1DEB38()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v0, sel_setUnitsStyle_, 0);
  objc_msgSend(v0, sel_setZeroFormattingBehavior_, 0x10000);
  result = objc_msgSend(v0, sel_setAllowedUnits_, 192);
  qword_1ED39D208 = (uint64_t)v0;
  return result;
}

uint64_t static AudioCountdownFormatter.stringFromTime(interval:)(double a1)
{
  uint64_t v2;
  uint64_t result;
  void *v4;

  if (a1 >= 3600.0)
    v2 = 224;
  else
    v2 = 192;
  if (qword_1ED39E748 != -1)
    swift_once();
  objc_msgSend((id)qword_1ED39D208, sel_setAllowedUnits_, v2);
  if (qword_1ED39E748 != -1)
    swift_once();
  result = (uint64_t)objc_msgSend((id)qword_1ED39D208, sel_stringFromTimeInterval_, a1);
  if (result)
  {
    v4 = (void *)result;
    sub_1BB8729A0();

    sub_1BB872AFC((_QWORD *)0x2D);
    swift_bridgeObjectRelease();
    return 45;
  }
  return result;
}

uint64_t AudioCountdownFormatter.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t AudioCountdownFormatter.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AudioCountdownFormatter()
{
  return objc_opt_self();
}

uint64_t method lookup function for AudioCountdownFormatter()
{
  return swift_lookUpClassMethod();
}

char *sub_1BB1DED08(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  uint64_t v10;
  id v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  objc_super v18;

  ObjectType = (objc_class *)swift_getObjectType();
  v10 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_left;
  v11 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v12 = v4;
  *(_QWORD *)&v4[v10] = objc_msgSend(v11, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v13 = OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_right;
  *(_QWORD *)&v12[v13] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v18.receiver = v12;
  v18.super_class = ObjectType;
  v14 = (char *)objc_msgSendSuper2(&v18, sel_initWithFrame_, a1, a2, a3, a4);
  v15 = *(_QWORD *)&v14[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_right];
  v16 = v14;
  objc_msgSend(v16, sel_addSubview_, v15);
  objc_msgSend(v16, sel_addSubview_, *(_QWORD *)&v16[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_left]);

  return v16;
}

void sub_1BB1DEF38()
{
  char *v0;
  void *v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  double MaxX;
  id v10;
  id v11;
  id v12;
  objc_super v13;
  CGRect v14;
  CGRect v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  v1 = v0;
  v13.receiver = v0;
  v13.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v13, sel_layoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_left];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v2, sel_setFrame_);
  v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_right];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v3, sel_setFrame_);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v4, sel_moveToPoint_, 0.0, 0.0);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v4, sel_addLineToPoint_, CGRectGetMaxX(v14), 0.0);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v4, sel_addLineToPoint_, 0.0, CGRectGetMaxY(v15));
  objc_msgSend(v4, sel_addLineToPoint_, 0.0, 0.0);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v6 = objc_msgSend(v4, sel_CGPath);
  objc_msgSend(v5, sel_setPath_, v6);

  v7 = objc_msgSend(v2, sel_layer);
  objc_msgSend(v7, sel_setMask_, v5);

  v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3508]), sel_init);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v8, sel_moveToPoint_, 0.0, CGRectGetMaxY(v16));
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v8, sel_addLineToPoint_, CGRectGetMaxX(v17), 0.0);
  objc_msgSend(v1, sel_bounds);
  MaxX = CGRectGetMaxX(v18);
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v8, sel_addLineToPoint_, MaxX, CGRectGetMaxY(v19));
  objc_msgSend(v1, sel_bounds);
  objc_msgSend(v8, sel_addLineToPoint_, 0.0, CGRectGetMaxY(v20));
  v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD2840]), sel_init);
  v11 = objc_msgSend(v8, sel_CGPath);
  objc_msgSend(v10, sel_setPath_, v11);

  v12 = objc_msgSend(v3, sel_layer);
  objc_msgSend(v12, sel_setMask_, v10);

}

uint64_t type metadata accessor for DebugFormatInspectorSplitView()
{
  return objc_opt_self();
}

uint64_t sub_1BB1DF2C8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatSnapshot()
{
  return objc_opt_self();
}

NewsFeed::PuzzleKind_optional FCPuzzleTypeProviding.puzzleKind.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;

  v1 = objc_msgSend(v0, sel_kind);
  v2 = sub_1BB8729A0();
  v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  return PuzzleKind.init(rawValue:)(v5);
}

NewsFeed::PuzzleKind_optional __swiftcall PuzzleKind.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  BOOL v3;
  void *object;
  uint64_t countAndFlagsBits;
  NewsFeed::PuzzleKind_optional result;
  char v7;
  char v8;

  v2 = v1;
  v3 = rawValue._countAndFlagsBits == 0x524F5753534F5243 && rawValue._object == (void *)0xEA00000000005344;
  if (v3 || (object = rawValue._object, countAndFlagsBits = rawValue._countAndFlagsBits, (sub_1BB874398() & 1) != 0))
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else if (countAndFlagsBits == 0x4F52435F494E494DLL && object == (void *)0xEF5344524F575353
         || (sub_1BB874398() & 1) != 0)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 1;
  }
  else if (countAndFlagsBits == 0x4952425F44524F57 && object == (void *)0xEB00000000534B43)
  {
    result.value = swift_bridgeObjectRelease();
    v7 = 2;
  }
  else
  {
    v8 = sub_1BB874398();
    result.value = swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      v7 = 2;
    else
      v7 = 3;
  }
  *v2 = v7;
  return result;
}

BOOL PuzzleKind.hasFullArchive.getter()
{
  unsigned __int8 *v0;

  return *v0 < 2u;
}

void *static PuzzleKind.allCases.getter()
{
  return &unk_1E72708F8;
}

uint64_t PuzzleKind.rawValue.getter()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x736F7243696E696DLL;
  if (*v0 != 1)
    v1 = 0x656C697472617571;
  if (*v0)
    return v1;
  else
    return 0x726F7773736F7263;
}

uint64_t sub_1BB1DF59C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1BB803BF4(*a1, *a2);
}

uint64_t sub_1BB1DF5A8()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1DF658()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1DF6E4()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

NewsFeed::PuzzleKind_optional sub_1BB1DF790(Swift::String *a1)
{
  return PuzzleKind.init(rawValue:)(*a1);
}

void sub_1BB1DF79C(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  int v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = 0xE900000000000064;
  v3 = *v1;
  v4 = 0xED000064726F7773;
  v5 = 0x736F7243696E696DLL;
  if (v3 != 1)
  {
    v5 = 0x656C697472617571;
    v4 = 0xE900000000000073;
  }
  v6 = v3 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x726F7773736F7263;
  if (!v6)
    v2 = v4;
  *a1 = v7;
  a1[1] = v2;
}

void sub_1BB1DF80C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7250868;
}

NewsFeed::PuzzleKind_optional FCPuzzleProviding.puzzleKind.getter()
{
  void *v0;
  id v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;

  v1 = objc_msgSend(objc_msgSend(v0, sel_puzzleType), sel_kind);
  swift_unknownObjectRelease();
  v2 = sub_1BB8729A0();
  v4 = v3;

  v5._countAndFlagsBits = v2;
  v5._object = v4;
  return PuzzleKind.init(rawValue:)(v5);
}

unint64_t sub_1BB1DF8A0()
{
  unint64_t result;

  result = qword_1EF2BD7E8;
  if (!qword_1EF2BD7E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PuzzleKind, &type metadata for PuzzleKind);
    atomic_store(result, (unint64_t *)&qword_1EF2BD7E8);
  }
  return result;
}

unint64_t sub_1BB1DF8E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD7F0;
  if (!qword_1EF2BD7F0)
  {
    sub_1BB1DF930();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD7F0);
  }
  return result;
}

void sub_1BB1DF930()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BD7F8)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BD7F8);
  }
}

uint64_t storeEnumTagSinglePayload for PuzzleKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB1DF9D0 + 4 * byte_1BB8F7809[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB1DFA04 + 4 * asc_1BB8F7804[v4]))();
}

uint64_t sub_1BB1DFA04(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DFA0C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1DFA14);
  return result;
}

uint64_t sub_1BB1DFA20(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1DFA28);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB1DFA2C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1DFA34(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PuzzleKind()
{
  return &type metadata for PuzzleKind;
}

uint64_t SharingIssueActivityTypeProvider.supportedActivityTypes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SharingIssueActivityTypeProvider.__allocating_init(supportedActivityTypes:)(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

uint64_t SharingIssueActivityTypeProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t SharingIssueActivityTypeProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t dispatch thunk of SharingIssueActivityTypeProviderType.supportedActivityTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SharingIssueActivityTypeProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingIssueActivityTypeProvider.__allocating_init(supportedActivityTypes:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

void GroupLayoutContentSizeCategory.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB1DFB18()
{
  void *v0;
  _QWORD *v1;

  sub_1BA7C26A0(v0, 0);
  UIContentSizeCategory.description.getter();
  sub_1BB872AFC(v1);
  swift_bridgeObjectRelease();
  sub_1BA7C2538(v0, 0);
  return 0x616874207373654CLL;
}

void sub_1BB1DFD38()
{
  JUMPOUT(0x1BB1DFD24);
}

uint64_t initializeBufferWithCopyOfBuffer for GroupLayoutContentSizeCategory(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA7C26A0(*(id *)a2, v4);
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v4;
  return a1;
}

void destroy for GroupLayoutContentSizeCategory(uint64_t a1)
{
  sub_1BA7C2538(*(id *)a1, *(_BYTE *)(a1 + 8));
}

uint64_t assignWithCopy for GroupLayoutContentSizeCategory(uint64_t a1, uint64_t a2)
{
  id v3;
  unsigned __int8 v4;
  void *v5;
  unsigned __int8 v6;

  v3 = *(id *)a2;
  v4 = *(_BYTE *)(a2 + 8);
  sub_1BA7C26A0(*(id *)a2, v4);
  v5 = *(void **)a1;
  *(_QWORD *)a1 = v3;
  v6 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v4;
  sub_1BA7C2538(v5, v6);
  return a1;
}

uint64_t assignWithTake for GroupLayoutContentSizeCategory(uint64_t a1, uint64_t a2)
{
  char v3;
  void *v4;
  unsigned __int8 v5;

  v3 = *(_BYTE *)(a2 + 8);
  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_BYTE *)(a1 + 8);
  *(_BYTE *)(a1 + 8) = v3;
  sub_1BA7C2538(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupLayoutContentSizeCategory(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 6)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupLayoutContentSizeCategory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB1DFEF4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 5u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 6);
}

uint64_t sub_1BB1DFF0C(uint64_t result, unsigned int a2)
{
  if (a2 >= 6)
  {
    *(_QWORD *)result = a2 - 6;
    LOBYTE(a2) = 6;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for GroupLayoutContentSizeCategory()
{
  return &type metadata for GroupLayoutContentSizeCategory;
}

unint64_t FormatShareAttributionNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 16);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatShareAttributionNode.adjustments.getter()
{
  return swift_bridgeObjectRetain();
}

unint64_t FormatShareAttributionNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 48);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatShareAttributionNode.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatShareAttributionNode.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t FormatShareAttributionNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t FormatShareAttributionNode.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatShareAttributionNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatShareAttributionNode.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t FormatShareAttributionNode.size.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *a1;
  result = sub_1BA719718(*(_QWORD *)(v1 + 16));
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

uint64_t (*FormatShareAttributionNode.size.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatShareAttributionNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 24);
  return swift_retain();
}

uint64_t FormatShareAttributionNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatShareAttributionNode.adjustments.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatShareAttributionNode.zIndex.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = result;
  return result;
}

uint64_t (*FormatShareAttributionNode.zIndex.modify())(_QWORD)
{
  return nullsub_1;
}

unint64_t FormatShareAttributionNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t result;

  v2 = *a1;
  result = sub_1BA6EEDB4(*(_QWORD *)(v1 + 48));
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*FormatShareAttributionNode.visibility.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatShareAttributionNode.isUserInteractionEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*FormatShareAttributionNode.isUserInteractionEnabled.modify())(_QWORD)
{
  return nullsub_1;
}

void FormatShareAttributionNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 64);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatShareAttributionNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  return result;
}

uint64_t (*FormatShareAttributionNode.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB1E0118(_QWORD *a1)
{
  return FormatShareAttributionNode.encode(to:)(a1);
}

uint64_t sub_1BB1E0130@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unint64_t *a5@<X8>, double a6@<D0>, double a7@<D1>, double a8@<D2>, double a9@<D3>)
{
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34[2];
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[2];
  unint64_t v38;
  uint64_t v39;
  _BYTE v40[8];
  _OWORD v41[2];
  uint64_t v42;

  v17 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed17FormatNodeContext_namespace);
  v41[0] = *(_OWORD *)a2;
  v18 = v41[0];
  v19 = *(_QWORD *)(v17 + 40);
  if (v19)
  {
    v37[0] = *(_QWORD *)(v17 + 32);
    sub_1BA739BF4((uint64_t)v41);
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v20);
    sub_1BB872AFC(v21);
    sub_1BA73D624((uint64_t)v41);
    v29 = v19;
    v30 = v37[0];
  }
  else
  {
    sub_1BA739BF4((uint64_t)v41);
    v29 = *((_QWORD *)&v18 + 1);
    v30 = v18;
  }
  type metadata accessor for SharedItem();
  sub_1BB86C538();
  v32 = a3;
  v37[0] = a3;
  v37[1] = a4;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v22);
  swift_bridgeObjectRelease();
  v28 = a3;
  sub_1BA744E38(a2 + 24, (uint64_t)v40, (unint64_t *)&qword_1EF2B0770);
  sub_1BA744E38((uint64_t)v40, (uint64_t)&v42, (unint64_t *)&qword_1EF2B0770);
  if (v42)
  {
    v23 = *(_QWORD *)(v42 + 16);
    swift_retain();
  }
  else
  {
    v23 = 0;
  }
  v24 = swift_allocObject();
  v36 = v23;
  v25 = *(_QWORD *)(a2 + 40);
  v38 = *(_QWORD *)(a2 + 48);
  sub_1BA76127C(&v38, &v39);
  sub_1BA76127C(&v39, v37);
  sub_1BA739BF4((uint64_t)v41);
  sub_1BA761720(&v38);
  sub_1BA67C978(a1, &v35);
  sub_1BB1E0C2C(&v38);
  v26 = *(_BYTE *)(a2 + 56);
  sub_1BA744E38(a2 + 64, (uint64_t)v37, &qword_1ED3B80E8);
  sub_1BA744E38((uint64_t)v37, (uint64_t)v34, &qword_1ED3B80E8);
  sub_1BB86DD80();
  type metadata accessor for FormatShareAttributionNodeLayoutAttributes();
  swift_allocObject();
  *(_QWORD *)(v24 + 16) = FormatShareAttributionNodeLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:reuseIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:accessibilityRole:contextLayoutOptions:)(v32, a4, v30, v29, v18, *((uint64_t *)&v18 + 1), v28, a4, a6, a7, a8, a9, &v36, v25, &v35, v26 & 1, v34, v33);
  *a5 = v24 | 0x8000000000000000;
  return swift_bridgeObjectRetain();
}

uint64_t _s8NewsFeed26FormatShareAttributionNodeV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  unsigned int v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v28 = *(_QWORD *)(a1 + 48);
  v29 = *(_QWORD *)(a1 + 40);
  v22 = *(_QWORD *)(a1 + 64);
  v5 = *(_QWORD *)(a1 + 80);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 40);
  v27 = *(_QWORD *)(a2 + 48);
  v25 = *(unsigned __int8 *)(a2 + 56);
  v26 = *(unsigned __int8 *)(a1 + 56);
  v21 = *(_QWORD *)(a2 + 64);
  v23 = *(unsigned __int8 *)(a2 + 72);
  v24 = *(unsigned __int8 *)(a1 + 72);
  v9 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = 0, (sub_1BB874398() & 1) != 0))
  {
    v30[0] = v2;
    static FormatSize.== infix(_:_:)((uint64_t)v30);
    if ((v11 & 1) == 0)
      goto LABEL_10;
    if (v4)
    {
      if (!v6)
        goto LABEL_10;
      v12 = *(_QWORD *)(v4 + 16);
      v13 = *(_QWORD *)(v6 + 16);
      swift_beginAccess();
      v20 = v5;
      v14 = *(_QWORD *)(v12 + 16);
      swift_beginAccess();
      v19 = v9;
      v15 = *(_QWORD *)(v13 + 16);
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v16 = sub_1BA8583F8(v14, v15);
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      v5 = v20;
      swift_bridgeObjectRelease();
      v9 = v19;
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
        goto LABEL_10;
    }
    else if (v6)
    {
      goto LABEL_10;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18 = sub_1BA882CE0(v3, v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v10 = 0;
    if ((v18 & 1) != 0 && v29 == v7)
    {
      v33 = v28;
      v31 = v27;
      v10 = 0;
      if ((static FormatVisibility.== infix(_:_:)((unint64_t *)&v33, (unint64_t *)&v31) & 1) != 0
        && ((v26 ^ v25) & 1) == 0)
      {
        if (v24 <= 0xFD)
        {
          v33 = v22;
          v34 = v24;
          if (v23 <= 0xFD)
          {
            v31 = v21;
            v32 = v23;
            if ((_s8NewsFeed27FormatNodeAccessibilityRoleO2eeoiySbAC_ACtFZ_0(&v33, &v31) & 1) != 0)
              goto LABEL_21;
          }
        }
        else if (v23 > 0xFD)
        {
LABEL_21:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v10 = sub_1BA6EB330(v5, v9);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return v10 & 1;
        }
LABEL_10:
        v10 = 0;
      }
    }
  }
  return v10 & 1;
}

unint64_t sub_1BB1E06B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1E06D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1E06D8()
{
  unint64_t result;

  result = qword_1EF2BD800;
  if (!qword_1EF2BD800)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNode, &type metadata for FormatShareAttributionNode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD800);
  }
  return result;
}

unint64_t sub_1BB1E071C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA824D08();
  a1[2] = sub_1BAEEF1F4();
  result = sub_1BB1E0750();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1E0750()
{
  unint64_t result;

  result = qword_1EF2BD808;
  if (!qword_1EF2BD808)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNode, &type metadata for FormatShareAttributionNode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD808);
  }
  return result;
}

unint64_t sub_1BB1E0794(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1E07B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1E07B8()
{
  unint64_t result;

  result = qword_1EF2BD810;
  if (!qword_1EF2BD810)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatShareAttributionNode, &type metadata for FormatShareAttributionNode);
    atomic_store(result, (unint64_t *)&qword_1EF2BD810);
  }
  return result;
}

uint64_t sub_1BB1E07FC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1E0808(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

unint64_t sub_1BB1E0848@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  *a2 = v2;
  return sub_1BA71CA6C(v2);
}

unint64_t sub_1BB1E0854(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t result;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 16);
  sub_1BA71CA6C(*a1);
  result = sub_1BA719718(v4);
  *(_QWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1BB1E0894@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1E08A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 32) = v3;
  return result;
}

uint64_t sub_1BB1E08E0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 40);
  return result;
}

_QWORD *sub_1BB1E08EC(_QWORD *result, uint64_t a2)
{
  *(_QWORD *)(a2 + 40) = *result;
  return result;
}

unint64_t sub_1BB1E08F8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2;

  v2 = *(_QWORD *)(a1 + 48);
  *a2 = v2;
  return sub_1BA67D3F4(v2);
}

unint64_t sub_1BB1E0904(unint64_t *a1, uint64_t a2)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t result;

  v3 = *a1;
  v4 = *(_QWORD *)(a2 + 48);
  sub_1BA67D3F4(*a1);
  result = sub_1BA6EEDB4(v4);
  *(_QWORD *)(a2 + 48) = v3;
  return result;
}

uint64_t sub_1BB1E0944@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *(_BYTE *)(result + 56);
  return result;
}

_BYTE *sub_1BB1E0950(_BYTE *result, uint64_t a2)
{
  *(_BYTE *)(a2 + 56) = *result;
  return result;
}

uint64_t sub_1BB1E095C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1E0968(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 80) = v3;
  return result;
}

uint64_t destroy for FormatShareAttributionNode(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(a1 + 16));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(a1 + 48));
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatShareAttributionNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  sub_1BA71CA6C(v5);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v9);
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatShareAttributionNode(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  sub_1BA71CA6C(v4);
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  sub_1BA719718(v5);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 48);
  sub_1BA67D3F4(v6);
  v7 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = v6;
  sub_1BA6EEDB4(v7);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatShareAttributionNode(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  sub_1BA719718(v5);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  sub_1BA6EEDB4(v6);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatShareAttributionNode()
{
  return &type metadata for FormatShareAttributionNode;
}

uint64_t sub_1BB1E0C08()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t *sub_1BB1E0C2C(unint64_t *a1)
{
  sub_1BA6EEDB4(*a1);
  return a1;
}

uint64_t WebEmbedManager.__allocating_init(resolver:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  WebEmbedManager.init(resolver:)(a1);
  return v2;
}

uint64_t WebEmbedManager.pluginContainerController.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return MEMORY[0x1BCCE5D40](v0 + 16);
}

void WebEmbedManager.pluginContainerController.setter(void *a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

}

void (*WebEmbedManager.pluginContainerController.modify(_QWORD *a1))(id **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v3[3] = v4;
  v3[4] = v5;
  return sub_1BB1E0D9C;
}

void sub_1BB1E0D9C(id **a1, char a2)
{
  id *v3;
  id v4;

  v3 = *a1;
  v4 = (*a1)[3];
  *((_QWORD *)(*a1)[5] + 3) = (*a1)[4];
  swift_unknownObjectWeakAssign();
  if ((a2 & 1) != 0)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();

  }
  free(v3);
}

id sub_1BB1E0E08(char a1)
{
  uint64_t v1;
  uint64_t v2;
  id result;
  void *v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;

  v2 = v1;
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 56));
  type metadata accessor for WebEmbedViewController(0);
  result = (id)sub_1BB86DF3C();
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v5 = result;
  if ((a1 & 1) == 0)
  {
LABEL_5:
    swift_beginAccess();
    v7 = MEMORY[0x1BCCE5D40](v2 + 16);
    if (!v7)
      return v5;
    v8 = (void *)v7;
    swift_getObjectType();
    objc_msgSend(v8, sel_addChildViewController_, v5);
    v9 = (void *)sub_1BB870D20();
    result = objc_msgSend(v5, sel_view, v8);
    if (result)
    {
      v10 = result;
      objc_msgSend(v9, sel_addSubview_, result);

      objc_msgSend(v5, sel_didMoveToParentViewController_, v8);
      return v5;
    }
    goto LABEL_10;
  }
  result = objc_msgSend(result, sel_view);
  if (result)
  {
    v6 = result;
    objc_msgSend(result, sel_ts_setHiddenForReuse_, 1);

    goto LABEL_5;
  }
LABEL_11:
  __break(1u);
  return result;
}

id sub_1BB1E0F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v6;
  char v7;
  id v8;
  uint64_t *v9;
  uint64_t v10;
  void *v11;
  id result;
  void *v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  id v18;
  uint64_t v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;

  v3 = v2;
  v6 = (uint64_t *)(v2 + 144);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 144) + 16) && (sub_1BB4CF560(a2), (v7 & 1) != 0))
  {
    swift_endAccess();
    swift_retain();
    v8 = (id)sub_1BB86E764();
    swift_release();
    if (v8)
      return v8;
  }
  else
  {
    swift_endAccess();
  }
  v9 = (uint64_t *)(sub_1BB1E173C(a1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization) + 16);
  swift_beginAccess();
  swift_retain();
  v10 = sub_1BB1E1578(a2);
  if (v10 || (v10 = sub_1BB6C20E4()) != 0)
  {
    v11 = (void *)v10;
    swift_endAccess();
    goto LABEL_9;
  }
  v16 = sub_1BA9BEA0C(*v9);
  if ((v17 & 1) != 0)
  {
    swift_endAccess();
LABEL_17:
    v18 = sub_1BB1E0E08(0);
    sub_1BA4B07F0(0, &qword_1ED3AD1B8, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DB4960]);
    swift_allocObject();
    v8 = v18;
    v19 = sub_1BB86E770();
    swift_beginAccess();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v22 = *(_QWORD *)(v3 + 144);
    *(_QWORD *)(v3 + 144) = 0x8000000000000000;
    sub_1BB4BFDA8(v19, a2, isUniquelyReferenced_nonNull_native);
    *(_QWORD *)(v3 + 144) = v22;
    goto LABEL_11;
  }
  v11 = (void *)sub_1BB1E1578(v16);
  swift_endAccess();
  if (!v11)
    goto LABEL_17;
LABEL_9:
  result = objc_msgSend(v11, sel_view);
  if (result)
  {
    v13 = result;
    objc_msgSend(result, sel_ts_setHiddenForReuse_, 0);

    sub_1BA4B07F0(0, &qword_1ED3AD1B8, type metadata accessor for WebEmbedViewController, MEMORY[0x1E0DB4960]);
    swift_allocObject();
    v8 = v11;
    v14 = sub_1BB86E770();
    swift_beginAccess();
    v15 = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v6;
    *v6 = 0x8000000000000000;
    sub_1BB4BFDA8(v14, a2, v15);
    *v6 = v21;
LABEL_11:
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_release();
    return v8;
  }
  __break(1u);
  return result;
}

id sub_1BB1E125C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  void *v8;
  id result;
  void *v10;
  void *v11;
  void *v12;

  swift_beginAccess();
  sub_1BAA49944(a3);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v3 + 16);
  if (!v7)
    goto LABEL_5;
  v8 = (void *)v7;
  result = objc_msgSend(a2, sel_view);
  if (result)
  {
    v10 = result;
    objc_msgSend(result, sel_ts_setHiddenForReuse_, 1);

    swift_getObjectType();
    v11 = (void *)sub_1BB870D20();
    result = objc_msgSend(a2, sel_view);
    if (result)
    {
      v12 = result;
      objc_msgSend(v11, sel_addSubview_, result);

LABEL_5:
      sub_1BB1E173C(a1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_dataVisualization);
      swift_beginAccess();
      swift_retain();
      sub_1BB434548(a2, a3, 0);
      swift_endAccess();
      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t WebEmbedManager.deinit()
{
  uint64_t v0;

  sub_1BA8FD860(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WebEmbedManager.__deallocating_deinit()
{
  WebEmbedManager.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB1E14B4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *a1 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  v6 = *(_QWORD *)(v3 + 24);
  *a2 = result;
  a2[1] = v6;
  return result;
}

uint64_t sub_1BB1E150C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t method lookup function for WebEmbedManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WebEmbedManager.__allocating_init(resolver:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1BB1E1578(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  unint64_t v6;
  char v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;

  v3 = v1;
  v4 = *v1;
  if (!*(_QWORD *)(v4 + 16))
    return 0;
  v6 = sub_1BB4CF560(a1);
  if ((v7 & 1) == 0)
    return 0;
  v8 = *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v6);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v2 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v2)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1BB873F30();
      swift_bridgeObjectRelease();
      if (v9)
        goto LABEL_5;
      __break(1u);
    }
    goto LABEL_16;
  }
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v9)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_5:
  if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
    || (v8 & 0x8000000000000000) != 0
    || (v8 & 0x4000000000000000) != 0)
  {
    sub_1BAA67DA8(v8);
  }
  v10 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v10)
  {
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v14 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v14)
      goto LABEL_12;
LABEL_21:
    swift_bridgeObjectRelease();
    sub_1BAA498B0(a1);
    swift_bridgeObjectRelease();
    return v9;
  }
  v11 = v10 - 1;
  v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 8 * v11 + 0x20);
  *(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
  sub_1BB872DCC();
  v2 = v8;
  if (v8 >> 62)
    goto LABEL_20;
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_21;
LABEL_12:
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v15 = *v3;
  *v3 = 0x8000000000000000;
  sub_1BB4BFC3C(v2, a1, isUniquelyReferenced_nonNull_native);
  *v3 = v15;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BB1E173C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;
  uint64_t v13;

  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, v7, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v13 - v9;
  sub_1BB044324(a1, (uint64_t)&v13 - v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    sub_1BB044380((uint64_t)v10);
  }
  else
  {
    sub_1BB05D18C((uint64_t)v10, (uint64_t)v6);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v12 = *v6;
      sub_1BB1530C4((uint64_t)v10);
      __asm { BR              X10 }
    }
    sub_1BB1530C4((uint64_t)v6);
    sub_1BB1530C4((uint64_t)v10);
  }
  return *(_QWORD *)(v1 + 128);
}

void sub_1BB1E1880()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

void sub_1BB1E1890()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

void sub_1BB1E18A0()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

void sub_1BB1E18B0()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

void sub_1BB1E18C0()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

void sub_1BB1E18D0()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

void sub_1BB1E18E0()
{
  swift_release();
  JUMPOUT(0x1BB1E183CLL);
}

uint64_t FormatCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:scrollingTrait:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB1E371C();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1
                                                          + class metadata base offset for FormatCollectionViewLayout)
                                              - 8)
                                  + 8))(a1);
  return v3;
}

uint64_t FormatCollectionViewLayout.init(blueprintLayoutCollectionProvider:scrollingTrait:)(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = sub_1BB1E3630();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3
                                                          + class metadata base offset for FormatCollectionViewLayout)
                                              - 8)
                                  + 8))(a1);
  return v4;
}

id FormatCollectionViewLayout.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void sub_1BB1E19E0(uint64_t a1, uint64_t a2, void *a3)
{
  id v3;

  v3 = a3;
  _s8NewsFeed26FormatCollectionViewLayoutC5coderACyxGSgSo7NSCoderC_tcfc_0();
}

uint64_t FormatCollectionViewLayout.copy()@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  objc_class *ObjectType;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  uint64_t v10;
  uint64_t result;
  _BYTE v12[16];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  v5 = *(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v1) + class metadata base offset for FormatCollectionViewLayout);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](ObjectType);
  v8 = &v12[-v7];
  sub_1BB870D44();
  v12[15] = *((_BYTE *)v1 + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*v4 & *v1) + 16));
  v9 = objc_allocWithZone(ObjectType);
  v10 = sub_1BB1E3630();
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  result = sub_1BB870D50();
  a1[3] = (uint64_t)ObjectType;
  *a1 = v10;
  return result;
}

uint64_t sub_1BB1E1B08(void *a1)
{
  id v1;
  uint64_t v2;
  uint64_t v4[4];

  v1 = a1;
  FormatCollectionViewLayout.copy()(v4);

  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  v2 = sub_1BB874380();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
  return v2;
}

Swift::Void __swiftcall FormatCollectionViewLayout.prepare()()
{
  _QWORD *v0;
  _QWORD *v1;
  id v2;
  void *v3;
  uint64_t v4;
  objc_super v5;

  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v5, sel_prepareLayout);
  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  if (*((unsigned __int8 *)v0
                     + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout
                                 + (*MEMORY[0x1E0DEEDD8] & *v0)
                                 + 16))
     - 2 >= 3)
  {
    v2 = objc_msgSend(v0, sel_collectionView);
    if (v2)
    {
      v3 = v2;
      objc_msgSend(v2, sel_setDecelerationRate_, *MEMORY[0x1E0DC5360]);

    }
    sub_1BB1E1C3C(v0);
    *(_QWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*v1 & *v0) + 24)) = v4;
  }
}

void sub_1BB1E1C3C(void *a1)
{
  id v1;
  void *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  CGRect v9;
  CGRect v10;

  v1 = objc_msgSend(a1, sel_collectionView);
  if (!v1)
    return;
  v2 = v1;
  objc_msgSend(v1, sel_bounds);
  v3 = sub_1BB1E1D7C(v2);
  if (v3 >> 62)
  {
    v4 = sub_1BB873F30();
    if (v4)
      goto LABEL_4;
LABEL_8:
    swift_bridgeObjectRelease();

    return;
  }
  v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    goto LABEL_8;
LABEL_4:
  if ((v3 & 0xC000000000000001) != 0)
    v5 = (id)MEMORY[0x1BCCE4630](0, v3);
  else
    v5 = *(id *)(v3 + 32);
  v6 = v5;
  objc_msgSend(v5, sel_frame);
  CGRectGetMaxX(v9);

  if (v4 == 1)
    goto LABEL_8;
  if ((v3 & 0xC000000000000001) != 0)
    v7 = (id)MEMORY[0x1BCCE4630](1, v3);
  else
    v7 = *(id *)(v3 + 40);
  v8 = v7;
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_frame);
  CGRectGetMinX(v10);

}

uint64_t sub_1BB1E1D7C(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t i;
  void *v19;
  id v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;

  v3 = *MEMORY[0x1E0DEEDD8] & *v1;
  v4 = sub_1BB870AC8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v3 + class metadata base offset for FormatCollectionViewLayout);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - v11;
  sub_1BB870D44();
  sub_1BB8711C4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  objc_msgSend(a1, sel_adjustedContentInset);
  v13 = sub_1BB870ABC();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  v14 = MEMORY[0x1E0DEE9D8];
  if (!v13)
    return v14;
  v15 = sub_1BB871050();
  result = swift_release();
  v24 = v14;
  if (!(v15 >> 62))
  {
    v17 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v17)
      goto LABEL_4;
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BB873F30();
  result = swift_bridgeObjectRelease();
  if (!v17)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return MEMORY[0x1E0DEE9D8];
  }
LABEL_4:
  if (v17 >= 1)
  {
    for (i = 0; i != v17; ++i)
    {
      if ((v15 & 0xC000000000000001) != 0)
        v20 = (id)MEMORY[0x1BCCE4630](i, v15);
      else
        v20 = *(id *)(v15 + 8 * i + 32);
      v21 = v20;
      v22 = objc_msgSend(v20, sel_representedElementKind);
      if (v22)
      {
        v19 = v22;

      }
      else
      {
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
      }
    }
    swift_bridgeObjectRelease();
    return v24;
  }
  __break(1u);
  return result;
}

void sub_1BB1E2014(void *a1)
{
  id v1;

  v1 = a1;
  FormatCollectionViewLayout.prepare()();

}

CGPoint __swiftcall FormatCollectionViewLayout.targetContentOffset(forProposedContentOffset:withScrollingVelocity:)(CGPoint forProposedContentOffset, CGPoint withScrollingVelocity)
{
  CGPoint result;

  __asm { BR              X12 }
  return result;
}

void sub_1BB1E2098(CGFloat a1, double a2, double a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BB1E20D8(a1, a2, a3);
  *(_QWORD *)((char *)v4 + *(_QWORD *)(*(_QWORD *)(v5 + 1616) + (*v3 & *v4) + 40)) = v6;
}

void sub_1BB1E20D8(CGFloat a1, double a2, double a3)
{
  _QWORD *v3;
  id v6;
  void *v7;
  double v8;
  CGFloat v9;
  double v10;
  CGFloat v11;
  double v12;
  double v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  double v20;
  uint64_t v21;
  double v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  double v26;
  double v27;
  id v28;
  void *v29;
  double v30;
  double Width;
  uint64_t v32;
  unint64_t v33;
  id v34;
  void *v35;
  double v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  CGRect v42;
  CGRect v43;
  CGRect v44;
  CGRect v45;

  v6 = objc_msgSend(v3, sel_collectionView);
  if (!v6)
    return;
  v7 = v6;
  objc_msgSend(v6, sel_bounds);
  v9 = v8;
  v11 = v10;
  objc_msgSend(v3, sel_collectionViewContentSize);
  v13 = v12;
  v42.origin.y = 0.0;
  v42.origin.x = a1;
  v42.size.width = v9;
  v42.size.height = v11;
  if (v13 - CGRectGetWidth(v42) <= a1)
  {

    return;
  }
  v14 = sub_1BB1E1D7C(v7);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    v37 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v37)
    {
      v38 = swift_bridgeObjectRetain();
      v15 = (uint64_t)sub_1BA85E318(v38);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
LABEL_31:

    swift_bridgeObjectRelease();
    return;
  }
  v15 = v14 & 0xFFFFFFFFFFFFFF8;
  if (!*(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_31;
  swift_bridgeObjectRetain();
LABEL_6:
  v41 = v15;
  sub_1BB1E2A14(&v41);
  swift_bridgeObjectRelease();
  v16 = v41;
  objc_msgSend(v7, sel_adjustedContentInset);
  v18 = v17 + a1;
  objc_msgSend(v7, sel_layoutMargins);
  v20 = v19;
  if (v16 < 0 || (v16 & 0x4000000000000000) != 0)
  {
    swift_retain();
    v21 = sub_1BB873F30();
    v22 = v18 + v20;
    if (v21)
      goto LABEL_9;
LABEL_33:
    swift_release_n();
    objc_msgSend(v3, sel_collectionViewContentSize);
    objc_msgSend(v7, sel_bounds);
    CGRectGetWidth(v45);
    objc_msgSend(v7, sel_adjustedContentInset);
    objc_msgSend(v7, sel_layoutMargins);

    return;
  }
  v21 = *(_QWORD *)(v16 + 16);
  swift_retain();
  v22 = v18 + v20;
  if (!v21)
    goto LABEL_33;
LABEL_9:
  if (v21 < 1)
    goto LABEL_36;
  v23 = 0;
  v24 = *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*MEMORY[0x1E0DEEDD8] & *v3) + 24);
  v25 = v16 & 0xC000000000000001;
  v39 = v16 + 32;
  v40 = v24;
  v26 = fabs(a3);
  v27 = 1.79769313e308;
  while (1)
  {
    v28 = v25 ? (id)MEMORY[0x1BCCE4630](v23, v16) : *(id *)(v16 + 8 * v23 + 32);
    v29 = v28;
    objc_msgSend(v28, sel_frame, v39);
    if (vabdd_f64(v30, v22) < fabs(v27))
    {
      v27 = v30 - v22;
      if (v26 >= 0.3)
        break;
    }

LABEL_12:
    if (v21 == ++v23)
      goto LABEL_33;
  }
  if (a3 > 0.0)
  {
    objc_msgSend(v29, sel_bounds);
    Width = CGRectGetWidth(v43);

    v27 = v27 + Width + *(double *)((char *)v3 + v24);
    goto LABEL_12;
  }
  if (v23 <= 1)
    v32 = 1;
  else
    v32 = v23;
  v33 = v32 - 1;
  if (v25)
  {
    v34 = (id)MEMORY[0x1BCCE4630](v33, v16);
LABEL_27:
    v35 = v34;
    objc_msgSend(v34, sel_bounds);
    v36 = CGRectGetWidth(v44);

    v24 = v40;
    v27 = v27 - v36 - *(double *)((char *)v3 + v40);
    goto LABEL_12;
  }
  if (v33 < *(_QWORD *)(v16 + 16))
  {
    v34 = *(id *)(v39 + 8 * v33);
    goto LABEL_27;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  swift_release();
  __break(1u);
}

id sub_1BB1E24BC(double a1, double a2, double a3)
{
  _QWORD *v3;
  id result;
  void *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double Width;
  uint64_t v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  unint64_t v16;
  double v17;
  double v18;
  id v19;
  void *v20;
  double v21;
  double v22;
  uint64_t v23;
  unint64_t v24;
  id v25;
  void *v26;
  double v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  CGRect v33;
  CGRect v34;
  CGRect v35;

  result = objc_msgSend(v3, sel_collectionView);
  if (!result)
    return result;
  v7 = result;
  objc_msgSend(result, sel_bounds);
  v8 = sub_1BB1E1D7C(v7);
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v28 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v28)
    {
      v29 = swift_bridgeObjectRetain();
      v9 = (uint64_t)sub_1BA85E318(v29);
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
LABEL_29:

    return (id)swift_bridgeObjectRelease();
  }
  v9 = v8 & 0xFFFFFFFFFFFFFF8;
  if (!*(_QWORD *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_29;
  swift_bridgeObjectRetain();
LABEL_5:
  v32 = v9;
  sub_1BB1E2A14(&v32);
  swift_bridgeObjectRelease();
  v10 = v32;
  objc_msgSend(v7, sel_bounds);
  Width = CGRectGetWidth(v33);
  if (v10 < 0 || (v10 & 0x4000000000000000) != 0)
  {
    swift_retain();
    v12 = sub_1BB873F30();
    if (v12)
      goto LABEL_8;
LABEL_31:

    return (id)swift_release_n();
  }
  v12 = *(_QWORD *)(v10 + 16);
  swift_retain();
  if (!v12)
    goto LABEL_31;
LABEL_8:
  if (v12 < 1)
    goto LABEL_34;
  v13 = 0;
  v14 = Width * 0.5 + a1;
  v15 = *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*MEMORY[0x1E0DEEDD8] & *v3) + 24);
  v16 = v10 & 0xC000000000000001;
  v30 = v10 + 32;
  v31 = v15;
  v17 = fabs(a3);
  v18 = 1.79769313e308;
  while (1)
  {
    v19 = v16 ? (id)MEMORY[0x1BCCE4630](v13, v10) : *(id *)(v10 + 8 * v13 + 32);
    v20 = v19;
    objc_msgSend(v19, sel_center, v30);
    if (vabdd_f64(v14, v21) < fabs(v18))
    {
      v18 = v21 - v14;
      if (v17 >= 0.3)
        break;
    }

LABEL_11:
    if (v12 == ++v13)
      goto LABEL_31;
  }
  if (a3 > 0.0)
  {
    objc_msgSend(v20, sel_bounds);
    v22 = CGRectGetWidth(v34);

    v18 = v18 + v22 + *(double *)((char *)v3 + v15);
    goto LABEL_11;
  }
  if (v13 <= 1)
    v23 = 1;
  else
    v23 = v13;
  v24 = v23 - 1;
  if (v16)
  {
    v25 = (id)MEMORY[0x1BCCE4630](v24, v10);
LABEL_26:
    v26 = v25;
    objc_msgSend(v25, sel_bounds);
    v27 = CGRectGetWidth(v35);

    v15 = v31;
    v18 = v18 - v27 - *(double *)((char *)v3 + v31);
    goto LABEL_11;
  }
  if (v24 < *(_QWORD *)(v10 + 16))
  {
    v25 = *(id *)(v30 + 8 * v24);
    goto LABEL_26;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  result = (id)swift_release();
  __break(1u);
  return result;
}

double sub_1BB1E27DC(void *a1, double a2, double a3, double a4, double a5)
{
  id v9;
  double v10;

  v9 = a1;
  *(_QWORD *)&v10 = *(_OWORD *)&FormatCollectionViewLayout.targetContentOffset(forProposedContentOffset:withScrollingVelocity:)((CGPoint)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2), (CGPoint)__PAIR128__(*(unint64_t *)&a5, *(unint64_t *)&a4));

  return v10;
}

Swift::Bool __swiftcall FormatCollectionViewLayout.shouldInvalidateLayout(forBoundsChange:)(__C::CGRect forBoundsChange)
{
  _QWORD *v1;
  double height;
  double width;
  double y;
  double x;
  unsigned int v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  height = forBoundsChange.size.height;
  width = forBoundsChange.size.width;
  y = forBoundsChange.origin.y;
  x = forBoundsChange.origin.x;
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  v6 = objc_msgSendSuper2(&v12, sel_shouldInvalidateLayoutForBoundsChange_, x, y, width, height);
  v7 = objc_msgSend(v1, sel_collectionView);
  if (v7)
  {
    v8 = v7;
    if (v6)
    {
      objc_msgSend(v7, sel_contentOffset);
      v10 = v9;

      *(_QWORD *)((char *)v1
                + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout
                            + (*MEMORY[0x1E0DEEDD8] & *v1)
                            + 40)) = v10;
    }
    else
    {

    }
  }
  return v6;
}

BOOL sub_1BB1E292C(void *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  id v9;
  Swift::Bool v10;
  __C::CGRect v12;

  v9 = a1;
  v12.origin.x = a2;
  v12.origin.y = a3;
  v12.size.width = a4;
  v12.size.height = a5;
  v10 = FormatCollectionViewLayout.shouldInvalidateLayout(forBoundsChange:)(v12);

  return v10;
}

void FormatCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:)()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void FormatCollectionViewLayout.init(blueprintLayoutCollectionProvider:)()
{
  sub_1BB1E3B84();
}

id FormatCollectionViewLayout.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB1E2A14(uint64_t *a1)
{
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v4;
  uint64_t v6[2];

  v2 = *a1;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    sub_1BA6B269C();
  v4 = *(_QWORD *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_1BB1E2A8C(v6);
  return sub_1BB873DBC();
}

void sub_1BB1E2A8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  double MinX;
  double v19;
  id *v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  void *v36;
  id v37;
  id v38;
  double v39;
  double v40;
  void *v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  unint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  char *v96;
  uint64_t v97;
  unint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  void **v113;
  uint64_t v114;
  CGRect v115;
  CGRect v116;
  CGRect v117;
  CGRect v118;
  CGRect v119;
  CGRect v120;

  v2 = v1;
  v4 = a1[1];
  v5 = sub_1BB8741F4();
  if (v5 >= v4)
  {
    if (v4 < 0)
      goto LABEL_132;
    if (v4)
      sub_1BB1E31FC(0, v4, 1, a1);
    return;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_140;
  v7 = v5;
  v104 = a1;
  if (v4 < 2)
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v114 = MEMORY[0x1E0DEE9D8];
    v113 = (void **)((MEMORY[0x1E0DEE9D8] & 0xFFFFFFFFFFFFFF8) + 32);
    if (v4 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_98:
      v96 = v10;
      if (v13 >= 2)
      {
        v97 = *v104;
        do
        {
          v98 = v13 - 2;
          if (v13 < 2)
            goto LABEL_127;
          if (!v97)
            goto LABEL_139;
          v99 = v96;
          v100 = *(_QWORD *)&v96[16 * v98 + 32];
          v101 = *(_QWORD *)&v96[16 * v13 + 24];
          sub_1BB1E32F8((void **)(v97 + 8 * v100), (id *)(v97 + 8 * *(_QWORD *)&v96[16 * v13 + 16]), v97 + 8 * v101, v113);
          if (v2)
            break;
          if (v101 < v100)
            goto LABEL_128;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v99 = sub_1BACAB464((uint64_t)v99);
          if (v98 >= *((_QWORD *)v99 + 2))
            goto LABEL_129;
          v102 = &v99[16 * v98 + 32];
          *(_QWORD *)v102 = v100;
          *((_QWORD *)v102 + 1) = v101;
          v103 = *((_QWORD *)v99 + 2);
          if (v13 > v103)
            goto LABEL_130;
          memmove(&v99[16 * v13 + 16], &v99[16 * v13 + 32], 16 * (v103 - v13));
          v96 = v99;
          *((_QWORD *)v99 + 2) = v103 - 1;
          v13 = v103 - 1;
        }
        while (v103 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      *(_QWORD *)((v114 & 0xFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_1BB872DCC();
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    v8 = v6 >> 1;
    sub_1BB86F418();
    v9 = sub_1BB872E74();
    *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) = v8;
    v113 = (void **)((v9 & 0xFFFFFFFFFFFFFF8) + 32);
    v114 = v9;
  }
  v109 = v7;
  v11 = 0;
  v12 = *a1;
  v105 = *a1 - 8;
  v106 = *a1 + 16;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v110 = v4;
  while (1)
  {
    v14 = v11++;
    v111 = v14;
    if (v11 < v4)
    {
      v15 = *(void **)(v12 + 8 * v14);
      v16 = *(id *)(v12 + 8 * v11);
      v17 = v15;
      objc_msgSend(v16, sel_frame);
      MinX = CGRectGetMinX(v115);
      objc_msgSend(v17, sel_frame);
      v19 = CGRectGetMinX(v116);

      v11 = v14 + 2;
      if (v14 + 2 < v4)
      {
        v107 = v10;
        v20 = (id *)(v106 + 8 * v14);
        while (1)
        {
          v21 = *(v20 - 1);
          v22 = *v20;
          v23 = v21;
          objc_msgSend(v22, sel_frame);
          v24 = CGRectGetMinX(v117);
          objc_msgSend(v23, sel_frame);
          v25 = CGRectGetMinX(v118);

          if (MinX < v19 == v24 >= v25)
            break;
          ++v11;
          ++v20;
          if (v4 == v11)
          {
            v11 = v4;
            break;
          }
        }
        v10 = v107;
      }
      if (MinX < v19)
      {
        if (v11 < v14)
          goto LABEL_133;
        if (v14 < v11)
        {
          v26 = (uint64_t *)(v105 + 8 * v11);
          v27 = v11;
          v28 = v14;
          v29 = (uint64_t *)(v12 + 8 * v14);
          do
          {
            if (v28 != --v27)
            {
              if (!v12)
                goto LABEL_138;
              v30 = *v29;
              *v29 = *v26;
              *v26 = v30;
            }
            ++v28;
            --v26;
            ++v29;
          }
          while (v28 < v27);
        }
      }
    }
    if (v11 >= v4)
      goto LABEL_47;
    if (__OFSUB__(v11, v14))
      goto LABEL_131;
    if (v11 - v14 >= v109)
      goto LABEL_47;
    if (__OFADD__(v14, v109))
      goto LABEL_134;
    v31 = v14 + v109 >= v4 ? v4 : v14 + v109;
    if (v31 < v14)
      break;
    if (v11 != v31)
    {
      v108 = v10;
      v32 = v105 + 8 * v11;
      do
      {
        v33 = *(void **)(v12 + 8 * v11);
        v34 = v14;
        v35 = v32;
        do
        {
          v36 = *(void **)v35;
          v37 = v33;
          v38 = v36;
          objc_msgSend(v37, sel_frame);
          v39 = CGRectGetMinX(v119);
          objc_msgSend(v38, sel_frame);
          v40 = CGRectGetMinX(v120);

          if (v39 >= v40)
            break;
          if (!v12)
            goto LABEL_136;
          v41 = *(void **)v35;
          v33 = *(void **)(v35 + 8);
          *(_QWORD *)v35 = v33;
          *(_QWORD *)(v35 + 8) = v41;
          v35 -= 8;
          ++v34;
        }
        while (v11 != v34);
        ++v11;
        v32 += 8;
        v14 = v111;
      }
      while (v11 != v31);
      v11 = v31;
      v10 = v108;
    }
LABEL_47:
    if (v11 < v14)
      goto LABEL_126;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
    v43 = *((_QWORD *)v10 + 2);
    v42 = *((_QWORD *)v10 + 3);
    v13 = v43 + 1;
    if (v43 >= v42 >> 1)
      v10 = sub_1BACAA368((char *)(v42 > 1), v43 + 1, 1, v10);
    *((_QWORD *)v10 + 2) = v13;
    v44 = v10 + 32;
    v45 = &v10[16 * v43 + 32];
    *(_QWORD *)v45 = v14;
    *((_QWORD *)v45 + 1) = v11;
    if (v43)
    {
      v112 = v11;
      while (1)
      {
        v46 = v13 - 1;
        if (v13 >= 4)
        {
          v51 = &v44[16 * v13];
          v52 = *((_QWORD *)v51 - 8);
          v53 = *((_QWORD *)v51 - 7);
          v57 = __OFSUB__(v53, v52);
          v54 = v53 - v52;
          if (v57)
            goto LABEL_115;
          v56 = *((_QWORD *)v51 - 6);
          v55 = *((_QWORD *)v51 - 5);
          v57 = __OFSUB__(v55, v56);
          v49 = v55 - v56;
          v50 = v57;
          if (v57)
            goto LABEL_116;
          v58 = v13 - 2;
          v59 = &v44[16 * v13 - 32];
          v61 = *(_QWORD *)v59;
          v60 = *((_QWORD *)v59 + 1);
          v57 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          if (v57)
            goto LABEL_118;
          v57 = __OFADD__(v49, v62);
          v63 = v49 + v62;
          if (v57)
            goto LABEL_121;
          if (v63 >= v54)
          {
            v81 = &v44[16 * v46];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v57 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v57)
              goto LABEL_125;
            v74 = v49 < v84;
            goto LABEL_85;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v75 = *((_QWORD *)v10 + 4);
            v76 = *((_QWORD *)v10 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
            goto LABEL_79;
          }
          v48 = *((_QWORD *)v10 + 4);
          v47 = *((_QWORD *)v10 + 5);
          v57 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          v50 = v57;
        }
        if ((v50 & 1) != 0)
          goto LABEL_117;
        v58 = v13 - 2;
        v64 = &v44[16 * v13 - 32];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v67 = __OFSUB__(v65, v66);
        v68 = v65 - v66;
        v69 = v67;
        if (v67)
          goto LABEL_120;
        v70 = &v44[16 * v46];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v57 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v57)
          goto LABEL_123;
        if (__OFADD__(v68, v73))
          goto LABEL_124;
        if (v68 + v73 >= v49)
        {
          v74 = v49 < v73;
LABEL_85:
          if (v74)
            v46 = v58;
          goto LABEL_87;
        }
LABEL_79:
        if ((v69 & 1) != 0)
          goto LABEL_119;
        v77 = &v44[16 * v46];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v57 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v57)
          goto LABEL_122;
        if (v80 < v68)
          goto LABEL_14;
LABEL_87:
        v85 = v46 - 1;
        if (v46 - 1 >= v13)
        {
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
          goto LABEL_135;
        }
        v86 = v12;
        if (!v12)
          goto LABEL_137;
        v87 = v10;
        v88 = &v44[16 * v85];
        v89 = *(_QWORD *)v88;
        v90 = v44;
        v91 = v46;
        v92 = &v44[16 * v46];
        v93 = *((_QWORD *)v92 + 1);
        v94 = v86;
        sub_1BB1E32F8((void **)(v86 + 8 * *(_QWORD *)v88), (id *)(v86 + 8 * *(_QWORD *)v92), v86 + 8 * v93, v113);
        if (v1)
          goto LABEL_95;
        if (v93 < v89)
          goto LABEL_112;
        if (v91 > *((_QWORD *)v87 + 2))
          goto LABEL_113;
        *(_QWORD *)v88 = v89;
        *(_QWORD *)&v90[16 * v85 + 8] = v93;
        v95 = *((_QWORD *)v87 + 2);
        if (v91 >= v95)
          goto LABEL_114;
        v10 = v87;
        v13 = v95 - 1;
        memmove(v92, v92 + 16, 16 * (v95 - 1 - v91));
        v44 = v90;
        *((_QWORD *)v87 + 2) = v95 - 1;
        v12 = v94;
        v11 = v112;
        if (v95 <= 2)
          goto LABEL_14;
      }
    }
    v13 = 1;
LABEL_14:
    v4 = v110;
    if (v11 >= v110)
    {
      v2 = v1;
      goto LABEL_98;
    }
  }
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  sub_1BB873EA0();
  __break(1u);
}

void sub_1BB1E31FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  double MinX;
  double v15;
  void *v16;
  CGRect v18;
  CGRect v19;

  if (a3 != a2)
  {
    v4 = a3;
    v6 = *a4;
    v7 = *a4 + 8 * a3 - 8;
LABEL_5:
    v8 = *(void **)(v6 + 8 * v4);
    v9 = a1;
    v10 = v7;
    while (1)
    {
      v11 = *(void **)v10;
      v12 = v8;
      v13 = v11;
      objc_msgSend(v12, sel_frame);
      MinX = CGRectGetMinX(v18);
      objc_msgSend(v13, sel_frame);
      v15 = CGRectGetMinX(v19);

      if (MinX >= v15)
      {
LABEL_4:
        ++v4;
        v7 += 8;
        if (v4 == a2)
          return;
        goto LABEL_5;
      }
      if (!v6)
        break;
      v16 = *(void **)v10;
      v8 = *(void **)(v10 + 8);
      *(_QWORD *)v10 = v8;
      *(_QWORD *)(v10 + 8) = v16;
      v10 -= 8;
      if (v4 == ++v9)
        goto LABEL_4;
    }
    __break(1u);
  }
}

uint64_t sub_1BB1E32F8(void **__src, id *a2, unint64_t a3, void **a4)
{
  id *v5;
  void **v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void **v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  double v18;
  double v19;
  id *v20;
  id *v21;
  id *v22;
  void **v23;
  id *v24;
  id *v25;
  void *v26;
  id v27;
  id v28;
  double MinX;
  double v30;
  uint64_t result;
  char *v33;
  void **v34;
  id *v35;
  CGRect v36;
  CGRect v37;
  CGRect v38;
  CGRect v39;

  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 7;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 3;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 7;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 3;
  v35 = __src;
  v34 = a4;
  if (v9 >= v11 >> 3)
  {
    if (v10 < -7)
      goto LABEL_46;
    if (a4 != a2 || &a2[v12] <= a4)
      memmove(a4, a2, 8 * v12);
    v21 = &a4[v12];
    v33 = (char *)v21;
    v35 = v5;
    if (v6 >= v5 || v10 < 8)
      goto LABEL_45;
    v22 = (id *)(a3 - 8);
    v23 = v5;
    while (1)
    {
      v24 = v22 + 1;
      v25 = v21 - 1;
      v26 = *--v23;
      v27 = *(v21 - 1);
      v28 = v26;
      objc_msgSend(v27, sel_frame);
      MinX = CGRectGetMinX(v38);
      objc_msgSend(v28, sel_frame);
      v30 = CGRectGetMinX(v39);

      if (MinX < v30)
        break;
      v33 = (char *)(v21 - 1);
      if (v24 < v21 || v22 >= v21)
      {
        *v22 = *v25;
        v23 = v5;
        --v21;
        goto LABEL_43;
      }
      if (v24 != v21)
        *v22 = *v25;
      v23 = v5;
      --v21;
      if (v5 <= v6)
        goto LABEL_45;
LABEL_44:
      --v22;
      v5 = v23;
      if (v21 <= a4)
        goto LABEL_45;
    }
    if (v24 != v5 || v22 >= v5)
      *v22 = *v23;
    v35 = v23;
LABEL_43:
    if (v23 <= v6)
      goto LABEL_45;
    goto LABEL_44;
  }
  if (v7 >= -7)
  {
    if (a4 != __src || &__src[v9] <= a4)
      memmove(a4, __src, 8 * v9);
    v13 = &a4[v9];
    v33 = (char *)v13;
    if ((unint64_t)v5 < a3 && v7 >= 8)
    {
      v14 = a4;
      do
      {
        v15 = *v14;
        v16 = *v5;
        v17 = v15;
        objc_msgSend(v16, sel_frame);
        v18 = CGRectGetMinX(v36);
        objc_msgSend(v17, sel_frame);
        v19 = CGRectGetMinX(v37);

        if (v18 >= v19)
        {
          if (v6 != v14)
            *v6 = *v14;
          v34 = ++v14;
          v20 = v5;
        }
        else
        {
          v20 = v5 + 1;
          if (v6 < v5 || v6 >= v20 || v6 != v5)
            *v6 = *v5;
        }
        ++v6;
        if (v14 >= v13)
          break;
        v5 = v20;
      }
      while ((unint64_t)v20 < a3);
      v35 = v6;
    }
LABEL_45:
    sub_1BACAB208((void **)&v35, (const void **)&v34, &v33);
    return 1;
  }
LABEL_46:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB1E3630()
{
  _QWORD *v0;
  double v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  char *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v1 = MEMORY[0x1E0C80A78]((*(_QWORD *)(*(_QWORD *)(*(_QWORD *)((*MEMORY[0x1E0DEEDD8] & *v0)
                                                              + class metadata base offset for FormatCollectionViewLayout)
                                                  - 8)
                                      + 64)
                          + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)((char *)v0 + *(_QWORD *)(v2 + 24)) = 0;
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*(_QWORD *)(v4 + 1616) + (*v3 & *v0) + 32)) = 0x3FD3333333333333;
  v6 = *v5;
  *(_QWORD *)((char *)v0 + *(_QWORD *)(*(_QWORD *)(v4 + 1616) + (*v3 & *v0) + 40)) = 0;
  *((_BYTE *)v0 + *(_QWORD *)(*(_QWORD *)(v4 + 1616) + (*v3 & *v0) + 16)) = v6;
  (*(void (**)(char *, uint64_t, double))(v7 + 16))((char *)&v11 - v8, v9, v1);
  return sub_1BB870D38();
}

uint64_t sub_1BB1E371C()
{
  objc_class *v0;
  id v1;

  v1 = objc_allocWithZone(v0);
  return sub_1BB1E3630();
}

void _s8NewsFeed26FormatCollectionViewLayoutC5coderACyxGSgSo7NSCoderC_tcfc_0()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)MEMORY[0x1E0DEEDD8];
  *(_QWORD *)((char *)v0
            + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*MEMORY[0x1E0DEEDD8] & *v0) + 24)) = 0;
  *(_QWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*v1 & *v0) + 32)) = 0x3FD3333333333333;
  *(_QWORD *)((char *)v0 + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout + (*v1 & *v0) + 40)) = 0;

  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB1E3820(CGFloat a1, CGFloat a2)
{
  _QWORD *v2;
  __objc2_class_ro *v3;
  id v6;
  void *v7;
  double v8;
  double v9;
  CGFloat v10;
  double v11;
  CGFloat v12;
  double v13;
  double v14;
  unint64_t v15;
  uint64_t v16;
  double v17;
  double v18;
  double v19;
  uint64_t v20;
  double v21;
  id v22;
  void *v23;
  uint64_t v24;
  _QWORD *v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  CGRect v34;

  v6 = objc_msgSend(v2, sel_collectionView);
  if (!v6)
    return;
  v7 = v6;
  v8 = *(double *)((char *)v2
                 + *(_QWORD *)(class metadata base offset for FormatCollectionViewLayout
                             + (*MEMORY[0x1E0DEEDD8] & *v2)
                             + 40));
  objc_msgSend(v6, sel_bounds);
  v10 = v9;
  v12 = v11;
  objc_msgSend(v2, sel_collectionViewContentSize);
  v14 = v13;
  v34.origin.x = a1;
  v34.origin.y = a2;
  v34.size.width = v10;
  v34.size.height = v12;
  if (v14 - CGRectGetWidth(v34) <= a1)
  {

    return;
  }
  v15 = sub_1BB1E1D7C(v7);
  if (v15 >> 62)
  {
    v16 = sub_1BB873F30();
    if (v16)
      goto LABEL_5;
LABEL_28:

    swift_bridgeObjectRelease();
    return;
  }
  v16 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v16)
    goto LABEL_28;
LABEL_5:
  objc_msgSend(v7, sel_adjustedContentInset);
  v18 = v17;
  objc_msgSend(v7, sel_layoutMargins);
  v33 = MEMORY[0x1E0DEE9D8];
  if (v16 < 1)
  {
    __break(1u);
LABEL_30:
    v28 = sub_1BA85E318((unint64_t)v2);
    swift_release();
    goto LABEL_20;
  }
  v20 = 0;
  v21 = v18 + a1 + v19;
  v3 = &StubThumbnailProcessor;
  do
  {
    if ((v15 & 0xC000000000000001) != 0)
      v22 = (id)MEMORY[0x1BCCE4630](v20, v15);
    else
      v22 = *(id *)(v15 + 8 * v20 + 32);
    v23 = v22;
    objc_msgSend(v22, sel_frame);
    if (v8 <= a1)
    {
      if (v21 <= CGRectGetMinX(*(CGRect *)&v24))
      {
LABEL_7:
        sub_1BB873DB0();
        sub_1BB873DE0();
        sub_1BB873DEC();
        sub_1BB873DBC();
        goto LABEL_8;
      }
    }
    else if (v21 <= CGRectGetMaxX(*(CGRect *)&v24))
    {
      goto LABEL_7;
    }

LABEL_8:
    ++v20;
  }
  while (v16 != v20);
  swift_bridgeObjectRelease();
  v2 = (_QWORD *)v33;
  swift_bridgeObjectRetain();
  if (v33 < 0)
    goto LABEL_30;
  v28 = (_QWORD *)v33;
  if ((v33 & 0x4000000000000000) != 0)
    goto LABEL_30;
LABEL_20:
  v33 = (uint64_t)v28;
  sub_1BB1E2A14(&v33);
  swift_release();
  v29 = v33;
  if (v33 < 0 || (v33 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    v32 = sub_1BB873F30();
    swift_release();
    if (!v32)
      goto LABEL_32;
LABEL_23:
    if ((v29 & 0xC000000000000001) != 0)
    {
      v30 = (id)MEMORY[0x1BCCE4630](0, v29);
    }
    else
    {
      if (!*(_QWORD *)(v29 + 16))
      {
        __break(1u);
        swift_release();
        __break(1u);
        return;
      }
      v30 = *(id *)(v29 + 32);
    }
    v31 = v30;
    swift_release();
    objc_msgSend(v31, *(SEL *)&v3[26].flags);
    objc_msgSend(v7, sel_adjustedContentInset);
    objc_msgSend(v7, sel_layoutMargins);

    return;
  }
  if (*(_QWORD *)(v33 + 16))
    goto LABEL_23;
LABEL_32:

  swift_release();
}

void sub_1BB1E3B84()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1BB1E3BB0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FormatCollectionViewLayout(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FormatCollectionViewLayout);
}

uint64_t method lookup function for FormatCollectionViewLayout()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatCollectionViewLayout.__allocating_init(blueprintLayoutCollectionProvider:scrollingTrait:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(class metadata base offset for FormatCollectionViewLayout + v0 + 48))();
}

ValueMetadata *type metadata accessor for DebugFormatTestSummaryItem()
{
  return &type metadata for DebugFormatTestSummaryItem;
}

ValueMetadata *type metadata accessor for DebugFormatTestSummary()
{
  return &type metadata for DebugFormatTestSummary;
}

ValueMetadata *type metadata accessor for FormatPaywallBinding()
{
  return &type metadata for FormatPaywallBinding;
}

uint64_t sub_1BB1E3C68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  int64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  _BYTE *v19;
  uint64_t v20;
  BOOL v21;
  BOOL *v22;
  uint64_t v23;
  char *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD v28[2];
  char *v29;
  const char *v30;
  const char *v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (_QWORD *)((char *)v28 - v6);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v28[1] = v2;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v8, 0);
    v9 = v33;
    v10 = (unsigned __int8 *)(a1 + 32);
    v30 = "Is Multiple Offers Available";
    v31 = "Is Web Access Available";
    v29 = "ollectionViewLayout.swift";
    do
    {
      v12 = *v10++;
      v11 = v12;
      if (v12)
      {
        if (v11 == 1)
        {
          v13 = *(_BYTE *)(v32 + 49);
          v14 = type metadata accessor for FormatInspectionItem(0);
          v15 = (char *)v7 + *(int *)(v14 + 24);
          *v15 = v13;
          v16 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v15, 0, 1, v16);
          *v7 = 0xD000000000000017;
          v17 = (unint64_t)v30;
        }
        else
        {
          v21 = *(_QWORD *)(v32 + 56) > 1;
          v14 = type metadata accessor for FormatInspectionItem(0);
          v22 = (BOOL *)v7 + *(int *)(v14 + 24);
          *v22 = v21;
          v23 = type metadata accessor for FormatInspectionItem.Value(0);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(BOOL *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v22, 0, 1, v23);
          *v7 = 0xD00000000000001CLL;
          v17 = (unint64_t)v29;
        }
      }
      else
      {
        v18 = *(_BYTE *)(v32 + 48);
        v14 = type metadata accessor for FormatInspectionItem(0);
        v19 = (char *)v7 + *(int *)(v14 + 24);
        *v19 = v18;
        v20 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
        *v7 = 0xD00000000000001DLL;
        v17 = (unint64_t)v31;
      }
      v7[1] = v17 | 0x8000000000000000;
      v7[2] = 0;
      v7[3] = 0;
      v24 = (char *)v7 + *(int *)(v14 + 28);
      *(_QWORD *)v24 = 0;
      *((_QWORD *)v24 + 1) = 0;
      v24[16] = -1;
      type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v7, 0, 1, v14);
      v33 = v9;
      v26 = *(_QWORD *)(v9 + 16);
      v25 = *(_QWORD *)(v9 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_1BAC79E1C(v25 > 1, v26 + 1, 1);
        v9 = v33;
      }
      *(_QWORD *)(v9 + 16) = v26 + 1;
      sub_1BA89EB4C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26);
      --v8;
    }
    while (v8);
  }
  return v9;
}

uint64_t sub_1BB1E3F74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v2 = v1;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9750, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - v6;
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x1E0DEE9D8];
  if (v8)
  {
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v8, 0);
    v9 = v17;
    v10 = (char *)(a1 + 32);
    while (1)
    {
      v11 = *v10++;
      v16 = v11;
      sub_1BB47895C((uint64_t)&v16);
      if (v2)
        break;
      v2 = 0;
      v17 = v9;
      v13 = *(_QWORD *)(v9 + 16);
      v12 = *(_QWORD *)(v9 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BAC79E1C(v12 > 1, v13 + 1, 1);
        v9 = v17;
      }
      *(_QWORD *)(v9 + 16) = v13 + 1;
      sub_1BA89EB4C((uint64_t)v7, v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13);
      if (!--v8)
        return v9;
    }
    swift_release();
  }
  return v9;
}

_QWORD *sub_1BB1E40D4(uint64_t a1)
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _OWORD v17[2];
  uint64_t v18;
  _OWORD v19[2];
  uint64_t v20;
  _OWORD v21[15];
  uint64_t v22;

  v1 = *(_OWORD *)(a1 + 208);
  v21[12] = *(_OWORD *)(a1 + 192);
  v21[13] = v1;
  v21[14] = *(_OWORD *)(a1 + 224);
  v22 = *(_QWORD *)(a1 + 240);
  v2 = *(_OWORD *)(a1 + 144);
  v21[8] = *(_OWORD *)(a1 + 128);
  v21[9] = v2;
  v3 = *(_OWORD *)(a1 + 176);
  v21[10] = *(_OWORD *)(a1 + 160);
  v21[11] = v3;
  v4 = *(_OWORD *)(a1 + 80);
  v21[4] = *(_OWORD *)(a1 + 64);
  v21[5] = v4;
  v5 = *(_OWORD *)(a1 + 112);
  v21[6] = *(_OWORD *)(a1 + 96);
  v21[7] = v5;
  v6 = *(_OWORD *)(a1 + 16);
  v21[0] = *(_OWORD *)a1;
  v21[1] = v6;
  v7 = *(_OWORD *)(a1 + 48);
  v21[2] = *(_OWORD *)(a1 + 32);
  v21[3] = v7;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BACB5C48((uint64_t)v21);
  v9 = sub_1BB1E3C68((uint64_t)&unk_1E724F990, (uint64_t)v21);
  sub_1BA93EC1C((uint64_t)v21);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v9, v17);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v10 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v10;
  *(_QWORD *)(v10 + 48) = v18;
  v11 = v17[1];
  *(_OWORD *)(v10 + 16) = v17[0];
  *(_OWORD *)(v10 + 32) = v11;
  sub_1BACB5C48((uint64_t)v21);
  v12 = sub_1BB1E3F74((uint64_t)&unk_1E724F960);
  sub_1BA93EC1C((uint64_t)v21);
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v12, v19);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v13 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v13;
  *(_QWORD *)(v13 + 48) = v20;
  v14 = v19[1];
  *(_OWORD *)(v13 + 16) = v19[0];
  *(_OWORD *)(v13 + 32) = v14;
  v15 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v15;
}

uint64_t sub_1BB1E42DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FormatAuxiliaryViewRequirementProviding.unionOf(providers:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  _QWORD v12[3];
  uint64_t v13;
  uint64_t v14;
  _BYTE v15[40];

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return MEMORY[0x1E0DEE9E8];
  v2 = a1 + 32;
  swift_bridgeObjectRetain();
  v3 = MEMORY[0x1E0DEE9E8];
  do
  {
    sub_1BA67D934(v2, (uint64_t)v15);
    sub_1BA67D934((uint64_t)v15, (uint64_t)&v10);
    if (v11)
    {
      sub_1BA4CECCC(&v10, (uint64_t)v12);
      v5 = v13;
      v6 = v14;
      __swift_project_boxed_opaque_existential_1(v12, v13);
      v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      swift_bridgeObjectRetain();
      v8 = v7(v5, v6);
      v4 = sub_1BA67DB80(v8, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
    }
    else
    {
      sub_1BA67D9E0((uint64_t)&v10);
      swift_bridgeObjectRetain();
      v4 = v3;
    }
    sub_1BA67D9E0((uint64_t)v15);
    swift_bridgeObjectRelease();
    v2 += 40;
    v3 = v4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v4;
}

NewsFeed::FormatAuxiliaryViewRequirement_optional __swiftcall FormatAuxiliaryViewRequirement.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::FormatAuxiliaryViewRequirement_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 6;
  if (v3 < 6)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t FormatAuxiliaryViewRequirement.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1E44AC
                                                            + 4 * asc_1BB8F7CA0[*v0]))(0x746E656964617267, 0xE800000000000000);
}

uint64_t sub_1BB1E44AC()
{
  return 0x72476C6169646172;
}

uint64_t sub_1BB1E44D0()
{
  return 0x65695674696C7073;
}

uint64_t sub_1BB1E44EC()
{
  return 0x6567616D69;
}

uint64_t sub_1BB1E4500()
{
  return 1633905005;
}

uint64_t sub_1BB1E4510()
{
  return 0x66456C6175736976;
}

void sub_1BB1E4530(char *a1)
{
  sub_1BB7F03DC(*a1);
}

void sub_1BB1E453C()
{
  char *v0;

  sub_1BA8D4664(*v0);
}

void sub_1BB1E4544()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB1E4580()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB1E4618(uint64_t a1)
{
  char *v1;

  sub_1BA67E074(a1, *v1);
}

NewsFeed::FormatAuxiliaryViewRequirement_optional sub_1BB1E4620(Swift::String *a1)
{
  return FormatAuxiliaryViewRequirement.init(rawValue:)(*a1);
}

uint64_t sub_1BB1E462C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB1E465C + 4 * byte_1BB8F7CAC[*v0]))();
}

void sub_1BB1E465C(char *a1@<X8>)
{
  strcpy(a1, "radialGradient");
  a1[15] = -18;
}

void sub_1BB1E4684(_QWORD *a1@<X8>)
{
  *a1 = 0x65695674696C7073;
  a1[1] = 0xE900000000000077;
}

void sub_1BB1E46A4(_QWORD *a1@<X8>)
{
  *a1 = 0x6567616D69;
  a1[1] = 0xE500000000000000;
}

void sub_1BB1E46BC(_QWORD *a1@<X8>)
{
  *a1 = 1633905005;
  a1[1] = 0xE400000000000000;
}

void sub_1BB1E46D0(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "visualEffect");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

uint64_t sub_1BB1E46F4()
{
  sub_1BB1E4870();
  return sub_1BB872D60();
}

uint64_t sub_1BB1E4750()
{
  sub_1BB1E4870();
  return sub_1BB872D0C();
}

uint64_t storeEnumTagSinglePayload for FormatAuxiliaryViewRequirement(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1BB1E47E8 + 4 * byte_1BB8F7CB7[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1BB1E481C + 4 * byte_1BB8F7CB2[v4]))();
}

uint64_t sub_1BB1E481C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1E4824(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1E482CLL);
  return result;
}

uint64_t sub_1BB1E4838(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1E4840);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1BB1E4844(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1E484C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatAuxiliaryViewRequirement()
{
  return &type metadata for FormatAuxiliaryViewRequirement;
}

uint64_t dispatch thunk of FormatAuxiliaryViewRequirementProviding.auxViewRequirements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unint64_t sub_1BB1E4870()
{
  unint64_t result;

  result = qword_1EF2BD818;
  if (!qword_1EF2BD818)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatAuxiliaryViewRequirement, &type metadata for FormatAuxiliaryViewRequirement);
    atomic_store(result, (unint64_t *)&qword_1EF2BD818);
  }
  return result;
}

uint64_t sub_1BB1E48B4()
{
  uint64_t v0;

  sub_1BAA5AE40(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(unsigned int *)(v0 + 56) | ((unint64_t)*(unsigned __int16 *)(v0 + 60) << 32));
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatDerivedDataBindingNode()
{
  return objc_opt_self();
}

uint64_t FeedPluginFactoryContext.plugin(identifier:)()
{
  return sub_1BB86F7FC();
}

id FeedPluginFactoryContext.feed.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  char v4;
  id v5;
  id v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(void **)(v1 + 16);
  v7 = *(id *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  v5 = v3;
  return v7;
}

void FeedPluginFactoryContext.feedKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

uint64_t FeedPluginFactoryContext.feedContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v2;
  char v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  id v15;
  id v16;

  v2 = *(void **)(v1 + 40);
  v3 = *(_BYTE *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 49);
  v5 = *(_BYTE *)(v1 + 50);
  v6 = *(_BYTE *)(v1 + 51);
  v7 = *(_QWORD *)(v1 + 56);
  v8 = *(_QWORD *)(v1 + 64);
  v9 = *(_QWORD *)(v1 + 72);
  v10 = *(_QWORD *)(v1 + 80);
  v11 = *(_BYTE *)(v1 + 88);
  v13 = *(void **)(v1 + 96);
  v12 = *(_QWORD *)(v1 + 104);
  v14 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4;
  *(_BYTE *)(a1 + 10) = v5;
  *(_BYTE *)(a1 + 11) = v6;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v8;
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 48) = v11;
  *(_QWORD *)(a1 + 56) = v13;
  *(_QWORD *)(a1 + 64) = v12;
  *(_QWORD *)(a1 + 72) = v14;
  v15 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA653B2C(v9, v10);
  v16 = v13;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t FeedPluginFactoryContext.feedCursorContainer.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 120);
  swift_retain();
  return v1;
}

uint64_t FeedPluginFactoryContext.pluginManager.getter()
{
  return swift_retain();
}

id FeedPluginFactoryContext.layoutOptionsProvider.getter()
{
  uint64_t v0;

  return *(id *)(v0 + 136);
}

void sub_1BB1E4A70(uint64_t a1)
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)(*(_QWORD *)(a1 + 80) - 1) >= 3)
    swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

}

uint64_t sub_1BB1E4B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  id v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(void **)(a2 + 16);
  v6 = *(void **)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  v7 = *(void **)(a2 + 40);
  *(_QWORD *)(a1 + 40) = v7;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  v9 = (_QWORD *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  v11 = v5;
  v12 = v6;
  v13 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((unint64_t)(v10 - 1) >= 3)
  {
    *(_QWORD *)(a1 + 72) = *v9;
    *(_QWORD *)(a1 + 80) = v10;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v9;
  }
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v14 = *(void **)(a2 + 96);
  v15 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v14;
  *(_QWORD *)(a1 + 104) = v15;
  v16 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v16;
  v18 = *(_QWORD *)(a2 + 128);
  v17 = *(void **)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v18;
  *(_QWORD *)(a1 + 136) = v17;
  v19 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v20 = v17;
  return a1;
}

uint64_t sub_1BB1E4C14(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  unint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(void **)(a2 + 16);
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v4;
  v6 = v4;

  v7 = *(void **)(a2 + 24);
  v8 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = v7;
  v9 = v7;

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v10 = *(void **)(a2 + 40);
  v11 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = v10;
  v12 = v10;

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 80) - 1;
  if ((unint64_t)(*(_QWORD *)(a1 + 80) - 1) >= 3)
  {
    if (v13 >= 3)
    {
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1BB1E4E14(a1 + 72);
    goto LABEL_6;
  }
  if (v13 < 3)
  {
LABEL_6:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v14 = *(void **)(a1 + 96);
  v15 = *(void **)(a2 + 96);
  *(_QWORD *)(a1 + 96) = v15;
  v16 = v15;

  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_retain();
  swift_release();
  v17 = *(void **)(a2 + 136);
  v18 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = v17;
  v19 = v17;

  return a1;
}

uint64_t sub_1BB1E4E14(uint64_t a1)
{
  uint64_t v2;

  sub_1BA76D834();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB1E4E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  void *v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);

  v6 = *(void **)(a1 + 24);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  v7 = *(void **)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);

  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_BYTE *)(a1 + 50) = *(_BYTE *)(a2 + 50);
  *(_BYTE *)(a1 + 51) = *(_BYTE *)(a2 + 51);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = (_QWORD *)(a2 + 72);
  if ((unint64_t)(*(_QWORD *)(a1 + 80) - 1) >= 3)
  {
    v9 = *(_QWORD *)(a2 + 80);
    if ((unint64_t)(v9 - 1) >= 3)
    {
      *(_QWORD *)(a1 + 72) = *v8;
      *(_QWORD *)(a1 + 80) = v9;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1BB1E4E14(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v8;
LABEL_6:
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  v10 = *(void **)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);

  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_release();
  v11 = *(void **)(a1 + 136);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);

  return a1;
}

uint64_t type metadata accessor for FeedPluginFactoryContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedPluginFactoryContext);
}

uint64_t sub_1BB1E4FCC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[4];

  v22[1] = a1;
  v2 = sub_1BB871398();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v22 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v22 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v22 - v13;
  v15 = *(_BYTE *)(v1 + 104);
  v16 = *(_QWORD *)(v1 + 112);
  if ((*(_BYTE *)(v1 + 48) & 1) != 0)
    sub_1BB871380();
  else
    sub_1BB87138C();
  v17 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
  v17(v14, v11, v2);
  if ((v15 & 1) != 0)
    sub_1BB871380();
  else
    sub_1BB87138C();
  v17(v8, v5, v2);
  v18 = *(_QWORD *)(v16 + 16);
  if (v18)
  {
    v22[3] = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BB873DD4();
    v19 = 0;
    do
    {
      v20 = v19 + 1;
      v22[2] = *(_QWORD *)(v16 + 8 * v19 + 32);
      FormatColor.color.getter();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v19 = v20;
    }
    while (v18 != v20);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return sub_1BB870A50();
}

__n128 FormatRadialGradient.from.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 48);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  result = *(__n128 *)(v1 + 32);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 48) = v2;
  return result;
}

__n128 FormatRadialGradient.to.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __int128 v3;
  __n128 result;

  v2 = *(_BYTE *)(v1 + 104);
  v3 = *(_OWORD *)(v1 + 72);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 16) = v3;
  result = *(__n128 *)(v1 + 88);
  *(__n128 *)(a1 + 32) = result;
  *(_BYTE *)(a1 + 48) = v2;
  return result;
}

uint64_t FormatRadialGradient.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatRadialGradient.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1E5248@<X0>(_QWORD *a1@<X0>, __int128 *a2@<X8>)
{
  return FormatRadialGradient.init(from:)(a1, a2);
}

uint64_t sub_1BB1E525C(_QWORD *a1)
{
  return FormatRadialGradient.encode(to:)(a1);
}

uint64_t sub_1BB1E5274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  __int128 *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  void *v21;
  uint64_t v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;

  v34 = a1;
  v4 = sub_1BB871398();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - v8;
  v10 = sub_1BB870A80();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = v2[5];
  v39 = v2[4];
  v40 = v14;
  v41 = v2[6];
  v15 = v2[1];
  v35 = *v2;
  v36 = v15;
  v16 = v2[3];
  v37 = v2[2];
  v38 = v16;
  v17 = *((_QWORD *)v2 + 15);
  v42 = *((_QWORD *)v2 + 14);
  v43 = v17;
  sub_1BB1E4FCC((uint64_t)v13);
  sub_1BB870A5C();
  sub_1BB870A74();
  v18 = sub_1BB870A68();
  if (!(v18 >> 62))
  {
    v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    v33 = v17;
    if (v19)
      goto LABEL_3;
LABEL_11:
    swift_bridgeObjectRelease();
LABEL_12:
    swift_bridgeObjectRetain();
    sub_1BB870A50();
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v19 = sub_1BB873F30();
  v33 = v17;
  if (!v19)
    goto LABEL_11;
LABEL_3:
  *(_QWORD *)&v35 = MEMORY[0x1E0DEE9D8];
  result = sub_1BB873DD4();
  if ((v19 & 0x8000000000000000) == 0)
  {
    v27 = v13;
    v28 = v11;
    v29 = v9;
    v30 = v10;
    v31 = v6;
    v32 = a2;
    v21 = (void *)objc_opt_self();
    v22 = 0;
    do
    {
      if ((v18 & 0xC000000000000001) != 0)
        v23 = (id)MEMORY[0x1BCCE4630](v22, v18);
      else
        v23 = *(id *)(v18 + 8 * v22 + 32);
      v24 = v23;
      ++v22;
      v25 = objc_msgSend(v21, sel_traitCollectionWithUserInterfaceStyle_, v34);
      v26 = objc_msgSend(v24, sel_resolvedColorWithTraitCollection_, v25);

      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
    }
    while (v19 != v22);
    swift_bridgeObjectRelease();
    v10 = v30;
    v11 = v28;
    v13 = v27;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t FormatRadialGradient.auxViewRequirements.getter()
{
  return sub_1BA862CF8((uint64_t)&unk_1E7270920);
}

uint64_t sub_1BB1E554C()
{
  return sub_1BA862CF8((uint64_t)&unk_1E724FD68);
}

uint64_t _s8NewsFeed20FormatRadialGradientV2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  char v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  char v32;

  v2 = *((_BYTE *)a1 + 48);
  v3 = *((_QWORD *)a1 + 7);
  v4 = *((_QWORD *)a1 + 8);
  v23 = *((_QWORD *)a1 + 10);
  v24 = *((_QWORD *)a1 + 9);
  v21 = *((_QWORD *)a1 + 12);
  v22 = *((_QWORD *)a1 + 11);
  v5 = *((_BYTE *)a1 + 104);
  v7 = *((_QWORD *)a1 + 14);
  v6 = *((_QWORD *)a1 + 15);
  v8 = *((_BYTE *)a2 + 48);
  v9 = *((_QWORD *)a2 + 7);
  v10 = *((_QWORD *)a2 + 8);
  v12 = *((_QWORD *)a2 + 9);
  v11 = *((_QWORD *)a2 + 10);
  v13 = *((_QWORD *)a2 + 11);
  v14 = *((_QWORD *)a2 + 12);
  v15 = *((_BYTE *)a2 + 104);
  v17 = *((_QWORD *)a2 + 14);
  v16 = *((_QWORD *)a2 + 15);
  v18 = a1[1];
  v29 = *a1;
  v30 = v18;
  v31 = a1[2];
  v32 = v2;
  v19 = a2[1];
  v25 = *a2;
  v26 = v19;
  v27 = a2[2];
  v28 = v8;
  if (_s8NewsFeed26FormatRadialGradientCircleV2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v25))
  {
    *(_QWORD *)&v29 = v3;
    *((_QWORD *)&v29 + 1) = v4;
    *(_QWORD *)&v30 = v24;
    *((_QWORD *)&v30 + 1) = v23;
    *(_QWORD *)&v31 = v22;
    *((_QWORD *)&v31 + 1) = v21;
    v32 = v5;
    *(_QWORD *)&v25 = v9;
    *((_QWORD *)&v25 + 1) = v10;
    *(_QWORD *)&v26 = v12;
    *((_QWORD *)&v26 + 1) = v11;
    *(_QWORD *)&v27 = v13;
    *((_QWORD *)&v27 + 1) = v14;
    v28 = v15;
    if (_s8NewsFeed26FormatRadialGradientCircleV2eeoiySbAC_ACtFZ_0((uint64_t)&v29, (uint64_t)&v25)
      && (sub_1BA891D34(v7, v17) & 1) != 0)
    {
      if (v6)
      {
        if (v16 && sub_1BA892D54(v6, v16))
          return 1;
      }
      else if (!v16)
      {
        return 1;
      }
    }
  }
  return 0;
}

_QWORD *sub_1BB1E56A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  __int128 v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  _QWORD *v51;
  uint64_t v53;
  uint64_t inited;
  __int128 v55;
  __int128 v56;
  unint64_t v57;
  uint64_t v58;
  void (*v59)(_QWORD *, _QWORD, uint64_t);
  uint64_t v60;
  uint64_t v61;
  _QWORD v62[16];
  _OWORD v63[3];
  char v64;
  uint64_t v65;
  _OWORD v66[3];
  char v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  char v71;
  _OWORD v72[2];
  uint64_t v73;
  _OWORD v74[2];
  uint64_t v75;
  _BYTE v76[128];
  _OWORD v77[3];
  char v78;

  sub_1BA8C88C8(0);
  v58 = v2;
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA5193C4(a1, (uint64_t)v76, (uint64_t (*)(_QWORD))sub_1BB1E60D4);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v6);
  v7 = *(_QWORD *)(v3 + 72);
  v8 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v61 = v7;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87FC80;
  v57 = v8;
  v10 = (_QWORD *)(v9 + v8);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v6);
  v11 = swift_initStackObject();
  v56 = xmmword_1BB87CE70;
  *(_OWORD *)(v11 + 16) = xmmword_1BB87CE70;
  sub_1BA5193C4((uint64_t)v76, (uint64_t)v77, (uint64_t (*)(_QWORD))sub_1BB1E60D4);
  if (sub_1BB1E6128((uint64_t)v77) == 1)
  {
    v12 = -1;
    v13 = 0uLL;
    v14 = 0uLL;
    v15 = 0uLL;
  }
  else
  {
    v13 = v77[0];
    v14 = v77[1];
    v15 = v77[2];
    v12 = v78;
  }
  v66[0] = v13;
  v66[1] = v14;
  v66[2] = v15;
  v67 = v12;
  v16 = sub_1BB0A13B0((uint64_t)v66);
  *(_QWORD *)(v11 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v11 + 64) = &off_1E7335C38;
  *(_QWORD *)(v11 + 32) = v16;
  v17 = sub_1BA9747FC(v11);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v18 = sub_1BB6DF010(v17);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x726943206D6F7246, 0xEB00000000656C63, (uint64_t)v18, 0, 0, v10);
  v19 = type metadata accessor for FormatInspectionItem(0);
  v59 = *(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v60 = v19;
  v59(v10, 0, 1);
  v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = v56;
  sub_1BA5193C4((uint64_t)v76, (uint64_t)v66, (uint64_t (*)(_QWORD))sub_1BB1E60D4);
  if (sub_1BB1E6128((uint64_t)v66) == 1)
  {
    v21 = -1;
    v22 = 0uLL;
    v23 = 0uLL;
    v24 = 0uLL;
  }
  else
  {
    v24 = v68;
    v22 = v69;
    v23 = v70;
    v21 = v71;
  }
  v25 = v10;
  v26 = (_QWORD *)((char *)v10 + v61);
  v63[0] = v24;
  v63[1] = v22;
  v63[2] = v23;
  v64 = v21;
  v27 = sub_1BB0A13B0((uint64_t)v63);
  *(_QWORD *)(v20 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v20 + 64) = &off_1E7335C38;
  *(_QWORD *)(v20 + 32) = v27;
  v28 = sub_1BA9747FC(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v29 = sub_1BB6DF010(v28);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x6C63726943206F54, 0xE900000000000065, (uint64_t)v29, 0, 0, v26);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v59)(v26, 0, 1, v60);
  sub_1BA5193C4((uint64_t)v76, (uint64_t)v63, (uint64_t (*)(_QWORD))sub_1BB1E60D4);
  v30 = 0;
  if (sub_1BB1E6128((uint64_t)v63) != 1)
  {
    v30 = v65;
    swift_bridgeObjectRetain();
  }
  v31 = (_QWORD *)inited;
  v32 = inited + 32;
  v33 = (_QWORD *)((char *)v25 + 2 * v61);
  sub_1BAAFCF2C(0x6E6F697461636F4CLL, 0xE900000000000073, v30, v33);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v59)(v33, 0, 1, v60);
  sub_1BAF89090(0x47206C6169646152, 0xEF746E6569646172, 0, 0, v9, v72);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v31[7] = &type metadata for FormatInspectionGroup;
  v31[8] = &off_1E72D2F60;
  v34 = swift_allocObject();
  v31[4] = v34;
  *(_QWORD *)(v34 + 48) = v73;
  v35 = v72[1];
  *(_OWORD *)(v34 + 16) = v72[0];
  *(_OWORD *)(v34 + 32) = v35;
  sub_1BA5193C4((uint64_t)v76, (uint64_t)v62, (uint64_t (*)(_QWORD))sub_1BB1E60D4);
  v36 = sub_1BB1E6128((uint64_t)v62);
  v37 = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  if (v36 != 1)
  {
    v38 = v62[14];
    swift_bridgeObjectRetain();
  }
  v39 = *(_QWORD *)(v38 + 16);
  if (v39)
  {
    v58 = v38;
    v53 = v32;
    *(_QWORD *)&v74[0] = v37;
    *(_QWORD *)&v56 = v39;
    sub_1BAC79E1C(0, v39, 0);
    v37 = *(_QWORD *)&v74[0];
    v40 = type metadata accessor for FormatInspectionItem.Value(0);
    v41 = 0;
    v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56);
    v55 = xmmword_1BB89D8A0;
    do
    {
      v43 = v60;
      v44 = &v5[*(int *)(v60 + 24)];
      *(_QWORD *)v44 = *(_QWORD *)(v58 + 8 * v41 + 32);
      swift_storeEnumTagMultiPayload();
      v42(v44, 0, 1, v40);
      *(_OWORD *)v5 = v55;
      *((_QWORD *)v5 + 2) = 0;
      *((_QWORD *)v5 + 3) = 0;
      v45 = &v5[*(int *)(v43 + 28)];
      *(_QWORD *)v45 = 0;
      *((_QWORD *)v45 + 1) = 0;
      v45[16] = -1;
      ((void (*)(char *, _QWORD, uint64_t, uint64_t))v59)(v5, 0, 1, v43);
      *(_QWORD *)&v74[0] = v37;
      v46 = *(_QWORD *)(v37 + 16);
      v47 = *(_QWORD *)(v37 + 24);
      swift_retain();
      if (v46 >= v47 >> 1)
      {
        sub_1BAC79E1C(v47 > 1, v46 + 1, 1);
        v37 = *(_QWORD *)&v74[0];
      }
      ++v41;
      *(_QWORD *)(v37 + 16) = v46 + 1;
      sub_1BA5193C4((uint64_t)v5, v37 + v57 + v46 * v61, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
    }
    while ((_QWORD)v56 != v41);
  }
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x73726F6C6F43, 0xE600000000000000, 0, 0, v37, v74);
  swift_bridgeObjectRelease();
  v48 = inited;
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v48 + 104) = &off_1E72D2F60;
  v49 = swift_allocObject();
  *(_QWORD *)(v48 + 72) = v49;
  *(_QWORD *)(v49 + 48) = v75;
  v50 = v74[1];
  *(_OWORD *)(v49 + 16) = v74[0];
  *(_OWORD *)(v49 + 32) = v50;
  v51 = sub_1BB6DF010(v48);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v51;
}

unint64_t sub_1BB1E5D90(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1E5DB4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1E5DB4()
{
  unint64_t result;

  result = qword_1EF2BD8C8;
  if (!qword_1EF2BD8C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradient, &type metadata for FormatRadialGradient);
    atomic_store(result, (unint64_t *)&qword_1EF2BD8C8);
  }
  return result;
}

unint64_t sub_1BB1E5DF8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE82840();
  a1[2] = sub_1BAEF38AC();
  result = sub_1BB1E5E2C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1E5E2C()
{
  unint64_t result;

  result = qword_1EF2BD8D0;
  if (!qword_1EF2BD8D0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRadialGradient, &type metadata for FormatRadialGradient);
    atomic_store(result, (unint64_t *)&qword_1EF2BD8D0);
  }
  return result;
}

uint64_t destroy for FormatRadialGradient()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatRadialGradient(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v4 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatRadialGradient(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(_OWORD *)(a2 + 16);
  v5 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 72);
  v7 = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = v7;
  *(_OWORD *)(a1 + 72) = v6;
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatRadialGradient(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatRadialGradient(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 112);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatRadialGradient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 112) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatRadialGradient()
{
  return &type metadata for FormatRadialGradient;
}

void sub_1BB1E60D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BDFF0)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BDFF0);
  }
}

uint64_t sub_1BB1E6128(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 112);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t sub_1BB1E6140()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t FeedCursorCommandContext.init<A>(cursorContainer:identifier:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (**a6)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  unint64_t v17;
  uint64_t (*v18)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t (**v22)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t (**v25)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v26;

  v25 = a6;
  v26 = a3;
  v24 = a2;
  v9 = type metadata accessor for FeedCursorTrackerSnapshot(0, a4, a5, a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v23 - v14;
  sub_1BA819AE4(a1);
  swift_retain();
  FeedCursorTracker.snapshot()((uint64_t)v15);
  swift_release();
  v16 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v16(v12, v15, v9);
  v17 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v18 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))swift_allocObject();
  *((_QWORD *)v18 + 2) = a4;
  *((_QWORD *)v18 + 3) = a5;
  *((_QWORD *)v18 + 4) = a1;
  result = ((uint64_t (*)(char *, char *, uint64_t))v16)((char *)v18 + v17, v12, v9);
  v20 = (_QWORD *)((char *)v18 + ((v11 + v17 + 7) & 0xFFFFFFFFFFFFFFF8));
  v21 = v26;
  *v20 = v24;
  v20[1] = v21;
  v22 = v25;
  *v25 = sub_1BB1E6598;
  v22[1] = v18;
  return result;
}

uint64_t sub_1BB1E62C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  id v19;
  _BYTE v22[40];
  _BYTE v23[40];

  type metadata accessor for DebugJournalViewController(0, a11, a12, a4);
  sub_1BA4C010C(a3, (uint64_t)v23);
  sub_1BA4C010C(a4, (uint64_t)v22);
  swift_retain();
  swift_bridgeObjectRetain();
  v19 = a1;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  return sub_1BB3EDCCC(v19, a2, (uint64_t)v23, (uint64_t)v22, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1BB1E63A8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 72);
  __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  return swift_deallocClassInstance();
}

void sub_1BB1E63EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (**a4)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1BB1E66FC(a1, a2, a4);
}

uint64_t sub_1BB1E6414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedCursorTrackerSnapshot(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4)- 8)+ 80);
  v6 = (v5 + 40) & ~v5;
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v4 + v6, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1E6598(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;

  v13 = v6[2];
  v14 = v6[3];
  v15 = *(_QWORD *)(type metadata accessor for FeedCursorTrackerSnapshot(0, v13, v14, a4) - 8);
  v16 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  v17 = (_QWORD *)((char *)v6 + ((*(_QWORD *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8));
  return sub_1BB1E62C8(a1, a2, a3, a4, a5, a6, v6[4], (uint64_t)v6 + v16, *v17, v17[1], v13, v14);
}

_QWORD *initializeBufferWithCopyOfBuffer for LayeredMediaFilter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

_QWORD *assignWithCopy for LayeredMediaFilter(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for LayeredMediaFilter(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FeedCursorCommandContext()
{
  return &type metadata for FeedCursorCommandContext;
}

void sub_1BB1E66FC(uint64_t a1, uint64_t a2, uint64_t (**a3)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  void *v10;
  id v11;

  v4 = v3;
  v5 = (void *)(*a3)(*(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), v3 + 72, v3 + 112, a1, a2);
  v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v5);

  __swift_project_boxed_opaque_existential_1((_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 40));
  v6 = (void *)sub_1BB86FFC4();
  if (v6
    && (v7 = v6, v8 = objc_msgSend(v6, sel_rootViewController), v7, v8))
  {
    v9 = (void *)sub_1BB8733CC();

    objc_msgSend(v9, sel_presentViewController_animated_completion_, v11, 1, 0);
    v10 = v9;
  }
  else
  {
    v10 = v11;
  }

}

uint64_t FormatPuzzleEmbedNodeStyle.selectors.getter()
{
  return swift_bridgeObjectRetain();
}

__n128 FormatPuzzleEmbedNodeStyle.init(identifier:class:cornerRadius:ignoresSmartInvertColors:selectors:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, __n128 *a5@<X4>, unsigned __int8 a6@<W5>, unint64_t a7@<X6>, __n128 *a8@<X8>)
{
  unsigned __int8 v8;
  __n128 result;

  v8 = a5[1].n128_u8[0];
  a8->n128_u64[0] = a1;
  a8->n128_u64[1] = a2;
  a8[1].n128_u64[0] = a3;
  a8[1].n128_u64[1] = a4;
  result = *a5;
  a8[2] = *a5;
  a8[3].n128_u8[0] = v8;
  a8[3].n128_u8[1] = a6;
  a8[3].n128_u64[1] = a7;
  return result;
}

uint64_t FormatPuzzleEmbedNodeStyle.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1BB1E6850@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char isUniquelyReferenced_nonNull_native;
  char v20;
  unint64_t v21;
  uint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  char *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  char v67;
  unint64_t v68;
  uint64_t v69;
  _BOOL8 v70;
  uint64_t v71;
  char v72;
  unint64_t v73;
  char v74;
  _QWORD *v75;
  char v76;
  char v77;
  unint64_t v78;
  uint64_t v79;
  _BOOL8 v80;
  uint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t *v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t v108;
  unint64_t v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char v115;
  char v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  char v120;
  uint64_t result;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  char v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  int64_t v142;
  uint64_t v143;
  uint64_t v144;
  char v145;
  char v146;
  char v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  char v151;
  uint64_t v152;
  _QWORD *v153;

  v5 = *v2;
  v4 = v2[1];
  v127 = v2[2];
  v6 = v2[4];
  v131 = v2[3];
  v7 = v2[5];
  v8 = *((unsigned __int8 *)v2 + 48);
  v125 = *((unsigned __int8 *)v2 + 49);
  v126 = *(_BYTE *)(a1 + 49);
  v132 = v2[7];
  v133 = *(_QWORD *)(a1 + 56);
  v128 = v6;
  v129 = v7;
  v130 = *((_BYTE *)v2 + 48);
  if (v8 >= 0xFE)
  {
    v128 = *(_QWORD *)(a1 + 32);
    v129 = *(_QWORD *)(a1 + 40);
    v130 = *(_BYTE *)(a1 + 48);
    v9 = v2[1];
    sub_1BA6E6C54(v128, v129, v130);
    v4 = v9;
  }
  v153 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v10 = v133;
  v11 = *(_QWORD *)(v132 + 16);
  if (__OFADD__(v11, *(_QWORD *)(v133 + 16)))
  {
LABEL_81:
    __break(1u);
LABEL_82:
    result = sub_1BB874560();
    __break(1u);
  }
  else
  {
    v142 = *(_QWORD *)(v133 + 16);
    v123 = v5;
    v124 = a2;
    v122 = v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v6, v7, v8);
    sub_1BB1E87F8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB8727C0();
    v149 = sub_1BA6E6D30(0, v11, 0, MEMORY[0x1E0DEE9D8]);
    v12 = *(_QWORD *)(v132 + 16);
    if (!v12)
      goto LABEL_20;
    swift_bridgeObjectRetain();
    v13 = (char *)(v132 + 65);
    do
    {
      v14 = *(_QWORD *)(v13 - 33);
      v15 = *(_QWORD *)(v13 - 25);
      v16 = *(_QWORD *)(v13 - 17);
      v17 = *(_QWORD *)(v13 - 9);
      v18 = *(v13 - 1);
      v147 = *v13;
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v16, v17, v18);
      swift_bridgeObjectRetain();
      v150 = v16;
      sub_1BA6E6C54(v16, v17, v18);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v21 = sub_1BA6E35A8(v14, v15);
      v22 = v153[2];
      v23 = (v20 & 1) == 0;
      v24 = v22 + v23;
      if (__OFADD__(v22, v23))
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
        goto LABEL_81;
      }
      v25 = v20;
      if (v153[3] >= v24)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          sub_1BB4C8E70();
      }
      else
      {
        sub_1BB4B9AF4(v24, isUniquelyReferenced_nonNull_native);
        v26 = sub_1BA6E35A8(v14, v15);
        if ((v25 & 1) != (v27 & 1))
          goto LABEL_82;
        v21 = v26;
      }
      v144 = v12;
      if ((v25 & 1) != 0)
      {
        v28 = v153[7] + 40 * v21;
        v29 = *(_QWORD *)(v28 + 16);
        v30 = *(_QWORD *)(v28 + 24);
        v31 = *(_BYTE *)(v28 + 32);
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v29, v30, v31);
        *(_QWORD *)v28 = v14;
        *(_QWORD *)(v28 + 8) = v15;
        *(_QWORD *)(v28 + 16) = v150;
        *(_QWORD *)(v28 + 24) = v17;
        *(_BYTE *)(v28 + 32) = v18;
        *(_BYTE *)(v28 + 33) = v147;
      }
      else
      {
        v153[(v21 >> 6) + 8] |= 1 << v21;
        v32 = (uint64_t *)(v153[6] + 16 * v21);
        *v32 = v14;
        v32[1] = v15;
        v33 = v153[7] + 40 * v21;
        *(_QWORD *)v33 = v14;
        *(_QWORD *)(v33 + 8) = v15;
        *(_QWORD *)(v33 + 16) = v150;
        *(_QWORD *)(v33 + 24) = v17;
        *(_BYTE *)(v33 + 32) = v18;
        *(_BYTE *)(v33 + 33) = v147;
        v34 = v153[2];
        v35 = __OFADD__(v34, 1);
        v36 = v34 + 1;
        if (v35)
          goto LABEL_77;
        v153[2] = v36;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = v149[2];
      v38 = v149[3];
      swift_bridgeObjectRetain();
      if (v37 >= v38 >> 1)
        v149 = sub_1BA6E6D30((_QWORD *)(v38 > 1), v37 + 1, 1, v149);
      v13 += 40;
      v149[2] = v37 + 1;
      v39 = &v149[2 * v37];
      v39[4] = v14;
      v39[5] = v15;
      swift_bridgeObjectRelease();
      sub_1BA6E6CC4(v150, v17, v18);
      v12 = v144 - 1;
    }
    while (v144 != 1);
    swift_bridgeObjectRelease();
    v10 = v133;
LABEL_20:
    v40 = sub_1BA6E6D30(0, v142, 0, MEMORY[0x1E0DEE9D8]);
    v41 = v40;
    v42 = *(_QWORD *)(v10 + 16);
    if (v42)
    {
      swift_bridgeObjectRetain();
      v43 = (char *)(v10 + 65);
      v44 = v41;
      while (1)
      {
        v49 = *(_QWORD *)(v43 - 33);
        v50 = *(_QWORD *)(v43 - 25);
        v51 = *(_QWORD *)(v43 - 17);
        v52 = *(_QWORD *)(v43 - 9);
        v53 = *(v43 - 1);
        v145 = *v43;
        v54 = v153[2];
        swift_bridgeObjectRetain();
        v151 = v53;
        sub_1BA6E6C54(v51, v52, v53);
        v148 = v44;
        v143 = v52;
        if (!v54)
          goto LABEL_37;
        swift_bridgeObjectRetain();
        v55 = sub_1BA6E35A8(v49, v50);
        if ((v56 & 1) == 0)
        {
          swift_bridgeObjectRelease();
LABEL_37:
          swift_bridgeObjectRetain();
          sub_1BA6E6C54(v51, v52, v53);
          swift_bridgeObjectRetain();
          v76 = swift_isUniquelyReferenced_nonNull_native();
          v78 = sub_1BA6E35A8(v49, v50);
          v79 = v153[2];
          v80 = (v77 & 1) == 0;
          v81 = v79 + v80;
          if (__OFADD__(v79, v80))
            goto LABEL_76;
          v82 = v77;
          if (v153[3] >= v81)
          {
            if ((v76 & 1) == 0)
              sub_1BB4C8E70();
          }
          else
          {
            sub_1BB4B9AF4(v81, v76);
            v83 = sub_1BA6E35A8(v49, v50);
            if ((v82 & 1) != (v84 & 1))
              goto LABEL_82;
            v78 = v83;
          }
          v141 = v42;
          if ((v82 & 1) != 0)
          {
            v85 = v51;
            v86 = v153[7] + 40 * v78;
            v87 = *(_QWORD *)(v86 + 16);
            v88 = *(_QWORD *)(v86 + 24);
            v89 = *(_BYTE *)(v86 + 32);
            swift_bridgeObjectRelease();
            sub_1BA6E6CC4(v87, v88, v89);
            *(_QWORD *)v86 = v49;
            *(_QWORD *)(v86 + 8) = v50;
            v90 = v52;
            v91 = v85;
            *(_QWORD *)(v86 + 16) = v85;
            *(_QWORD *)(v86 + 24) = v90;
            *(_BYTE *)(v86 + 32) = v151;
            *(_BYTE *)(v86 + 33) = v145;
          }
          else
          {
            v153[(v78 >> 6) + 8] |= 1 << v78;
            v92 = (uint64_t *)(v153[6] + 16 * v78);
            *v92 = v49;
            v92[1] = v50;
            v93 = v153[7] + 40 * v78;
            *(_QWORD *)v93 = v49;
            *(_QWORD *)(v93 + 8) = v50;
            *(_QWORD *)(v93 + 16) = v51;
            *(_QWORD *)(v93 + 24) = v52;
            *(_BYTE *)(v93 + 32) = v151;
            *(_BYTE *)(v93 + 33) = v145;
            v94 = v153[2];
            v35 = __OFADD__(v94, 1);
            v95 = v94 + 1;
            if (v35)
              goto LABEL_78;
            v91 = v51;
            v153[2] = v95;
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v44 = v148;
          v96 = v148[2];
          v97 = v148[3];
          swift_bridgeObjectRetain();
          v42 = v141;
          if (v96 >= v97 >> 1)
            v44 = sub_1BA6E6D30((_QWORD *)(v97 > 1), v96 + 1, 1, v148);
          v44[2] = v96 + 1;
          v98 = &v44[2 * v96];
          v98[4] = v49;
          v98[5] = v50;
          swift_bridgeObjectRelease();
          sub_1BA6E6CC4(v91, v143, v151);
          goto LABEL_24;
        }
        v57 = v153[7] + 40 * v55;
        v140 = *(_QWORD *)v57;
        v59 = *(_QWORD *)(v57 + 16);
        v58 = *(_QWORD *)(v57 + 24);
        v60 = *(unsigned __int8 *)(v57 + 32);
        v61 = *(unsigned __int8 *)(v57 + 33);
        v138 = *(_QWORD *)(v57 + 8);
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v59, v58, v60);
        swift_bridgeObjectRelease();
        v62 = v59;
        v63 = v58;
        v64 = v60;
        v139 = v58;
        if (v60 > 0xFD)
        {
          sub_1BA6E6C54(v51, v52, v151);
          v62 = v51;
          v63 = v52;
          v64 = v151;
        }
        v135 = v64;
        v136 = v63;
        v137 = v62;
        v134 = v51;
        if (v61 == 2)
          LOBYTE(v61) = v145;
        swift_bridgeObjectRetain_n();
        v65 = v59;
        sub_1BA6E6C54(v59, v58, v60);
        v66 = swift_isUniquelyReferenced_nonNull_native();
        v68 = sub_1BA6E35A8(v140, v138);
        v69 = v153[2];
        v70 = (v67 & 1) == 0;
        v71 = v69 + v70;
        if (__OFADD__(v69, v70))
          goto LABEL_79;
        v72 = v67;
        v146 = v61;
        if (v153[3] >= v71)
        {
          if ((v66 & 1) != 0)
          {
            v75 = v153;
            if ((v67 & 1) == 0)
              goto LABEL_52;
          }
          else
          {
            sub_1BB4C8E70();
            v75 = v153;
            if ((v72 & 1) == 0)
              goto LABEL_52;
          }
        }
        else
        {
          sub_1BB4B9AF4(v71, v66);
          v73 = sub_1BA6E35A8(v140, v138);
          if ((v72 & 1) != (v74 & 1))
            goto LABEL_82;
          v68 = v73;
          v75 = v153;
          if ((v72 & 1) == 0)
          {
LABEL_52:
            v75[(v68 >> 6) + 8] |= 1 << v68;
            v99 = (uint64_t *)(v75[6] + 16 * v68);
            *v99 = v140;
            v99[1] = v138;
            v100 = v75[7] + 40 * v68;
            *(_QWORD *)v100 = v140;
            *(_QWORD *)(v100 + 8) = v138;
            *(_QWORD *)(v100 + 16) = v137;
            *(_QWORD *)(v100 + 24) = v136;
            *(_BYTE *)(v100 + 32) = v135;
            *(_BYTE *)(v100 + 33) = v146;
            v101 = v75[2];
            v35 = __OFADD__(v101, 1);
            v102 = v101 + 1;
            if (v35)
              goto LABEL_80;
            v75[2] = v102;
            swift_bridgeObjectRetain();
            goto LABEL_23;
          }
        }
        v45 = v75[7] + 40 * v68;
        v46 = *(_QWORD *)(v45 + 16);
        v47 = *(_QWORD *)(v45 + 24);
        v48 = *(_BYTE *)(v45 + 32);
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v46, v47, v48);
        *(_QWORD *)v45 = v140;
        *(_QWORD *)(v45 + 8) = v138;
        *(_QWORD *)(v45 + 16) = v137;
        *(_QWORD *)(v45 + 24) = v136;
        *(_BYTE *)(v45 + 32) = v135;
        *(_BYTE *)(v45 + 33) = v146;
LABEL_23:
        v153 = v75;
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v65, v139, v60);
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v134, v143, v151);
        v44 = v148;
LABEL_24:
        v43 += 40;
        if (!--v42)
        {
          swift_bridgeObjectRelease();
          goto LABEL_58;
        }
      }
    }
    v44 = v40;
LABEL_58:
    swift_bridgeObjectRetain();
    v103 = swift_bridgeObjectRetain();
    sub_1BA6E6E94(v103);
    v104 = v44[2];
    if (v104)
    {
      swift_bridgeObjectRetain();
      v105 = v44 + 5;
      v106 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        if (v153[2])
        {
          v107 = *(v105 - 1);
          v108 = *v105;
          swift_bridgeObjectRetain_n();
          v109 = sub_1BA6E35A8(v107, v108);
          if ((v110 & 1) != 0)
          {
            v111 = v153[7] + 40 * v109;
            v112 = *(_QWORD *)(v111 + 8);
            v152 = *(_QWORD *)v111;
            v113 = *(_QWORD *)(v111 + 16);
            v114 = *(_QWORD *)(v111 + 24);
            v115 = *(_BYTE *)(v111 + 32);
            v116 = *(_BYTE *)(v111 + 33);
            swift_bridgeObjectRetain();
            sub_1BA6E6C54(v113, v114, v115);
            swift_bridgeObjectRelease_n();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v106 = sub_1BB38E46C(0, v106[2] + 1, 1, v106);
            v118 = v106[2];
            v117 = v106[3];
            if (v118 >= v117 >> 1)
              v106 = sub_1BB38E46C((_QWORD *)(v117 > 1), v118 + 1, 1, v106);
            v106[2] = v118 + 1;
            v119 = &v106[5 * v118];
            v119[4] = v152;
            v119[5] = v112;
            v119[6] = v113;
            v119[7] = v114;
            *((_BYTE *)v119 + 64) = v115;
            *((_BYTE *)v119 + 65) = v116;
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }
        }
        v105 += 2;
        --v104;
      }
      while (v104);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      v106 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v125 == 2)
      v120 = v126;
    else
      v120 = v125;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v124 = v123;
    *(_QWORD *)(v124 + 8) = v122;
    *(_QWORD *)(v124 + 16) = v127;
    *(_QWORD *)(v124 + 24) = v131;
    *(_QWORD *)(v124 + 32) = v128;
    *(_QWORD *)(v124 + 40) = v129;
    *(_BYTE *)(v124 + 48) = v130;
    *(_BYTE *)(v124 + 49) = v120;
    *(_QWORD *)(v124 + 56) = v106;
  }
  return result;
}

uint64_t sub_1BB1E7304@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  unint64_t v22;
  size_t v23;
  uint64_t isStackAllocationSafe;
  char *v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  char v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  unint64_t v55;
  unint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  unsigned __int8 *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t result;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  int v89;
  int v90;
  unsigned int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void *v98;
  uint64_t v99[4];

  v97 = a1;
  v76 = a2;
  v98 = 0;
  v99[2] = *MEMORY[0x1E0C80C00];
  v75 = *v2;
  v77 = v2[1];
  v74 = v2[2];
  v82 = v2[3];
  v3 = v2[4];
  v92 = v2[5];
  v93 = v3;
  v91 = *((unsigned __int8 *)v2 + 48);
  v89 = *((unsigned __int8 *)v2 + 49);
  v4 = v2[7];
  v5 = *(_QWORD *)(v4 + 16);
  swift_bridgeObjectRetain();
  v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v79 = sub_1BB38E46C(0, v5, 0, MEMORY[0x1E0DEE9D8]);
  v78 = sub_1BB38E34C(0, v5, 0, v6);
  v7 = *(_QWORD *)(v4 + 16);
  v88 = v4;
  v81 = v7;
  if (!v7)
  {
LABEL_30:
    sub_1BB1E8858(0);
    v46 = sub_1BB872DE4();
    swift_bridgeObjectRelease();
    v47 = *(_QWORD *)(v46 + 16);
    v97 = v46;
    if (v47)
    {
      v48 = (char *)(v46 + 65);
      v49 = v79;
      do
      {
        v98 = *(void **)(v48 - 33);
        v50 = *(_QWORD *)(v48 - 25);
        v51 = *(_QWORD *)(v48 - 17);
        v52 = *(_QWORD *)(v48 - 9);
        v53 = *(v48 - 1);
        v54 = *v48;
        swift_bridgeObjectRetain();
        sub_1BA6E6C54(v51, v52, v53);
        v56 = v49[2];
        v55 = v49[3];
        if (v56 >= v55 >> 1)
          v49 = sub_1BB38E46C((_QWORD *)(v55 > 1), v56 + 1, 1, v49);
        v48 += 48;
        v49[2] = v56 + 1;
        v57 = &v49[5 * v56];
        v57[4] = v98;
        v57[5] = v50;
        v57[6] = v51;
        v57[7] = v52;
        *((_BYTE *)v57 + 64) = v53;
        *((_BYTE *)v57 + 65) = v54;
        --v47;
      }
      while (v47);
    }
    else
    {
      v49 = v79;
    }
    v58 = v88;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v59 = v49[2];
    if (v59)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA6E6C54(v93, v92, v91);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v79 = v49;
      v60 = (unsigned __int8 *)v49 + 65;
      do
      {
        v63 = *(_QWORD *)(v60 - 17);
        v64 = *(_QWORD *)(v60 - 9);
        v65 = *(v60 - 1);
        v66 = *v60;
        v67 = v63;
        v68 = v64;
        v69 = v65;
        if (v65 >= 0xFE)
        {
          v68 = v92;
          v67 = v93;
          v69 = v91;
          sub_1BA6E6C54(v93, v92, v91);
        }
        v60 += 40;
        v61 = v89;
        if (v66 != 2)
          v61 = v66;
        v89 = v61;
        sub_1BA6E6C54(v63, v64, v65);
        v62 = v82;
        swift_bridgeObjectRetain();
        v58 = v88;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_1BA6E6CC4(v93, v92, v91);
        swift_bridgeObjectRelease();
        v92 = v68;
        v93 = v67;
        v91 = v69;
        --v59;
      }
      while (v59);
      swift_bridgeObjectRelease();
      v70 = v77;
    }
    else
    {
      v70 = v77;
      swift_bridgeObjectRetain();
      v62 = v82;
      swift_bridgeObjectRetain();
      v68 = v92;
      v67 = v93;
      LOBYTE(v69) = v91;
      sub_1BA6E6C54(v93, v92, v91);
      swift_bridgeObjectRetain();
    }
    result = swift_bridgeObjectRelease();
    v72 = v76;
    *v76 = v75;
    v72[1] = v70;
    v72[2] = v74;
    v72[3] = v62;
    v72[4] = v67;
    v72[5] = v68;
    *((_BYTE *)v72 + 48) = v69;
    *((_BYTE *)v72 + 49) = v89;
    v72[7] = v58;
    return result;
  }
  v80 = v4 + 32;
  swift_bridgeObjectRetain();
  v8 = 0;
LABEL_5:
  if (v8 >= *(_QWORD *)(v4 + 16))
    goto LABEL_48;
  v11 = v80 + 40 * v8;
  v13 = *(_QWORD *)v11;
  v12 = *(_QWORD *)(v11 + 8);
  v9 = *(_QWORD *)(v11 + 16);
  v10 = *(_QWORD *)(v11 + 24);
  v14 = *(unsigned __int8 *)(v11 + 32);
  v84 = *(unsigned __int8 *)(v11 + 33);
  swift_bridgeObjectRetain();
  v90 = v14;
  sub_1BA6E6C54(v9, v10, v14);
  if (qword_1ED3BE7F8 != -1)
    swift_once();
  v83 = v13;
  v99[0] = v13;
  v99[1] = v12;
  swift_bridgeObjectRetain();
  v15 = sub_1BA6E583C(v99);
  swift_bridgeObjectRelease();
  v96 = *(_QWORD *)(v15 + 16);
  if (!v96)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  v85 = v10;
  v86 = v9;
  v87 = v8;
  v16 = 0;
  v17 = (uint64_t *)(v15 + 64);
  v94 = v12;
  while (1)
  {
    if (v16 >= *(_QWORD *)(v15 + 16))
    {
      __break(1u);
LABEL_48:
      __break(1u);
    }
    v95 = *(v17 - 2);
    v19 = *(v17 - 1);
    v18 = *v17;
    v20 = *(_BYTE *)(v19 + 32);
    v21 = v20 & 0x3F;
    v22 = (unint64_t)((1 << v20) + 63) >> 6;
    v23 = 8 * v22;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v21 <= 0xD)
      break;
    isStackAllocationSafe = swift_stdlib_isStackAllocationSafe();
    if ((isStackAllocationSafe & 1) != 0)
      break;
    v25 = (char *)swift_slowAlloc();
    bzero(v25, v23);
    v29 = v22;
    v27 = v98;
    v28 = sub_1BA6EB5B4((uint64_t)v25, v29, v19, v97);
    swift_bridgeObjectRelease();
    if (v27)
      goto LABEL_50;
    v98 = 0;
    MEMORY[0x1BCCE5C38](v25, -1, -1);
LABEL_18:
    v30 = sub_1BA6EB330(v28, v19);
    swift_release();
    if ((v30 & 1) != 0 && (sub_1BA6EBD20(v97, v18) & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v31 = v95;
      if (v95 < 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        v10 = v85;
        v9 = v86;
        sub_1BA6E6C54(v86, v85, v90);
        v39 = v79;
        v41 = v79[2];
        v40 = v79[3];
        v8 = v87;
        if (v41 >= v40 >> 1)
          v39 = sub_1BB38E46C((_QWORD *)(v40 > 1), v41 + 1, 1, v79);
        v42 = v84;
        v43 = v83;
        v39[2] = v41 + 1;
        v79 = v39;
        v44 = &v39[5 * v41];
        v45 = v94;
        v44[4] = v43;
        v44[5] = v45;
        v44[6] = v9;
        v44[7] = v10;
        *((_BYTE *)v44 + 64) = v90;
        *((_BYTE *)v44 + 65) = v42;
      }
      else
      {
        swift_bridgeObjectRetain();
        v10 = v85;
        v9 = v86;
        sub_1BA6E6C54(v86, v85, v90);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v32 = v78;
        v34 = v78[2];
        v33 = v78[3];
        v8 = v87;
        if (v34 >= v33 >> 1)
          v32 = sub_1BB38E34C((_QWORD *)(v33 > 1), v34 + 1, 1, v78);
        v35 = v84;
        v36 = v83;
        v32[2] = v34 + 1;
        v78 = v32;
        v37 = &v32[6 * v34];
        v38 = v94;
        v37[4] = v36;
        v37[5] = v38;
        v37[6] = v9;
        v37[7] = v10;
        *((_BYTE *)v37 + 64) = v90;
        *((_BYTE *)v37 + 65) = v35;
        v37[9] = v31;
      }
      swift_bridgeObjectRelease();
      v4 = v88;
LABEL_4:
      ++v8;
      sub_1BA6E6CC4(v9, v10, v90);
      if (v8 == v81)
      {
        swift_bridgeObjectRelease();
        goto LABEL_30;
      }
      goto LABEL_5;
    }
    ++v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v17 += 5;
    if (v96 == v16)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = v87;
      v4 = v88;
      v10 = v85;
      v9 = v86;
      goto LABEL_4;
    }
  }
  MEMORY[0x1E0C80A78](isStackAllocationSafe);
  v25 = (char *)&v73 - ((v23 + 15) & 0x3FFFFFFFFFFFFFF0);
  bzero(v25, v23);
  v26 = v22;
  v27 = v98;
  v28 = sub_1BA6EB5B4((uint64_t)v25, v26, v19, v97);
  swift_bridgeObjectRelease();
  if (!v27)
  {
    v98 = 0;
    goto LABEL_18;
  }
  swift_willThrow();

  __break(1u);
LABEL_50:

  result = MEMORY[0x1BCCE5C38](v25, -1, -1);
  __break(1u);
  return result;
}

uint64_t FormatPuzzleEmbedNodeStyle.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FormatPuzzleEmbedNodeStyle.identifier.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatPuzzleEmbedNodeStyle.class.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatPuzzleEmbedNodeStyle.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatPuzzleEmbedNodeStyle.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 49);
}

uint64_t FormatPuzzleEmbedNodeStyle.selectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  return result;
}

uint64_t (*FormatPuzzleEmbedNodeStyle.selectors.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t sub_1BB1E7BCC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleEmbedNodeStyle.init(from:)(a1, a2);
}

uint64_t sub_1BB1E7BE0(_QWORD *a1)
{
  return FormatPuzzleEmbedNodeStyle.encode(to:)(a1);
}

uint64_t FormatPuzzleEmbedNodeStyle.Selector.selector.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t FormatPuzzleEmbedNodeStyle.Selector.cornerRadius.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA6E6C54(v2, v3, v4);
}

uint64_t FormatPuzzleEmbedNodeStyle.Selector.ignoresSmartInvertColors.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 33);
}

uint64_t sub_1BB1E7C24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPuzzleEmbedNodeStyle.Selector.init(from:)(a1, a2);
}

uint64_t sub_1BB1E7C38(_QWORD *a1)
{
  return FormatPuzzleEmbedNodeStyle.Selector.encode(to:)(a1);
}

uint64_t sub_1BB1E7C50@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(result + 40);
  return result;
}

uint64_t _s8NewsFeed26FormatPuzzleEmbedNodeStyleV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v12;
  char v13;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  _QWORD v19[2];
  char v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v2 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int8 *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 40);
  v11 = *(unsigned __int8 *)(a2 + 48);
  v17 = *(unsigned __int8 *)(a1 + 49);
  v18 = *(unsigned __int8 *)(a2 + 49);
  v15 = *(_QWORD *)(a2 + 56);
  v16 = *(_QWORD *)(a1 + 56);
  if ((*(_QWORD *)a1 != *(_QWORD *)a2 || *(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8)) && (sub_1BB874398() & 1) == 0
    || (v2 != v7 || v4 != v8) && (sub_1BB874398() & 1) == 0)
  {
    return 0;
  }
  if (v6 > 0xFD)
  {
    if (v11 > 0xFD)
    {
LABEL_14:
      if (v17 == 2)
      {
        if (v18 != 2)
          return 0;
      }
      else if (v18 == 2 || ((((v17 & 1) == 0) ^ v18) & 1) == 0)
      {
        return 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13 = sub_1BA88E9A4(v16, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
    goto LABEL_12;
  }
  v21 = v3;
  v22 = v5;
  v23 = v6;
  if (v11 > 0xFD)
  {
    sub_1BA6F2B04(v3, v5, v6);
    sub_1BA6F2B04(v3, v5, v6);
    sub_1BA6F2B88(v3, v5, v6);
LABEL_12:
    sub_1BA6E6C54(v10, v9, v11);
    sub_1BA6E6CC4(v3, v5, v6);
    sub_1BA6E6CC4(v10, v9, v11);
    return 0;
  }
  v19[0] = v10;
  v19[1] = v9;
  v20 = v11;
  sub_1BA6E6C54(v3, v5, v6);
  sub_1BA6F2B04(v3, v5, v6);
  v12 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v21, (uint64_t)v19);
  sub_1BA6F2B88(v21, v22, v23);
  sub_1BA6E6CC4(v3, v5, v6);
  if ((v12 & 1) != 0)
    goto LABEL_14;
  return 0;
}

uint64_t _s8NewsFeed26FormatPuzzleEmbedNodeStyleV8SelectorV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  int v9;
  char v10;
  uint64_t result;
  char v12;
  _QWORD v13[2];
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(unsigned __int8 *)(a1 + 32);
  v5 = *(unsigned __int8 *)(a1 + 33);
  v7 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v8 = *(unsigned __int8 *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 33);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    || (v10 = sub_1BB874398(), result = 0, (v10 & 1) != 0))
  {
    if (v4 <= 0xFD)
    {
      v15 = v2;
      v16 = v3;
      v17 = v4;
      if (v8 <= 0xFD)
      {
        v13[0] = v7;
        v13[1] = v6;
        v14 = v8;
        sub_1BA6E6C54(v2, v3, v4);
        sub_1BA6F2B04(v2, v3, v4);
        v12 = _s8NewsFeed18FormatCornerRadiusO2eeoiySbAC_ACtFZ_0((uint64_t)&v15, (uint64_t)v13);
        sub_1BA6F2B88(v15, v16, v17);
        sub_1BA6E6CC4(v2, v3, v4);
        if ((v12 & 1) != 0)
          goto LABEL_11;
        return 0;
      }
      sub_1BA6F2B04(v2, v3, v4);
      sub_1BA6F2B04(v2, v3, v4);
      sub_1BA6F2B88(v2, v3, v4);
    }
    else if (v8 > 0xFD)
    {
LABEL_11:
      if (v5 == 2)
      {
        if (v9 != 2)
          return 0;
      }
      else if (v9 == 2 || ((((v5 & 1) == 0) ^ v9) & 1) == 0)
      {
        return 0;
      }
      return 1;
    }
    sub_1BA6E6C54(v7, v6, v8);
    sub_1BA6E6CC4(v2, v3, v4);
    sub_1BA6E6CC4(v7, v6, v8);
    return 0;
  }
  return result;
}

unint64_t sub_1BB1E8028(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1E804C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1E804C()
{
  unint64_t result;

  result = qword_1EF2BD8D8;
  if (!qword_1EF2BD8D8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle, &type metadata for FormatPuzzleEmbedNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2BD8D8);
  }
  return result;
}

unint64_t sub_1BB1E8090(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 16) = sub_1BAEA7A04();
  result = sub_1BAEED80C();
  *(_QWORD *)(a1 + 24) = result;
  return result;
}

uint64_t sub_1BB1E80BC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEA7A04, (uint64_t (*)(void))sub_1BAEED80C, (uint64_t (*)(void))sub_1BB1E80D8);
}

unint64_t sub_1BB1E80D8()
{
  unint64_t result;

  result = qword_1EF2BD8E0;
  if (!qword_1EF2BD8E0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle, &type metadata for FormatPuzzleEmbedNodeStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2BD8E0);
  }
  return result;
}

unint64_t sub_1BB1E811C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1E8140();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1E8140()
{
  unint64_t result;

  result = qword_1EF2BD8E8;
  if (!qword_1EF2BD8E8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle.Selector, &type metadata for FormatPuzzleEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2BD8E8);
  }
  return result;
}

unint64_t sub_1BB1E8184(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BAEB24DC();
  result = sub_1BAEB2520();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1BB1E81B0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEB24DC, (uint64_t (*)(void))sub_1BAEB2520, (uint64_t (*)(void))sub_1BB1E81CC);
}

unint64_t sub_1BB1E81CC()
{
  unint64_t result;

  result = qword_1EF2BD8F0;
  if (!qword_1EF2BD8F0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPuzzleEmbedNodeStyle.Selector, &type metadata for FormatPuzzleEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1EF2BD8F0);
  }
  return result;
}

uint64_t sub_1BB1E8210@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1E821C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  a2[1] = v3;
  return result;
}

uint64_t sub_1BB1E825C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *(_QWORD *)(a1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1E8268(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a2 + 56) = v3;
  return result;
}

uint64_t destroy for FormatPuzzleEmbedNodeStyle(uint64_t a1)
{
  unsigned int v2;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 48);
  if (v2 <= 0xFD)
    sub_1BA6F2B88(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatPuzzleEmbedNodeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 <= 0xFD)
  {
    v7 = *(_QWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v7, v8, v6);
    *(_QWORD *)(a1 + 32) = v7;
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = v6;
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatPuzzleEmbedNodeStyle(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_OWORD *)(a2 + 32);
  v6 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v11 = *(_QWORD *)(a2 + 32);
      v12 = *(_QWORD *)(a2 + 40);
      sub_1BA6F2B04(v11, v12, *(_BYTE *)(a2 + 48));
      v13 = *(_QWORD *)(a1 + 32);
      v14 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v11;
      *(_QWORD *)(a1 + 40) = v12;
      v15 = *(_BYTE *)(a1 + 48);
      *(_BYTE *)(a1 + 48) = v6;
      sub_1BA6F2B88(v13, v14, v15);
    }
    else
    {
      sub_1BA9F0244(a1 + 32);
      v8 = *(_BYTE *)(a2 + 48);
      *v4 = *v5;
      *(_BYTE *)(a1 + 48) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_1BA6F2B04(v9, v10, *(_BYTE *)(a2 + 48));
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v6;
  }
  else
  {
    v7 = *v5;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    *v4 = v7;
  }
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatPuzzleEmbedNodeStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a2 + 32);
  v7 = *(unsigned __int8 *)(a1 + 48);
  if (v7 <= 0xFD)
  {
    v8 = *(unsigned __int8 *)(a2 + 48);
    if (v8 <= 0xFD)
    {
      v9 = *(_QWORD *)(a1 + 32);
      v10 = *(_QWORD *)(a1 + 40);
      *(_OWORD *)(a1 + 32) = *v6;
      *(_BYTE *)(a1 + 48) = v8;
      sub_1BA6F2B88(v9, v10, v7);
      goto LABEL_6;
    }
    sub_1BA9F0244(a1 + 32);
  }
  *(_OWORD *)(a1 + 32) = *v6;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
LABEL_6:
  *(_BYTE *)(a1 + 49) = *(_BYTE *)(a2 + 49);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatPuzzleEmbedNodeStyle()
{
  return &type metadata for FormatPuzzleEmbedNodeStyle;
}

uint64_t destroy for FormatPuzzleEmbedNodeStyle.Selector(uint64_t a1)
{
  uint64_t result;
  unsigned int v3;

  result = swift_bridgeObjectRelease();
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 0xFD)
    return sub_1BA6F2B88(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v3);
  return result;
}

uint64_t initializeWithCopy for FormatPuzzleEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 <= 0xFD)
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_1BA6F2B04(v6, v7, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v5;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t assignWithCopy for FormatPuzzleEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unsigned int v6;
  __int128 v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) <= 0xFDu)
  {
    if (v6 <= 0xFD)
    {
      v11 = *(_QWORD *)(a2 + 16);
      v12 = *(_QWORD *)(a2 + 24);
      sub_1BA6F2B04(v11, v12, *(_BYTE *)(a2 + 32));
      v13 = *(_QWORD *)(a1 + 16);
      v14 = *(_QWORD *)(a1 + 24);
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v12;
      v15 = *(_BYTE *)(a1 + 32);
      *(_BYTE *)(a1 + 32) = v6;
      sub_1BA6F2B88(v13, v14, v15);
    }
    else
    {
      sub_1BA9F0244(a1 + 16);
      v8 = *(_BYTE *)(a2 + 32);
      *v4 = *v5;
      *(_BYTE *)(a1 + 32) = v8;
    }
  }
  else if (v6 <= 0xFD)
  {
    v9 = *(_QWORD *)(a2 + 16);
    v10 = *(_QWORD *)(a2 + 24);
    sub_1BA6F2B04(v9, v10, *(_BYTE *)(a2 + 32));
    *(_QWORD *)(a1 + 16) = v9;
    *(_QWORD *)(a1 + 24) = v10;
    *(_BYTE *)(a1 + 32) = v6;
  }
  else
  {
    v7 = *v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    *v4 = v7;
  }
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

uint64_t assignWithTake for FormatPuzzleEmbedNodeStyle.Selector(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 <= 0xFD)
  {
    v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 <= 0xFD)
    {
      v8 = *(_QWORD *)(a1 + 16);
      v9 = *(_QWORD *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(_BYTE *)(a1 + 32) = v7;
      sub_1BA6F2B88(v8, v9, v6);
      goto LABEL_6;
    }
    sub_1BA9F0244(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
LABEL_6:
  *(_BYTE *)(a1 + 33) = *(_BYTE *)(a2 + 33);
  return a1;
}

ValueMetadata *type metadata accessor for FormatPuzzleEmbedNodeStyle.Selector()
{
  return &type metadata for FormatPuzzleEmbedNodeStyle.Selector;
}

void sub_1BB1E87F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AF7A8)
  {
    sub_1BA834FF0();
    v0 = sub_1BB872814();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AF7A8);
  }
}

void sub_1BB1E8858(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3AF7A0)
  {
    v2 = sub_1BB1E88B0();
    v4 = type metadata accessor for FormatNodeStyleSelectorOrder(a1, (uint64_t)&type metadata for FormatPuzzleEmbedNodeStyle.Selector, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3AF7A0);
  }
}

unint64_t sub_1BB1E88B0()
{
  unint64_t result;

  result = qword_1ED3AF798;
  if (!qword_1ED3AF798)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F817C, &type metadata for FormatPuzzleEmbedNodeStyle.Selector);
    atomic_store(result, (unint64_t *)&qword_1ED3AF798);
  }
  return result;
}

_QWORD *sub_1BB1E88F4(double *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t (*v17)();
  __int16 v18;
  uint64_t v19;
  uint64_t (**v20)();
  uint64_t v21;
  char *v22;
  void (*v23)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  unint64_t v27;
  char v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  char v50;
  _OWORD v51[2];
  uint64_t v52;

  v2 = a2[1];
  v36 = *a2;
  v3 = a2[3];
  v42 = a2[2];
  v4 = a2[4];
  v5 = a2[5];
  v7 = a2[6];
  v6 = a2[7];
  v8 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v8);
  sub_1BA8C88C8(0);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  v39 = *(_QWORD *)(v11 + 72);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  v38 = v12;
  v14 = (_QWORD *)(v13 + v12);
  v37 = v5;
  v40 = v2;
  if (v2)
  {
    *(_QWORD *)&v43 = v36;
    *((_QWORD *)&v43 + 1) = v2;
    *(_QWORD *)&v44 = v42;
    *((_QWORD *)&v44 + 1) = v3;
    v45 = v4;
    v46 = v5;
    v47 = (unsigned __int16)v7 | 0x8000000000000000;
    v48 = v6;
    v15 = swift_allocObject();
    sub_1BA9F1094((uint64_t)&v43, v15 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1BA6E6C54(v4, v5, v7);
    v16 = v3;
    swift_bridgeObjectRetain();
    v17 = sub_1BA9F10D0;
  }
  else
  {
    v15 = 0;
    v42 = 0;
    v16 = 0xE000000000000000;
    v17 = sub_1BB739F50;
  }
  v18 = v7;
  v19 = type metadata accessor for FormatInspectionItem(0);
  v20 = (uint64_t (**)())((char *)v14 + *(int *)(v19 + 24));
  *v20 = v17;
  v20[1] = (uint64_t (*)())v15;
  v21 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v20, 0, 1, v21);
  *(_QWORD *)(v13 + v38) = v42;
  v14[2] = 0;
  v14[3] = 0;
  v14[1] = v16;
  v22 = (char *)v14 + *(int *)(v19 + 28);
  *(_QWORD *)v22 = 0;
  *((_QWORD *)v22 + 1) = 0;
  v22[16] = -1;
  v23 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v23(v14, 0, 1, v19);
  sub_1BAF89090(0x6C4320656C797453, 0xEB00000000737361, 0, 0, v13, v51);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v24;
  *(_QWORD *)(v24 + 48) = v52;
  v25 = v51[1];
  *(_OWORD *)(v24 + 16) = v51[0];
  *(_OWORD *)(v24 + 32) = v25;
  v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
  v27 = v26 + v38;
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x4520656C7A7A7550, 0xEC0000006465626DLL, (_QWORD *)(v26 + v38));
  v23((_QWORD *)(v26 + v38), 0, 1, v19);
  if (v40)
    v28 = HIBYTE(v18);
  else
    v28 = 2;
  sub_1BAAF6B38(0xD00000000000001BLL, 0x80000001BB966D20, v28, (_QWORD *)(v27 + v39));
  v23((_QWORD *)(v27 + v39), 0, 1, v19);
  sub_1BAF89090(2003134806, 0xE400000000000000, 0, 0, v26, &v43);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v29 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v29;
  *(_QWORD *)(v29 + 48) = v45;
  v30 = v44;
  *(_OWORD *)(v29 + 16) = v43;
  *(_OWORD *)(v29 + 32) = v30;
  if (v40)
  {
    v32 = v37;
    v31 = v4;
    sub_1BA6E6C54(v4, v37, v18);
  }
  else
  {
    v31 = 0;
    v32 = 0;
    LOBYTE(v18) = -2;
  }
  v49[0] = v31;
  v49[1] = v32;
  v50 = v18;
  v33 = sub_1BB4D88A0(a1, (uint64_t)v49);
  sub_1BA6E6CC4(v31, v32, v18);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 144) = &off_1E7335C38;
  *(_QWORD *)(inited + 112) = v33;
  v34 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v34;
}

uint64_t sub_1BB1E8DA8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1E8DDC()
{
  uint64_t v0;

  sub_1BA76B698(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 64));
  return swift_deallocObject();
}

id sub_1BB1E8E0C()
{
  char *v0;
  void *v1;
  _QWORD *v2;
  void *v3;
  void *v4;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  void *v8;

  if (*(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_sourceMap + 8])
  {
    v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel];
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v2);
    v3 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v1, sel_setText_, v3);

    v4 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel];
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    sub_1BB87420C();
    sub_1BB872AFC(v5);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v6);
    sub_1BB87420C();
    sub_1BB872AFC(v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v4, sel_setText_, v8);

    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView], sel_setHidden_, 0);
  }
  else
  {
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel], sel_setText_, 0);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel], sel_setText_, 0);
    objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView], sel_setHidden_, 1);
  }
  objc_msgSend(v0, sel_setNeedsLayout);
  return objc_msgSend(v0, sel_layoutIfNeeded);
}

char *sub_1BB1E907C(double a1, double a2, double a3, double a4)
{
  char *v4;
  char *v5;
  objc_class *ObjectType;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  char *v20;
  id v21;
  uint64_t v22;
  void *v23;
  void *v24;
  double v25;
  id v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  id v33;
  id v34;
  id v35;
  uint64_t v36;
  id v37;
  id v38;
  uint64_t v39;
  id v40;
  id v41;
  void *v42;
  objc_super v44;

  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_sourceMap];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v12 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_topSeparatorView;
  v13 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
  v14 = v4;
  *(_QWORD *)&v5[v12] = objc_msgSend(v13, sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v15 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView;
  *(_QWORD *)&v14[v15] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v16 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel;
  *(_QWORD *)&v14[v16] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v17 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel;
  *(_QWORD *)&v14[v17] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  v44.receiver = v14;
  v44.super_class = ObjectType;
  v18 = objc_msgSendSuper2(&v44, sel_initWithFrame_, a1, a2, a3, a4);
  v19 = (void *)objc_opt_self();
  v20 = (char *)v18;
  v21 = objc_msgSend(v19, sel_secondarySystemBackgroundColor);
  objc_msgSend(v20, sel_setBackgroundColor_, v21);

  v22 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel;
  v23 = *(void **)&v20[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel];
  v24 = (void *)objc_opt_self();
  v25 = *MEMORY[0x1E0DC1438];
  v26 = v23;
  v27 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 10.0, v25);
  objc_msgSend(v26, sel_setFont_, v27);

  v28 = *(void **)&v20[v22];
  objc_msgSend(v28, sel_setLineBreakMode_, 3);
  v29 = v28;
  v30 = objc_msgSend(v19, sel_secondaryLabelColor);
  objc_msgSend(v29, sel_setTextColor_, v30);

  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[v22]);
  v31 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel;
  v32 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel];
  v33 = objc_msgSend(v24, sel_systemFontOfSize_weight_, 10.0, v25);
  objc_msgSend(v32, sel_setFont_, v33);

  v34 = *(id *)&v20[v31];
  v35 = objc_msgSend(v19, sel_secondaryLabelColor);
  objc_msgSend(v34, sel_setTextColor_, v35);

  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[v31]);
  v36 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_topSeparatorView;
  v37 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_topSeparatorView];
  v38 = objc_msgSend(v19, sel_separatorColor);
  objc_msgSend(v37, sel_setBackgroundColor_, v38);

  objc_msgSend(v20, sel_addSubview_, *(_QWORD *)&v20[v36]);
  v39 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView;
  v40 = *(id *)&v20[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView];
  v41 = objc_msgSend(v19, sel_separatorColor);
  objc_msgSend(v40, sel_setBackgroundColor_, v41);

  v42 = *(void **)&v20[v39];
  objc_msgSend(v42, sel_setHidden_, 1);
  objc_msgSend(v20, sel_addSubview_, v42);

  return v20;
}

id sub_1BB1E94CC()
{
  char *v0;
  id v1;
  double v2;
  double v3;
  double v4;
  void *v5;
  void *v6;
  CGFloat v7;
  void *v8;
  double Width;
  double v10;
  double v11;
  void *v12;
  CGFloat v13;
  objc_super v15;
  CGRect v16;
  CGRect v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;
  CGRect v24;

  v15.receiver = v0;
  v15.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v15, sel_layoutSubviews);
  v1 = objc_msgSend(v0, sel_traitCollection);
  objc_msgSend(v1, sel_displayScale);
  v3 = v2;

  if (v3 < 1.0)
    v4 = 1.0;
  else
    v4 = 1.0 / v3;
  v5 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_topSeparatorView];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v5, sel_setFrame_, 0.0, 0.0, CGRectGetWidth(v16), v4);
  v6 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView];
  objc_msgSend(v0, sel_bounds);
  v7 = CGRectGetHeight(v17) - v4;
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v6, sel_setFrame_, 0.0, v7, CGRectGetWidth(v18), v4);
  v8 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel];
  objc_msgSend(v8, sel_sizeToFit);
  objc_msgSend(v0, sel_bounds);
  Width = CGRectGetWidth(v19);
  objc_msgSend(v8, sel_frame);
  v10 = Width - CGRectGetWidth(v20) + -8.0;
  objc_msgSend(v8, sel_frame);
  v11 = CGRectGetWidth(v21);
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v8, sel_setFrame_, v10, 0.0, v11, CGRectGetHeight(v22));
  v12 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel];
  objc_msgSend(v8, sel_frame);
  v13 = CGRectGetMinX(v23) + -8.0;
  objc_msgSend(v0, sel_bounds);
  return objc_msgSend(v12, sel_setFrame_, 8.0, 0.0, v13, CGRectGetHeight(v24));
}

uint64_t type metadata accessor for DebugFormatDebuggerPanePathView()
{
  return objc_opt_self();
}

void sub_1BB1E9790()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_sourceMap];
  *(_OWORD *)v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_topSeparatorView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v3 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_bottomSeparatorView;
  *(_QWORD *)&v0[v3] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v4 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_filePathLabel;
  *(_QWORD *)&v0[v4] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed31DebugFormatDebuggerPanePathView_lineColumnLabel;
  *(_QWORD *)&v0[v5] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3990]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);

  sub_1BB873EAC();
  __break(1u);
}

void ArticleThumbnailViewLayoutAttributesFactory.makeLayoutAttributes(with:)(double *a1@<X0>, uint64_t a2@<X8>)
{
  double v3;
  uint64_t v4;
  double v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  double v10;
  double v11;
  double v12;

  v5 = a1[5];
  v6 = *((_QWORD *)a1 + 6);
  v7 = *((_QWORD *)a1 + 7);
  v8 = *((_QWORD *)a1 + 8);
  v9 = *((_BYTE *)a1 + 72);
  v10 = 0.0;
  v11 = 0.0;
  if (v5 > 0.0)
  {
    v12 = a1[2];
    if (*((_BYTE *)a1 + 32))
    {
      if (*((_BYTE *)a1 + 32) == 1)
      {
        v11 = a1[2];
        v10 = v5 * v12;
        goto LABEL_10;
      }
      v11 = a1[3];
      v10 = a1[2];
      if (v5 < v12 / v11)
      {
        v10 = v11 * v5;
        goto LABEL_10;
      }
      if (v12 / v11 >= v5)
        goto LABEL_10;
    }
    else
    {
      v10 = a1[2];
    }
    v11 = v10 / v5;
  }
LABEL_10:
  v3 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  *(CGRect *)a2 = CGRectIntegral(*(CGRect *)(&v10 - 2));
  *(_QWORD *)(a2 + 32) = v6;
  *(_QWORD *)(a2 + 40) = v7;
  *(_QWORD *)(a2 + 48) = v8;
  *(_BYTE *)(a2 + 56) = v9;
}

uint64_t ArticleThumbnailViewLayoutAttributesFactory.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ArticleThumbnailViewLayoutAttributesFactory.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1BB1E9994(double *a1@<X0>, uint64_t a2@<X8>)
{
  ArticleThumbnailViewLayoutAttributesFactory.makeLayoutAttributes(with:)(a1, a2);
}

uint64_t ArticleThumbnailViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  double x;
  double y;
  double width;
  double height;
  void (*v15)(double, double, double, double);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  double v26;
  double v27;
  char v28;
  double v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  CGRect v34;

  sub_1BB1E9B00((uint64_t)v25);
  v3 = v25[0];
  v4 = v25[1];
  v5 = 0.0;
  v6 = 0.0;
  if (v29 <= 0.0)
    goto LABEL_10;
  if (!v28)
  {
    v5 = v26;
LABEL_9:
    v6 = v5 / v29;
    goto LABEL_10;
  }
  if (v28 == 1)
  {
    v6 = v26;
    v5 = v29 * v26;
    goto LABEL_10;
  }
  v6 = v27;
  v5 = v26;
  if (v29 < v26 / v27)
  {
    v5 = v27 * v29;
    goto LABEL_10;
  }
  if (v26 / v27 < v29)
    goto LABEL_9;
LABEL_10:
  v7 = v30;
  v8 = v31;
  v9 = v32;
  v10 = v33;
  v34 = CGRectIntegral(*(CGRect *)&v3);
  x = v34.origin.x;
  y = v34.origin.y;
  width = v34.size.width;
  height = v34.size.height;
  v15 = (void (*)(double, double, double, double))sub_1BB86D918();
  v15(x, y, width, height);
  if (v1)
    return swift_release();
  v21 = v16;
  v22 = v17;
  v23 = v18;
  v24 = v19;
  result = swift_release();
  *(_QWORD *)a1 = v21;
  *(_QWORD *)(a1 + 8) = v22;
  *(_QWORD *)(a1 + 16) = v23;
  *(_QWORD *)(a1 + 24) = v24;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return result;
}

uint64_t sub_1BB1E9B00@<X0>(uint64_t a1@<X8>)
{
  _BYTE *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int *v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;

  v3 = *v1;
  if (*v1)
  {
    if (v3 != 1)
    {
      sub_1BB86D924();
      v21 = v20;
      v23 = v22;
      sub_1BB86D900();
      v25 = v24;
      sub_1BB86D900();
      v27 = v26;
      v28 = (int *)type metadata accessor for ArticleThumbnailViewLayoutAttributesFactory.Options();
      result = sub_1BB86DA14();
      v16 = *(_QWORD *)&v1[v28[6]];
      v17 = *(_QWORD *)&v1[v28[7]];
      v18 = *(_QWORD *)&v1[v28[8]];
      v19 = v1[v28[9]];
      *(_QWORD *)a1 = v21;
      *(_QWORD *)(a1 + 8) = v23;
      *(_QWORD *)(a1 + 16) = v25;
      *(_QWORD *)(a1 + 24) = v27;
      goto LABEL_7;
    }
    sub_1BB86D924();
    v5 = v4;
    v7 = v6;
    sub_1BB86D900();
    v9 = v8;
  }
  else
  {
    sub_1BB86D924();
    v5 = v10;
    v7 = v11;
    sub_1BB86D900();
    v9 = v12;
  }
  v13 = (int *)type metadata accessor for ArticleThumbnailViewLayoutAttributesFactory.Options();
  result = sub_1BB86DA14();
  v16 = *(_QWORD *)&v1[v13[6]];
  v17 = *(_QWORD *)&v1[v13[7]];
  v18 = *(_QWORD *)&v1[v13[8]];
  v19 = v1[v13[9]];
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = 0;
LABEL_7:
  *(_BYTE *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v15;
  *(_QWORD *)(a1 + 48) = v16;
  *(_QWORD *)(a1 + 56) = v17;
  *(_QWORD *)(a1 + 64) = v18;
  *(_BYTE *)(a1 + 72) = v19;
  return result;
}

BOOL static ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t ArticleThumbnailViewLayoutAttributesFactory.Options.init(sizeConstraint:aspectRatio:shadowRadius:cornerRadius:roundedCorners:layeredMedia:)@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, _BYTE *a5@<X8>, double a6@<D0>, double a7@<D1>)
{
  int *v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t result;

  *a5 = *a1;
  v13 = (int *)type metadata accessor for ArticleThumbnailViewLayoutAttributesFactory.Options();
  v14 = &a5[v13[5]];
  v15 = sub_1BB86DA20();
  result = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v14, a2, v15);
  *(double *)&a5[v13[6]] = a6;
  *(double *)&a5[v13[7]] = a7;
  *(_QWORD *)&a5[v13[8]] = a3;
  a5[v13[9]] = a4;
  return result;
}

uint64_t sub_1BB1E9D4C@<X0>(uint64_t a1@<X8>)
{
  return ArticleThumbnailViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)(a1);
}

uint64_t type metadata accessor for ArticleThumbnailViewLayoutAttributesFactory.Options()
{
  uint64_t result;

  result = qword_1ED39D738;
  if (!qword_1ED39D738)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1BB1E9DA0()
{
  unint64_t result;

  result = qword_1EF2BD948;
  if (!qword_1EF2BD948)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint, &type metadata for ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint);
    atomic_store(result, (unint64_t *)&qword_1EF2BD948);
  }
  return result;
}

unint64_t sub_1BB1E9DE8()
{
  unint64_t result;

  result = qword_1ED39D718;
  if (!qword_1ED39D718)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for ArticleThumbnailViewLayoutAttributes, &type metadata for ArticleThumbnailViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED39D718);
  }
  return result;
}

uint64_t dispatch thunk of ArticleThumbnailViewLayoutAttributesFactoryType.makeLayoutAttributes(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t method lookup function for ArticleThumbnailViewLayoutAttributesFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t storeEnumTagSinglePayload for ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB1E9E8C + 4 * byte_1BB8F82B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB1E9EC0 + 4 * asc_1BB8F82B0[v4]))();
}

uint64_t sub_1BB1E9EC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1E9EC8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1E9ED0);
  return result;
}

uint64_t sub_1BB1E9EDC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1E9EE4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB1E9EE8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1E9EF0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint()
{
  return &type metadata for ArticleThumbnailViewLayoutAttributesFactory.SizeConstraint;
}

_QWORD *initializeBufferWithCopyOfBuffer for ArticleThumbnailViewLayoutAttributesFactory.Options(_BYTE *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = &a1[v7];
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86DA20();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[7];
    *(_QWORD *)((char *)v4 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
    *(_QWORD *)((char *)v4 + v11) = *(_QWORD *)((char *)a2 + v11);
    v12 = a3[9];
    *(_QWORD *)((char *)v4 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
    *((_BYTE *)v4 + v12) = *((_BYTE *)a2 + v12);
  }
  return v4;
}

uint64_t destroy for ArticleThumbnailViewLayoutAttributesFactory.Options(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1BB86DA20();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_BYTE *initializeWithCopy for ArticleThumbnailViewLayoutAttributesFactory.Options(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86DA20();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v11 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[v11] = a2[v11];
  return a1;
}

_BYTE *assignWithCopy for ArticleThumbnailViewLayoutAttributesFactory.Options(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86DA20();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

_BYTE *initializeWithTake for ArticleThumbnailViewLayoutAttributesFactory.Options(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86DA20();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v11 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[v11] = a2[v11];
  return a1;
}

_BYTE *assignWithTake for ArticleThumbnailViewLayoutAttributesFactory.Options(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1BB86DA20();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[7];
  *(_QWORD *)&a1[a3[6]] = *(_QWORD *)&a2[a3[6]];
  *(_QWORD *)&a1[v10] = *(_QWORD *)&a2[v10];
  v11 = a3[9];
  *(_QWORD *)&a1[a3[8]] = *(_QWORD *)&a2[a3[8]];
  a1[v11] = a2[v11];
  return a1;
}

uint64_t getEnumTagSinglePayload for ArticleThumbnailViewLayoutAttributesFactory.Options()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1EA268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1BB86DA20();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 36));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ArticleThumbnailViewLayoutAttributesFactory.Options()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1EA304(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86DA20();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 36)) = a2 + 1;
  return result;
}

uint64_t sub_1BB1EA380()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86DA20();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

double EngagementBannerViewLayoutAttributesFactory.makeLayoutAttributes(for:with:)@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxY;
  BOOL v13;
  double v14;
  double result;
  _OWORD v16[3];
  __int128 v17;
  CGRect v18;
  CGRect v19;
  CGRect v20;

  v5 = a2[3];
  v16[2] = a2[2];
  v17 = v5;
  v6 = a2[1];
  v16[0] = *a2;
  v16[1] = v6;
  v7 = *(_QWORD *)&v16[0];
  v18.origin.x = sub_1BB1EA4F8((uint64_t)v16, a1, v3);
  x = v18.origin.x;
  y = v18.origin.y;
  width = v18.size.width;
  height = v18.size.height;
  MaxY = 0.0;
  if (CGRectGetHeight(v18) > 0.0)
  {
    v19.origin.x = x;
    v19.origin.y = y;
    v19.size.width = width;
    v19.size.height = height;
    MaxY = CGRectGetMaxY(v19);
  }
  v20.origin.x = x;
  v20.origin.y = y;
  v20.size.width = width;
  v20.size.height = height;
  v13 = CGRectGetHeight(v20) <= 0.0;
  v14 = -0.0;
  if (!v13)
    v14 = *((double *)&v17 + 1);
  *(_QWORD *)a3 = 0;
  *(_QWORD *)(a3 + 8) = 0;
  result = MaxY + v14;
  *(_QWORD *)(a3 + 16) = v7;
  *(double *)(a3 + 24) = result;
  *(CGFloat *)(a3 + 32) = x;
  *(CGFloat *)(a3 + 40) = y;
  *(CGFloat *)(a3 + 48) = width;
  *(CGFloat *)(a3 + 56) = height;
  return result;
}

double sub_1BB1EA4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v5 = sub_1BB86ED64();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB1EAA10();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86EDB8();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(double *)(a1 + 32);
  type metadata accessor for FeedEngagementBanner();
  sub_1BB86ED94();
  if ((*(unsigned int (**)(char *, uint64_t))(v13 + 88))(v15, v12) == *MEMORY[0x1E0D59550])
  {
    __swift_project_boxed_opaque_existential_1((_QWORD *)(a3 + 56), *(_QWORD *)(a3 + 80));
    sub_1BB86EDA0();
    sub_1BB86EDC4();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v17 = sub_1BB86ED7C();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v11, 1, v17) == 1)
    {
      sub_1BB1EAA64((uint64_t)v11);
    }
    else
    {
      sub_1BB86ED70();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v11, v17);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  return v16;
}

uint64_t EngagementBannerViewLayoutAttributesFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return v0;
}

uint64_t EngagementBannerViewLayoutAttributesFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  return swift_deallocClassInstance();
}

uint64_t EngagementBannerViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)@<X0>(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  CGFloat x;
  CGFloat y;
  CGFloat width;
  CGFloat height;
  double MaxY;
  void (*v34)(double, double, double, double);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t result;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[18];
  CGRect v46;
  CGRect v47;
  CGRect v48;

  v3 = v2;
  v6 = sub_1BB86D7A4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v45 - v11;
  sub_1BB86D900();
  v14 = v13;
  v16 = v15;
  sub_1BB86D90C();
  v17 = (void *)sub_1BB86D738();
  v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  v18(v12, v6);
  objc_msgSend(v17, sel_displayScale);
  v20 = v19;

  sub_1BB86D90C();
  sub_1BB86D714();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v18(v9, v6);
  *(double *)v45 = v14;
  v45[1] = v16;
  v45[2] = v20;
  v45[3] = v22;
  v45[4] = v24;
  v45[5] = v26;
  v45[6] = v28;
  v45[7] = 0x4034000000000000;
  v46.origin.x = sub_1BB1EA4F8((uint64_t)v45, a1, v3);
  x = v46.origin.x;
  y = v46.origin.y;
  width = v46.size.width;
  height = v46.size.height;
  MaxY = 0.0;
  if (CGRectGetHeight(v46) > 0.0)
  {
    v47.origin.x = x;
    v47.origin.y = y;
    v47.size.width = width;
    v47.size.height = height;
    MaxY = CGRectGetMaxY(v47);
  }
  v48.origin.x = x;
  v48.origin.y = y;
  v48.size.width = width;
  v48.size.height = height;
  if (CGRectGetHeight(v48) > 0.0)
    MaxY = MaxY + 20.0;
  v34 = (void (*)(double, double, double, double))sub_1BB86D918();
  v35 = v45[17];
  v34(0.0, 0.0, v14, MaxY);
  if (v35)
    return swift_release();
  v41 = v36;
  v42 = v37;
  v43 = v38;
  v44 = v39;
  result = swift_release();
  *(_QWORD *)a2 = v41;
  *((_QWORD *)a2 + 1) = v42;
  *((_QWORD *)a2 + 2) = v43;
  *((_QWORD *)a2 + 3) = v44;
  a2[4] = x;
  a2[5] = y;
  a2[6] = width;
  a2[7] = height;
  return result;
}

unint64_t sub_1BB1EA9A0()
{
  unint64_t result;

  result = qword_1ED3A0698;
  if (!qword_1ED3A0698)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for EngagementBannerViewLayoutAttributes, &type metadata for EngagementBannerViewLayoutAttributes);
    atomic_store(result, (unint64_t *)&qword_1ED3A0698);
  }
  return result;
}

uint64_t sub_1BB1EA9E4@<X0>(uint64_t a1@<X0>, CGFloat *a2@<X8>)
{
  return EngagementBannerViewLayoutAttributesFactory.createLayoutAttributes(model:options:cursor:)(a1, a2);
}

uint64_t method lookup function for EngagementBannerViewLayoutAttributesFactory()
{
  return swift_lookUpClassMethod();
}

void sub_1BB1EAA10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EBD8)
  {
    sub_1BB86ED7C();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EBD8);
  }
}

uint64_t sub_1BB1EAA64(uint64_t a1)
{
  uint64_t v2;

  sub_1BB1EAA10();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double PublisherLogoImageLayoutAttributes.publisherLogoImageViewFrame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

NewsFeed::PublisherLogoImageLayoutAttributes __swiftcall PublisherLogoImageLayoutAttributes.init(publisherLogoImageViewFrame:)(NewsFeed::PublisherLogoImageLayoutAttributes publisherLogoImageViewFrame)
{
  NewsFeed::PublisherLogoImageLayoutAttributes *v1;

  *v1 = publisherLogoImageViewFrame;
  return publisherLogoImageViewFrame;
}

uint64_t dispatch thunk of PublisherLogoImageLayoutAttributesType.publisherLogoImageViewFrame.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

ValueMetadata *type metadata accessor for PublisherLogoImageLayoutAttributes()
{
  return &type metadata for PublisherLogoImageLayoutAttributes;
}

void *FeedItemRendererResult.cell.getter()
{
  void *v0;
  void *v1;
  id v2;

  sub_1BB1EAB00();
  v1 = v0;
  v2 = v0;
  return v1;
}

void sub_1BB1EAB00()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB1EAB2C()
{
  uint64_t v0;

  sub_1BB1EAF4C((unint64_t *)&unk_1EF2BD980, &qword_1ED3B09B8, (void (*)(uint64_t))type metadata accessor for EmptyView, (void (*)(void))sub_1BB1EB00C);
  return v0;
}

uint64_t *assignWithCopy for FeedItemRendererResult(uint64_t *a1, uint64_t *a2)
{
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = (void *)(*a2 & 0xFFFFFFFFFFFFFFFLL);
  v4 = *a1;
  *a1 = *a2;
  v5 = (void *)(v4 & 0xFFFFFFFFFFFFFFFLL);
  v6 = v3;

  return a1;
}

uint64_t *assignWithTake for FeedItemRendererResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = *a1;
  *a1 = *a2;

  return a1;
}

unint64_t sub_1BB1EAD58()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3AC9B8;
  if (!qword_1ED3AC9B8)
  {
    sub_1BA4B07F0(255, (unint64_t *)&qword_1ED3BBF20, (uint64_t (*)(uint64_t))sub_1BA969BD0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB6738]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB6748], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3AC9B8);
  }
  return result;
}

uint64_t sub_1BB1EADB8()
{
  return sub_1BA4A2870(&qword_1ED3BE7D8, (uint64_t (*)(uint64_t))type metadata accessor for EngagementBannerView, (uint64_t)&protocol conformance descriptor for EngagementBannerView);
}

uint64_t sub_1BB1EADD4()
{
  return sub_1BA4A2870(&qword_1ED3B4890, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutView, (uint64_t)&protocol conformance descriptor for FormatLayoutView);
}

uint64_t sub_1BB1EADF0()
{
  return sub_1BA4A2870(&qword_1ED3B4730, (uint64_t (*)(uint64_t))type metadata accessor for CoverChannelView, (uint64_t)&protocol conformance descriptor for CoverChannelView);
}

uint64_t sub_1BB1EAE0C()
{
  return sub_1BA4A2870(&qword_1ED3B3ED0, (uint64_t (*)(uint64_t))type metadata accessor for CoverIssueView, (uint64_t)&protocol conformance descriptor for CoverIssueView);
}

uint64_t sub_1BB1EAE28()
{
  return sub_1BA4A2870(&qword_1ED3BA9D0, (uint64_t (*)(uint64_t))type metadata accessor for CategoryView, (uint64_t)&protocol conformance descriptor for CategoryView);
}

unint64_t sub_1BB1EAE44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD968;
  if (!qword_1EF2BD968)
  {
    sub_1BA5DFD9C(255, &qword_1ED3B09C8, &qword_1ED3B38D0, (uint64_t (*)(uint64_t))type metadata accessor for VideoView, &qword_1ED3B38C8);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB8508], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD968);
  }
  return result;
}

unint64_t sub_1BB1EAEAC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BD970;
  if (!qword_1EF2BD970)
  {
    sub_1BA5DFD9C(255, &qword_1ED3B09C0, &qword_1ED3B38C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC8A0], &qword_1ED3B38B8);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB8508], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BD970);
  }
  return result;
}

uint64_t sub_1BB1EAF14()
{
  return sub_1BA4A2870(qword_1ED3B1138, (uint64_t (*)(uint64_t))type metadata accessor for FeedBannerAdView, (uint64_t)&protocol conformance descriptor for FeedBannerAdView);
}

uint64_t sub_1BB1EAF30()
{
  return sub_1BA4A2870(&qword_1ED3B8FF8, (uint64_t (*)(uint64_t))type metadata accessor for GapView, (uint64_t)&protocol conformance descriptor for GapView);
}

uint64_t sub_1BB1EAF4C(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    sub_1BB1EAFA8(255, a2, a3, a4);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB8508], v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB1EAF8C()
{
  return sub_1BA4A2870(qword_1ED3B4268, (uint64_t (*)(uint64_t))type metadata accessor for GapOfflineView, (uint64_t)&protocol conformance descriptor for GapOfflineView);
}

void sub_1BB1EAFA8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    a3(255);
    a4();
    v6 = sub_1BB870138();
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB1EB00C()
{
  return sub_1BA4A2870(&qword_1ED3B9020, (uint64_t (*)(uint64_t))type metadata accessor for EmptyView, (uint64_t)&protocol conformance descriptor for EmptyView);
}

uint64_t FeedConfigEncoder.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v9;

  v0 = sub_1BB86BCF8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_allocObject();
  v4 = sub_1BB86BD40();
  v5 = qword_1ED3BA928;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_1ED4767B8;
  *v3 = qword_1ED4767B8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAE158], v0);
  v7 = v6;
  sub_1BB86BD04();
  swift_release();
  return v4;
}

uint64_t FeedConfigEncoder.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v9;

  v0 = sub_1BB86BCF8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = sub_1BB86BD40();
  v5 = qword_1ED3BA928;
  swift_retain();
  if (v5 != -1)
    swift_once();
  v6 = (void *)qword_1ED4767B8;
  *v3 = qword_1ED4767B8;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0CAE158], v0);
  v7 = v6;
  sub_1BB86BD04();
  swift_release();
  return v4;
}

uint64_t FeedConfigEncoder.__deallocating_deinit()
{
  _s8NewsFeed0B13ConfigEncoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t FeedConfigDecoder.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v6;

  v0 = sub_1BB86DC60();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_allocObject();
  v4 = sub_1BB86DC90();
  *v3 = sub_1BA502BF0;
  v3[1] = 0;
  (*(void (**)(_QWORD *, _QWORD, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E0DB2FF8], v0);
  swift_retain();
  sub_1BB86DC6C();
  swift_release();
  return v4;
}

uint64_t FeedConfigDecoder.__deallocating_deinit()
{
  _s8NewsFeed17FormatJSONDecoderCfd_0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FeedConfigEncoder(uint64_t a1)
{
  return sub_1BA4B8364(a1, (uint64_t *)&unk_1ED39C5A0);
}

uint64_t sub_1BB1EB2FC()
{
  return sub_1BA49A3D4();
}

uint64_t sub_1BB1EB308()
{
  return type metadata accessor for FeedConfigEncoder(0);
}

uint64_t sub_1BB1EB310()
{
  return type metadata accessor for FeedConfigDecoder(0);
}

unint64_t sub_1BB1EB318()
{
  unint64_t result;

  result = qword_1EF2BD9B8;
  if (!qword_1EF2BD9B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedConfigCoderError, &type metadata for FeedConfigCoderError);
    atomic_store(result, (unint64_t *)&qword_1EF2BD9B8);
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadSelection()
{
  return &type metadata for DebugFormatUploadSelection;
}

uint64_t sub_1BB1EB36C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t j;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = MEMORY[0x1E0DEE9D8];
  v27 = MEMORY[0x1E0DEE9D8];
  v25 = *(_QWORD *)(a1 + 16);
  if (v25)
  {
    v24 = a1 + 32;
    swift_bridgeObjectRetain();
    for (i = 0; i != v25; ++i)
    {
      v5 = *(_QWORD *)(v24 + 32 * i + 24);
      v6 = *(_QWORD *)(v5 + 16);
      if (v6)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        v7 = (_BYTE *)(v5 + 40);
        v8 = MEMORY[0x1E0DEE9D8];
        do
        {
          if (!*v7)
            __asm { BR              X9 }
          v7 += 16;
          --v6;
        }
        while (v6);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v8 = MEMORY[0x1E0DEE9D8];
      }
      sub_1BA6E9BD8(v8);
    }
    swift_bridgeObjectRelease();
    v9 = v27;
    v10 = a2;
    v2 = v23;
    v3 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v10 = a2;
    v9 = MEMORY[0x1E0DEE9D8];
  }
  v11 = sub_1BA6E43EC(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v2 = v11;
  v28 = v3;
  v26 = *(_QWORD *)(v10 + 16);
  if (v26)
  {
    swift_bridgeObjectRetain();
    for (j = 0; j != v26; ++j)
    {
      v13 = *(_QWORD *)(v10 + 32 + 32 * j + 24);
      v14 = *(_QWORD *)(v13 + 16);
      if (v14)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        v15 = (_BYTE *)(v13 + 40);
        v16 = MEMORY[0x1E0DEE9D8];
        do
        {
          if (!*v15)
            __asm { BR              X9 }
          v15 += 16;
          --v14;
        }
        while (v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v16 = MEMORY[0x1E0DEE9D8];
      }
      sub_1BA6E9BD8(v16);
    }
    swift_bridgeObjectRelease();
    v3 = v28;
    v2 = v23;
  }
  v17 = sub_1BA6E43EC(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2[1] = v17;
  v18 = v2[2];
  v19 = swift_bridgeObjectRetain();
  v20 = sub_1BA71D208(v19, v18);
  result = swift_bridgeObjectRelease();
  v2[2] = v20;
  return result;
}

uint64_t FormatSupplementaryCollection.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(v3 + 8);
  if (*(_QWORD *)(v5 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1BA6E35A8(a1, a2);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      sub_1BA7B873C(0);
      v13 = v12;
      v14 = *(_QWORD *)(v12 - 8);
      sub_1BA551F50(v11 + *(_QWORD *)(v14 + 72) * v10, a3);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
    }
    else
    {
      sub_1BA7B873C(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1BA7B873C(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(a3, 1, 1, v15);
  }
}

uint64_t FormatSupplementaryCollection.encode(to:)(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  _BYTE v4[24];
  uint64_t v5;
  uint64_t v6;

  v2 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  v6 = v2;
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v4, v5);
  sub_1BA552080(0, (unint64_t *)&qword_1ED3B93F8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA551908(&qword_1ED39BE30, &qword_1ED39B140, (uint64_t)&protocol conformance descriptor for FormatObject<A>, MEMORY[0x1E0DEAF10]);
  sub_1BB874404();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

BOOL FormatSupplementaryCollection.isEmpty.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

NewsFeed::FormatSupplementaryCollection __swiftcall FormatSupplementaryCollection.init()()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  void *v3;
  void *v4;
  NewsFeed::FormatSupplementaryCollection result;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v3 = (void *)sub_1BA5BC09C(MEMORY[0x1E0DEE9D8]);
  *v1 = v2;
  v1[1] = v3;
  result.supplementariesByIdentifier._rawValue = v4;
  result.supplementaries._rawValue = v3;
  return result;
}

unint64_t sub_1BB1EBB1C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  unint64_t result;

  v2 = MEMORY[0x1E0DEE9D8];
  result = sub_1BA5BC09C(MEMORY[0x1E0DEE9D8]);
  *a1 = v2;
  a1[1] = result;
  return result;
}

void sub_1BB1EBB4C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  __int128 v3;
  __int128 v4;
  _OWORD v5[5];
  uint64_t v6;

  v3 = *(_OWORD *)(a2 + 48);
  v5[2] = *(_OWORD *)(a2 + 32);
  v5[3] = v3;
  v5[4] = *(_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 80);
  v4 = *(_OWORD *)(a2 + 16);
  v5[0] = *(_OWORD *)a2;
  v5[1] = v4;
  sub_1BA7B8060(a1, (uint64_t)v5, *v2);
}

ValueMetadata *type metadata accessor for FormatSupplementaryCollection()
{
  return &type metadata for FormatSupplementaryCollection;
}

uint64_t sub_1BB1EBBA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA7B873C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for DebugFormatUploadSection()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DebugFormatUploadSection(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugFormatUploadSection(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugFormatUploadSection(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatModelContext(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatModelContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadSection()
{
  return &type metadata for DebugFormatUploadSection;
}

double sub_1BB1EBDA0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v4;
  uint64_t v5;
  double result;

  sub_1BB873CB4();
  sub_1BB872AFC(0);
  sub_1BB87420C();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC("eedConfigDecoder");
  sub_1BB1EC388();
  v5 = swift_allocObject();
  *(_QWORD *)&result = 1;
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v5 + 32) = a1;
  *(_BYTE *)(v5 + 40) = 1;
  *(_BYTE *)a2 = 8;
  *(_QWORD *)(a2 + 8) = 0;
  *(_QWORD *)(a2 + 16) = 0xE000000000000000;
  *(_QWORD *)(a2 + 24) = v5;
  return result;
}

uint64_t sub_1BB1EBEA0@<X0>(unint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t result;

  v4 = *a2;
  v5 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
    v6 = sub_1BB873F30();
    if (v6)
      goto LABEL_3;
  }
  else
  {
    v6 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_3:
      if (v6 >= 1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1BCCE4630](0, a1);
        }
        else
        {
          v7 = *(_QWORD *)(a1 + 32);
          swift_retain();
        }
        __asm { BR              X9 }
      }
      __break(1u);
LABEL_23:
      __break(1u);
      JUMPOUT(0x1BB1EC2D0);
    }
  }
  swift_bridgeObjectRelease();
  type metadata accessor for DebugFormatUploadEntry();
  v8 = sub_1BB872E14();
  swift_release();
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v9)
      goto LABEL_21;
  }
  else
  {
    v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v9)
      goto LABEL_21;
  }
  sub_1BAC7AEC0(0, v9 & ~(v9 >> 63), 0);
  if (v9 < 0)
    goto LABEL_23;
  v10 = 0;
  do
  {
    if ((v8 & 0xC000000000000001) != 0)
    {
      v11 = MEMORY[0x1BCCE4630](v10, v8);
    }
    else
    {
      v11 = *(_QWORD *)(v8 + 8 * v10 + 32);
      swift_retain();
    }
    v13 = *(_QWORD *)(v5 + 16);
    v12 = *(_QWORD *)(v5 + 24);
    if (v13 >= v12 >> 1)
      sub_1BAC7AEC0(v12 > 1, v13 + 1, 1);
    ++v10;
    *(_QWORD *)(v5 + 16) = v13 + 1;
    v14 = v5 + 16 * v13;
    *(_QWORD *)(v14 + 32) = v11;
    *(_BYTE *)(v14 + 40) = 0;
  }
  while (v9 != v10);
LABEL_21:
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a3 = v4;
  *(_QWORD *)(a3 + 8) = 0;
  *(_QWORD *)(a3 + 16) = 0;
  *(_QWORD *)(a3 + 24) = v5;
  return result;
}

uint64_t sub_1BB1EC308@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v4 = (uint64_t *)(v3 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name);
  swift_beginAccess();
  if (v4[1])
  {
    v5 = *v4;
    v6 = v4[1];
  }
  else
  {
    v5 = *(_QWORD *)(v3 + 16);
    v6 = *(_QWORD *)(v3 + 24);
    swift_bridgeObjectRetain();
  }
  *a2 = v5;
  a2[1] = v6;
  return swift_bridgeObjectRetain();
}

void sub_1BB1EC388()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B7EA0)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B7EA0);
  }
}

uint64_t getEnumTagSinglePayload for DebugFormatUploadSectionDescriptor(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;
  unsigned int v7;

  if (!a2)
    return 0;
  if (a2 < 0xF8)
  {
    v6 = *a1;
    if (v6 >= 7)
      v7 = v6 - 6;
    else
      v7 = 0;
    if (v7 >= 3)
      return v7 - 2;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 8;
    if (a2 + 8 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB1EC42C + 4 * asc_1BB8F86E0[v4]))();
  }
}

uint64_t storeEnumTagSinglePayload for DebugFormatUploadSectionDescriptor(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 8;
  if (a3 + 8 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0xF8)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BB1EC4D8 + 4 * byte_1BB8F86EA[v5]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BB1EC50C + 4 * byte_1BB8F86E5[v5]))();
}

uint64_t sub_1BB1EC50C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1EC514(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1EC51CLL);
  return result;
}

uint64_t sub_1BB1EC528(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1EC530);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BB1EC534(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1EC53C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1EC548(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (v1 >= 7)
    return v1 - 6;
  else
    return 0;
}

_BYTE *sub_1BB1EC55C(_BYTE *result, int a2)
{
  if (a2)
    *result = a2 + 6;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatUploadSectionDescriptor()
{
  return &type metadata for DebugFormatUploadSectionDescriptor;
}

uint64_t Assembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

id Assembly.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id Assembly.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of HeadlineViewStylerType.accessoryLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.statusIconSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.backgroundColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.styled(title:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.styled(excerpt:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.styled(date:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.styled(publisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.styled(authorName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.style(thumbnailImageView:cornerRadius:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of HeadlineViewStylerType.style(statusIconView:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

id sub_1BB1EC644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v4;
  void *v5;
  id v6;

  v4 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  if (a3)
  {
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v5 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = 0;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithString_attributes_, v4, v5);

  return v6;
}

BOOL sub_1BB1EC6F0@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  double v21;
  double v22;
  _BOOL8 result;
  id v24;
  void *v25;
  id v27;
  id v28;

  v3 = *(void **)(v2 + 64);
  v4 = *(void **)(v2 + 72);
  v5 = *(void **)(v2 + 80);
  v6 = *(void **)(v2 + 88);
  v7 = *(void **)(v2 + 96);
  v9 = *(void **)(v2 + 104);
  v8 = *(void **)(v2 + 112);
  v10 = *(void **)(v2 + 120);
  v11 = *(void **)(v2 + 128);
  v25 = *(void **)(v2 + 136);
  v28 = *(id *)(v2 + 56);
  v24 = v3;
  v27 = v4;
  v12 = v5;
  v13 = v6;
  v14 = v7;
  v15 = v9;
  v16 = v8;
  v17 = v10;
  v18 = v11;
  v19 = v25;
  v20 = objc_msgSend(v24, sel_resolvedColorWithTraitCollection_, a1);
  objc_msgSend(v20, sel_ts_luminance);
  v22 = v21;

  result = v22 > 0.7 || UIAccessibilityIsInvertColorsEnabled();
  *a2 = result;
  return result;
}

double sub_1BB1EC848()
{
  return 13.0;
}

id sub_1BB1EC854()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 56);
}

BOOL sub_1BB1EC860@<W0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1BB1EC6F0(a1, a2);
}

void sub_1BB1EC880(uint64_t a1)
{
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = (char *)MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = v2;
    v4 = *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_layoutViewResult];
    if (v4)
    {
      v5 = *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_editor];
      type metadata accessor for DebugFormatLayoutTree();
      swift_allocObject();
      swift_retain_n();
      swift_retain();
      *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree] = sub_1BB264E6C(v4, v5);
      swift_retain();
      swift_release();
      objc_msgSend(*(id *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tableView], sel_reloadData);
      v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      swift_retain();
      swift_retain();
      sub_1BB264B58((uint64_t)sub_1BB1F0E64, v6);

      swift_release();
      swift_release();
      swift_release();
      swift_release_n();
    }
    else
    {

    }
  }
}

id sub_1BB1EC9E0()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  objc_class *v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  objc_super v11;

  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController____lazy_storage___heatmapToolbar;
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController____lazy_storage___heatmapToolbar);
  if (v2)
  {
    v3 = *(id *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController____lazy_storage___heatmapToolbar);
  }
  else
  {
    v4 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_editor);
    v5 = (objc_class *)type metadata accessor for DebugFormatLayoutHeatmapToolbar();
    v6 = (char *)objc_allocWithZone(v5);
    swift_unknownObjectWeakInit();
    *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutHeatmapToolbar_editor] = v4;
    swift_unknownObjectWeakAssign();
    v11.receiver = v6;
    v11.super_class = v5;
    swift_retain();
    v7 = objc_msgSendSuper2(&v11, sel_init);
    v8 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v7;
    v3 = v7;

    v2 = 0;
  }
  v9 = v2;
  return v3;
}

void sub_1BB1ECAD4()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  objc_super v9;

  v1 = v0;
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v9, sel_viewDidLoad);
  v2 = objc_msgSend(v0, sel_view);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    objc_msgSend(v3, sel_setBackgroundColor_, v4);

    v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tableView];
    objc_msgSend(v5, sel_setDataSource_, v1);
    objc_msgSend(v5, sel_setDelegate_, v1);
    objc_msgSend(v5, sel_setAlwaysBounceVertical_, 1);
    v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v5, sel_setTableFooterView_, v6);

    type metadata accessor for DebugFormatLayoutTableViewCell();
    sub_1BB873234();
    v7 = objc_msgSend(v1, sel_view);
    if (v7)
    {
      v8 = v7;
      objc_msgSend(v7, sel_addSubview_, v5);

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

unint64_t sub_1BB1ECEA4(uint64_t a1, char *a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  double v21;
  uint64_t v22;
  char *v23;
  id v24;
  void *v25;
  void (*v26)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  id v36;
  char *v37;
  char *v38;
  uint64_t v39;
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  CGRect *v44;
  unsigned int (**v45)(char *, uint64_t, uint64_t);
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  id v50;
  void *v51;
  id v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t result;
  uint64_t v65;
  uint64_t v66;
  unsigned int (**v67)(char *, uint64_t, uint64_t);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  unsigned __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  unsigned __int128 v83;
  unsigned __int128 v84;
  __int128 v85;
  char *v86;
  char *v87;
  __int128 v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  id v92;
  void *v93;
  id v94;
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  _QWORD v97[2];
  unsigned int (*v98)(char *, uint64_t, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  void (*v103)(uint64_t, _QWORD, uint64_t, uint64_t);
  char *v104;
  char *v105;
  char *v106;
  unsigned int (**v107)(char *, uint64_t, uint64_t);
  __int128 v108;
  char *v109;
  CGAffineTransform v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  unsigned __int128 v114;
  unsigned __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  char v120;
  CGAffineTransform v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  unsigned __int128 v125;
  unsigned __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  char v131;
  CGRect v132;

  v3 = v2;
  v6 = sub_1BB86CBE0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v105 = (char *)v97 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v109 = (char *)v97 - v10;
  sub_1BA4B07F0(0, &qword_1ED3B0568, v11, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v12);
  v104 = (char *)v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v97 - v15;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v97 - v18;
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)v97 - v22;
  *(_QWORD *)&v108 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tableView];
  v24 = objc_msgSend((id)v108, sel_indexPathForSelectedRow, v21);
  v107 = (unsigned int (**)(char *, uint64_t, uint64_t))v7;
  if (v24)
  {
    v25 = v24;
    sub_1BB86CBA4();

    v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56);
    v27 = v19;
    v28 = 0;
  }
  else
  {
    v26 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56);
    v27 = v19;
    v28 = 1;
  }
  v29 = v6;
  v103 = v26;
  v26((uint64_t)v27, v28, 1, v6);
  sub_1BB1F0DE4((uint64_t)v19, (uint64_t)v23);
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_layoutViewResult] = a1;
  swift_release();
  v30 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_editor];
  type metadata accessor for DebugFormatLayoutTree();
  swift_allocObject();
  swift_retain_n();
  swift_retain();
  v31 = sub_1BB264E6C(a1, v30);
  v32 = OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree] = v31;
  swift_retain();
  swift_release();
  objc_msgSend((id)v108, sel_reloadData);
  v33 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  swift_retain();
  sub_1BB264B58((uint64_t)sub_1BB1F0E64, v33);
  swift_release();
  swift_release();
  swift_release_n();
  v34 = (char *)MEMORY[0x1BCCE5D40](&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_overlayView]);
  if (!v34 || (v35 = v34, v34, v35 != a2))
  {
    swift_unknownObjectWeakAssign();
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D80]), sel_initWithTarget_action_, v3, sel_didTapOnOverlay_);
    objc_msgSend(a2, sel_addGestureRecognizer_, v36);

  }
  v37 = &a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame];
  *(_OWORD *)v37 = 0u;
  *((_OWORD *)v37 + 1) = 0u;
  v102 = v37;
  sub_1BB2E2034();
  v38 = &a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame];
  *(_OWORD *)v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  v101 = v38;
  v39 = *(_QWORD *)&a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView];
  v40 = *(_OWORD *)&a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16];
  *(_OWORD *)&v121.a = *(_OWORD *)&a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_OWORD *)&v121.c = v40;
  v100 = &a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
  *(_OWORD *)&v121.tx = *(_OWORD *)&a2[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32];
  v41 = 0;
  *(_QWORD *)&v40 = 0;
  v42 = 0;
  v43 = 0;
  v132 = CGRectApplyAffineTransform(*(CGRect *)((char *)&v40 - 8), &v121);
  v44 = (CGRect *)(v39 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentFrame);
  *(CGRect *)(v39 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentFrame) = v132;
  v99 = OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentView;
  objc_msgSend(*(id *)(v39 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentView), sel_setFrame_);
  v106 = v23;
  sub_1BA5E01A4((uint64_t)v23, (uint64_t)v16, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
  v45 = v107;
  if (v107[6](v16, 1, v29) == 1)
  {
    sub_1BA5C699C((uint64_t)v16, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
    v46 = objc_msgSend(v3, sel_navigationController);
    if (v46)
    {
      v47 = v46;
      v48 = objc_msgSend(v46, sel_topViewController);

      if (v48)
      {
        type metadata accessor for DebugFormatInspectorViewController();
        v49 = swift_dynamicCastClass();

        if (v49)
        {
          v50 = objc_msgSend(v3, sel_navigationController);
          if (v50)
          {
            v51 = v50;
            v52 = objc_msgSend(v50, sel_popToRootViewControllerAnimated_, 1);

            v53 = (uint64_t)v106;
            if (v52)

            v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
            v55 = v53;
            return sub_1BA5C699C(v55, &qword_1ED3B0568, v54);
          }
        }
      }
    }
LABEL_29:
    v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
    v55 = (uint64_t)v106;
    return sub_1BA5C699C(v55, &qword_1ED3B0568, v54);
  }
  v97[0] = v39;
  v97[1] = a2;
  v56 = (uint64_t)v109;
  v45[4](v109, (uint64_t)v16, v29);
  v57 = sub_1BB86CBD4();
  v58 = *(_QWORD *)&v3[v32];
  swift_beginAccess();
  v59 = *(_QWORD *)(*(_QWORD *)(v58 + 16) + 16);
  v60 = v105;
  v98 = v45[2];
  v98(v105, v56, v29);
  if (v57 >= v59)
  {
    v96 = v45[1];
    ((void (*)(char *, uint64_t))v96)(v60, v29);
    ((void (*)(char *, uint64_t))v96)(v109, v29);
    goto LABEL_29;
  }
  v61 = sub_1BB86CBC8();
  v62 = *(_QWORD *)&v3[v32];
  swift_beginAccess();
  v63 = *(_QWORD *)(v62 + 16);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (result >= *(_QWORD *)(v63 + 16))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  v65 = *(_QWORD *)(v63 + 24 * result + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = *(_QWORD *)(v65 + 16);
  swift_bridgeObjectRelease();
  v67 = (unsigned int (**)(char *, uint64_t, uint64_t))v45[1];
  ((void (*)(char *, uint64_t))v67)(v60, v29);
  if (v61 >= v66)
  {
    ((void (*)(char *, uint64_t))v67)(v109, v29);
    goto LABEL_29;
  }
  v107 = v67;
  v68 = (uint64_t)v104;
  v98(v104, (uint64_t)v109, v29);
  v103(v68, 0, 1, v29);
  sub_1BB8731E0();
  sub_1BA5C699C(v68, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
  v69 = *(_QWORD *)&v3[v32];
  swift_beginAccess();
  v70 = *(_QWORD *)(v69 + 16);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_36;
  if (result >= *(_QWORD *)(v70 + 16))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v71 = *(_QWORD *)(v70 + 24 * result + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = sub_1BB86CBC8();
  v72 = (uint64_t)v106;
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (result < *(_QWORD *)(v71 + 16))
  {
    v73 = v71 + 200 * result;
    *(_OWORD *)&v121.a = *(_OWORD *)(v73 + 32);
    v74 = *(_OWORD *)(v73 + 48);
    v75 = *(_OWORD *)(v73 + 64);
    v76 = *(_OWORD *)(v73 + 96);
    v122 = *(_OWORD *)(v73 + 80);
    v123 = v76;
    *(_OWORD *)&v121.c = v74;
    *(_OWORD *)&v121.tx = v75;
    v77 = *(_OWORD *)(v73 + 112);
    v78 = *(_OWORD *)(v73 + 128);
    v79 = *(_OWORD *)(v73 + 160);
    v126 = *(_OWORD *)(v73 + 144);
    v127 = v79;
    v124 = v77;
    v125 = v78;
    v80 = *(_OWORD *)(v73 + 176);
    v81 = *(_OWORD *)(v73 + 192);
    v82 = *(_OWORD *)(v73 + 208);
    v131 = *(_BYTE *)(v73 + 224);
    v129 = v81;
    v130 = v82;
    v128 = v80;
    v83 = v125;
    v84 = v126;
    v108 = v123;
    v85 = v124;
    sub_1BAFB380C((uint64_t)&v121);
    swift_bridgeObjectRelease();
    v86 = v102;
    *(_OWORD *)v102 = v108;
    *((_OWORD *)v86 + 1) = v85;
    sub_1BB2E2034();
    v87 = v101;
    *(_OWORD *)v101 = v83;
    *((_OWORD *)v87 + 1) = v84;
    v88 = *((_OWORD *)v100 + 1);
    *(_OWORD *)&v110.a = *(_OWORD *)v100;
    *(_OWORD *)&v110.c = v88;
    *(_OWORD *)&v110.tx = *((_OWORD *)v100 + 2);
    *(_QWORD *)&v88 = v83 >> 64;
    v89 = v83;
    v91 = v84 >> 64;
    v90 = v84;
    *v44 = CGRectApplyAffineTransform(*(CGRect *)((char *)&v88 - 8), &v110);
    objc_msgSend(*(id *)(v97[0] + v99), sel_setFrame_);
    v92 = objc_msgSend(v3, sel_navigationController);
    if (v92
      && (v93 = v92,
          v94 = objc_msgSend(v92, sel_topViewController),
          v93,
          v94))
    {
      type metadata accessor for DebugFormatInspectorViewController();
      if (swift_dynamicCastClass())
      {

        v118 = v129;
        v119 = v130;
        v120 = v131;
        v114 = v125;
        v115 = v126;
        v116 = v127;
        v117 = v128;
        v110 = v121;
        v111 = v122;
        v112 = v123;
        v113 = v124;
        v95 = (uint64_t)v109;
        sub_1BB1ED7D8((uint64_t)&v110, (uint64_t)v109);
        ((void (*)(uint64_t, uint64_t))v107)(v95, v29);
        sub_1BA5C699C(v72, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
        return sub_1BAFB3938((uint64_t)&v121);
      }
      sub_1BAFB3938((uint64_t)&v121);

    }
    else
    {
      sub_1BAFB3938((uint64_t)&v121);
    }
    ((void (*)(char *, uint64_t))v107)(v109, v29);
    v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
    v55 = v72;
    return sub_1BA5C699C(v55, &qword_1ED3B0568, v54);
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1BB1ED7D8(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v9;
  CGSize v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  char *v15;
  uint64_t v16;
  void *v17;
  _OWORD *v18;
  __int128 v19;
  uint64_t v20;
  void *v21;
  CGSize *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  id v29;
  void *v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  CGPoint v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  CGPoint origin;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  char *v53;
  id v54;
  void *v55;
  char *v56;
  uint64_t result;
  uint64_t v58;
  uint64_t ObjectType;
  CGAffineTransform v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  CGRect v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  char v69;
  CGAffineTransform v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  CGRect v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  char v79;
  CGRect v80;

  v3 = v2;
  sub_1BA4B07F0(0, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v60 - v7;
  v9 = *(_OWORD *)(a1 + 176);
  v77 = *(_OWORD *)(a1 + 160);
  v78 = v9;
  v79 = *(_BYTE *)(a1 + 192);
  v10 = *(CGSize *)(a1 + 112);
  v74.origin = *(CGPoint *)(a1 + 96);
  v74.size = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v75 = *(_OWORD *)(a1 + 128);
  v76 = v11;
  v12 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)&v70.tx = *(_OWORD *)(a1 + 32);
  v71 = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v72 = *(_OWORD *)(a1 + 64);
  v73 = v13;
  v14 = *(_OWORD *)(a1 + 16);
  v15 = &v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_overlayView];
  *(_OWORD *)&v70.a = *(_OWORD *)a1;
  *(_OWORD *)&v70.c = v14;
  v16 = MEMORY[0x1BCCE5D40](&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_overlayView]);
  if (v16)
  {
    v17 = (void *)v16;
    v18 = (_OWORD *)(v16 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame);
    v19 = v73;
    *v18 = v72;
    v18[1] = v19;
    sub_1BB2E2034();

  }
  v20 = MEMORY[0x1BCCE5D40](v15);
  if (v20)
  {
    v21 = (void *)v20;
    v80 = v74;
    v22 = (CGSize *)(v20 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame);
    v22->width = v74.origin.x;
    v22->height = v80.origin.y;
    v22[1] = v80.size;
    v23 = *(_QWORD *)(v20 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView);
    v24 = *(_OWORD *)(v20 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16);
    v25 = *(_OWORD *)(v20 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32);
    *(_OWORD *)&v60.a = *(_OWORD *)(v20 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation);
    *(_OWORD *)&v60.c = v24;
    *(_OWORD *)&v60.tx = v25;
    *(CGRect *)(v23 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentFrame) = CGRectApplyAffineTransform(v80, &v60);
    objc_msgSend(*(id *)(v23 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentView), sel_setFrame_);

  }
  v26 = sub_1BB86CBE0();
  v27 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658];
  v28 = *(_QWORD *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v8, a2, v26);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v26);
  sub_1BB8731E0();
  sub_1BA5C699C((uint64_t)v8, &qword_1ED3B0568, v27);
  v29 = objc_msgSend(v3, sel_navigationController);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend(v29, sel_topViewController);

    if (v31)
    {
      type metadata accessor for DebugFormatInspectorViewController();
      v32 = swift_dynamicCastClass();
      if (v32)
      {
        v33 = v32 + qword_1EF2C8D40;
        *(_OWORD *)&v60.a = *(_OWORD *)(v32 + qword_1EF2C8D40);
        v34 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 64);
        v36 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 16);
        v35 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 32);
        v61 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 48);
        v62 = v34;
        *(_OWORD *)&v60.c = v36;
        *(_OWORD *)&v60.tx = v35;
        v37 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 128);
        v39 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 80);
        v38 = *(CGPoint *)(v32 + qword_1EF2C8D40 + 96);
        v64.size = *(CGSize *)(v32 + qword_1EF2C8D40 + 112);
        v65 = v37;
        v63 = v39;
        v64.origin = v38;
        v41 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 160);
        v40 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 176);
        v42 = *(_OWORD *)(v32 + qword_1EF2C8D40 + 144);
        v69 = *(_BYTE *)(v32 + qword_1EF2C8D40 + 192);
        v67 = v41;
        v68 = v40;
        v66 = v42;
        *(_OWORD *)v33 = *(_OWORD *)&v70.a;
        v43 = *(_OWORD *)&v70.c;
        v44 = *(_OWORD *)&v70.tx;
        v45 = v72;
        *(_OWORD *)(v33 + 48) = v71;
        *(_OWORD *)(v33 + 64) = v45;
        *(_OWORD *)(v33 + 16) = v43;
        *(_OWORD *)(v33 + 32) = v44;
        v46 = v73;
        origin = v74.origin;
        v48 = v75;
        *(CGSize *)(v33 + 112) = v74.size;
        *(_OWORD *)(v33 + 128) = v48;
        *(_OWORD *)(v33 + 80) = v46;
        *(CGPoint *)(v33 + 96) = origin;
        v49 = v76;
        v50 = v77;
        v51 = v78;
        *(_BYTE *)(v33 + 192) = v79;
        *(_OWORD *)(v33 + 160) = v50;
        *(_OWORD *)(v33 + 176) = v51;
        *(_OWORD *)(v33 + 144) = v49;
        sub_1BAFB380C((uint64_t)&v70);
        sub_1BAFB3938((uint64_t)&v60);
        sub_1BB601E90();

        goto LABEL_13;
      }

    }
  }
  v67 = v77;
  v68 = v78;
  v69 = v79;
  v64 = v74;
  v65 = v75;
  v66 = v76;
  v60 = v70;
  v61 = v71;
  v62 = v72;
  v63 = v73;
  objc_allocWithZone((Class)type metadata accessor for DebugFormatInspectorViewController());
  sub_1BAFB380C((uint64_t)&v70);
  v52 = swift_retain();
  v53 = sub_1BB6025A8(v52, (uint64_t)&v60);
  v54 = objc_msgSend(v3, sel_navigationController);
  if (v54)
  {
    v55 = v54;
    objc_msgSend(v54, sel_pushViewController_animated_, v53, 1);

  }
LABEL_13:
  v56 = &v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate];
  result = MEMORY[0x1BCCE5D40](&v3[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate]);
  if (result)
  {
    v58 = *((_QWORD *)v56 + 1);
    ObjectType = swift_getObjectType();
    v67 = v77;
    v68 = v78;
    v69 = v79;
    v64 = v74;
    v65 = v75;
    v66 = v76;
    v60 = v70;
    v61 = v71;
    v62 = v72;
    v63 = v73;
    (*(void (**)(char *, CGAffineTransform *, uint64_t, uint64_t))(v58 + 8))(v3, &v60, ObjectType, v58);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1BB1EDC20(uint64_t a1, uint64_t a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  char v51;

  v38 = a1;
  v4 = sub_1BB86CBE0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    v9 = *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree];
    swift_beginAccess();
    v10 = *(_QWORD *)(v9 + 16);
    v11 = *(_QWORD *)(v10 + 16);
    if (v11)
    {
      v12 = v10 + 32;
      v13 = swift_bridgeObjectRetain();
      v14 = 0;
      v34 = v13;
      v35 = v2;
      v32 = v5;
      v33 = v4;
      v30 = v11;
      v31 = v8;
      v29 = v12;
      do
      {
        if (v14 >= *(_QWORD *)(v13 + 16))
        {
          __break(1u);
          JUMPOUT(0x1BB1EE380);
        }
        v15 = *(_QWORD *)(v12 + 24 * v14 + 16);
        v16 = *(_QWORD *)(v15 + 16);
        if (v16)
        {
          v36 = v14;
          swift_bridgeObjectRetain();
          v17 = *(_OWORD *)(v15 + 192);
          v48 = *(_OWORD *)(v15 + 176);
          v49 = v17;
          v50 = *(_OWORD *)(v15 + 208);
          v51 = *(_BYTE *)(v15 + 224);
          v18 = *(_OWORD *)(v15 + 128);
          v44 = *(_OWORD *)(v15 + 112);
          v45 = v18;
          v19 = *(_OWORD *)(v15 + 160);
          v46 = *(_OWORD *)(v15 + 144);
          v47 = v19;
          v20 = *(_OWORD *)(v15 + 48);
          v21 = *(_OWORD *)(v15 + 80);
          v22 = *(_OWORD *)(v15 + 96);
          v41 = *(_OWORD *)(v15 + 64);
          v42 = v21;
          v43 = v22;
          v39 = *(_OWORD *)(v15 + 32);
          v40 = v20;
          v37 = v16 - 1;
          __asm { BR              X9 }
        }
        ++v14;
      }
      while (v14 != v11);
      swift_bridgeObjectRelease();
    }
  }
  v23 = objc_msgSend(v2, sel_navigationController, v6, v29, v30, v31, v32, v33, v34, v35);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend(v23, sel_topViewController);

    if (v25)
    {
      type metadata accessor for DebugFormatInspectorViewController();
      v26 = swift_dynamicCastClass();

      if (v26)
      {
        v27 = objc_msgSend(v2, sel_navigationController);
        if (v27)
        {
          v28 = v27;

        }
      }
    }
  }
}

uint64_t sub_1BB1EE3E4(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  char *v22;
  uint64_t result;
  char *v24;
  double v25;
  double v26;
  double v27;
  double v28;
  double v29;
  double v30;
  double v31;
  double v32;
  uint64_t v33;
  uint64_t v34;
  double v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  id v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t i;
  __int128 v45;
  __int128 v46;
  CGPoint v47;
  CGSize v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  double x;
  double y;
  CGFloat width;
  CGFloat height;
  double v60;
  double v61;
  double v62;
  double v63;
  CGFloat v64;
  CGFloat v65;
  double v66;
  double v67;
  char *v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  CGSize size;
  __int128 v75;
  unint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (*v80)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  char *v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  CGSize v106;
  CGPoint origin;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  CGFloat v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  CGAffineTransform v140;
  __int128 v141;
  CGPoint v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  char v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  CGRect v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  char v162;
  CGPoint v163;
  CGRect v164;
  CGRect v165;
  CGRect v166;
  CGRect v167;
  CGRect v168;
  CGRect v169;

  sub_1BA4B07F0(0, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v122 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v122 - v7;
  sub_1BAC87DF0();
  v10 = v9;
  v134 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v129 = (char *)&v122 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v126 = (char *)&v122 - v13;
  MEMORY[0x1E0C80A78](v14);
  v127 = (uint64_t)&v122 - v15;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v122 - v17;
  v19 = sub_1BB86CBE0();
  v137 = *(_QWORD *)(v19 - 8);
  v138 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v122 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1BCCE5D40](v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_overlayView, v20);
  if (!result)
    return result;
  v24 = (char *)result;
  v133 = v10;
  objc_msgSend(a1, sel_locationInView_, result);
  v26 = v25;
  v28 = v27;
  objc_msgSend(v24, sel_frame);
  v30 = v29;
  objc_msgSend(v24, sel_frame);
  v32 = v31;
  v33 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree);
  swift_beginAccess();
  v34 = *(_QWORD *)(v33 + 16);
  v131 = *(_QWORD *)(v34 + 16);
  v132 = v24;
  if (v131)
  {
    v123 = v5;
    v124 = v8;
    v125 = v1;
    v136 = v28 + v32;
    v35 = v26 + v30;
    v36 = &v24[OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation];
    v130 = v34 + 32;
    v128 = v34;
    swift_bridgeObjectRetain();
    v37 = 0;
    v38 = MEMORY[0x1E0DEE9D8];
    v39 = v24;
    result = v128;
    v40 = (uint64_t)v129;
    do
    {
      if (v37 >= *(_QWORD *)(result + 16))
      {
        __break(1u);
        goto LABEL_37;
      }
      v41 = *(_QWORD *)(v130 + 24 * v37 + 16);
      v42 = *(_QWORD *)(v41 + 16);
      if (v42)
      {
        v135 = v37;
        swift_bridgeObjectRetain();
        v43 = 0;
        v139 = v42 - 1;
        for (i = 32; ; i += 200)
        {
          v151 = *(_OWORD *)(v41 + i);
          v45 = *(_OWORD *)(v41 + i + 16);
          v46 = *(_OWORD *)(v41 + i + 32);
          v47 = *(CGPoint *)(v41 + i + 64);
          v154 = *(_OWORD *)(v41 + i + 48);
          v155.origin = v47;
          v152 = v45;
          v153 = v46;
          v48 = *(CGSize *)(v41 + i + 80);
          v49 = *(_OWORD *)(v41 + i + 96);
          v50 = *(_OWORD *)(v41 + i + 128);
          v157 = *(_OWORD *)(v41 + i + 112);
          v158 = v50;
          v155.size = v48;
          v156 = v49;
          v51 = *(_OWORD *)(v41 + i + 144);
          v52 = *(_OWORD *)(v41 + i + 160);
          v53 = *(_OWORD *)(v41 + i + 176);
          v162 = *(_BYTE *)(v41 + i + 192);
          v160 = v52;
          v161 = v53;
          v159 = v51;
          v54 = *((_OWORD *)v36 + 1);
          v55 = *((_OWORD *)v36 + 2);
          *(_OWORD *)&v140.a = *(_OWORD *)v36;
          *(_OWORD *)&v140.c = v54;
          *(_OWORD *)&v140.tx = v55;
          v164 = CGRectApplyAffineTransform(v155, &v140);
          x = v164.origin.x;
          y = v164.origin.y;
          width = v164.size.width;
          height = v164.size.height;
          sub_1BAFB380C((uint64_t)&v151);
          objc_msgSend(v39, sel_frame);
          v61 = x + v60;
          objc_msgSend(v39, sel_frame);
          v63 = y + v62;
          v165.origin.x = x;
          v165.origin.y = y;
          v165.size.width = width;
          v165.size.height = height;
          v64 = CGRectGetWidth(v165);
          v166.origin.x = x;
          v166.origin.y = y;
          v166.size.width = width;
          v166.size.height = height;
          v65 = CGRectGetHeight(v166);
          v167.origin.x = v61;
          v167.origin.y = v63;
          v167.size.width = v64;
          v167.size.height = v65;
          v163.x = v35;
          v163.y = v136;
          if (CGRectContainsPoint(v167, v163))
          {
            MEMORY[0x1BCCDD4D8](v43, v135);
            sub_1BAFB380C((uint64_t)&v151);
            v168.origin.x = v61;
            v168.origin.y = v63;
            v168.size.width = v64;
            v168.size.height = v65;
            v66 = CGRectGetWidth(v168);
            v169.origin.x = v61;
            v169.origin.y = v63;
            v169.size.width = v64;
            v169.size.height = v65;
            v67 = v66 * CGRectGetHeight(v169);
            v68 = &v18[*(int *)(v133 + 48)];
            v69 = *(int *)(v133 + 64);
            (*(void (**)(char *, char *, uint64_t))(v137 + 16))(v18, v22, v138);
            v70 = v161;
            *((_OWORD *)v68 + 10) = v160;
            *((_OWORD *)v68 + 11) = v70;
            v68[192] = v162;
            v71 = v157;
            *((_OWORD *)v68 + 6) = v156;
            *((_OWORD *)v68 + 7) = v71;
            v72 = v159;
            *((_OWORD *)v68 + 8) = v158;
            *((_OWORD *)v68 + 9) = v72;
            v73 = v154;
            *((_OWORD *)v68 + 2) = v153;
            *((_OWORD *)v68 + 3) = v73;
            size = v155.size;
            *((_OWORD *)v68 + 4) = v155.origin;
            *((CGSize *)v68 + 5) = size;
            v75 = v152;
            *(_OWORD *)v68 = v151;
            *((_OWORD *)v68 + 1) = v75;
            *(double *)&v18[v69] = v67;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v38 = sub_1BB393190(0, *(_QWORD *)(v38 + 16) + 1, 1, v38);
            v77 = *(_QWORD *)(v38 + 16);
            v76 = *(_QWORD *)(v38 + 24);
            if (v77 >= v76 >> 1)
              v38 = sub_1BB393190(v76 > 1, v77 + 1, 1, v38);
            *(_QWORD *)(v38 + 16) = v77 + 1;
            sub_1BB1F1314((uint64_t)v18, v38+ ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80))+ *(_QWORD *)(v134 + 72) * v77);
            sub_1BAFB3938((uint64_t)&v151);
            (*(void (**)(char *, uint64_t))(v137 + 8))(v22, v138);
            v39 = v132;
          }
          else
          {
            sub_1BAFB3938((uint64_t)&v151);
          }
          if (v139 == v43)
            break;
          ++v43;
        }
        swift_bridgeObjectRelease();
        result = v128;
        v40 = (uint64_t)v129;
        v37 = v135;
      }
      ++v37;
    }
    while (v37 != v131);
    swift_bridgeObjectRelease();
    v8 = v124;
    v5 = v123;
    v78 = *(_QWORD *)(v38 + 16);
    if (!v78)
      goto LABEL_22;
  }
  else
  {
    v38 = MEMORY[0x1E0DEE9D8];
    v40 = (uint64_t)v129;
    v78 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v78)
    {
LABEL_22:
      v80 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56);
      v81 = v80(v8, 1, 1, v133);
      goto LABEL_23;
    }
  }
  v79 = v38 + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
  sub_1BB1F1294(v79, v127);
  result = swift_bridgeObjectRetain();
  if (v78 == 1)
  {
LABEL_20:
    sub_1BB1F1314(v127, (uint64_t)v8);
    v80 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v134 + 56);
    v80(v8, 0, 1, v133);
    v81 = swift_bridgeObjectRelease();
LABEL_23:
    MEMORY[0x1E0C80A78](v81);
    *(&v122 - 2) = (uint64_t)v8;
    swift_bridgeObjectRetain();
    sub_1BAC9CA20((uint64_t (*)(char *))sub_1BB1F1358, (uint64_t)(&v122 - 4), v38);
    v83 = v82;
    swift_bridgeObjectRelease();
    v84 = *(_QWORD *)(v83 + 16);
    if (v84)
    {
      v85 = v134;
      sub_1BB1F1294(v83+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(_QWORD *)(v134 + 72) * (v84 - 1), (uint64_t)v5);
      v86 = 0;
      v87 = v133;
    }
    else
    {
      v86 = 1;
      v87 = v133;
      v85 = v134;
    }
    v80(v5, v86, 1, v87);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v85 + 48))(v5, 1, v87) == 1)
    {

      sub_1BA5C699C((uint64_t)v8, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0);
      return sub_1BA5C699C((uint64_t)v5, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0);
    }
    else
    {
      v88 = *(int *)(v87 + 48);
      v89 = (uint64_t)v126;
      v90 = &v126[v88];
      v91 = *(int *)(v87 + 64);
      v92 = &v5[v88];
      (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v126, v5, v138);
      v93 = *((_OWORD *)v92 + 9);
      v94 = *((_OWORD *)v92 + 11);
      v160 = *((_OWORD *)v92 + 10);
      v95 = v160;
      v161 = v94;
      v96 = *((_OWORD *)v92 + 5);
      v97 = *((_OWORD *)v92 + 7);
      v156 = *((_OWORD *)v92 + 6);
      v98 = v156;
      v157 = v97;
      v99 = *((_OWORD *)v92 + 7);
      v100 = *((_OWORD *)v92 + 9);
      v158 = *((_OWORD *)v92 + 8);
      v101 = v158;
      v159 = v100;
      v102 = *((_OWORD *)v92 + 1);
      v103 = *((_OWORD *)v92 + 3);
      v153 = *((_OWORD *)v92 + 2);
      v104 = v153;
      v154 = v103;
      v105 = *((_OWORD *)v92 + 3);
      v106 = (CGSize)*((_OWORD *)v92 + 5);
      v155.origin = (CGPoint)*((_OWORD *)v92 + 4);
      origin = v155.origin;
      v155.size = v106;
      v109 = *((_OWORD *)v92 + 3);
      v108 = *((_OWORD *)v92 + 4);
      *((_OWORD *)v90 + 2) = *((_OWORD *)v92 + 2);
      *((_OWORD *)v90 + 3) = v109;
      v110 = *(_OWORD *)v92;
      v111 = *((_OWORD *)v92 + 1);
      v113 = *((_OWORD *)v92 + 7);
      v112 = *((_OWORD *)v92 + 8);
      *((_OWORD *)v90 + 6) = *((_OWORD *)v92 + 6);
      *((_OWORD *)v90 + 7) = v113;
      v114 = *((_OWORD *)v92 + 5);
      *((_OWORD *)v90 + 4) = v108;
      *((_OWORD *)v90 + 5) = v114;
      v90[192] = v92[192];
      v115 = *((_OWORD *)v92 + 11);
      *((_OWORD *)v90 + 10) = *((_OWORD *)v92 + 10);
      *((_OWORD *)v90 + 11) = v115;
      v116 = *((_OWORD *)v92 + 9);
      *((_OWORD *)v90 + 8) = v112;
      *((_OWORD *)v90 + 9) = v116;
      *(_QWORD *)&v112 = *(_QWORD *)&v5[v91];
      *(_OWORD *)v90 = *(_OWORD *)v92;
      *((_OWORD *)v90 + 1) = v111;
      *(_QWORD *)(v89 + v91) = v112;
      v118 = *(_OWORD *)v92;
      v117 = *((_OWORD *)v92 + 1);
      v151 = v110;
      v152 = v117;
      v119 = *((_OWORD *)v92 + 11);
      v148 = v95;
      v149 = v119;
      v144 = v98;
      v145 = v99;
      v146 = v101;
      v147 = v93;
      *(_OWORD *)&v140.tx = v104;
      v141 = v105;
      v142 = origin;
      v143 = v96;
      v162 = v92[192];
      v150 = v92[192];
      *(_OWORD *)&v140.a = v118;
      *(_OWORD *)&v140.c = v102;
      sub_1BAFB380C((uint64_t)&v151);
      sub_1BB1ED7D8((uint64_t)&v140, v89);

      sub_1BB1F12D8(v89);
      sub_1BA5C699C((uint64_t)v8, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0);
      return sub_1BAFB3938((uint64_t)&v151);
    }
  }
  v120 = 1;
  v121 = v127;
  while (v120 < *(_QWORD *)(v38 + 16))
  {
    sub_1BB1F1294(v79 + *(_QWORD *)(v134 + 72) * v120, v40);
    if (*(double *)(v40 + *(int *)(v133 + 64)) >= *(double *)(v121 + *(int *)(v133 + 64)))
    {
      result = sub_1BB1F12D8(v40);
    }
    else
    {
      sub_1BB1F12D8(v121);
      result = sub_1BB1F1314(v40, v121);
    }
    if (v78 == ++v120)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

BOOL sub_1BB1EEC68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  double v23;
  _BOOL8 v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  double v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  _OWORD v37[12];
  char v38;

  v35 = a2;
  sub_1BA4B07F0(0, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v35 - v4;
  sub_1BAC87DF0();
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(int *)(v11 + 48);
  v13 = &v10[v12];
  v14 = *(int *)(v11 + 64);
  v15 = a1 + v12;
  v16 = sub_1BB86CBE0();
  v36 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v10, a1, v16);
  v17 = *(_OWORD *)(v15 + 48);
  *((_OWORD *)v13 + 2) = *(_OWORD *)(v15 + 32);
  *((_OWORD *)v13 + 3) = v17;
  v18 = *(_OWORD *)(v15 + 112);
  *((_OWORD *)v13 + 6) = *(_OWORD *)(v15 + 96);
  *((_OWORD *)v13 + 7) = v18;
  v19 = *(_OWORD *)(v15 + 80);
  *((_OWORD *)v13 + 4) = *(_OWORD *)(v15 + 64);
  *((_OWORD *)v13 + 5) = v19;
  v13[192] = *(_BYTE *)(v15 + 192);
  v20 = *(_OWORD *)(v15 + 176);
  *((_OWORD *)v13 + 10) = *(_OWORD *)(v15 + 160);
  *((_OWORD *)v13 + 11) = v20;
  v21 = *(_OWORD *)(v15 + 144);
  *((_OWORD *)v13 + 8) = *(_OWORD *)(v15 + 128);
  *((_OWORD *)v13 + 9) = v21;
  v22 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v13 = *(_OWORD *)v15;
  *((_OWORD *)v13 + 1) = v22;
  v23 = *(double *)(a1 + v14);
  *(double *)&v10[v14] = v23;
  sub_1BA5E01A4(v35, (uint64_t)v5, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) == 1)
  {
    sub_1BA5C699C((uint64_t)v5, &qword_1EF2BDA58, (uint64_t (*)(uint64_t))sub_1BAC87DF0);
    v24 = 0;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v16);
  }
  else
  {
    v25 = &v5[*(int *)(v7 + 48)];
    v26 = *((_OWORD *)v25 + 11);
    v37[10] = *((_OWORD *)v25 + 10);
    v37[11] = v26;
    v38 = v25[192];
    v27 = *((_OWORD *)v25 + 7);
    v37[6] = *((_OWORD *)v25 + 6);
    v37[7] = v27;
    v28 = *((_OWORD *)v25 + 9);
    v37[8] = *((_OWORD *)v25 + 8);
    v37[9] = v28;
    v29 = *((_OWORD *)v25 + 3);
    v37[2] = *((_OWORD *)v25 + 2);
    v30 = *((_OWORD *)v25 + 4);
    v37[5] = *((_OWORD *)v25 + 5);
    v37[3] = v29;
    v37[4] = v30;
    v31 = *(_OWORD *)v25;
    v37[1] = *((_OWORD *)v25 + 1);
    v37[0] = v31;
    sub_1BAFB3938((uint64_t)v37);
    v32 = *(double *)&v5[*(int *)(v7 + 64)];
    v33 = *(void (**)(char *, uint64_t))(v36 + 8);
    v33(v5, v16);
    v24 = v23 == v32;
    v33(v10, v16);
  }
  return v24;
}

uint64_t type metadata accessor for DebugFormatLayoutViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB1EF0A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __objc2_class_ro *v23;
  void **v24;
  char v25;
  uint64_t v26;
  void *v27;
  void *v28;
  double v29;
  id v30;
  id v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  id v36;
  id v37;
  void *v38;
  id v39;
  void *v40;
  id v41;
  id v42;
  id v43;
  void *v44;
  void *v45;
  id v46;
  void *v47;
  void *v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  void *v54;
  id v55;
  const char *v56;
  void *v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  void *v61;
  void *v62;
  id v63;
  uint64_t v64;
  void *v65;
  id v66;
  id v67;
  void *v68;
  id v69;
  uint64_t v70;
  id v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  void *v75;
  id v76;
  void *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t (*v85)(uint64_t);
  int v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  void *v90;
  double v91;
  id v92;
  void *v93;
  id v94;
  id v95;
  void *v96;
  id v97;
  id v98;
  void *v99;
  void *v100;
  id v101;
  void *v102;
  id v103;
  void *v104;
  id v105;
  void *v106;
  uint64_t v107;
  void *v108;
  id v109;
  void *v110;
  id v111;
  void *v112;
  id v113;
  id v114;
  id v115;
  void *v116;
  id v117;
  uint64_t v118;
  id v119;
  uint64_t result;
  _QWORD v121[2];
  id v122;
  id v123;
  __int128 v124;
  uint64_t v125;
  char *v126;
  id v127;
  id v128;
  id v129;
  uint64_t v130;
  uint64_t v131;
  id v132;
  int v133;
  uint64_t v134;
  unint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  unsigned __int8 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  unsigned __int8 v161;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED39ED40, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v121 - v6;
  v8 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree);
  swift_beginAccess();
  v9 = *(_QWORD *)(v8 + 16);
  swift_bridgeObjectRetain();
  v10 = sub_1BB86CBD4();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if (v10 >= *(_QWORD *)(v9 + 16))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = *(_QWORD *)(v9 + 24 * v10 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = sub_1BB86CBC8();
  if ((v12 & 0x8000000000000000) != 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v12 >= *(_QWORD *)(v11 + 16))
  {
LABEL_42:
    __break(1u);
    result = swift_release();
    __break(1u);
    return result;
  }
  v131 = a1;
  v126 = v7;
  v13 = v11 + 200 * v12;
  v149 = *(_OWORD *)(v13 + 32);
  v14 = *(_OWORD *)(v13 + 48);
  v15 = *(_OWORD *)(v13 + 64);
  v16 = *(_OWORD *)(v13 + 96);
  v152 = *(_OWORD *)(v13 + 80);
  v153 = v16;
  v150 = v14;
  v151 = v15;
  v17 = *(_OWORD *)(v13 + 112);
  v18 = *(_OWORD *)(v13 + 128);
  v19 = *(_OWORD *)(v13 + 160);
  v156 = *(_OWORD *)(v13 + 144);
  v157 = v19;
  v154 = v17;
  v155 = v18;
  v20 = *(_OWORD *)(v13 + 176);
  v21 = *(_OWORD *)(v13 + 192);
  v22 = *(_OWORD *)(v13 + 208);
  v161 = *(_BYTE *)(v13 + 224);
  v159 = v21;
  v160 = v22;
  v158 = v20;
  sub_1BAFB380C((uint64_t)&v149);
  swift_bridgeObjectRelease();
  v132 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_init);
  v145 = v158;
  v146 = v159;
  v147 = v160;
  v148 = v161;
  v143 = v156;
  v144 = v157;
  v138 = v151;
  v139 = v152;
  v141 = v154;
  v142 = v155;
  v140 = v153;
  v136 = v149;
  v137 = v150;
  *(_QWORD *)&v136 = sub_1BB249700();
  swift_bridgeObjectRetain();
  sub_1BB1F0244((uint64_t *)&v136);
  v130 = a2;
  swift_bridgeObjectRelease();
  v133 = v161;
  v23 = &StubThumbnailProcessor;
  v24 = (void **)MEMORY[0x1E0DC1138];
  if (*(_QWORD *)(v136 + 16))
  {
    v25 = *(_BYTE *)(v136 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_1BB87A390;
    v27 = *v24;
    *(_QWORD *)(v26 + 32) = *v24;
    v28 = (void *)objc_opt_self();
    v29 = *MEMORY[0x1E0DC1418];
    v30 = v27;
    v31 = objc_msgSend(v28, sel_systemFontOfSize_weight_, 15.0, v29);
    v32 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    *(_QWORD *)(v26 + 40) = v31;
    v33 = (void *)*MEMORY[0x1E0DC1140];
    *(_QWORD *)(v26 + 64) = v32;
    *(_QWORD *)(v26 + 72) = v33;
    if ((v25 & 1) != 0)
    {
      v34 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
      v35 = v33;
      v36 = objc_msgSend(v34, sel_initWithRed_green_blue_alpha_, 0.988235294, 0.729411765, 0.0117647059, 1.0);
    }
    else
    {
      v38 = (void *)objc_opt_self();
      v39 = v33;
      v36 = objc_msgSend(v38, sel_systemRedColor);
    }
    v40 = v36;
    v37 = v132;
    if (v133)
      v41 = v36;
    else
      v41 = objc_msgSend(v36, sel_colorWithAlphaComponent_, 0.3);
    v42 = v41;
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    *(_QWORD *)(v26 + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    *(_QWORD *)(v26 + 80) = v42;
    sub_1BA76E82C(v26);
    v43 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
    v44 = (void *)sub_1BB872970();
    type metadata accessor for Key(0);
    sub_1BA76F768();
    v45 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v46 = objc_msgSend(v43, sel_initWithString_attributes_, v44, v45);

    v23 = &StubThumbnailProcessor;
    objc_msgSend(v37, sel_appendAttributedString_, v46);

  }
  else
  {
    swift_release();
    v33 = (void *)*MEMORY[0x1E0DC1140];
    v37 = v132;
  }
  v145 = v158;
  v146 = v159;
  v147 = v160;
  v148 = v161;
  v143 = v156;
  v144 = v157;
  v138 = v151;
  v139 = v152;
  v141 = v154;
  v142 = v155;
  v140 = v153;
  v136 = v149;
  v137 = v150;
  sub_1BB2499DC();
  v48 = v47;
  v49 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_, 15.0);
  v50 = objc_msgSend(v48, sel_imageWithConfiguration_, v49);

  v51 = objc_msgSend((id)objc_opt_self(), sel_textAttachmentWithImage_, v50);
  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
  v52 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_attributedStringWithAttachment_, v51);
  v53 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
  v54 = v53;
  v132 = v51;
  if ((v133 & 1) == 0)
  {
    v55 = objc_msgSend(v53, sel_colorWithAlphaComponent_, 0.3);

    v54 = v55;
  }
  objc_msgSend(v52, sel_addAttribute_value_range_, v33, v54, 0, 1);

  v56 = *(const char **)&v23[54].flags;
  v57 = v37;
  v129 = v52;
  objc_msgSend(v37, v56, v52);
  v145 = v158;
  v146 = v159;
  v147 = v160;
  v134 = 32;
  v135 = 0xE100000000000000;
  v148 = v161;
  v143 = v156;
  v144 = v157;
  v138 = v151;
  v139 = v152;
  v141 = v154;
  v142 = v155;
  v140 = v153;
  v136 = v149;
  v137 = v150;
  sub_1BB24A50C();
  sub_1BB872AFC(v58);
  swift_bridgeObjectRelease();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v125 = v59;
  v60 = swift_allocObject();
  v124 = xmmword_1BB87A390;
  *(_OWORD *)(v60 + 16) = xmmword_1BB87A390;
  v61 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(v60 + 32) = *MEMORY[0x1E0DC1138];
  v62 = (void *)objc_opt_self();
  v123 = v61;
  v128 = v62;
  v63 = objc_msgSend(v62, sel_systemFontOfSize_, 15.0);
  v64 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(v60 + 40) = v63;
  *(_QWORD *)(v60 + 64) = v64;
  *(_QWORD *)(v60 + 72) = v33;
  v65 = (void *)objc_opt_self();
  v66 = v33;
  v127 = v65;
  v67 = objc_msgSend(v65, sel_labelColor);
  v68 = v67;
  v122 = v66;
  if ((v133 & 1) == 0)
  {
    v69 = objc_msgSend(v67, sel_colorWithAlphaComponent_, 0.3);

    v68 = v69;
  }
  v70 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(v60 + 104) = v70;
  *(_QWORD *)(v60 + 80) = v68;
  sub_1BA76E82C(v60);
  v71 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v72 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  v74 = v73;
  sub_1BA76F768();
  v121[1] = v74;
  v75 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v76 = objc_msgSend(v71, sel_initWithString_attributes_, v72, v75);

  v77 = v57;
  objc_msgSend(v57, sel_appendAttributedString_, v76);

  v145 = v158;
  v146 = v159;
  v147 = v160;
  v148 = v161;
  v143 = v156;
  v144 = v157;
  v138 = v151;
  v139 = v152;
  v141 = v154;
  v142 = v155;
  v140 = v153;
  v136 = v149;
  v137 = v150;
  sub_1BB24A860();
  v79 = v78;
  v81 = v80;
  swift_bridgeObjectRelease();
  v82 = HIBYTE(v81) & 0xF;
  if ((v81 & 0x2000000000000000) == 0)
    v82 = v79 & 0xFFFFFFFFFFFFLL;
  if (v82)
  {
    v145 = v158;
    v146 = v159;
    v147 = v160;
    v148 = v161;
    v143 = v156;
    v144 = v157;
    v138 = v151;
    v139 = v152;
    v141 = v154;
    v142 = v155;
    v140 = v153;
    v136 = v149;
    v137 = v150;
    sub_1BB24A860();
    v83 = (uint64_t)v126;
    sub_1BB86C8BC();
    swift_bridgeObjectRelease();
    v84 = sub_1BB86C8E0();
    v85 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    v86 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v84 - 8) + 48))(v83, 1, v84);
    sub_1BA5C699C(v83, (unint64_t *)&qword_1ED39ED40, v85);
    if (v86 == 1)
    {
      v145 = v158;
      v146 = v159;
      v147 = v160;
      v134 = 8224;
      v135 = 0xE200000000000000;
      v148 = v161;
      v143 = v156;
      v144 = v157;
      v138 = v151;
      v139 = v152;
      v141 = v154;
      v142 = v155;
      v140 = v153;
      v136 = v149;
      v137 = v150;
      sub_1BB24A860();
      sub_1BB872AFC(v87);
      swift_bridgeObjectRelease();
      v88 = v64;
      v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = v124;
      v90 = v123;
      *(_QWORD *)(v89 + 32) = v123;
      v91 = *MEMORY[0x1E0DC1420];
      v92 = v90;
      *(_QWORD *)(v89 + 40) = objc_msgSend(v128, sel_systemFontOfSize_weight_, 12.0, v91);
      v93 = v122;
      *(_QWORD *)(v89 + 64) = v88;
      *(_QWORD *)(v89 + 72) = v93;
      v94 = v93;
      v95 = objc_msgSend(v127, sel_systemBlueColor);
      v96 = v95;
      if ((v133 & 1) == 0)
      {
        v97 = objc_msgSend(v95, sel_colorWithAlphaComponent_, 0.3);

        v96 = v97;
      }
      *(_QWORD *)(v89 + 104) = v70;
      *(_QWORD *)(v89 + 80) = v96;
      sub_1BA76E82C(v89);
      v98 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
      v99 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      v100 = (void *)sub_1BB872760();
      swift_bridgeObjectRelease();
      v101 = objc_msgSend(v98, sel_initWithString_attributes_, v99, v100);

      objc_msgSend(v77, sel_appendAttributedString_, v101);
    }
  }
  type metadata accessor for DebugFormatLayoutTableViewCell();
  v102 = (void *)sub_1BB87321C();
  v103 = objc_msgSend(v102, sel_textLabel);
  if (v103)
  {
    v104 = v103;
    objc_msgSend(v103, sel_setAttributedText_, v77);

  }
  v105 = objc_msgSend(v102, sel_detailTextLabel);
  if (v105)
  {
    v106 = v105;
    v145 = v158;
    v146 = v159;
    v147 = v160;
    v148 = v161;
    v143 = v156;
    v144 = v157;
    v138 = v151;
    v139 = v152;
    v141 = v154;
    v142 = v155;
    v140 = v153;
    v136 = v149;
    v137 = v150;
    sub_1BB24A908();
    if (v107)
    {
      v108 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v108 = 0;
    }
    objc_msgSend(v106, sel_setText_, v108);

  }
  v109 = objc_msgSend(v102, sel_detailTextLabel);
  if (v109)
  {
    v110 = v109;
    v111 = objc_msgSend(v127, sel_labelColor);
    v112 = v111;
    if ((v133 & 1) == 0)
    {
      v113 = objc_msgSend(v111, sel_colorWithAlphaComponent_, 0.3);

      v112 = v113;
    }
    objc_msgSend(v110, sel_setTextColor_, v112);

  }
  v114 = objc_msgSend(v102, sel_detailTextLabel);
  objc_msgSend(v114, sel_setNumberOfLines_, 0);

  v115 = objc_msgSend(v102, sel_detailTextLabel);
  if (v115)
  {
    v116 = v115;
    v117 = objc_msgSend(v128, sel_systemFontOfSize_, 12.0);
    objc_msgSend(v116, sel_setFont_, v117);

  }
  v118 = *((_QWORD *)&v152 + 1);
  objc_msgSend(v102, sel_setAccessoryType_, 1);
  objc_msgSend(v102, sel_setIndentationLevel_, v118);
  v119 = v102;
  objc_msgSend(v119, sel_setIndentationWidth_, 16.0);

  sub_1BAFB3938((uint64_t)&v149);
  return (uint64_t)v119;
}

uint64_t sub_1BB1F008C()
{
  return 0x74756F79614CLL;
}

id sub_1BB1F00A0()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  return v1;
}

uint64_t sub_1BB1F010C()
{
  id v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_1BB1EC9E0();
  sub_1BB765D2C();
  v2 = v1;

  return v2;
}

uint64_t type metadata accessor for DebugFormatLayoutTableViewCell()
{
  return objc_opt_self();
}

_OWORD *sub_1BB1F0244(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_1BACABA28(v2);
  v3 = *(_QWORD *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  result = sub_1BB1F02AC(v5);
  *a1 = v2;
  return result;
}

_OWORD *sub_1BB1F02AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  _OWORD *result;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  unsigned __int8 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  _QWORD *v32;
  unsigned __int8 v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  unint64_t v43;
  unint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  BOOL v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  uint64_t v69;
  char v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  BOOL v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  unint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t i;
  unsigned __int8 v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  __int128 v106;
  char *v108;
  uint64_t v109;
  unint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  _OWORD *v120;
  uint64_t v121;
  uint64_t v122;
  char *__dst;
  uint64_t v124;

  v3 = a1[1];
  result = (_OWORD *)sub_1BB8741F4();
  if ((uint64_t)result >= v3)
  {
    if (v3 < 0)
      goto LABEL_137;
    if ((unint64_t)v3 >= 2)
    {
      v94 = *a1;
      v95 = *a1 + 72;
      v96 = -1;
      for (i = 1; i != v3; ++i)
      {
        v98 = *(_BYTE *)(v94 + 40 * i);
        v99 = v96;
        v100 = (_QWORD *)v95;
        do
        {
          if ((*(_BYTE *)(v100 - 9) & (v98 ^ 1)) != 1)
            break;
          if (!v94)
            goto LABEL_141;
          v101 = v100 - 4;
          result = v100 - 9;
          v102 = *(v100 - 5);
          *(v100 - 5) = *v100;
          v100 -= 5;
          v104 = v100[2];
          v103 = v100[3];
          v105 = v100[4];
          v106 = result[1];
          *(_OWORD *)v101 = *result;
          *((_OWORD *)v101 + 1) = v106;
          v101[4] = v102;
          *((_BYTE *)v100 - 32) = v98;
          *(v100 - 3) = v104;
          *(v100 - 2) = v103;
          *(v100 - 1) = v105;
        }
        while (!__CFADD__(v99++, 1));
        v95 += 40;
        --v96;
      }
    }
    return result;
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_146;
  v6 = result;
  v124 = v1;
  v117 = a1;
  if (v3 < 2)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    __dst = (char *)(MEMORY[0x1E0DEE9D8] + 32);
    if (v3 != 1)
    {
      v13 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
      v12 = (char *)MEMORY[0x1E0DEE9D8];
LABEL_103:
      v108 = v12;
      v119 = v9;
      if (v13 >= 2)
      {
        v109 = *v117;
        do
        {
          v110 = v13 - 2;
          if (v13 < 2)
            goto LABEL_132;
          if (!v109)
            goto LABEL_145;
          v111 = v108;
          v112 = *(_QWORD *)&v108[16 * v110 + 32];
          v113 = *(_QWORD *)&v108[16 * v13 + 24];
          sub_1BB1F09FC((char *)(v109 + 40 * v112), (char *)(v109 + 40 * *(_QWORD *)&v108[16 * v13 + 16]), v109 + 40 * v113, __dst);
          if (v124)
            break;
          if (v113 < v112)
            goto LABEL_133;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v111 = sub_1BACAB464((uint64_t)v111);
          if (v110 >= *((_QWORD *)v111 + 2))
            goto LABEL_134;
          v114 = &v111[16 * v110 + 32];
          *(_QWORD *)v114 = v112;
          *((_QWORD *)v114 + 1) = v113;
          v115 = *((_QWORD *)v111 + 2);
          if (v13 > v115)
            goto LABEL_135;
          memmove(&v111[16 * v13 + 16], &v111[16 * v13 + 32], 16 * (v115 - v13));
          v108 = v111;
          *((_QWORD *)v111 + 2) = v115 - 1;
          v13 = v115 - 1;
        }
        while (v115 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v119 + 16) = 0;
      return (_OWORD *)swift_bridgeObjectRelease();
    }
    v119 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v7 = v5 >> 1;
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    v119 = v8;
    __dst = (char *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v118 = *a1 + 80;
  v116 = *a1 + 32;
  v12 = (char *)MEMORY[0x1E0DEE9D8];
  v120 = v6;
  v121 = v3;
  v122 = v11;
  while (1)
  {
    v14 = v10++;
    if (v10 < v3)
    {
      v15 = *(unsigned __int8 *)(v11 + 40 * v10);
      v16 = *(unsigned __int8 *)(v11 + 40 * v14) & (v15 ^ 1);
      v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (unsigned __int8 *)(v118 + 40 * v14);
        while (1)
        {
          v18 = *v17;
          if (v16 != (v15 & (v18 ^ 1)))
            break;
          ++v10;
          v17 += 40;
          v15 = v18;
          if (v3 == v10)
          {
            v10 = v3;
            break;
          }
        }
      }
      if (v16)
      {
        if (v10 < v14)
          goto LABEL_138;
        if (v14 < v10)
        {
          v19 = 40 * v10;
          v20 = 40 * v14;
          v21 = v10;
          v22 = v14;
          do
          {
            if (v22 != --v21)
            {
              if (!v11)
                goto LABEL_144;
              v23 = v11 + v20;
              v24 = *(_BYTE *)(v11 + v20);
              v25 = v11 + v19;
              v26 = *(_OWORD *)(v11 + v20 + 8);
              v27 = *(_QWORD *)(v11 + v20 + 24);
              v28 = *(_QWORD *)(v11 + v20 + 32);
              v29 = *(_QWORD *)(v11 + v19 - 8);
              v30 = *(_OWORD *)(v11 + v19 - 24);
              *(_OWORD *)v23 = *(_OWORD *)(v11 + v19 - 40);
              *(_OWORD *)(v23 + 16) = v30;
              *(_QWORD *)(v23 + 32) = v29;
              *(_BYTE *)(v25 - 40) = v24;
              *(_OWORD *)(v25 - 32) = v26;
              *(_QWORD *)(v25 - 16) = v27;
              *(_QWORD *)(v25 - 8) = v28;
            }
            ++v22;
            v19 -= 40;
            v20 += 40;
          }
          while (v22 < v21);
        }
      }
    }
    if (v10 >= v3)
      goto LABEL_46;
    if (__OFSUB__(v10, v14))
      goto LABEL_136;
    if (v10 - v14 >= (uint64_t)v6)
      goto LABEL_46;
    v31 = (uint64_t)v6 + v14;
    if (__OFADD__(v14, v6))
      goto LABEL_139;
    if (v31 >= v3)
      v31 = v3;
    if (v31 < v14)
      break;
    if (v10 != v31)
    {
      v32 = (_QWORD *)(v116 + 40 * v10);
      do
      {
        v33 = *(_BYTE *)(v11 + 40 * v10);
        v34 = v14;
        v35 = v32;
        do
        {
          if ((*(_BYTE *)(v35 - 9) & (v33 ^ 1)) != 1)
            break;
          if (!v11)
            goto LABEL_142;
          v36 = v35 - 4;
          v37 = v35 - 9;
          v38 = *(v35 - 5);
          *(v35 - 5) = *v35;
          v35 -= 5;
          v39 = v35[2];
          v40 = v35[3];
          v41 = v35[4];
          v42 = v37[1];
          *(_OWORD *)v36 = *v37;
          *((_OWORD *)v36 + 1) = v42;
          v36[4] = v38;
          *((_BYTE *)v35 - 32) = v33;
          *(v35 - 3) = v39;
          *(v35 - 2) = v40;
          *(v35 - 1) = v41;
          ++v34;
        }
        while (v10 != v34);
        ++v10;
        v32 += 5;
      }
      while (v10 != v31);
      v10 = v31;
    }
LABEL_46:
    if (v10 < v14)
      goto LABEL_131;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v12 = sub_1BACAA368(0, *((_QWORD *)v12 + 2) + 1, 1, v12);
    v44 = *((_QWORD *)v12 + 2);
    v43 = *((_QWORD *)v12 + 3);
    v13 = v44 + 1;
    v11 = v122;
    if (v44 >= v43 >> 1)
    {
      v93 = sub_1BACAA368((char *)(v43 > 1), v44 + 1, 1, v12);
      v11 = v122;
      v12 = v93;
    }
    *((_QWORD *)v12 + 2) = v13;
    v45 = v12 + 32;
    v46 = &v12[16 * v44 + 32];
    *(_QWORD *)v46 = v14;
    *((_QWORD *)v46 + 1) = v10;
    if (v44)
    {
      while (1)
      {
        v47 = v13 - 1;
        if (v13 >= 4)
        {
          v52 = &v45[16 * v13];
          v53 = *((_QWORD *)v52 - 8);
          v54 = *((_QWORD *)v52 - 7);
          v58 = __OFSUB__(v54, v53);
          v55 = v54 - v53;
          if (v58)
            goto LABEL_120;
          v57 = *((_QWORD *)v52 - 6);
          v56 = *((_QWORD *)v52 - 5);
          v58 = __OFSUB__(v56, v57);
          v50 = v56 - v57;
          v51 = v58;
          if (v58)
            goto LABEL_121;
          v59 = v13 - 2;
          v60 = &v45[16 * v13 - 32];
          v62 = *(_QWORD *)v60;
          v61 = *((_QWORD *)v60 + 1);
          v58 = __OFSUB__(v61, v62);
          v63 = v61 - v62;
          if (v58)
            goto LABEL_123;
          v58 = __OFADD__(v50, v63);
          v64 = v50 + v63;
          if (v58)
            goto LABEL_126;
          if (v64 >= v55)
          {
            v82 = &v45[16 * v47];
            v84 = *(_QWORD *)v82;
            v83 = *((_QWORD *)v82 + 1);
            v58 = __OFSUB__(v83, v84);
            v85 = v83 - v84;
            if (v58)
              goto LABEL_130;
            v75 = v50 < v85;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            v76 = *((_QWORD *)v12 + 4);
            v77 = *((_QWORD *)v12 + 5);
            v58 = __OFSUB__(v77, v76);
            v69 = v77 - v76;
            v70 = v58;
            goto LABEL_77;
          }
          v49 = *((_QWORD *)v12 + 4);
          v48 = *((_QWORD *)v12 + 5);
          v58 = __OFSUB__(v48, v49);
          v50 = v48 - v49;
          v51 = v58;
        }
        if ((v51 & 1) != 0)
          goto LABEL_122;
        v59 = v13 - 2;
        v65 = &v45[16 * v13 - 32];
        v67 = *(_QWORD *)v65;
        v66 = *((_QWORD *)v65 + 1);
        v68 = __OFSUB__(v66, v67);
        v69 = v66 - v67;
        v70 = v68;
        if (v68)
          goto LABEL_125;
        v71 = &v45[16 * v47];
        v73 = *(_QWORD *)v71;
        v72 = *((_QWORD *)v71 + 1);
        v58 = __OFSUB__(v72, v73);
        v74 = v72 - v73;
        if (v58)
          goto LABEL_128;
        if (__OFADD__(v69, v74))
          goto LABEL_129;
        if (v69 + v74 >= v50)
        {
          v75 = v50 < v74;
LABEL_83:
          if (v75)
            v47 = v59;
          goto LABEL_85;
        }
LABEL_77:
        if ((v70 & 1) != 0)
          goto LABEL_124;
        v78 = &v45[16 * v47];
        v80 = *(_QWORD *)v78;
        v79 = *((_QWORD *)v78 + 1);
        v58 = __OFSUB__(v79, v80);
        v81 = v79 - v80;
        if (v58)
          goto LABEL_127;
        if (v81 < v69)
          goto LABEL_15;
LABEL_85:
        v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11)
          goto LABEL_143;
        v87 = v12;
        v88 = &v45[16 * v86];
        v89 = *(_QWORD *)v88;
        v90 = &v45[16 * v47];
        v91 = *((_QWORD *)v90 + 1);
        sub_1BB1F09FC((char *)(v11 + 40 * *(_QWORD *)v88), (char *)(v11 + 40 * *(_QWORD *)v90), v11 + 40 * v91, __dst);
        if (v124)
          goto LABEL_93;
        if (v91 < v89)
          goto LABEL_117;
        if (v47 > *((_QWORD *)v87 + 2))
          goto LABEL_118;
        *(_QWORD *)v88 = v89;
        *(_QWORD *)&v45[16 * v86 + 8] = v91;
        v92 = *((_QWORD *)v87 + 2);
        if (v47 >= v92)
          goto LABEL_119;
        v12 = v87;
        v13 = v92 - 1;
        memmove(&v45[16 * v47], v90 + 16, 16 * (v92 - 1 - v47));
        *((_QWORD *)v87 + 2) = v92 - 1;
        v11 = v122;
        if (v92 <= 2)
          goto LABEL_15;
      }
    }
    v13 = 1;
LABEL_15:
    v6 = v120;
    v3 = v121;
    if (v10 >= v121)
    {
      v9 = v119;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  result = (_OWORD *)sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BB1F09FC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  char *v4;
  char *v6;
  char *v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  __int128 v14;
  __int128 v15;
  char *v16;
  __int128 v17;
  __int128 v18;
  char *v19;
  unint64_t v20;
  char *v21;
  __int128 v23;
  __int128 v24;
  char *v25;
  __int128 v26;
  __int128 v27;
  uint64_t result;
  char *v29;
  char *v30;
  char *v31;

  v4 = __dst;
  v6 = a2;
  v7 = __src;
  v8 = a2 - __src;
  v9 = (a2 - __src) / 40;
  v10 = a3 - (_QWORD)a2;
  v11 = (uint64_t)(a3 - (_QWORD)a2) / 40;
  v31 = __src;
  v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[40 * v11] <= __dst)
        memmove(__dst, a2, 40 * v11);
      v19 = &v4[40 * v11];
      v29 = v19;
      v31 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        v20 = a3 - 40;
        while (1)
        {
          v21 = (char *)(v20 + 40);
          if (*(v6 - 40) == 1 && *(v19 - 40) == 0)
          {
            v25 = v6 - 40;
            if (v21 != v6 || v20 >= (unint64_t)v6)
            {
              v26 = *(_OWORD *)v25;
              v27 = *(_OWORD *)(v6 - 24);
              *(_QWORD *)(v20 + 32) = *((_QWORD *)v6 - 1);
              *(_OWORD *)v20 = v26;
              *(_OWORD *)(v20 + 16) = v27;
            }
            v31 = v6 - 40;
            if (v25 <= v7)
              goto LABEL_44;
          }
          else
          {
            v29 = v19 - 40;
            if (v21 < v19 || v20 >= (unint64_t)v19 || v21 != v19)
            {
              v23 = *(_OWORD *)(v19 - 40);
              v24 = *(_OWORD *)(v19 - 24);
              *(_QWORD *)(v20 + 32) = *((_QWORD *)v19 - 1);
              *(_OWORD *)v20 = v23;
              *(_OWORD *)(v20 + 16) = v24;
            }
            v25 = v6;
            v19 -= 40;
            if (v6 <= v7)
              goto LABEL_44;
          }
          v20 -= 40;
          v6 = v25;
          if (v19 <= v4)
            goto LABEL_44;
        }
      }
      goto LABEL_44;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[40 * v9] <= __dst)
      memmove(__dst, __src, 40 * v9);
    v12 = &v4[40 * v9];
    v29 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        if (*v4 == 1 && *v6 == 0)
        {
          v16 = v6 + 40;
          if (v7 < v6 || v7 >= v16 || v7 != v6)
          {
            v17 = *(_OWORD *)v6;
            v18 = *((_OWORD *)v6 + 1);
            *((_QWORD *)v7 + 4) = *((_QWORD *)v6 + 4);
            *(_OWORD *)v7 = v17;
            *((_OWORD *)v7 + 1) = v18;
          }
        }
        else
        {
          if (v7 != v4)
          {
            v14 = *(_OWORD *)v4;
            v15 = *((_OWORD *)v4 + 1);
            *((_QWORD *)v7 + 4) = *((_QWORD *)v4 + 4);
            *(_OWORD *)v7 = v14;
            *((_OWORD *)v7 + 1) = v15;
          }
          v4 += 40;
          v30 = v4;
          v16 = v6;
        }
        v7 += 40;
        if (v4 >= v12)
          break;
        v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      v31 = v7;
    }
LABEL_44:
    sub_1BACAA82C((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

id sub_1BB1F0CB4(uint64_t a1)
{
  char *v1;
  char *v2;
  objc_class *ObjectType;
  uint64_t v5;
  id v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  objc_super v12;

  v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v5 = OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tableView;
  v6 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v7 = v2;
  *(_QWORD *)&v2[v5] = objc_msgSend(v6, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();
  v8 = OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree;
  type metadata accessor for DebugFormatLayoutTree();
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 24) = v10;
  *(_QWORD *)&v7[v8] = v9;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController____lazy_storage___heatmapToolbar] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_layoutViewResult] = 0;
  *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_editor] = a1;
  swift_retain();

  v12.receiver = v7;
  v12.super_class = ObjectType;
  return objc_msgSendSuper2(&v12, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BB1F0DE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1F0E40()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB1F0E64()
{
  uint64_t v0;

  sub_1BB1EC880(v0);
}

void sub_1BB1F0E6C()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v1 = OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tableView;
  *(_QWORD *)&v0[v1] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  swift_unknownObjectWeakInit();
  v2 = OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree;
  type metadata accessor for DebugFormatLayoutTree();
  v3 = swift_allocObject();
  v4 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v3 + 24) = v4;
  *(_QWORD *)&v0[v2] = v3;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController____lazy_storage___heatmapToolbar] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_layoutViewResult] = 0;

  sub_1BB873EAC();
  __break(1u);
}

unint64_t sub_1BB1F0F74()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  CGPoint v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  char *v16;
  uint64_t v17;
  void *v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  void *v22;
  CGSize *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  id v27;
  uint64_t v28;
  char *v29;
  id v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t ObjectType;
  CGAffineTransform v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  CGRect v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  char v44;
  CGAffineTransform v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  CGRect v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  char v54;
  CGRect v55;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_tree];
  swift_beginAccess();
  v3 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v5 = *(_QWORD *)(v3 + 24 * result + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (result >= *(_QWORD *)(v5 + 16))
  {
LABEL_18:
    __break(1u);
    return result;
  }
  v6 = v5 + 200 * result;
  *(_OWORD *)&v45.a = *(_OWORD *)(v6 + 32);
  v7 = *(_OWORD *)(v6 + 48);
  v8 = *(_OWORD *)(v6 + 64);
  v9 = *(_OWORD *)(v6 + 96);
  v46 = *(_OWORD *)(v6 + 80);
  v47 = v9;
  *(_OWORD *)&v45.c = v7;
  *(_OWORD *)&v45.tx = v8;
  v10 = *(_OWORD *)(v6 + 112);
  v11 = *(CGPoint *)(v6 + 128);
  v12 = *(_OWORD *)(v6 + 160);
  v49.size = *(CGSize *)(v6 + 144);
  v50 = v12;
  v48 = v10;
  v49.origin = v11;
  v13 = *(_OWORD *)(v6 + 176);
  v14 = *(_OWORD *)(v6 + 192);
  v15 = *(_OWORD *)(v6 + 208);
  v54 = *(_BYTE *)(v6 + 224);
  v52 = v14;
  v53 = v15;
  v51 = v13;
  sub_1BAFB380C((uint64_t)&v45);
  swift_bridgeObjectRelease();
  v16 = &v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_overlayView];
  v17 = MEMORY[0x1BCCE5D40](&v0[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_overlayView]);
  if (v17)
  {
    v18 = (void *)v17;
    v19 = (_OWORD *)(v17 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionFrame);
    v20 = v48;
    *v19 = v47;
    v19[1] = v20;
    sub_1BB2E2034();

  }
  v21 = MEMORY[0x1BCCE5D40](v16);
  if (v21)
  {
    v22 = (void *)v21;
    v55 = v49;
    v23 = (CGSize *)(v21 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionContentFrame);
    v23->width = v49.origin.x;
    v23->height = v55.origin.y;
    v23[1] = v55.size;
    v24 = *(_QWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_selectionView);
    v25 = *(_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 16);
    v26 = *(_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation + 32);
    *(_OWORD *)&v35.a = *(_OWORD *)(v21 + OBJC_IVAR____TtC8NewsFeed22DebugFormatOverlayView_contentTransformation);
    *(_OWORD *)&v35.c = v25;
    *(_OWORD *)&v35.tx = v26;
    *(CGRect *)(v24 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentFrame) = CGRectApplyAffineTransform(v55, &v35);
    objc_msgSend(*(id *)(v24 + OBJC_IVAR____TtC8NewsFeed24DebugFormatSelectionView_contentView), sel_setFrame_);

  }
  v42 = v52;
  v43 = v53;
  v44 = v54;
  v39 = v49;
  v40 = v50;
  v41 = v51;
  v35 = v45;
  v36 = v46;
  v37 = v47;
  v38 = v48;
  v27 = objc_allocWithZone((Class)type metadata accessor for DebugFormatInspectorViewController());
  sub_1BAFB380C((uint64_t)&v45);
  v28 = swift_retain();
  v29 = sub_1BB6025A8(v28, (uint64_t)&v35);
  v30 = objc_msgSend(v1, sel_navigationController);
  if (v30)
  {
    v31 = v30;
    objc_msgSend(v30, sel_pushViewController_animated_, v29, 1);

  }
  v32 = &v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate];
  if (MEMORY[0x1BCCE5D40](&v1[OBJC_IVAR____TtC8NewsFeed31DebugFormatLayoutViewController_delegate]))
  {
    v33 = *((_QWORD *)v32 + 1);
    ObjectType = swift_getObjectType();
    v42 = v52;
    v43 = v53;
    v44 = v54;
    v39 = v49;
    v40 = v50;
    v41 = v51;
    v35 = v45;
    v36 = v46;
    v37 = v47;
    v38 = v48;
    (*(void (**)(char *, CGAffineTransform *, uint64_t, uint64_t))(v33 + 8))(v1, &v35, ObjectType, v33);

    swift_unknownObjectRelease();
  }
  else
  {

  }
  return sub_1BAFB3938((uint64_t)&v45);
}

uint64_t sub_1BB1F1294(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC87DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB1F12D8(uint64_t a1)
{
  uint64_t v2;

  sub_1BAC87DF0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB1F1314(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BAC87DF0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_1BB1F1358(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB1EEC68(a1, *(_QWORD *)(v1 + 16));
}

unint64_t destroy for InternalErrorViewModel.Group(uint64_t a1)
{
  unint64_t result;

  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 16);
  if (result >= 0xB)
  {
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for InternalErrorViewModel.Group(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v6 = a2 + 2;
  v5 = a2[2];
  swift_bridgeObjectRetain();
  if (v5 >= 0xB)
  {
    v7 = a2[3];
    v8 = a2[4];
    a1[2] = v5;
    a1[3] = v7;
    a1[4] = v8;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v6;
    a1[4] = v6[2];
  }
  return a1;
}

_QWORD *assignWithCopy for InternalErrorViewModel.Group(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  unint64_t v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 2;
  v6 = a2 + 2;
  v5 = a2[2];
  if (a1[2] >= 0xBuLL)
  {
    if (v5 >= 0xB)
    {
      a1[2] = v5;
      swift_retain();
      swift_release();
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80((uint64_t)(a1 + 2), (uint64_t (*)(_QWORD))sub_1BB1F153C);
      v8 = a2[4];
      *v4 = *v6;
      a1[4] = v8;
    }
  }
  else if (v5 >= 0xB)
  {
    a1[2] = v5;
    a1[3] = a2[3];
    a1[4] = a2[4];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *v6;
    a1[4] = a2[4];
    *v4 = v7;
  }
  return a1;
}

void sub_1BB1F153C()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BDA98[0])
  {
    type metadata accessor for FormatPackageInventory();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1EF2BDA98);
  }
}

_QWORD *assignWithTake for InternalErrorViewModel.Group(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[2];
  if (a1[2] >= 0xBuLL)
  {
    if (v5 >= 0xB)
    {
      a1[2] = v5;
      swift_release();
      v6 = a2[4];
      a1[3] = a2[3];
      a1[4] = v6;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1BA4A2E80((uint64_t)(a1 + 2), (uint64_t (*)(_QWORD))sub_1BB1F153C);
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  a1[4] = a2[4];
  return a1;
}

ValueMetadata *type metadata accessor for InternalErrorViewModel.Group()
{
  return &type metadata for InternalErrorViewModel.Group;
}

char *sub_1BB1F164C(char *a1, char **a2, uint64_t a3)
{
  int v5;
  char *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = (unint64_t)a2[2];
      swift_bridgeObjectRetain();
      if (v7 >= 0xB)
      {
        v12 = a2[3];
        v13 = a2[4];
        *((_QWORD *)a1 + 2) = v7;
        *((_QWORD *)a1 + 3) = v12;
        *((_QWORD *)a1 + 4) = v13;
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_QWORD *)a1 + 4) = a2[4];
      }
      v14 = a2[6];
      *((_QWORD *)a1 + 5) = a2[5];
      *((_QWORD *)a1 + 6) = v14;
      *((_QWORD *)a1 + 7) = a2[7];
      sub_1BB074B08();
      v16 = *(int *)(v15 + 80);
      v17 = &a1[v16];
      v18 = (uint64_t)a2 + v16;
      *v17 = *((_BYTE *)a2 + v16);
      v32 = (uint64_t)&a1[v16 + 8];
      v19 = (uint64_t)a2 + v16 + 8;
      v20 = *(_OWORD *)((char *)a2 + v16 + 32);
      *((_OWORD *)v17 + 2) = v20;
      v21 = v20;
      v22 = **(void (***)(uint64_t, uint64_t, uint64_t))(v20 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v22(v32, v19, v21);
      v23 = *(_QWORD *)(v18 + 56);
      *((_QWORD *)v17 + 6) = *(_QWORD *)(v18 + 48);
      *((_QWORD *)v17 + 7) = v23;
      v24 = *(_QWORD *)(v18 + 72);
      *((_QWORD *)v17 + 8) = *(_QWORD *)(v18 + 64);
      *((_QWORD *)v17 + 9) = v24;
      *((_QWORD *)v17 + 10) = *(_QWORD *)(v18 + 80);
      v17[88] = *(_BYTE *)(v18 + 88);
      *((_QWORD *)v17 + 12) = *(_QWORD *)(v18 + 96);
      v25 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v26 = v25[13];
      v30 = v18 + v26;
      v31 = &v17[v26];
      v27 = sub_1BB86D8A0();
      v29 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(v31, v30, v27);
      *(_QWORD *)&v17[v25[14]] = *(_QWORD *)(v18 + v25[14]);
      *(_QWORD *)&v17[v25[15]] = *(_QWORD *)(v18 + v25[15]);
      v17[v25[16]] = *(_BYTE *)(v18 + v25[16]);
      *(_QWORD *)&v17[v25[17]] = *(_QWORD *)(v18 + v25[17]);
      *(_QWORD *)&v17[v25[18]] = *(_QWORD *)(v18 + v25[18]);
      *(_QWORD *)&v17[v25[19]] = *(_QWORD *)(v18 + v25[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v9 = *a2;
      v10 = *a2;
      v11 = a2[1];
      *(_QWORD *)a1 = v9;
      *((_QWORD *)a1 + 1) = v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1BB1F18D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 16) >= 0xBuLL)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB074B08();
    v3 = a1 + *(int *)(v2 + 80);
    __swift_destroy_boxed_opaque_existential_1(v3 + 8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v4 = v3 + *(int *)(type metadata accessor for GroupLayoutBindingContext() + 52);
    v5 = sub_1BB86D8A0();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {

    return swift_release();
  }
}

_QWORD *sub_1BB1F19E0(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  char *v28;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    v5 = a2[2];
    swift_bridgeObjectRetain();
    if (v5 >= 0xB)
    {
      v9 = a2[3];
      v10 = a2[4];
      a1[2] = v5;
      a1[3] = v9;
      a1[4] = v10;
      swift_retain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      a1[4] = a2[4];
    }
    v11 = a2[6];
    a1[5] = a2[5];
    a1[6] = v11;
    a1[7] = a2[7];
    sub_1BB074B08();
    v13 = *(int *)(v12 + 80);
    v14 = (char *)a1 + v13;
    v15 = (uint64_t)a2 + v13;
    *v14 = *((_BYTE *)a2 + v13);
    v16 = (uint64_t)a1 + v13 + 8;
    v17 = *(_OWORD *)(v15 + 32);
    *((_OWORD *)v14 + 2) = v17;
    v18 = v17;
    v19 = **(void (***)(uint64_t, uint64_t, uint64_t))(v17 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19(v16, v15 + 8, v18);
    v20 = *(_QWORD *)(v15 + 56);
    *((_QWORD *)v14 + 6) = *(_QWORD *)(v15 + 48);
    *((_QWORD *)v14 + 7) = v20;
    v21 = *(_QWORD *)(v15 + 72);
    *((_QWORD *)v14 + 8) = *(_QWORD *)(v15 + 64);
    *((_QWORD *)v14 + 9) = v21;
    *((_QWORD *)v14 + 10) = *(_QWORD *)(v15 + 80);
    v14[88] = *(_BYTE *)(v15 + 88);
    *((_QWORD *)v14 + 12) = *(_QWORD *)(v15 + 96);
    v22 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v23 = v22[13];
    v27 = v15 + v23;
    v28 = &v14[v23];
    v24 = sub_1BB86D8A0();
    v26 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v26(v28, v27, v24);
    *(_QWORD *)&v14[v22[14]] = *(_QWORD *)(v15 + v22[14]);
    *(_QWORD *)&v14[v22[15]] = *(_QWORD *)(v15 + v22[15]);
    v14[v22[16]] = *(_BYTE *)(v15 + v22[16]);
    *(_QWORD *)&v14[v22[17]] = *(_QWORD *)(v15 + v22[17]);
    *(_QWORD *)&v14[v22[18]] = *(_QWORD *)(v15 + v22[18]);
    *(_QWORD *)&v14[v22[19]] = *(_QWORD *)(v15 + v22[19]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v6 = *a2;
    v7 = (id)*a2;
    v8 = a2[1];
    *a1 = v6;
    a1[1] = v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_1BB1F1C30(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  __int128 v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  int *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v19)(char *, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v4 = a2[2];
      swift_bridgeObjectRetain();
      if (v4 >= 0xB)
      {
        a1[2] = v4;
        a1[3] = a2[3];
        a1[4] = a2[4];
        swift_retain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v5 = *((_OWORD *)a2 + 1);
        a1[4] = a2[4];
        *((_OWORD *)a1 + 1) = v5;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      sub_1BB074B08();
      v9 = *(int *)(v8 + 80);
      v10 = (char *)a1 + v9;
      v11 = (uint64_t)a2 + v9;
      *v10 = *((_BYTE *)a2 + v9);
      v12 = (uint64_t)a1 + v9 + 8;
      v13 = *(_QWORD *)(v11 + 32);
      *((_QWORD *)v10 + 4) = v13;
      *((_QWORD *)v10 + 5) = *(_QWORD *)(v11 + 40);
      v14 = **(void (***)(uint64_t, uint64_t, uint64_t))(v13 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v12, v11 + 8, v13);
      *((_QWORD *)v10 + 6) = *(_QWORD *)(v11 + 48);
      *((_QWORD *)v10 + 7) = *(_QWORD *)(v11 + 56);
      *((_QWORD *)v10 + 8) = *(_QWORD *)(v11 + 64);
      *((_QWORD *)v10 + 9) = *(_QWORD *)(v11 + 72);
      *((_QWORD *)v10 + 10) = *(_QWORD *)(v11 + 80);
      v10[88] = *(_BYTE *)(v11 + 88);
      *((_QWORD *)v10 + 12) = *(_QWORD *)(v11 + 96);
      v15 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v16 = v15[13];
      v20 = v11 + v16;
      v21 = &v10[v16];
      v17 = sub_1BB86D8A0();
      v19 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v21, v20, v17);
      *(_QWORD *)&v10[v15[14]] = *(_QWORD *)(v11 + v15[14]);
      *(_QWORD *)&v10[v15[15]] = *(_QWORD *)(v11 + v15[15]);
      v10[v15[16]] = *(_BYTE *)(v11 + v15[16]);
      *(_QWORD *)&v10[v15[17]] = *(_QWORD *)(v11 + v15[17]);
      *(_QWORD *)&v10[v15[18]] = *(_QWORD *)(v11 + v15[18]);
      *(_QWORD *)&v10[v15[19]] = *(_QWORD *)(v11 + v15[19]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v6 = *a2;
      v7 = (id)*a2;
      *a1 = v6;
      a1[1] = a2[1];
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_1BB1F1EC8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *((_QWORD *)a2 + 5);
    *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
    *((_QWORD *)a1 + 5) = v7;
    a1[3] = a2[3];
    sub_1BB074B08();
    v9 = *(int *)(v8 + 80);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    *v10 = *((_BYTE *)a2 + v9);
    *((_QWORD *)v10 + 5) = *(_QWORD *)((char *)a2 + v9 + 40);
    *(_OWORD *)(v10 + 24) = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
    v12 = *(_OWORD *)((char *)a2 + v9 + 64);
    *((_OWORD *)v10 + 3) = *(_OWORD *)((char *)a2 + v9 + 48);
    *((_OWORD *)v10 + 4) = v12;
    *((_QWORD *)v10 + 10) = *(_QWORD *)((char *)a2 + v9 + 80);
    v10[88] = *((_BYTE *)a2 + v9 + 88);
    *((_QWORD *)v10 + 12) = *(_QWORD *)((char *)a2 + v9 + 96);
    v13 = (int *)type metadata accessor for GroupLayoutBindingContext();
    v14 = v13[13];
    v15 = &v10[v14];
    v16 = &v11[v14];
    v17 = sub_1BB86D8A0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    *(_QWORD *)&v10[v13[14]] = *(_QWORD *)&v11[v13[14]];
    *(_QWORD *)&v10[v13[15]] = *(_QWORD *)&v11[v13[15]];
    v10[v13[16]] = v11[v13[16]];
    *(_QWORD *)&v10[v13[17]] = *(_QWORD *)&v11[v13[17]];
    *(_QWORD *)&v10[v13[18]] = *(_QWORD *)&v11[v13[18]];
    *(_QWORD *)&v10[v13[19]] = *(_QWORD *)&v11[v13[19]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1BB1F2030(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for InternalErrorViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v7;
      a1[3] = a2[3];
      sub_1BB074B08();
      v9 = *(int *)(v8 + 80);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      *v10 = *((_BYTE *)a2 + v9);
      *((_QWORD *)v10 + 5) = *(_QWORD *)((char *)a2 + v9 + 40);
      *(_OWORD *)(v10 + 24) = *(_OWORD *)((char *)a2 + v9 + 24);
      *(_OWORD *)(v10 + 8) = *(_OWORD *)((char *)a2 + v9 + 8);
      v12 = *(_OWORD *)((char *)a2 + v9 + 64);
      *((_OWORD *)v10 + 3) = *(_OWORD *)((char *)a2 + v9 + 48);
      *((_OWORD *)v10 + 4) = v12;
      *((_QWORD *)v10 + 10) = *(_QWORD *)((char *)a2 + v9 + 80);
      v10[88] = *((_BYTE *)a2 + v9 + 88);
      *((_QWORD *)v10 + 12) = *(_QWORD *)((char *)a2 + v9 + 96);
      v13 = (int *)type metadata accessor for GroupLayoutBindingContext();
      v14 = v13[13];
      v15 = &v10[v14];
      v16 = &v11[v14];
      v17 = sub_1BB86D8A0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      *(_QWORD *)&v10[v13[14]] = *(_QWORD *)&v11[v13[14]];
      *(_QWORD *)&v10[v13[15]] = *(_QWORD *)&v11[v13[15]];
      v10[v13[16]] = v11[v13[16]];
      *(_QWORD *)&v10[v13[17]] = *(_QWORD *)&v11[v13[17]];
      *(_QWORD *)&v10[v13[18]] = *(_QWORD *)&v11[v13[18]];
      *(_QWORD *)&v10[v13[19]] = *(_QWORD *)&v11[v13[19]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t static FormatSponsoredBannerData.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatSponsoredBannerData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = type metadata accessor for FeedSponsorshipBannerAd();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB871E24();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for FormatSponsoredBannerData(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v3 = sub_1BB871E24();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for FormatSponsoredBannerData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB871E24();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for FormatSponsoredBannerData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB871E24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for FormatSponsoredBannerData(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB871E24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for FormatSponsoredBannerData(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1BB871E24();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatSponsoredBannerData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1F24B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedSponsorshipBannerAd();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FormatSponsoredBannerData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB1F24FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeedSponsorshipBannerAd();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for SportsStandingRecordStatistic()
{
  return &type metadata for SportsStandingRecordStatistic;
}

uint64_t sub_1BB1F254C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  sub_1BB1F2960(0, &qword_1EF2BDAD8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1F291C();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v5)
  {
    v14 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB1F267C()
{
  _BYTE *v0;

  if (*v0)
    return 0x65756C6176;
  else
    return 1701667182;
}

uint64_t sub_1BB1F26AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB1F2B60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB1F26D0()
{
  sub_1BB1F291C();
  return sub_1BB874710();
}

uint64_t sub_1BB1F26F8()
{
  sub_1BB1F291C();
  return sub_1BB87471C();
}

uint64_t sub_1BB1F2720@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BB1F2768(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB1F274C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB1F254C(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1BB1F2768(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1BB1F2960(0, &qword_1EF2BDAC8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB1F291C();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_1BB874098();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB1F291C()
{
  unint64_t result;

  result = qword_1EF2BDAD0;
  if (!qword_1EF2BDAD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F8B04, &type metadata for SportsStandingRecordStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDAD0);
  }
  return result;
}

void sub_1BB1F2960(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB1F291C();
    v7 = a3(a1, &type metadata for SportsStandingRecordStatistic.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsStandingRecordStatistic.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB1F2A08 + 4 * byte_1BB8F89C5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1F2A3C + 4 * asc_1BB8F89C0[v4]))();
}

uint64_t sub_1BB1F2A3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F2A44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1F2A4CLL);
  return result;
}

uint64_t sub_1BB1F2A58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1F2A60);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1F2A64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F2A6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsStandingRecordStatistic.CodingKeys()
{
  return &type metadata for SportsStandingRecordStatistic.CodingKeys;
}

unint64_t sub_1BB1F2A8C()
{
  unint64_t result;

  result = qword_1EF2BDAE0;
  if (!qword_1EF2BDAE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F8ADC, &type metadata for SportsStandingRecordStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDAE0);
  }
  return result;
}

unint64_t sub_1BB1F2AD4()
{
  unint64_t result;

  result = qword_1EF2BDAE8;
  if (!qword_1EF2BDAE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F8A4C, &type metadata for SportsStandingRecordStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDAE8);
  }
  return result;
}

unint64_t sub_1BB1F2B1C()
{
  unint64_t result;

  result = qword_1EF2BDAF0;
  if (!qword_1EF2BDAF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F8A74, &type metadata for SportsStandingRecordStatistic.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDAF0);
  }
  return result;
}

uint64_t sub_1BB1F2B60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65756C6176 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB1F2C38@<X0>(void (*a1)(char *, uint64_t)@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  uint64_t result;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, char *, uint64_t);
  char *v25;
  void (*v26)(char *, char *, uint64_t);
  char *v27;
  uint64_t (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);

  v33 = a2;
  v34 = a1;
  sub_1BAA5AEC0();
  v32 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v31 - v6;
  v8 = sub_1BB86CAD8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB86C8B0();
  v13 = *(_QWORD **)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v31 - v17;
  sub_1BB86CA90();
  sub_1BB86CA00();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_1BB86C7FC();
  v19 = (void (*)(char *, uint64_t))v13[1];
  v19(v15, v12);
  sub_1BB86C7FC();
  sub_1BB078C54();
  result = sub_1BB872934();
  if ((result & 1) != 0)
  {
    v21 = v32;
    v22 = *(int *)(v32 + 48);
    v34 = v19;
    v23 = &v7[v22];
    v24 = (void (*)(char *, char *, uint64_t))v13[4];
    v24(v7, v18, v12);
    v24(v23, v15, v12);
    v25 = &v4[*(int *)(v21 + 48)];
    v26 = (void (*)(char *, char *, uint64_t))v13[2];
    v26(v4, v7, v12);
    v26(v25, v23, v12);
    v27 = v33;
    v24(v33, v4, v12);
    v28 = (uint64_t (*)(char *, uint64_t))v34;
    v34(v25, v12);
    v29 = &v4[*(int *)(v21 + 48)];
    v24(v4, v7, v12);
    v24(v29, v23, v12);
    sub_1BA5F9880();
    v24(&v27[*(int *)(v30 + 36)], v29, v12);
    return v28(v4, v12);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t FeedGroupEmitterRuleEdition.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

__n128 FeedGroupEmitterRuleEdition.edition.getter@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v2;
  __n128 result;

  result = *(__n128 *)(v2 + *(int *)(a1 + 52));
  *a2 = result;
  return result;
}

void FeedGroupEmitterRuleEdition.init(value:edition:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for FeedGroupEmitterRuleEdition();
}

uint64_t sub_1BB1F2F40(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(v1 + *(int *)(result + 52));
  *v4 = v2;
  v4[1] = v3;
  return result;
}

double FeedGroupEmitterRuleEdition.Edition.start.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double FeedGroupEmitterRuleEdition.Edition.duration.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void FeedGroupEmitterRuleEdition.Edition.init(start:duration:)(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
}

uint64_t FeedGroupEmitterRuleEdition.Edition.description.getter()
{
  __int128 *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  void *v16;
  id v17;
  _QWORD *v18;
  uint64_t v19;
  __int128 v21;

  v1 = sub_1BB86C8B0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (void (*)(char *, uint64_t))((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA5F9880();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *v0;
  sub_1BB86C8A4();
  sub_1BB1F2C38(v4, v7);
  (*(void (**)(_QWORD, uint64_t))(v2 + 8))(v4, v1);
  if (qword_1EF2A70C8 != -1)
    swift_once();
  v8 = (void *)qword_1EF2BDAF8;
  v9 = (void *)sub_1BB86C808();
  v10 = objc_msgSend(v8, sel_stringFromDate_, v9);

  v11 = sub_1BB8729A0();
  v13 = v12;

  *(_QWORD *)&v21 = v11;
  *((_QWORD *)&v21 + 1) = v13;
  sub_1BB872AFC(v14);
  v15 = (void *)qword_1EF2BDAF8;
  v16 = (void *)sub_1BB86C808();
  v17 = objc_msgSend(v15, sel_stringFromDate_, v16);

  sub_1BB8729A0();
  sub_1BB872AFC(v18);
  swift_bridgeObjectRelease();
  v19 = v21;
  sub_1BB1F3E90((uint64_t)v7);
  return v19;
}

BOOL static FeedGroupEmitterRuleEdition.Edition.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

uint64_t sub_1BB1F3184(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7472617473 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461727564 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB1F326C(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F697461727564;
  else
    return 0x7472617473;
}

uint64_t sub_1BB1F32A0(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1BB1F3824(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA86B630);
}

uint64_t sub_1BB1F32B0(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1BB1F3870(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA86B640);
}

uint64_t sub_1BB1F32BC(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1BB1F3894(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA86B640);
}

uint64_t sub_1BB1F32C8(_QWORD *a1, uint64_t a2)
{
  return sub_1BA934F5C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB1F326C);
}

uint64_t sub_1BB1F32D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1BA9363F0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB1F3184, a4);
}

uint64_t sub_1BB1F32E0(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F8F30, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB1F3314(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F8F30, a1);
  return sub_1BB87471C();
}

void FeedGroupEmitterRuleEdition.Edition.encode(to:)()
{
  type metadata accessor for FeedGroupEmitterRuleEdition.Edition.CodingKeys();
}

uint64_t sub_1BB1F3388(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;

  MEMORY[0x1BCCE5B24](&unk_1BB8F8F30, a1);
  v4 = sub_1BB8741D0();
  *(_QWORD *)(v3 - 72) = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - v5;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_1BB8746C8();
  *(_BYTE *)(v3 - 128) = 0;
  sub_1BB874194();
  if (v1)
    return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v3 - 72) + 8))(v6, v4);
  v8 = *(_QWORD *)(v3 - 72);
  *(_BYTE *)(v3 - 128) = 1;
  sub_1BB874194();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v4);
}

void FeedGroupEmitterRuleEdition.Edition.init(from:)()
{
  type metadata accessor for FeedGroupEmitterRuleEdition.Edition.CodingKeys();
}

uint64_t sub_1BB1F34E8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  MEMORY[0x1BCCE5B24](&unk_1BB8F8F30, a1);
  v4 = sub_1BB874104();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  sub_1BB87468C();
  if (!v2)
  {
    v8 = *(_QWORD **)(v3 - 72);
    *(_BYTE *)(v3 - 128) = 0;
    sub_1BB8740B0();
    v10 = v9;
    *(_BYTE *)(v3 - 128) = 1;
    sub_1BB8740B0();
    v13 = v12;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    *v8 = v10;
    v8[1] = v13;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v1);
}

void sub_1BB1F3624()
{
  FeedGroupEmitterRuleEdition.Edition.init(from:)();
}

void sub_1BB1F3644()
{
  FeedGroupEmitterRuleEdition.Edition.encode(to:)();
}

uint64_t static FeedGroupEmitterRuleEdition.== infix(_:_:)()
{
  if ((sub_1BB872958() & 1) != 0)
    type metadata accessor for FeedGroupEmitterRuleEdition();
  return 0;
}

uint64_t sub_1BB1F36FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65756C6176 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6974696465 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB1F37E4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x6E6F6974696465;
  else
    return 0x65756C6176;
}

uint64_t sub_1BB1F3818(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4)
{
  return sub_1BB1F3824(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB1F446C);
}

uint64_t sub_1BB1F3824(unsigned __int8 *a1, unsigned __int8 *a2, _QWORD *a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*a1, *a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_1BB1F3840()
{
  return sub_1BA86B734();
}

uint64_t sub_1BB1F3864(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1BB1F3870(a1, a2, a3, (uint64_t (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAEFCC10);
}

uint64_t sub_1BB1F3870(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;

  return a4(a1, *v4, a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_1BB1F3888(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_1BB1F3894(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BAEFCC10);
}

uint64_t sub_1BB1F3894(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_1BB8745CC();
  a4(v8, *v4, a2[2], a2[3], a2[4], a2[5]);
  return sub_1BB874608();
}

uint64_t sub_1BB1F38E8(_QWORD *a1, uint64_t a2)
{
  return sub_1BA934F5C(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB1F37E4);
}

uint64_t sub_1BB1F38F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X2>, _BYTE *a4@<X8>)
{
  return sub_1BA9363F0(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BB1F36FC, a4);
}

uint64_t sub_1BB1F3900(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F8EE0, a1);
  return sub_1BB874710();
}

uint64_t sub_1BB1F3934(uint64_t a1)
{
  MEMORY[0x1BCCE5B24](&unk_1BB8F8EE0, a1);
  return sub_1BB87471C();
}

void FeedGroupEmitterRuleEdition.encode(to:)()
{
  type metadata accessor for FeedGroupEmitterRuleEdition.CodingKeys();
}

uint64_t sub_1BB1F39B8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  MEMORY[0x1BCCE5B24](&unk_1BB8F8EE0, a1);
  v4 = sub_1BB8741D0();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - v6;
  __swift_project_boxed_opaque_existential_1(v1, v1[3]);
  v8 = *(_QWORD *)(v3 - 160);
  v9 = *(_QWORD *)(v3 - 152);
  v10 = *(_QWORD *)(v3 - 144);
  sub_1BB8746C8();
  *(_BYTE *)(v3 - 112) = 0;
  v11 = *(_QWORD *)(v3 - 136);
  sub_1BB8741AC();
  if (!v11)
  {
    *(_OWORD *)(v3 - 128) = *(_OWORD *)(v10 + *(int *)(v2 + 52));
    *(_BYTE *)(v3 - 65) = 1;
    v12 = *(_QWORD *)(v3 - 168);
    *(_QWORD *)(v3 - 112) = v9;
    *(_QWORD *)(v3 - 104) = v12;
    v13 = *(_QWORD *)(v3 - 176);
    *(_QWORD *)(v3 - 96) = v8;
    *(_QWORD *)(v3 - 88) = v13;
    type metadata accessor for FeedGroupEmitterRuleEdition.Edition();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void FeedGroupEmitterRuleEdition.init(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[18];

  v8[2] = a3;
  v8[3] = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8[6] = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[14] = v4;
  v8[15] = v5;
  v8[16] = v6;
  v8[17] = v7;
  type metadata accessor for FeedGroupEmitterRuleEdition.CodingKeys();
}

void sub_1BB1F3B90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  MEMORY[0x1BCCE5B24](&unk_1BB8F8EE0, a1);
  v6 = sub_1BB874104();
  *(_QWORD *)(v5 - 136) = v6;
  *(_QWORD *)(v5 - 152) = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  *(_QWORD *)(v5 - 144) = v2;
  *(_QWORD *)(v5 - 112) = v2;
  *(_QWORD *)(v5 - 104) = v3;
  *(_QWORD *)(v5 - 160) = v3;
  *(_QWORD *)(v5 - 192) = v4;
  *(_QWORD *)(v5 - 184) = v1;
  *(_QWORD *)(v5 - 96) = v4;
  *(_QWORD *)(v5 - 88) = v1;
  type metadata accessor for FeedGroupEmitterRuleEdition();
}

uint64_t sub_1BB1F3C08(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v5 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v17 - v6;
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  *(_QWORD *)(v3 - 168) = v1;
  v8 = *(_QWORD *)(v3 - 72);
  sub_1BB87468C();
  if (!v8)
  {
    *(_QWORD *)(v3 - 224) = v5;
    *(_QWORD *)(v3 - 216) = a1;
    v10 = *(_QWORD *)(v3 - 192);
    v9 = *(_QWORD *)(v3 - 184);
    *(_QWORD *)(v3 - 72) = v2;
    v11 = v7;
    v12 = *(_QWORD *)(v3 - 200);
    *(_BYTE *)(v3 - 112) = 0;
    v13 = *(_QWORD *)(v3 - 176);
    v14 = *(_QWORD *)(v3 - 144);
    v15 = *(_QWORD *)(v3 - 160);
    sub_1BB8740D4();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v11, v13, v14);
    *(_QWORD *)(v3 - 112) = v14;
    *(_QWORD *)(v3 - 104) = v15;
    *(_QWORD *)(v3 - 96) = v10;
    *(_QWORD *)(v3 - 88) = v9;
    type metadata accessor for FeedGroupEmitterRuleEdition.Edition();
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

void sub_1BB1F3D2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)(v6 - 112) = 1;
  MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FeedGroupEmitterRuleEdition<A>.Edition, a1);
  sub_1BB8740D4();
  (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v6 - 152) + 8))(v1, *(_QWORD *)(v6 - 136));
  if (v4)
  {
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v6 - 72));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v2);
  }
  else
  {
    v8 = *(_QWORD *)(v6 - 224);
    v7 = *(_QWORD *)(v6 - 216);
    *(_OWORD *)(v3 + *(int *)(v7 + 52)) = *(_OWORD *)(v6 - 128);
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v8 + 16))(*(_QWORD *)(v6 - 208), v3, v7);
    __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v6 - 72));
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v3, v7);
  }
  JUMPOUT(0x1BB1F3CE0);
}

void sub_1BB1F3DEC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  FeedGroupEmitterRuleEdition.init(from:)(a1, *(_QWORD *)(a2 + 16), a3);
}

void sub_1BB1F3E0C()
{
  FeedGroupEmitterRuleEdition.encode(to:)();
}

uint64_t sub_1BB1F3E20()
{
  return static FeedGroupEmitterRuleEdition.== infix(_:_:)();
}

id sub_1BB1F3E30()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3578]), sel_init);
  objc_msgSend(v0, sel_setTimeStyle_, 1);
  result = objc_msgSend(v0, sel_setDateStyle_, 0);
  qword_1EF2BDAF8 = (uint64_t)v0;
  return result;
}

uint64_t sub_1BB1F3E90(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5F9880();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for FeedGroupEmitterRuleEdition.Edition.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FeedGroupEmitterRuleEdition.CodingKeys()
{
  JUMPOUT(0x1BCCE5A70);
}

void type metadata accessor for FeedGroupEmitterRuleEdition.Edition()
{
  JUMPOUT(0x1BCCE5A70);
}

uint64_t *sub_1BB1F3EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;

  v4 = a1;
  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    v9 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_1BB1F3FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB1F3FFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1BB1F4060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a1) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)((*(_QWORD *)(v5 + 64) + 7 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB1F40BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1BB1F4120(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 >= a2)
  {
    if (v5)
      return (*(uint64_t (**)(void))(v4 + 48))();
    return 0;
  }
  if (((((*(_QWORD *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & 0xFFFFFFF8) != 0)
    v6 = 2;
  else
    v6 = a2 - v5 + 1;
  if (v6 >= 0x10000)
    v7 = 4;
  else
    v7 = 2;
  if (v6 < 0x100)
    v7 = 1;
  if (v6 >= 2)
    v8 = v7;
  else
    v8 = 0;
  return ((uint64_t (*)(void))((char *)&loc_1BB1F4190 + 4 * byte_1BB8F8B60[v8]))();
}

void sub_1BB1F41E8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  int v11;
  unsigned int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v11 = 0u;
    if (a2 <= v7)
      goto LABEL_14;
  }
  else
  {
    v8 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v9 = v8 + 1;
    else
      v9 = 2;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    if (a2 <= v7)
LABEL_14:
      __asm { BR              X11 }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    v12 = ~v7 + a2;
    bzero(a1, ((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v12;
  }
  __asm { BR              X10 }
}

void sub_1BB1F42D0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1BB1F42D8(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1BB1F42E0);
}

void sub_1BB1F42FC()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1BB1F4304()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
}

uint64_t sub_1BB1F430C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v4 + v5) = 0;
  if (!a2)
    JUMPOUT(0x1BB1F4314);
  return (*(uint64_t (**)(uint64_t))(v3 + 56))(v4);
}

uint64_t type metadata accessor for FeedGroupEmitterRuleEditionFormatter()
{
  return objc_opt_self();
}

uint64_t sub_1BB1F4350(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB1F439C + 4 * byte_1BB8F8B74[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1F43D0 + 4 * byte_1BB8F8B6F[v4]))();
}

uint64_t sub_1BB1F43D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F43D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1F43E0);
  return result;
}

uint64_t sub_1BB1F43EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1F43F4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1F43F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F4400(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void sub_1BB1F440C()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB1F441C()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB1F442C()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB1F443C()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB1F444C()
{
  JUMPOUT(0x1BCCE5B24);
}

void sub_1BB1F445C()
{
  JUMPOUT(0x1BCCE5B24);
}

uint64_t sub_1BB1F4470@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;

  v33 = a2;
  v30 = sub_1BB8701C8();
  v3 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v5 = (uint64_t *)((char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1BB86F874();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v14 = *(_QWORD *)(a1 + 32);
  v13 = *(_QWORD *)(a1 + 40);
  v15 = *(_QWORD *)(a1 + 48);
  v16 = *(_QWORD *)(a1 + 56);
  if (*(_BYTE *)(a1 + 64) == 1)
  {
    v28 = *(_QWORD *)(a1 + 56);
    v29 = v15;
    sub_1BAA8C5C0(v9, v10, v11, v12, v14, v13, v15, v16, 1);
    v17 = swift_bridgeObjectRetain();
    sub_1BA98444C(v17);
    swift_bridgeObjectRelease();
    *v5 = v11;
    v5[1] = v12;
    v5[2] = v14;
    v5[3] = v13;
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E0DB85B8], v30);
    swift_bridgeObjectRetain();
    sub_1BB870198();
    v19 = v28;
    v18 = v29;
    sub_1BAA4E044(v9, v10, v11, v12, v14, v13, v29, v28, 1);
    sub_1BAA4E044(v9, v10, v11, v12, v14, v13, v18, v19, 1);
    v21 = v31;
    v20 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v8, *MEMORY[0x1E0DB7280], v32);
    return (*(uint64_t (**)(_QWORD *, char *, uint64_t))(v21 + 32))(v33, v8, v20);
  }
  else
  {
    v34 = *(_QWORD *)a1;
    v23 = v15;
    v24 = v16;
    FormatColor.color.getter();
    v26 = v25;
    sub_1BAA4E044(v9, v10, v11, v12, v14, v13, v23, v24, 0);
    *v33 = v26;
    return (*(uint64_t (**)(void))(v31 + 104))();
  }
}

uint64_t static FormatWeatherBinding.Command.== infix(_:_:)()
{
  return 1;
}

uint64_t sub_1BB1F46FC()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB1F474C()
{
  return sub_1BB872A90();
}

uint64_t sub_1BB1F4764()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  return sub_1BB874608();
}

uint64_t sub_1BB1F47B0@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1BB1F4800(_QWORD *a1@<X8>)
{
  *a1 = 0x657461676976616ELL;
  a1[1] = 0xE800000000000000;
}

uint64_t sub_1BB1F481C()
{
  sub_1BB1F4BDC();
  return sub_1BB872D60();
}

uint64_t sub_1BB1F4878()
{
  sub_1BB1F4BDC();
  return sub_1BB872D0C();
}

void sub_1BB1F48C4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252138;
}

uint64_t FormatWeatherBinding.Command.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatWeatherBinding.Command.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB1F493C()
{
  unint64_t result;

  result = qword_1EF2BDD18;
  if (!qword_1EF2BDD18)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Command, &type metadata for FormatWeatherBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD18);
  }
  return result;
}

unint64_t sub_1BB1F4980(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1F49A4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1F49A4()
{
  unint64_t result;

  result = qword_1EF2BDD20;
  if (!qword_1EF2BDD20)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWeatherBinding.Command, &type metadata for FormatWeatherBinding.Command);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD20);
  }
  return result;
}

unint64_t sub_1BB1F49E8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE7D384();
  a1[2] = sub_1BAEF7778();
  result = sub_1BB1F493C();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1F4A1C(_QWORD *a1)
{
  return FormatWeatherBinding.Command.init(from:)(a1);
}

uint64_t sub_1BB1F4A30(_QWORD *a1)
{
  return FormatWeatherBinding.Command.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatWeatherBinding.Command()
{
  return &type metadata for FormatWeatherBinding.Command;
}

uint64_t _s7CommandOwst_5(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB1F4A98 + 4 * byte_1BB8F8F80[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB1F4AB8 + 4 * byte_1BB8F8F85[v4]))();
}

_BYTE *sub_1BB1F4A98(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB1F4AB8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1F4AC0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB1F4AC8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB1F4AD0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB1F4AD8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *_s7CommandO10CodingTypeOMa_0()
{
  return &_s7CommandO10CodingTypeON_0;
}

unint64_t sub_1BB1F4AF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BDD28;
  if (!qword_1EF2BDD28)
  {
    sub_1BB1F4B40();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD28);
  }
  return result;
}

void sub_1BB1F4B40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BDD30)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BDD30);
  }
}

unint64_t sub_1BB1F4B98()
{
  unint64_t result;

  result = qword_1EF2BDD38;
  if (!qword_1EF2BDD38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9180, &_s7CommandO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD38);
  }
  return result;
}

unint64_t sub_1BB1F4BDC()
{
  unint64_t result;

  result = qword_1ED3A69E8;
  if (!qword_1ED3A69E8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9108, &_s7CommandO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A69E8);
  }
  return result;
}

uint64_t sub_1BB1F4C20@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v6 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (double *)((char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BAA63AB8(a1, (uint64_t)v8);
  sub_1BA8DACF0(a2);
  sub_1BB1F4D14(v8, a2, a3);
  v9 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 0, 1, v9);
  sub_1BA4A3FB4(0, (unint64_t *)&unk_1EF2A9750, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  return (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(a3, 0, 1, v10);
}

uint64_t sub_1BB1F4D14@<X0>(double *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  double v19;
  id v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  char *v26;
  uint64_t v28;
  uint64_t v29;

  sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v28 - v7;
  v28 = sub_1BB872B74();
  v29 = v9;
  sub_1BA7114A0();
  v10 = sub_1BB873ABC();
  v12 = v11;
  swift_bridgeObjectRelease();
  v13 = sub_1BA9C0430(1uLL, 0x657461676976616ELL, 0xE800000000000000);
  MEMORY[0x1BCCE334C](v13);
  swift_bridgeObjectRelease();
  v28 = v10;
  v29 = v12;
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v28;
  v16 = v29;
  if (qword_1ED3BA8B8 != -1)
    swift_once();
  v17 = qword_1ED3B0AE8;
  sub_1BAB6C29C();
  v18 = *a1;
  v19 = a1[1];
  v20 = objc_allocWithZone(MEMORY[0x1E0C9E3B8]);
  swift_retain();
  v21 = objc_msgSend(v20, sel_initWithLatitude_longitude_, v18, v19);
  sub_1BB873570();

  type metadata accessor for FormatCommandAction();
  swift_allocObject();
  v22 = sub_1BA7E8134(v17, (uint64_t)v8);
  sub_1BA8DAD20(a2);
  v23 = type metadata accessor for FormatInspectionItem(0);
  v24 = (uint64_t *)((char *)a3 + *(int *)(v23 + 24));
  *v24 = v22;
  v25 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v24, 0, 1, v25);
  *a3 = v15;
  a3[1] = v16;
  a3[2] = 0;
  a3[3] = 0;
  v26 = (char *)a3 + *(int *)(v23 + 28);
  *(_QWORD *)v26 = 0;
  *((_QWORD *)v26 + 1) = 0;
  v26[16] = -1;
  return sub_1BAA63AFC((uint64_t)a1);
}

uint64_t sub_1BB1F4F7C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  sub_1BB86E71C();
  sub_1BA4C7DCC();
  swift_allocObject();
  result = sub_1BB86F118();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1F5008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB1F508C(a1, a2, a3, MEMORY[0x1E0DB2AA8]);
}

uint64_t sub_1BB1F5014()
{
  uint64_t v0;

  sub_1BB86E71C();
  v0 = sub_1BB86F124();
  swift_release();
  return v0;
}

uint64_t sub_1BB1F5074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB1F508C(a1, a2, a3, MEMORY[0x1E0DB2A28]);
}

uint64_t sub_1BB1F5080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB1F508C(a1, a2, a3, MEMORY[0x1E0DB2A30]);
}

uint64_t sub_1BB1F508C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;

  sub_1BB86E71C();
  v6 = a4(a1);
  swift_release();
  return v6;
}

ValueMetadata *type metadata accessor for FormatTagBinding()
{
  return &type metadata for FormatTagBinding;
}

uint64_t sub_1BB1F50F8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  uint64_t v20;
  uint64_t *v21;
  char v22[8];
  char v23[8];

  v21 = a2;
  v3 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AF820, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v6 = type metadata accessor for FormatJsonKeyValue();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  v20 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_1BB87D7A0;
  v11 = (_QWORD *)(v10 + v9);
  swift_unknownObjectRetain();
  v12 = sub_1BB1F5698((uint64_t)&unk_1E724C330, a1);
  swift_unknownObjectRelease();
  *v5 = v12;
  swift_storeEnumTagMultiPayload();
  *v11 = 0x7465737361;
  v11[1] = 0xE500000000000000;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v11 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v13 = (_QWORD *)((char *)v11 + v8);
  swift_unknownObjectRetain();
  v14 = sub_1BB1F553C((uint64_t)&unk_1E724C288, a1, (uint64_t)v23, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC7A274, (void (*)(char *, uint64_t))sub_1BB4062AC);
  swift_unknownObjectRelease();
  *v5 = v14;
  swift_storeEnumTagMultiPayload();
  *v13 = 0x6E61656C6F6F62;
  v13[1] = 0xE700000000000000;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v11 + v8 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v15 = (_QWORD *)((char *)v11 + 2 * v8);
  swift_unknownObjectRetain();
  v16 = sub_1BB1F553C((uint64_t)&unk_1E724C2F8, a1, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC7A274, (void (*)(char *, uint64_t))sub_1BA9BDDE8);
  swift_unknownObjectRelease();
  *v5 = v16;
  swift_storeEnumTagMultiPayload();
  *v15 = 0x726F6C6F63;
  v15[1] = 0xE500000000000000;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v15 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  v17 = (_QWORD *)((char *)v11 + 3 * v8);
  swift_unknownObjectRetain();
  v18 = sub_1BB1F59D0((uint64_t)&unk_1E724C2C0, a1);
  swift_unknownObjectRelease();
  *v5 = v18;
  swift_storeEnumTagMultiPayload();
  *v17 = 0x676E69727473;
  v17[1] = 0xE600000000000000;
  sub_1BA5193C4((uint64_t)v5, (uint64_t)v17 + *(int *)(v6 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  *v21 = v20;
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1BB1F53E0(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  char v19;
  uint64_t v20;

  v4 = v3;
  v18 = a3;
  sub_1BA8C88C8(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (uint64_t *)((char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x1E0DEE9D8];
  if (v11)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v11, 0);
    v12 = v20;
    v13 = (char *)(a1 + 32);
    while (1)
    {
      v14 = *v13++;
      v19 = v14;
      sub_1BA8DA4A4(&v19, a2, v18, v10);
      if (v4)
        break;
      v4 = 0;
      v20 = v12;
      v16 = *(_QWORD *)(v12 + 16);
      v15 = *(_QWORD *)(v12 + 24);
      if (v16 >= v15 >> 1)
      {
        sub_1BAC79E1C(v15 > 1, v16 + 1, 1);
        v12 = v20;
      }
      *(_QWORD *)(v12 + 16) = v16 + 1;
      sub_1BA5193C4((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v16, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
      if (!--v11)
        return v12;
    }
    swift_release();
  }
  return v12;
}

uint64_t sub_1BB1F553C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), void (*a5)(BOOL, unint64_t, uint64_t), void (*a6)(char *, uint64_t))
{
  uint64_t v6;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  unint64_t v20;
  unint64_t v21;
  void (*v23)(BOOL, unint64_t, uint64_t);
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char v26;
  uint64_t v27;

  v24 = a2;
  v25 = a6;
  v9 = v6;
  v11 = a4(0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v23 - v14;
  v16 = *(_QWORD *)(a1 + 16);
  v17 = MEMORY[0x1E0DEE9D8];
  if (v16)
  {
    v27 = MEMORY[0x1E0DEE9D8];
    v23 = a5;
    ((void (*)(_QWORD, uint64_t, _QWORD, double))a5)(0, v16, 0, v13);
    v17 = v27;
    v18 = (char *)(a1 + 32);
    while (1)
    {
      v19 = *v18++;
      v26 = v19;
      v25(&v26, v24);
      if (v9)
        break;
      v9 = 0;
      v27 = v17;
      v21 = *(_QWORD *)(v17 + 16);
      v20 = *(_QWORD *)(v17 + 24);
      if (v21 >= v20 >> 1)
      {
        v23(v20 > 1, v21 + 1, 1);
        v17 = v27;
      }
      *(_QWORD *)(v17 + 16) = v21 + 1;
      sub_1BA5193C4((uint64_t)v15, v17+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v21, a4);
      if (!--v16)
        return v17;
    }
    swift_release();
  }
  return v17;
}

uint64_t sub_1BB1F5698(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  char *v8;
  uint64_t ObjectType;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[11];
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;

  v15 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v15);
  v6 = (_QWORD *)((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = type metadata accessor for FormatJsonKeyValue();
  MEMORY[0x1E0C80A78](v14);
  v7 = *(_QWORD *)(a1 + 16);
  if (v7)
  {
    v13[1] = v2;
    v17 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A274(0, v7, 0);
    v8 = (char *)(a1 + 32);
    ObjectType = swift_getObjectType();
    v13[9] = "neGenre";
    v13[10] = ObjectType;
    v13[7] = "bannerImageForWhiteBackground";
    v13[8] = "bannerImageForMask";
    v13[5] = "arge";
    v13[6] = "verImage";
    v13[3] = "sportsLogoAltImageLarge";
    v13[4] = "sportsLogoImageCompact";
    v13[2] = "sportsLogoAltImage";
    v10 = *(unsigned __int8 *)(a1 + 32);
    v16 = *v8;
    sub_1BA7834E0(a2, (uint64_t)&v16);
    *v6 = v11;
    swift_storeEnumTagMultiPayload();
    __asm { BR              X10 }
  }
  return MEMORY[0x1E0DEE9D8];
}

unint64_t sub_1BB1F59D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  sub_1BA4B07F0(0, &qword_1ED3AF790, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v19 - v6;
  v22 = type metadata accessor for FormatJsonKeyValue();
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v21 = (uint64_t)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v19 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  if (!v13)
    return MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  v14 = 0;
  v15 = MEMORY[0x1E0DEE9D8];
  v19 = a2;
  v20 = a1;
  do
  {
    v23 = *(_BYTE *)(a1 + v14 + 32);
    sub_1BB54D9EC((uint64_t)&v23);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v22) == 1)
    {
      sub_1BB1F607C((uint64_t)v7);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v7, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      sub_1BA5193C4((uint64_t)v12, v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v15 = sub_1BB38E844(0, *(_QWORD *)(v15 + 16) + 1, 1, v15);
      v17 = *(_QWORD *)(v15 + 16);
      v16 = *(_QWORD *)(v15 + 24);
      if (v17 >= v16 >> 1)
        v15 = sub_1BB38E844(v16 > 1, v17 + 1, 1, v15);
      *(_QWORD *)(v15 + 16) = v17 + 1;
      sub_1BA5193C4(v21, v15+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
      a1 = v20;
    }
    ++v14;
  }
  while (v13 != v14);
  swift_bridgeObjectRelease();
  return v15;
}

_QWORD *sub_1BB1F5C20(uint64_t a1, void *a2)
{
  uint64_t inited;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v24;
  char v25;
  _BYTE v26[8];
  _BYTE v27[16];
  _OWORD v28[2];
  uint64_t v29;
  _OWORD v30[2];
  uint64_t v31;
  _OWORD v32[2];
  uint64_t v33;
  _OWORD v34[2];
  uint64_t v35;
  _OWORD v36[2];
  uint64_t v37;
  _OWORD v38[2];
  uint64_t v39;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB898AA0;
  swift_getObjectType();
  sub_1BB40679C((uint64_t)a2, (uint64_t)v28);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v5 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(v5 + 48) = v29;
  v6 = v28[1];
  *(_OWORD *)(v5 + 16) = v28[0];
  *(_OWORD *)(v5 + 32) = v6;
  swift_unknownObjectRetain();
  v7 = sub_1BB1F553C((uint64_t)&unk_1E724C2F8, (uint64_t)a2, (uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BA8C88C8, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC79E1C, (void (*)(char *, uint64_t))sub_1BA9BD304);
  swift_unknownObjectRelease();
  sub_1BAF89090(0x726F6C6F43, 0xE500000000000000, 0, 0, v7, v30);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v8 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v8;
  *(_QWORD *)(v8 + 48) = v31;
  v9 = v30[1];
  *(_OWORD *)(v8 + 16) = v30[0];
  *(_OWORD *)(v8 + 32) = v9;
  sub_1BAFEB10C(a1, (uint64_t)a2, (uint64_t)v32);
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v10 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v10;
  *(_QWORD *)(v10 + 48) = v33;
  v11 = v32[1];
  *(_OWORD *)(v10 + 16) = v32[0];
  *(_OWORD *)(v10 + 32) = v11;
  swift_unknownObjectRetain();
  sub_1BA8DACF0(a1);
  v12 = sub_1BB1F53E0((uint64_t)&unk_1E724EFA8, a2, a1);
  sub_1BA8DAD20(a1);
  swift_unknownObjectRelease();
  sub_1BAF89090(1953394502, 0xE400000000000000, 0, 0, v12, v34);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 176) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 184) = &off_1E72D2F60;
  v13 = swift_allocObject();
  *(_QWORD *)(inited + 152) = v13;
  *(_QWORD *)(v13 + 48) = v35;
  v14 = v34[1];
  *(_OWORD *)(v13 + 16) = v34[0];
  *(_OWORD *)(v13 + 32) = v14;
  swift_unknownObjectRetain();
  v15 = sub_1BB1F553C((uint64_t)&unk_1E724C2C0, (uint64_t)a2, (uint64_t)v26, (uint64_t (*)(_QWORD))sub_1BA8C88C8, (void (*)(BOOL, unint64_t, uint64_t))sub_1BAC79E1C, (void (*)(char *, uint64_t))sub_1BB54D48C);
  swift_unknownObjectRelease();
  sub_1BAF89090(1954047316, 0xE400000000000000, 0, 0, v15, v36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 216) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 224) = &off_1E72D2F60;
  v16 = swift_allocObject();
  *(_QWORD *)(inited + 192) = v16;
  *(_QWORD *)(v16 + 48) = v37;
  v17 = v36[1];
  *(_OWORD *)(v16 + 16) = v36[0];
  *(_OWORD *)(v16 + 32) = v17;
  *(_QWORD *)&v38[0] = MEMORY[0x1E0DEE9D8];
  v25 = 0;
  sub_1BAAC23E4(&v25, &v24);
  sub_1BB383BA8(v24);
  v25 = 1;
  sub_1BAAC23E4(&v25, &v24);
  sub_1BB383BA8(v24);
  v25 = 2;
  sub_1BAAC23E4(&v25, &v24);
  sub_1BB383BA8(v24);
  v18 = sub_1BA97461C(*(uint64_t *)&v38[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6D69542065746144, 0xE900000000000065, 0, 0, v18, v38);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 256) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 264) = &off_1E72D2F60;
  v19 = swift_allocObject();
  *(_QWORD *)(inited + 232) = v19;
  *(_QWORD *)(v19 + 48) = v39;
  v20 = v38[1];
  *(_OWORD *)(v19 + 16) = v38[0];
  *(_OWORD *)(v19 + 32) = v20;
  v24 = inited;
  v21 = swift_bridgeObjectRetain();
  sub_1BB384774(v21);
  v22 = sub_1BB6DF010(v24);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t sub_1BB1F6048()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1F607C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3AF790, (uint64_t (*)(uint64_t))type metadata accessor for FormatJsonKeyValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t dispatch thunk of PuzzleNotificationAutoEnableManagerType.checkForEligibility()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PuzzleNotificationAutoEnableManagerType.resetState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

void sub_1BB1F60E0()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (**v5)(void);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  char *v22;
  id v23;
  id v24;
  id v25;
  unint64_t v26;
  id v27;
  uint64_t v28;
  void (**v29)(void);
  char *v30;
  id v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  char *v35;
  NSObject *v36;
  os_log_type_t v37;
  uint8_t *v38;
  const char *v39;
  id v40;
  id v41;
  void *v42;
  void (*v43)(void);
  char *v44;
  char *v45;
  char *v46;
  NSObject *v47;
  os_log_type_t v48;
  uint8_t *v49;
  void *v50;
  uint64_t v51;
  unint64_t v52;
  void (*v53)(char *, uint64_t);
  id *v54;
  uint64_t v55;
  uint64_t (**v56)(char *, uint64_t, id);
  char *v57;
  char *v58;
  void *v59;
  char *v60;
  void *v61;
  void (*v62)(void);
  id v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  NSObject *v67;
  os_log_type_t v68;
  uint8_t *v69;
  void *v70;
  id v71;
  id v72;
  NSObject *v73;
  os_log_type_t v74;
  uint8_t *v75;
  id *v76;
  NSObject *v77;
  os_log_type_t v78;
  uint64_t v79;
  id v80;
  void *v81;
  id v82;
  id v83;
  NSObject *v84;
  os_log_type_t v85;
  uint8_t *v86;
  _QWORD *v87;
  id v88;
  void *v89;
  void *v90;
  void *v91;
  void (*v92)(void);
  char *v93;
  uint64_t v94;
  char *v95;
  char *v96;
  char *v97;
  id *v98;
  char *v99;
  id v100;
  __int128 v101;
  __int128 v102;
  id v103[3];
  uint64_t v104;
  uint64_t v105;

  v1 = v0;
  v105 = *MEMORY[0x1E0C80C00];
  sub_1BA76D78C();
  MEMORY[0x1E0C80A78](v2);
  v97 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1BB86C8B0();
  v5 = *(void (***)(void))(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v99 = (char *)&v94 - v9;
  MEMORY[0x1E0C80A78](v10);
  v96 = (char *)&v94 - v11;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v94 - v14;
  v16 = objc_msgSend(objc_msgSend(v0[7], sel_appConfiguration, v13), sel_puzzlesConfig);
  swift_unknownObjectRelease();
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v17 = sub_1BB86EFEC();
  v18 = __swift_project_value_buffer(v17, (uint64_t)qword_1ED476918);
  v19 = sub_1BB86EFC8();
  v20 = sub_1BB87330C();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v21 = 0;
    _os_log_impl(&dword_1BA493000, v19, v20, "Checking for auto enabling notifications eligibility...", v21, 2u);
    MEMORY[0x1BCCE5C38](v21, -1, -1);
  }

  v22 = (char *)objc_msgSend(v1[8], sel_cachedSubscription);
  v23 = objc_getAssociatedObject(v22, v22 + 1);
  v98 = v1;
  if (v23)
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v101 = 0u;
    v102 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v101, (uint64_t)v103);
  v95 = v15;
  if (!v104)
  {
    sub_1BA4A2E80((uint64_t)v103, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
    goto LABEL_13;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    v24 = 0;
    v26 = 0;
    goto LABEL_14;
  }
  v24 = v100;
  v25 = objc_msgSend(v100, sel_integerValue);
  if (v25 == (id)-1)
  {

    v35 = v99;
    goto LABEL_26;
  }
  v26 = (unint64_t)v25;
LABEL_14:
  if (objc_getAssociatedObject(v22, (const void *)~v26))
  {
    sub_1BB873B64();
    swift_unknownObjectRelease();
  }
  else
  {
    v101 = 0u;
    v102 = 0u;
  }
  sub_1BA78DE64((uint64_t)&v101, (uint64_t)v103);
  if (!v104)
  {
    sub_1BA4A2E80((uint64_t)v103, (uint64_t (*)(_QWORD))sub_1BA6EDAC4);
LABEL_22:

    v35 = v99;
    if ((v26 & 1) != 0)
      goto LABEL_26;
LABEL_23:
    v36 = sub_1BB86EFC8();
    v37 = sub_1BB87330C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      v39 = "Not a bundle subscriber. Not eligible for auto enabling notifications.";
LABEL_29:
      _os_log_impl(&dword_1BA493000, v36, v37, v39, v38, 2u);
      MEMORY[0x1BCCE5C38](v38, -1, -1);

      return;
    }
    goto LABEL_30;
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99C0);
  if ((swift_dynamicCast() & 1) == 0)
    goto LABEL_22;
  v27 = v100;
  v28 = v18;
  v29 = v5;
  v30 = v7;
  v31 = v16;
  v32 = v4;
  v33 = objc_msgSend(v27, sel_integerValue);

  v34 = v33 + 1;
  v4 = v32;
  v16 = v31;
  v7 = v30;
  v5 = v29;
  v18 = v28;
  v35 = v99;
  if (((v34 ^ ((_DWORD)v26 + 1)) & 1) == 0)
    goto LABEL_23;
LABEL_26:
  v40 = v98[10];
  if (objc_msgSend(v40, sel_puzzleNotificationsEnabled))
  {
    v36 = sub_1BB86EFC8();
    v37 = sub_1BB87330C();
    if (os_log_type_enabled(v36, v37))
    {
      v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v38 = 0;
      v39 = "Puzzle notifications already enabled. Skipping auto-enabling.";
      goto LABEL_29;
    }
LABEL_30:

    return;
  }
  v41 = objc_msgSend(v40, sel_puzzleNotificationsLastChangedDate);
  if (v41)
  {
    v42 = v41;
    sub_1BB86C874();

    v43 = v5[4];
    v44 = v97;
    v43();
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v5[7])(v44, 0, 1, v4);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v5[6])(v44, 1, v4) != 1)
    {
      v45 = v95;
      ((void (*)(char *, char *, uint64_t))v43)(v95, v44, v4);
      ((void (*)(char *, char *, uint64_t))v5[2])(v35, v45, v4);
      v46 = v35;
      v47 = sub_1BB86EFC8();
      v48 = sub_1BB87330C();
      if (os_log_type_enabled(v47, v48))
      {
        v49 = (uint8_t *)swift_slowAlloc();
        v50 = (void *)swift_slowAlloc();
        v103[0] = v50;
        *(_DWORD *)v49 = 136315138;
        v98 = (id *)v5;
        sub_1BA4AD9BC();
        v51 = sub_1BB87420C();
        *(_QWORD *)&v101 = sub_1BA5D2E14(v51, v52, (uint64_t *)v103);
        sub_1BB873A8C();
        swift_bridgeObjectRelease();
        v53 = (void (*)(char *, uint64_t))v98[1];
        v53(v46, v4);
        _os_log_impl(&dword_1BA493000, v47, v48, "Puzzle notifications was set by user on [%s]. Not eligible for auto enabling notifications.", v49, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v50, -1, -1);
        MEMORY[0x1BCCE5C38](v49, -1, -1);

        v53(v95, v4);
      }
      else
      {

        v92 = v5[1];
        ((void (*)(char *, uint64_t))v92)(v46, v4);

        ((void (*)(char *, uint64_t))v92)(v45, v4);
      }
      return;
    }
  }
  else
  {
    v44 = v97;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v5[7])(v97, 1, 1, v4);
  }
  v99 = (char *)v4;
  sub_1BA4A2E80((uint64_t)v44, (uint64_t (*)(_QWORD))sub_1BA76D78C);
  objc_msgSend(v16, sel_autoEnableNotificationPlayTimeInterval);
  sub_1BB86C838();
  v54 = v98;
  v55 = (uint64_t)v98[5];
  v56 = (uint64_t (**)(char *, uint64_t, id))v98[6];
  __swift_project_boxed_opaque_existential_1(v98 + 2, v55);
  v57 = *(char **)(v56[8](v7, v55, v56) + 16);
  swift_bridgeObjectRelease();
  if ((uint64_t)v57 >= (uint64_t)objc_msgSend(v16, sel_autoEnableNotificationMinimumPlayCount))
  {
    v71 = v54[9];
    v103[0] = 0;
    if (objc_msgSend(v71, sel_setPuzzleNotificationsEnabled_userTriggered_error_, 1, 0, v103))
    {
      v72 = v103[0];
      v73 = sub_1BB86EFC8();
      v74 = sub_1BB87330C();
      if (os_log_type_enabled(v73, v74))
      {
        v75 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v75 = 0;
        _os_log_impl(&dword_1BA493000, v73, v74, "Completed auto enabling notifications for puzzles.", v75, 2u);
        MEMORY[0x1BCCE5C38](v75, -1, -1);
      }

      ((void (*)(char *, char *))v5[1])(v7, v99);
    }
    else
    {
      v80 = v103[0];
      v81 = (void *)sub_1BB86C484();

      swift_willThrow();
      v82 = v81;
      v83 = v81;
      v84 = sub_1BB86EFC8();
      v85 = sub_1BB87330C();
      if (os_log_type_enabled(v84, v85))
      {
        v86 = (uint8_t *)swift_slowAlloc();
        v87 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v86 = 138412290;
        v88 = v81;
        v89 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v98 = (id *)v5;
        v90 = v16;
        v91 = v89;
        v103[0] = v89;
        sub_1BB873A8C();
        *v87 = v91;

        _os_log_impl(&dword_1BA493000, v84, v85, "Failed to auto enable notifications. Error = %@.", v86, 0xCu);
        sub_1BA92CD5C();
        swift_arrayDestroy();
        MEMORY[0x1BCCE5C38](v87, -1, -1);
        MEMORY[0x1BCCE5C38](v86, -1, -1);

        v5 = (void (**)(void))v98;
      }
      else
      {

      }
      v93 = v99;

      ((void (*)(char *, char *))v5[1])(v7, v93);
    }
  }
  else
  {
    v98 = (id *)v16;
    v58 = (char *)objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB38F0]), sel_init);
    objc_msgSend(v58, sel_setUnitsStyle_, 0);
    v59 = (void *)sub_1BB86C808();
    v60 = v96;
    sub_1BB86C880();
    v61 = (void *)sub_1BB86C808();
    v62 = v5[1];
    ((void (*)(char *, char *))v62)(v60, v99);
    v97 = v58;
    v63 = objc_msgSend(v58, sel_localizedStringForDate_relativeToDate_, v59, v61);

    v64 = sub_1BB8729A0();
    v66 = v65;

    swift_bridgeObjectRetain();
    v67 = sub_1BB86EFC8();
    v68 = sub_1BB87330C();
    if (os_log_type_enabled(v67, v68))
    {
      v96 = (char *)v18;
      v69 = (uint8_t *)swift_slowAlloc();
      v70 = (void *)swift_slowAlloc();
      v103[0] = v70;
      v95 = v57;
      *(_DWORD *)v69 = 136315138;
      swift_bridgeObjectRetain();
      *(_QWORD *)&v101 = sub_1BA5D2E14(v64, v66, (uint64_t *)v103);
      v57 = v95;
      sub_1BB873A8C();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1BA493000, v67, v68, "Using a time window starting %s for auto enabling notifications.", v69, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1BCCE5C38](v70, -1, -1);
      MEMORY[0x1BCCE5C38](v69, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v76 = v98;
    v77 = sub_1BB86EFC8();
    v78 = sub_1BB87330C();
    if (os_log_type_enabled(v77, v78))
    {
      v79 = swift_slowAlloc();
      *(_DWORD *)v79 = 134218240;
      v103[0] = v57;
      sub_1BB873A8C();
      *(_WORD *)(v79 + 12) = 2048;
      v103[0] = objc_msgSend(v76, sel_autoEnableNotificationMinimumPlayCount);
      sub_1BB873A8C();

      _os_log_impl(&dword_1BA493000, v77, v78, "Played puzzles count [%ld] has not reached min [%ld]. Not eligible for auto enabling notifications.", (uint8_t *)v79, 0x16u);
      MEMORY[0x1BCCE5C38](v79, -1, -1);
    }
    else
    {

    }
    ((void (*)(char *, char *))v62)(v7, v99);
  }
}

id sub_1BB1F6D9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  v1 = v0;
  if (qword_1ED3C0B50 != -1)
    swift_once();
  v2 = sub_1BB86EFEC();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED476918);
  v3 = sub_1BB86EFC8();
  v4 = sub_1BB87330C();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_1BA493000, v3, v4, "Resetting auto-enable notifications state.", v5, 2u);
    MEMORY[0x1BCCE5C38](v5, -1, -1);
  }

  return objc_msgSend(*(id *)(v1 + 80), sel_resetPuzzleNotificationsState);
}

uint64_t sub_1BB1F6E78()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PuzzleNotificationAutoEnableManager()
{
  return objc_opt_self();
}

void sub_1BB1F6EDC()
{
  sub_1BB1F60E0();
}

id sub_1BB1F6EFC()
{
  return sub_1BB1F6D9C();
}

uint64_t FormatWebEmbedBinding.Text.text(from:)(uint64_t a1)
{
  unsigned __int8 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  uint64_t (*v10)(uint64_t);
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  _BYTE v29[32];

  v3 = type metadata accessor for WebEmbedDataVisualization();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (unint64_t *)&v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v9 = (unint64_t *)&v29[-v8];
  sub_1BA4B07F0(0, &qword_1ED3CB5E0, v10, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v11);
  v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v14);
  v16 = &v29[-v15];
  v17 = *v1;
  v18 = a1 + *(int *)(type metadata accessor for FeedWebEmbed() + 52);
  if (v17 <= 0xFB)
  {
    sub_1BB044324(v18, (uint64_t)v16);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v16, 1, v3) == 1)
    {
      sub_1BB044380((uint64_t)v16);
      return 0;
    }
    sub_1BA4C2DD8((uint64_t)v16, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
      v19 = (uint64_t)v16;
      goto LABEL_10;
    }
    v26 = *v9;
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    if (!(v26 >> 61))
    {
      v27 = *(_QWORD *)(v26 + 16);
      swift_retain();
      swift_release();
      v29[31] = v17;
      v25 = sub_1BAF6A514(v27);
      swift_release();
      return v25;
    }
LABEL_17:
    swift_release();
    return 0;
  }
  sub_1BB044324(v18, (uint64_t)v13);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1)
  {
    sub_1BB044380((uint64_t)v13);
    return 0;
  }
  sub_1BA4C2DD8((uint64_t)v13, (uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    v19 = (uint64_t)v13;
LABEL_10:
    sub_1BA4A2E80(v19, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
    return 0;
  }
  v20 = *v6;
  sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for WebEmbedDataVisualization);
  if (v20 >> 61)
    goto LABEL_17;
  v21 = *(_QWORD *)(v20 + 16);
  swift_retain();
  swift_release();
  v22 = *(void **)(v21 + 64);
  if (!v22)
    goto LABEL_17;
  v23 = objc_msgSend(v22, sel_sportsPrimaryName);
  if (!v23)
    goto LABEL_17;
  v24 = v23;
  v25 = sub_1BB8729A0();
  swift_release();

  return v25;
}

uint64_t sub_1BB1F7218(char *a1, char *a2)
{
  return sub_1BB7F86C4(*a1, *a2);
}

uint64_t sub_1BB1F7224()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1F72B0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1F7318()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1F73A0@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB1F73FC(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0x74614D65726F6373;
  if (*v1)
    v2 = 0xD000000000000016;
  v3 = 0x80000001BB95D7A0;
  if (!*v1)
    v3 = 0xEC00000070756863;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB1F7448()
{
  sub_1BB1F7DDC();
  return sub_1BB872D60();
}

uint64_t sub_1BB1F74A4()
{
  sub_1BB1F7DDC();
  return sub_1BB872D0C();
}

void sub_1BB1F74F0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E72524F0;
}

uint64_t sub_1BB1F7500@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return FormatWebEmbedBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1BB1F7514(_QWORD *a1)
{
  return FormatWebEmbedBinding.Text.encode(to:)(a1);
}

uint64_t sub_1BB1F752C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t result;
  uint64_t v44;
  uint64_t v45;
  void *v46;
  uint64_t *v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;

  v47 = a3;
  v5 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - v9;
  MEMORY[0x1E0C80A78](v11);
  v45 = (uint64_t)&v44 - v12;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v44 - v14;
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v44 - v17;
  v19 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v20 = *(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8);
  v21 = *(_QWORD *)(v20 + 72);
  v22 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  if ((v19 & 1) != 0)
  {
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1BB87CE70;
    sub_1BA4C2DD8(a2, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v52 = -4;
    v24 = v46;
    v25 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v7);
    if (v24)
    {

      v27 = 0;
      v28 = 0;
    }
    else
    {
      v27 = v25;
      v28 = v26;
    }
    sub_1BAAF7494(0xD000000000000019, 0x80000001BB97F5D0, v27, v28, (_QWORD *)(v23 + v22));
    v10 = v7;
  }
  else
  {
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1BB87D7A0;
    v44 = v29;
    v30 = (_QWORD *)(v29 + v22);
    sub_1BA4C2DD8(a2, (uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v51 = -126;
    v31 = v46;
    v32 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v18);
    if (v31)
    {

      v34 = 0;
      v35 = 0;
    }
    else
    {
      v34 = v32;
      v35 = v33;
    }
    sub_1BAAF7494(0xD000000000000018, 0x80000001BB97F5F0, v34, v35, v30);
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(a2, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v50 = -127;
    v36 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v15);
    sub_1BAAF7494(0xD00000000000001BLL, 0x80000001BB97F610, v36, v37, (_QWORD *)((char *)v30 + v21));
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v38 = v45;
    sub_1BA4C2DD8(a2, v45, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v49 = 0x80;
    v39 = FormatWebEmbedBinding.Text.text(from:)(v38);
    sub_1BAAF7494(0xD000000000000020, 0x80000001BB97F630, v39, v40, (_QWORD *)((char *)v30 + 2 * v21));
    sub_1BA4A2E80(v38, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    sub_1BA4C2DD8(a2, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
    v48 = -125;
    v41 = FormatWebEmbedBinding.Text.text(from:)((uint64_t)v10);
    sub_1BAAF7494(0xD000000000000017, 0x80000001BB97F660, v41, v42, (_QWORD *)((char *)v30 + 3 * v21));
    v23 = v44;
  }
  result = sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FeedWebEmbed);
  *v47 = v23;
  return result;
}

BOOL _s8NewsFeed21FormatWebEmbedBindingV4TextO2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2;
  unsigned int v3;

  v2 = *a1;
  v3 = *a2;
  if (v2 > 0xFB)
    return v3 > 0xFB;
  if (v3 > 0xFB)
    return 0;
  if ((v2 & 0x80) != 0)
    return (v3 & 0x80) != 0 && ((v3 ^ v2) & 0x7F) == 0;
  else
    return (v3 & 0x80) == 0 && v2 == v3;
}

unint64_t sub_1BB1F7964(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1F7988();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1F7988()
{
  unint64_t result;

  result = qword_1EF2BDD40;
  if (!qword_1EF2BDD40)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Text, &type metadata for FormatWebEmbedBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD40);
  }
  return result;
}

unint64_t sub_1BB1F79CC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75D10();
  a1[2] = sub_1BAEF9A80();
  result = sub_1BB1F7A00();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1F7A00()
{
  unint64_t result;

  result = qword_1EF2BDD48;
  if (!qword_1EF2BDD48)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatWebEmbedBinding.Text, &type metadata for FormatWebEmbedBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD48);
  }
  return result;
}

uint64_t _s4TextOwet_1(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3E)
  {
    v6 = ((*a1 >> 1) & 0x3E | (*a1 >> 7)) ^ 0x3F;
    if (v6 >= 0x3E)
      v6 = -1;
    if (v6 + 1 >= 2)
      return v6;
    else
      return 0;
  }
  else
  {
    v2 = a2 + 194;
    if (a2 + 194 >= 0xFFFF00)
      v3 = 4;
    else
      v3 = 2;
    if (v2 >> 8 < 0xFF)
      v3 = 1;
    if (v2 >= 0x100)
      v4 = v3;
    else
      v4 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1BB1F7A94 + 4 * byte_1BB8F92F8[v4]))();
  }
}

uint64_t _s4TextOwst_1(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  v3 = a3 + 194;
  if (a3 + 194 >= 0xFFFF00)
    v4 = 4;
  else
    v4 = 2;
  if (v3 >> 8 < 0xFF)
    v4 = 1;
  if (v3 >= 0x100)
    LODWORD(v5) = v4;
  else
    LODWORD(v5) = 0;
  if (a3 >= 0x3E)
    v5 = v5;
  else
    v5 = 0;
  if (a2 <= 0x3D)
    return ((uint64_t (*)(void))((char *)&loc_1BB1F7B4C + 4 * byte_1BB8F9302[v5]))();
  *a1 = a2 - 62;
  return ((uint64_t (*)(void))((char *)sub_1BB1F7B80 + 4 * byte_1BB8F92FD[v5]))();
}

uint64_t sub_1BB1F7B80(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F7B88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1F7B90);
  return result;
}

uint64_t sub_1BB1F7BA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1F7BB0);
  *(_BYTE *)result = (2 * (a2 ^ 0x3F)) & 0xFC | ((a2 ^ 0x3F) << 7);
  return result;
}

uint64_t sub_1BB1F7BB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F7BBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F7BC8(unsigned __int8 *a1)
{
  unsigned int v1;

  v1 = *a1;
  if (((v1 >> 1) & 0x3E) != 0)
    return 64 - ((v1 >> 1) & 0x3E | (v1 >> 7));
  else
    return 0;
}

_BYTE *sub_1BB1F7BEC(_BYTE *result, unsigned int a2)
{
  unsigned int v2;

  if (a2 > 0x3E)
  {
    LOBYTE(v2) = a2 - 63;
  }
  else
  {
    if (!a2)
      return result;
    v2 = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
  }
  *result = v2;
  return result;
}

ValueMetadata *type metadata accessor for FormatWebEmbedBinding.Text()
{
  return &type metadata for FormatWebEmbedBinding.Text;
}

uint64_t _s4TextO10CodingTypeOwst_2(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB1F7C74 + 4 * byte_1BB8F930C[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1F7CA8 + 4 * byte_1BB8F9307[v4]))();
}

uint64_t sub_1BB1F7CA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F7CB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1F7CB8);
  return result;
}

uint64_t sub_1BB1F7CC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1F7CCCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1F7CD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F7CD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa_1()
{
  return &_s4TextO10CodingTypeON_1;
}

unint64_t sub_1BB1F7CF8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BDD50;
  if (!qword_1EF2BDD50)
  {
    sub_1BB1F7D40();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD50);
  }
  return result;
}

void sub_1BB1F7D40()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BDD58)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BDD58);
  }
}

unint64_t sub_1BB1F7D98()
{
  unint64_t result;

  result = qword_1EF2BDD60;
  if (!qword_1EF2BDD60)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F94C8, &_s4TextO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD60);
  }
  return result;
}

unint64_t sub_1BB1F7DDC()
{
  unint64_t result;

  result = qword_1ED3A6D38;
  if (!qword_1ED3A6D38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9450, &_s4TextO10CodingTypeON_1);
    atomic_store(result, (unint64_t *)&qword_1ED3A6D38);
  }
  return result;
}

BOOL static FormatCustomItemBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1BB1F7E38(char *a1, char *a2)
{
  return sub_1BB7F6780(*a1, *a2);
}

uint64_t sub_1BB1F7E44()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1F7EC0()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB1F7F18()
{
  sub_1BB8745CC();
  sub_1BB872A90();
  swift_bridgeObjectRelease();
  return sub_1BB874608();
}

uint64_t sub_1BB1F7F90@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1BB873FE4();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1BB1F7FEC(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701667182;
  if (!*v1)
    v2 = 0x696669746E656469;
  v3 = 0xEA00000000007265;
  if (*v1)
    v3 = 0xE400000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1BB1F8028()
{
  sub_1BB1F8420();
  return sub_1BB872D60();
}

uint64_t sub_1BB1F8084()
{
  sub_1BB1F8420();
  return sub_1BB872D0C();
}

void sub_1BB1F80D0(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252730;
}

uint64_t FormatCustomItemBinding.Text.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatCustomItemBinding.Text.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB1F8150()
{
  unint64_t result;

  result = qword_1EF2BDD68;
  if (!qword_1EF2BDD68)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.Text, &type metadata for FormatCustomItemBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD68);
  }
  return result;
}

unint64_t sub_1BB1F8194(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1F81B8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1F81B8()
{
  unint64_t result;

  result = qword_1EF2BDD70;
  if (!qword_1EF2BDD70)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCustomItemBinding.Text, &type metadata for FormatCustomItemBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD70);
  }
  return result;
}

unint64_t sub_1BB1F81FC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE75C00();
  a1[2] = sub_1BAEFA454();
  result = sub_1BB1F8150();
  a1[3] = result;
  return result;
}

uint64_t sub_1BB1F8230@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatCustomItemBinding.Text.init(from:)(a1, a2);
}

uint64_t sub_1BB1F8244(_QWORD *a1)
{
  return FormatCustomItemBinding.Text.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for FormatCustomItemBinding.Text()
{
  return &type metadata for FormatCustomItemBinding.Text;
}

uint64_t _s4TextOwst_7_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB1F82B8 + 4 * byte_1BB8F951D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB1F82EC + 4 * byte_1BB8F9518[v4]))();
}

uint64_t sub_1BB1F82EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F82F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1F82FCLL);
  return result;
}

uint64_t sub_1BB1F8308(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1F8310);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB1F8314(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1F831C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s4TextO10CodingTypeOMa_2()
{
  return &_s4TextO10CodingTypeON_2;
}

unint64_t sub_1BB1F833C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BDD78;
  if (!qword_1EF2BDD78)
  {
    sub_1BB1F8384();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD78);
  }
  return result;
}

void sub_1BB1F8384()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BDD80)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BDD80);
  }
}

unint64_t sub_1BB1F83DC()
{
  unint64_t result;

  result = qword_1EF2BDD88;
  if (!qword_1EF2BDD88)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F971C, &_s4TextO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD88);
  }
  return result;
}

unint64_t sub_1BB1F8420()
{
  unint64_t result;

  result = qword_1EF2BDD90;
  if (!qword_1EF2BDD90)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F96A4, &_s4TextO10CodingTypeON_2);
    atomic_store(result, (unint64_t *)&qword_1EF2BDD90);
  }
  return result;
}

uint64_t sub_1BB1F8464@<X0>(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  char v16;
  char v17;

  v6 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(a1) = *a1;
  sub_1BAA823B0(a2, (uint64_t)v8);
  if ((a1 & 1) != 0)
  {
    v17 = 1;
    v9 = &v17;
    v10 = a3;
    v11 = 1701667150;
    v12 = 0xE400000000000000;
  }
  else
  {
    v16 = 0;
    v9 = &v16;
    v10 = a3;
    v11 = 0x696669746E656449;
    v12 = 0xEA00000000007265;
  }
  sub_1BB1F855C(v11, v12, (uint64_t)v8, v9, v10);
  v13 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(a3, 0, 1, v13);
}

uint64_t sub_1BB1F855C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _BYTE *a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int128 v14;
  __int128 v15;

  if ((*a4 & 1) != 0)
    v9 = (uint64_t *)(a3 + *(int *)(type metadata accessor for FeedCustomItem() + 20) + 16);
  else
    v9 = (uint64_t *)a3;
  v10 = *v9;
  v11 = swift_bridgeObjectRetain();
  v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0)
    v12 = v10 & 0xFFFFFFFFFFFFLL;
  if (v12)
  {
    *(_QWORD *)&v14 = v10;
    *((_QWORD *)&v14 + 1) = v11;
    *((_QWORD *)&v15 + 1) = MEMORY[0x1E0DEA968];
  }
  else
  {
    swift_bridgeObjectRelease();
    v14 = 0u;
    v15 = 0u;
  }
  sub_1BAAF40BC(a1, a2, (uint64_t)&v14, a5);
  return sub_1BAA82448(a3);
}

void destroy for DebugGroupLayoutAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

}

uint64_t initializeWithCopy for DebugGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v3 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v3;
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  v5 = *(void **)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v6 = v5;
  *(_QWORD *)(a1 + 72) = v5;
  return a1;
}

uint64_t assignWithCopy for DebugGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_release();
  v4 = *(void **)(a1 + 72);
  v5 = *(void **)(a2 + 72);
  v6 = v5;
  *(_QWORD *)(a1 + 72) = v5;

  return a1;
}

uint64_t assignWithTake for DebugGroupLayoutAttributes(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v4 = *(void **)(a1 + 72);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);

  return a1;
}

uint64_t getEnumTagSinglePayload for DebugGroupLayoutAttributes(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugGroupLayoutAttributes(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugGroupLayoutAttributes()
{
  return &type metadata for DebugGroupLayoutAttributes;
}

id sub_1BB1F88DC()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  char *v10;
  uint64_t v11;
  id v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  __int128 v18;
  objc_super v19;

  v1 = *(void **)(v0 + 88);
  if (v1)
  {
    v2 = *(id *)(v0 + 88);
  }
  else
  {
    v3 = (void *)MEMORY[0x1BCCE5D40](v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v5 = sub_1BB1F8A68();
    v6 = sub_1BB1F8C4C();
    v7 = swift_allocObject();
    v8 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v7 + 32) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v7 + 40) = v8;
    *(_QWORD *)(v7 + 80) = 0;
    v18 = *(_OWORD *)(v0 + 56);
    swift_unknownObjectWeakInit();
    *(_QWORD *)(v7 + 80) = v4;
    *(_QWORD *)(v7 + 88) = 0;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRetain();

    *(_BYTE *)(v7 + 16) = 5;
    *(_QWORD *)(v7 + 24) = v5;
    *(_QWORD *)(v7 + 48) = v6;
    *(_OWORD *)(v7 + 56) = v18;
    v9 = (objc_class *)type metadata accessor for FormatAccessibilityShadowElement();
    v10 = (char *)objc_allocWithZone(v9);
    *(_QWORD *)&v10[OBJC_IVAR____TtC8NewsFeedP33_DD60186E3570D2ADA3A82D30FAA22DCC32FormatAccessibilityShadowElement_accessibilityRenderer] = v7;
    v11 = MEMORY[0x1BCCE5D40](v7 + 72);
    if (v11)
    {
      v12 = (id)v11;
      swift_retain();
    }
    else
    {
      v13 = objc_allocWithZone(MEMORY[0x1E0DC3F10]);
      swift_retain();
      v12 = objc_msgSend(v13, sel_init);
    }
    v19.receiver = v10;
    v19.super_class = v9;
    v14 = objc_msgSendSuper2(&v19, sel_initWithAccessibilityContainer_, v12, v18);

    swift_release();
    v15 = *(void **)(v0 + 88);
    *(_QWORD *)(v0 + 88) = v14;
    v2 = v14;

    v1 = 0;
  }
  v16 = v1;
  return v2;
}

uint64_t sub_1BB1F8A68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  char v11;
  uint64_t v12;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v3 = v1 + 40;
  do
  {
    v4 = *(_QWORD *)(v3 - 8);
    if ((v4 & 0x8000000000000000) == 0)
    {
      v5 = swift_retain_n();
      goto LABEL_8;
    }
    v7 = (uint64_t *)((v4 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
    v8 = v7[1];
    if (v8 && *(_QWORD *)(*(_QWORD *)v3 + 16))
    {
      v9 = *v7;
      sub_1BB1FA8AC(*(_QWORD *)(v3 - 8));
      v10 = (id)(v4 & 0x7FFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v9, v8);
      if ((v11 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();

LABEL_8:
        v6 = sub_1BB1F8A68(v5);
        sub_1BB386EA4(v6);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();

      }
      sub_1BB1FA8E8(v4);
    }
    v3 += 16;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
LABEL_15:
  sub_1BA4B07F0(0, &qword_1ED3CF808, (uint64_t (*)(uint64_t))type metadata accessor for FormatDataAccessibilityValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB1FAA90();
  swift_bridgeObjectRetain();
  v12 = sub_1BB872BC8();
  swift_bridgeObjectRelease_n();
  return v12;
}

uint64_t sub_1BB1F8C4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v14;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 48);
  v14 = v1;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (!v3)
  {
    swift_bridgeObjectRetain();
    return v1;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v4 = v2 + 40;
  do
  {
    v5 = *(_QWORD *)(v4 - 8);
    if ((v5 & 0x8000000000000000) == 0)
    {
      v6 = swift_retain_n();
      goto LABEL_8;
    }
    v8 = (uint64_t *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
    v9 = v8[1];
    if (v9 && *(_QWORD *)(*(_QWORD *)v4 + 16))
    {
      v10 = *v8;
      sub_1BB1FA8AC(*(_QWORD *)(v4 - 8));
      v11 = (id)(v5 & 0x7FFFFFFFFFFFFFFFLL);
      swift_bridgeObjectRetain();
      sub_1BA6E35A8(v10, v9);
      if ((v12 & 1) != 0)
      {
        swift_retain();
        swift_bridgeObjectRelease();

LABEL_8:
        v7 = sub_1BB1F8C4C(v6);
        sub_1BB386EB0(v7);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();

      }
      sub_1BB1FA8E8(v5);
    }
    v4 += 16;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1BB1F8DCC()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB1F8E14()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  __int16 v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  char v14;

  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v0 + 40) + 16))
    return 0;
  swift_beginAccess();
  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (i = v2 + 40; ; i += 16)
    {
      v5 = *(_QWORD *)(i - 8);
      if (v5 < 0)
      {
        v10 = (uint64_t *)((v5 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
        v11 = v10[1];
        if (!v11 || !*(_QWORD *)(*(_QWORD *)i + 16))
          goto LABEL_6;
        v12 = *v10;
        sub_1BB1FA8AC(*(_QWORD *)(i - 8));
        v13 = (id)(v5 & 0x7FFFFFFFFFFFFFFFLL);
        swift_bridgeObjectRetain();
        sub_1BA6E35A8(v12, v11);
        if ((v14 & 1) == 0)
        {
          swift_bridgeObjectRelease();

          sub_1BB1FA8E8(v5);
          goto LABEL_6;
        }
        swift_retain();
        swift_bridgeObjectRelease();

      }
      else
      {
        v6 = swift_retain_n();
      }
      v7 = ((uint64_t (*)(uint64_t))sub_1BB1F8DCC)(v6);
      v9 = v8;
      sub_1BB1FA8E8(v5);
      swift_release();
      if ((v9 & 0x100) == 0 && ((v9 & 1) == 0 || !v7))
      {
        swift_bridgeObjectRelease();
        return 0;
      }
LABEL_6:
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
    }
  }
  return 1;
}

uint64_t sub_1BB1F8FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t ObjectType;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  char v38;
  id v39;
  uint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  char v57;
  unint64_t v58;
  __int128 v60;
  uint64_t v61;
  _QWORD *v62;

  v1 = v0;
  v2 = MEMORY[0x1E0DEE9D8];
  v62 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  sub_1BB1F8DCC();
  if ((v4 & 0x100) != 0)
  {
    swift_beginAccess();
    v10 = swift_bridgeObjectRetain();
    sub_1BB385EB4(v10);
    swift_beginAccess();
    v11 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
    if (!v11)
      goto LABEL_56;
    v12 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      v15 = *(_QWORD *)(v12 - 8);
      if ((v15 & 0x8000000000000000) == 0)
        break;
      v18 = (void *)(v15 & 0x7FFFFFFFFFFFFFFFLL);
      v19 = (uint64_t *)((v15 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
      v20 = v19[1];
      if (v20 && *(_QWORD *)(*(_QWORD *)v12 + 16))
      {
        v21 = *v19;
        sub_1BB1FA8AC(*(_QWORD *)(v12 - 8));
        v22 = v18;
        swift_bridgeObjectRetain();
        sub_1BA6E35A8(v21, v20);
        if ((v23 & 1) != 0)
        {
          swift_retain();
          swift_bridgeObjectRelease();

LABEL_12:
          v17 = sub_1BB1F8FF8(v16);
          swift_release();
          if (v17)
            v14 = v17;
          else
            v14 = v2;
          goto LABEL_9;
        }
        swift_bridgeObjectRelease();

      }
      else
      {
        v13 = v18;
        swift_bridgeObjectRetain();
      }
      v14 = v2;
LABEL_9:
      v12 += 16;
      sub_1BB385EB4(v14);
      sub_1BB1FA8E8(v15);
      if (!--v11)
      {
LABEL_55:
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
    }
    v16 = swift_retain_n();
    goto LABEL_12;
  }
  if ((v4 & 1) == 0)
  {
    v5 = MEMORY[0x1BCCE5D40](v0 + 72);
    if (v5)
    {
      v6 = (void *)v5;
      v7 = *(_QWORD *)(v1 + 80);
      ObjectType = swift_getObjectType();
      v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7);

    }
    else
    {
      v9 = v2;
    }
    sub_1BB385EB4(v9);
    swift_beginAccess();
    v25 = swift_bridgeObjectRetain();
    sub_1BB385EB4(v25);
    swift_beginAccess();
    v26 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
    if (v26)
    {
      v27 = swift_bridgeObjectRetain() + 40;
      while (1)
      {
        v30 = *(_QWORD *)(v27 - 8);
        if ((v30 & 0x8000000000000000) == 0)
          break;
        v33 = (void *)(v30 & 0x7FFFFFFFFFFFFFFFLL);
        v34 = (uint64_t *)((v30 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
        v35 = v34[1];
        if (v35 && *(_QWORD *)(*(_QWORD *)v27 + 16))
        {
          v36 = *v34;
          sub_1BB1FA8AC(*(_QWORD *)(v27 - 8));
          v37 = v33;
          swift_bridgeObjectRetain();
          sub_1BA6E35A8(v36, v35);
          if ((v38 & 1) != 0)
          {
            swift_retain();
            swift_bridgeObjectRelease();

LABEL_30:
            v32 = sub_1BB1F8FF8(v31);
            swift_release();
            if (v32)
              v29 = v32;
            else
              v29 = v2;
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();

        }
        else
        {
          v28 = v33;
          swift_bridgeObjectRetain();
        }
        v29 = v2;
LABEL_27:
        v27 += 16;
        sub_1BB385EB4(v29);
        sub_1BB1FA8E8(v30);
        if (!--v26)
          goto LABEL_55;
      }
      v31 = swift_retain_n();
      goto LABEL_30;
    }
    goto LABEL_56;
  }
  if (v3)
    return MEMORY[0x1E0DEE9D8];
  v39 = sub_1BB1F88DC();
  v61 = type metadata accessor for FormatAccessibilityShadowElement();
  *(_QWORD *)&v60 = v39;
  v40 = MEMORY[0x1E0DEE9D8];
  v41 = sub_1BB391924(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v43 = v41[2];
  v42 = v41[3];
  if (v43 >= v42 >> 1)
    v41 = sub_1BB391924((_QWORD *)(v42 > 1), v43 + 1, 1, v41);
  v41[2] = v43 + 1;
  sub_1BA76EAE0(&v60, &v41[4 * v43 + 4]);
  v62 = v41;
  swift_beginAccess();
  v44 = swift_bridgeObjectRetain();
  sub_1BB385EB4(v44);
  swift_beginAccess();
  v45 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  if (v45)
  {
    v46 = swift_bridgeObjectRetain() + 40;
    while (1)
    {
      v49 = *(_QWORD *)(v46 - 8);
      if ((v49 & 0x8000000000000000) == 0)
        break;
      v52 = (void *)(v49 & 0x7FFFFFFFFFFFFFFFLL);
      v53 = (uint64_t *)((v49 & 0x7FFFFFFFFFFFFFFFLL) + OBJC_IVAR____TtC8NewsFeed15FormatStateView_state);
      v54 = v53[1];
      if (v54 && *(_QWORD *)(*(_QWORD *)v46 + 16))
      {
        v55 = *v53;
        sub_1BB1FA8AC(*(_QWORD *)(v46 - 8));
        v56 = v52;
        swift_bridgeObjectRetain();
        sub_1BA6E35A8(v55, v54);
        if ((v57 & 1) != 0)
        {
          swift_retain();
          swift_bridgeObjectRelease();

LABEL_47:
          v51 = sub_1BB1F8FF8(v50);
          swift_release();
          if (v51)
            v48 = v51;
          else
            v48 = v40;
          goto LABEL_44;
        }
        swift_bridgeObjectRelease();

      }
      else
      {
        v47 = v52;
        swift_bridgeObjectRetain();
      }
      v48 = v40;
LABEL_44:
      v46 += 16;
      sub_1BB385EB4(v48);
      sub_1BB1FA8E8(v49);
      if (!--v45)
        goto LABEL_55;
    }
    v50 = swift_retain_n();
    goto LABEL_47;
  }
LABEL_56:
  v58 = sub_1BB1F9538((uint64_t)v62, v1);
  swift_bridgeObjectRelease();
  v24 = sub_1BA97616C(v58);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(v24 + 16))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v24;
}

uint64_t sub_1BB1F9538(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  void *v14;
  _BYTE v15[32];
  uint64_t v16;
  _QWORD v17[4];
  uint64_t v18;

  v2 = MEMORY[0x1E0DEE9D8];
  if (!a1)
    return v2;
  v18 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v5 = a1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1BA747A10(v5, (uint64_t)v17);
      sub_1BA747A10((uint64_t)v17, (uint64_t)v15);
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
      if ((swift_dynamicCast() & 1) == 0)
        v16 = 0;
      v6 = __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      if (v16)
      {
        MEMORY[0x1BCCE36AC](v6);
        if (*(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
          sub_1BB872E44();
        sub_1BB872E8C();
        sub_1BB872DCC();
      }
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    v7 = v18;
  }
  else
  {
    v7 = MEMORY[0x1E0DEE9D8];
  }
  v17[0] = v7;
  sub_1BB1FAAF0(0, &qword_1ED3D2598, (unint64_t *)&qword_1ED3B99D0);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99D0);
  sub_1BB1FAA50(&qword_1ED3D2BD0, &qword_1ED3D2598, (unint64_t *)&qword_1ED3B99D0);
  sub_1BB1FAB44();
  v2 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  if (!(v2 >> 62))
  {
    v8 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v8)
      goto LABEL_15;
LABEL_22:
    swift_bridgeObjectRelease();
    return v2;
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v8 = result;
  if (!result)
    goto LABEL_22;
LABEL_15:
  if (v8 >= 1)
  {
    v10 = 0;
    v11 = a2 + 72;
    do
    {
      if ((v2 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x1BCCE4630](v10, v2);
      else
        v12 = *(id *)(v2 + 8 * v10 + 32);
      v13 = v12;
      v14 = (void *)MEMORY[0x1BCCE5D40](v11);
      ++v10;
      objc_msgSend(v13, sel_setAccessibilityContainer_, v14);

    }
    while (v8 != v10);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1BB1F97E8@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  void *v2;

  v2 = *a1;
  *a2 = *a1;
  return v2;
}

uint64_t sub_1BB1F9814()
{
  return sub_1BB1F9B28((void (*)(uint64_t, uint64_t))sub_1BB6C6B84);
}

uint64_t sub_1BB1F9820(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  double v19;
  uint64_t v20;
  double v21;
  double v22;
  uint64_t v23;
  char v24;
  __int128 v26;
  _QWORD v27[3];
  uint64_t v28;

  v2 = v1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0480, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAE4B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v27[-2] - v5;
  v7 = sub_1BB86C8B0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v27[-2] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = *a1;
  if ((~*a1 & 0xF000000000000007) == 0)
    return v11;
  if (v12 < 0)
  {
    v17 = *(_QWORD *)(v2 + 56);
    v18 = *(_QWORD *)(v2 + 64);
    swift_retain();
    sub_1BB248E9C(v17, v18, v27);
    v28 = v27[0];
    v11 = sub_1BB1F9820(&v28);
    swift_release();
    swift_release();
    return v11;
  }
  v13 = *(_QWORD *)(v12 + 16);
  type metadata accessor for FormatComputedContext();
  v14 = swift_allocObject();
  v15 = *(_OWORD *)(v2 + 56);
  *(_OWORD *)(v14 + 16) = v15;
  v16 = *(unsigned __int8 *)(v13 + 24);
  v26 = v15;
  if (v16 == 255)
  {
    v11 = *(_QWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 112));
    swift_retain();
    swift_unknownObjectRetain();
    goto LABEL_11;
  }
  if ((v16 & 1) != 0)
  {
    swift_retain();
    swift_unknownObjectRetain();
  }
  else
  {
    v19 = *(double *)(v13 + 16);
    v20 = v13 + *(_QWORD *)(*(_QWORD *)v13 + 104);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v20, v7);
    swift_retain();
    swift_unknownObjectRetain();
    sub_1BB86C844();
    v22 = v21;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    if (v19 >= -v22)
    {
      v11 = *(_QWORD *)(v13 + *(_QWORD *)(*(_QWORD *)v13 + 112));
      goto LABEL_11;
    }
  }
  v11 = sub_1BAA6A2DC(v14);
LABEL_11:
  swift_bridgeObjectRetain_n();
  swift_release();
  sub_1BB86BE00();
  v23 = sub_1BB86BE54();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v6, 0, 1, v23);
  v24 = sub_1BB86DFC0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BAA65904((uint64_t)v6);
  if ((v24 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

uint64_t sub_1BB1F9AF8()
{
  return sub_1BB1F9B28((void (*)(uint64_t, uint64_t))sub_1BB6C6D54);
}

uint64_t sub_1BB1F9B04()
{
  return sub_1BB1F9B28((void (*)(uint64_t, uint64_t))sub_1BB6C6F24);
}

uint64_t sub_1BB1F9B10()
{
  return sub_1BB1F9B28((void (*)(uint64_t, uint64_t))sub_1BB6C70F4);
}

uint64_t sub_1BB1F9B1C()
{
  return sub_1BB1F9B28((void (*)(uint64_t, uint64_t))sub_1BB6C72C4);
}

uint64_t sub_1BB1F9B28(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;

  sub_1BB1F8DCC();
  v5 = 0;
  if ((v4 & 0x100) == 0)
  {
    if ((v4 & 1) == 0 || v3)
    {
      v6 = sub_1BB1F8A68();
      swift_retain();
      a1(v6, v1);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
      if (*(_QWORD *)(sub_1BB872BC8() + 16))
      {
        sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
        v5 = sub_1BB872904();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v5;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v5;
}

uint64_t sub_1BB1F9C88()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  sub_1BB1F8DCC();
  v2 = 0;
  if ((v1 & 0x100) == 0)
  {
    if ((v1 & 1) == 0 || v0)
    {
      v3 = sub_1BB1F8A68();
      swift_retain();
      v4 = sub_1BB6C7494(v3);
      swift_bridgeObjectRelease();
      swift_release();
      if (v4[2])
      {
        v2 = v4[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v2;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v2;
}

uint64_t sub_1BB1F9D34()
{
  uint64_t v0;
  __int16 v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t i;
  uint64_t v6;
  uint64_t v7;

  sub_1BB1F8DCC();
  if ((v1 & 0x100) == 0 && ((v1 & 1) == 0 || v0))
  {
    v2 = sub_1BB1F8A68();
    v3 = v2;
    if (v2 >> 62)
    {
      swift_bridgeObjectRetain();
      v4 = sub_1BB873F30();
      if (v4)
        goto LABEL_7;
    }
    else
    {
      v4 = *(_QWORD *)((v2 & 0xFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v4)
      {
LABEL_7:
        if (v4 < 1)
        {
          __break(1u);
          JUMPOUT(0x1BB1FA008);
        }
        for (i = 0; i != v4; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0)
            v6 = MEMORY[0x1BCCE4630](i, v3);
          else
            v6 = swift_retain();
          v7 = *(unsigned __int8 *)(*(_QWORD *)(v6 + 16) + 32);
          if ((v7 - 18) >= 6)
            __asm { BR              X9 }
          swift_release();
        }
      }
    }
    swift_bridgeObjectRelease_n();
  }
  return 0;
}

uint64_t sub_1BB1FA050()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  void *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  unint64_t v15;

  sub_1BB1F8DCC();
  v2 = 0;
  if ((v1 & 0x100) == 0)
  {
    if ((v1 & 1) == 0 || v0)
    {
      v3 = sub_1BB1F8C4C();
      v4 = *(_QWORD *)(v3 + 16);
      if (v4)
      {
        swift_bridgeObjectRetain();
        v5 = (_BYTE *)(v3 + 48);
        v6 = MEMORY[0x1E0DEE9B0] + 8;
        v7 = MEMORY[0x1E0DED1E8];
        do
        {
          v11 = (uint64_t (*)(uint64_t))*((_QWORD *)v5 - 2);
          if ((*v5 & 1) != 0)
          {
            v8 = (void *)*((_QWORD *)v5 - 1);
            v9 = swift_retain();
            v10 = v11(v9);
            sub_1BB1C1964(v11, v8, 1);
          }
          else
          {
            sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, v6, (uint64_t (*)(_QWORD, uint64_t))v7);
            v12 = swift_allocObject();
            *(_OWORD *)(v12 + 16) = xmmword_1BB8856E0;
            *(_QWORD *)(v12 + 32) = v11;
            v15 = v12;
            v13 = v11;
            sub_1BB872DCC();
            v10 = v15;
          }
          sub_1BB386EC4(v10);
          v5 += 24;
          --v4;
        }
        while (v4);
        swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      sub_1BB1FAAF0(0, &qword_1EF2A9248, &qword_1ED39DAC0);
      sub_1BB1FAA50(&qword_1EF2BDDA0, &qword_1EF2A9248, &qword_1ED39DAC0);
      v2 = sub_1BB872BC8();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v2;
}

void sub_1BB1FA23C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = objc_msgSend(*a1, sel_name);
  v4 = sub_1BB8729A0();
  v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t sub_1BB1FA2A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  *a2 = *(_QWORD *)(v2 + 16);
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1FA2C4()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1BA8FD860(v0 + 72);

  return swift_deallocClassInstance();
}

id sub_1BB1FA340(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;

  v4 = a1;
  sub_1BB1FA3CC(a3);
  v6 = v5;

  if (v6)
  {
    v7 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 0;
  }
  return v7;
}

uint64_t sub_1BB1FA3CC(void (*a1)(uint64_t, uint64_t))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __int16 v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *(_QWORD *)(v1
                 + OBJC_IVAR____TtC8NewsFeedP33_DD60186E3570D2ADA3A82D30FAA22DCC32FormatAccessibilityShadowElement_accessibilityRenderer);
  sub_1BB1F8DCC();
  v6 = 0;
  if ((v5 & 0x100) == 0)
  {
    if ((v5 & 1) == 0 || v4)
    {
      v7 = sub_1BB1F8A68();
      swift_retain();
      a1(v7, v3);
      swift_bridgeObjectRelease();
      swift_release();
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
      sub_1BA5C6A28((unint64_t *)&unk_1ED3B95E0, MEMORY[0x1E0DEAF38]);
      if (*(_QWORD *)(sub_1BB872BC8() + 16))
      {
        sub_1BA5C6A28((unint64_t *)&qword_1ED3B95D0, MEMORY[0x1E0DEAF20]);
        v6 = sub_1BB872904();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v6;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v6;
}

uint64_t sub_1BB1FA5A0()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;
  unint64_t v3;
  _QWORD *v4;

  sub_1BB1F8DCC();
  v2 = 0;
  if ((v1 & 0x100) == 0)
  {
    if ((v1 & 1) == 0 || v0)
    {
      v3 = sub_1BB1F8A68();
      swift_retain();
      v4 = sub_1BB6C7494(v3);
      swift_bridgeObjectRelease();
      swift_release();
      if (v4[2])
      {
        v2 = v4[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return v2;
      }
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  return v2;
}

uint64_t type metadata accessor for FormatAccessibilityShadowElement()
{
  return objc_opt_self();
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatAccessibilityRendererContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1BB1FA8AC(*a2);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t sub_1BB1FA8AC(uint64_t a1)
{
  id v2;

  if ((a1 & 0x8000000000000000) == 0)
    return swift_retain();
  v2 = (id)(a1 & 0x7FFFFFFFFFFFFFFFLL);
  return swift_bridgeObjectRetain();
}

uint64_t destroy for FormatAccessibilityRendererContainer(uint64_t *a1)
{
  return sub_1BB1FA8E8(*a1);
}

uint64_t sub_1BB1FA8E8(uint64_t a1)
{
  if ((a1 & 0x8000000000000000) == 0)
    return swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t *assignWithCopy for FormatAccessibilityRendererContainer(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *a2;
  v4 = a2[1];
  sub_1BB1FA8AC(*a2);
  v5 = *a1;
  *a1 = v3;
  a1[1] = v4;
  sub_1BB1FA8E8(v5);
  return a1;
}

uint64_t *assignWithTake for FormatAccessibilityRendererContainer(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;

  v3 = *a1;
  *(_OWORD *)a1 = *a2;
  sub_1BB1FA8E8(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatAccessibilityRendererContainer(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatAccessibilityRendererContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
      *(_QWORD *)(result + 8) = 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatAccessibilityRendererContainer()
{
  return &type metadata for FormatAccessibilityRendererContainer;
}

uint64_t sub_1BB1FAA50(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BB1FAAF0(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB1FAA90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3CF810;
  if (!qword_1ED3CF810)
  {
    sub_1BA4B07F0(255, &qword_1ED3CF808, (uint64_t (*)(uint64_t))type metadata accessor for FormatDataAccessibilityValue, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3CF810);
  }
  return result;
}

void sub_1BB1FAAF0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_1BA49A224(255, a3);
    v4 = sub_1BB872EE0();
    if (!v5)
      atomic_store(v4, a2);
  }
}

unint64_t sub_1BB1FAB44()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3D2BD8;
  if (!qword_1ED3D2BD8)
  {
    v1 = sub_1BA49A224(255, (unint64_t *)&qword_1ED3B99D0);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3D2BD8);
  }
  return result;
}

uint64_t sub_1BB1FAB9C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t v6;
  int v11;
  uint64_t v12;

  v11 = *a6;
  v12 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 32) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v6 + 40) = v12;
  *(_QWORD *)(v6 + 80) = 0;
  swift_unknownObjectWeakInit();
  *(_QWORD *)(v6 + 80) = a2;
  *(_QWORD *)(v6 + 88) = 0;
  swift_unknownObjectWeakAssign();
  if (v11 == 7)
    LOBYTE(v11) = *((_BYTE *)a3 + *(_QWORD *)(*a3 + 152));
  *(_BYTE *)(v6 + 16) = v11;
  *(_QWORD *)(v6 + 56) = a4;
  *(_QWORD *)(v6 + 64) = a5;
  *(_QWORD *)(v6 + 48) = v12;
  *(_QWORD *)(v6 + 24) = a3[15];
  swift_bridgeObjectRetain();
  return v6;
}

uint64_t sub_1BB1FAC3C(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5, unsigned __int8 *a6)
{
  swift_allocObject();
  return sub_1BB1FAB9C(a1, a2, a3, a4, a5, a6);
}

uint64_t destroy for FormatDerivedDataContextScope(uint64_t a1)
{
  return sub_1BA895B84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s8NewsFeed29FormatDerivedDataContextScopeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA895B64(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for FormatDerivedDataContextScope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  unint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1BA895B64(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1BA895B84(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for FormatDerivedDataContextScope(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1BA895B84(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatDerivedDataContextScope(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7E && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 126);
  v3 = ((*(unsigned __int8 *)(a1 + 16) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x1F))) ^ 0x7F;
  if (v3 >= 0x7D)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataContextScope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 126;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x7E)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_BYTE *)(result + 16) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_1BB1FAE54(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v1 = *(unsigned __int8 *)(a1 + 16);
  v2 = (char)v1;
  v3 = v1 >> 6;
  if (v2 >= 0)
    return v3;
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_1BB1FAE74(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    *(_BYTE *)(result + 16) = *(_BYTE *)(result + 16) & 1 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 2;
    *(_QWORD *)(result + 8) = 0;
    *(_BYTE *)(result + 16) = 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataContextScope()
{
  return &type metadata for FormatDerivedDataContextScope;
}

uint64_t sub_1BB1FAEB0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  sub_1BA4CDF6C(0, &qword_1ED3B9C10, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  MEMORY[0x1E0C80A78](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA6B8518();
  sub_1BB87468C();
  if (!v1)
  {
    sub_1BB1FBC74();
    sub_1BB8740D4();
    __asm { BR              X10 }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

void sub_1BB1FB018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v3);
  *(_QWORD *)v1 = 0;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0x80;
  JUMPOUT(0x1BB1FAFD4);
}

uint64_t sub_1BB1FB1F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unsigned int v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  __int128 v21;
  uint64_t v22;

  sub_1BA4CDF6C(0, &qword_1ED39DBE0, (uint64_t (*)(void))sub_1BA6B8518, (uint64_t)&type metadata for FormatCodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v5 = v4;
  v22 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - v6;
  v8 = *(_QWORD *)(v1 + 8);
  v17 = *(_QWORD *)v1;
  v9 = a1[3];
  v10 = a1;
  v11 = *(unsigned __int8 *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(v10, v9);
  sub_1BA6B8518();
  sub_1BB8746C8();
  if (v11 >> 6)
  {
    if (v11 >> 6 == 1)
    {
      v16 = v11;
      LOBYTE(v21) = 2;
      v18 = 0;
      v19 = 0;
      v12 = v17;
      sub_1BA682148(v17, v8);
      sub_1BB1FBCFC();
      sub_1BB8741AC();
      if (v2)
      {
        (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
        return sub_1BA895B84(v12, v8, v16);
      }
      else
      {
        v18 = v12;
        v19 = v8;
        v21 = xmmword_1BB87FC90;
        sub_1BA4CDF6C(0, &qword_1EF2BDDB8, (uint64_t (*)(void))sub_1BAA47CFC, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
        sub_1BB1FBD40(&qword_1EF2BDDD8, (uint64_t)&protocol conformance descriptor for FormatValue<A>);
        sub_1BB8741AC();
        sub_1BA895B84(v12, v8, v16);
        return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
      }
    }
    else
    {
      if (v8 | v17 || v11 != 128)
      {
        if (v17 == 1 && !v8 && v11 == 128)
        {
          v14 = 3;
        }
        else if (v17 == 2 && !v8 && v11 == 128)
        {
          v14 = 4;
        }
        else if (v17 == 3 && !v8 && v11 == 128)
        {
          v14 = 5;
        }
        else if (v17 == 4 && !v8 && v11 == 128)
        {
          v14 = 6;
        }
        else if (v17 == 5 && !v8 && v11 == 128)
        {
          v14 = 7;
        }
        else
        {
          v14 = 8;
        }
        LOBYTE(v21) = v14;
      }
      else
      {
        LOBYTE(v21) = 0;
      }
      sub_1BB1FBCFC();
      v18 = 0;
      v19 = 0;
      sub_1BB8741AC();
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    }
  }
  else
  {
    LOBYTE(v21) = 1;
    sub_1BB1FBCFC();
    v18 = 0;
    v19 = 0;
    sub_1BB8741AC();
    if (!v2)
    {
      v18 = v17;
      v19 = v8;
      v20 = v11 & 1;
      v21 = xmmword_1BB87FC90;
      sub_1BB1FBDA0();
      sub_1BB8741AC();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  }
}

uint64_t sub_1BB1FB590(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB1FB5C0 + 4 * byte_1BB8F9899[a1]))(0x70756F7267, 0xE500000000000000);
}

uint64_t sub_1BB1FB5C0()
{
  return 1953459315;
}

uint64_t sub_1BB1FB5D0()
{
  return 1835365481;
}

uint64_t sub_1BB1FB5E0()
{
  return 0x656D656C70707573;
}

uint64_t sub_1BB1FB604()
{
  return 0x656C797473;
}

uint64_t sub_1BB1FB614()
{
  return 0x697461726F636564;
}

uint64_t sub_1BB1FB630()
{
  return 0x7261696C69787561;
}

uint64_t sub_1BB1FB64C()
{
  return 0x6E6F6974706FLL;
}

uint64_t sub_1BB1FB660()
{
  return 0x646E69426D657469;
}

uint64_t sub_1BB1FB680()
{
  uint64_t v0;
  unsigned int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 >> 6)
  {
    if (v1 >> 6 == 1)
    {
      sub_1BB8745D8();
      return FormatItemKind.hash(into:)();
    }
    else
    {
      return sub_1BB8745D8();
    }
  }
  else
  {
    sub_1BB8745D8();
    sub_1BB872A90();
    return sub_1BB8745E4();
  }
}

void sub_1BB1FB7C8(char *a1)
{
  sub_1BB7F0E34(*a1);
}

uint64_t sub_1BB1FB7D4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1904((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB1FB818(uint64_t a1)
{
  char *v1;

  sub_1BA9D1904(a1, *v1);
}

uint64_t sub_1BB1FB820()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D1904((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB1FB860@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB1FC374();
  *a1 = result;
  return result;
}

uint64_t sub_1BB1FB88C@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB1FB590(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB1FB8B4()
{
  sub_1BB1FC330();
  return sub_1BB872D60();
}

uint64_t sub_1BB1FB910()
{
  sub_1BB1FC330();
  return sub_1BB872D0C();
}

uint64_t sub_1BB1FB95C(_QWORD *a1)
{
  return sub_1BB1FAEB0(a1);
}

uint64_t sub_1BB1FB970(_QWORD *a1)
{
  return sub_1BB1FB1F4(a1);
}

uint64_t sub_1BB1FB984()
{
  sub_1BB8745CC();
  sub_1BB1FB680();
  return sub_1BB874608();
}

uint64_t sub_1BB1FB9D8()
{
  sub_1BB8745CC();
  sub_1BB1FB680();
  return sub_1BB874608();
}

unint64_t sub_1BB1FBA2C()
{
  unint64_t result;

  result = qword_1EF2BDDA8;
  if (!qword_1EF2BDDA8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F98D0, &type metadata for FormatDerivedDataContextScope);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDA8);
  }
  return result;
}

uint64_t sub_1BB1FBA70()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unsigned int v3;
  _QWORD *v4;
  _QWORD *v5;
  BOOL v7;
  BOOL v9;
  uint64_t v10;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(unsigned __int8 *)(v0 + 16);
  if (!(v3 >> 6))
  {
    v10 = 0x28746F6C73;
    sub_1BA895B64(v2, v1, v3);
    sub_1BB872AFC(v5);
    sub_1BA895B84(v2, v1, v3);
    goto LABEL_5;
  }
  if (v3 >> 6 == 1)
  {
    v10 = 0;
    sub_1BB872AFC((_QWORD *)0xE000000000000000);
    sub_1BAA51D40(v2, v1);
LABEL_5:
    sub_1BB872AFC(v4);
    return v10;
  }
  if (!(v1 | v2) && v3 == 128)
    return 0x70756F7267;
  v7 = v2 == 1 && v1 == 0;
  if (v7 && v3 == 128)
    return 0x656D656C70707573;
  if (v2 == 2 && !v1 && v3 == 128)
    return 0x656C797473;
  if (v2 == 3 && !v1 && v3 == 128)
    return 0x697461726F636564;
  if (v2 == 4 && !v1 && v3 == 128)
    return 0x7261696C69787561;
  v9 = v2 == 5 && v1 == 0;
  if (v9 && v3 == 128)
    return 0x6E6F6974706FLL;
  else
    return 0x646E69426D657469;
}

unint64_t sub_1BB1FBC74()
{
  unint64_t result;

  result = qword_1EF2BDDB0;
  if (!qword_1EF2BDDB0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9A84, &type metadata for FormatDerivedDataContextScope.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDB0);
  }
  return result;
}

unint64_t sub_1BB1FBCB8()
{
  unint64_t result;

  result = qword_1EF2BDDC8;
  if (!qword_1EF2BDDC8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB952B74, &_s8SlotDataVN);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDC8);
  }
  return result;
}

unint64_t sub_1BB1FBCFC()
{
  unint64_t result;

  result = qword_1EF2BDDD0;
  if (!qword_1EF2BDDD0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9A5C, &type metadata for FormatDerivedDataContextScope.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDD0);
  }
  return result;
}

uint64_t sub_1BB1FBD40(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BDDB8, (uint64_t (*)(void))sub_1BAA47CFC, (uint64_t)&type metadata for FormatItemKind, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatValue);
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB1FBDA0()
{
  unint64_t result;

  result = qword_1EF2BDDE0;
  if (!qword_1EF2BDDE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB952B4C, &_s8SlotDataVN);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDE0);
  }
  return result;
}

uint64_t sub_1BB1FBDE4(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  char v8;
  char v10;
  BOOL v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v15[2];
  uint64_t v16[2];

  v3 = *(_QWORD *)a1;
  v2 = *(_QWORD *)(a1 + 8);
  v4 = *(unsigned __int8 *)(a1 + 16);
  v6 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (!(v4 >> 6))
  {
    if (v7 < 0x40)
    {
      if (v3 == v6 && v2 == v5)
      {
        sub_1BA895B64(*(_QWORD *)a1, v2, v7);
        sub_1BA895B64(v3, v2, v4);
        sub_1BA895B84(v3, v2, v4);
        sub_1BA895B84(v3, v2, v7);
        if ((v4 & 1) != (v7 & 1))
        {
LABEL_74:
          v8 = 0;
          return v8 & 1;
        }
      }
      else
      {
        v10 = sub_1BB874398();
        sub_1BA895B64(v6, v5, v7);
        sub_1BA895B64(v3, v2, v4);
        sub_1BA895B84(v3, v2, v4);
        sub_1BA895B84(v6, v5, v7);
        if ((v10 & 1) == 0 || ((v4 ^ v7) & 1) != 0)
          goto LABEL_74;
      }
      v8 = 1;
      return v8 & 1;
    }
    goto LABEL_73;
  }
  if (v4 >> 6 != 1)
  {
    if (v2 | v3 || v4 != 128)
    {
      v13 = v3 == 1 && v2 == 0;
      if (v13 && v4 == 128)
      {
        if ((v7 & 0xC0) == 0x80 && v6 == 1 && !v5 && v7 == 128)
        {
          v8 = 1;
          sub_1BA895B84(1, 0, 0x80u);
          sub_1BA895B84(1, 0, 0x80u);
          return v8 & 1;
        }
        goto LABEL_73;
      }
      if (v3 == 2 && !v2 && v4 == 128)
      {
        if ((v7 & 0xC0) != 0x80 || v6 != 2 || v5 || v7 != 128)
          goto LABEL_73;
        sub_1BA895B84(2, 0, 0x80u);
        v12 = 2;
      }
      else if (v3 == 3 && !v2 && v4 == 128)
      {
        if ((v7 & 0xC0) != 0x80 || v6 != 3 || v5 || v7 != 128)
          goto LABEL_73;
        sub_1BA895B84(3, 0, 0x80u);
        v12 = 3;
      }
      else if (v3 == 4 && !v2 && v4 == 128)
      {
        if ((v7 & 0xC0) != 0x80 || v6 != 4 || v5 || v7 != 128)
          goto LABEL_73;
        sub_1BA895B84(4, 0, 0x80u);
        v12 = 4;
      }
      else if (v3 == 5 && !v2 && v4 == 128)
      {
        if ((v7 & 0xC0) != 0x80 || v6 != 5 || v5 || v7 != 128)
          goto LABEL_73;
        sub_1BA895B84(5, 0, 0x80u);
        v12 = 5;
      }
      else
      {
        if ((v7 & 0xC0) != 0x80 || v6 != 6 || v5 || v7 != 128)
          goto LABEL_73;
        sub_1BA895B84(6, 0, 0x80u);
        v12 = 6;
      }
    }
    else
    {
      v11 = (v7 & 0xC0) == 0x80 && (v5 | v6) == 0;
      if (!v11 || v7 != 128)
        goto LABEL_73;
      sub_1BA895B84(0, 0, 0x80u);
      v12 = 0;
    }
    sub_1BA895B84(v12, 0, 0x80u);
    v8 = 1;
    return v8 & 1;
  }
  if ((v7 & 0xC0) != 0x40)
  {
LABEL_73:
    sub_1BA895B64(*(_QWORD *)a2, *(_QWORD *)(a2 + 8), v7);
    sub_1BA895B64(v3, v2, v4);
    sub_1BA895B84(v3, v2, v4);
    sub_1BA895B84(v6, v5, v7);
    goto LABEL_74;
  }
  v16[0] = *(_QWORD *)a1;
  v16[1] = v2;
  v15[0] = v6;
  v15[1] = v5;
  sub_1BA895B64(v6, v5, v7);
  sub_1BA895B64(v3, v2, v4);
  sub_1BA895B64(v6, v5, v7);
  sub_1BA895B64(v3, v2, v4);
  v8 = _s8NewsFeed14FormatItemKindO2eeoiySbAC_ACtFZ_0(v16, v15);
  sub_1BA895B84(v3, v2, v4);
  sub_1BA895B84(v6, v5, v7);
  sub_1BA895B84(v6, v5, v7);
  sub_1BA895B84(v3, v2, v4);
  return v8 & 1;
}

uint64_t storeEnumTagSinglePayload for FormatDerivedDataContextScope.CodingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_1BB1FC268 + 4 * byte_1BB8F98A7[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_1BB1FC29C + 4 * byte_1BB8F98A2[v4]))();
}

uint64_t sub_1BB1FC29C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1FC2A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB1FC2ACLL);
  return result;
}

uint64_t sub_1BB1FC2B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB1FC2C0);
  *(_BYTE *)result = a2 + 8;
  return result;
}

uint64_t sub_1BB1FC2C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB1FC2CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatDerivedDataContextScope.CodingType()
{
  return &type metadata for FormatDerivedDataContextScope.CodingType;
}

unint64_t sub_1BB1FC2EC()
{
  unint64_t result;

  result = qword_1EF2BDDE8;
  if (!qword_1EF2BDDE8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F9A34, &type metadata for FormatDerivedDataContextScope.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDE8);
  }
  return result;
}

unint64_t sub_1BB1FC330()
{
  unint64_t result;

  result = qword_1EF2BDDF0;
  if (!qword_1EF2BDDF0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8F99BC, &type metadata for FormatDerivedDataContextScope.CodingType);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDF0);
  }
  return result;
}

uint64_t sub_1BB1FC374()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 9)
    return 9;
  else
    return v0;
}

ValueMetadata *type metadata accessor for FormatPuzzleStatisticBinding()
{
  return &type metadata for FormatPuzzleStatisticBinding;
}

_QWORD *sub_1BB1FC3CC(uint64_t a1)
{
  uint64_t inited;
  uint64_t v3;
  char *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  _QWORD *v15;
  _BYTE v17[16];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD v21[2];
  uint64_t v22;
  _OWORD v23[2];
  uint64_t v24;
  _OWORD v25[2];
  uint64_t v26;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  *(_QWORD *)&v25[0] = MEMORY[0x1E0DEE9D8];
  v3 = 10;
  v4 = &byte_1E724FBA0;
  do
  {
    v5 = *v4++;
    LOBYTE(v21[0]) = v5;
    sub_1BAFA6B20((uint64_t)v21);
    sub_1BB383BA8(*(uint64_t *)&v23[0]);
    --v3;
  }
  while (v3);
  v6 = sub_1BA97461C(*(uint64_t *)&v25[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x7453656C7A7A7550, 0xEF63697473697461, 0, 0, v6, v21);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v7 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v7;
  *(_QWORD *)(v7 + 48) = v22;
  v8 = v21[1];
  *(_OWORD *)(v7 + 16) = v21[0];
  *(_OWORD *)(v7 + 32) = v8;
  MEMORY[0x1E0C80A78](v7);
  v18 = a1;
  v9 = sub_1BA89F4C0((void (*)(char *))sub_1BB1FC6E4, (uint64_t)v17, (uint64_t)&unk_1E724FBB0, (uint64_t)&v20);
  sub_1BAF89090(0x74616F6C46, 0xE500000000000000, 0, 0, v9, v23);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v10 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v10;
  *(_QWORD *)(v10 + 48) = v24;
  v11 = v23[1];
  *(_OWORD *)(v10 + 16) = v23[0];
  *(_OWORD *)(v10 + 32) = v11;
  MEMORY[0x1E0C80A78](v10);
  v18 = a1;
  v12 = sub_1BA89F4C0((void (*)(char *))sub_1BB1FC700, (uint64_t)v17, (uint64_t)&unk_1E724FBD8, (uint64_t)&v19);
  sub_1BAF89090(0x6E61656C6F6F42, 0xE700000000000000, 0, 0, v12, v25);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 136) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 144) = &off_1E72D2F60;
  v13 = swift_allocObject();
  *(_QWORD *)(inited + 112) = v13;
  *(_QWORD *)(v13 + 48) = v26;
  v14 = v25[1];
  *(_OWORD *)(v13 + 16) = v25[0];
  *(_OWORD *)(v13 + 32) = v14;
  v15 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v15;
}

uint64_t sub_1BB1FC6B0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB1FC6E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BAFB6D24(a1, *(_QWORD *)(v2 + 16), a2);
}

void sub_1BB1FC700(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  sub_1BAB1CD2C(a1, *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1BB1FC71C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1BB1FCD48(a1, a2);
  sub_1BA8DAD20(a2);
  return v3;
}

uint64_t FormatSlotDefinitionItemSetAuxiliary.init(properties:items:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t FormatSlotDefinitionItemSetAuxiliary.properties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotDefinitionItemSetAuxiliary.properties.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*FormatSlotDefinitionItemSetAuxiliary.properties.modify())(_QWORD)
{
  return nullsub_1;
}

uint64_t FormatSlotDefinitionItemSetAuxiliary.items.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t static FormatSlotDefinitionItemSetAuxiliary.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA882880(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return sub_1BA88286C(v2, v4);
  else
    return 0;
}

unint64_t sub_1BB1FC83C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1FC860();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1FC860()
{
  unint64_t result;

  result = qword_1EF2BDDF8;
  if (!qword_1EF2BDDF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotDefinitionItemSetAuxiliary, &type metadata for FormatSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1EF2BDDF8);
  }
  return result;
}

unint64_t sub_1BB1FC8A4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA7DFEAC();
  a1[2] = sub_1BA82004C();
  result = sub_1BB1FC8D8();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1FC8D8()
{
  unint64_t result;

  result = qword_1EF2BDE00;
  if (!qword_1EF2BDE00)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSlotDefinitionItemSetAuxiliary, &type metadata for FormatSlotDefinitionItemSetAuxiliary);
    atomic_store(result, (unint64_t *)&qword_1EF2BDE00);
  }
  return result;
}

uint64_t sub_1BB1FC91C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FormatSlotDefinitionItemSetAuxiliary.init(from:)(a1, a2);
}

uint64_t sub_1BB1FC930(_QWORD *a1)
{
  return FormatSlotDefinitionItemSetAuxiliary.encode(to:)(a1);
}

uint64_t sub_1BB1FC944(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = *a2;
  v4 = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA882880(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
    return sub_1BA88286C(v2, v4);
  else
    return 0;
}

uint64_t sub_1BB1FC9C8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB1FC9D4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatSlotDefinitionItemSetAuxiliary()
{
  return &type metadata for FormatSlotDefinitionItemSetAuxiliary;
}

_QWORD *sub_1BB1FCA24(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  _QWORD *v22;
  _OWORD v24[2];
  uint64_t v25;

  if (!*a2)
    return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  sub_1BA8C88C8(0);
  v6 = *(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v9 = (_QWORD *)(v8 + v7);
  *(_QWORD *)&v24[0] = sub_1BB87420C();
  *((_QWORD *)&v24[0] + 1) = v10;
  sub_1BB872AFC(v11);
  v12 = swift_bridgeObjectRetain();
  v13 = sub_1BB1390DC(v12);
  swift_bridgeObjectRelease();
  v14 = sub_1BA975B1C(v13);
  swift_bridgeObjectRelease();
  v15 = sub_1BA9747FC(v14);
  swift_bridgeObjectRelease();
  v16 = sub_1BB6DF010(v15);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x69747265706F7250, 0xEA00000000007365, (uint64_t)v16, *(uint64_t *)&v24[0], *((uint64_t *)&v24[0] + 1), v9);
  v17 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v9, 0, 1, v17);
  sub_1BA8DACF0(a1);
  v18 = swift_bridgeObjectRetain();
  v19 = sub_1BB1FC71C(v18, a1);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v24[0] = v8;
  sub_1BB3847C4(v19);
  sub_1BAF89090(0x7261696C69787541, 0xE900000000000079, 0, 0, v8, v24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v20 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v20;
  *(_QWORD *)(v20 + 48) = v25;
  v21 = v24[1];
  *(_OWORD *)(v20 + 16) = v24[0];
  *(_OWORD *)(v20 + 32) = v21;
  v22 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v22;
}

uint64_t sub_1BB1FCD14()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB1FCD48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t inited;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD v26[2];
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v32 = a2;
  sub_1BA4B07F0(0, qword_1EF2ADE58, (uint64_t (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v26 - v5;
  sub_1BA8C88C8(0);
  v31 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (_QWORD *)((char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x1E0DEE9D8];
  if (v10)
  {
    v26[1] = v2;
    v33 = MEMORY[0x1E0DEE9D8];
    sub_1BAC79E1C(0, v10, 0);
    v12 = type metadata accessor for FormatSlotDefinitionItemSet();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    v29 = v13;
    v30 = v12;
    v28 = *(_QWORD *)(v13 + 72);
    v27 = xmmword_1BB87CE70;
    do
    {
      v15 = sub_1BB2AEF08();
      v17 = v16;
      sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v27;
      sub_1BAA44244(v14, (uint64_t)v6);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v6, 0, 1, v30);
      v19 = sub_1BB2B01EC(v32, v6);
      sub_1BAA441BC((uint64_t)v6);
      *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
      *(_QWORD *)(inited + 64) = &off_1E7335C38;
      *(_QWORD *)(inited + 32) = v19;
      v20 = sub_1BA9747FC(inited);
      swift_setDeallocating();
      sub_1BA89EA20();
      swift_arrayDestroy();
      v21 = sub_1BB6DF010(v20);
      swift_bridgeObjectRelease();
      sub_1BAAF3C48(0x7465536D657449, 0xE700000000000000, (uint64_t)v21, v15, v17, v9);
      v22 = type metadata accessor for FormatInspectionItem(0);
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v9, 0, 1, v22);
      v11 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC79E1C(0, *(_QWORD *)(v11 + 16) + 1, 1);
        v11 = v33;
      }
      v24 = *(_QWORD *)(v11 + 16);
      v23 = *(_QWORD *)(v11 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1BAC79E1C(v23 > 1, v24 + 1, 1);
        v11 = v33;
      }
      *(_QWORD *)(v11 + 16) = v24 + 1;
      sub_1BA89EB4C((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v24);
      v14 += v28;
      --v10;
    }
    while (v10);
  }
  return v11;
}

uint64_t FormatServiceResolverServices.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatServiceResolverServices.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FormatServiceResolverServices()
{
  return objc_opt_self();
}

uint64_t method lookup function for FormatServiceResolverServices()
{
  return swift_lookUpClassMethod();
}

__n128 FormatFocusParameters.edgeInsets.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  __n128 result;
  __int128 v4;

  v2 = *(_BYTE *)(v1 + 32);
  result = *(__n128 *)v1;
  v4 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 32) = v2;
  return result;
}

void FormatFocusParameters.position.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 33);
}

uint64_t sub_1BB1FD0F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatFocusParameters.init(from:)(a1, a2);
}

uint64_t sub_1BB1FD10C(_QWORD *a1)
{
  return FormatFocusParameters.encode(to:)(a1);
}

uint64_t _s8NewsFeed21FormatFocusParametersV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 33);
  v3 = *(unsigned __int8 *)(a2 + 33);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 32))
      return 0;
LABEL_6:
    if (v2 == 3)
    {
      if (v3 != 3)
        return 0;
    }
    else if (v3 == 3 || v2 != v3)
    {
      return 0;
    }
    return 1;
  }
  result = 0;
  if ((*(_BYTE *)(a2 + 32) & 1) == 0
    && (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) == 0)
  {
    goto LABEL_6;
  }
  return result;
}

unint64_t sub_1BB1FD1C8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB1FD1EC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB1FD1EC()
{
  unint64_t result;

  result = qword_1EF2BDE08;
  if (!qword_1EF2BDE08)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusParameters, &type metadata for FormatFocusParameters);
    atomic_store(result, (unint64_t *)&qword_1EF2BDE08);
  }
  return result;
}

unint64_t sub_1BB1FD230(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE9F414();
  a1[2] = sub_1BAEF073C();
  result = sub_1BB1FD264();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB1FD264()
{
  unint64_t result;

  result = qword_1EF2BDE10;
  if (!qword_1EF2BDE10)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFocusParameters, &type metadata for FormatFocusParameters);
    atomic_store(result, (unint64_t *)&qword_1EF2BDE10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatFocusParameters(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && *(_BYTE *)(a1 + 34))
    return (*(_DWORD *)a1 + 253);
  if (*(unsigned __int8 *)(a1 + 33) <= 3u)
    v3 = 3;
  else
    v3 = *(unsigned __int8 *)(a1 + 33);
  v4 = v3 - 4;
  if (*(unsigned __int8 *)(a1 + 33) < 3u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatFocusParameters(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 34) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 34) = 0;
    if (a2)
      *(_BYTE *)(result + 33) = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatFocusParameters()
{
  return &type metadata for FormatFocusParameters;
}

_QWORD *sub_1BB1FD354(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t (*v6)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  _QWORD *v24;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  v5 = *((unsigned __int16 *)a1 + 16);
  v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v6);
  sub_1BA8C88C8(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  v13 = 0;
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  v14 = (_QWORD *)(v12 + v11);
  v15 = 0;
  if ((v5 & 0xFF00) != 0x400 && (v5 & 1) == 0)
  {
    *(_QWORD *)&v26 = v1;
    *((_QWORD *)&v26 + 1) = v2;
    *(_QWORD *)&v27 = v3;
    *((_QWORD *)&v27 + 1) = v4;
    v13 = FormatEdgeInsets.description.getter();
    v15 = v16;
  }
  sub_1BAAF7494(0x736E492065676445, 0xEB00000000737465, v13, v15, v14);
  v17 = type metadata accessor for FormatInspectionItem(0);
  v18 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v14, 0, 1, v17);
  v19 = 0;
  if ((v5 & 0xFF00) == 0x400)
  {
    v20 = 0;
  }
  else
  {
    v20 = 0;
    if (v5 >> 8 != 3)
    {
      v21 = 8 * SBYTE1(v5);
      v19 = *(_QWORD *)&aAutomatioutsid[v21];
      v20 = *(_QWORD *)&aC_2[v21];
    }
  }
  sub_1BAAF7494(0x6E6F697469736F50, 0xE800000000000000, v19, v20, (_QWORD *)((char *)v14 + v10));
  v18((_QWORD *)((char *)v14 + v10), 0, 1, v17);
  sub_1BAF89090(0xD000000000000010, 0x80000001BB97F920, 0, 0, v12, &v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v22 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v22;
  *(_QWORD *)(v22 + 48) = v28;
  v23 = v27;
  *(_OWORD *)(v22 + 16) = v26;
  *(_OWORD *)(v22 + 32) = v23;
  v24 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v24;
}

uint64_t sub_1BB1FD60C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

char *initializeBufferWithCopyOfBuffer for FormatButtonNodeData(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  unsigned int v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned __int8 v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  char *v61;
  _QWORD *v62;
  uint64_t v63;
  unsigned int (*v64)(_QWORD *, uint64_t, uint64_t);
  id v65;
  uint64_t v66;
  id *v67;
  unsigned int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  unsigned int (*v92)(char *, uint64_t, uint64_t);
  uint64_t v93;
  id v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int (*v105)(char *, uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  void (*v114)(char *, _QWORD, uint64_t, uint64_t);
  id v115;
  uint64_t v117;
  char *v118;
  char v119;
  uint64_t v120;
  char *__dst;
  char __dstb;
  void *__dstc;
  void *__dsta;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *a2;
        v8 = (id *)(a2 + 1);
        v9 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v9 <= 0xFD)
        {
          v40 = *v8;
          sub_1BA727178(*v8, v9);
          *((_QWORD *)a1 + 1) = v40;
          a1[16] = v9;
        }
        else
        {
          *((_QWORD *)a1 + 1) = *v8;
          a1[16] = *((_BYTE *)a2 + 16);
        }
        goto LABEL_30;
      case 1u:
        v11 = *a2;
        v12 = (uint64_t)a2[1];
        v13 = (uint64_t)a2[2];
        v14 = (uint64_t)a2[3];
        v15 = v6;
        v16 = (uint64_t)a2[4];
        v132 = v7;
        v17 = *((_BYTE *)a2 + 41);
        v18 = *((_BYTE *)a2 + 40);
        sub_1BA7271AC(*a2, v12, v13, v14, v16, v18, v17);
        *(_QWORD *)a1 = v11;
        *((_QWORD *)a1 + 1) = v12;
        *((_QWORD *)a1 + 2) = v13;
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v16;
        v6 = v15;
        a1[40] = v18;
        a1[41] = v17;
        v7 = v132;
        v19 = a2[7];
        *((_QWORD *)a1 + 6) = a2[6];
        LOBYTE(v11) = *((_BYTE *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v19, v11);
        *((_QWORD *)a1 + 7) = v19;
        a1[64] = (char)v11;
        goto LABEL_30;
      case 2u:
        *(_QWORD *)a1 = *a2;
        swift_retain();
        goto LABEL_30;
      case 4u:
        v20 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v20;
        v21 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v21;
        v22 = a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = v22;
        v23 = (uint64_t)a2[6];
        v24 = (uint64_t)a2[7];
        v125 = v6;
        v133 = v7;
        v25 = (uint64_t)a2[8];
        v26 = (uint64_t)a2[9];
        v27 = *((_BYTE *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v23, v24, v25, v26, v27);
        *((_QWORD *)a1 + 6) = v23;
        *((_QWORD *)a1 + 7) = v24;
        *((_QWORD *)a1 + 8) = v25;
        *((_QWORD *)a1 + 9) = v26;
        v6 = v125;
        v7 = v133;
        a1[80] = v27;
        v28 = a2[12];
        *((_QWORD *)a1 + 11) = a2[11];
        *((_QWORD *)a1 + 12) = v28;
        v29 = a2[14];
        *((_QWORD *)a1 + 13) = a2[13];
        *((_QWORD *)a1 + 14) = v29;
        *((_QWORD *)a1 + 15) = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 5u:
        v30 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v41 = type metadata accessor for FormatPurchaseLandingPageData();
          v42 = *(_QWORD *)(v41 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v42 + 48))(a2, 1, v41))
          {
            sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            v127 = v6;
            v134 = v7;
            v46 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v46;
            v47 = *(int *)(v41 + 20);
            __dst = &a1[v47];
            v48 = (char *)a2 + v47;
            v49 = type metadata accessor for FormatPostPurchaseData();
            v50 = *(_QWORD *)(v49 - 8);
            v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
            swift_bridgeObjectRetain();
            if (v51(v48, 1, v49))
            {
              sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
              v7 = v134;
            }
            else
            {
              v53 = sub_1BB86C67C();
              v54 = *(_QWORD *)(v53 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v48, 2, v53))
              {
                v55 = __dst;
                memcpy(__dst, v48, *(_QWORD *)(v50 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v48, v53);
                v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56);
                v55 = __dst;
                v56(__dst, 0, 2, v53);
              }
              v7 = v134;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v49);
            }
            v6 = v127;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v41);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
            goto LABEL_30;
          }
          v126 = v6;
          v32 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v32;
          v33 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v34 = &a1[v33];
          v35 = (char *)a2 + v33;
          v36 = type metadata accessor for FormatPostPurchaseData();
          v37 = *(_QWORD *)(v36 - 8);
          v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
          swift_bridgeObjectRetain();
          if (v38(v35, 1, v36))
          {
            sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
            v6 = v126;
          }
          else
          {
            v44 = sub_1BB86C67C();
            v45 = *(_QWORD *)(v44 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v35, 2, v44))
            {
              memcpy(v34, v35, *(_QWORD *)(v37 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v34, v35, v44);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v34, 0, 2, v44);
            }
            v6 = v126;
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_30:
        swift_storeEnumTagMultiPayload();
LABEL_31:
        v57 = type metadata accessor for FormatButtonNodeDataAction();
        v58 = *(int *)(v57 + 20);
        v59 = *(char **)((char *)a2 + v58);
        *(_QWORD *)&a1[v58] = v59;
        v60 = *(int *)(v6 + 20);
        v61 = &a1[v60];
        v62 = (char **)((char *)a2 + v60);
        v63 = *(_QWORD *)(v57 - 8);
        v64 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v63 + 48);
        v65 = v59;
        if (v64(v62, 1, v57))
        {
          sub_1BA7B41BC(0);
          memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              *(_QWORD *)v61 = *v62;
              v67 = (id *)(v62 + 1);
              v68 = *((unsigned __int8 *)v62 + 16);
              swift_bridgeObjectRetain();
              if (v68 <= 0xFD)
              {
                v94 = *v67;
                sub_1BA727178(*v67, v68);
                *((_QWORD *)v61 + 1) = v94;
                v61[16] = v68;
              }
              else
              {
                *((_QWORD *)v61 + 1) = *v67;
                v61[16] = *((_BYTE *)v62 + 16);
              }
              goto LABEL_61;
            case 1u:
              v69 = *v62;
              v70 = v62[1];
              v71 = v62[2];
              v72 = v62[3];
              v128 = v63;
              v73 = v62[4];
              __dstb = *((_BYTE *)v62 + 41);
              v74 = *((_BYTE *)v62 + 40);
              sub_1BA7271AC((id)*v62, v70, v71, v72, v73, v74, __dstb);
              *(_QWORD *)v61 = v69;
              *((_QWORD *)v61 + 1) = v70;
              *((_QWORD *)v61 + 2) = v71;
              *((_QWORD *)v61 + 3) = v72;
              *((_QWORD *)v61 + 4) = v73;
              v63 = v128;
              v61[40] = v74;
              v61[41] = __dstb;
              v75 = (void *)v62[7];
              *((_QWORD *)v61 + 6) = v62[6];
              LOBYTE(v70) = *((_BYTE *)v62 + 64);
              swift_bridgeObjectRetain();
              sub_1BA727178(v75, v70);
              *((_QWORD *)v61 + 7) = v75;
              v61[64] = v70;
              goto LABEL_61;
            case 2u:
              *(_QWORD *)v61 = *v62;
              swift_retain();
              goto LABEL_61;
            case 4u:
              v76 = v62[1];
              *(_QWORD *)v61 = *v62;
              *((_QWORD *)v61 + 1) = v76;
              v77 = v62[3];
              *((_QWORD *)v61 + 2) = v62[2];
              *((_QWORD *)v61 + 3) = v77;
              v78 = v62[5];
              *((_QWORD *)v61 + 4) = v62[4];
              *((_QWORD *)v61 + 5) = v78;
              v129 = v63;
              v79 = v62[6];
              v80 = v62[7];
              v81 = v62[8];
              __dstc = (void *)v62[9];
              v119 = *((_BYTE *)v62 + 80);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1BA7261E0(v79, v80, v81, (uint64_t)__dstc, v119);
              *((_QWORD *)v61 + 6) = v79;
              *((_QWORD *)v61 + 7) = v80;
              v63 = v129;
              *((_QWORD *)v61 + 8) = v81;
              *((_QWORD *)v61 + 9) = __dstc;
              v61[80] = v119;
              v82 = v62[12];
              *((_QWORD *)v61 + 11) = v62[11];
              *((_QWORD *)v61 + 12) = v82;
              v83 = v62[14];
              *((_QWORD *)v61 + 13) = v62[13];
              *((_QWORD *)v61 + 14) = v83;
              *((_QWORD *)v61 + 15) = v62[15];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              goto LABEL_61;
            case 5u:
              v84 = type metadata accessor for FormatPurchaseData(0);
              v85 = swift_getEnumCaseMultiPayload();
              if (v85 == 1)
              {
                v95 = type metadata accessor for FormatPurchaseLandingPageData();
                v96 = *(_QWORD *)(v95 - 8);
                if ((*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v96 + 48))(v62, 1, v95))
                {
                  sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                  memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
                }
                else
                {
                  v120 = v96;
                  v131 = v63;
                  v100 = v62[1];
                  *(_QWORD *)v61 = *v62;
                  *((_QWORD *)v61 + 1) = v100;
                  v101 = *(int *)(v95 + 20);
                  v118 = &v61[v101];
                  v102 = (char *)v62 + v101;
                  v103 = type metadata accessor for FormatPostPurchaseData();
                  v104 = *(_QWORD *)(v103 - 8);
                  v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v104 + 48);
                  v106 = v103;
                  swift_bridgeObjectRetain();
                  __dsta = v102;
                  if (v105(v102, 1, v106))
                  {
                    sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                    memcpy(v118, v102, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
                    v63 = v131;
                  }
                  else
                  {
                    v117 = v106;
                    v108 = sub_1BB86C67C();
                    v109 = *(_QWORD *)(v108 - 8);
                    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v109 + 48))(__dsta, 2, v108))
                    {
                      v110 = v118;
                      memcpy(v118, __dsta, *(_QWORD *)(v104 + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, void *, uint64_t))(v109 + 16))(v118, __dsta, v108);
                      v111 = v108;
                      v110 = v118;
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v118, 0, 2, v111);
                    }
                    v63 = v131;
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v104 + 56))(v110, 0, 1, v117);
                  }
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v120 + 56))(v61, 0, 1, v95);
                }
              }
              else
              {
                if (v85)
                {
                  memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
                  goto LABEL_61;
                }
                v130 = v63;
                v86 = v62[1];
                *(_QWORD *)v61 = *v62;
                *((_QWORD *)v61 + 1) = v86;
                v87 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
                v88 = &v61[v87];
                v89 = (char *)v62 + v87;
                v90 = type metadata accessor for FormatPostPurchaseData();
                v91 = *(_QWORD *)(v90 - 8);
                v92 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48);
                swift_bridgeObjectRetain();
                if (v92(v89, 1, v90))
                {
                  sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                  memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
                }
                else
                {
                  v98 = sub_1BB86C67C();
                  v99 = *(_QWORD *)(v98 - 8);
                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v89, 2, v98))
                  {
                    memcpy(v88, v89, *(_QWORD *)(v91 + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v88, v89, v98);
                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v99 + 56))(v88, 0, 2, v98);
                  }
                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v91 + 56))(v88, 0, 1, v90);
                }
                v63 = v130;
              }
              swift_storeEnumTagMultiPayload();
LABEL_61:
              swift_storeEnumTagMultiPayload();
LABEL_62:
              v112 = *(int *)(v57 + 20);
              v113 = *(void **)((char *)v62 + v112);
              *(_QWORD *)&v61[v112] = v113;
              v114 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v63 + 56);
              v115 = v113;
              v114(v61, 0, 1, v57);
              break;
            default:
              memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
              goto LABEL_62;
          }
        }
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_31;
    }
  }
  return a1;
}

uint64_t *assignWithCopy for FormatButtonNodeData(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  id *v7;
  unsigned int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  char v16;
  unsigned __int8 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  void *v51;
  void *v52;
  id v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  int v60;
  uint64_t v61;
  id *v62;
  unsigned int v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void **v67;
  unsigned int v68;
  void *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 v74;
  void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  _QWORD *v83;
  unsigned int (*v84)(char *, uint64_t, uint64_t);
  uint64_t v85;
  id v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  void *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  uint64_t v106;
  unsigned int (**v107)(_QWORD, uint64_t, uint64_t);
  uint64_t v108;
  void *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  uint64_t v113;
  unsigned int (**v114)(_QWORD, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int (*v120)(char *, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  void (**v123)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int (*v130)(char *, uint64_t, void *);
  void *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  void *v139;
  void (*v140)(uint64_t, _QWORD, uint64_t, uint64_t);
  id v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  void *v145;
  id v146;
  uint64_t v148;
  void *v149;
  void *v150;
  char v151;
  _QWORD *v152;
  void (**v153)(uint64_t, _QWORD, uint64_t, uint64_t);
  void *v154;
  char *__dst;
  void *__dstd;
  void *__dste;
  void *__dsta;
  char __dstf;
  void *__dstb;
  void (**__dstc)(uint64_t, _QWORD, uint64_t, uint64_t);
  int *__srcb;
  int *__src;
  char __srcc;
  void *__srcd;
  char __srce;
  void *__srcf;
  void *__srca;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    v6 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v7 = (id *)(a2 + 1);
        v8 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v8 <= 0xFD)
        {
          v33 = *v7;
          sub_1BA727178(*v7, v8);
          a1[1] = (uint64_t)v33;
          *((_BYTE *)a1 + 16) = v8;
        }
        else
        {
          v9 = *v7;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          a1[1] = (uint64_t)v9;
        }
        goto LABEL_29;
      case 1u:
        v10 = *a2;
        v11 = a2[1];
        v12 = a2[2];
        v13 = a2[3];
        v14 = a2[4];
        v15 = a3;
        v16 = *((_BYTE *)a2 + 41);
        v17 = *((_BYTE *)a2 + 40);
        sub_1BA7271AC((id)*a2, v11, v12, v13, v14, v17, v16);
        *a1 = v10;
        a1[1] = v11;
        a1[2] = v12;
        a1[3] = v13;
        a1[4] = v14;
        *((_BYTE *)a1 + 40) = v17;
        *((_BYTE *)a1 + 41) = v16;
        a3 = v15;
        a1[6] = a2[6];
        v18 = (void *)a2[7];
        LOBYTE(v10) = *((_BYTE *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v18, v10);
        a1[7] = (uint64_t)v18;
        *((_BYTE *)a1 + 64) = v10;
        goto LABEL_29;
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_29;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        v19 = a2[6];
        v20 = a2[7];
        __srcb = a3;
        v21 = a2[8];
        v22 = a2[9];
        v23 = *((_BYTE *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v19, v20, v21, v22, v23);
        a1[6] = v19;
        a1[7] = v20;
        a1[8] = v21;
        a1[9] = v22;
        a3 = __srcb;
        *((_BYTE *)a1 + 80) = v23;
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_29;
      case 5u:
        v24 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v34 = type metadata accessor for FormatPurchaseLandingPageData();
          v35 = *(_QWORD *)(v34 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
          {
            sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            __src = a3;
            *a1 = *a2;
            a1[1] = a2[1];
            v39 = *(int *)(v34 + 20);
            __dst = (char *)a1 + v39;
            v40 = (char *)a2 + v39;
            v41 = type metadata accessor for FormatPostPurchaseData();
            v42 = *(_QWORD *)(v41 - 8);
            v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
            swift_bridgeObjectRetain();
            if (v43(v40, 1, v41))
            {
              sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
              a3 = __src;
            }
            else
            {
              v45 = sub_1BB86C67C();
              v46 = *(_QWORD *)(v45 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v40, 2, v45))
              {
                v47 = __dst;
                memcpy(__dst, v40, *(_QWORD *)(v42 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v46 + 16))(__dst, v40, v45);
                v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
                v47 = __dst;
                v48(__dst, 0, 2, v45);
              }
              a3 = __src;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v47, 0, 1, v41);
            }
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
            goto LABEL_29;
          }
          *a1 = *a2;
          a1[1] = a2[1];
          v26 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = type metadata accessor for FormatPostPurchaseData();
          v30 = *(_QWORD *)(v29 - 8);
          v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
          swift_bridgeObjectRetain();
          if (v31(v28, 1, v29))
          {
            sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v37 = sub_1BB86C67C();
            v38 = *(_QWORD *)(v37 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v28, 2, v37))
            {
              memcpy(v27, v28, *(_QWORD *)(v30 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v27, v28, v37);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v27, 0, 2, v37);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_29:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v49 = type metadata accessor for FormatButtonNodeDataAction();
  v50 = *(int *)(v49 + 20);
  v51 = *(void **)((char *)a1 + v50);
  v52 = *(void **)((char *)a2 + v50);
  *(uint64_t *)((char *)a1 + v50) = (uint64_t)v52;
  v53 = v52;

  v54 = a3[5];
  v55 = (uint64_t)a1 + v54;
  v56 = (uint64_t *)((char *)a2 + v54);
  v57 = *(_QWORD *)(v49 - 8);
  v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 48);
  v59 = v58((char *)a1 + v54, 1, v49);
  v60 = v58((char *)v56, 1, v49);
  if (v59)
  {
    if (!v60)
    {
      v61 = type metadata accessor for FormatAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          *(_QWORD *)v55 = *v56;
          v62 = (id *)(v56 + 1);
          v63 = *((unsigned __int8 *)v56 + 16);
          swift_bridgeObjectRetain();
          if (v63 <= 0xFD)
          {
            v86 = *v62;
            sub_1BA727178(*v62, v63);
            *(_QWORD *)(v55 + 8) = v86;
            *(_BYTE *)(v55 + 16) = v63;
          }
          else
          {
            v64 = *v62;
            *(_BYTE *)(v55 + 16) = *((_BYTE *)v56 + 16);
            *(_QWORD *)(v55 + 8) = v64;
          }
          goto LABEL_86;
        case 1u:
          v70 = *v56;
          __dstd = (void *)v56[1];
          v71 = v56[2];
          v72 = v56[3];
          v73 = v56[4];
          __srcc = *((_BYTE *)v56 + 41);
          v74 = *((_BYTE *)v56 + 40);
          sub_1BA7271AC((id)*v56, (uint64_t)__dstd, v71, v72, v73, v74, __srcc);
          *(_QWORD *)v55 = v70;
          *(_QWORD *)(v55 + 8) = __dstd;
          *(_QWORD *)(v55 + 16) = v71;
          *(_QWORD *)(v55 + 24) = v72;
          *(_QWORD *)(v55 + 32) = v73;
          *(_BYTE *)(v55 + 40) = v74;
          *(_BYTE *)(v55 + 41) = __srcc;
          *(_QWORD *)(v55 + 48) = v56[6];
          v75 = (void *)v56[7];
          LOBYTE(v70) = *((_BYTE *)v56 + 64);
          swift_bridgeObjectRetain();
          sub_1BA727178(v75, v70);
          *(_QWORD *)(v55 + 56) = v75;
          *(_BYTE *)(v55 + 64) = v70;
          goto LABEL_86;
        case 2u:
          *(_QWORD *)v55 = *v56;
          swift_retain();
          goto LABEL_86;
        case 4u:
          *(_QWORD *)v55 = *v56;
          *(_QWORD *)(v55 + 8) = v56[1];
          *(_QWORD *)(v55 + 16) = v56[2];
          *(_QWORD *)(v55 + 24) = v56[3];
          *(_QWORD *)(v55 + 32) = v56[4];
          *(_QWORD *)(v55 + 40) = v56[5];
          v76 = v56[7];
          __srcd = (void *)v56[6];
          v77 = v56[8];
          __dste = (void *)v56[9];
          v151 = *((_BYTE *)v56 + 80);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1BA7261E0((uint64_t)__srcd, v76, v77, (uint64_t)__dste, v151);
          *(_QWORD *)(v55 + 48) = __srcd;
          *(_QWORD *)(v55 + 56) = v76;
          *(_QWORD *)(v55 + 64) = v77;
          *(_QWORD *)(v55 + 72) = __dste;
          *(_BYTE *)(v55 + 80) = v151;
          *(_QWORD *)(v55 + 88) = v56[11];
          *(_QWORD *)(v55 + 96) = v56[12];
          *(_QWORD *)(v55 + 104) = v56[13];
          *(_QWORD *)(v55 + 112) = v56[14];
          *(_QWORD *)(v55 + 120) = v56[15];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_86;
        case 5u:
          v78 = type metadata accessor for FormatPurchaseData(0);
          v79 = swift_getEnumCaseMultiPayload();
          if (v79 == 1)
          {
            v106 = type metadata accessor for FormatPurchaseLandingPageData();
            v107 = *(unsigned int (***)(_QWORD, uint64_t, uint64_t))(v106 - 8);
            if (((unsigned int (**)(uint64_t *, uint64_t, uint64_t))v107)[6](v56, 1, v106))
            {
              sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
            }
            else
            {
              *(_QWORD *)v55 = *v56;
              *(_QWORD *)(v55 + 8) = v56[1];
              v116 = *(int *)(v106 + 20);
              v149 = (void *)(v55 + v116);
              v153 = (void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v107;
              v117 = (char *)v56 + v116;
              v118 = type metadata accessor for FormatPostPurchaseData();
              v119 = *(_QWORD *)(v118 - 8);
              v120 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v119 + 48);
              v121 = v118;
              swift_bridgeObjectRetain();
              __dstb = v117;
              if (v120(v117, 1, v121))
              {
                sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
                memcpy(v149, v117, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
                v123 = v153;
              }
              else
              {
                v148 = v121;
                v133 = sub_1BB86C67C();
                v134 = *(_QWORD *)(v133 - 8);
                if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v134 + 48))(__dstb, 2, v133))
                {
                  memcpy(v149, __dstb, *(_QWORD *)(v119 + 64));
                }
                else
                {
                  (*(void (**)(void *, void *, uint64_t))(v134 + 16))(v149, __dstb, v133);
                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v134 + 56))(v149, 0, 2, v133);
                }
                v123 = v153;
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v119 + 56))(v149, 0, 1, v148);
              }
              v123[7](v55, 0, 1, v106);
            }
          }
          else
          {
            if (v79)
            {
              memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
              goto LABEL_86;
            }
            *(_QWORD *)v55 = *v56;
            *(_QWORD *)(v55 + 8) = v56[1];
            v80 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
            __dsta = (void *)(v55 + v80);
            v81 = (char *)v56 + v80;
            v82 = type metadata accessor for FormatPostPurchaseData();
            v83 = *(_QWORD **)(v82 - 8);
            v84 = (unsigned int (*)(char *, uint64_t, uint64_t))v83[6];
            swift_bridgeObjectRetain();
            if (v84(v81, 1, v82))
            {
              sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(__dsta, v81, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
            }
            else
            {
              v152 = v83;
              v110 = sub_1BB86C67C();
              v111 = *(_QWORD *)(v110 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v111 + 48))(v81, 2, v110))
              {
                v112 = v152;
                memcpy(__dsta, v81, v152[8]);
              }
              else
              {
                (*(void (**)(void *, char *, uint64_t))(v111 + 16))(__dsta, v81, v110);
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v111 + 56))(__dsta, 0, 2, v110);
                v112 = v152;
              }
              ((void (*)(void *, _QWORD, uint64_t, uint64_t))v112[7])(__dsta, 0, 1, v82);
            }
          }
          swift_storeEnumTagMultiPayload();
LABEL_86:
          swift_storeEnumTagMultiPayload();
LABEL_87:
          v138 = *(int *)(v49 + 20);
          v139 = *(void **)((char *)v56 + v138);
          *(_QWORD *)(v55 + v138) = v139;
          v140 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56);
          v141 = v139;
          v140(v55, 0, 1, v49);
          break;
        default:
          memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
          goto LABEL_87;
      }
      return a1;
    }
LABEL_37:
    sub_1BA7B41BC(0);
    memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    return a1;
  }
  if (v60)
  {
    sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    goto LABEL_37;
  }
  if (a1 != a2)
  {
    sub_1BA4A2E80(v55, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    v66 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)v55 = *v56;
        v67 = (void **)(v56 + 1);
        v68 = *((unsigned __int8 *)v56 + 16);
        swift_bridgeObjectRetain();
        if (v68 <= 0xFD)
        {
          v109 = *v67;
          sub_1BA727178(v109, v68);
          *(_QWORD *)(v55 + 8) = v109;
          *(_BYTE *)(v55 + 16) = v68;
        }
        else
        {
          v69 = *v67;
          *(_BYTE *)(v55 + 16) = *((_BYTE *)v56 + 16);
          *(_QWORD *)(v55 + 8) = v69;
        }
        goto LABEL_92;
      case 1u:
        v87 = *v56;
        v88 = v56[1];
        v89 = v56[2];
        v90 = v56[3];
        v91 = v56[4];
        __srce = *((_BYTE *)v56 + 41);
        v92 = *((_BYTE *)v56 + 40);
        sub_1BA7271AC((id)*v56, v88, v89, v90, v91, v92, __srce);
        *(_QWORD *)v55 = v87;
        *(_QWORD *)(v55 + 8) = v88;
        *(_QWORD *)(v55 + 16) = v89;
        *(_QWORD *)(v55 + 24) = v90;
        *(_QWORD *)(v55 + 32) = v91;
        *(_BYTE *)(v55 + 40) = v92;
        *(_BYTE *)(v55 + 41) = __srce;
        *(_QWORD *)(v55 + 48) = v56[6];
        v93 = (void *)v56[7];
        LOBYTE(v87) = *((_BYTE *)v56 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v93, v87);
        *(_QWORD *)(v55 + 56) = v93;
        *(_BYTE *)(v55 + 64) = v87;
        goto LABEL_92;
      case 2u:
        *(_QWORD *)v55 = *v56;
        swift_retain();
        goto LABEL_92;
      case 4u:
        *(_QWORD *)v55 = *v56;
        *(_QWORD *)(v55 + 8) = v56[1];
        *(_QWORD *)(v55 + 16) = v56[2];
        *(_QWORD *)(v55 + 24) = v56[3];
        *(_QWORD *)(v55 + 32) = v56[4];
        *(_QWORD *)(v55 + 40) = v56[5];
        v94 = v56[6];
        v95 = v56[7];
        v96 = v56[8];
        __srcf = (void *)v56[9];
        __dstf = *((_BYTE *)v56 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v94, v95, v96, (uint64_t)__srcf, __dstf);
        *(_QWORD *)(v55 + 48) = v94;
        *(_QWORD *)(v55 + 56) = v95;
        *(_QWORD *)(v55 + 64) = v96;
        *(_QWORD *)(v55 + 72) = __srcf;
        *(_BYTE *)(v55 + 80) = __dstf;
        *(_QWORD *)(v55 + 88) = v56[11];
        *(_QWORD *)(v55 + 96) = v56[12];
        *(_QWORD *)(v55 + 104) = v56[13];
        *(_QWORD *)(v55 + 112) = v56[14];
        *(_QWORD *)(v55 + 120) = v56[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_92;
      case 5u:
        v97 = type metadata accessor for FormatPurchaseData(0);
        v98 = swift_getEnumCaseMultiPayload();
        if (v98 == 1)
        {
          v113 = type metadata accessor for FormatPurchaseLandingPageData();
          v114 = *(unsigned int (***)(_QWORD, uint64_t, uint64_t))(v113 - 8);
          if (((unsigned int (**)(uint64_t *, uint64_t, uint64_t))v114)[6](v56, 1, v113))
          {
            sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
          }
          else
          {
            __dstc = (void (**)(uint64_t, _QWORD, uint64_t, uint64_t))v114;
            *(_QWORD *)v55 = *v56;
            *(_QWORD *)(v55 + 8) = v56[1];
            v126 = *(int *)(v113 + 20);
            v154 = (void *)(v55 + v126);
            v127 = (char *)v56 + v126;
            v128 = type metadata accessor for FormatPostPurchaseData();
            v129 = *(_QWORD *)(v128 - 8);
            v130 = *(unsigned int (**)(char *, uint64_t, void *))(v129 + 48);
            v131 = (void *)v128;
            swift_bridgeObjectRetain();
            __srca = v127;
            if (v130(v127, 1, v131))
            {
              sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(v154, v127, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
            }
            else
            {
              v150 = v131;
              v135 = sub_1BB86C67C();
              v136 = *(_QWORD *)(v135 - 8);
              if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v136 + 48))(__srca, 2, v135))
              {
                v137 = v154;
                memcpy(v154, __srca, *(_QWORD *)(v129 + 64));
              }
              else
              {
                (*(void (**)(void *, void *, uint64_t))(v136 + 16))(v154, __srca, v135);
                v142 = v135;
                v137 = v154;
                (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v154, 0, 2, v142);
              }
              (*(void (**)(void *, _QWORD, uint64_t, void *))(v129 + 56))(v137, 0, 1, v150);
            }
            __dstc[7](v55, 0, 1, v113);
          }
        }
        else
        {
          if (v98)
          {
            memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v97 - 8) + 64));
            goto LABEL_92;
          }
          *(_QWORD *)v55 = *v56;
          *(_QWORD *)(v55 + 8) = v56[1];
          v99 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v100 = (void *)(v55 + v99);
          v101 = (char *)v56 + v99;
          v102 = type metadata accessor for FormatPostPurchaseData();
          v103 = *(_QWORD *)(v102 - 8);
          v104 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v103 + 48);
          swift_bridgeObjectRetain();
          if (v104(v101, 1, v102))
          {
            sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
          }
          else
          {
            v124 = sub_1BB86C67C();
            v125 = *(_QWORD *)(v124 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v101, 2, v124))
            {
              memcpy(v100, v101, *(_QWORD *)(v103 + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v125 + 16))(v100, v101, v124);
              (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v125 + 56))(v100, 0, 2, v124);
            }
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v103 + 56))(v100, 0, 1, v102);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_92:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy((void *)v55, v56, *(_QWORD *)(*(_QWORD *)(v66 - 8) + 64));
        break;
    }
  }
  v143 = *(int *)(v49 + 20);
  v144 = *(void **)(v55 + v143);
  v145 = *(void **)((char *)v56 + v143);
  *(_QWORD *)(v55 + v143) = v145;
  v146 = v145;

  return a1;
}

_OWORD *initializeWithTake for FormatButtonNodeData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (**v24)(const void *, uint64_t, uint64_t);
  uint64_t v25;
  void (*v26)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  unsigned int (**v28)(const void *, uint64_t, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (**v62)(const void *, uint64_t, uint64_t);
  void (**v63)(void *, const void *, uint64_t);
  char *v64;
  void *__dst;
  char *__dsta;
  char *__dstb;

  v6 = type metadata accessor for FormatAction();
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    goto LABEL_23;
  }
  v7 = type metadata accessor for FormatPurchaseData(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    v15 = type metadata accessor for FormatPurchaseLandingPageData();
    v16 = *(_QWORD *)(v15 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
    {
      sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      v21 = *(int *)(v15 + 20);
      __dsta = (char *)a1 + v21;
      v22 = (char *)a2 + v21;
      v23 = type metadata accessor for FormatPostPurchaseData();
      v24 = *(unsigned int (***)(const void *, uint64_t, uint64_t))(v23 - 8);
      if (v24[6](v22, 1, v23))
      {
        sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(__dsta, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v62 = v24;
        v27 = sub_1BB86C67C();
        v59 = *(_QWORD *)(v27 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v22, 2, v27))
        {
          v28 = v62;
          v29 = v22;
          v30 = __dsta;
          memcpy(__dsta, v29, (size_t)v62[8]);
        }
        else
        {
          v30 = __dsta;
          (*(void (**)(void))(v59 + 32))();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v59 + 56))(__dsta, 0, 2, v27);
          v28 = v62;
        }
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))v28[7])(v30, 0, 1, v23);
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
    }
    goto LABEL_21;
  }
  if (!EnumCaseMultiPayload)
  {
    *a1 = *a2;
    v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = type metadata accessor for FormatPostPurchaseData();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      __dst = v10;
      v18 = sub_1BB86C67C();
      v19 = *(_QWORD *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
      {
        v20 = __dst;
        memcpy(__dst, v11, *(_QWORD *)(v13 + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v19 + 32))(__dst, v11, v18);
        v26 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56);
        v20 = __dst;
        v26(__dst, 0, 2, v18);
      }
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
    }
LABEL_21:
    swift_storeEnumTagMultiPayload();
    goto LABEL_22;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_22:
  swift_storeEnumTagMultiPayload();
LABEL_23:
  v31 = type metadata accessor for FormatButtonNodeDataAction();
  *(_QWORD *)((char *)a1 + *(int *)(v31 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v31 + 20));
  v32 = *(int *)(a3 + 20);
  v33 = (_OWORD *)((char *)a1 + v32);
  v34 = (_OWORD *)((char *)a2 + v32);
  v35 = *(_QWORD *)(v31 - 8);
  if (!(*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v35 + 48))(v34, 1, v31))
  {
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_47:
      *(_QWORD *)((char *)v33 + *(int *)(v31 + 20)) = *(_QWORD *)((char *)v34 + *(int *)(v31 + 20));
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v33, 0, 1, v31);
      return a1;
    }
    v37 = type metadata accessor for FormatPurchaseData(0);
    v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 1)
    {
      v45 = type metadata accessor for FormatPurchaseLandingPageData();
      v46 = *(_QWORD *)(v45 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v46 + 48))(v34, 1, v45))
      {
        sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      }
      else
      {
        *v33 = *v34;
        v48 = *(int *)(v45 + 20);
        v61 = v46;
        v64 = (char *)v33 + v48;
        v49 = (char *)v34 + v48;
        v50 = type metadata accessor for FormatPostPurchaseData();
        v58 = *(_QWORD *)(v50 - 8);
        __dstb = v49;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v49, 1, v50))
        {
          sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(v64, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
          v52 = v61;
        }
        else
        {
          v53 = sub_1BB86C67C();
          v57 = *(_QWORD *)(v53 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(__dstb, 2, v53))
          {
            memcpy(v64, __dstb, *(_QWORD *)(v58 + 64));
            v54 = v58;
            v55 = v50;
          }
          else
          {
            (*(void (**)(void))(v57 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v57 + 56))(v64, 0, 2, v53);
            v55 = v50;
            v54 = v58;
          }
          v52 = v61;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v64, 0, 1, v55);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v52 + 56))(v33, 0, 1, v45);
      }
    }
    else
    {
      if (v38)
      {
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
LABEL_46:
        swift_storeEnumTagMultiPayload();
        goto LABEL_47;
      }
      *v33 = *v34;
      v39 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v40 = (char *)v33 + v39;
      v41 = (char *)v34 + v39;
      v42 = type metadata accessor for FormatPostPurchaseData();
      v43 = *(_QWORD *)(v42 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
      {
        sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        v60 = sub_1BB86C67C();
        v63 = *(void (***)(void *, const void *, uint64_t))(v60 - 8);
        if (((unsigned int (*)(char *, uint64_t))v63[6])(v41, 2))
        {
          memcpy(v40, v41, *(_QWORD *)(v43 + 64));
        }
        else
        {
          v63[4](v40, v41, v60);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v63[7])(v40, 0, 2, v60);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_46;
  }
  sub_1BA7B41BC(0);
  memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  return a1;
}

_OWORD *assignWithTake for FormatButtonNodeData(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(void *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  _OWORD *v35;
  char *v36;
  uint64_t v37;
  uint64_t (*v38)(char *, uint64_t, uint64_t);
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  void *v86;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  void *__dst;
  char *__dsta;
  char *__dstb;
  void *__dstc;
  char *__dstd;

  if (a1 != a2)
  {
    sub_1BA4A2E80((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    v6 = type metadata accessor for FormatAction();
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      goto LABEL_24;
    }
    v7 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for FormatPurchaseLandingPageData();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v21 = *(int *)(v15 + 20);
        __dsta = (char *)a1 + v21;
        v22 = (char *)a2 + v21;
        v23 = type metadata accessor for FormatPostPurchaseData();
        v24 = *(_QWORD *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
        {
          sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(__dsta, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v97 = v24;
          v27 = sub_1BB86C67C();
          v93 = *(_QWORD *)(v27 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v22, 2, v27))
          {
            v28 = v97;
            v29 = v22;
            v30 = __dsta;
            memcpy(__dsta, v29, *(_QWORD *)(v97 + 64));
          }
          else
          {
            v30 = __dsta;
            (*(void (**)(void))(v93 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(__dsta, 0, 2, v27);
            v28 = v97;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v30, 0, 1, v23);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        __dst = v10;
        v18 = sub_1BB86C67C();
        v19 = *(_QWORD *)(v18 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v11, 2, v18))
        {
          v20 = __dst;
          memcpy(__dst, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v19 + 32))(__dst, v11, v18);
          v26 = *(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56);
          v20 = __dst;
          v26(__dst, 0, 2, v18);
        }
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v20, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
LABEL_24:
  v31 = type metadata accessor for FormatButtonNodeDataAction();
  v32 = *(int *)(v31 + 20);
  v33 = *(void **)((char *)a1 + v32);
  *(_QWORD *)((char *)a1 + v32) = *(_QWORD *)((char *)a2 + v32);

  v34 = *(int *)(a3 + 20);
  v35 = (_OWORD *)((char *)a1 + v34);
  v36 = (char *)a2 + v34;
  v37 = *(_QWORD *)(v31 - 8);
  v38 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48);
  v39 = v38((char *)a1 + v34, 1, v31);
  v40 = v38(v36, 1, v31);
  if (!v39)
  {
    if (v40)
    {
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
      goto LABEL_33;
    }
    if (a1 != a2)
    {
      sub_1BA4A2E80((uint64_t)v35, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
      v51 = type metadata accessor for FormatAction();
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        v52 = type metadata accessor for FormatPurchaseData(0);
        v53 = swift_getEnumCaseMultiPayload();
        if (v53 == 1)
        {
          v63 = type metadata accessor for FormatPurchaseLandingPageData();
          v64 = *(_QWORD *)(v63 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v36, 1, v63))
          {
            sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
          }
          else
          {
            v96 = v64;
            *v35 = *(_OWORD *)v36;
            v73 = *(int *)(v63 + 20);
            __dstd = (char *)v35 + v73;
            v74 = &v36[v73];
            v75 = type metadata accessor for FormatPostPurchaseData();
            v76 = *(_QWORD *)(v75 - 8);
            v100 = v74;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
            {
              sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
              memcpy(__dstd, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
              v78 = v96;
            }
            else
            {
              v90 = v75;
              v92 = v76;
              v81 = sub_1BB86C67C();
              v82 = *(_QWORD *)(v81 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v100, 2, v81))
              {
                v83 = v92;
                v84 = __dstd;
                memcpy(__dstd, v100, *(_QWORD *)(v92 + 64));
              }
              else
              {
                v84 = __dstd;
                (*(void (**)(void))(v82 + 32))();
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v82 + 56))(__dstd, 0, 2, v81);
                v83 = v92;
              }
              v78 = v96;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v83 + 56))(v84, 0, 1, v90);
            }
            (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v78 + 56))(v35, 0, 1, v63);
          }
        }
        else
        {
          if (v53)
          {
            memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
LABEL_74:
            swift_storeEnumTagMultiPayload();
            goto LABEL_75;
          }
          *v35 = *(_OWORD *)v36;
          v54 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v55 = (char *)v35 + v54;
          v56 = &v36[v54];
          v57 = type metadata accessor for FormatPostPurchaseData();
          v58 = *(_QWORD *)(v57 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
          {
            sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
            memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
          }
          else
          {
            __dstc = v55;
            v71 = sub_1BB86C67C();
            v99 = *(_QWORD *)(v71 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v56, 2, v71))
            {
              v72 = __dstc;
              memcpy(__dstc, v56, *(_QWORD *)(v58 + 64));
            }
            else
            {
              (*(void (**)(void *, char *, uint64_t))(v99 + 32))(__dstc, v56, v71);
              v72 = __dstc;
              (*(void (**)(void))(v99 + 56))();
            }
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v72, 0, 1, v57);
          }
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_74;
      }
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    }
LABEL_75:
    v85 = *(int *)(v31 + 20);
    v86 = *(void **)((char *)v35 + v85);
    *(_QWORD *)((char *)v35 + v85) = *(_QWORD *)&v36[v85];

    return a1;
  }
  if (!v40)
  {
    v41 = type metadata accessor for FormatAction();
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_69:
      *(_QWORD *)((char *)v35 + *(int *)(v31 + 20)) = *(_QWORD *)&v36[*(int *)(v31 + 20)];
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v35, 0, 1, v31);
      return a1;
    }
    v42 = type metadata accessor for FormatPurchaseData(0);
    v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 1)
    {
      v60 = type metadata accessor for FormatPurchaseLandingPageData();
      v61 = *(_QWORD *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v36, 1, v60))
      {
        sub_1BA4B07F0(0, &qword_1ED3BB328, (uint64_t (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
      }
      else
      {
        v95 = v61;
        *v35 = *(_OWORD *)v36;
        v66 = *(int *)(v60 + 20);
        __dstb = (char *)v35 + v66;
        v67 = &v36[v66];
        v68 = type metadata accessor for FormatPostPurchaseData();
        v91 = *(_QWORD *)(v68 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v67, 1, v68))
        {
          sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
          memcpy(__dstb, v67, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
          v70 = v95;
        }
        else
        {
          v89 = v68;
          v79 = sub_1BB86C67C();
          v88 = *(_QWORD *)(v79 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v88 + 48))(v67, 2, v79))
          {
            v80 = v91;
            memcpy(__dstb, v67, *(_QWORD *)(v91 + 64));
          }
          else
          {
            (*(void (**)(void))(v88 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v88 + 56))(__dstb, 0, 2, v79);
            v80 = v91;
          }
          v70 = v95;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(__dstb, 0, 1, v89);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v35, 0, 1, v60);
      }
    }
    else
    {
      if (v43)
      {
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
LABEL_68:
        swift_storeEnumTagMultiPayload();
        goto LABEL_69;
      }
      *v35 = *(_OWORD *)v36;
      v44 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v45 = (char *)v35 + v44;
      v46 = &v36[v44];
      v47 = type metadata accessor for FormatPostPurchaseData();
      v48 = *(_QWORD *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        sub_1BA4B07F0(0, &qword_1ED3BECA8, (uint64_t (*)(uint64_t))type metadata accessor for FormatPostPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
        memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
      }
      else
      {
        v94 = sub_1BB86C67C();
        v98 = *(_QWORD *)(v94 - 8);
        if ((*(unsigned int (**)(char *, uint64_t))(v98 + 48))(v46, 2))
        {
          memcpy(v45, v46, *(_QWORD *)(v48 + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v98 + 32))(v45, v46, v94);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56))(v45, 0, 2, v94);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_68;
  }
LABEL_33:
  sub_1BA7B41BC(0);
  memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatButtonNodeData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2005B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = type metadata accessor for FormatButtonNodeDataAction();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
  }
  else
  {
    sub_1BA7B41BC(0);
    v8 = v11;
    v12 = *(_QWORD *)(v11 - 8);
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }
  return v9(v10, a2, v8);
}

uint64_t storeEnumTagSinglePayload for FormatButtonNodeData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB200630(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v8 = type metadata accessor for FormatButtonNodeDataAction();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    sub_1BA7B41BC(0);
    v10 = v13;
    v14 = *(_QWORD *)(v13 - 8);
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

uint64_t sub_1BB2006AC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v45;
  _QWORD v46[20];
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;

  sub_1BB20355C(0);
  MEMORY[0x1E0C80A78](v2);
  v48 = (char *)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v47 = type metadata accessor for FormatPurchaseData(0);
  v46[18] = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v49 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB20350C(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for FormatAction();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v46[16] = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v46[6] = (char *)v46 - v12;
  MEMORY[0x1E0C80A78](v13);
  v46[15] = (char *)v46 - v14;
  MEMORY[0x1E0C80A78](v15);
  v46[5] = (char *)v46 - v16;
  MEMORY[0x1E0C80A78](v17);
  v46[13] = (char *)v46 - v18;
  MEMORY[0x1E0C80A78](v19);
  v46[1] = (char *)v46 - v20;
  MEMORY[0x1E0C80A78](v21);
  v46[14] = (char *)v46 - v22;
  MEMORY[0x1E0C80A78](v23);
  v46[2] = (char *)v46 - v24;
  MEMORY[0x1E0C80A78](v25);
  v46[10] = (char *)v46 - v26;
  MEMORY[0x1E0C80A78](v27);
  v46[0] = (char *)v46 - v28;
  MEMORY[0x1E0C80A78](v29);
  v46[8] = (char *)v46 - v30;
  MEMORY[0x1E0C80A78](v31);
  MEMORY[0x1E0C80A78](v32);
  v46[9] = (char *)v46 - v33;
  MEMORY[0x1E0C80A78](v34);
  MEMORY[0x1E0C80A78](v35);
  v46[7] = (char *)v46 - v36;
  MEMORY[0x1E0C80A78](v37);
  MEMORY[0x1E0C80A78](v38);
  v40 = (char *)v46 - v39;
  MEMORY[0x1E0C80A78](v41);
  v43 = (char *)v46 - v42;
  sub_1BA4C2DD8(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BB20350C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    sub_1BA5193C4((uint64_t)v7, (uint64_t)v43, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    sub_1BA4C2DD8((uint64_t)v43, (uint64_t)v40, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    v45 = (char *)sub_1BB200A94 + 4 * word_1BB8F9D96[swift_getEnumCaseMultiPayload()];
    v50 = v43;
    __asm { BR              X10 }
  }
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))sub_1BB20350C);
  return 0;
}

uint64_t sub_1BB200A94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  int v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int EnumCaseMultiPayload;

  *(_QWORD *)(v0 + 160) = *(_QWORD *)v2;
  *(_QWORD *)(v0 + 192) = *(_QWORD *)(v2 + 8);
  *(_DWORD *)(v0 + 184) = *(unsigned __int8 *)(v2 + 16);
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v0 + 144) = v5 + 32;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v4);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  *(_QWORD *)(v0 + 120) = *(_QWORD *)(v7 + 72);
  *(_QWORD *)(v0 + 128) = v6;
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1BB87A390;
  v10 = v9 + v8;
  sub_1BA4C2DD8(v3, v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  v11 = 0;
  v12 = 1 << swift_getEnumCaseMultiPayload();
  if ((v12 & 0x34) != 0)
    goto LABEL_4;
  if ((v12 & 0xC8) == 0)
  {
    v11 = 1;
LABEL_4:
    sub_1BA4A2E80(v1, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  }
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = (char *)(v10 + *(int *)(v13 + 24));
  *v14 = v11;
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 0, 1, v15);
  *(_OWORD *)v10 = xmmword_1BB8F9E60;
  *(_QWORD *)(v10 + 16) = 0;
  *(_QWORD *)(v10 + 24) = 0;
  v16 = v10 + *(int *)(v13 + 28);
  *(_QWORD *)v16 = 0;
  *(_QWORD *)(v16 + 8) = 0;
  *(_BYTE *)(v16 + 16) = -1;
  (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v10, 0, 1, v13);
  sub_1BA4C2DD8(*(_QWORD *)(v0 + 216), *(_QWORD *)(v0 + 56), (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(void))((char *)sub_1BB200C8C + 4 * word_1BB8F9E16[EnumCaseMultiPayload]))();
}

void sub_1BB200C8C()
{
  uint64_t v0;
  void (*v1)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  void (*v6)(_BYTE *, _QWORD, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _BYTE *v10;
  char *v11;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;

  sub_1BA4A2E80(v3, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  v9 = (_QWORD *)(v8 + *(_QWORD *)(v0 + 120));
  v10 = (char *)v9 + *(int *)(v2 + 24);
  *v10 = 1;
  swift_storeEnumTagMultiPayload();
  v6(v10, 0, 1, v4);
  *v9 = 0xD000000000000010;
  v9[1] = 0x80000001BB97F960;
  v9[2] = 0;
  v9[3] = 0;
  v11 = (char *)v9 + *(int *)(v2 + 28);
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = -1;
  v1(v9, 0, 1, v2);
  sub_1BAF89090(0x6E6F69746341, 0xE600000000000000, 0, 0, v7, (_QWORD *)(v0 + 480));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v5[7] = &type metadata for FormatInspectionGroup;
  v5[8] = &off_1E72D2F60;
  v12 = swift_allocObject();
  v5[4] = v12;
  v13 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v12 + 16) = *(_OWORD *)(v0 + 480);
  *(_OWORD *)(v12 + 32) = v13;
  *(_QWORD *)(v12 + 48) = *(_QWORD *)(v0 + 512);
  v14 = sub_1BA9747FC((uint64_t)v5);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1BB6DF010(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA8EDB9C(*(void **)(v0 + 192), *(_DWORD *)(v0 + 184));
  sub_1BA4A2E80(*(_QWORD *)(v0 + 216), (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB200A14);
}

void sub_1BB201CC0()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB201CD4);
}

void sub_1BB201EF4()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB201F08);
}

void sub_1BB2021DC()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB2021F0);
}

void sub_1BB202394()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB2023A8);
}

void sub_1BB202594()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB2025A8);
}

void sub_1BB202794()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB2027A8);
}

void sub_1BB202950()
{
  uint64_t v0;

  sub_1BA4A2E80(v0, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  JUMPOUT(0x1BB202964);
}

_QWORD *sub_1BB202AE0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t (*v26)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  _QWORD *v60;
  void (*v61)(uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(uint64_t);
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  char *v81;
  uint64_t v82;
  __int128 v83;
  _QWORD *v84;
  id v86;
  id v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t (*v104)(char *, uint64_t, uint64_t);
  uint64_t v105;
  _OWORD v106[2];
  uint64_t v107;
  _OWORD v108[2];
  uint64_t v109;

  sub_1BA7B41BC(0);
  MEMORY[0x1E0C80A78](v2);
  v91 = (uint64_t)&v89 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v90 = (uint64_t)&v89 - v5;
  v6 = type metadata accessor for FormatButtonNodeDataAction();
  v92 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v89 = (uint64_t)&v89 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v89 - v9;
  sub_1BB2034F0(0);
  MEMORY[0x1E0C80A78](v11);
  v99 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v93 = (char *)&v89 - v14;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v89 - v16;
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v89 - v19;
  sub_1BB20350C(0);
  MEMORY[0x1E0C80A78](v21);
  v94 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v89 - v24;
  v26 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v101 = xmmword_1BB87A390;
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v26);
  v29 = v28;
  sub_1BA8C88C8(0);
  v103 = v30;
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(_QWORD *)(v31 + 72);
  v33 = *(unsigned __int8 *)(v31 + 80);
  v34 = (v33 + 32) & ~v33;
  v102 = v32;
  v98 = v29;
  v96 = v34 + 2 * v32;
  v95 = v33 | 7;
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v101;
  v97 = v34;
  v36 = (_QWORD *)(v35 + v34);
  v105 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB2034F0);
  v37 = type metadata accessor for FormatButtonNodeData();
  v104 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
  v38 = v104(v20, 1, v37);
  v100 = v6;
  if (v38 == 1)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB2034F0);
    v39 = type metadata accessor for FormatAction();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 56))(v25, 1, 1, v39);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
    sub_1BA4C2DD8((uint64_t)v10, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
    sub_1BA4A2E80((uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    v40 = type metadata accessor for FormatAction();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v25, 0, 1, v40);
  }
  v41 = (uint64_t)v93;
  v42 = sub_1BB2006AC((uint64_t)v25);
  v44 = v43;
  v46 = v45;
  sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))sub_1BB20350C);
  sub_1BAAF3C48(0x6E6F69746341, 0xE600000000000000, v42, v44, v46, v36);
  v47 = type metadata accessor for FormatInspectionItem(0);
  v48 = *(char **)(*(_QWORD *)(v47 - 8) + 56);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v48)(v36, 0, 1, v47);
  sub_1BA4C2DD8(v105, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB2034F0);
  if (v104(v17, 1, v37) == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB2034F0);
    v49 = 0;
    v50 = 0;
  }
  else
  {
    v93 = v48;
    v51 = v89;
    sub_1BA4C2DD8((uint64_t)v17, v89, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
    v52 = *(void **)(v51 + *(int *)(v100 + 20));
    v53 = v52;
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
    if (v52)
    {
      v54 = objc_msgSend(v53, sel_string);

      v49 = sub_1BB8729A0();
      v50 = v55;

    }
    else
    {
      v49 = 0;
      v50 = 0;
    }
    v48 = v93;
  }
  v93 = (char *)(inited + 32);
  v56 = (char *)v36 + v102;
  sub_1BAAF7494(1701667150, 0xE400000000000000, v49, v50, (_QWORD *)((char *)v36 + v102));
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v48)(v56, 0, 1, v47);
  sub_1BAF89090(0x6974634120706154, 0xEA00000000006E6FLL, 0, 0, v35, v106);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v57 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v57;
  *(_QWORD *)(v57 + 48) = v107;
  v58 = v106[1];
  *(_OWORD *)(v57 + 16) = v106[0];
  *(_OWORD *)(v57 + 32) = v58;
  v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = v101;
  v60 = (_QWORD *)(v59 + v97);
  sub_1BA4C2DD8(v105, v41, (uint64_t (*)(_QWORD))sub_1BB2034F0);
  if (v104((char *)v41, 1, v37) == 1)
  {
    v61 = sub_1BB2034F0;
    v62 = v41;
LABEL_14:
    sub_1BA4A2E80(v62, (uint64_t (*)(_QWORD))v61);
    v64 = v94;
    v65 = type metadata accessor for FormatAction();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56))(v64, 1, 1, v65);
    goto LABEL_16;
  }
  v63 = v90;
  sub_1BA4C2DD8(v41 + *(int *)(v37 + 20), v90, (uint64_t (*)(_QWORD))sub_1BA7B41BC);
  sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v63, 1, v100) == 1)
  {
    v61 = sub_1BA7B41BC;
    v62 = v63;
    goto LABEL_14;
  }
  v64 = v94;
  sub_1BA4C2DD8(v63, v94, (uint64_t (*)(_QWORD))type metadata accessor for FormatAction);
  sub_1BA4A2E80(v63, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  v66 = type metadata accessor for FormatAction();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 56))(v64, 0, 1, v66);
LABEL_16:
  v67 = sub_1BB2006AC(v64);
  v68 = v64;
  v69 = v67;
  v71 = v70;
  v73 = v72;
  sub_1BA4A2E80(v68, (uint64_t (*)(_QWORD))sub_1BB20350C);
  sub_1BAAF3C48(0x6E6F69746341, 0xE600000000000000, v69, v71, v73, v60);
  ((void (*)(_QWORD *, _QWORD, uint64_t, uint64_t))v48)(v60, 0, 1, v47);
  v74 = v99;
  sub_1BA4C2DD8(v105, v99, (uint64_t (*)(_QWORD))sub_1BB2034F0);
  if (v104((char *)v74, 1, v37) == 1)
  {
    v75 = sub_1BB2034F0;
    v76 = v74;
LABEL_20:
    sub_1BA4A2E80(v76, (uint64_t (*)(_QWORD))v75);
    v79 = 0;
    v80 = 0;
    goto LABEL_21;
  }
  v77 = v91;
  sub_1BA4C2DD8(v74 + *(int *)(v37 + 20), v91, (uint64_t (*)(_QWORD))sub_1BA7B41BC);
  sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeData);
  v78 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v77, 1, v100) == 1)
  {
    v75 = sub_1BA7B41BC;
    v76 = v77;
    goto LABEL_20;
  }
  v80 = *(void **)(v77 + *(int *)(v78 + 20));
  v86 = v80;
  sub_1BA4A2E80(v77, (uint64_t (*)(_QWORD))type metadata accessor for FormatButtonNodeDataAction);
  if (v80)
  {
    v87 = objc_msgSend(v86, sel_string);

    v79 = sub_1BB8729A0();
    v80 = v88;

  }
  else
  {
    v79 = 0;
  }
LABEL_21:
  v81 = (char *)v60 + v102;
  sub_1BAAF7494(1701667150, 0xE400000000000000, v79, (uint64_t)v80, (_QWORD *)((char *)v60 + v102));
  ((void (*)(char *, _QWORD, uint64_t, uint64_t))v48)(v81, 0, 1, v47);
  sub_1BAF89090(0xD000000000000011, 0x80000001BB97F940, 0, 0, v59, v108);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(inited + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 104) = &off_1E72D2F60;
  v82 = swift_allocObject();
  *(_QWORD *)(inited + 72) = v82;
  *(_QWORD *)(v82 + 48) = v109;
  v83 = v108[1];
  *(_OWORD *)(v82 + 16) = v108[0];
  *(_OWORD *)(v82 + 32) = v83;
  v84 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v84;
}

void sub_1BB2034F0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BDE18, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB20350C(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3BCCA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatAction, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB203528()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB20355C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BDE20, type metadata accessor for FormatPurchaseData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB203578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BDE28[0])
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, qword_1EF2BDE28);
  }
}

uint64_t FeedJournalGroupResult.name.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 232))();
}

void FeedJournalGroupResult.kind.getter()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1BA5B0E6C(v0 + 128, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB203628()
{
  _BYTE *v0;
  uint64_t v2;

  *v0 = 0;
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v2);
}

void FeedJournalGroupResultOutput.reason.getter()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1BA5B0E6C(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB2036D0()
{
  uint64_t v1;

  return v1;
}

void FeedJournalGroupResultOutput.score.getter()
{
  uint64_t v0;
  _BYTE v1[72];

  sub_1BA5B0E6C(v0, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB203734()
{
  uint64_t v1;

  sub_1BA5B0A58((uint64_t)&v1);
  return 0;
}

uint64_t sub_1BB20377C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _QWORD v15[8];
  char v16;
  _OWORD v17[2];
  uint64_t v18;

  v8 = FeedDatabaseGroup.identifier.getter();
  v10 = v9;
  v11 = sub_1BA5B1EC4();
  v13 = v12;
  v18 = 0;
  memset(v17, 0, sizeof(v17));
  v15[0] = 0;
  v15[1] = 0xE000000000000000;
  sub_1BB873CB4();
  sub_1BB872AFC("State Machine Event");
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();

  v16 = 6;
  *(_QWORD *)a3 = v8;
  *(_QWORD *)(a3 + 8) = v10;
  *(_QWORD *)(a3 + 16) = v11;
  *(_QWORD *)(a3 + 24) = v13;
  sub_1BA5B103C((uint64_t)v17, a3 + 32);
  *(_QWORD *)(a3 + 72) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(a3 + 80) = 0;
  *(_BYTE *)(a3 + 88) = 1;
  *(_QWORD *)(a3 + 96) = 0;
  *(_BYTE *)(a3 + 104) = 1;
  *(_QWORD *)(a3 + 112) = 0;
  *(_WORD *)(a3 + 120) = 1;
  result = sub_1BA5B1000((uint64_t)v15, a3 + 128);
  *(_QWORD *)(a3 + 208) = 0;
  *(_QWORD *)(a3 + 216) = 0;
  *(_QWORD *)(a3 + 200) = 0;
  *(double *)(a3 + 224) = a4;
  *(_QWORD *)(a3 + 232) = sub_1BB20480C;
  *(_QWORD *)(a3 + 240) = a1;
  return result;
}

unint64_t sub_1BB2038E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t *v5;
  uint64_t v6;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  char v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  _OWORD v38[15];
  uint64_t v39;
  _BYTE v40[40];
  double v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _BYTE v45[48];

  v6 = (uint64_t)v5;
  v12 = v5[1];
  v35 = *v5;
  v13 = v5[2];
  v14 = v5[3];
  v37 = v13;
  sub_1BA83AAFC(v6 + 32, (uint64_t)v45);
  v15 = *(_QWORD *)(v6 + 72);
  v16 = *(_QWORD *)(v6 + 80);
  v34 = *(_BYTE *)(v6 + 88);
  v33 = *(_QWORD *)(v6 + 96);
  v32 = *(_BYTE *)(v6 + 104);
  v31 = *(_QWORD *)(v6 + 112);
  v30 = *(_BYTE *)(v6 + 120);
  v36 = *(_BYTE *)(v6 + 121);
  sub_1BA4C010C(a1, (uint64_t)v40);
  v41 = a5;
  v42 = a2;
  v43 = a3;
  v44 = 3;
  v17 = *(_QWORD *)(v6 + 200);
  v18 = *(_QWORD *)(v6 + 208);
  v19 = *(_QWORD *)(v6 + 216);
  v20 = *(_QWORD *)(v6 + 224);
  sub_1BA4DD504(v6, (uint64_t)v38);
  v21 = swift_allocObject();
  v22 = v38[13];
  *(_OWORD *)(v21 + 208) = v38[12];
  *(_OWORD *)(v21 + 224) = v22;
  *(_OWORD *)(v21 + 240) = v38[14];
  *(_QWORD *)(v21 + 256) = v39;
  v23 = v38[9];
  *(_OWORD *)(v21 + 144) = v38[8];
  *(_OWORD *)(v21 + 160) = v23;
  v24 = v38[11];
  *(_OWORD *)(v21 + 176) = v38[10];
  *(_OWORD *)(v21 + 192) = v24;
  v25 = v38[5];
  *(_OWORD *)(v21 + 80) = v38[4];
  *(_OWORD *)(v21 + 96) = v25;
  v26 = v38[7];
  *(_OWORD *)(v21 + 112) = v38[6];
  *(_OWORD *)(v21 + 128) = v26;
  v27 = v38[1];
  *(_OWORD *)(v21 + 16) = v38[0];
  *(_OWORD *)(v21 + 32) = v27;
  v28 = v38[3];
  *(_OWORD *)(v21 + 48) = v38[2];
  *(_OWORD *)(v21 + 64) = v28;
  *(_QWORD *)a4 = v35;
  *(_QWORD *)(a4 + 8) = v12;
  *(_QWORD *)(a4 + 16) = v37;
  *(_QWORD *)(a4 + 24) = v14;
  sub_1BA5B103C((uint64_t)v45, a4 + 32);
  *(_QWORD *)(a4 + 72) = v15;
  *(_QWORD *)(a4 + 80) = v16;
  *(_BYTE *)(a4 + 88) = v34;
  *(_QWORD *)(a4 + 96) = v33;
  *(_BYTE *)(a4 + 104) = v32;
  *(_QWORD *)(a4 + 112) = v31;
  *(_BYTE *)(a4 + 120) = v30;
  *(_BYTE *)(a4 + 121) = v36;
  sub_1BA5B1000((uint64_t)v40, a4 + 128);
  *(_QWORD *)(a4 + 200) = v17;
  *(_QWORD *)(a4 + 208) = v18;
  *(_QWORD *)(a4 + 216) = v19;
  *(_QWORD *)(a4 + 224) = v20;
  *(_QWORD *)(a4 + 232) = sub_1BB2048C8;
  *(_QWORD *)(a4 + 240) = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BA5B16F4(v17, v18);
}

uint64_t FeedJournalGroupResultOutput.group.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4[3];
  unsigned __int8 v5;
  __int128 v6[2];

  sub_1BA5B0E6C(v1, (uint64_t)v4);
  if (v5 >= 3u)
  {
    if (v5 - 4 < 3)
    {
      result = sub_1BA5B0A58((uint64_t)v4);
      *(_QWORD *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      return result;
    }
    swift_bridgeObjectRelease();
  }
  sub_1BA4CECCC(v4, (uint64_t)v6);
  return sub_1BA4CECCC(v6, a1);
}

uint64_t FeedJournalGroupResult.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedJournalGroupResult.configIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeedJournalGroupResult.ruleOutputs.getter()
{
  return swift_bridgeObjectRetain();
}

void FeedJournalGroupResult.settings.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  char v7;

  v2 = *(_BYTE *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_BYTE *)(v1 + 104);
  v5 = *(_QWORD *)(v1 + 112);
  v6 = *(_BYTE *)(v1 + 120);
  v7 = *(_BYTE *)(v1 + 121);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 80);
  *(_BYTE *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = v6;
  *(_BYTE *)(a1 + 41) = v7;
}

unint64_t FeedJournalGroupResult.embeddedJournalEntry.getter@<X0>(unint64_t *a1@<X8>)
{
  _QWORD *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = v1[25];
  v3 = v1[26];
  v4 = v1[27];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1BA5B16F4(v2, v3);
}

uint64_t sub_1BB203BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  _QWORD v15[3];
  uint64_t v16;
  uint64_t v17;

  sub_1BA5B0E6C(a1, (uint64_t)&v11);
  if (v14 >= 3u)
  {
    if (v14 - 4 < 3)
    {
      sub_1BA5B0A58((uint64_t)&v11);
      sub_1BA4C010C(a2, (uint64_t)&v11);
LABEL_6:
      v8 = v12;
      v9 = v13;
      __swift_project_boxed_opaque_existential_1(&v11, v12);
      v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 40))(v8, v9);
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  sub_1BA4CECCC(&v11, (uint64_t)v15);
  v4 = v16;
  v3 = v17;
  __swift_project_boxed_opaque_existential_1(v15, v16);
  v5 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v3 + 8) + 8) + 16))(v4);
  v7 = v6;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  sub_1BA4C010C(a2, (uint64_t)&v11);
  if (!v7)
    goto LABEL_6;
LABEL_7:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v11);
  return v5;
}

uint64_t sub_1BB203CF8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1[3];
  v2 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v1);
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v2 + 8) + 8) + 16))(v1);
}

uint64_t sub_1BB203D34()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  sub_1BB86F064();
  sub_1BB86F22C();
  result = swift_release();
  if (v2)
  {
    sub_1BA7114A0();
    v1 = sub_1BB873ABC();
    swift_bridgeObjectRelease();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void FeedJournalGroupResult.repooling.getter()
{
  uint64_t v0;
  _BYTE v1[112];

  sub_1BA5B0E6C(v0 + 128, (uint64_t)v1);
  __asm { BR              X10 }
}

uint64_t sub_1BB203DFC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3;
  _QWORD v4[3];
  uint64_t v5;
  uint64_t v6;

  sub_1BA4CECCC(&v3, (uint64_t)v4);
  v0 = v5;
  v1 = v6;
  __swift_project_boxed_opaque_existential_1(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v1 + 88))(v0, v1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v4);
}

uint64_t assignWithCopy for FeedJournalGroupResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56))
  {
    if (v4)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 32), (uint64_t *)(a2 + 32));
      goto LABEL_8;
    }
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  }
  else if (v4)
  {
    *(_QWORD *)(a1 + 56) = v4;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 32, a2 + 32);
    goto LABEL_8;
  }
  v5 = *(_OWORD *)(a2 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
LABEL_8:
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = v7;
  v8 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v8;
  v9 = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = v9;
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  if (a1 != a2)
  {
    sub_1BA5B0A58(a1 + 128);
    __asm { BR              X10 }
  }
  v10 = (_OWORD *)(a1 + 200);
  v12 = (_OWORD *)(a2 + 200);
  v11 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v11)
    {
      *(_QWORD *)(a1 + 200) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = (unint64_t *)(a1 + 208);
      v14 = *(_QWORD *)(a2 + 208);
      if (*(_QWORD *)(a1 + 208) >= 2uLL)
      {
        if (v14 >= 2)
        {
          *v13 = v14;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_1BAAD13E8(a1 + 208);
          *v13 = *(_QWORD *)(a2 + 208);
        }
      }
      else
      {
        *v13 = v14;
        if (v14 >= 2)
          swift_bridgeObjectRetain();
      }
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    }
    else
    {
      sub_1BB204214(a1 + 200);
      v16 = *(_QWORD *)(a2 + 216);
      *v10 = *v12;
      *(_QWORD *)(a1 + 216) = v16;
    }
  }
  else if (v11)
  {
    *(_QWORD *)(a1 + 200) = v11;
    v15 = *(_QWORD *)(a2 + 208);
    swift_bridgeObjectRetain();
    if (v15 >= 2)
      swift_bridgeObjectRetain();
    *(_QWORD *)(a1 + 208) = v15;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  }
  else
  {
    v17 = *v12;
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    *v10 = v17;
  }
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v18 = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = v18;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1BB204214(uint64_t a1)
{
  destroy for FormatPercentFillSizing(a1);
  return a1;
}

uint64_t assignWithTake for FeedJournalGroupResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  unint64_t *v10;
  unint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 56))
    __swift_destroy_boxed_opaque_existential_1(a1 + 32);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_BYTE *)(a1 + 120) = *(_BYTE *)(a2 + 120);
  *(_BYTE *)(a1 + 121) = *(_BYTE *)(a2 + 121);
  if (a1 != a2)
  {
    sub_1BA5B0A58(a1 + 128);
    v7 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v7;
    *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
    v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
  }
  v9 = *(_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 200))
  {
    if (v9)
    {
      *(_QWORD *)(a1 + 200) = v9;
      swift_bridgeObjectRelease();
      v10 = (unint64_t *)(a1 + 208);
      v11 = *(_QWORD *)(a2 + 208);
      if (*(_QWORD *)(a1 + 208) >= 2uLL)
      {
        if (v11 >= 2)
        {
          *v10 = v11;
          swift_bridgeObjectRelease();
          goto LABEL_14;
        }
        sub_1BAAD13E8(a1 + 208);
        v11 = *(_QWORD *)(a2 + 208);
      }
      *v10 = v11;
LABEL_14:
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      goto LABEL_15;
    }
    sub_1BB204214(a1 + 200);
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
LABEL_15:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  swift_release();
  return a1;
}

uint64_t assignWithCopy for FeedJournalGroupResultOutput(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 64);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 1:
        case 2:
          __swift_destroy_boxed_opaque_existential_1(a1);
          goto LABEL_8;
        case 3:
          __swift_destroy_boxed_opaque_existential_1(a1);
          goto LABEL_7;
        case 4:
        case 5:
        case 6:
LABEL_7:
          swift_bridgeObjectRelease();
LABEL_8:
          v5 = *(unsigned __int8 *)(a2 + 64);
          while (2)
          {
            switch(v5)
            {
              case 0:
                v6 = *(_QWORD *)(a2 + 24);
                *(_QWORD *)(a1 + 24) = v6;
                *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
                (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
                *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
                *(_BYTE *)(a1 + 64) = 0;
                return a1;
              case 1:
                v7 = *(_QWORD *)(a2 + 24);
                *(_QWORD *)(a1 + 24) = v7;
                *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
                (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1, a2);
                *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
                *(_BYTE *)(a1 + 64) = 1;
                return a1;
              case 2:
                v8 = *(_QWORD *)(a2 + 24);
                *(_QWORD *)(a1 + 24) = v8;
                *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
                (**(void (***)(uint64_t, uint64_t))(v8 - 8))(a1, a2);
                *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
                *(_BYTE *)(a1 + 64) = 2;
                return a1;
              case 3:
                v9 = *(_QWORD *)(a2 + 24);
                *(_QWORD *)(a1 + 24) = v9;
                *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
                (**(void (***)(uint64_t, uint64_t))(v9 - 8))(a1, a2);
                *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
                *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
                *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
                v10 = 3;
                goto LABEL_18;
              case 4:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
                v10 = 4;
                goto LABEL_18;
              case 5:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
                v10 = 5;
                goto LABEL_18;
              case 6:
                *(_QWORD *)a1 = *(_QWORD *)a2;
                *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
                v10 = 6;
LABEL_18:
                *(_BYTE *)(a1 + 64) = v10;
                swift_bridgeObjectRetain();
                break;
              default:
                v5 = *(_DWORD *)a2 + 7;
                continue;
            }
            break;
          }
          break;
        default:
          v4 = *(_DWORD *)a1 + 7;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t assignWithTake for FeedJournalGroupResultOutput(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  if (a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 64);
    while (2)
    {
      switch(v4)
      {
        case 0:
        case 1:
        case 2:
          __swift_destroy_boxed_opaque_existential_1(a1);
          goto LABEL_8;
        case 3:
          __swift_destroy_boxed_opaque_existential_1(a1);
          goto LABEL_7;
        case 4:
        case 5:
        case 6:
LABEL_7:
          swift_bridgeObjectRelease();
LABEL_8:
          v5 = *(unsigned __int8 *)(a2 + 64);
          while (2)
          {
            switch(v5)
            {
              case 0:
                v6 = 0;
                v7 = *(_OWORD *)(a2 + 16);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *(_OWORD *)(a1 + 16) = v7;
                *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
                break;
              case 1:
                v8 = *(_OWORD *)(a2 + 16);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *(_OWORD *)(a1 + 16) = v8;
                *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
                v6 = 1;
                break;
              case 2:
                v9 = *(_OWORD *)(a2 + 16);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *(_OWORD *)(a1 + 16) = v9;
                *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
                v6 = 2;
                break;
              case 3:
                v10 = *(_OWORD *)(a2 + 16);
                *(_OWORD *)a1 = *(_OWORD *)a2;
                *(_OWORD *)(a1 + 16) = v10;
                v11 = *(_OWORD *)(a2 + 48);
                *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
                *(_OWORD *)(a1 + 48) = v11;
                v6 = 3;
                break;
              case 4:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                v6 = 4;
                break;
              case 5:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                v6 = 5;
                break;
              case 6:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                v6 = 6;
                break;
              default:
                v5 = *(_DWORD *)a2 + 7;
                continue;
            }
            break;
          }
          *(_BYTE *)(a1 + 64) = v6;
          break;
        default:
          v4 = *(_DWORD *)a1 + 7;
          continue;
      }
      break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FeedJournalGroupResultOutput(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFA && *(_BYTE *)(a1 + 65))
    return (*(_DWORD *)a1 + 250);
  v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 >= 7)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FeedJournalGroupResultOutput(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 64) = 0;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 250;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 65) = 0;
    if (a2)
      *(_BYTE *)(result + 64) = -(char)a2;
  }
  return result;
}

uint64_t sub_1BB204770(uint64_t result, unsigned int a2)
{
  if (a2 > 6)
  {
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 7;
    LOBYTE(a2) = 7;
  }
  *(_BYTE *)(result + 64) = a2;
  return result;
}

uint64_t sub_1BB204798()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + 16;
  switch(*(_BYTE *)(v0 + 80))
  {
    case 0:
    case 1:
    case 2:
      __swift_destroy_boxed_opaque_existential_1(v1);
      break;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(v1);
      goto LABEL_4;
    case 4:
    case 5:
    case 6:
LABEL_4:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  return swift_deallocObject();
}

uint64_t sub_1BB204800()
{
  uint64_t v0;

  return sub_1BB203BFC(v0 + 16, v0 + 88);
}

uint64_t sub_1BB20480C()
{
  return sub_1BB203D34();
}

uint64_t sub_1BB204814()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 72))
    __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  swift_bridgeObjectRelease();
  v1 = v0 + 144;
  switch(*(_BYTE *)(v0 + 208))
  {
    case 0:
    case 1:
    case 2:
      __swift_destroy_boxed_opaque_existential_1(v1);
      goto LABEL_5;
    case 3:
      __swift_destroy_boxed_opaque_existential_1(v1);
      goto LABEL_8;
    case 4:
    case 5:
    case 6:
LABEL_8:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 216))
        goto LABEL_9;
      goto LABEL_11;
    default:
LABEL_5:
      if (!*(_QWORD *)(v0 + 216))
        goto LABEL_11;
LABEL_9:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v0 + 224) >= 2uLL)
        swift_bridgeObjectRelease();
LABEL_11:
      swift_release();
      return swift_deallocObject();
  }
}

uint64_t sub_1BB2048C8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

void sub_1BB2048E8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB204924(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)((a1 & 0x1FFFFFFFFFFFFFFFLL) + 0x10);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB204954()
{
  JUMPOUT(0x1BB204930);
}

uint64_t sub_1BB204960(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 61;
  if ((_DWORD)v1 == 7)
    return (*a1 >> 3) + 7;
  else
    return v1;
}

unint64_t *sub_1BB20497C(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 7)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 61;
  }
  else
  {
    v2 = 8 * (a2 - 7);
    v3 = 0xE000000000000000;
  }
  *result = v2 | v3;
  return result;
}

uint64_t type metadata accessor for DebugJournalSectionDescriptor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DebugJournalSectionDescriptor);
}

id FormatLayoutViewFactory.create(layoutResult:traitCollection:)(_OWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  id v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  double *v21;
  id v22;
  uint64_t v23;
  uint64_t ObjectType;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  id v29;
  Class v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[24];
  _QWORD v44[4];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD v52[2];
  _BYTE v53[25];
  uint64_t v54;
  uint64_t v55;

  v31 = a2;
  v41 = type metadata accessor for FeedItemSupplementaryAttributes();
  v3 = *(_QWORD *)(v41 - 8);
  MEMORY[0x1E0C80A78](v41);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = a1[1];
  v52[0] = *a1;
  v52[1] = v6;
  *(_OWORD *)v53 = a1[2];
  *(_OWORD *)&v53[9] = *(_OWORD *)((char *)a1 + 41);
  v7 = v52[0];
  v8 = v6;
  v30 = (Class)type metadata accessor for FormatLayoutView();
  v9 = objc_msgSend(objc_allocWithZone(v30), sel_initWithFrame_, v7, v8);
  v55 = *(_QWORD *)&v53[16];
  v10 = *(_QWORD *)(*(_QWORD *)&v53[16] + 16);
  if (v10)
  {
    v11 = (uint64_t *)(*(_QWORD *)&v53[16] + 32);
    swift_bridgeObjectRetain();
    do
    {
      v12 = *v11++;
      v44[0] = v12;
      swift_retain();
      sub_1BB204E28((uint64_t)v44, (uint64_t)v52, (uint64_t)v9);
      swift_release();
      --v10;
    }
    while (v10);
    sub_1BA4F6CCC((uint64_t)&v55);
  }
  v54 = *(_QWORD *)&v53[8];
  v13 = *(_QWORD *)(*(_QWORD *)&v53[8] + 16);
  if (v13)
  {
    v14 = *(_QWORD *)&v53[8]
        + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v15 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v29 = v9;
    v28 = v15;
    do
    {
      sub_1BA4C2DD8(v14, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v17 = *(_QWORD *)v5;
        v16 = *((_QWORD *)v5 + 1);
        v39 = *((_QWORD *)v5 + 2);
        v34 = *((_QWORD *)v5 + 3);
        v38 = *((_OWORD *)v5 + 2);
        v37 = *((_OWORD *)v5 + 3);
        v36 = *((_OWORD *)v5 + 4);
        v18 = *((_QWORD *)v5 + 10);
        v19 = *((_QWORD *)v5 + 11);
        v35 = *((_QWORD *)v5 + 12);
        v20 = *((_QWORD *)v5 + 14);
        v42 = *((_QWORD *)v5 + 13);
        v21 = *(double **)(v20
                         + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
        v22 = objc_msgSend(objc_allocWithZone(v30), sel_initWithFrame_, v21[2], v21[3], v21[4], v21[5]);
        objc_msgSend(v9, sel_addSubview_, v22);
        v23 = *(_QWORD *)(v32 + 24);
        ObjectType = swift_getObjectType();
        v40 = v17;
        v44[0] = v17;
        v33 = v16;
        v44[1] = v16;
        v44[2] = v39;
        v44[3] = v34;
        v45 = v38;
        v46 = v37;
        v47 = v36;
        v48 = v18;
        v49 = v19;
        v50 = v35;
        v51 = v42;
        memset(v43, 0, sizeof(v43));
        (*(void (**)(_QWORD *, double *, id, uint64_t, _BYTE *, uint64_t (*)(), _QWORD, ValueMetadata *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(v23 + 80))(v44, v21, v22, v31, v43, nullsub_1, 0, &type metadata for FormatSupplementary, &type metadata for FormatLayoutContext, &protocol witness table for FormatLayoutContext, ObjectType, v23);
        v25 = *(_QWORD *)(v20 + 32);
        if (v25)
          v26 = *(_BYTE *)(v25 + 48) & 1;
        else
          v26 = 0;
        v9 = v29;
        v15 = v28;
        objc_msgSend(v22, sel_setClipsToBounds_, v26, v28, v29);

        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      }
      v14 += v15;
      --v13;
    }
    while (v13);
    sub_1BA4F6CCC((uint64_t)&v54);
  }
  return v9;
}

uint64_t FormatLayoutViewFactory.__allocating_init(formatLayoutViewRenderer:)(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  return result;
}

uint64_t FormatLayoutViewFactory.init(formatLayoutViewRenderer:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return v2;
}

void sub_1BB204E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[12];

  v10[6] = a3;
  v10[0] = type metadata accessor for FormatMicaSectionDecorationItem();
  MEMORY[0x1E0C80A78](v10[0]);
  v10[5] = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB870CFC();
  v10[3] = *(_QWORD *)(v5 - 8);
  v10[4] = v5;
  MEMORY[0x1E0C80A78](v5);
  v10[2] = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB871188();
  v10[1] = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v8 = sub_1BB870D80();
  MEMORY[0x1E0C80A78](v8);
  v9 = sub_1BB870BB8();
  MEMORY[0x1E0C80A78](v9);
  __asm { BR              X10 }
}

uint64_t sub_1BB204FA0()
{
  uint64_t v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  id v7;
  id v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;

  v5 = swift_projectBox();
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v6(v2, v5, v0);
  v7 = objc_msgSend(objc_allocWithZone((Class)sub_1BB870BD0()), sel_initWithFrame_, *v1, v1[1], v1[2], v1[3]);
  v8 = objc_msgSend(objc_allocWithZone((Class)sub_1BB86F418()), sel_init);
  v9 = MEMORY[0x1E0DBA760];
  *(_QWORD *)(v4 - 128) = v0;
  *(_QWORD *)(v4 - 120) = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v4 - 152));
  v6((uint64_t)boxed_opaque_existential_0, v2, v0);
  sub_1BB86F400();
  sub_1BB870BC4();
  objc_msgSend(*(id *)(v4 - 160), sel_addSubview_, v7);

  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v0);
}

uint64_t FormatLayoutViewFactory.deinit()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  return v0;
}

uint64_t FormatLayoutViewFactory.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatLayoutViewFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLayoutViewFactory.__allocating_init(formatLayoutViewRenderer:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t HeadlineViewLayout.Options.init(traits:thumbnailAspectRatio:maxTitleLines:contentSizeCategory:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  int *v9;
  uint64_t result;

  *a5 = *a1;
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  result = sub_1BA646EFC(a2, (uint64_t)a5 + v9[5], (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8]);
  *(_QWORD *)((char *)a5 + v9[6]) = a3;
  *(_QWORD *)((char *)a5 + v9[7]) = a4;
  return result;
}

uint64_t HeadlineViewLayout.frame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.titleLabelFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.accessoryLabelFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.excerptLabelFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.publisherLogoImageViewFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.publisherLabelFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.mediaViewFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.mediaViewRoundedCorners.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.mediaViewRoundedCornerRadius.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.videoButtonFrame.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.statusIconViewFrame.getter()
{
  return swift_retain();
}

double HeadlineViewLayout.Attributes.frame.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

double HeadlineViewLayout.Attributes.titleLabelFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

double HeadlineViewLayout.Attributes.publisherLabelFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

double HeadlineViewLayout.Attributes.accessoryLabelFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 96);
}

double HeadlineViewLayout.Attributes.excerptLabelFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 128);
}

double HeadlineViewLayout.Attributes.videoButtonFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

double HeadlineViewLayout.Attributes.statusIconViewFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 192);
}

double HeadlineViewLayout.Attributes.mediaViewFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 224);
}

uint64_t HeadlineViewLayout.Attributes.mediaViewRoundedCorners.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

double HeadlineViewLayout.Attributes.mediaViewRoundedCornerRadius.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 264);
}

double HeadlineViewLayout.Attributes.publisherLogoImageViewFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 272);
}

uint64_t sub_1BB2055E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB20817C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB205604()
{
  sub_1BA62E8CC();
  return sub_1BB874710();
}

uint64_t sub_1BB20562C()
{
  sub_1BA62E8CC();
  return sub_1BB87471C();
}

uint64_t HeadlineViewLayout.Attributes.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  char v54;

  sub_1BA4CDF6C(0, &qword_1EF2BDEB0, (uint64_t (*)(void))sub_1BA62E8CC, (uint64_t)&type metadata for HeadlineViewLayout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v25 - v6;
  v49 = *v1;
  v8 = *((_QWORD *)v1 + 2);
  v9 = *((_QWORD *)v1 + 3);
  v10 = *((_QWORD *)v1 + 4);
  v47 = *((_QWORD *)v1 + 5);
  v48 = v10;
  v11 = *((_QWORD *)v1 + 6);
  v45 = *((_QWORD *)v1 + 7);
  v46 = v11;
  v12 = *((_QWORD *)v1 + 8);
  v43 = *((_QWORD *)v1 + 9);
  v44 = v12;
  v41 = *((_QWORD *)v1 + 10);
  v40 = *((_QWORD *)v1 + 11);
  v37 = v1[6];
  v39 = *((_QWORD *)v1 + 14);
  v38 = *((_QWORD *)v1 + 15);
  v34 = v1[8];
  v36 = *((_QWORD *)v1 + 18);
  v35 = *((_QWORD *)v1 + 19);
  v31 = v1[10];
  v33 = *((_QWORD *)v1 + 22);
  v32 = *((_QWORD *)v1 + 23);
  v28 = v1[12];
  v30 = *((_QWORD *)v1 + 26);
  v29 = *((_QWORD *)v1 + 27);
  v42 = *((_QWORD *)v1 + 28);
  v26 = *((_QWORD *)v1 + 29);
  v13 = *((_QWORD *)v1 + 31);
  v27 = *((_QWORD *)v1 + 30);
  v14 = *((_QWORD *)v1 + 32);
  v16 = *((_QWORD *)v1 + 33);
  v15 = *((_QWORD *)v1 + 34);
  v17 = *((_QWORD *)v1 + 35);
  v18 = *((_QWORD *)v1 + 36);
  v19 = *((_QWORD *)v1 + 37);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BA62E8CC();
  sub_1BB8746C8();
  v51 = v49;
  v52 = v8;
  v53 = v9;
  v54 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  v20 = v50;
  sub_1BB8741AC();
  if (!v20)
  {
    v22 = v43;
    v21 = v44;
    v50 = v13;
    v23 = v42;
    *(_QWORD *)&v51 = v48;
    *((_QWORD *)&v51 + 1) = v47;
    v52 = v46;
    v53 = v45;
    v54 = 1;
    sub_1BB8741AC();
    *(_QWORD *)&v51 = v21;
    *((_QWORD *)&v51 + 1) = v22;
    v52 = v41;
    v53 = v40;
    v54 = 2;
    sub_1BB8741AC();
    v51 = v37;
    v52 = v39;
    v53 = v38;
    v54 = 3;
    sub_1BB8741AC();
    v51 = v34;
    v52 = v36;
    v53 = v35;
    v54 = 4;
    sub_1BB8741AC();
    v51 = v31;
    v52 = v33;
    v53 = v32;
    v54 = 5;
    sub_1BB8741AC();
    v51 = v28;
    v52 = v30;
    v53 = v29;
    v54 = 6;
    sub_1BB8741AC();
    *(_QWORD *)&v51 = v23;
    *((_QWORD *)&v51 + 1) = v26;
    v52 = v27;
    v53 = v50;
    v54 = 7;
    sub_1BB8741AC();
    v50 = v5;
    *(_QWORD *)&v51 = v14;
    v54 = 8;
    type metadata accessor for UIRectCorner(0);
    sub_1BA4A2870(&qword_1EF2A9A20, (uint64_t (*)(uint64_t))type metadata accessor for UIRectCorner, MEMORY[0x1E0DB64F8]);
    sub_1BB8741AC();
    *(_QWORD *)&v51 = v16;
    v54 = 9;
    sub_1BA5ED248();
    sub_1BB8741AC();
    *(_QWORD *)&v51 = v15;
    *((_QWORD *)&v51 + 1) = v17;
    v52 = v18;
    v53 = v19;
    v54 = 10;
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_1BB205C2C()
{
  uint64_t v0;

  return *(double *)(v0 + 224);
}

uint64_t sub_1BB205C38()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 256);
}

double sub_1BB205C40()
{
  uint64_t v0;

  return *(double *)(v0 + 264);
}

double sub_1BB205C48()
{
  uint64_t v0;

  return *(double *)(v0 + 272);
}

uint64_t sub_1BB205C54()
{
  sub_1BB2085D4();
  return sub_1BB870FF0();
}

uint64_t sub_1BB205C7C(_QWORD *a1)
{
  return HeadlineViewLayout.Attributes.encode(to:)(a1);
}

uint64_t sub_1BB205C90()
{
  sub_1BA6592A0();
  return sub_1BB86D96C();
}

uint64_t HeadlineViewLayout.Context.key.getter()
{
  return swift_retain();
}

uint64_t HeadlineViewLayout.Context.model.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB2062F0(type metadata accessor for HeadlineViewLayout.Context, sub_1BA76C878, a1);
}

uint64_t HeadlineViewLayout.Context.styler.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 24);
  return sub_1BA4C010C(v3, a1);
}

uint64_t sub_1BB205D44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = objc_msgSend(*(id *)(a2 + 40), sel_title);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BB8729A0();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xE000000000000000;
  }
  v12 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 40))(v9, v11, v5, v6);
  result = swift_bridgeObjectRelease();
  *a3 = v12;
  return result;
}

uint64_t sub_1BB205DF0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;

  v5 = a1[3];
  v6 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v5);
  v7 = objc_msgSend(*(id *)(a2 + 40), sel_sourceName);
  if (v7)
  {
    v8 = v7;
    v9 = sub_1BB8729A0();
    v11 = v10;

  }
  else
  {
    v9 = 0;
    v11 = 0xE000000000000000;
  }
  v12 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v6 + 64))(v9, v11, v5, v6);
  result = swift_bridgeObjectRelease();
  *a3 = v12;
  return result;
}

uint64_t sub_1BB205E9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - v7;
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = objc_msgSend(*(id *)(a2 + 40), sel_publishDate);
  if (v11)
  {
    v12 = v11;
    sub_1BB86C874();

    v13 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v8, 0, 1, v13);
  }
  else
  {
    v14 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v8, 1, 1, v14);
  }
  v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 56))(v8, v9, v10);
  result = sub_1BA76D750((uint64_t)v8);
  *a3 = v15;
  return result;
}

uint64_t sub_1BB205FC4(uint64_t a1)
{
  return sub_1BB2063D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BB205D44);
}

uint64_t sub_1BB205FD0@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t result;
  uint64_t v33;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v33 - v8;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9FB0, (uint64_t (*)(uint64_t))sub_1BA76D834, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87FC80;
  v11 = *(void **)(a1 + 40);
  v12 = objc_msgSend(v11, sel_sourceName);
  if (v12)
  {
    v13 = v12;
    v14 = sub_1BB8729A0();
    v16 = v15;

  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  *(_QWORD *)(v10 + 32) = v14;
  *(_QWORD *)(v10 + 40) = v16;
  v17 = objc_msgSend(v11, sel_title);
  if (v17)
  {
    v18 = v17;
    v19 = sub_1BB8729A0();
    v21 = v20;

  }
  else
  {
    v19 = 0;
    v21 = 0;
  }
  *(_QWORD *)(v10 + 48) = v19;
  *(_QWORD *)(v10 + 56) = v21;
  v22 = objc_msgSend(v11, sel_publishDate);
  if (v22)
  {
    v23 = v22;
    sub_1BB86C874();

    v24 = sub_1BB86C8B0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 0, 1, v24);
  }
  else
  {
    v24 = sub_1BB86C8B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v6, 1, 1, v24);
  }
  sub_1BA646EFC((uint64_t)v6, (uint64_t)v9, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870]);
  sub_1BB86C8B0();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v9, 1, v24) == 1)
  {
    sub_1BA76D750((uint64_t)v9);
    v26 = 0;
    v27 = 0;
  }
  else
  {
    v26 = sub_1BB86C754();
    v27 = v28;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v24);
  }
  *(_QWORD *)(v10 + 64) = v26;
  *(_QWORD *)(v10 + 72) = v27;
  v29 = sub_1BB86F748();
  v31 = v30;
  result = swift_bridgeObjectRelease();
  *a2 = v29;
  a2[1] = v31;
  return result;
}

uint64_t static HeadlineViewLayout.Context.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(int *)(type metadata accessor for HeadlineViewLayout.Context(0) + 20);
  v5 = *(_QWORD *)(a1 + v4);
  v6 = *(_QWORD *)(a1 + v4 + 8);
  v7 = (_QWORD *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1])
    return 1;
  else
    return sub_1BB874398();
}

uint64_t sub_1BB20629C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  v3 = *(int *)(a3 + 20);
  if (*(_QWORD *)(a1 + v3) == *(_QWORD *)(a2 + v3) && *(_QWORD *)(a1 + v3 + 8) == *(_QWORD *)(a2 + v3 + 8))
    return 1;
  else
    return sub_1BB874398();
}

void HeadlineViewLayout.Options.traits.getter(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t HeadlineViewLayout.Options.thumbnailAspectRatio.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1BB2062F0(type metadata accessor for HeadlineViewLayout.Options, sub_1BB2064DC, a1);
}

uint64_t sub_1BB2062F0@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  v5 = v3 + *(int *)(a1(0) + 20);
  return a2(v5, a3);
}

uint64_t HeadlineViewLayout.Options.maxTitleLines.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for HeadlineViewLayout.Options(0) + 24));
}

id HeadlineViewLayout.Options.contentSizeCategory.getter()
{
  uint64_t v0;

  return *(id *)(v0 + *(int *)(type metadata accessor for HeadlineViewLayout.Options(0) + 28));
}

NewsFeed::HeadlineViewLayout::Traits __swiftcall HeadlineViewLayout.Traits.init(rawValue:)(NewsFeed::HeadlineViewLayout::Traits rawValue)
{
  NewsFeed::HeadlineViewLayout::Traits *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static HeadlineViewLayout.Traits.allowExcerpt.getter(_QWORD *a1@<X8>)
{
  *a1 = 1;
}

void static HeadlineViewLayout.Traits.noThumbnail.getter(_QWORD *a1@<X8>)
{
  *a1 = 2;
}

void static HeadlineViewLayout.Traits.noPublisherLogo.getter(_QWORD *a1@<X8>)
{
  *a1 = 4;
}

uint64_t HeadlineViewLayout.Traits.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1BB2063B4(uint64_t a1)
{
  return sub_1BB2063D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BB205DF0);
}

uint64_t sub_1BB2063C8(uint64_t a1)
{
  return sub_1BB2063D4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1BB205E9C);
}

uint64_t sub_1BB2063D4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  return a2(a1, v2 + ((v4 + 16) & ~v4));
}

uint64_t sub_1BB206438@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FeedHeadline(0) - 8) + 80);
  return sub_1BB205FD0(v1 + ((v3 + 16) & ~v3), a1);
}

uint64_t sub_1BB206484()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB2064B0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_1BB73941C(a1, *(void (**)(_OWORD *__return_ptr, _BYTE *))(v2 + 16), *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40));
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_1BB2064DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1BB20653C()
{
  unint64_t result;

  result = qword_1EF2BDEB8;
  if (!qword_1EF2BDEB8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Attributes, &type metadata for HeadlineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BDEB8);
  }
  return result;
}

unint64_t sub_1BB206584()
{
  unint64_t result;

  result = qword_1EF2BDEC0;
  if (!qword_1EF2BDEC0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Traits, &type metadata for HeadlineViewLayout.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2BDEC0);
  }
  return result;
}

unint64_t sub_1BB2065CC()
{
  unint64_t result;

  result = qword_1EF2BDEC8;
  if (!qword_1EF2BDEC8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Traits, &type metadata for HeadlineViewLayout.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2BDEC8);
  }
  return result;
}

unint64_t sub_1BB206614()
{
  unint64_t result;

  result = qword_1EF2BDED0;
  if (!qword_1EF2BDED0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Traits, &type metadata for HeadlineViewLayout.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2BDED0);
  }
  return result;
}

unint64_t sub_1BB20665C()
{
  unint64_t result;

  result = qword_1EF2BDED8;
  if (!qword_1EF2BDED8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Traits, &type metadata for HeadlineViewLayout.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2BDED8);
  }
  return result;
}

_QWORD *assignWithCopy for HeadlineViewLayout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  a1[8] = a2[8];
  swift_retain();
  swift_release();
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for HeadlineViewLayout(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_release();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_release();
  return a1;
}

void *__swift_memcpy304_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x130uLL);
}

_QWORD *initializeBufferWithCopyOfBuffer for HeadlineViewLayout.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  int *v16;
  unsigned int (*v17)(char *, uint64_t, int *);
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  id v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  __int128 v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  id v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *__dst;
  int *v53;
  char *v57;
  char *v58;

  v3 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v19 = (_QWORD *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    v5 = a3[5];
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = *(_QWORD *)((char *)a2 + v5 + 8);
    *(_QWORD *)v6 = *(_QWORD *)((char *)a2 + v5);
    *((_QWORD *)v6 + 1) = v8;
    *((_QWORD *)v6 + 2) = *(_QWORD *)((char *)a2 + v5 + 16);
    v6[24] = *((_BYTE *)a2 + v5 + 24);
    v9 = *(_QWORD *)((char *)a2 + v5 + 40);
    *((_QWORD *)v6 + 4) = *(_QWORD *)((char *)a2 + v5 + 32);
    *((_QWORD *)v6 + 5) = v9;
    *((_QWORD *)v6 + 6) = *(_QWORD *)((char *)a2 + v5 + 48);
    v6[56] = *((_BYTE *)a2 + v5 + 56);
    v53 = (int *)type metadata accessor for FeedHeadline(0);
    v10 = v53[10];
    v11 = &v6[v10];
    v12 = &v7[v10];
    *v11 = v7[v10];
    v11[1] = v7[v10 + 1];
    v13 = (int *)type metadata accessor for FeedHeadline.State(0);
    v14 = v13[6];
    __dst = &v11[v14];
    v15 = &v12[v14];
    v16 = (int *)type metadata accessor for SharedItem();
    v51 = *((_QWORD *)v16 - 1);
    v17 = *(unsigned int (**)(char *, uint64_t, int *))(v51 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    if (v17(v15, 1, v16))
    {
      v18 = type metadata accessor for FeedItem.SharedState(0);
      memcpy(__dst, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v20 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(__dst, v15, v20);
      __dst[v16[5]] = v15[v16[5]];
      v21 = v16[6];
      v22 = *(void **)&v15[v21];
      *(_QWORD *)&__dst[v21] = v22;
      v23 = v16[7];
      v57 = &v15[v23];
      v58 = &__dst[v23];
      v24 = sub_1BB86C67C();
      v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
      v26 = v22;
      v25(v58, v57, v24);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v51 + 56))(__dst, 0, 1, v16);
    }
    v19 = a1;
    v11[v13[7]] = v12[v13[7]];
    v11[v13[8]] = v12[v13[8]];
    v11[v13[9]] = v12[v13[9]];
    v11[v13[10]] = v12[v13[10]];
    v27 = v53[11];
    v28 = &v6[v27];
    v29 = &v7[v27];
    v30 = sub_1BB871B24();
    v31 = *(_QWORD *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v33 = v53[12];
    v34 = &v6[v33];
    v35 = &v7[v33];
    v36 = *((_QWORD *)v35 + 1);
    if (v36 >= 0x11)
    {
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    v37 = v53[13];
    v38 = *(_QWORD *)&v7[v37];
    if (v38 >= 2)
    {
      if (v38 == 2)
      {
        *(_QWORD *)&v6[v37] = 2;
      }
      else
      {
        *(_QWORD *)&v6[v37] = v38;
        swift_unknownObjectRetain();
      }
    }
    else
    {
      *(_QWORD *)&v6[v37] = v38;
    }
    v39 = v53[14];
    v40 = *(void **)&v7[v39];
    *(_QWORD *)&v6[v39] = v40;
    v41 = a3[6];
    v42 = (char *)a1 + v41;
    v43 = (char *)a2 + v41;
    v44 = *(_OWORD *)((char *)a2 + v41 + 24);
    *(_OWORD *)((char *)a1 + v41 + 24) = v44;
    v45 = v44;
    v46 = **(void (***)(char *, char *, uint64_t))(v44 - 8);
    v47 = v40;
    v46(v42, v43, v45);
    v48 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v48) = *(_QWORD *)((char *)a2 + v48);
    v49 = a3[10];
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
    *(_QWORD *)((char *)a1 + v49) = *(_QWORD *)((char *)a2 + v49);
    *(_QWORD *)((char *)a1 + a3[11]) = *(_QWORD *)((char *)a2 + a3[11]);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v19;
}

_QWORD *assignWithCopy for HeadlineViewLayout.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t (*v18)(char *, uint64_t, int *);
  int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  id v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  void *v59;
  id v60;
  char *v62;
  char *v63;
  uint64_t v64;
  int *v65;
  int *v66;
  _QWORD *v67;
  _QWORD *v68;

  *a1 = *a2;
  swift_retain();
  swift_release();
  v66 = a3;
  v67 = a2;
  v6 = a3[5];
  v68 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)v8 + 2);
  v7[24] = v8[24];
  *((_QWORD *)v7 + 2) = v9;
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = *((_QWORD *)v8 + 5);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v7[56] = v8[56];
  v65 = (int *)type metadata accessor for FeedHeadline(0);
  v10 = v65[10];
  v11 = &v7[v10];
  v12 = &v8[v10];
  *v11 = v8[v10];
  v11[1] = v8[v10 + 1];
  v13 = (int *)type metadata accessor for FeedHeadline.State(0);
  v14 = v13[6];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = (int *)type metadata accessor for SharedItem();
  v64 = *((_QWORD *)v17 - 1);
  v18 = *(uint64_t (**)(char *, uint64_t, int *))(v64 + 48);
  v19 = v18(v15, 1, v17);
  v20 = v18(v16, 1, v17);
  if (v19)
  {
    if (!v20)
    {
      v21 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v15, v16, v21);
      v15[v17[5]] = v16[v17[5]];
      v22 = v17[6];
      v23 = *(void **)&v16[v22];
      *(_QWORD *)&v15[v22] = v23;
      v24 = v17[7];
      v62 = &v16[v24];
      v63 = &v15[v24];
      v25 = sub_1BB86C67C();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v27 = v23;
      v26(v63, v62, v25);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v64 + 56))(v15, 0, 1, v17);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_6:
    v28 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_7;
  }
  v48 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 24))(v15, v16, v48);
  v15[v17[5]] = v16[v17[5]];
  v49 = v17[6];
  v50 = *(void **)&v16[v49];
  v51 = *(void **)&v15[v49];
  *(_QWORD *)&v15[v49] = v50;
  v52 = v50;

  v53 = v17[7];
  v54 = &v15[v53];
  v55 = &v16[v53];
  v56 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 24))(v54, v55, v56);
LABEL_7:
  v11[v13[7]] = v12[v13[7]];
  v11[v13[8]] = v12[v13[8]];
  v11[v13[9]] = v12[v13[9]];
  v11[v13[10]] = v12[v13[10]];
  v29 = v65[11];
  v30 = &v7[v29];
  v31 = &v8[v29];
  v32 = sub_1BB871B24();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v36)
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 24))(v30, v31, v32);
LABEL_13:
  v38 = v65[12];
  v39 = &v7[v38];
  v40 = &v8[v38];
  v41 = *(_QWORD *)&v7[v38 + 8];
  v42 = *(_QWORD *)&v8[v38 + 8];
  if (v41 < 0x11)
  {
    if (v42 >= 0x11)
    {
      *(_QWORD *)v39 = *(_QWORD *)v40;
      *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_20;
    }
    goto LABEL_18;
  }
  if (v42 < 0x11)
  {
    sub_1BA905D68((uint64_t)v39);
LABEL_18:
    *(_OWORD *)v39 = *(_OWORD *)v40;
    goto LABEL_20;
  }
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *((_QWORD *)v39 + 1) = *((_QWORD *)v40 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_20:
  v43 = v65[13];
  v44 = &v7[v43];
  v45 = *(_QWORD *)&v7[v43];
  v46 = *(_QWORD *)&v8[v43];
  if (v45 == 2)
  {
    if (v46 >= 2)
    {
      if (v46 == 2)
      {
        v47 = 2;
LABEL_35:
        *(_QWORD *)v44 = v47;
        goto LABEL_36;
      }
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  if (v46 == 2)
  {
    sub_1BA905D9C((uint64_t)&v7[v43]);
LABEL_34:
    v47 = *(_QWORD *)&v8[v43];
    goto LABEL_35;
  }
  if (v45 >= 2)
  {
    if (v46 >= 2)
    {
      *(_QWORD *)v44 = v46;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      goto LABEL_36;
    }
    swift_unknownObjectRelease();
    goto LABEL_34;
  }
  if (v46 >= 2)
  {
LABEL_29:
    *(_QWORD *)v44 = v46;
    swift_unknownObjectRetain();
    goto LABEL_36;
  }
LABEL_28:
  *(_QWORD *)v44 = v46;
LABEL_36:
  v57 = v65[14];
  v58 = *(void **)&v7[v57];
  v59 = *(void **)&v8[v57];
  *(_QWORD *)&v7[v57] = v59;
  v60 = v59;

  __swift_assign_boxed_opaque_existential_1((_QWORD *)((char *)v68 + v66[6]), (_QWORD *)((char *)v67 + v66[6]));
  *(_QWORD *)((char *)v68 + v66[7]) = *(_QWORD *)((char *)v67 + v66[7]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v68 + v66[8]) = *(_QWORD *)((char *)v67 + v66[8]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v68 + v66[9]) = *(_QWORD *)((char *)v67 + v66[9]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v68 + v66[10]) = *(_QWORD *)((char *)v67 + v66[10]);
  swift_retain();
  swift_release();
  *(_QWORD *)((char *)v68 + v66[11]) = *(_QWORD *)((char *)v67 + v66[11]);
  swift_retain();
  swift_release();
  return v68;
}

_QWORD *initializeWithTake for HeadlineViewLayout.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  char *v37;
  uint64_t v38;
  int *v39;

  *a1 = *a2;
  v5 = a3[5];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *(_OWORD *)v6 = *(_OWORD *)((char *)a2 + v5);
  v6[24] = *((_BYTE *)a2 + v5 + 24);
  *((_QWORD *)v6 + 2) = *(_QWORD *)((char *)a2 + v5 + 16);
  *((_QWORD *)v6 + 4) = *(_QWORD *)((char *)a2 + v5 + 32);
  *(_OWORD *)(v6 + 40) = *(_OWORD *)((char *)a2 + v5 + 40);
  v6[56] = *((_BYTE *)a2 + v5 + 56);
  v39 = (int *)type metadata accessor for FeedHeadline(0);
  v8 = v39[10];
  v9 = &v6[v8];
  v10 = &v7[v8];
  *v9 = v7[v8];
  v9[1] = v7[v8 + 1];
  v11 = (int *)type metadata accessor for FeedHeadline.State(0);
  v12 = v11[6];
  v13 = &v9[v12];
  v14 = &v10[v12];
  v15 = (int *)type metadata accessor for SharedItem();
  v38 = *((_QWORD *)v15 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v38 + 48))(v14, 1, v15))
  {
    v16 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = sub_1BB86C8B0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v13, v14, v17);
    v13[v15[5]] = v14[v15[5]];
    *(_QWORD *)&v13[v15[6]] = *(_QWORD *)&v14[v15[6]];
    v18 = v15[7];
    v37 = &v13[v18];
    v19 = &v14[v18];
    v20 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v37, v19, v20);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v38 + 56))(v13, 0, 1, v15);
  }
  v9[v11[7]] = v10[v11[7]];
  v9[v11[8]] = v10[v11[8]];
  v9[v11[9]] = v10[v11[9]];
  v9[v11[10]] = v10[v11[10]];
  v21 = v39[11];
  v22 = &v6[v21];
  v23 = &v7[v21];
  v24 = sub_1BB871B24();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  }
  *(_OWORD *)&v6[v39[12]] = *(_OWORD *)&v7[v39[12]];
  v27 = v39[13];
  v28 = *(_QWORD *)&v7[v27];
  if (v28 == 2)
    v28 = 2;
  *(_QWORD *)&v6[v27] = v28;
  *(_QWORD *)&v6[v39[14]] = *(_QWORD *)&v7[v39[14]];
  v29 = a3[6];
  v30 = a3[7];
  v31 = (char *)a1 + v29;
  v32 = (char *)a2 + v29;
  v33 = *((_OWORD *)v32 + 1);
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *((_OWORD *)v31 + 1) = v33;
  *((_QWORD *)v31 + 4) = *((_QWORD *)v32 + 4);
  *(_QWORD *)((char *)a1 + v30) = *(_QWORD *)((char *)a2 + v30);
  v34 = a3[9];
  *(_QWORD *)((char *)a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  *(_QWORD *)((char *)a1 + v34) = *(_QWORD *)((char *)a2 + v34);
  v35 = a3[11];
  *(_QWORD *)((char *)a1 + a3[10]) = *(_QWORD *)((char *)a2 + a3[10]);
  *(_QWORD *)((char *)a1 + v35) = *(_QWORD *)((char *)a2 + v35);
  return a1;
}

_QWORD *assignWithTake for HeadlineViewLayout.Context(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  int *v18;
  uint64_t (*v19)(char *, uint64_t, int *);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t *v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  __int128 v57;
  uint64_t v59;
  int *v60;
  int *v61;
  _QWORD *v62;
  _QWORD *v63;

  *a1 = *a2;
  swift_release();
  v61 = a3;
  v62 = a2;
  v6 = a3[5];
  v63 = a1;
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = *(_QWORD *)((char *)a2 + v6 + 8);
  *(_QWORD *)v7 = *(_QWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = v9;
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  v7[24] = v8[24];
  v10 = *((_QWORD *)v8 + 5);
  *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 5) = v10;
  swift_unknownObjectRelease();
  *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
  swift_unknownObjectRelease();
  v7[56] = v8[56];
  v60 = (int *)type metadata accessor for FeedHeadline(0);
  v11 = v60[10];
  v12 = &v7[v11];
  v13 = &v8[v11];
  *v12 = v8[v11];
  v12[1] = v8[v11 + 1];
  v14 = (int *)type metadata accessor for FeedHeadline.State(0);
  v15 = v14[6];
  v16 = &v12[v15];
  v17 = &v13[v15];
  v18 = (int *)type metadata accessor for SharedItem();
  v59 = *((_QWORD *)v18 - 1);
  v19 = *(uint64_t (**)(char *, uint64_t, int *))(v59 + 48);
  v20 = v19(v16, 1, v18);
  v21 = v19(v17, 1, v18);
  if (v20)
  {
    if (!v21)
    {
      v22 = sub_1BB86C8B0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v16, v17, v22);
      v16[v18[5]] = v17[v18[5]];
      *(_QWORD *)&v16[v18[6]] = *(_QWORD *)&v17[v18[6]];
      v23 = v18[7];
      v24 = &v16[v23];
      v25 = &v17[v23];
      v26 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v59 + 56))(v16, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for SharedItem);
LABEL_6:
    v27 = type metadata accessor for FeedItem.SharedState(0);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_7;
  }
  v45 = sub_1BB86C8B0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v45 - 8) + 40))(v16, v17, v45);
  v16[v18[5]] = v17[v18[5]];
  v46 = v18[6];
  v47 = *(void **)&v16[v46];
  *(_QWORD *)&v16[v46] = *(_QWORD *)&v17[v46];

  v48 = v18[7];
  v49 = &v16[v48];
  v50 = &v17[v48];
  v51 = sub_1BB86C67C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
LABEL_7:
  v12[v14[7]] = v13[v14[7]];
  v12[v14[8]] = v13[v14[8]];
  v12[v14[9]] = v13[v14[9]];
  v12[v14[10]] = v13[v14[10]];
  v28 = v60[11];
  v29 = &v7[v28];
  v30 = &v8[v28];
  v31 = sub_1BB871B24();
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v29, v30, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v31);
LABEL_12:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v32 + 40))(v29, v30, v31);
LABEL_13:
  v37 = v60[12];
  v38 = (uint64_t)&v7[v37];
  v39 = &v8[v37];
  if (*(_QWORD *)&v7[v37 + 8] < 0x11uLL)
  {
LABEL_16:
    *(_OWORD *)v38 = *(_OWORD *)v39;
    goto LABEL_18;
  }
  v40 = *((_QWORD *)v39 + 1);
  if (v40 < 0x11)
  {
    sub_1BA905D68(v38);
    goto LABEL_16;
  }
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_QWORD *)(v38 + 8) = v40;
  swift_bridgeObjectRelease();
LABEL_18:
  v41 = v60[13];
  v42 = (unint64_t *)&v7[v41];
  v43 = *(_QWORD *)&v7[v41];
  v44 = *(_QWORD *)&v8[v41];
  if (v43 == 2)
  {
    if (v44 == 2)
      v44 = 2;
    goto LABEL_30;
  }
  if (v44 == 2)
  {
    sub_1BA905D9C((uint64_t)&v7[v41]);
  }
  else
  {
    if (v43 < 2)
      goto LABEL_30;
    if (v44 >= 2)
    {
      *v42 = v44;
      swift_unknownObjectRelease();
      goto LABEL_31;
    }
    swift_unknownObjectRelease();
  }
  v44 = *(_QWORD *)&v8[v41];
LABEL_30:
  *v42 = v44;
LABEL_31:
  v52 = v60[14];
  v53 = *(void **)&v7[v52];
  *(_QWORD *)&v7[v52] = *(_QWORD *)&v8[v52];

  v54 = v61[6];
  v55 = (char *)v63 + v54;
  v56 = (char *)v62 + v54;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63 + v54);
  v57 = *((_OWORD *)v56 + 1);
  *(_OWORD *)v55 = *(_OWORD *)v56;
  *((_OWORD *)v55 + 1) = v57;
  *((_QWORD *)v55 + 4) = *((_QWORD *)v56 + 4);
  *(_QWORD *)((char *)v63 + v61[7]) = *(_QWORD *)((char *)v62 + v61[7]);
  swift_release();
  *(_QWORD *)((char *)v63 + v61[8]) = *(_QWORD *)((char *)v62 + v61[8]);
  swift_release();
  *(_QWORD *)((char *)v63 + v61[9]) = *(_QWORD *)((char *)v62 + v61[9]);
  swift_release();
  *(_QWORD *)((char *)v63 + v61[10]) = *(_QWORD *)((char *)v62 + v61[10]);
  swift_release();
  *(_QWORD *)((char *)v63 + v61[11]) = *(_QWORD *)((char *)v62 + v61[11]);
  swift_release();
  return v63;
}

uint64_t sub_1BB207974(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for FeedHeadline(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

char *sub_1BB2079F0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for FeedHeadline(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeadlineViewLayout.Options(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1BB86DA20();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    v15 = *(void **)((char *)a2 + v14);
    *(uint64_t *)((char *)v4 + v14) = (uint64_t)v15;
    v16 = v15;
  }
  return v4;
}

_QWORD *assignWithCopy for HeadlineViewLayout.Options(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DA20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v15 = a3[7];
  v16 = *(void **)((char *)a2 + v15);
  v17 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = v16;
  v18 = v16;

  return a1;
}

_QWORD *initializeWithTake for HeadlineViewLayout.Options(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DA20();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  *(_QWORD *)((char *)a1 + v12) = *(_QWORD *)((char *)a2 + v12);
  return a1;
}

_QWORD *assignWithTake for HeadlineViewLayout.Options(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1BB86DA20();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[7];
  *(_QWORD *)((char *)a1 + a3[6]) = *(_QWORD *)((char *)a2 + a3[6]);
  v16 = *(void **)((char *)a1 + v15);
  *(_QWORD *)((char *)a1 + v15) = *(_QWORD *)((char *)a2 + v15);

  return a1;
}

uint64_t getEnumTagSinglePayload for HeadlineViewLayout.Options()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB207F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for HeadlineViewLayout.Options()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BB207FC4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B06F0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB61D8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
}

ValueMetadata *type metadata accessor for HeadlineViewLayout.Traits()
{
  return &type metadata for HeadlineViewLayout.Traits;
}

uint64_t storeEnumTagSinglePayload for HeadlineViewLayout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_1BB2080B4 + 4 * byte_1BB8FA030[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_1BB2080E8 + 4 * byte_1BB8FA02B[v4]))();
}

uint64_t sub_1BB2080E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2080F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2080F8);
  return result;
}

uint64_t sub_1BB208104(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB20810CLL);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_1BB208110(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB208118(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for HeadlineViewLayout.Attributes.CodingKeys()
{
  return &type metadata for HeadlineViewLayout.Attributes.CodingKeys;
}

unint64_t sub_1BB208138()
{
  unint64_t result;

  result = qword_1EF2BDEE0;
  if (!qword_1EF2BDEE0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA55C, &type metadata for HeadlineViewLayout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDEE0);
  }
  return result;
}

uint64_t sub_1BB20817C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656D617266 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x62614C656C746974 && a2 == 0xEF656D6172466C65 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB97FA20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB97FA40 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB97FA60 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB97FA80 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB97FAA0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x656956616964656DLL && a2 == 0xEE00656D61724677 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB97FAC0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001BB97FAE0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001BB97FB00)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 10;
    else
      return 11;
  }
}

unint64_t sub_1BB2085D4()
{
  unint64_t result;

  result = qword_1EF2BDEE8;
  if (!qword_1EF2BDEE8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for HeadlineViewLayout.Attributes, &type metadata for HeadlineViewLayout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BDEE8);
  }
  return result;
}

uint64_t sub_1BB208618()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB20863C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v5 = *(_QWORD *)(v2 + 16);
  v4 = *(_QWORD *)(v2 + 24);
  v6 = a1[3];
  v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, v4, v6, v7);
  *a2 = result;
  return result;
}

id sub_1BB2086A0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  id result;

  result = sub_1BB7393F8(a1, *(void (**)(_OWORD *__return_ptr, _BYTE *))(v2 + 16), *(_QWORD *)(v2 + 24), *(void **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t FormatItemNodeLayoutAttributes.layoutAttributes.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t FormatItemNodeLayoutAttributes.resizingGroupIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

uint64_t FormatItemNodeLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 64);
}

unint64_t FormatItemNodeLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

_QWORD *FormatItemNodeLayoutAttributes.__allocating_init(layoutAttributes:style:resizing:resizingGroupIdentifier:contextLayoutOptions:zIndex:visibility:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  _QWORD *result;
  uint64_t v17;
  uint64_t v18;

  result = (_QWORD *)swift_allocObject();
  v17 = *a3;
  v18 = *a8;
  result[2] = a1;
  result[3] = a2;
  result[4] = v17;
  result[5] = a4;
  result[6] = a5;
  result[7] = a6;
  result[8] = a7;
  result[9] = v18;
  return result;
}

_QWORD *FormatItemNodeLayoutAttributes.init(layoutAttributes:style:resizing:resizingGroupIdentifier:contextLayoutOptions:zIndex:visibility:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  v9 = *a3;
  v10 = *a8;
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v9;
  v8[5] = a4;
  v8[6] = a5;
  v8[7] = a6;
  v8[8] = a7;
  v8[9] = v10;
  return v8;
}

double FormatItemNodeLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(*(_QWORD *)(v0 + 16) + 16);
}

uint64_t FormatItemNodeLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeLayoutAttributes.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 16) + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatItemNodeLayoutAttributes.layoutValues.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatItemNodeLayoutAttributes.accessibilityValues.getter()
{
  return swift_bridgeObjectRetain();
}

void FormatItemNodeLayoutAttributes.accessibilityRole.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)(v1 + 16) + 128);
}

uint64_t sub_1BB2088C8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1BB208900 + 4 * byte_1BB8FA5E0[a1]))(0xD000000000000010, 0x80000001BB965740);
}

uint64_t sub_1BB208900()
{
  return 0x656C797473;
}

uint64_t sub_1BB208914()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB20892C(uint64_t a1)
{
  return a1 + 7;
}

uint64_t sub_1BB208954()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB208968()
{
  return 0x696C696269736976;
}

uint64_t sub_1BB208984()
{
  unsigned __int8 *v0;

  return sub_1BB2088C8(*v0);
}

uint64_t sub_1BB20898C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB209644(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB2089B0()
{
  sub_1BB208D0C();
  return sub_1BB874710();
}

uint64_t sub_1BB2089D8()
{
  sub_1BB208D0C();
  return sub_1BB87471C();
}

uint64_t FormatItemNodeLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t FormatItemNodeLayoutAttributes.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  sub_1BB2091A8(0, &qword_1EF2BDEF0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v11 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB208D0C();
  sub_1BB8746C8();
  v12 = v3[2];
  HIBYTE(v11) = 0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA50AD30(&qword_1ED3C9F28, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB8741AC();
  if (!v2)
  {
    v12 = v3[3];
    HIBYTE(v11) = 1;
    type metadata accessor for FormatItemNodeStyle(0);
    sub_1BA50AD30(&qword_1ED3A6620, 255, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
    sub_1BB87414C();
    v12 = v3[4];
    HIBYTE(v11) = 2;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v12) = 3;
    sub_1BB87411C();
    v12 = v3[7];
    HIBYTE(v11) = 4;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    LOBYTE(v12) = 5;
    sub_1BB8741A0();
    v12 = v3[9];
    HIBYTE(v11) = 6;
    sub_1BA84B088();
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB208D0C()
{
  unint64_t result;

  result = qword_1EF2BDEF8;
  if (!qword_1EF2BDEF8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA854, &type metadata for FormatItemNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDEF8);
  }
  return result;
}

uint64_t FormatItemNodeLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatItemNodeLayoutAttributes.init(from:)(a1);
  return v2;
}

_QWORD *FormatItemNodeLayoutAttributes.init(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char v13;
  uint64_t v14;

  sub_1BB2091A8(0, &qword_1EF2BDF00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v11 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v10 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB208D0C();
  v12 = v6;
  sub_1BB87468C();
  if (v2)
  {
    swift_deallocPartialClassInstance();
  }
  else
  {
    type metadata accessor for FormatLayoutAttributes();
    v13 = 0;
    sub_1BA50AD30(&qword_1ED3C9F30, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
    v7 = v11;
    sub_1BB8740D4();
    v1[2] = v14;
    type metadata accessor for FormatItemNodeStyle(0);
    v13 = 1;
    sub_1BA50AD30(&qword_1ED3C8418, 255, type metadata accessor for FormatItemNodeStyle, (uint64_t)&protocol conformance descriptor for FormatItemNodeStyle);
    sub_1BB874068();
    v1[3] = v14;
    v13 = 2;
    sub_1BA995268();
    sub_1BB874068();
    v1[4] = v14;
    LOBYTE(v14) = 3;
    v1[5] = sub_1BB87402C();
    v1[6] = v8;
    type metadata accessor for FormatContextLayoutOptions();
    v13 = 4;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    v1[7] = v14;
    LOBYTE(v14) = 5;
    v1[8] = sub_1BB8740C8();
    v13 = 6;
    sub_1BA651250();
    sub_1BB8740D4();
    MEMORY[8](v12, v7);
    v1[9] = v14;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v1;
}

void sub_1BB2091A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB208D0C();
    v7 = a3(a1, &type metadata for FormatItemNodeLayoutAttributes.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

_QWORD *sub_1BB209204@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD *result;

  v5 = swift_allocObject();
  result = FormatItemNodeLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB209258(_QWORD *a1)
{
  return FormatItemNodeLayoutAttributes.encode(to:)(a1);
}

_QWORD *sub_1BB209278@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *result;

  result = FormatItemNodeLayoutAttributes.flipRightToLeft(bounds:)();
  *a1 = result;
  return result;
}

_QWORD *FormatItemNodeLayoutAttributes.flipRightToLeft(bounds:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v11;

  v1 = v0;
  type metadata accessor for FormatLayoutAttributes();
  sub_1BA50AD30(&qword_1ED3C9F20, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatLayoutAttributes);
  sub_1BB86D96C();
  v2 = v0[3];
  v3 = v1[4];
  v5 = v1[5];
  v4 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = v1[9];
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = v11;
  v9[3] = v2;
  v9[4] = v3;
  v9[5] = v5;
  v9[6] = v4;
  v9[7] = v6;
  v9[8] = v7;
  v9[9] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BA67D3F4(v8);
  return v9;
}

uint64_t sub_1BB2093C4(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BDF08, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatItemNodeLayoutAttributes);
}

uint64_t sub_1BB2093F0(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BDF10, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatItemNodeLayoutAttributes);
}

uint64_t sub_1BB20941C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BDF18, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatItemNodeLayoutAttributes);
}

uint64_t sub_1BB209448(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BDF20, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatItemNodeLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatItemNodeLayoutAttributes);
}

uint64_t method lookup function for FormatItemNodeLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatItemNodeLayoutAttributes.__allocating_init(layoutAttributes:style:resizing:resizingGroupIdentifier:contextLayoutOptions:zIndex:visibility:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of FormatItemNodeLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB2094EC + 4 * byte_1BB8FA5EC[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB209520 + 4 * byte_1BB8FA5E7[v4]))();
}

uint64_t sub_1BB209520(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB209528(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB209530);
  return result;
}

uint64_t sub_1BB20953C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB209544);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB209548(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB209550(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatItemNodeLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatItemNodeLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB209570()
{
  unint64_t result;

  result = qword_1EF2BDF28;
  if (!qword_1EF2BDF28)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA82C, &type metadata for FormatItemNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDF28);
  }
  return result;
}

unint64_t sub_1BB2095B8()
{
  unint64_t result;

  result = qword_1EF2BDF30;
  if (!qword_1EF2BDF30)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA79C, &type metadata for FormatItemNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDF30);
  }
  return result;
}

unint64_t sub_1BB209600()
{
  unint64_t result;

  result = qword_1EF2BDF38;
  if (!qword_1EF2BDF38)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA7C4, &type metadata for FormatItemNodeLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BDF38);
  }
  return result;
}

uint64_t sub_1BB209644(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000010 && a2 == 0x80000001BB965740 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001BB97FB50 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    v5 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 6;
    else
      return 7;
  }
}

unint64_t sub_1BB209910@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(a2 + 16) > result)
  {
    v3 = (_QWORD *)(a2 + 40 * result);
    v4 = v3[5];
    v5 = v3[6];
    v6 = v3[7];
    v7 = v3[8];
    *a3 = v3[4];
    a3[1] = v4;
    a3[2] = v5;
    a3[3] = v6;
    a3[4] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

unint64_t sub_1BB209970@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4;
  uint64_t v6;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v4 = result;
    if (*(_QWORD *)(a2 + 16) > result)
    {
      v6 = type metadata accessor for FormatInspectionItem(0);
      return sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v6 - 8) + 80))+ *(_QWORD *)(*(_QWORD *)(v6 - 8) + 72) * v4, a3, type metadata accessor for FormatInspectionItem);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB2099E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  _QWORD *v23;
  int64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  int64_t v39;
  int64_t v40;
  _QWORD *isUniquelyReferenced_nonNull_native;
  int64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v46;
  uint64_t v47;
  uint64_t result;
  uint64_t v52;
  int64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;

  v5 = *(_QWORD *)(a2 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    v31 = MEMORY[0x1E0DEE9D8];
    v34 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    if (!v34)
      goto LABEL_65;
    goto LABEL_42;
  }
  v60 = MEMORY[0x1E0DEE9D8];
  sub_1BAC79E48(0, v5, 0);
  v6 = 0;
  v54 = a2 + 32;
  v53 = v5;
  while (1)
  {
    v7 = *(_QWORD *)(v54 + 8 * v6);
    v8 = *(_QWORD *)(v7 + 16);
    v55 = v6;
    if (v8)
      break;
    v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
    swift_bridgeObjectRetain();
    v10 = v17;
    if (v16)
      goto LABEL_12;
LABEL_34:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC79E48(0, *(_QWORD *)(v31 + 16) + 1, 1);
      v31 = v60;
    }
    v33 = *(_QWORD *)(v31 + 16);
    v32 = *(_QWORD *)(v31 + 24);
    if (v33 >= v32 >> 1)
    {
      sub_1BAC79E48(v32 > 1, v33 + 1, 1);
      v31 = v60;
    }
    v6 = v55 + 1;
    *(_QWORD *)(v31 + 16) = v33 + 1;
    *(_QWORD *)(v31 + 8 * v33 + 32) = v17;
    if (v55 + 1 == v53)
    {
      swift_bridgeObjectRelease();
      v34 = *(_QWORD *)(v31 + 16);
      if (!v34)
      {
LABEL_65:
        v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_66:
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, _QWORD *, uint64_t, uint64_t, _QWORD))(v52 + 360))(a1, v36, a3, a4, 0);
      }
LABEL_42:
      swift_bridgeObjectRetain();
      v35 = 0;
      v36 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      while (2)
      {
        v37 = *(_QWORD *)(v31 + 8 * v35 + 32);
        v38 = *(_QWORD *)(v37 + 16);
        v39 = v36[2];
        v40 = v39 + v38;
        if (__OFADD__(v39, v38))
          goto LABEL_71;
        swift_bridgeObjectRetain();
        isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
        if ((_DWORD)isUniquelyReferenced_nonNull_native && v40 <= v36[3] >> 1)
        {
          if (!*(_QWORD *)(v37 + 16))
          {
LABEL_43:
            if (v38)
              goto LABEL_72;
            goto LABEL_44;
          }
        }
        else
        {
          if (v39 <= v40)
            v42 = v39 + v38;
          else
            v42 = v39;
          v36 = sub_1BB38C7E8(isUniquelyReferenced_nonNull_native, v42, 1, v36);
          if (!*(_QWORD *)(v37 + 16))
            goto LABEL_43;
        }
        v43 = v36[2];
        if ((v36[3] >> 1) - v43 < v38)
          goto LABEL_73;
        v44 = (unint64_t)&v36[5 * v43 + 4];
        if (v37 + 32 < v44 + 40 * v38 && v44 < v37 + 32 + 40 * v38)
          goto LABEL_75;
        swift_arrayInitWithCopy();
        if (v38)
        {
          v46 = v36[2];
          v29 = __OFADD__(v46, v38);
          v47 = v46 + v38;
          if (v29)
            goto LABEL_74;
          v36[2] = v47;
        }
LABEL_44:
        ++v35;
        swift_bridgeObjectRelease();
        if (v34 == v35)
        {
          swift_bridgeObjectRelease();
          goto LABEL_66;
        }
        continue;
      }
    }
  }
  v59 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRetain();
  sub_1BAC79E48(0, v8, 0);
  v9 = v7 + 32;
  v10 = v59;
  do
  {
    sub_1BA4C010C(v9, (uint64_t)v56);
    v11 = v57;
    v12 = v58;
    __swift_project_boxed_opaque_existential_1(v56, v57);
    v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC79E48(0, v10[2] + 1, 1);
      v10 = v59;
    }
    v15 = v10[2];
    v14 = v10[3];
    v16 = v15 + 1;
    if (v15 >= v14 >> 1)
    {
      sub_1BAC79E48(v14 > 1, v15 + 1, 1);
      v10 = v59;
    }
    v10[2] = v16;
    v10[v15 + 4] = v13;
    v9 += 40;
    --v8;
  }
  while (v8);
  v17 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_12:
  swift_bridgeObjectRetain();
  v18 = 0;
  while (1)
  {
    v19 = v10[v18 + 4];
    v20 = *(_QWORD *)(v19 + 16);
    v21 = v17[2];
    v22 = v21 + v20;
    if (__OFADD__(v21, v20))
      break;
    swift_bridgeObjectRetain();
    v23 = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
    if ((_DWORD)v23 && v22 <= v17[3] >> 1)
    {
      if (*(_QWORD *)(v19 + 16))
        goto LABEL_24;
    }
    else
    {
      if (v21 <= v22)
        v24 = v21 + v20;
      else
        v24 = v21;
      v17 = sub_1BB38C7E8(v23, v24, 1, v17);
      if (*(_QWORD *)(v19 + 16))
      {
LABEL_24:
        v25 = v17[2];
        if ((v17[3] >> 1) - v25 < v20)
          goto LABEL_69;
        v26 = (unint64_t)&v17[5 * v25 + 4];
        if (v19 + 32 < v26 + 40 * v20 && v26 < v19 + 32 + 40 * v20)
          goto LABEL_75;
        swift_arrayInitWithCopy();
        if (v20)
        {
          v28 = v17[2];
          v29 = __OFADD__(v28, v20);
          v30 = v28 + v20;
          if (v29)
            goto LABEL_70;
          v17[2] = v30;
        }
        goto LABEL_14;
      }
    }
    if (v20)
      goto LABEL_68;
LABEL_14:
    ++v18;
    swift_bridgeObjectRelease();
    if (v16 == v18)
    {
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

id sub_1BB209EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  objc_class *v5;
  objc_class *v6;
  _BYTE *v11;
  _QWORD *v12;
  uint64_t v13;
  id v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  objc_super v21;

  v6 = v5;
  v11 = objc_allocWithZone(v6);
  v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v12 = &v11[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v12 = 0;
  v12[1] = 0xE000000000000000;
  v13 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  v14 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  v15 = v11;
  *(_QWORD *)&v11[v13] = objc_msgSend(v14, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor] = a1;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups] = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups] = a2;
  *(_QWORD *)&v15[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image] = a5;
  v16 = a5;
  swift_retain();
  swift_bridgeObjectRetain();

  v21.receiver = v15;
  v21.super_class = v6;
  v17 = objc_msgSendSuper2(&v21, sel_initWithNibName_bundle_, 0, 0);
  v18 = v17;
  if (a4)
  {
    v19 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  else
  {
    v19 = 0;
  }
  objc_msgSend(v17, sel_setTitle_, v19);

  swift_release();
  return v17;
}

id sub_1BB20A0CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  __int128 v18;
  __int128 v19;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _OWORD v24[2];
  uint64_t v25;

  v1 = *(_QWORD **)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_groups);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v2 = sub_1BAAD4BE0();
  if (*(_QWORD *)(v2 + 16))
  {
    v3 = v1[2];
    if (v3)
    {
      v21 = v0;
      swift_bridgeObjectRetain();
      v4 = 0;
      v5 = v1 + 8;
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      do
      {
        v23 = v6;
        v7 = *(v5 - 4);
        v8 = *(v5 - 3);
        v9 = *(v5 - 2);
        v10 = *(v5 - 1);
        v11 = *v5;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v12 = sub_1BB214EA0(v11, v2);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v12 + 16))
        {
          v22 = v4;
          v13 = v2;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v14 = sub_1BA97461C(v12);
          swift_bridgeObjectRelease();
          sub_1BAF89090(v7, v8, v9, v10, v14, v24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v23;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v6 = sub_1BB38C7E8(0, v23[2] + 1, 1, v23);
          v2 = v13;
          v4 = v22;
          v16 = v6[2];
          v15 = v6[3];
          if (v16 >= v15 >> 1)
            v6 = sub_1BB38C7E8((_QWORD *)(v15 > 1), v16 + 1, 1, v6);
          v6[2] = v16 + 1;
          v17 = &v6[5 * v16];
          v18 = v24[0];
          v19 = v24[1];
          v17[8] = v25;
          *((_OWORD *)v17 + 2) = v18;
          *((_OWORD *)v17 + 3) = v19;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v6 = v23;
        }
        v5 += 5;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
      v0 = v21;
    }
    else
    {
      v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    v6 = v1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups) = v6;
  swift_bridgeObjectRelease();
  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView), sel_reloadData);
}

id sub_1BB20A38C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void *v3;
  id v4;
  objc_super v6;

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver;
  v3 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver];
  if (v3)
  {
    v4 = v3;
    sub_1BB86C430();

    v3 = *(void **)&v1[v2];
  }
  *(_QWORD *)&v1[v2] = 0;

  v6.receiver = v1;
  v6.super_class = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_1BB20A4AC()
{
  char *v0;
  char *v1;
  id result;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  objc_super v12;

  v1 = v0;
  v12.receiver = v0;
  v12.super_class = (Class)type metadata accessor for DebugFormatInspectorPaneViewController();
  objc_msgSendSuper2(&v12, sel_viewDidLoad);
  result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = result;
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
  objc_msgSend(v3, sel_setBackgroundColor_, v4);

  v5 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView];
  objc_msgSend(v5, sel_setDataSource_, v1);
  objc_msgSend(v5, sel_setDelegate_, v1);
  objc_msgSend(v5, sel_setAlwaysBounceVertical_, 1);
  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
  objc_msgSend(v5, sel_setTableFooterView_, v6);

  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  sub_1BB873234();
  type metadata accessor for DebugFormatInspectorFrameCell();
  sub_1BB873234();
  type metadata accessor for DebugFormatInspectorResizingCell();
  sub_1BB873234();
  type metadata accessor for DebugFormatInspectorCursorCell();
  sub_1BB873234();
  type metadata accessor for KeyValueTableViewCell();
  sub_1BB873234();
  type metadata accessor for SubtitleTableViewCell();
  sub_1BB873234();
  sub_1BB873234();
  sub_1BB873234();
  sub_1BB873234();
  sub_1BA81D86C(0, (unint64_t *)&unk_1EF2BE030, (unint64_t *)&qword_1ED3B9950, 0x1E0DC3F10, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  sub_1BA4B07F0(0, &qword_1EF2BE048, MEMORY[0x1E0DB6D48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  sub_1BA4B07F0(0, &qword_1EF2BE040, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8730], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  sub_1BA4B07F0(0, &qword_1EF2BE068, MEMORY[0x1E0DBC9C8], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  sub_1BA4B07F0(0, &qword_1EF2BE028, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC9E0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BE050, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatInspectorSplitView, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  sub_1BA81D86C(0, &qword_1EF2BE010, (unint64_t *)&unk_1EF2BE018, 0x1E0DC3890, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  sub_1BB873234();
  result = objc_msgSend(v1, sel_view);
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v7 = result;
  objc_msgSend(result, sel_addSubview_, v5);

  v11 = v5;
  swift_getKeyPath();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v8 = v5;
  v9 = sub_1BB86C4C0();
  swift_release();
  swift_release();

  v10 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver];
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = v9;

  if (qword_1EF2A6E20 != -1)
    swift_once();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1BB216A84();
  sub_1BB86D21C();
  return (id)swift_release();
}

void sub_1BB20A998(void **a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = *a1;
  v4 = a3 + 16;
  swift_beginAccess();
  v5 = (void *)MEMORY[0x1BCCE5D40](v4);
  if (v5)
  {
    v6 = v5;
    if (*((_BYTE *)v5 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize) == 1)
    {
      v7 = v5;
      objc_msgSend(v3, sel_contentSize);
      sub_1BB873624();
      objc_msgSend(v7, sel_setPreferredContentSize_);

      v8 = objc_msgSend(v7, sel_view);
      if (!v8)
      {
        __break(1u);
        return;
      }
      v6 = v8;
      objc_msgSend(v8, sel_setNeedsLayout);

    }
  }
}

void sub_1BB20AA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  id v5;

  v2 = a2 + 16;
  swift_beginAccess();
  v3 = MEMORY[0x1BCCE5D40](v2);
  if (v3)
  {
    v4 = (void *)v3;
    v5 = *(id *)(v3 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView);

    objc_msgSend(v5, sel_reloadData);
  }
}

id sub_1BB20AC08()
{
  void *v0;
  id v1;
  id v2;
  char *v4;

  if (qword_1EF2A6E20 != -1)
    swift_once();
  type metadata accessor for DebugFormatInspectorPaneViewController();
  sub_1BB216A84();
  sub_1BB86D210();
  v1 = v4;
  if ((unint64_t)(v4 - 1) >= 2)
  {
    v2 = objc_msgSend(v0, sel_traitCollection);
    v1 = objc_msgSend(v2, sel_userInterfaceStyle);

  }
  return v1;
}

void sub_1BB20ACC4(uint64_t a1, uint64_t a2)
{
  char *v2;
  char *v3;
  uint64_t v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  id v12;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = v2;
    type metadata accessor for DebugFormatInspectorPaneViewController();
    v6 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor];
    swift_retain();
    swift_bridgeObjectRetain();
    v12 = (id)sub_1BB2099E8(v6, a1, 0, 0);
    objc_msgSend(v12, sel_setModalPresentationStyle_, 7);
    v7 = objc_msgSend(v12, sel_popoverPresentationController);
    objc_msgSend(v7, sel_setSourceView_, a2);

    v8 = objc_msgSend(v12, sel_popoverPresentationController);
    if (v8)
    {
      v9 = v8;
      objc_msgSend(v8, sel_setPermittedArrowDirections_, *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections]);

    }
    v10 = objc_msgSend(v12, sel_popoverPresentationController);
    if (v10)
    {
      v11 = v10;
      objc_msgSend(v10, sel_setCanOverlapSourceViewRect_, 1);

    }
    objc_msgSend(v12, sel_setPreferredContentSize_, *(double *)&v3[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize], *(double *)&v3[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize + 8]);
    objc_msgSend(v3, sel_presentViewController_animated_completion_, v12, 1, 0);

  }
}

uint64_t type metadata accessor for DebugFormatInspectorPaneViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB20AE98()
{
  return sub_1BB86D210();
}

uint64_t sub_1BB20AEA4()
{
  return sub_1BB86D204();
}

uint64_t sub_1BB20AEB0()
{
  return sub_1BB86D21C();
}

uint64_t sub_1BB20AEBC()
{
  return sub_1BB86D1F8();
}

void *sub_1BB20AF14(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  id v43;
  uint64_t v44;
  void *v45;
  void *v46;
  char *v47;
  id v48;
  void *v49;
  id v50;
  id v51;
  void *v52;
  void *v53;
  _QWORD v55[10];
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  __int128 v67;
  _QWORD v68[3];
  _BYTE v69[16];
  __int128 v70;

  v3 = v2;
  v65 = a1;
  v5 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v5);
  v58 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, &qword_1ED3C4958, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v8);
  v55[5] = (char *)v55 - v9;
  v10 = type metadata accessor for FeedGroupItem();
  MEMORY[0x1E0C80A78](v10);
  v64 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for FormatInspectionFeedGroupItem();
  v56 = *(_QWORD *)(v12 - 8);
  v13 = *(_QWORD *)(v56 + 64);
  MEMORY[0x1E0C80A78](v12);
  v57 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v59 = (char *)v55 - v15;
  v16 = sub_1BB86F874();
  MEMORY[0x1E0C80A78](v16);
  v55[7] = (char *)v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v55[8] = (char *)v55 - v19;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C2240, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7578], v7);
  MEMORY[0x1E0C80A78](v20);
  v55[9] = (char *)v55 - v21;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3C49A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBA0D8], v7);
  MEMORY[0x1E0C80A78](v22);
  v63 = (char *)v55 - v23;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA890, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB85E0], v7);
  MEMORY[0x1E0C80A78](v24);
  v55[6] = (char *)v55 - v25;
  v26 = sub_1BB86C67C();
  v61 = *(_QWORD *)(v26 - 8);
  v62 = v26;
  MEMORY[0x1E0C80A78](v26);
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, v7);
  MEMORY[0x1E0C80A78](v27);
  v29 = (char *)v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v55 - v31;
  v33 = type metadata accessor for FormatInspectionItem(0);
  MEMORY[0x1E0C80A78](v33);
  v35 = (char *)v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = sub_1BB86CBD4();
  v60 = v3;
  sub_1BB209910(v36, *(_QWORD *)(v3 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups), &v67);
  v37 = v68[2];
  v70 = v67;
  swift_bridgeObjectRetain();
  sub_1BA73D624((uint64_t)&v70);
  sub_1BA6A09F0((uint64_t)v68, (uint64_t)v69, (unint64_t *)&qword_1ED3B9200, MEMORY[0x1E0DEA968]);
  sub_1BA73D624((uint64_t)v69);
  swift_bridgeObjectRelease();
  v38 = sub_1BB86CBC8();
  sub_1BB209970(v38, v37, (uint64_t)v35);
  swift_bridgeObjectRelease();
  v39 = *(int *)(v33 + 24);
  v66 = v35;
  v40 = (uint64_t)&v35[v39];
  sub_1BB216A34(v40, (uint64_t)v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
  v41 = type metadata accessor for FormatInspectionItem.Value(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v32, 1, v41) != 1)
  {
    v55[2] = v40;
    v55[3] = v29;
    v55[1] = v13;
    v55[4] = a2;
    v47 = (char *)&loc_1BB20B410 + dword_1BB211DF4[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2B6EE0);
  v42 = (void *)sub_1BB87321C();
  v43 = objc_msgSend(v42, sel_textLabel);
  v44 = (uint64_t)v66;
  if (v43)
  {
    v45 = v43;
    if (*((_QWORD *)v66 + 1))
    {
      swift_bridgeObjectRetain();
      v46 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v46 = 0;
    }
    objc_msgSend(v45, sel_setText_, v46);

  }
  v48 = objc_msgSend(v42, sel_textLabel);
  if (v48)
  {
    v49 = v48;
    v50 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v49, sel_setFont_, v50);

  }
  v51 = objc_msgSend(v42, sel_textLabel);
  if (v51)
  {
    v52 = v51;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    v53 = (void *)sub_1BB873804();
    objc_msgSend(v52, sel_setTextColor_, v53);

  }
  objc_msgSend(v42, sel_setAccessoryType_, 0);
  objc_msgSend(v42, sel_setSelectionStyle_, 0);
  sub_1BA4A2E80(v44, type metadata accessor for FormatInspectionItem);
  return v42;
}

void sub_1BB20B5D8()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;

  type metadata accessor for SubtitleTableViewCell();
  v1 = (void *)sub_1BB87321C();
  v2 = objc_msgSend(v1, sel_textLabel);
  if (v2)
  {
    v3 = v2;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 168) + 8))
    {
      swift_bridgeObjectRetain();
      v4 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);

  }
  v5 = objc_msgSend(v1, sel_textLabel);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v6, sel_setFont_, v7);

  }
  v8 = objc_msgSend(v1, sel_detailTextLabel);
  if (v8)
  {
    v9 = v8;
    v10 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v10);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v11 = objc_msgSend(v1, sel_detailTextLabel);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v12, sel_setFont_, v13);

  }
  v14 = objc_msgSend(v1, sel_detailTextLabel);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v15, sel_setTextColor_, v16);

  }
  v17 = objc_msgSend(v1, sel_detailTextLabel);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v1, sel_setSelectionStyle_, 0);
  objc_msgSend(v1, sel_setAccessoryType_, 0);
  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20B650()
{
  uint64_t v0;
  uint64_t (**v1)(void);
  uint64_t (*v2)(void);
  void *v3;
  id v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;

  v2 = *v1;
  type metadata accessor for KeyValueTableViewCell();
  v3 = (void *)sub_1BB87321C();
  v4 = objc_msgSend(v3, sel_textLabel);
  if (v4)
  {
    v5 = v4;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 168) + 8))
    {
      swift_bridgeObjectRetain();
      v6 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v6 = 0;
    }
    objc_msgSend(v5, sel_setText_, v6);

  }
  v7 = objc_msgSend(v3, sel_textLabel);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v8, sel_setFont_, v9);

  }
  v10 = objc_msgSend(v3, sel_detailTextLabel);
  if (v10)
  {
    v11 = v10;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3BB4B8);
    v12 = sub_1BB20AC08();
    v13 = sub_1BB6B9384((uint64_t)v12);
    v14 = v2();
    v16 = v15;

    sub_1BB3BBF68(v14, v16);
    swift_bridgeObjectRelease();
    v17 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setText_, v17);

  }
  v18 = objc_msgSend(v3, sel_detailTextLabel);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v19, sel_setFont_, v20);

  }
  v21 = objc_msgSend(v3, sel_detailTextLabel);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v22, sel_setTextColor_, v23);

  }
  v24 = objc_msgSend(v3, sel_detailTextLabel);
  if (v24)
  {
    v25 = v24;
    objc_msgSend(v24, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v3, sel_setSelectionStyle_, 0);
  v26 = v3;
  objc_msgSend(v26, sel_setAccessoryType_, 0);

  swift_release();
  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20B6C8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;

  v2 = *v1;
  sub_1BA81D86C(0, (unint64_t *)&unk_1EF2BE030, (unint64_t *)&qword_1ED3B9950, 0x1E0DC3F10, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v3 = (char *)sub_1BB87321C();
  v4 = *(void **)&v3[qword_1EF2ABDD0];
  *(_QWORD *)(v0 + 304) = v2;
  v5 = v4;
  v6 = sub_1BB20AC08();
  v7 = sub_1BB52541C((uint64_t)v6);
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(v3, sel_textLabel);
  v9 = *(_QWORD *)(v0 + 168);
  if (v8)
  {
    v10 = v8;
    if (*(_QWORD *)(v9 + 8))
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v10, sel_setText_, v11);

  }
  v12 = objc_msgSend(v3, sel_textLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v13, sel_setFont_, v14);

  }
  v15 = objc_msgSend(v3, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    if (*(_QWORD *)(v9 + 24))
    {
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v16, sel_setText_, v17);

  }
  v18 = objc_msgSend(v3, sel_detailTextLabel);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v19, sel_setFont_, v20);

  }
  v21 = objc_msgSend(v3, sel_detailTextLabel);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v22, sel_setTextColor_, v23);

  }
  objc_msgSend(v3, sel_setSelectionStyle_, 0);
  swift_release();
  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20B7B0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;
  id v28;

  v2 = *v1;
  v3 = v1[1];
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BE050, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatInspectorSplitView, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v4 = (char *)sub_1BB87321C();
  v5 = qword_1EF2ABDD0;
  v6 = *(void **)(*(_QWORD *)&v4[qword_1EF2ABDD0] + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_left);
  *(_QWORD *)(v0 + 304) = v2;
  v7 = v6;
  v8 = sub_1BB20AC08();
  v9 = sub_1BB52541C((uint64_t)v8);
  objc_msgSend(v7, sel_setBackgroundColor_, v9);

  v10 = *(void **)(*(_QWORD *)&v4[v5] + OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorSplitView_right);
  *(_QWORD *)(v0 + 304) = v3;
  v11 = v10;
  v12 = sub_1BB20AC08();
  v13 = sub_1BB52541C((uint64_t)v12);
  objc_msgSend(v11, sel_setBackgroundColor_, v13);

  v14 = objc_msgSend(v4, sel_textLabel);
  v15 = *(_QWORD *)(v0 + 168);
  if (v14)
  {
    if (*(_QWORD *)(v15 + 8))
    {
      swift_bridgeObjectRetain();
      v16 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(v14, sel_setText_, v16);

  }
  v17 = objc_msgSend(v4, sel_textLabel);
  if (v17)
  {
    v18 = v17;
    v19 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v18, sel_setFont_, v19);

  }
  v20 = objc_msgSend(v4, sel_detailTextLabel);
  if (v20)
  {
    v21 = v20;
    if (*(_QWORD *)(v15 + 24))
    {
      swift_bridgeObjectRetain();
      v22 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v22 = 0;
    }
    objc_msgSend(v21, sel_setText_, v22);

  }
  v23 = objc_msgSend(v4, sel_detailTextLabel);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v24, sel_setFont_, v25);

  }
  v26 = objc_msgSend(v4, sel_detailTextLabel);
  if (v26)
  {
    v27 = v26;
    v28 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v27, sel_setTextColor_, v28);

  }
  objc_msgSend(v4, sel_setSelectionStyle_, 0);
  swift_release();
  JUMPOUT(0x1BB2111CCLL);
}

void sub_1BB20B8F0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;
  void *v23;
  id v24;
  id v25;
  void *v26;
  id v27;

  v2 = *v1;
  v3 = v1[1];
  *(_OWORD *)(v0 + 144) = *((_OWORD *)v1 + 1);
  v4 = v1[4];
  v5 = v1[5];
  v7 = v1[6];
  v6 = v1[7];
  sub_1BA4B07F0(0, &qword_1EF2BE048, MEMORY[0x1E0DB6D48], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v8 = (void *)sub_1BB87321C();
  *(_QWORD *)(v0 + 304) = v2;
  *(_QWORD *)(v0 + 312) = v3;
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 336) = v4;
  *(_QWORD *)(v0 + 344) = v5;
  *(_QWORD *)(v0 + 352) = v7;
  *(_QWORD *)(v0 + 360) = v6;
  v9 = sub_1BB20AC08();
  v10 = *(_QWORD *)(v0 + 48);
  sub_1BB3417B8((uint64_t)v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA5DCC4C(v7);
  v11 = sub_1BB8701EC();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 0, 1, v11);
  sub_1BB86F6AC();
  v12 = objc_msgSend(v8, sel_textLabel);
  v13 = *(_QWORD *)(v0 + 168);
  if (v12)
  {
    v14 = v12;
    if (*(_QWORD *)(v13 + 8))
    {
      swift_bridgeObjectRetain();
      v15 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = 0;
    }
    objc_msgSend(v14, sel_setText_, v15);

  }
  v16 = objc_msgSend(v8, sel_textLabel);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v17, sel_setFont_, v18);

  }
  v19 = objc_msgSend(v8, sel_detailTextLabel);
  if (v19)
  {
    v20 = v19;
    if (*(_QWORD *)(v13 + 24))
    {
      swift_bridgeObjectRetain();
      v21 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v21 = 0;
    }
    objc_msgSend(v20, sel_setText_, v21);

  }
  v22 = objc_msgSend(v8, sel_detailTextLabel);
  if (v22)
  {
    v23 = v22;
    v24 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v23, sel_setFont_, v24);

  }
  v25 = objc_msgSend(v8, sel_detailTextLabel);
  if (v25)
  {
    v26 = v25;
    v27 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v26, sel_setTextColor_, v27);

  }
  JUMPOUT(0x1BB20B58CLL);
}

void sub_1BB20BA1C()
{
  uint64_t v0;
  _OWORD *v1;
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  id v26;

  v3 = v1[5];
  *(_OWORD *)(v0 + 368) = v1[4];
  *(_OWORD *)(v0 + 384) = v3;
  v4 = v1[7];
  *(_OWORD *)(v0 + 400) = v1[6];
  *(_OWORD *)(v0 + 416) = v4;
  v5 = v1[1];
  *(_OWORD *)(v0 + 304) = *v1;
  *(_OWORD *)(v0 + 320) = v5;
  v6 = v1[3];
  *(_OWORD *)(v0 + 336) = v1[2];
  *(_OWORD *)(v0 + 352) = v6;
  sub_1BA4B07F0(0, &qword_1EF2BE040, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB8730], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v7 = (void *)sub_1BB87321C();
  v8 = *(_OWORD *)(v0 + 384);
  *(_OWORD *)(v0 + 240) = *(_OWORD *)(v0 + 368);
  *(_OWORD *)(v0 + 256) = v8;
  v9 = *(_OWORD *)(v0 + 416);
  *(_OWORD *)(v0 + 272) = *(_OWORD *)(v0 + 400);
  *(_OWORD *)(v0 + 288) = v9;
  v10 = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v0 + 176) = *(_OWORD *)(v0 + 304);
  *(_OWORD *)(v0 + 192) = v10;
  v11 = *(_OWORD *)(v0 + 352);
  *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v0 + 224) = v11;
  v12 = sub_1BB20AC08();
  sub_1BB1E5274((uint64_t)v12, v2);
  sub_1BB0A432C(v0 + 304);
  v13 = sub_1BB870A80();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v2, 0, 1, v13);
  sub_1BB870228();
  v14 = objc_msgSend(v7, sel_textLabel);
  v15 = *(_QWORD *)(v0 + 168);
  if (v14)
  {
    v16 = v14;
    if (*(_QWORD *)(v15 + 8))
    {
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v16, sel_setText_, v17);

  }
  v18 = objc_msgSend(v7, sel_textLabel);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v19, sel_setFont_, v20);

  }
  v21 = objc_msgSend(v7, sel_detailTextLabel);
  if (v21)
  {
    v22 = v21;
    if (*(_QWORD *)(v15 + 24))
    {
      swift_bridgeObjectRetain();
      v23 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v23 = 0;
    }
    objc_msgSend(v22, sel_setText_, v23);

  }
  v24 = objc_msgSend(v7, sel_detailTextLabel);
  if (v24)
  {
    v25 = v24;
    v26 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v25, sel_setFont_, v26);

  }
  if (objc_msgSend(v7, sel_detailTextLabel))
  {
    objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    JUMPOUT(0x1BB211348);
  }
  JUMPOUT(0x1BB20B58CLL);
}

void sub_1BB20BB48()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  char *v3;
  void *v4;
  id v5;
  id v6;
  id v7;
  id v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;

  v2 = *v1;
  sub_1BA81D86C(0, (unint64_t *)&unk_1EF2BE030, (unint64_t *)&qword_1ED3B9950, 0x1E0DC3F10, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v3 = (char *)sub_1BB87321C();
  v4 = *(void **)&v3[qword_1EF2ABDD0];
  v0[22] = v2;
  sub_1BB757B20();
  v0[22] = v0[38];
  v5 = v4;
  v6 = sub_1BB20AC08();
  v7 = sub_1BB52541C((uint64_t)v6);
  swift_release();
  objc_msgSend(v5, sel_setBackgroundColor_, v7);

  v8 = objc_msgSend(v3, sel_textLabel);
  v9 = v0[21];
  if (v8)
  {
    v10 = v8;
    if (*(_QWORD *)(v9 + 8))
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v10, sel_setText_, v11);

  }
  v12 = objc_msgSend(v3, sel_textLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v13, sel_setFont_, v14);

  }
  v15 = objc_msgSend(v3, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    if (*(_QWORD *)(v9 + 24))
    {
      swift_bridgeObjectRetain();
      v17 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v17 = 0;
    }
    objc_msgSend(v16, sel_setText_, v17);

  }
  v18 = objc_msgSend(v3, sel_detailTextLabel);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v19, sel_setFont_, v20);

  }
  v21 = objc_msgSend(v3, sel_detailTextLabel);
  if (v21)
  {
    v22 = v21;
    v23 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v22, sel_setTextColor_, v23);

  }
  objc_msgSend(v3, sel_setSelectionStyle_, 0);
  sub_1BA756FBC(v2);
  JUMPOUT(0x1BB211468);
}

void sub_1BB20BC4C(uint64_t a1@<X8>)
{
  uint64_t v1;
  _OWORD *v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  void *v7;
  id v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;

  v3 = v2[7];
  *(_OWORD *)(v1 + 400) = v2[6];
  *(_OWORD *)(v1 + 416) = v3;
  *(_OWORD *)(v1 + 432) = v2[8];
  *(_OWORD *)(a1 + 137) = *(_OWORD *)((char *)v2 + 137);
  v4 = v2[3];
  *(_OWORD *)(v1 + 336) = v2[2];
  *(_OWORD *)(v1 + 352) = v4;
  v5 = v2[5];
  *(_OWORD *)(v1 + 368) = v2[4];
  *(_OWORD *)(v1 + 384) = v5;
  v6 = v2[1];
  *(_OWORD *)(v1 + 304) = *v2;
  *(_OWORD *)(v1 + 320) = v6;
  sub_1BA4B07F0(0, &qword_1EF2BE028, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC9E0], (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v7 = (void *)sub_1BB87321C();
  v8 = objc_msgSend(v7, sel_textLabel);
  v9 = *(_QWORD *)(v1 + 168);
  v10 = *(_QWORD **)(v1 + 64);
  v11 = *(_QWORD *)(v1 + 72);
  if (v8)
  {
    v12 = v8;
    if (*(_QWORD *)(v9 + 8))
    {
      swift_bridgeObjectRetain();
      v13 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v13 = 0;
    }
    objc_msgSend(v12, sel_setText_, v13);

  }
  v14 = objc_msgSend(v7, sel_textLabel);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v15, sel_setFont_, v16);

  }
  v17 = objc_msgSend(v7, sel_detailTextLabel);
  if (v17)
  {
    v18 = v17;
    if (*(_QWORD *)(v9 + 24))
    {
      swift_bridgeObjectRetain();
      v19 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = 0;
    }
    objc_msgSend(v18, sel_setText_, v19);

  }
  v20 = objc_msgSend(v7, sel_detailTextLabel);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v21, sel_setFont_, v22);

  }
  v23 = objc_msgSend(v7, sel_detailTextLabel);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v24, sel_setTextColor_, v25);

  }
  v26 = *(_QWORD *)(v1 + 320);
  v27 = *(_QWORD *)(v1 + 328);
  v28 = *(_QWORD *)(v1 + 336);
  v29 = *(_QWORD *)(v1 + 344);
  v30 = *(_QWORD *)(v1 + 352);
  v31 = *(_QWORD *)(v1 + 360);
  v32 = *(_QWORD *)(v1 + 368);
  v33 = *(_QWORD *)(v1 + 376);
  v34 = *(_BYTE *)(v1 + 384);
  *(_QWORD *)(v1 + 176) = v26;
  *(_QWORD *)(v1 + 184) = v27;
  *(_QWORD *)(v1 + 192) = v28;
  *(_QWORD *)(v1 + 200) = v29;
  *(_QWORD *)(v1 + 208) = v30;
  *(_QWORD *)(v1 + 216) = v31;
  *(_QWORD *)(v1 + 224) = v32;
  *(_QWORD *)(v1 + 232) = v33;
  *(_BYTE *)(v1 + 240) = v34;
  sub_1BAA8C5C0(v26, v27, v28, v29, v30, v31, v32, v33, v34);
  sub_1BB1F4470(v1 + 176, v10);
  v35 = *(_QWORD *)(v1 + 392);
  v36 = *(_QWORD *)(v1 + 400);
  v37 = *(_QWORD *)(v1 + 408);
  v38 = *(_QWORD *)(v1 + 416);
  v39 = *(_QWORD *)(v1 + 424);
  v40 = *(_QWORD *)(v1 + 432);
  v41 = *(_QWORD *)(v1 + 440);
  v42 = *(_QWORD *)(v1 + 448);
  v43 = *(_BYTE *)(v1 + 456);
  *(_QWORD *)(v1 + 176) = v35;
  *(_QWORD *)(v1 + 184) = v36;
  *(_QWORD *)(v1 + 192) = v37;
  *(_QWORD *)(v1 + 200) = v38;
  *(_QWORD *)(v1 + 208) = v39;
  *(_QWORD *)(v1 + 216) = v40;
  *(_QWORD *)(v1 + 224) = v41;
  *(_QWORD *)(v1 + 232) = v42;
  *(_BYTE *)(v1 + 240) = v43;
  sub_1BAA8C5C0(v35, v36, v37, v38, v39, v40, v41, v42, v43);
  sub_1BB1F4470(v1 + 176, *(_QWORD **)(v1 + 56));
  sub_1BB86FA18();
  v44 = sub_1BB86FA24();
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 56))(v11, 0, 1, v44);
  sub_1BB87177C();
  objc_msgSend(v7, sel_setSelectionStyle_, 0);
  sub_1BAC65F98(v1 + 304);
  JUMPOUT(0x1BB20B5A0);
}

void sub_1BB20BD0C()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  void *v16;
  id v17;

  swift_release();
  swift_release();
  sub_1BA81D86C(0, &qword_1EF2BE010, (unint64_t *)&unk_1EF2BE018, 0x1E0DC3890, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatInspectorAccessoryCell);
  v1 = (void *)sub_1BB87321C();
  v2 = objc_msgSend(v1, sel_textLabel);
  v3 = *(_QWORD *)(v0 + 168);
  if (v2)
  {
    v4 = v2;
    if (*(_QWORD *)(v3 + 8))
    {
      swift_bridgeObjectRetain();
      v5 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, sel_setText_, v5);

  }
  v6 = objc_msgSend(v1, sel_textLabel);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v7, sel_setFont_, v8);

  }
  v9 = objc_msgSend(v1, sel_detailTextLabel);
  if (v9)
  {
    v10 = v9;
    if (*(_QWORD *)(v3 + 24))
    {
      swift_bridgeObjectRetain();
      v11 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = 0;
    }
    objc_msgSend(v10, sel_setText_, v11);

  }
  v12 = objc_msgSend(v1, sel_detailTextLabel);
  if (v12)
  {
    v13 = v12;
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v13, sel_setFont_, v14);

  }
  v15 = objc_msgSend(v1, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v16, sel_setTextColor_, v17);

  }
  JUMPOUT(0x1BB20B588);
}

void sub_1BB20BDB4()
{
  _QWORD *v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;

  type metadata accessor for KeyValueTableViewCell();
  v1 = (void *)sub_1BB87321C();
  v2 = objc_msgSend(v1, sel_textLabel);
  if (v2)
  {
    v3 = v2;
    if (*(_QWORD *)(v0[21] + 8))
    {
      swift_bridgeObjectRetain();
      v4 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);

  }
  v5 = objc_msgSend(v1, sel_textLabel);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v6, sel_setFont_, v7);

  }
  v8 = objc_msgSend(v1, sel_detailTextLabel);
  if (v8)
  {
    v9 = v8;
    v0[38] = 0;
    v0[39] = 0xE000000000000000;
    sub_1BB87435C();
    sub_1BAA51CF4();
    sub_1BB87435C();
    sub_1BB3BBF68(v0[38], v0[39]);
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v9, sel_setText_, v10);

  }
  v11 = objc_msgSend(v1, sel_detailTextLabel);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v12, sel_setTextColor_, v13);

  }
  v14 = objc_msgSend(v1, sel_detailTextLabel);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v15, sel_setFont_, v16);

  }
  v17 = objc_msgSend(v1, sel_detailTextLabel);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v1, sel_setSelectionStyle_, 0);
  objc_msgSend(v1, sel_setAccessoryType_, 0);
  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20BE2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  void *v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  id v16;
  void *v17;
  id v18;
  id v19;
  void *v20;
  id v21;
  id v22;
  void *v23;

  v5 = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v2, v1, v3);
  type metadata accessor for SubtitleTableViewCell();
  v6 = (void *)sub_1BB87321C();
  v7 = objc_msgSend(v6, sel_textLabel);
  if (v7)
  {
    v8 = v7;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 168) + 8))
    {
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = 0;
    }
    objc_msgSend(v8, sel_setText_, v9);

  }
  v10 = objc_msgSend(v6, sel_textLabel);
  if (v10)
  {
    v11 = v10;
    v12 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v11, sel_setFont_, v12);

  }
  v13 = objc_msgSend(v6, sel_detailTextLabel);
  if (v13)
  {
    v14 = v13;
    sub_1BB86C538();
    v15 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v14, sel_setText_, v15);

  }
  v16 = objc_msgSend(v6, sel_detailTextLabel);
  if (v16)
  {
    v17 = v16;
    v18 = objc_msgSend((id)objc_opt_self(), sel_systemBlueColor);
    objc_msgSend(v17, sel_setTextColor_, v18);

  }
  v19 = objc_msgSend(v6, sel_detailTextLabel);
  if (v19)
  {
    v20 = v19;
    v21 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v20, sel_setFont_, v21);

  }
  v22 = objc_msgSend(v6, sel_detailTextLabel);
  if (v22)
  {
    v23 = v22;
    objc_msgSend(v22, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v6, sel_setSelectionStyle_, 0);
  objc_msgSend(v6, sel_setAccessoryType_, 0);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v3);
  JUMPOUT(0x1BB20B5A0);
}

void sub_1BB20BEBC()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  char *v3;

  v2 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v0 + 304) = *(_OWORD *)v1;
  *(_OWORD *)(v0 + 320) = v2;
  *(_OWORD *)(v0 + 336) = *(_OWORD *)(v1 + 32);
  *(_BYTE *)(v0 + 352) = *(_BYTE *)(v1 + 48);
  type metadata accessor for DebugFormatInspectorFrameCell();
  v3 = (char *)sub_1BB87321C();
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed29DebugFormatInspectorFrameCell_delegate + 8] = &off_1E72F2A90;
  swift_unknownObjectWeakAssign();
  sub_1BB125EF4(v0 + 304);
  objc_msgSend(v3, sel_setSelectionStyle_, 0);
  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20CC78()
{
  _QWORD *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  id v29;
  void *v30;
  id v31;
  id v32;
  void *v33;

  v3 = *v1;
  v2 = v1[1];
  v5 = v1[2];
  v4 = v1[3];
  v6 = sub_1BB231224();
  v0[18] = v5;
  if (v6)
  {
    v7 = *(_QWORD *)(v6 + 48);
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRetain();
    v8 = sub_1BAB0DB00(v3, v2, v5, v4, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  type metadata accessor for KeyValueTableViewCell();
  v9 = (void *)sub_1BB87321C();
  v10 = objc_msgSend(v9, sel_textLabel);
  if (v10)
  {
    v11 = v10;
    v0[38] = v3;
    v0[39] = v2;
    v0[40] = v0[18];
    v0[41] = v4;
    sub_1BB6F5EC0();
    v12 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v11, sel_setText_, v12);

  }
  v13 = objc_msgSend(v9, sel_textLabel);
  if (v13)
  {
    v14 = v13;
    v15 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
    objc_msgSend(v14, sel_setFont_, v15);

  }
  v16 = objc_msgSend(v9, sel_textLabel);
  if (v16)
  {
    v17 = v16;
    if ((v8 & 1) != 0)
    {
      v18 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    }
    else
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      v18 = (id)sub_1BB873804();
    }
    v19 = v18;
    objc_msgSend(v17, sel_setTextColor_, v18);

  }
  v20 = objc_msgSend(v9, sel_textLabel);
  if (v20)
  {
    v21 = v20;
    objc_msgSend(v20, sel_setNumberOfLines_, 0);

  }
  v22 = objc_msgSend(v9, sel_detailTextLabel);
  if (v22)
  {
    v23 = v22;
    v0[38] = 0;
    v0[39] = 0xE000000000000000;
    sub_1BB87435C();
    swift_bridgeObjectRelease();
    sub_1BAA51F14();
    sub_1BB87435C();
    v24 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v23, sel_setText_, v24);

  }
  else
  {
    swift_bridgeObjectRelease();
  }
  v25 = objc_msgSend(v9, sel_detailTextLabel);
  if (v25)
  {
    v26 = v25;
    if ((v8 & 1) != 0)
    {
      v27 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    }
    else
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
      v27 = (id)sub_1BB873804();
    }
    v28 = v27;
    objc_msgSend(v26, sel_setTextColor_, v27);

  }
  v29 = objc_msgSend(v9, sel_detailTextLabel);
  if (v29)
  {
    v30 = v29;
    v31 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
    objc_msgSend(v30, sel_setFont_, v31);

  }
  v32 = objc_msgSend(v9, sel_detailTextLabel);
  if (v32)
  {
    v33 = v32;
    objc_msgSend(v32, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v9, sel_setAccessoryType_, 0);
  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20CCEC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  void *v3;
  id v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  void *v25;
  id v26;
  uint64_t v27;
  void *v28;
  void *v29;
  double v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void *v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  void *v44;
  id v45;
  id v46;
  id v47;
  uint64_t v48;
  unint64_t v49;
  void *v50;
  id v51;
  void *v52;
  id v53;
  void *v54;
  void *v55;
  double v56;
  void *v57;
  id v58;
  id v59;

  v2 = *v1;
  type metadata accessor for SubtitleTableViewCell();
  v3 = (void *)sub_1BB87321C();
  v4 = objc_msgSend(v3, sel_textLabel);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_setNumberOfLines_, 0);

  }
  v6 = objc_msgSend(v3, sel_textLabel);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 12.0);
    objc_msgSend(v7, sel_setFont_, v8);

  }
  v9 = objc_msgSend(v3, sel_textLabel);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v10, sel_setTextColor_, v11);

  }
  v12 = objc_msgSend(v3, sel_detailTextLabel);
  if (v12)
  {
    v13 = v12;
    objc_msgSend(v12, sel_setText_, 0);

  }
  objc_msgSend(v3, sel_setAccessoryType_, 0);
  v14 = (void *)objc_opt_self();
  v15 = v3;
  *(_QWORD *)(v0 + 160) = v14;
  v16 = objc_msgSend(v14, sel_secondaryLabelColor);
  objc_msgSend(v15, sel_setTintColor_, v16);

  sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98E0);
  *(_QWORD *)(v0 + 128) = sub_1BB7A9460();
  *(_QWORD *)(v0 + 120) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9860);
  *(_QWORD *)(v0 + 304) = 0;
  *(_QWORD *)(v0 + 312) = 0xE000000000000000;
  sub_1BB87435C();
  v17 = OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_callStackFrame;
  *(_QWORD *)(v0 + 144) = v2;
  v18 = v2 + v17;
  *(_QWORD *)(v0 + 176) = *(_QWORD *)(v2 + v17);
  v19 = sub_1BB57DC18();
  sub_1BB57DC38(v19);
  sub_1BB872A24();
  swift_bridgeObjectRelease();
  sub_1BB140E70(v20);
  swift_bridgeObjectRelease();
  sub_1BB87435C();
  *(_QWORD *)(v0 + 136) = *(_QWORD *)(v0 + 304);
  *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 312);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_QWORD *)(v0 + 112) = v21;
  v22 = swift_allocObject();
  sub_1BA865F74(v22, 2);
  v24 = v23;
  v25 = (void *)*MEMORY[0x1E0DC1140];
  *v23 = *MEMORY[0x1E0DC1140];
  *(_QWORD *)(v0 + 104) = v25;
  v26 = objc_msgSend(v14, sel_secondaryLabelColor);
  v27 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(v0 + 96) = v27;
  v24[1] = v26;
  v28 = (void *)*MEMORY[0x1E0DC1138];
  v24[4] = v27;
  v24[5] = v28;
  v29 = (void *)objc_opt_self();
  v30 = *MEMORY[0x1E0DC1448];
  v31 = v28;
  v32 = objc_msgSend(v29, sel_systemFontOfSize_weight_, 8.0, v30);
  v33 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  v24[9] = v33;
  v24[6] = v32;
  v34 = nullsub_1();
  v35 = sub_1BA76E82C(v34);
  v36 = (void *)sub_1BB1EC640(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 88), v35);
  v37 = *(void **)(v0 + 128);
  objc_msgSend(v37, sel_appendAttributedString_, v36);

  v38 = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v0 + 304) = *(_QWORD *)(v18 + 8);
  *(_QWORD *)(v0 + 312) = v38;
  *(_QWORD *)(v0 + 136) = v18;
  *(_OWORD *)(v0 + 320) = *(_OWORD *)(v18 + 24);
  *(_QWORD *)(v0 + 88) = sub_1BB6F5EC0();
  v40 = v39;
  v41 = swift_allocObject();
  sub_1BA865F74(v41, 2);
  v43 = v42;
  v44 = *(void **)(v0 + 104);
  *v42 = v44;
  v45 = v44;
  v43[1] = objc_msgSend(*(id *)(v0 + 160), sel_labelColor);
  v43[4] = *(_QWORD *)(v0 + 96);
  v43[5] = v31;
  v46 = v31;
  v47 = objc_msgSend(v29, sel_systemFontOfSize_, 12.0);
  v43[9] = v33;
  v43[6] = v47;
  v48 = nullsub_1();
  v49 = sub_1BA76E82C(v48);
  v50 = (void *)sub_1BB1EC640(*(_QWORD *)(v0 + 88), v40, v49);
  objc_msgSend(v37, sel_appendAttributedString_, v50);

  v51 = objc_msgSend(v15, sel_textLabel);
  if (v51)
  {
    v52 = v51;
    objc_msgSend(v51, sel_setAttributedText_, v37);

  }
  v53 = objc_msgSend(v15, sel_accessoryView);
  if (v53)
  {
    v54 = v53;
    objc_opt_self();
    v55 = (void *)swift_dynamicCastObjCClass();
    if (v55)
    {
LABEL_15:
      *(_QWORD *)(v0 + 304) = 0;
      *(_QWORD *)(v0 + 312) = 0xE000000000000000;
      sub_1BB87435C();
      sub_1BAA51F14();
      sub_1BB87435C();
      v57 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v55, sel_setText_, v57);

      v58 = objc_msgSend(v29, sel_systemFontOfSize_, 12.0);
      objc_msgSend(v55, sel_setFont_, v58);

      v59 = objc_msgSend(*(id *)(v0 + 160), sel_secondaryLabelColor);
      objc_msgSend(v55, sel_setTextColor_, v59);

      objc_msgSend(v55, sel_sizeToFit);
      objc_msgSend(v15, sel_setAccessoryView_, v55);

      swift_release();
      JUMPOUT(0x1BB20DCB8);
    }

  }
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99A8);
  v56 = sub_1BA8D9310(0);
  v55 = sub_1BA8DF7F4(v56, v56, v56, v56);
  goto LABEL_15;
}

void sub_1BB20D368()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  void *v7;
  id v8;
  id v9;
  void *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  id v17;
  id v18;
  void *v19;
  id v20;

  swift_release();
  type metadata accessor for SubtitleTableViewCell();
  v1 = (void *)sub_1BB87321C();
  v2 = objc_msgSend(v1, sel_textLabel);
  v3 = *(_QWORD *)(v0 + 168);
  if (v2)
  {
    v4 = v2;
    if (*(_QWORD *)(v3 + 8))
    {
      swift_bridgeObjectRetain();
      v5 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v5 = 0;
    }
    objc_msgSend(v4, sel_setText_, v5);

  }
  v6 = objc_msgSend(v1, sel_textLabel);
  if (v6)
  {
    v7 = v6;
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v7, sel_setFont_, v8);

  }
  v9 = objc_msgSend(v1, sel_textLabel);
  if (v9)
  {
    v10 = v9;
    v11 = objc_msgSend((id)objc_opt_self(), sel_labelColor);
    objc_msgSend(v10, sel_setTextColor_, v11);

  }
  v12 = objc_msgSend(v1, sel_detailTextLabel);
  if (v12)
  {
    v13 = v12;
    if (*(_QWORD *)(v3 + 24))
    {
      swift_bridgeObjectRetain();
      v14 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v14 = 0;
    }
    objc_msgSend(v13, sel_setText_, v14);

  }
  v15 = objc_msgSend(v1, sel_detailTextLabel);
  if (v15)
  {
    v16 = v15;
    v17 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v16, sel_setFont_, v17);

  }
  v18 = objc_msgSend(v1, sel_detailTextLabel);
  if (v18)
  {
    v19 = v18;
    v20 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v19, sel_setTextColor_, v20);

  }
  objc_msgSend(v1, sel_detailTextLabel);
  JUMPOUT(0x1BB211B9CLL);
}

void sub_1BB20D3E8()
{
  uint64_t v0;
  void **v1;
  uint64_t v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  void *v18;
  void *v19;
  id v20;
  void *v21;
  id v22;
  id v23;
  void *v24;
  id v25;
  id v26;
  void *v27;

  v3 = *v1;
  type metadata accessor for SubtitleTableViewCell();
  v4 = (void *)sub_1BB87321C();
  v5 = objc_msgSend(v4, sel_textLabel);
  if (v5)
  {
    v6 = v5;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 168) + 8))
    {
      swift_bridgeObjectRetain();
      v7 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v7 = 0;
    }
    objc_msgSend(v6, sel_setText_, v7);

  }
  v8 = objc_msgSend(v4, sel_textLabel);
  if (v8)
  {
    v9 = v8;
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v9, sel_setFont_, v10);

  }
  *(_QWORD *)(v2 - 224) = v3;
  v11 = v3;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BA4D9CE8(0, (unint64_t *)&unk_1EF2BE000);
  if (swift_dynamicCast())
  {
    sub_1BA4CECCC((__int128 *)(v0 + 176), v0 + 304);
    v12 = objc_msgSend(v4, sel_detailTextLabel);
    if (v12)
    {
      v13 = v12;
      v14 = *(_QWORD *)(v0 + 328);
      v15 = *(_QWORD *)(v0 + 336);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 304), v14);
      (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
      v16 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v13, sel_setText_, v16);

    }
    __swift_destroy_boxed_opaque_existential_1(v0 + 304);
  }
  else
  {
    *(_QWORD *)(v0 + 208) = 0;
    *(_OWORD *)(v0 + 176) = 0u;
    *(_OWORD *)(v0 + 192) = 0u;
    sub_1BA604728(v0 + 176, (uint64_t)&qword_1EF2CE320, (uint64_t)&unk_1EF2BE000, (uint64_t)&protocol descriptor for FormatError, (uint64_t (*)(_QWORD))sub_1BA65DC00);
    v17 = objc_msgSend(v4, sel_detailTextLabel);
    if (v17)
    {
      v18 = v17;
      *(_QWORD *)(v0 + 304) = 0;
      *(_QWORD *)(v0 + 312) = 0xE000000000000000;
      sub_1BB87435C();
      sub_1BA849E30();
      sub_1BB87435C();
      v19 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v18, sel_setText_, v19);

    }
  }
  v20 = objc_msgSend(v4, sel_detailTextLabel);
  if (v20)
  {
    v21 = v20;
    v22 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    objc_msgSend(v21, sel_setTextColor_, v22);

  }
  v23 = objc_msgSend(v4, sel_detailTextLabel);
  if (v23)
  {
    v24 = v23;
    v25 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 13.0);
    objc_msgSend(v24, sel_setFont_, v25);

  }
  v26 = objc_msgSend(v4, sel_detailTextLabel);
  if (v26)
  {
    v27 = v26;
    objc_msgSend(v26, sel_setNumberOfLines_, 0);

  }
  objc_msgSend(v4, sel_setSelectionStyle_, 3);
  objc_msgSend(v4, sel_setAccessoryType_, 1);

  JUMPOUT(0x1BB20B5ACLL);
}

void sub_1BB20D460()
{
  uint64_t v0;
  void *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  void *v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  void *v18;

  type metadata accessor for KeyValueTableViewCell();
  v1 = (void *)sub_1BB87321C();
  v2 = objc_msgSend(v1, sel_textLabel);
  if (v2)
  {
    v3 = v2;
    if (*(_QWORD *)(*(_QWORD *)(v0 + 168) + 8))
    {
      swift_bridgeObjectRetain();
      v4 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
    }
    else
    {
      v4 = 0;
    }
    objc_msgSend(v3, sel_setText_, v4);

  }
  v5 = objc_msgSend(v1, sel_textLabel);
  if (v5)
  {
    v6 = v5;
    v7 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_, 15.0);
    objc_msgSend(v6, sel_setFont_, v7);

  }
  v8 = objc_msgSend(v1, sel_detailTextLabel);
  if (v8)
  {
    v9 = v8;
    v10 = (void *)sub_1BB872970();
    objc_msgSend(v9, sel_setText_, v10);

  }
  v11 = objc_msgSend(v1, sel_detailTextLabel);
  if (v11)
  {
    v12 = v11;
    v13 = objc_msgSend((id)objc_opt_self(), sel_systemFontOfSize_weight_, 15.0, *MEMORY[0x1E0DC1420]);
    objc_msgSend(v12, sel_setFont_, v13);

  }
  v14 = objc_msgSend(v1, sel_detailTextLabel);
  if (v14)
  {
    v15 = v14;
    v16 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
    objc_msgSend(v15, sel_setTextColor_, v16);

  }
  v17 = objc_msgSend(v1, sel_detailTextLabel);
  if (v17)
  {
    v18 = v17;
    objc_msgSend(v17, sel_setNumberOfLines_, 0);

  }
  JUMPOUT(0x1BB210C78);
}

void sub_1BB211E78(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;

  v5 = a2 + 16;
  swift_beginAccess();
  v6 = (void *)MEMORY[0x1BCCE5D40](v5);
  v7 = v6;
  if (v6)
  {
    v8 = objc_msgSend(v6, sel_accessibilityIdentifier);

    if (v8)
    {
      v9 = sub_1BB8729A0();
      v7 = v10;

    }
    else
    {
      v9 = 0;
      v7 = 0;
    }
  }
  else
  {
    v9 = 0;
  }
  __swift_project_boxed_opaque_existential_1(a3, a3[3]);
  v11 = sub_1BB86DEE8();
  if (!v7)
  {
    swift_bridgeObjectRelease();
    return;
  }
  if (v9 == v11 && v7 == v12)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
      return;
  }
  swift_beginAccess();
  v15 = MEMORY[0x1BCCE5D40](v5);
  if (v15)
  {
    v16 = (void *)v15;
    v17 = *(id *)(v15 + qword_1EF2ABDD0);

    objc_msgSend(v17, sel_setImage_, a1);
  }
}

void sub_1BB212008(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v13;
  uint64_t v14;
  void *v15;
  id v16;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = (void *)MEMORY[0x1BCCE5D40](v3);
  if (!v4
    || (v5 = v4,
        v6 = objc_msgSend(v4, sel_accessibilityIdentifier),
        v5,
        !v6))
  {
    sub_1BA6CF304();
    goto LABEL_11;
  }
  v7 = sub_1BB8729A0();
  v9 = v8;

  sub_1BA6CF304();
  if (!v9)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return;
  }
  if (v7 == v10 && v9 == v11)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v13 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
      return;
  }
  swift_beginAccess();
  v14 = MEMORY[0x1BCCE5D40](v3);
  if (v14)
  {
    v15 = (void *)v14;
    v16 = *(id *)(v14 + qword_1EF2ABDD0);

    objc_msgSend(v16, sel_setImage_, a1);
  }
}

void sub_1BB212160(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  sub_1BA4B07F0(0, &qword_1ED3C4958, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB7748], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - v5;
  swift_beginAccess();
  v7 = (void *)MEMORY[0x1BCCE5D40](a2 + 16);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_detailTextLabel);

    if (v9)
    {
      sub_1BB216A34(a1, (uint64_t)v6, (uint64_t)&qword_1ED3C4958, (uint64_t)MEMORY[0x1E0DB7748], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
      v10 = sub_1BB86FB08();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        sub_1BA604728((uint64_t)v6, (uint64_t)&qword_1ED3C4958, (uint64_t)MEMORY[0x1E0DB7748], (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      }
      else
      {
        sub_1BB86FAFC();
        (*(void (**)(char *, uint64_t))(v11 + 8))(v6, v10);
      }
      v12 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v9, sel_setText_, v12);

    }
  }
}

uint64_t sub_1BB212564(void *a1, char *a2)
{
  char *v2;
  char *v3;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  void *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  void *v55;
  id v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  _QWORD *v67;
  void *v68;
  id v69;
  uint64_t v70;
  uint64_t v71;
  void *v72;
  id v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  void *v83;
  id v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  void *v88;
  id v89;
  uint64_t (*v90)(uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  id v95;
  char *v96;
  id v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  _QWORD *v101;
  uint64_t v102;
  void *v103;
  id v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  uint64_t v109;
  uint64_t v110;
  void *v111;
  id v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  void *v118;
  id v119;
  char v120;
  id v121;
  void *v122;
  uint64_t v123;
  uint64_t (*v124)(uint64_t, uint64_t, char *);
  uint64_t v125;
  char v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  void (*v130)(uint64_t, uint64_t, char *);
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  id v135;
  void *v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  id v143;
  id v144;
  uint64_t v145;
  BOOL v146;
  void (*v147)(uint64_t);
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  void *v151;
  id v152;
  void *v153;
  void *v154;
  id v155;
  id v156;
  void *v157;
  void *v158;
  uint64_t v159;
  uint64_t v160;
  id v161;
  id v162;
  id v163;
  id v164;
  id v165;
  void *v166;
  void *v167;
  id v168;
  id v169;
  id v170;
  void *v171;
  uint64_t v173;
  _QWORD *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  char *v185;
  id v186;
  uint64_t v187;
  char *v188;
  _BYTE v189[160];
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  _OWORD v198[2];
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  _OWORD v204[2];
  __int128 v205;
  _OWORD v206[2];
  double v207[10];

  v3 = v2;
  v186 = a1;
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v176 = (char *)&v175 - v7;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2BDFD0, (uint64_t (*)(uint64_t))type metadata accessor for FormatInspectionFeedGroupItem, v5);
  MEMORY[0x1E0C80A78](v8);
  v180 = (uint64_t)&v175 - v9;
  v10 = type metadata accessor for FormatInspectionFeedGroupItem();
  v178 = *(_QWORD *)(v10 - 8);
  v179 = v10;
  MEMORY[0x1E0C80A78](v10);
  v184 = (uint64_t)&v175 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1BB8714E8();
  v182 = *(_QWORD *)(v12 - 8);
  *(_QWORD *)&v183 = v12;
  MEMORY[0x1E0C80A78](v12);
  v177 = (char *)&v175 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v181 = (char *)&v175 - v15;
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, v5);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v175 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v175 - v20;
  v22 = type metadata accessor for FormatInspectionItem(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v187 = (uint64_t)&v175 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_editor];
  swift_retain();
  sub_1BB23AE4C((uint64_t)v207, 0.0, 0.0, 22.0, 22.0);
  swift_release();
  v26 = (uint64_t)a2;
  v27 = sub_1BB86CBD4();
  if ((v27 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_51;
  }
  v185 = v3;
  v28 = *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups];
  if (v27 >= *(_QWORD *)(v28 + 16))
  {
LABEL_51:
    __break(1u);
    goto LABEL_52;
  }
  v188 = v21;
  v21 = *(char **)(v28 + 40 * v27 + 64);
  swift_bridgeObjectRetain();
  v3 = a2;
  v29 = sub_1BB86CBC8();
  if ((v29 & 0x8000000000000000) != 0)
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_once();
LABEL_29:
    sub_1BA9719E4((void *)2, 0, 0, v26, v23);
    swift_bridgeObjectRelease();
    v129 = *((_QWORD *)a2 + 1);
    v130 = (void (*)(uint64_t, uint64_t, char *))*((_QWORD *)v18 + 7);
    v131 = swift_unknownObjectRetain();
    v130(v131, v129, v3);
    swift_unknownObjectRelease();
    *(_QWORD *)&v199 = 0;
    *((_QWORD *)&v199 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    v173 = swift_bridgeObjectRelease();
    *(_QWORD *)&v199 = v21 + 9;
    *((_QWORD *)&v199 + 1) = 0x80000001BB97FD00;
    (*((void (**)(uint64_t))v18 + 19))(v173);
    sub_1BB872AFC(v174);
    swift_bridgeObjectRelease();
    sub_1BA9719E4((void *)2, 0, 0, v199, *((uint64_t *)&v199 + 1));
    sub_1BA8DAD20((uint64_t)v207);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_44:
    sub_1BA4A2E80(v187, type metadata accessor for FormatInspectionItem);
LABEL_45:
    v32 = (uint64_t)v188;
    return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  }
  if (v29 >= *((_QWORD *)v21 + 2))
    goto LABEL_53;
  v30 = (uint64_t)&v21[((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
                    + *(_QWORD *)(v23 + 72) * v29];
  v31 = v187;
  sub_1BA4C2DD8(v30, v187, type metadata accessor for FormatInspectionItem);
  swift_bridgeObjectRelease();
  v32 = (uint64_t)v188;
  sub_1BB216A34(v31 + *(int *)(v22 + 24), (uint64_t)v188, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
  v33 = type metadata accessor for FormatInspectionItem.Value(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 48))(v32, 1, v33) != 1)
  {
    sub_1BB216A34(v32, (uint64_t)v18, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 4u:
        v34 = *(_QWORD *)v18;
        v18 = (char *)v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)&v199 = v34;
        swift_retain();
        v36 = sub_1BB522954((uint64_t)v207, &v199);
        swift_release();
        *(_QWORD *)(v35 + 32) = v36;
        v37 = (void *)sub_1BB86CB8C();
        v38 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v37);

        sub_1BB20ACC4(v35, (uint64_t)v38);
        sub_1BA8DAD20((uint64_t)v207);
        swift_setDeallocating();
        swift_arrayDestroy();
        v32 = (uint64_t)v188;
        swift_deallocClassInstance();
        goto LABEL_37;
      case 5u:
        v39 = *(_QWORD *)v18;
        v40 = *((_QWORD *)v18 + 1);
        v41 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = xmmword_1BB87A390;
        *(_QWORD *)&v199 = v39;
        swift_retain();
        v43 = sub_1BB522954((uint64_t)v207, &v199);
        swift_release();
        *(_QWORD *)(v42 + 32) = v43;
        *(_QWORD *)&v199 = v40;
        swift_retain();
        v44 = sub_1BB522954((uint64_t)v207, &v199);
        swift_release();
        *(_QWORD *)(v42 + 40) = v44;
        v45 = (void *)sub_1BB86CB8C();
        v46 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v45);

        sub_1BB20ACC4(v42, (uint64_t)v46);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        swift_arrayDestroy();
        v32 = (uint64_t)v188;
        swift_deallocClassInstance();
        swift_release();
        swift_release();
        goto LABEL_14;
      case 6u:
        v47 = *(_QWORD *)v18;
        v48 = *((_QWORD *)v18 + 1);
        v183 = *((_OWORD *)v18 + 1);
        v50 = *((_QWORD *)v18 + 4);
        v49 = *((_QWORD *)v18 + 5);
        v184 = v26;
        v51 = *((_QWORD *)v18 + 6);
        v52 = *((_QWORD *)v18 + 7);
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v53 = swift_allocObject();
        *(_OWORD *)(v53 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)&v199 = v47;
        *((_QWORD *)&v199 + 1) = v48;
        v200 = v183;
        *(_QWORD *)&v201 = v50;
        *((_QWORD *)&v201 + 1) = v49;
        *(_QWORD *)&v202 = v51;
        *((_QWORD *)&v202 + 1) = v52;
        v54 = sub_1BB341CF4((uint64_t *)&v199);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BA5DCC4C(v51);
        *(_QWORD *)(v53 + 32) = v54;
        v55 = (void *)sub_1BB86CB8C();
        v56 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v55);

        sub_1BB20ACC4(v53, (uint64_t)v56);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        v32 = (uint64_t)v188;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1BA4A2E80(v187, type metadata accessor for FormatInspectionItem);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      case 7u:
        v57 = *((_OWORD *)v18 + 5);
        v194 = *((_OWORD *)v18 + 4);
        v195 = v57;
        v58 = *((_OWORD *)v18 + 7);
        v196 = *((_OWORD *)v18 + 6);
        v197 = v58;
        v59 = *((_OWORD *)v18 + 1);
        v190 = *(_OWORD *)v18;
        v191 = v59;
        v60 = *((_OWORD *)v18 + 3);
        v192 = *((_OWORD *)v18 + 2);
        v193 = v60;
        v61 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = xmmword_1BB87CE70;
        v63 = *((_OWORD *)v18 + 5);
        v203 = *((_OWORD *)v18 + 4);
        v204[0] = v63;
        v64 = *((_OWORD *)v18 + 7);
        v204[1] = *((_OWORD *)v18 + 6);
        v205 = v64;
        v65 = *((_OWORD *)v18 + 1);
        v199 = *(_OWORD *)v18;
        v200 = v65;
        v66 = *((_OWORD *)v18 + 3);
        v201 = *((_OWORD *)v18 + 2);
        v202 = v66;
        nullsub_1();
        sub_1BA6A09F0((uint64_t)&v199, (uint64_t)v189, (unint64_t *)&qword_1EF2BDFF0, (uint64_t)&type metadata for FormatRadialGradient);
        v67 = sub_1BB1E56A0((uint64_t)v189);
        sub_1BB0A432C((uint64_t)&v190);
        *(_QWORD *)(v62 + 32) = v67;
        v68 = (void *)sub_1BB86CB8C();
        v69 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v68);
        goto LABEL_24;
      case 8u:
        v41 = v31;
        v70 = *(_QWORD *)v18;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v71 = swift_allocObject();
        *(_OWORD *)(v71 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)&v199 = v70;
        *(_QWORD *)(v71 + 32) = sub_1BB757E70(&v199);
        v72 = (void *)sub_1BB86CB8C();
        v73 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v72);

        sub_1BB20ACC4(v71, (uint64_t)v73);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        swift_arrayDestroy();
        v32 = (uint64_t)v188;
        swift_deallocClassInstance();
        sub_1BA756FBC(v70);
LABEL_14:
        sub_1BA4A2E80(v41, type metadata accessor for FormatInspectionItem);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      case 9u:
        v74 = *((_OWORD *)v18 + 7);
        v196 = *((_OWORD *)v18 + 6);
        v197 = v74;
        v198[0] = *((_OWORD *)v18 + 8);
        *(_OWORD *)((char *)v198 + 9) = *(_OWORD *)(v18 + 137);
        v75 = *((_OWORD *)v18 + 3);
        v192 = *((_OWORD *)v18 + 2);
        v193 = v75;
        v76 = *((_OWORD *)v18 + 5);
        v194 = *((_OWORD *)v18 + 4);
        v195 = v76;
        v77 = *((_OWORD *)v18 + 1);
        v190 = *(_OWORD *)v18;
        v191 = v77;
        v61 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = xmmword_1BB87CE70;
        v79 = *((_OWORD *)v18 + 7);
        v204[1] = *((_OWORD *)v18 + 6);
        v205 = v79;
        v206[0] = *((_OWORD *)v18 + 8);
        *(_OWORD *)((char *)v206 + 9) = *(_OWORD *)(v18 + 137);
        v80 = *((_OWORD *)v18 + 3);
        v201 = *((_OWORD *)v18 + 2);
        v202 = v80;
        v81 = *((_OWORD *)v18 + 5);
        v203 = *((_OWORD *)v18 + 4);
        v204[0] = v81;
        v82 = *((_OWORD *)v18 + 1);
        v199 = *(_OWORD *)v18;
        v200 = v82;
        nullsub_1();
        sub_1BA6A09F0((uint64_t)&v199, (uint64_t)v189, (unint64_t *)&qword_1EF2BDFE0, (uint64_t)&type metadata for FormatSplitBackground);
        *(_QWORD *)(v78 + 32) = sub_1BAA8D164((uint64_t)v189);
        v83 = (void *)sub_1BB86CB8C();
        v84 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v83);

        sub_1BB20ACC4(v78, (uint64_t)v84);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        v32 = (uint64_t)v188;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1BAC65F98((uint64_t)&v190);
        goto LABEL_25;
      case 0xAu:
        v85 = v31;
        v86 = *((_QWORD *)v18 + 1);
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v87 = swift_allocObject();
        *(_OWORD *)(v87 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v87 + 32) = sub_1BB6631C8(v207, v86);
        v88 = (void *)sub_1BB86CB8C();
        v89 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v88);

        sub_1BB20ACC4(v87, (uint64_t)v89);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        swift_arrayDestroy();
        v32 = (uint64_t)v188;
        swift_deallocClassInstance();
        swift_release();
        swift_release();
        sub_1BA4A2E80(v85, type metadata accessor for FormatInspectionItem);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      case 0xEu:
        v91 = *(_QWORD *)v18;
        v61 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v62 + 32) = v91;
        swift_bridgeObjectRelease();
        v68 = (void *)sub_1BB86CB8C();
        v69 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v68);
        goto LABEL_24;
      case 0xFu:
        v92 = v31;
        v93 = *(_QWORD *)v18;
        v94 = *((_QWORD *)v18 + 1);
        v95 = objc_allocWithZone((Class)type metadata accessor for DebugFormatCodeViewController());
        swift_retain();
        v96 = sub_1BB184F34(v93, v94);
        v97 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v96);
        objc_msgSend(v185, sel_presentViewController_animated_completion_, v97, 1, 0);
        sub_1BA8DAD20((uint64_t)v207);
        swift_release();

        goto LABEL_35;
      case 0x10u:
        v98 = *((_OWORD *)v18 + 5);
        v203 = *((_OWORD *)v18 + 4);
        v204[0] = v98;
        *(_OWORD *)((char *)v204 + 9) = *(_OWORD *)(v18 + 89);
        v99 = *((_OWORD *)v18 + 1);
        v199 = *(_OWORD *)v18;
        v200 = v99;
        v100 = *((_OWORD *)v18 + 3);
        v201 = *((_OWORD *)v18 + 2);
        v202 = v100;
        sub_1BAB05BDC((uint64_t)&v199, (uint64_t)&v190);
        v101 = sub_1BAFDDC54((uint64_t)v207, (uint64_t)&v190);
        sub_1BA604728((uint64_t)&v190, (uint64_t)&qword_1EF2C8DD0, (uint64_t)&type metadata for FormatInspectionFeedItem, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4AD288);
        v61 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v102 = swift_allocObject();
        *(_OWORD *)(v102 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v102 + 32) = v101;
        v103 = (void *)sub_1BB86CB8C();
        v104 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v103);

        sub_1BB20ACC4(v102, (uint64_t)v104);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        v32 = (uint64_t)v188;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1BAB05C18((uint64_t)&v199);
        goto LABEL_25;
      case 0x11u:
        v105 = (uint64_t)v18;
        v106 = v184;
        sub_1BA5193C4(v105, v184, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
        v107 = v180;
        sub_1BA4C2DD8(v106, v180, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v178 + 56))(v107, 0, 1, v179);
        v108 = sub_1BA93E8F4((uint64_t)v207, v107);
        sub_1BA604728(v107, (uint64_t)&unk_1EF2BDFD0, (uint64_t)type metadata accessor for FormatInspectionFeedGroupItem, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        v109 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v110 = swift_allocObject();
        *(_OWORD *)(v110 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v110 + 32) = v108;
        v111 = (void *)sub_1BB86CB8C();
        v112 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v111);

        sub_1BB20ACC4(v110, (uint64_t)v112);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        swift_arrayDestroy();
        v32 = (uint64_t)v188;
        swift_deallocClassInstance();
        sub_1BA4A2E80(v106, (uint64_t (*)(_QWORD))type metadata accessor for FormatInspectionFeedGroupItem);
        goto LABEL_31;
      case 0x13u:
        v113 = *((_OWORD *)v18 + 7);
        v204[1] = *((_OWORD *)v18 + 6);
        v205 = v113;
        v206[0] = *((_OWORD *)v18 + 8);
        LOBYTE(v206[1]) = v18[144];
        v114 = *((_OWORD *)v18 + 3);
        v201 = *((_OWORD *)v18 + 2);
        v202 = v114;
        v115 = *((_OWORD *)v18 + 5);
        v203 = *((_OWORD *)v18 + 4);
        v204[0] = v115;
        v116 = *((_OWORD *)v18 + 1);
        v199 = *(_OWORD *)v18;
        v200 = v116;
        v61 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v117 = swift_allocObject();
        *(_OWORD *)(v117 + 16) = xmmword_1BB87CE70;
        sub_1BA6A09F0((uint64_t)&v199 + 8, (uint64_t)&v190, (unint64_t *)&qword_1ED39E5C0, (uint64_t)&type metadata for FormatMediaTiming);
        *(_QWORD *)(v117 + 32) = sub_1BB004468((uint64_t)&v190);
        v118 = (void *)sub_1BB86CB8C();
        v119 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v118);

        sub_1BB20ACC4(v117, (uint64_t)v119);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        v32 = (uint64_t)v188;
        swift_arrayDestroy();
        swift_deallocClassInstance();
        sub_1BAC65EC4((uint64_t)&v199);
        goto LABEL_25;
      case 0x15u:
        v120 = *v18;
        v61 = v31;
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v62 = swift_allocObject();
        *(_OWORD *)(v62 + 16) = xmmword_1BB87CE70;
        LOBYTE(v199) = v120;
        *(_QWORD *)(v62 + 32) = sub_1BB610584((unsigned __int8 *)&v199);
        v68 = (void *)sub_1BB86CB8C();
        v69 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v68);
LABEL_24:
        v121 = v69;

        sub_1BB20ACC4(v62, (uint64_t)v121);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        v32 = (uint64_t)v188;
        swift_arrayDestroy();
        swift_deallocClassInstance();
LABEL_25:
        sub_1BA4A2E80(v61, type metadata accessor for FormatInspectionItem);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      case 0x16u:
        v18 = *(char **)v18;
        v122 = (void *)sub_1BB86CB8C();
        objc_msgSend(v186, sel_deselectRowAtIndexPath_animated_, v122, 1);

        v3 = *(char **)(v25 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandSource);
        if (!v3)
        {
          sub_1BA4A2E80(v31, type metadata accessor for FormatInspectionItem);
          swift_release();
          goto LABEL_7;
        }
        a2 = (char *)(v25 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter);
        v123 = *(_QWORD *)(v25 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter + 8);
        v124 = (uint64_t (*)(uint64_t, uint64_t, char *))*((_QWORD *)v18 + 5);
        swift_retain();
        v125 = swift_unknownObjectRetain();
        v126 = v124(v125, v123, v3);
        swift_unknownObjectRelease();
        if ((v126 & 1) == 0)
        {
          sub_1BA4A2E80(v187, type metadata accessor for FormatInspectionItem);
          swift_release();
          swift_release();
          sub_1BA8DAD20((uint64_t)v207);
          goto LABEL_45;
        }
        v21 = (char *)0xD000000000000015;
        *(_QWORD *)&v199 = 0;
        *((_QWORD *)&v199 + 1) = 0xE000000000000000;
        sub_1BB873CB4();
        v127 = swift_bridgeObjectRelease();
        *(_QWORD *)&v199 = 0xD000000000000015;
        *((_QWORD *)&v199 + 1) = 0x80000001BB97FCB0;
        (*((void (**)(uint64_t))v18 + 19))(v127);
        sub_1BB872AFC(v128);
        swift_bridgeObjectRelease();
        v23 = *((_QWORD *)&v199 + 1);
        v26 = v199;
        if (qword_1EF2A6C58 != -1)
          goto LABEL_54;
        goto LABEL_29;
      case 0x1Au:
        v133 = v181;
        v132 = v182;
        v134 = v183;
        (*(void (**)(char *, char *, _QWORD))(v182 + 32))(v181, v18, v183);
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v177, v133, v134);
        v135 = objc_allocWithZone((Class)sub_1BB8706C0());
        v136 = (void *)sub_1BB8706B4();
        v109 = v31;
        v137 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v136);
        objc_msgSend(v185, sel_presentViewController_animated_completion_, v137, 1, 0);
        sub_1BA8DAD20((uint64_t)v207);

        (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v134);
LABEL_31:
        sub_1BA4A2E80(v109, type metadata accessor for FormatInspectionItem);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      case 0x1Cu:
        v139 = *(_QWORD *)v18;
        v138 = *((_QWORD *)v18 + 1);
        v140 = *((_QWORD *)v18 + 2);
        v141 = *((_QWORD *)v18 + 3);
        v142 = (void *)sub_1BB86CB8C();
        v143 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v142);

        if (v143)
        {
          *(_QWORD *)&v199 = v139;
          *((_QWORD *)&v199 + 1) = v138;
          *(_QWORD *)&v200 = v140;
          *((_QWORD *)&v200 + 1) = v141;
          v144 = v143;
          swift_retain();
          swift_retain();
          v145 = (uint64_t)v176;
          sub_1BB86E494();
          swift_release();
          swift_release();
          v146 = sub_1BB64AE34(v145);
          sub_1BA604728(v145, (uint64_t)qword_1EF2B78D8, (uint64_t)type metadata accessor for FormatDebuggerContext, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
          swift_bridgeObjectRelease();
          objc_msgSend(v144, sel_setSelected_, v146);
          sub_1BA8DAD20((uint64_t)v207);

          goto LABEL_44;
        }
        sub_1BA4A2E80(v187, type metadata accessor for FormatInspectionItem);
        sub_1BA8DAD20((uint64_t)v207);
        swift_bridgeObjectRelease();
        break;
      case 0x1Du:
        v92 = v31;
        v147 = *(void (**)(uint64_t))(*(_QWORD *)v18
                                              + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_onSelectBlock);
        v148 = swift_retain();
        v147(v148);
        swift_release();
        objc_msgSend(v186, sel_reloadData);
        sub_1BA8DAD20((uint64_t)v207);
        swift_release();
LABEL_35:
        sub_1BA4A2E80(v92, type metadata accessor for FormatInspectionItem);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      case 0x1Eu:
        *(_QWORD *)&v199 = *(_QWORD *)v18;
        v18 = (char *)v31;
        swift_retain();
        v149 = sub_1BA9634B8((uint64_t)v207, &v199);
        swift_release();
        sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v150 = swift_allocObject();
        *(_OWORD *)(v150 + 16) = xmmword_1BB87CE70;
        *(_QWORD *)(v150 + 32) = v149;
        v151 = (void *)sub_1BB86CB8C();
        v152 = objc_msgSend(v186, sel_cellForRowAtIndexPath_, v151);

        sub_1BB20ACC4(v150, (uint64_t)v152);
        sub_1BA8DAD20((uint64_t)v207);

        swift_setDeallocating();
        swift_arrayDestroy();
        v32 = (uint64_t)v188;
        swift_deallocClassInstance();
LABEL_37:
        swift_release();
        v90 = type metadata accessor for FormatInspectionItem;
        goto LABEL_38;
      case 0x1Fu:
        v153 = *(void **)v18;
        v154 = (void *)sub_1BB86CB8C();
        v155 = v186;
        objc_msgSend(v186, sel_deselectRowAtIndexPath_animated_, v154, 0);

        v156 = v153;
        v157 = sub_1BA9075EC(v153);
        v158 = sub_1BA90A31C(v157);
        v160 = v159;

        v161 = objc_allocWithZone((Class)type metadata accessor for DebugFormatErrorViewController());
        swift_retain();
        v162 = v158;
        swift_bridgeObjectRetain();
        v163 = sub_1BB5E45E0(v25, v158, v160);

        swift_release();
        swift_bridgeObjectRelease();
        v164 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v163);
        objc_msgSend(v164, sel_setModalPresentationStyle_, 7);
        v165 = objc_msgSend(v164, sel_popoverPresentationController);
        if (v165)
        {
          v166 = v165;
          v167 = (void *)sub_1BB86CB8C();
          v168 = objc_msgSend(v155, sel_cellForRowAtIndexPath_, v167);

          objc_msgSend(v166, sel_setSourceView_, v168);
        }
        v169 = objc_msgSend(v164, sel_popoverPresentationController);
        v170 = v185;
        if (v169)
        {
          v171 = v169;
          objc_msgSend(v169, sel_setPermittedArrowDirections_, *(_QWORD *)&v185[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections]);

        }
        objc_msgSend(v164, sel_setPreferredContentSize_, 540.0, 620.0);
        objc_msgSend(v170, sel_presentViewController_animated_completion_, v164, 1, 0);
        sub_1BA8DAD20((uint64_t)v207);

        swift_bridgeObjectRelease();
        goto LABEL_44;
      default:
        sub_1BA4A2E80(v31, type metadata accessor for FormatInspectionItem);
        sub_1BA8DAD20((uint64_t)v207);
        v90 = type metadata accessor for FormatInspectionItem.Value;
LABEL_38:
        sub_1BA4A2E80((uint64_t)v18, v90);
        return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
    }
    goto LABEL_45;
  }
  sub_1BA4A2E80(v31, type metadata accessor for FormatInspectionItem);
LABEL_7:
  sub_1BA8DAD20((uint64_t)v207);
  return sub_1BA604728(v32, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
}

id sub_1BB21410C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  id v25;
  void *v26;
  id v27;
  char **v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  void *v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  uint64_t v37;
  id v38;
  void *v39;
  __int128 v41;
  _QWORD *aBlock;
  uint64_t v43;
  void (*v44)(uint64_t, void *, void *, void *);
  void *v45;
  void *v46;
  uint64_t v47;

  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v41 - v6;
  v8 = type metadata accessor for FormatInspectionItem(0);
  v9 = a1 + *(int *)(v8 + 28);
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 == 255)
  {
    sub_1BB216A34(a1 + *(int *)(v8 + 24), (uint64_t)v7, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
    v13 = type metadata accessor for FormatInspectionItem.Value(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 48))(v7, 1, v13) != 1)
    {
      sub_1BB216A34((uint64_t)v7, (uint64_t)v4, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
      if (swift_getEnumCaseMultiPayload() == 28)
      {
        v41 = *(_OWORD *)v4;
        v14 = *((_QWORD *)v4 + 2);
        v15 = *((_QWORD *)v4 + 3);
        v16 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v17 = swift_allocObject();
        *(_QWORD *)(v17 + 16) = v16;
        *(_OWORD *)(v17 + 24) = v41;
        *(_QWORD *)(v17 + 40) = v14;
        *(_QWORD *)(v17 + 48) = v15;
        swift_retain();
        v18 = (void *)sub_1BB872970();
        v46 = sub_1BB215F90;
        v47 = v17;
        aBlock = (_QWORD *)MEMORY[0x1E0C809B0];
        v43 = 1107296256;
        v44 = sub_1BB2B22A4;
        v45 = &block_descriptor_50;
        v19 = _Block_copy(&aBlock);
        v20 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v18, v19);

        _Block_release(v19);
        swift_release();
        swift_release();
        v21 = objc_msgSend((id)objc_opt_self(), sel_systemRedColor);
        objc_msgSend(v20, sel_setBackgroundColor_, v21);

        v22 = (void *)sub_1BB872970();
        v23 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v22);

        objc_msgSend(v20, sel_setImage_, v23);
        sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
        v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1BB8856E0;
        *(_QWORD *)(v24 + 32) = v20;
        aBlock = (_QWORD *)v24;
        sub_1BB872DCC();
        sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
        v25 = v20;
        v26 = (void *)sub_1BB872D9C();
        swift_bridgeObjectRelease();
        v27 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v26);

        objc_msgSend(v27, sel_setPerformsFirstActionWithFullSwipe_, 1);
        sub_1BA604728((uint64_t)v7, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        return v27;
      }
      sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatInspectionItem.Value);
    }
    sub_1BA604728((uint64_t)v7, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
    return 0;
  }
  v11 = *(_QWORD *)v9;
  v12 = *(_QWORD *)(v9 + 8);
  sub_1BB215FBC(v11, v12, v10);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if ((sub_1BAAD5D1C(v11, v12, aBlock) & 1) != 0)
    v28 = &selRef_systemGrayColor;
  else
    v28 = &selRef_systemBlueColor;
  swift_bridgeObjectRelease();
  v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v30 = swift_allocObject();
  *(_QWORD *)(v30 + 16) = v29;
  *(_QWORD *)(v30 + 24) = v11;
  *(_QWORD *)(v30 + 32) = v12;
  *(_BYTE *)(v30 + 40) = v10 & 1;
  swift_retain();
  v31 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v46 = sub_1BB216004;
  v47 = v30;
  aBlock = (_QWORD *)MEMORY[0x1E0C809B0];
  v43 = 1107296256;
  v44 = sub_1BB2B22A4;
  v45 = &block_descriptor_10_1;
  v32 = _Block_copy(&aBlock);
  v33 = objc_msgSend((id)objc_opt_self(), sel_contextualActionWithStyle_title_handler_, 0, v31, v32);

  _Block_release(v32);
  swift_release();
  swift_release();
  v34 = objc_msgSend((id)objc_opt_self(), *v28);
  objc_msgSend(v33, sel_setBackgroundColor_, v34);

  v35 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v36 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v35);

  objc_msgSend(v33, sel_setImage_, v36);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1BB8856E0;
  *(_QWORD *)(v37 + 32) = v33;
  aBlock = (_QWORD *)v37;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
  v38 = v33;
  v39 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v27 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v39);

  objc_msgSend(v27, sel_setPerformsFirstActionWithFullSwipe_, 1);
  return v27;
}

uint64_t sub_1BB21496C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v12;
  uint64_t v13;
  void *v14;

  v12 = a5 + 16;
  swift_beginAccess();
  v13 = MEMORY[0x1BCCE5D40](v12);
  if (v13)
  {
    v14 = (void *)v13;
    swift_retain();

    sub_1BB2314D8(a6, a7, a8 & 1);
    swift_release();
  }
  return a3(1);
}

void sub_1BB214A24(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;

  v13 = a5 + 16;
  swift_beginAccess();
  v14 = MEMORY[0x1BCCE5D40](v13);
  if (v14)
  {
    v15 = (void *)v14;
    swift_retain();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    swift_bridgeObjectRetain();
    sub_1BB21544C(v16, a6, a7, a8, a9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    swift_release();
    ((void (*)(uint64_t))a3)(1);

  }
  else
  {
    a3();
  }
}

uint64_t sub_1BB214B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  double v6;
  double v7;
  uint64_t v8;
  _BYTE v10[64];

  v6 = *(double *)(a2 + 16);
  v7 = *(double *)(a2 + 24);
  swift_retain();
  sub_1BB23AE4C((uint64_t)v10, 0.0, 0.0, v6, v7);
  swift_release();
  sub_1BA8DACF0((uint64_t)v10);
  v8 = sub_1BB214DB0(a4);
  sub_1BA8DAD20((uint64_t)v10);
  sub_1BB20ACC4(v8, a3);
  swift_bridgeObjectRelease();
  return sub_1BA8DAD20((uint64_t)v10);
}

uint64_t sub_1BB214C14()
{
  id *v0;
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(*v0, sel_title);
  if (!v1)
    return 0x6F74636570736E49;
  v2 = v1;
  v3 = sub_1BB8729A0();

  return v3;
}

void *sub_1BB214C88()
{
  _QWORD *v0;
  void *v1;
  id v2;

  v1 = *(void **)(*v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_image);
  v2 = v1;
  return v1;
}

id sub_1BB214CB8()
{
  id *v0;
  id v1;
  id v2;

  v1 = objc_msgSend(*v0, sel_navigationItem);
  v2 = objc_msgSend(v1, sel_searchController);

  return v2;
}

uint64_t sub_1BB214D0C(uint64_t a1, uint64_t a2)
{
  return sub_1BB214D24(a1, a2, (SEL *)&selRef_leftBarButtonItems);
}

uint64_t sub_1BB214D18(uint64_t a1, uint64_t a2)
{
  return sub_1BB214D24(a1, a2, (SEL *)&selRef_rightBarButtonItems);
}

uint64_t sub_1BB214D24(uint64_t a1, uint64_t a2, SEL *a3)
{
  id *v3;
  id v5;
  id v6;
  uint64_t v7;

  v5 = objc_msgSend(*v3, sel_navigationItem);
  v6 = objc_msgSend(v5, *a3);

  if (!v6)
    return 0;
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v7 = sub_1BB872DB4();

  return v7;
}

uint64_t sub_1BB214DB0(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v15 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B130(0, v1, 0);
    v2 = v15;
    v4 = (uint64_t *)(a1 + 64);
    do
    {
      v5 = *v4;
      v6 = *((unsigned __int16 *)v4 - 4);
      v11 = *(v4 - 4);
      v12 = *(_OWORD *)(v4 - 3);
      v13 = v6;
      v14 = v5;
      v7 = sub_1BAB053DC(&v11);
      v15 = v2;
      v9 = *(_QWORD *)(v2 + 16);
      v8 = *(_QWORD *)(v2 + 24);
      if (v9 >= v8 >> 1)
      {
        sub_1BAC7B130(v8 > 1, v9 + 1, 1);
        v2 = v15;
      }
      *(_QWORD *)(v2 + 16) = v9 + 1;
      *(_QWORD *)(v2 + 8 * v9 + 32) = v7;
      v4 += 5;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1BB214EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t result;
  uint64_t v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  unint64_t v30;
  char v31;
  _BYTE *v32;
  uint64_t (*v33)(void);
  _BYTE *v34;
  unint64_t v35;
  char v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  _BYTE v40[16];
  _BYTE *v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _BYTE *v57;
  uint64_t v58;
  _BYTE *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;

  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v57 = &v40[-v5];
  v6 = type metadata accessor for FormatInspectionItem.Value(0);
  v53 = *(_QWORD *)(v6 - 8);
  v54 = v6;
  MEMORY[0x1E0C80A78](v6);
  v51 = &v40[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v52 = type metadata accessor for FormatInspectionItem(0);
  MEMORY[0x1E0C80A78](v52);
  v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v13 = &v40[-v12];
  result = MEMORY[0x1E0DEE9D8];
  v64 = MEMORY[0x1E0DEE9D8];
  v45 = *(_QWORD *)(a1 + 16);
  if (v45)
  {
    v15 = 0;
    v16 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v50 = *(_QWORD *)(v11 + 72);
    v43 = v16;
    v44 = a1 + v16;
    v17 = &qword_1EF2B7C40;
    v46 = (uint64_t *)(a2 + 32);
    v59 = &v40[-v12];
    v42 = a2;
    v41 = v9;
    while (1)
    {
      v49 = v15;
      sub_1BA4C2DD8(v44 + v50 * v15, (uint64_t)v13, type metadata accessor for FormatInspectionItem);
      v47 = *(_QWORD *)(a2 + 16);
      if (!v47 || (v18 = *v46, (v19 = *(_QWORD *)(*v46 + 16)) == 0))
      {
LABEL_29:
        sub_1BA5193C4((uint64_t)v13, (uint64_t)v9, type metadata accessor for FormatInspectionItem);
        v37 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7A248(0, *(_QWORD *)(v37 + 16) + 1, 1);
          v37 = v64;
        }
        v39 = *(_QWORD *)(v37 + 16);
        v38 = *(_QWORD *)(v37 + 24);
        if (v39 >= v38 >> 1)
        {
          sub_1BAC7A248(v38 > 1, v39 + 1, 1);
          v37 = v64;
        }
        *(_QWORD *)(v37 + 16) = v39 + 1;
        sub_1BA5193C4((uint64_t)v9, v37 + v43 + v39 * v50, type metadata accessor for FormatInspectionItem);
        v13 = v59;
        goto LABEL_34;
      }
      swift_bridgeObjectRetain();
      v20 = 1;
      while (2)
      {
        v48 = v20;
        result = swift_bridgeObjectRetain();
        v21 = 0;
        v22 = (uint64_t *)(v18 + 40);
        v23 = v19 - 1;
        v24 = 1;
        v58 = v18;
        v55 = v19 - 1;
        while (1)
        {
          if ((v24 & 1) == 0)
          {
            if (v23 == v21)
              break;
            goto LABEL_8;
          }
          v25 = (uint64_t)v17;
          v27 = *(v22 - 1);
          v26 = *v22;
          if (*((_QWORD *)v13 + 1))
          {
            v62 = sub_1BB872A0C();
            v63 = v28;
            v60 = v27;
            v61 = v26;
            sub_1BA7114A0();
            swift_bridgeObjectRetain();
            v29 = sub_1BB873B40();
            v13 = v59;
            swift_bridgeObjectRelease();
            if ((v29 & 1) != 0)
              goto LABEL_17;
            if (!*((_QWORD *)v13 + 3))
              goto LABEL_20;
          }
          else
          {
            swift_bridgeObjectRetain();
            if (!*((_QWORD *)v13 + 3))
              goto LABEL_20;
          }
          v62 = sub_1BB872A0C();
          v63 = v30;
          v60 = v27;
          v61 = v26;
          sub_1BA7114A0();
          v31 = sub_1BB873B40();
          v13 = v59;
          swift_bridgeObjectRelease();
          if ((v31 & 1) != 0)
          {
LABEL_17:
            result = swift_bridgeObjectRelease();
            v17 = (unint64_t *)v25;
LABEL_18:
            v18 = v58;
            if (v23 == v21)
            {
              a2 = v42;
              swift_bridgeObjectRelease();
LABEL_28:
              v9 = v41;
              swift_bridgeObjectRelease();
              goto LABEL_29;
            }
            v24 = 1;
            goto LABEL_9;
          }
LABEL_20:
          v56 = v27;
          v32 = v57;
          v33 = MEMORY[0x1E0DEB940];
          sub_1BB216A34((uint64_t)&v13[*(int *)(v52 + 24)], (uint64_t)v57, v25, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
          if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v53 + 48))(v32, 1, v54) == 1)
          {
            sub_1BA604728((uint64_t)v57, v25, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)v33, (uint64_t (*)(_QWORD))sub_1BA4B07F0);
            result = swift_bridgeObjectRelease();
            v17 = (unint64_t *)v25;
            v23 = v55;
          }
          else
          {
            v34 = v51;
            sub_1BA5193C4((uint64_t)v57, (uint64_t)v51, type metadata accessor for FormatInspectionItem.Value);
            v62 = 0;
            v63 = 0xE000000000000000;
            sub_1BB873E34();
            v62 = sub_1BB872A0C();
            v63 = v35;
            v60 = v56;
            v61 = v26;
            sub_1BA7114A0();
            v36 = sub_1BB873B40();
            v13 = v59;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1BA4A2E80((uint64_t)v34, type metadata accessor for FormatInspectionItem.Value);
            result = swift_bridgeObjectRelease();
            v17 = (unint64_t *)v25;
            v23 = v55;
            if ((v36 & 1) != 0)
              goto LABEL_18;
          }
          v18 = v58;
          if (v23 == v21)
            break;
LABEL_8:
          v24 = 0;
LABEL_9:
          ++v21;
          v22 += 2;
          if (v21 >= *(_QWORD *)(v18 + 16))
          {
            __break(1u);
            return result;
          }
        }
        swift_bridgeObjectRelease();
        if (v48 != v47)
        {
          v18 = v46[v48];
          v20 = v48 + 1;
          v19 = *(_QWORD *)(v18 + 16);
          if (v19)
            continue;
          a2 = v42;
          goto LABEL_28;
        }
        break;
      }
      a2 = v42;
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v13, type metadata accessor for FormatInspectionItem);
      v9 = v41;
LABEL_34:
      v15 = v49 + 1;
      if (v49 + 1 == v45)
        return v64;
    }
  }
  return result;
}

uint64_t sub_1BB21544C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *i;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = *(_QWORD *)(result + 16);
  if (!v5)
    return MEMORY[0x1E0DEE9D8];
  v8 = 0;
  v27 = -(uint64_t)v5;
  v9 = result + 56;
  v10 = MEMORY[0x1E0DEE9D8];
  v24 = result + 56;
  v25 = *(_QWORD *)(result + 16);
  do
  {
    v26 = v10;
    if (v8 <= v5)
      v11 = v5;
    else
      v11 = v8;
    v12 = -(uint64_t)v11;
    for (i = (uint64_t *)(v9 + 32 * v8++); ; i += 4)
    {
      if (v12 + v8 == 1)
      {
        __break(1u);
        return result;
      }
      v18 = *(i - 3);
      v19 = *(i - 2);
      v15 = *(i - 1);
      v16 = *i;
      if (v18 == a2 && v19 == a3)
        break;
      result = sub_1BB874398();
      if ((result & 1) == 0 || v15 != a4 || v16 != a5)
        goto LABEL_21;
LABEL_12:
      ++v8;
      if (v27 + v8 == 1)
        return v26;
    }
    if (v15 == a4 && v16 == a5)
      goto LABEL_12;
    v18 = a2;
    v19 = a3;
LABEL_21:
    swift_bridgeObjectRetain();
    v10 = v26;
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      result = sub_1BAC7AF08(0, *(_QWORD *)(v26 + 16) + 1, 1);
      v10 = v26;
    }
    v21 = *(_QWORD *)(v10 + 16);
    v20 = *(_QWORD *)(v10 + 24);
    v22 = v21 + 1;
    if (v21 >= v20 >> 1)
    {
      result = sub_1BAC7AF08(v20 > 1, v21 + 1, 1);
      v22 = v21 + 1;
      v10 = v26;
    }
    *(_QWORD *)(v10 + 16) = v22;
    v23 = (_QWORD *)(v10 + 32 * v21);
    v23[4] = v18;
    v23[5] = v19;
    v23[6] = v15;
    v23[7] = v16;
    v9 = v24;
    v5 = v25;
  }
  while (v27 + v8);
  return v10;
}

void sub_1BB215618()
{
  _BYTE *v0;
  _QWORD *v1;
  uint64_t v2;

  v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoPreferredContentSize] = 1;
  v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange] = 1;
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredArrowDirections] = 4;
  *(_OWORD *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8DC430;
  v1 = &v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filterTerm];
  *v1 = 0;
  v1[1] = 0xE000000000000000;
  v2 = OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_tableView;
  *(_QWORD *)&v0[v2] = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3D48]), sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_contentSizeObserver] = 0;

  sub_1BB873EAC();
  __break(1u);
}

double sub_1BB215710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v19;

  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - v5;
  v7 = type metadata accessor for FormatInspectionItem(0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB86CBD4();
  if ((v11 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_21;
  }
  v12 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups);
  if (v11 >= *(_QWORD *)(v12 + 16))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v13 = *(_QWORD *)(v12 + 40 * v11 + 64);
  swift_bridgeObjectRetain();
  v14 = sub_1BB86CBC8();
  if ((v14 & 0x8000000000000000) != 0)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= *(_QWORD *)(v13 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1BA4C2DD8(v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v14, (uint64_t)v10, type metadata accessor for FormatInspectionItem);
  swift_bridgeObjectRelease();
  sub_1BB216A34((uint64_t)&v10[*(int *)(v7 + 24)], (uint64_t)v6, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
  v15 = type metadata accessor for FormatInspectionItem.Value(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v6, 1, v15) == 1)
  {
LABEL_17:
    v17 = *MEMORY[0x1E0DC53D8];
LABEL_18:
    sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatInspectionItem);
    sub_1BA604728((uint64_t)v6, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
    return *(double *)&v17;
  }
  sub_1BB216A34((uint64_t)v6, (uint64_t)v3, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 27)
  {
    swift_release();
    if (qword_1EF2A6CA8 != -1)
      swift_once();
    v17 = qword_1EF3D0508;
    goto LABEL_18;
  }
  if (EnumCaseMultiPayload != 25)
  {
    if (EnumCaseMultiPayload == 13)
    {
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1BA4A2E80((uint64_t)v3, type metadata accessor for FormatInspectionItem.Value);
    goto LABEL_17;
  }
  swift_release();
LABEL_14:
  sub_1BA604728((uint64_t)v6, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
  if (qword_1EF2A7068 != -1)
LABEL_24:
    swift_once();
  v17 = qword_1EF3D0718;
  sub_1BA4A2E80((uint64_t)v10, type metadata accessor for FormatInspectionItem);
  return *(double *)&v17;
}

unint64_t sub_1BB215A3C(void *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  unint64_t result;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int EnumCaseMultiPayload;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v31;
  _BOOL8 v32;
  uint64_t v33;
  BOOL v34;
  uint64_t (*v35)(uint64_t);
  uint64_t v36;
  _QWORD v37[2];
  __int128 v38;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, qword_1EF2B78D8, (uint64_t (*)(uint64_t))type metadata accessor for FormatDebuggerContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v37 - v5;
  sub_1BA4B07F0(0, &qword_1EF2B7C40, type metadata accessor for FormatInspectionItem.Value, v3);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v37 - v11;
  v13 = type metadata accessor for FormatInspectionItem(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  v18 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups);
  if (result >= *(_QWORD *)(v18 + 16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  v19 = *(_QWORD *)(v18 + 40 * result + 64);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (result < *(_QWORD *)(v19 + 16))
  {
    sub_1BA4C2DD8(v19+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(_QWORD *)(v14 + 72) * result, (uint64_t)v16, type metadata accessor for FormatInspectionItem);
    swift_bridgeObjectRelease();
    sub_1BB216A34((uint64_t)&v16[*(int *)(v13 + 24)], (uint64_t)v12, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
    v20 = type metadata accessor for FormatInspectionItem.Value(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v12, 1, v20) != 1)
    {
      sub_1BB216A34((uint64_t)v12, (uint64_t)v9, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t))sub_1BA4B07F0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload != 28)
      {
        if (EnumCaseMultiPayload != 29)
        {
          sub_1BA4A2E80((uint64_t)v16, type metadata accessor for FormatInspectionItem);
          v35 = type metadata accessor for FormatInspectionItem.Value;
          v36 = (uint64_t)v9;
LABEL_22:
          sub_1BA4A2E80(v36, v35);
          return sub_1BA604728((uint64_t)v12, (uint64_t)&qword_1EF2B7C40, (uint64_t)type metadata accessor for FormatInspectionItem.Value, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
        }
        v22 = (_QWORD *)(*(_QWORD *)v9 + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_callStackFrame);
        v23 = v22[1];
        v24 = v22[2];
        v26 = v22[3];
        v25 = v22[4];
        v27 = (_QWORD *)(*(_QWORD *)v9
                       + OBJC_IVAR____TtC8NewsFeed33DebugFormatDebuggerCallStackEntry_selectedCallStackFrame);
        v29 = v27[3];
        v28 = v27[4];
        if (v23 == v27[1] && v24 == v27[2])
        {
          if (v26 != v29)
          {
            v32 = 0;
            goto LABEL_20;
          }
        }
        else
        {
          v31 = sub_1BB874398();
          v32 = 0;
          if ((v31 & 1) == 0 || v26 != v29)
            goto LABEL_20;
        }
        v32 = v25 == v28;
LABEL_20:
        objc_msgSend(a1, sel_setSelected_, v32);
        swift_release();
        goto LABEL_21;
      }
      v33 = *((_QWORD *)v9 + 1);
      v37[0] = *(_QWORD *)v9;
      v37[1] = v33;
      v38 = *((_OWORD *)v9 + 1);
      swift_retain();
      swift_retain();
      sub_1BB86E494();
      swift_release();
      swift_release();
      v34 = sub_1BB64AE34((uint64_t)v6);
      sub_1BA604728((uint64_t)v6, (uint64_t)qword_1EF2B78D8, (uint64_t)type metadata accessor for FormatDebuggerContext, (uint64_t)MEMORY[0x1E0DEB940], (uint64_t (*)(_QWORD))sub_1BA4B07F0);
      swift_bridgeObjectRelease();
      objc_msgSend(a1, sel_setSelected_, v34);
    }
LABEL_21:
    v35 = type metadata accessor for FormatInspectionItem;
    v36 = (uint64_t)v16;
    goto LABEL_22;
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1BB215E2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  unint64_t result;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;

  v1 = type metadata accessor for FormatInspectionItem(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_filteredGroups);
  if (result >= *(_QWORD *)(v6 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v7 = *(_QWORD *)(v6 + 40 * result + 64);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(_QWORD *)(v7 + 16))
  {
    sub_1BA4C2DD8(v7+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * result, (uint64_t)v4, type metadata accessor for FormatInspectionItem);
    swift_bridgeObjectRelease();
    v8 = sub_1BB21410C((uint64_t)v4);
    sub_1BA4A2E80((uint64_t)v4, type metadata accessor for FormatInspectionItem);
    return (unint64_t)v8;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1BB215F40()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB215F64()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB215F90(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  uint64_t *v4;

  sub_1BB214A24(a1, a2, a3, a4, v4[2], v4[3], v4[4], v4[5], v4[6]);
}

uint64_t sub_1BB215FBC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 != 255)
    return sub_1BAF92B74();
  return result;
}

uint64_t sub_1BB215FD4()
{
  swift_release();
  sub_1BAA49EA8();
  return swift_deallocObject();
}

uint64_t sub_1BB216004(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;

  return sub_1BB21496C(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_BYTE *)(v4 + 40));
}

void sub_1BB216014(uint64_t a1)
{
  uint64_t v1;

  sub_1BB212160(a1, v1);
}

uint64_t sub_1BB21601C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  int *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unsigned int (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);

  v1 = *(_QWORD *)(type metadata accessor for FormatInspectionFeedGroupItem() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = v0 + v2;
  type metadata accessor for FeedGroupItem();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_unknownObjectRelease();

      return swift_deallocObject();
    case 1u:

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 80) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

      }
      if (*(_QWORD *)(v3 + 128) >= 0x11uLL)
        goto LABEL_10;
      return swift_deallocObject();
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 3u:
      swift_bridgeObjectRelease();
      v4 = type metadata accessor for FeedWeather(0);
      v5 = v3 + *(int *)(v4 + 28);
      v6 = sub_1BB87270C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
      v7 = v3 + *(int *)(v4 + 36);
      sub_1BA81D86C(0, (unint64_t *)&qword_1ED3BBDC0, (unint64_t *)&qword_1ED3C0430, 0x1E0CB3B00, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
      v9 = v8;
      v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v10(v7, v8);
      v11 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v10(v7 + v11[5], v9);
      v10(v7 + v11[6], v9);
      v10(v7 + v11[7], v9);
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 240) >= 0x11uLL)
        goto LABEL_10;
      return swift_deallocObject();
    case 5u:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      v12 = (int *)type metadata accessor for FeedHeadline(0);
      v13 = v12[10];
      v14 = v3 + v13 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
      v15 = type metadata accessor for SharedItem();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 48))(v14, 1, v15))
      {
        v16 = sub_1BB86C8B0();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v14, v16);

        v17 = v14 + *(int *)(v15 + 28);
        v18 = sub_1BB86C67C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 8))(v17, v18);
      }
      v19 = v3 + v12[11];
      v20 = sub_1BB871B24();
      v21 = *(_QWORD *)(v20 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v19, v20);
      if (*(_QWORD *)(v3 + v12[12] + 8) >= 0x11uLL)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + v12[13]) >= 3uLL)
        swift_unknownObjectRelease();

      return swift_deallocObject();
    case 6u:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v22 = (int *)type metadata accessor for FeedWebEmbed();
      v23 = v3 + v22[8];
      v24 = sub_1BB86C67C();
      v25 = *(_QWORD *)(v24 - 8);
      v26 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
      v26(v23, v24);
      v27 = v3 + v22[9];
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v27, 1, v24))
        v26(v27, v24);
      v65 = v26;
      swift_release();
      swift_release();
      v28 = v3 + v22[12];
      v29 = (int *)type metadata accessor for FeedHeadline(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v29 - 1) + 48))(v28, 1, v29))
      {
        v64 = v24;
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        v30 = v29[10];
        v31 = v28 + v30 + *(int *)(type metadata accessor for FeedHeadline.State(0) + 24);
        v32 = type metadata accessor for SharedItem();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
        {
          v33 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v31, v33);

          v65(v31 + *(int *)(v32 + 28), v64);
        }
        v34 = v28 + v29[11];
        v35 = sub_1BB871B24();
        v36 = *(_QWORD *)(v35 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
          (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v34, v35);
        if (*(_QWORD *)(v28 + v29[12] + 8) >= 0x11uLL)
          swift_bridgeObjectRelease();
        v24 = v64;
        if (*(_QWORD *)(v28 + v29[13]) >= 3uLL)
          swift_unknownObjectRelease();

      }
      v37 = v3 + v22[13];
      v38 = type metadata accessor for WebEmbedDataVisualization();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v39 = type metadata accessor for GenericDataVisualization();
          v65(v37 + *(int *)(v39 + 20), v24);
LABEL_10:
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_release();
        }
      }
      return swift_deallocObject();
    case 7u:

      return swift_deallocObject();
    case 8u:
      goto LABEL_46;
    case 9u:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v3 + 112))
        __swift_destroy_boxed_opaque_existential_1(v3 + 88);
      if (*(_QWORD *)(v3 + 152))
        __swift_destroy_boxed_opaque_existential_1(v3 + 128);
      return swift_deallocObject();
    case 0xAu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
LABEL_46:
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      return swift_deallocObject();
    case 0xBu:
      if (*(_QWORD *)(v3 + 32) >= 0x11uLL)
        swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v40 = v3 + *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      swift_unknownObjectRelease();
      v41 = v40 + *(int *)(type metadata accessor for PuzzleStatistic() + 20);
      type metadata accessor for PuzzleStatisticCategory(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for PuzzleStatisticValue(0);
          goto LABEL_63;
        case 1u:
          type metadata accessor for PuzzleStatisticValue(0);
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 5 || EnumCaseMultiPayload == 4)
          {
            v45 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v41, 1, v45))
            {
              v46 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 8))(v41, v46);
            }
          }
          v47 = type metadata accessor for PuzzleStatisticDifficultyLevelValue(0);
          v48 = v41 + *(int *)(v47 + 20);
          v49 = swift_getEnumCaseMultiPayload();
          if (v49 == 5 || v49 == 4)
          {
            v50 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v50 - 8) + 48))(v48, 1, v50))
            {
              v51 = sub_1BB86BEC0();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 8))(v48, v51);
            }
          }
          v41 += *(int *)(v47 + 24);
LABEL_63:
          v52 = swift_getEnumCaseMultiPayload();
          if (v52 == 5 || v52 == 4)
          {
            v53 = type metadata accessor for PuzzleStreak();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v41, 1, v53))goto LABEL_74;
          }
          return swift_deallocObject();
        case 2u:
          v54 = type metadata accessor for PuzzleStatisticsGameCenterLeaderboardResult(0);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v41, 1, v54))
            return swift_deallocObject();
          v55 = sub_1BB86C8B0();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 8))(v41, v55);
          v56 = type metadata accessor for PuzzleLeaderboardEntry();
          swift_bridgeObjectRelease();
          v57 = v41 + *(int *)(v56 + 24);
          swift_bridgeObjectRelease();
          v58 = *(_QWORD *)(v57 + 24);
          if (v58 >> 60 != 15)
            sub_1BA69D314(*(_QWORD *)(v57 + 16), v58);
          goto LABEL_10;
        case 3u:
          v59 = type metadata accessor for PuzzleStatisticsGroupedValue(0);
          v60 = v41 + *(int *)(v59 + 24);
          v61 = type metadata accessor for PuzzleStreak();
          v62 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 48);
          if (!v62(v60, 1, v61))
          {
            v63 = sub_1BB86BEC0();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 8))(v60, v63);
          }
          v41 += *(int *)(v59 + 28);
          if (v62(v41, 1, v61))
            return swift_deallocObject();
LABEL_74:
          v42 = sub_1BB86BEC0();
          break;
        default:
          return swift_deallocObject();
      }
      goto LABEL_52;
    case 0xCu:
      swift_bridgeObjectRelease();
      v41 = v3 + *(int *)(type metadata accessor for FeedSponsorshipBannerAd() + 20);
      v42 = sub_1BB871E24();
LABEL_52:
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 8))(v41, v42);
      break;
    default:
      return swift_deallocObject();
  }
  return swift_deallocObject();
}

void sub_1BB216988(uint64_t a1)
{
  uint64_t v1;

  type metadata accessor for FormatInspectionFeedGroupItem();
  sub_1BB212008(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2169C8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 88))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_deallocObject();
}

void sub_1BB216A28(uint64_t a1)
{
  uint64_t v1;

  sub_1BB211E78(a1, *(_QWORD *)(v1 + 16), (_QWORD *)(v1 + 24));
}

uint64_t sub_1BB216A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8;

  v8 = a6(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, a1, v8);
  return a2;
}

unint64_t sub_1BB216A84()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BE060;
  if (!qword_1EF2BE060)
  {
    v1 = type metadata accessor for DebugFormatInspectorPaneViewController();
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FA970, v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BE060);
  }
  return result;
}

void sub_1BB216AD0(void **a1, uint64_t a2)
{
  uint64_t v2;

  sub_1BB20A998(a1, a2, v2);
}

void sub_1BB216AD8(uint64_t a1)
{
  uint64_t v1;

  sub_1BB20AA8C(a1, v1);
}

uint64_t sub_1BB216AEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(uint64_t, uint64_t, uint64_t);
  char *v27;
  char v28;
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t *v35;

  v33 = a1;
  v3 = sub_1BB86EB84();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C1CE8();
  v7 = v6;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0B4CF4(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v32 - v17;
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v32 - v20;
  sub_1BA4C2DD8(a2, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  v22 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v23(v21, 1, 1, v3);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v21, &v12[*(int *)(v22 + 20)], v3);
    sub_1BA4A2E80((uint64_t)v12, type metadata accessor for DebugFormatFileDirectoryMetadata);
    v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v23(v21, 0, 1, v3);
  }
  sub_1BB219F68(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v18, (uint64_t)v35 + *(int *)(v24 + 28) + *(int *)(v22 + 20), v3);
  v23(v18, 0, 1, v3);
  v25 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1BA4C2DD8((uint64_t)v21, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4C2DD8((uint64_t)v18, v25, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v26((uint64_t)v9, 1, v3) != 1)
  {
    sub_1BA4C2DD8((uint64_t)v9, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    if (v26(v25, 1, v3) != 1)
    {
      v27 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v34, v25, v3);
      sub_1BA50AD30(&qword_1ED39C378, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE8]);
      v28 = sub_1BB872958();
      v29 = *(void (**)(char *, uint64_t))(v4 + 8);
      v29(v27, v3);
      sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      v29(v15, v3);
      sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      if ((v28 & 1) != 0)
        goto LABEL_11;
LABEL_14:
      v30 = *v35;
      if (*((_BYTE *)v35 + 16) && *((_BYTE *)v35 + 16) != 1)
        v30 = v33;
      goto LABEL_18;
    }
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
LABEL_9:
    sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6C1CE8);
    goto LABEL_14;
  }
  sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2E80((uint64_t)v21, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  if (v26(v25, 1, v3) != 1)
    goto LABEL_9;
  sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
LABEL_11:
  v30 = *v35;
  if (!*((_BYTE *)v35 + 16) || *((_BYTE *)v35 + 16) == 1)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    return v30;
  }
  return 0;
}

uint64_t sub_1BB216F1C(const void *a1)
{
  uint64_t v1;
  uint64_t v2;
  const void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  _BYTE v9[336];
  _BYTE __dst[336];
  _BYTE v11[336];
  _BYTE v12[336];
  _BYTE v13[336];

  v2 = v1;
  v4 = (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages);
  memcpy(v9, (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages), sizeof(v9));
  memcpy((void *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages), a1, 0x150uLL);
  sub_1BAF8FB4C((uint64_t)v9);
  v5 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryViewController);
  memcpy(__dst, v4, sizeof(__dst));
  memcpy(v11, (const void *)(v5 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages), sizeof(v11));
  memmove((void *)(v5 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages), v4, 0x150uLL);
  sub_1BAF8EA94((uint64_t)__dst);
  sub_1BAF8FB4C((uint64_t)v11);
  sub_1BB2285D0();
  v6 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_testViewController);
  memcpy(v12, v4, sizeof(v12));
  v7 = (void *)(v6 + OBJC_IVAR____TtC8NewsFeed29DebugFormatTestViewController_packages);
  memcpy(v13, v7, sizeof(v13));
  memmove(v7, v4, 0x150uLL);
  sub_1BAF8EA94((uint64_t)v12);
  return sub_1BAF8FB4C((uint64_t)v13);
}

id sub_1BB217044()
{
  char *v0;
  objc_class *ObjectType;
  char *v2;
  uint64_t v3;
  char *v4;
  char *v5;
  objc_super v7;
  char v8;

  ObjectType = (objc_class *)swift_getObjectType();
  if (qword_1EF2A6C58 != -1)
    swift_once();
  swift_retain();
  sub_1BB86ED4C();
  swift_release();
  v2 = *(char **)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_socketServer];
  v3 = OBJC_IVAR____TtC8NewsFeed23DebugFormatSocketServer_connection;
  if (*(_QWORD *)&v2[OBJC_IVAR____TtC8NewsFeed23DebugFormatSocketServer_connection])
  {
    v4 = v2;
    swift_retain();
    sub_1BB871914();
    swift_release();
  }
  else
  {
    v5 = v2;
  }
  *(_QWORD *)&v2[v3] = 0;
  swift_release();
  v8 = 0;
  swift_retain();
  sub_1BB86E4A0();

  swift_release();
  v7.receiver = v0;
  v7.super_class = ObjectType;
  return objc_msgSendSuper2(&v7, sel_dealloc);
}

uint64_t sub_1BB2172D4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  double v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, double);
  uint64_t v19;
  uint64_t v21;

  v0 = sub_1BB87045C();
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (uint64_t *)((char *)&v21 - v4);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - v7;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v21 - v10;
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v21 - v14;
  *(_QWORD *)v15 = 0;
  v15[8] = 0;
  v16 = *MEMORY[0x1E0DB9020];
  v18 = *(void (**)(char *, uint64_t, uint64_t, double))(v17 + 104);
  v18((char *)&v21 - v14, v16, v0, v13);
  *(_QWORD *)v11 = 0x4050000000000000;
  v11[8] = 0;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v11, v16, v0);
  *(_QWORD *)v8 = 0x4038000000000000;
  v8[8] = 1;
  v19 = *MEMORY[0x1E0DB9030];
  ((void (*)(char *, uint64_t, uint64_t))v18)(v8, v19, v0);
  *v5 = 0x3FD999999999999ALL;
  ((void (*)(_QWORD *, _QWORD, uint64_t))v18)(v5, *MEMORY[0x1E0DB9028], v0);
  *(_QWORD *)v2 = 0;
  v2[8] = 0;
  ((void (*)(char *, uint64_t, uint64_t))v18)(v2, v19, v0);
  return sub_1BB870450();
}

uint64_t sub_1BB217488(uint64_t a1, unsigned __int8 *a2)
{
  int v2;
  uint64_t result;
  char v5;

  v2 = *a2;
  swift_retain();
  sub_1BB86D2B8();
  result = swift_release();
  if (v5 == 1 && v2 != 0)
  {
    sub_1BA50AD30(&qword_1EF2BABD0, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutViewController, (uint64_t)&unk_1BB8F88A0);
    return sub_1BB8708C4();
  }
  return result;
}

uint64_t sub_1BB21753C(uint64_t result, _BYTE *a2)
{
  id v2;
  void *v3;
  unint64_t *v4;
  uint64_t (*v5)();
  void *v6;

  if (*a2)
  {
    if (*a2 != 1)
      return result;
    v2 = objc_msgSend(*(id *)(result + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_containerSegmentedViewController), sel_navigationController);
    if (v2)
    {
      v3 = v2;

    }
    v4 = (unint64_t *)&unk_1EF2BABF0;
    v5 = type metadata accessor for DebugFormatDebuggerViewController;
    v6 = &unk_1BB8FA908;
  }
  else
  {
    v4 = (unint64_t *)&unk_1EF2BABC0;
    v5 = type metadata accessor for DebugFormatInventoryViewController;
    v6 = &unk_1BB8FB644;
  }
  sub_1BA50AD30(v4, 255, (uint64_t (*)(uint64_t))v5, (uint64_t)v6);
  return sub_1BB8708C4();
}

void sub_1BB2176F4()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_viewDidLoad);
  swift_beginAccess();
  swift_retain();
  sub_1BB86E4AC();
  swift_release();
  sub_1BB86E4B8();
  swift_release();
  v1 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_socketServer];
  v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_1BB7C2290(v1, v2);
  swift_release();
  sub_1BB7C2418();
}

uint64_t sub_1BB2177FC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  unint64_t v5;
  uint64_t v6;
  _BYTE v8[336];

  sub_1BB21A5EC(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(v8, (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages), sizeof(v8));
  v5 = sub_1BB7A79F0();
  v6 = type metadata accessor for DebugFormatPackagesDelta();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v4, 1, 1, v6);
  sub_1BB2316FC(v5, 1, (uint64_t)v4);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))sub_1BB21A5EC);
}

uint64_t sub_1BB2178F4()
{
  Class v0;
  id v1;

  sub_1BA4D787C(0, (unint64_t *)&qword_1EF2BE158, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4738]);
  v1 = objc_allocWithZone(v0);
  swift_retain();
  return sub_1BB86E6D4();
}

uint64_t sub_1BB217948(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = sub_1BB217A44(a1);

  }
  else
  {
    v7 = sub_1BB86DF00();
    sub_1BA50AD30((unint64_t *)&unk_1EF2C5B30, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB35A0], MEMORY[0x1E0DB35A8]);
    swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v8, *MEMORY[0x1E0DB3590], v7);
    sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9C8();
  }
  return v6;
}

uint64_t sub_1BB217A44(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  char v16;
  char v17;
  void *v18;
  void *v19;
  _BYTE v21[14];

  v2 = v1;
  swift_getObjectType();
  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = sub_1BB86C67C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1BB2327D4((uint64_t)v6);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA6EF3B0);
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4(0, 0, 0, 0xD000000000000034, 0x80000001BB97FFA0);
    sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = a1[3];
    v13 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v12);
    if ((MEMORY[0x1BCCDED80](v12, v13) & 1) != 0)
    {
      sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v11 = sub_1BB86E9E0();
    }
    else
    {
      sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
      v14 = (void *)sub_1BB87345C();
      MEMORY[0x1E0C80A78](v14);
      *(_QWORD *)&v21[-16] = v2;
      sub_1BB219E44();
      sub_1BB873468();

      MEMORY[0x1E0C80A78](v15);
      *(_QWORD *)&v21[-32] = v2;
      *(_QWORD *)&v21[-24] = v10;
      v21[-16] = v16;
      v21[-15] = v17;
      sub_1BB219EC4();
      sub_1BB86EC14();
      v18 = (void *)sub_1BB86DE94();
      sub_1BB86E980();
      swift_release();

      v19 = (void *)sub_1BB86DE94();
      v11 = sub_1BB86E9B0();
      swift_release();

    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11;
}

uint64_t type metadata accessor for DebugFormatMainViewController()
{
  return objc_opt_self();
}

uint64_t sub_1BB217EB0@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  const void *v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  _BYTE v7[336];
  _BYTE __dst[336];

  *a2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1
                                          + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_bindingViewController)
                              + OBJC_IVAR____TtC8NewsFeed32DebugFormatBindingViewController_bindings)
                  + 16) == 0;
  v3 = (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages);
  memcpy(__dst, (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages), sizeof(__dst));
  memcpy(v7, v3, sizeof(v7));
  sub_1BAF8EA94((uint64_t)__dst);
  v4 = sub_1BB7A8230();
  if (v4 >> 62)
    v5 = sub_1BB873F30();
  else
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  result = sub_1BAF8FB4C((uint64_t)__dst);
  a2[1] = v5 == 0;
  return result;
}

uint64_t sub_1BB217F9C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v7;

  swift_retain();
  sub_1BB481E94(a2, a3);
  swift_release();
  swift_retain();
  sub_1BB481FEC(a2, a4);
  swift_release();
  v7 = sub_1BB86EBF0();
  swift_release();
  swift_release();
  return v7;
}

uint64_t sub_1BB218064(uint64_t a1, void *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  uint64_t v22;
  id v23;
  void *v24;
  uint64_t v25;
  uint64_t v27;
  void *v28;

  v28 = a2;
  sub_1BB219EC4();
  v4 = v3;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB219F68(0);
  v27 = *(_QWORD *)(v7 - 8);
  v8 = *(_QWORD *)(v27 + 64);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - v11;
  sub_1BB219F30(0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = *(int *)(v4 + 48);
  v17 = (uint64_t)&v6[v16];
  v18 = a1 + v16;
  sub_1BA4C2DD8(a1, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BB219F30);
  sub_1BA4C2DD8(v18, v17, (uint64_t (*)(_QWORD))sub_1BB219F68);
  sub_1BA5193C4((uint64_t)v6, (uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB219F30);
  sub_1BA5193C4(v17, (uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BB219F68);
  v19 = *(_QWORD *)v15;
  if (v15[16])
  {
    if (v15[16] != 1)
    {
      sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      sub_1BB86E9E0();
      v20 = v28;
      goto LABEL_7;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1BB21A0E4(*(_QWORD *)v15, *((_QWORD *)v15 + 1), 0);
  }
  v20 = v28;
  sub_1BB796D40(v19);
  swift_bridgeObjectRelease();
LABEL_7:
  sub_1BA4C2DD8((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB219F68);
  v21 = (*(unsigned __int8 *)(v27 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v20;
  sub_1BA5193C4((uint64_t)v9, v22 + v21, (uint64_t (*)(_QWORD))sub_1BB219F68);
  v23 = v20;
  v24 = (void *)sub_1BB86E854();
  v25 = sub_1BB86E968();
  swift_release();
  swift_release();

  sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BB219F68);
  sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))sub_1BB219F30);
  return v25;
}

uint64_t sub_1BB218310(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  void (*v39)(uint64_t, uint64_t, uint64_t, uint64_t);
  unint64_t v40;
  void (*v41)(uint64_t, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  int v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, uint64_t);
  char v57;
  char v58;
  char v59;
  char v60;
  char v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t result;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  void *v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  void *v97;
  void *v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t ObjectType;
  uint64_t v113;
  uint64_t v114;
  const void *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  unint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  _QWORD v128[42];
  _QWORD v129[42];
  char v130[8];
  __int128 v131;
  __int128 v132;
  __int128 v133;
  char v134[8];
  __int128 v135;
  __int128 v136;
  __int128 v137;
  _BYTE v138[336];
  _OWORD v139[22];
  _QWORD v140[42];
  char v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;

  v2 = v1;
  v126 = a1;
  ObjectType = swift_getObjectType();
  sub_1BB219F68(0);
  v121 = v3;
  MEMORY[0x1E0C80A78](v3);
  v108 = (uint64_t)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DebugFormatPackagesDelta();
  v6 = *(_QWORD *)(v5 - 8);
  v109 = v5;
  v110 = v6;
  MEMORY[0x1E0C80A78](v5);
  v107 = (char *)&v101 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = v7;
  MEMORY[0x1E0C80A78](v8);
  v117 = (char *)&v101 - v9;
  v116 = type metadata accessor for DebugFormatManagerError();
  MEMORY[0x1E0C80A78](v116);
  v123 = (unint64_t *)((char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = sub_1BB86EB84();
  v119 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v102 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6C1CE8();
  v114 = v13;
  MEMORY[0x1E0C80A78](v13);
  v120 = (uint64_t)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v124 = *(_QWORD *)(v127 - 8);
  MEMORY[0x1E0C80A78](v127);
  v103 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v16);
  v105 = (uint64_t)&v101 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v101 - v19;
  MEMORY[0x1E0C80A78](v21);
  v118 = (uint64_t)&v101 - v22;
  sub_1BB0B4CF4(0);
  MEMORY[0x1E0C80A78](v23);
  v122 = (uint64_t)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v101 - v26;
  MEMORY[0x1E0C80A78](v28);
  v30 = (char *)&v101 - v29;
  v125 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editor);
  v31 = (_QWORD *)(v125 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  v106 = v31;
  if (*v31)
  {
    swift_retain();
    sub_1BB2635B4(1);
    swift_release();
  }
  v113 = v2;
  v115 = (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages);
  memcpy(v140, (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_packages), sizeof(v140));
  v32 = sub_1BB7A79F0();
  v33 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__metadata;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v34 = v126;
  v35 = sub_1BB216AEC(v32, (uint64_t)v30);
  sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  swift_bridgeObjectRelease();
  if (!v35)
  {
    sub_1BA4C2DD8(v34 + *(int *)(v121 + 28), (uint64_t)v30, type metadata accessor for DebugFormatFileDirectoryMetadata);
    (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v124 + 56))(v30, 0, 1, v127);
    sub_1BA4C2DD8((uint64_t)v30, v122, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    swift_retain();
    sub_1BB86E4A0();
    swift_release();
    sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
  v104 = v33;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v36 = v127;
  if ((*(unsigned int (**)(char *, uint64_t, unint64_t))(v124 + 48))(v27, 1, v127))
  {
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    v37 = v118;
    v38 = (_QWORD *)v119;
    v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v119 + 56);
    v39(v118, 1, 1, v11);
    v40 = v36;
    v41 = (void (*)(uint64_t, uint64_t, uint64_t))v38[2];
  }
  else
  {
    v43 = v103;
    sub_1BA4C2DD8((uint64_t)v27, v103, type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1BA4A2E80((uint64_t)v27, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    v44 = v43 + *(int *)(v36 + 20);
    v40 = v36;
    v37 = v118;
    v38 = (_QWORD *)v119;
    v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v119 + 16);
    v41(v118, v44, v11);
    sub_1BA4A2E80(v43, type metadata accessor for DebugFormatFileDirectoryMetadata);
    v39 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v38[7];
    v39(v37, 0, 1, v11);
  }
  v45 = *(int *)(v40 + 20);
  v121 = v126 + *(int *)(v121 + 28);
  v41((uint64_t)v20, v121 + v45, v11);
  v39((uint64_t)v20, 0, 1, v11);
  v46 = v120;
  v47 = v120 + *(int *)(v114 + 48);
  sub_1BA4C2DD8(v37, v120, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  v48 = v46;
  sub_1BA4C2DD8((uint64_t)v20, v47, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  v49 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v38[6];
  if (v49(v48, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v48 = v120;
    sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    v50 = v49(v47, 1, v11);
    v51 = (uint64_t)v117;
    v52 = v127;
    if (v50 == 1)
    {
      sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
      LODWORD(v120) = 0;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  v53 = v105;
  sub_1BA4C2DD8(v48, v105, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  if (v49(v47, 1, v11) == 1)
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v53, v11);
    v51 = (uint64_t)v117;
    v52 = v127;
LABEL_13:
    sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA6C1CE8);
    LODWORD(v120) = 1;
    goto LABEL_15;
  }
  v54 = v119;
  v55 = v102;
  (*(void (**)(char *, uint64_t, uint64_t))(v119 + 32))(v102, v47, v11);
  sub_1BA50AD30(&qword_1ED39C378, 255, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4DC8], MEMORY[0x1E0DB4DE8]);
  LODWORD(v114) = sub_1BB872958();
  v56 = *(void (**)(char *, uint64_t))(v54 + 8);
  v56(v55, v11);
  sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  sub_1BA4A2E80(v118, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  v56((char *)v53, v11);
  sub_1BA4A2E80(v48, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  LODWORD(v120) = v114 ^ 1;
  v51 = (uint64_t)v117;
  v52 = v127;
LABEL_15:
  sub_1BA4C2DD8(v121, (uint64_t)v30, type metadata accessor for DebugFormatFileDirectoryMetadata);
  (*(void (**)(char *, _QWORD, uint64_t, unint64_t))(v124 + 56))(v30, 0, 1, v52);
  sub_1BA4C2DD8((uint64_t)v30, v122, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  memcpy(v138, v115, sizeof(v138));
  LOBYTE(v139[0]) = 0;
  sub_1BAF8EA94((uint64_t)v138);
  swift_bridgeObjectRetain();
  sub_1BB7A7AB4((char *)v139, v35, (uint64_t)v140);
  v57 = v140[0];
  LOBYTE(v139[0]) = 4;
  swift_bridgeObjectRetain();
  sub_1BB7A7AB4((char *)v139, v35, (uint64_t)v129);
  v58 = v129[0];
  LOBYTE(v139[0]) = 6;
  swift_bridgeObjectRetain();
  sub_1BB7A7AB4((char *)v139, v35, (uint64_t)v128);
  v59 = v128[0];
  LOBYTE(v139[0]) = 1;
  swift_bridgeObjectRetain();
  sub_1BB7A7AB4((char *)v139, v35, (uint64_t)&v141);
  v60 = v141;
  LOBYTE(v139[0]) = 2;
  swift_bridgeObjectRetain();
  sub_1BB7A7AB4((char *)v139, v35, (uint64_t)v134);
  v61 = v134[0];
  LOBYTE(v139[0]) = 3;
  sub_1BB7A7AB4((char *)v139, v35, (uint64_t)v130);
  LOBYTE(v139[0]) = v57;
  *(_OWORD *)((char *)v139 + 8) = *(_OWORD *)&v140[1];
  *(_OWORD *)((char *)&v139[1] + 8) = *(_OWORD *)&v140[3];
  *(_OWORD *)((char *)&v139[2] + 8) = *(_OWORD *)&v140[5];
  BYTE8(v139[3]) = v58;
  v139[4] = *(_OWORD *)&v129[1];
  v139[5] = *(_OWORD *)&v129[3];
  v139[6] = *(_OWORD *)&v129[5];
  LOBYTE(v139[7]) = v59;
  *(_OWORD *)((char *)&v139[7] + 8) = *(_OWORD *)&v128[1];
  *(_OWORD *)((char *)&v139[8] + 8) = *(_OWORD *)&v128[3];
  *(_OWORD *)((char *)&v139[9] + 8) = *(_OWORD *)&v128[5];
  BYTE8(v139[10]) = v60;
  v139[11] = v142;
  v139[12] = v143;
  v139[13] = v144;
  LOBYTE(v139[14]) = v61;
  *(_OWORD *)((char *)&v139[14] + 8) = v135;
  *(_OWORD *)((char *)&v139[15] + 8) = v136;
  *(_OWORD *)((char *)&v139[16] + 8) = v137;
  BYTE8(v139[17]) = v130[0];
  v139[18] = v131;
  v139[19] = v132;
  v139[20] = v133;
  memcpy(v140, v139, sizeof(v140));
  memcpy(v129, v139, sizeof(v129));
  v62 = sub_1BB7A816C();
  if (v62 >> 62)
  {
    swift_bridgeObjectRetain();
    v63 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v64 = v126;
  if (!v63)
  {
    swift_bridgeObjectRelease();
    v78 = (uint64_t)v107;
LABEL_38:
    memcpy(v129, v140, sizeof(v129));
    sub_1BAF8EA94((uint64_t)v139);
    v85 = v113;
    sub_1BB216F1C(v129);
    sub_1BB219404();
    v86 = v108;
    sub_1BA4C2DD8(v64, v108, (uint64_t (*)(_QWORD))sub_1BB219F68);
    sub_1BA4C2DD8(v86, v78, (uint64_t (*)(_QWORD))sub_1BB219F68);
    memcpy(v129, v140, sizeof(v129));
    memcpy(v128, v138, sizeof(v128));
    sub_1BAF8EA94((uint64_t)v139);
    v87 = sub_1BB7A82F4((char *)v128);
    v88 = v109;
    *(_QWORD *)(v78 + *(int *)(v109 + 20)) = v87;
    memcpy(v129, v140, sizeof(v129));
    memcpy(v128, v138, sizeof(v128));
    v89 = sub_1BB7A8300((char *)v128);
    sub_1BA4A2E80(v86, (uint64_t (*)(_QWORD))sub_1BB219F68);
    sub_1BAF8FB4C((uint64_t)v138);
    sub_1BAF8FB4C((uint64_t)v139);
    *(_QWORD *)(v78 + *(int *)(v88 + 24)) = v89;
    sub_1BA5193C4(v78, v51, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
    v129[0] = 0;
    v129[1] = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    v129[0] = 0xD00000000000001BLL;
    v129[1] = 0x80000001BB980030;
    sub_1BB667D8C();
    sub_1BB872AFC(v90);
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v91);
    sub_1BB560778();
    sub_1BB872AFC(v92);
    swift_bridgeObjectRelease();
    v93 = v78;
    v94 = v129[0];
    v95 = v129[1];
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4((void *)2, 0, 0, v94, v95);
    swift_bridgeObjectRelease();
    v96 = objc_msgSend(*(id *)(v125 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue), sel_setSuspended_, 1);
    MEMORY[0x1E0C80A78](v96);
    *(&v101 - 4) = v85;
    *(&v101 - 3) = v51;
    *(&v101 - 2) = (uint64_t)v140;
    sub_1BB86EC14();
    v97 = (void *)sub_1BB86DE94();
    sub_1BB86E98C();
    swift_release();

    v98 = (void *)sub_1BB86DE94();
    sub_1BA4C2DD8(v51, v93, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
    v99 = (*(unsigned __int8 *)(v110 + 80) + 353) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    v100 = swift_allocObject();
    memcpy((void *)(v100 + 16), v140, 0x150uLL);
    *(_BYTE *)(v100 + 352) = v120 & 1;
    sub_1BA5193C4(v93, v100 + v99, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
    v42 = sub_1BB86E9F8();
    swift_release();

    swift_release();
    sub_1BA4A2E80(v51, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
    return v42;
  }
  *v123 = v62;
  swift_storeEnumTagMultiPayload();
  v129[0] = 0;
  v129[1] = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v129[0] = 0xD000000000000026;
  v129[1] = 0x80000001BB97FFE0;
  if (!(v62 >> 62))
  {
    v65 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v65)
      goto LABEL_20;
LABEL_31:
    swift_bridgeObjectRelease();
    v68 = MEMORY[0x1E0DEE9D8];
LABEL_32:
    MEMORY[0x1BCCE36DC](v68, MEMORY[0x1E0DEA968]);
    sub_1BB872AFC(v79);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v80 = v129[0];
    v81 = v129[1];
    sub_1BA50AD30(&qword_1EF2BB5A8, 255, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatManagerError, (uint64_t)&unk_1BB9014DC);
    v82 = (void *)swift_allocError();
    sub_1BA4C2DD8((uint64_t)v123, v83, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerError);
    if (qword_1EF2A6C58 != -1)
      swift_once();
    sub_1BA9719E4(v82, 0, 0, v80, v81);

    swift_bridgeObjectRelease();
    v141 = 0;
    *(_QWORD *)&v142 = 0xD000000000000012;
    *((_QWORD *)&v142 + 1) = 0x80000001BB980010;
    *(_QWORD *)&v143 = 0xD000000000000022;
    *((_QWORD *)&v143 + 1) = 0x80000001BB97CF70;
    v144 = 0uLL;
    v84 = v106;
    swift_beginAccess();
    if (*v84)
    {
      swift_endAccess();
      swift_retain();
      sub_1BB263178((__int128 *)&v141);
      swift_release();
      sub_1BA4A2E80((uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerError);
    }
    else
    {
      sub_1BA4A2E80((uint64_t)v123, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatManagerError);
      swift_endAccess();
    }
    v78 = (uint64_t)v107;
    v64 = v126;
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  v65 = sub_1BB873F30();
  swift_bridgeObjectRelease();
  if (!v65)
    goto LABEL_31;
LABEL_20:
  v128[0] = MEMORY[0x1E0DEE9D8];
  result = sub_1BA7447E8(0, v65 & ~(v65 >> 63), 0);
  if ((v65 & 0x8000000000000000) == 0)
  {
    v67 = 0;
    v68 = v128[0];
    v127 = v62 & 0xC000000000000001;
    v69 = v62;
    v70 = v65;
    do
    {
      if (v127)
      {
        v71 = MEMORY[0x1BCCE4630](v67, v62);
      }
      else
      {
        v71 = *(_QWORD *)(v62 + 8 * v67 + 32);
        swift_retain();
      }
      v72 = *(_QWORD *)(v71 + 16);
      v74 = *(_QWORD *)(v72 + 16);
      v73 = *(_QWORD *)(v72 + 24);
      swift_bridgeObjectRetain();
      swift_release();
      v128[0] = v68;
      v76 = *(_QWORD *)(v68 + 16);
      v75 = *(_QWORD *)(v68 + 24);
      if (v76 >= v75 >> 1)
      {
        sub_1BA7447E8(v75 > 1, v76 + 1, 1);
        v68 = v128[0];
      }
      ++v67;
      *(_QWORD *)(v68 + 16) = v76 + 1;
      v77 = v68 + 16 * v76;
      *(_QWORD *)(v77 + 32) = v74;
      *(_QWORD *)(v77 + 40) = v73;
      v62 = v69;
    }
    while (v70 != v67);
    swift_bridgeObjectRelease();
    v51 = (uint64_t)v117;
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1BB2193DC(void *a1)
{
  return sub_1BB1A591C(a1);
}

void sub_1BB219404()
{
  void *v0;
  id v1;
  uint64_t v2;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  v1 = objc_msgSend(v0, sel_presentedViewController);
  if (v1)
  {
    v11 = v1;
    type metadata accessor for DebugFormatInspectorPaneViewController();
    v2 = swift_dynamicCastClass();
    if (v2)
    {
      if (*(_BYTE *)(v2 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange) != 1)
        goto LABEL_15;
      v3 = objc_msgSend(v0, sel_presentedViewController);
      if (!v3)
        goto LABEL_15;
      v4 = v3;
      objc_msgSend(v3, sel_dismissViewControllerAnimated_completion_, 1, 0);
      goto LABEL_14;
    }

  }
  v5 = objc_msgSend(v0, sel_presentedViewController);
  if (!v5)
    return;
  v11 = v5;
  objc_opt_self();
  v6 = (void *)swift_dynamicCastObjCClass();
  if (v6)
  {
    v7 = objc_msgSend(v6, sel_topViewController);
    if (v7)
    {
      v4 = v7;
      type metadata accessor for DebugFormatInspectorPaneViewController();
      v8 = swift_dynamicCastClass();
      if (v8)
      {
        if (*(_BYTE *)(v8 + OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_autoDismissOnLayoutChange) == 1)
        {
          v9 = objc_msgSend(v0, sel_presentedViewController);
          if (v9)
          {
            v10 = v9;
            objc_msgSend(v9, sel_dismissViewControllerAnimated_completion_, 1, 0);

          }
        }
      }
LABEL_14:

    }
  }
LABEL_15:

}

uint64_t sub_1BB21958C(uint64_t a1, uint64_t a2, const void *a3)
{
  _BYTE v5[336];

  if ((sub_1BB232A00(a2) & 1) != 0)
  {
    memcpy(v5, a3, sizeof(v5));
    return sub_1BB1A51AC(v5, 0);
  }
  else
  {
    sub_1BA4D787C(0, (unint64_t *)&qword_1ED3B0900, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
    swift_allocObject();
    return sub_1BB86E9E0();
  }
}

uint64_t sub_1BB21963C()
{
  return sub_1BB1AC068();
}

void sub_1BB21966C(char *a1, const void *a2, char a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  char *v15;
  _QWORD aBlock[6];

  v8 = type metadata accessor for DebugFormatPackagesDelta();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 64);
  objc_msgSend(*(id *)(*(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_editor]+ OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue), sel_setSuspended_, 0, MEMORY[0x1E0C80A78](v8));
  v11 = objc_msgSend((id)objc_opt_self(), sel_sharedApplication);
  sub_1BA4C2DD8(a4, (uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
  v12 = (*(unsigned __int8 *)(v9 + 80) + 361) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a1;
  memcpy((void *)(v13 + 24), a2, 0x150uLL);
  *(_BYTE *)(v13 + 360) = a3;
  sub_1BA5193C4((uint64_t)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
  aBlock[4] = sub_1BB21A5B4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_51;
  v14 = _Block_copy(aBlock);
  v15 = a1;
  sub_1BAF8EA94((uint64_t)a2);
  swift_release();
  objc_msgSend(v11, sel_ts_installCACommitCompletionBlock_, v14);
  _Block_release(v14);

}

uint64_t sub_1BB21981C(uint64_t a1, const void *a2, int a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  unint64_t v10;
  uint64_t v11;
  _BYTE v13[336];

  sub_1BB21A5EC(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  memcpy(v13, a2, sizeof(v13));
  v10 = sub_1BB7A79F0();
  sub_1BA4C2DD8(a4, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatPackagesDelta);
  v11 = type metadata accessor for DebugFormatPackagesDelta();
  (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v9, 0, 1, v11);
  sub_1BB2316FC(v10, a3, (uint64_t)v9);
  swift_bridgeObjectRelease();
  return sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB21A5EC);
}

uint64_t sub_1BB2199A0(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v9[12];
  char v10;

  v2 = *(_OWORD *)(a2 + 176);
  v9[10] = *(_OWORD *)(a2 + 160);
  v9[11] = v2;
  v10 = *(_BYTE *)(a2 + 192);
  v3 = *(_OWORD *)(a2 + 112);
  v9[6] = *(_OWORD *)(a2 + 96);
  v9[7] = v3;
  v4 = *(_OWORD *)(a2 + 144);
  v9[8] = *(_OWORD *)(a2 + 128);
  v9[9] = v4;
  v5 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v5;
  v6 = *(_OWORD *)(a2 + 80);
  v9[4] = *(_OWORD *)(a2 + 64);
  v9[5] = v6;
  v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  return sub_1BB1AE978(v9);
}

uint64_t sub_1BB219A0C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BE120, a2, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatMainViewController, (uint64_t)&unk_1BB8FAA80);
}

uint64_t sub_1BB219A38@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BB219AB4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  return sub_1BB87189C();
}

uint64_t sub_1BB219B2C(uint64_t a1, char *a2)
{
  uint64_t v2;
  uint64_t v4;

  sub_1BB1ECEA4(a1, a2);
  sub_1BB65BAC0();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 232))
  {
    swift_beginAccess();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_retain();
  sub_1BB86D870();
  swift_release();
  sub_1BB86D978();
  swift_release();
  swift_retain();
  sub_1BB86D864();
  swift_release();
  type metadata accessor for DebugFormatDebuggerSourceMetricContext();
  swift_allocObject();
  v4 = sub_1BB824F90();
  swift_bridgeObjectRelease();
  *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_sourceViewController)
            + OBJC_IVAR____TtC8NewsFeed39DebugFormatDebuggerSourceViewController_sourceMetrics) = v4;
  swift_retain_n();
  swift_release();
  sub_1BB0EE680(0);
  swift_release();
  *(_QWORD *)(*(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_fileViewController)
            + OBJC_IVAR____TtC8NewsFeed29DebugFormatFileViewController_sourceMetrics) = v4;
  swift_retain_n();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  sub_1BB87189C();
  return swift_release_n();
}

void *sub_1BB219D50()
{
  uint64_t v0;
  id v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char v6;

  v1 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_consoleViewController), sel_presentedViewController);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC8NewsFeed29DebugFormatMainViewController_inventoryContainerController);
  if (v1)
  {
    v3 = v1;
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0420);
    v4 = v2;
    v5 = v3;
    v6 = sub_1BB8738B8();

    if ((v6 & 1) != 0)
      objc_msgSend(v4, sel_dismissViewControllerAnimated_completion_, 0, 0);
  }
  return v2;
}

uint64_t sub_1BB219E08()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB219E2C@<X0>(BOOL *a1@<X8>)
{
  uint64_t v1;

  return sub_1BB217EB0(*(_QWORD *)(v1 + 16), a1);
}

void sub_1BB219E44()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BE128)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BE128);
  }
}

uint64_t sub_1BB219EA4()
{
  uint64_t v0;

  return sub_1BB217F9C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_BYTE *)(v0 + 33));
}

void sub_1BB219EC4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BE130)
  {
    sub_1BB219F30(255);
    sub_1BB219F68(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BE130);
  }
}

void sub_1BB219F30(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BE138, (uint64_t (*)(uint64_t))sub_1BB219F4C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
}

void sub_1BB219F4C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BE140, (uint64_t (*)(uint64_t))type metadata accessor for FormatBindingContent, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
}

void sub_1BB219F68(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BE148, (uint64_t (*)(uint64_t))sub_1BA86535C, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for DebugFormatManagerResult);
}

uint64_t sub_1BB219F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  sub_1BB219F68(0);
  v2 = v1;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v4 = (v3 + 24) & ~v3;

  v5 = v0 + v4;
  sub_1BB21A054(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  v6 = v5 + *(int *)(v2 + 28);
  v7 = sub_1BB86EB84();
  v8 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8);
  v8(v6, v7);
  v9 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v8(v6 + *(int *)(v9 + 20), v7);
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB21A054(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3)
  {
    if (a3 != 1)
      return result;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB21A09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1BB219F68(0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_1BB218310(v0 + ((v2 + 24) & ~v2));
}

uint64_t sub_1BB21A0E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3)
  {
    if (a3 != 1)
      return result;
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB21A12C()
{
  uint64_t v0;

  return sub_1BB21958C(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(const void **)(v0 + 32));
}

uint64_t sub_1BB21A148()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatPackagesDelta() - 8) + 80);
  v2 = (v1 + 353) & ~v1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB21A054(*(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v2 + 8), *(_BYTE *)(v0 + v2 + 16));
  sub_1BB219F68(0);
  v4 = v0 + v2 + *(int *)(v3 + 28);
  v5 = sub_1BB86EB84();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v6(v4 + *(int *)(v7 + 20), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB21A358(char *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatPackagesDelta() - 8) + 80);
  sub_1BB21966C(a1, (const void *)(v1 + 16), *(_BYTE *)(v1 + 352), v1 + ((v3 + 353) & ~v3));
}

uint64_t sub_1BB21A39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatPackagesDelta() - 8) + 80);
  v2 = (v1 + 361) & ~v1;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB21A054(*(_QWORD *)(v0 + v2), *(_QWORD *)(v0 + v2 + 8), *(_BYTE *)(v0 + v2 + 16));
  sub_1BB219F68(0);
  v4 = v0 + v2 + *(int *)(v3 + 28);
  v5 = sub_1BB86EB84();
  v6 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v6(v4, v5);
  v7 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v6(v4 + *(int *)(v7 + 20), v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB21A5B4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for DebugFormatPackagesDelta() - 8) + 80);
  return sub_1BB21981C(*(_QWORD *)(v0 + 16), (const void *)(v0 + 24), *(unsigned __int8 *)(v0 + 360), v0 + ((v1 + 361) & ~v1));
}

void sub_1BB21A5EC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BE150, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatPackagesDelta, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB21A610(_QWORD *a1)
{
  uint64_t v1;

  return sub_1BB217948(a1, v1);
}

uint64_t Array<A>.localizedOxfordCommaSeparatedList.getter(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  void *v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v12)(void);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v19)(void);

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  v5 = objc_msgSend(v3, sel_bundleForClass_, ObjCClassFromMetadata, 0x80000001BB980080);
  sub_1BB86C340();

  v6 = *(_QWORD *)(a1 + 16);
  if (v6 == 2)
  {
    swift_bridgeObjectRelease();
    v9 = MEMORY[0x1E0DEAEC8];
    sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_1BB21A9B8((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))v9, MEMORY[0x1E0DEAF20]);
    v8 = sub_1BB872904();
LABEL_8:
    swift_bridgeObjectRelease();
    return v8;
  }
  v7 = v6 - 1;
  if (v6 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v8 = *(_QWORD *)(a1 + 32);
    swift_bridgeObjectRetain();
    return v8;
  }
  if (v6)
  {
    sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B9FA0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DED1E8]);
    v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v11);
    v12 = MEMORY[0x1E0DEBF30];
    sub_1BA6A0B5C(0, (unint64_t *)&unk_1ED3CFA28, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEBF30]);
    sub_1BB21A9B8((unint64_t *)&qword_1ED3CFA20, (unint64_t *)&unk_1ED3CFA28, (uint64_t (*)(_QWORD, _QWORD))v12, MEMORY[0x1E0DEBF68]);
    v13 = sub_1BB872904();
    v15 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v10 + 32) = v13;
    *(_QWORD *)(v10 + 40) = v15;
    v16 = (_QWORD *)(a1 + 32 + 16 * v7);
    v17 = v16[1];
    *(_QWORD *)(v10 + 48) = *v16;
    *(_QWORD *)(v10 + 56) = v17;
    swift_bridgeObjectRetain();
    sub_1BB872AFC(v18);
    swift_bridgeObjectRelease();
    v19 = MEMORY[0x1E0DEAEC8];
    sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
    sub_1BB21A9B8((unint64_t *)&qword_1ED3B95D0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))v19, MEMORY[0x1E0DEAF20]);
    v8 = sub_1BB872904();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB21A9B8(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BA6A0B5C(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB21AA00()
{
  __int128 *v0;
  char *v1;
  __int128 v2[8];
  _BYTE v3[128];

  sub_1BA7439D4(v0, (uint64_t)v2);
  sub_1BA7439D4(v2, (uint64_t)v3);
  v1 = (char *)sub_1BB21AA68 + 4 * byte_1BB8FAB10[sub_1BAB05900((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1BB21AA68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE v5[128];
  __int128 v6[8];
  __int128 v7[24];

  v4 = *(_QWORD *)sub_1BAB0593C(v1 - 240);
  sub_1BA7439D4(v7, (uint64_t)v5);
  sub_1BAB0593C((uint64_t)v5);
  swift_retain();
  swift_retain();
  sub_1BB525134();
  v2 = *(_QWORD *)&v6[0];
  sub_1BB525134();
  sub_1BA6A0C50(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
  *(_QWORD *)&v6[0] = v2;
  *((_QWORD *)&v6[0] + 1) = v4;
  sub_1BAE90170((uint64_t)v6);
  return sub_1BA7439D4(v6, v0);
}

void _s8NewsFeed10FormatFillO2eeoiySbAC_ACtFZ_0(__int128 *a1, __int128 *a2)
{
  char *v3;
  __int128 v4[8];
  __int128 v5[8];
  _BYTE v6[128];
  uint64_t v7;
  _BYTE v8[128];

  sub_1BA7439D4(a1, (uint64_t)v4);
  sub_1BA7439D4(a2, (uint64_t)v5);
  sub_1BA7439D4(v4, (uint64_t)v6);
  sub_1BA7439D4(v5, (uint64_t)&v7);
  sub_1BA7439D4(v4, (uint64_t)v8);
  v3 = (char *)sub_1BB21ACB4 + 4 * byte_1BB8FAB18[sub_1BAB05900((uint64_t)v8)];
  __asm { BR              X10 }
}

uint64_t sub_1BB21ACB4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char v7;
  _QWORD v9[16];
  _BYTE v10[128];
  _QWORD v11[16];
  __int128 v12[8];
  _BYTE v13[480];

  v1 = (uint64_t *)sub_1BAB0593C(v0 - 208);
  v2 = *v1;
  v3 = v1[1];
  sub_1BA7439D4(v12, (uint64_t)v10);
  if (sub_1BAB05900((uint64_t)v10))
  {
    sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
    sub_1BB21B42C((uint64_t)v13);
    goto LABEL_6;
  }
  sub_1BAB0593C((uint64_t)v10);
  v9[0] = v2;
  sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
  sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
  sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
  sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8AE0);
  static FormatColor.== infix(_:_:)((uint64_t)v9);
  if ((v4 & 1) == 0)
  {
    sub_1BB21B42C((uint64_t)v13);
    sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
    sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
    goto LABEL_6;
  }
  v9[0] = v3;
  static FormatColor.== infix(_:_:)((uint64_t)v9);
  v6 = v5;
  sub_1BB21B42C((uint64_t)v13);
  sub_1BA6A0C50(v12, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
  sub_1BA6A0C50(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1BA6E8CCC);
  if ((v6 & 1) == 0)
  {
LABEL_6:
    v7 = 0;
    return v7 & 1;
  }
  v7 = 1;
  return v7 & 1;
}

unint64_t sub_1BB21B050(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB21B074();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB21B074()
{
  unint64_t result;

  result = qword_1EF2BE160;
  if (!qword_1EF2BE160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFill, &type metadata for FormatFill);
    atomic_store(result, (unint64_t *)&qword_1EF2BE160);
  }
  return result;
}

unint64_t sub_1BB21B0B8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA69C2C4();
  a1[2] = sub_1BA686650();
  result = sub_1BB21B0EC();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB21B0EC()
{
  unint64_t result;

  result = qword_1EF2BE168;
  if (!qword_1EF2BE168)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatFill, &type metadata for FormatFill);
    atomic_store(result, (unint64_t *)&qword_1EF2BE168);
  }
  return result;
}

void destroy for FormatFill(uint64_t *a1)
{
  sub_1BA6E8CCC(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13]);
}

uint64_t *initializeWithCopy for FormatFill(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  sub_1BA6E8AE0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16, v17);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  return a1;
}

uint64_t assignWithCopy for FormatFill(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = a2[7];
  v11 = a2[8];
  v24 = a2[9];
  v25 = a2[10];
  v26 = a2[11];
  v27 = a2[12];
  v28 = a2[13];
  v29 = a2[14];
  v30 = a2[15];
  sub_1BA6E8AE0(*a2, v4, v5, v6, v7, v8, v9, v10, v11, v24, v25, v26, v27, v28);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  v22 = *(_OWORD *)(a1 + 96);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v10;
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v24;
  *(_QWORD *)(a1 + 80) = v25;
  *(_QWORD *)(a1 + 88) = v26;
  *(_QWORD *)(a1 + 96) = v27;
  *(_QWORD *)(a1 + 104) = v28;
  *(_QWORD *)(a1 + 112) = v29;
  *(_QWORD *)(a1 + 120) = v30;
  sub_1BA6E8CCC(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1));
  return a1;
}

uint64_t assignWithTake for FormatFill(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v14;
  v15 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v15;
  v16 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v16;
  v17 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v17;
  sub_1BA6E8CCC(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1));
  return a1;
}

uint64_t sub_1BB21B408(uint64_t result, uint64_t a2)
{
  *(_QWORD *)(result + 104) = *(_QWORD *)(result + 104) & 1 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for FormatFill()
{
  return &type metadata for FormatFill;
}

uint64_t sub_1BB21B42C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v2 = *(_QWORD *)(a1 + 136);
  v13 = *(_QWORD *)(a1 + 128);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v11 = *(_OWORD *)(a1 + 208);
  v12 = *(_OWORD *)(a1 + 192);
  v10 = *(_OWORD *)(a1 + 224);
  sub_1BA6E8CCC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104));
  sub_1BA6E8CCC(v13, v2, v3, v4, v5, v6, v7, v8, v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1));
  return a1;
}

ValueMetadata *type metadata accessor for SportsKeyPlayerEligibility()
{
  return &type metadata for SportsKeyPlayerEligibility;
}

uint64_t sub_1BB21B51C(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB8746B0();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1BB8743E0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

_QWORD *sub_1BB21B690@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v5;

  result = sub_1BB21B6D0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1BB21B6B8(_QWORD *a1)
{
  return sub_1BB21B51C(a1);
}

_QWORD *sub_1BB21B6D0(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  BOOL v8;
  _QWORD v9[4];

  v3 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB874674();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v4 = sub_1BB8743B0();
    v3 = (_QWORD *)v4;
    v7 = v5;
    v8 = v4 == 0x6465776F6C6C61 && v5 == 0xE700000000000000;
    if (v8
      || (sub_1BB874398() & 1) != 0
      || v3 == (_QWORD *)0x64656C6261736964 && v7 == 0xE800000000000000
      || (sub_1BB874398() & 1) != 0
      || v3 == (_QWORD *)0x6572726566657270 && v7 == 0xE900000000000064
      || (sub_1BB874398() & 1) != 0
      || v3 == (_QWORD *)0x737961776C61 && v7 == 0xE600000000000000
      || (sub_1BB874398() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      v3 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v3;
}

char *sub_1BB21B934(double a1, double a2, double a3, double a4)
{
  char *v4;
  objc_class *ObjectType;
  char *v10;
  char *v11;
  uint64_t v12;
  id v13;
  char *v14;
  id v15;
  void *v16;
  char *v17;
  id v18;
  uint64_t v19;
  void *v20;
  void *v21;
  id v22;
  id v23;
  double v24;
  double v25;
  id v26;
  id v27;
  id v28;
  id v29;
  id v30;
  objc_super v32;

  ObjectType = (objc_class *)swift_getObjectType();
  *(_QWORD *)&v4[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale] = 0x3FF0000000000000;
  v10 = &v4[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentSize];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v11 = &v4[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentBounds];
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v12 = OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_gridLayer;
  v13 = objc_allocWithZone(MEMORY[0x1E0CD2840]);
  v14 = v4;
  *(_QWORD *)&v4[v12] = objc_msgSend(v13, sel_init);

  v32.receiver = v14;
  v32.super_class = ObjectType;
  v15 = objc_msgSendSuper2(&v32, sel_initWithFrame_, a1, a2, a3, a4);
  v16 = (void *)objc_opt_self();
  v17 = (char *)v15;
  v18 = objc_msgSend(v16, sel_clearColor);
  objc_msgSend(v17, sel_setBackgroundColor_, v18);

  objc_msgSend(v17, sel_setUserInteractionEnabled_, 0);
  v19 = OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_gridLayer;
  v20 = *(void **)&v17[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_gridLayer];
  v21 = (void *)objc_opt_self();
  v22 = v20;
  v23 = objc_msgSend(v21, sel_mainScreen);
  objc_msgSend(v23, sel_scale);
  v25 = v24;

  objc_msgSend(v22, sel_setLineWidth_, 1.0 / v25);
  v26 = *(id *)&v17[v19];
  v27 = objc_msgSend(v16, sel_systemGrayColor);
  v28 = objc_msgSend(v27, sel_CGColor);

  objc_msgSend(v26, sel_setStrokeColor_, v28);
  v29 = objc_msgSend(v17, sel_layer);
  v30 = *(id *)&v17[v19];
  objc_msgSend(v29, sel_addSublayer_, v30);

  return v17;
}

void sub_1BB21BC94()
{
  char *v0;
  void *v1;
  CGMutablePathRef Mutable;
  objc_super v3;

  v3.receiver = v0;
  v3.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v3, sel_layoutSubviews);
  v1 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_gridLayer];
  objc_msgSend(v0, sel_bounds);
  objc_msgSend(v1, sel_setFrame_);
  if (sub_1BB21BD60() <= 10.0)
  {
    Mutable = CGPathCreateMutable();
    sub_1BB21BE14((uint64_t)Mutable, 0);
    sub_1BB21BE14((uint64_t)Mutable, 1);
    objc_msgSend(v1, sel_setPath_, Mutable);

  }
  else
  {
    objc_msgSend(v1, sel_setPath_, 0);
  }
}

double sub_1BB21BD60()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  CGRect v5;

  v1 = OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale;
  v2 = 1.0;
  if (*(double *)&v0[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale] > 0.0)
  {
    objc_msgSend(v0, sel_bounds);
    v3 = CGRectGetWidth(v5) / *(double *)&v0[v1];
    if (v3 >= 50.0)
    {
      v2 = 2.0;
      if (v3 >= 100.0)
      {
        v2 = 10.0;
        if (v3 >= 200.0)
        {
          if (v3 >= 500.0)
            return 100.0;
          else
            return 50.0;
        }
      }
    }
  }
  return v2;
}

void sub_1BB21BE14(uint64_t a1, char a2)
{
  char *v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  CGFloat Width;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double MinX;
  double v21;
  double MinY;
  double v23;
  CGRect v24;
  CGRect v25;
  CGRect v26;
  CGRect v27;
  CGRect v28;
  CGRect v29;
  CGRect v30;
  CGRect v31;
  CGRect v32;

  v3 = a2 & 1;
  sub_1BB21C1F8(a2 & 1, (uint64_t)v2);
  if (v4 >= 2)
  {
    v5 = v4;
    v6 = 0;
    v7 = &v2[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentBounds];
    v8 = OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale;
    v9 = -100;
    while (1)
    {
      while (1)
      {
        if (v9 >= v5)
        {
          if ((v9 != v5) | v6 & 1)
            return;
          v6 = 1;
          v10 = v5;
        }
        else
        {
          v10 = v9 + 1;
        }
        v11 = *(double *)&v2[v8];
        v12 = 1.0;
        if (v11 > 0.0)
        {
          objc_msgSend(v2, sel_bounds);
          Width = CGRectGetWidth(v26);
          v11 = *(double *)&v2[v8];
          v14 = Width / v11;
          if (v14 >= 50.0)
          {
            v12 = 2.0;
            if (v14 >= 100.0)
            {
              v12 = 10.0;
              if (v14 >= 200.0)
              {
                if (v14 >= 500.0)
                  v12 = 100.0;
                else
                  v12 = 50.0;
              }
            }
          }
        }
        v15 = v12 * v11 * (double)v9;
        v16 = *(_QWORD *)v7;
        v17 = *((_QWORD *)v7 + 1);
        v18 = *((_QWORD *)v7 + 2);
        v19 = *((_QWORD *)v7 + 3);
        if (v3)
          break;
        MinX = CGRectGetMinX(*(CGRect *)&v16);
        objc_msgSend(v2, sel_frame);
        v9 = v10;
        if (MinX + CGRectGetMinX(v27) < v15)
        {
          v21 = CGRectGetMinX(*(CGRect *)v7);
          objc_msgSend(v2, sel_frame);
          v9 = v10;
          if (v15 < v21 + CGRectGetMaxX(v28))
          {
            CGRectGetMinX(*(CGRect *)v7);
            objc_msgSend(v2, sel_frame);
            CGRectGetMinX(v29);
            objc_msgSend(v2, sel_bounds);
            CGRectGetHeight(v30);
            goto LABEL_3;
          }
        }
      }
      MinY = CGRectGetMinY(*(CGRect *)&v16);
      objc_msgSend(v2, sel_frame);
      v9 = v10;
      if (MinY + CGRectGetMinY(v31) < v15)
      {
        v23 = CGRectGetMinY(*(CGRect *)v7);
        objc_msgSend(v2, sel_frame);
        v9 = v10;
        if (v15 < v23 + CGRectGetMaxY(v32))
        {
          CGRectGetMinY(*(CGRect *)v7);
          objc_msgSend(v2, sel_frame);
          CGRectGetMinY(v24);
          objc_msgSend(v2, sel_bounds);
          CGRectGetWidth(v25);
LABEL_3:
          sub_1BB87333C();
          sub_1BB873354();
          v9 = v10;
        }
      }
    }
  }
}

void sub_1BB21C1F8(char a1, uint64_t a2)
{
  uint64_t v2;
  double v3;
  double v4;
  double v5;
  double v6;

  v2 = a2 + OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_contentSize;
  if ((a1 & 1) != 0)
    goto LABEL_6;
  v3 = *(double *)v2;
  v4 = v3 / sub_1BB21C2CC();
  if ((~*(_QWORD *)&v4 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v4 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  v2 = 0x43E0000000000000;
  if (v4 < 9.22337204e18)
    return;
  __break(1u);
LABEL_6:
  v5 = *(double *)(v2 + 8);
  v6 = v5 / sub_1BB21C2CC();
  if ((~*(_QWORD *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v6 >= 9.22337204e18)
LABEL_14:
    __break(1u);
}

double sub_1BB21C2CC()
{
  char *v0;
  uint64_t v1;
  double v2;
  double v3;
  CGFloat Width;
  double v5;
  CGRect v7;

  v1 = OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale;
  v2 = *(double *)&v0[OBJC_IVAR____TtC8NewsFeed19DebugFormatGridView_scale];
  v3 = 1.0;
  if (v2 > 0.0)
  {
    objc_msgSend(v0, sel_bounds);
    Width = CGRectGetWidth(v7);
    v2 = *(double *)&v0[v1];
    v5 = Width / v2;
    if (v5 >= 50.0)
    {
      v3 = 2.0;
      if (v5 >= 100.0)
      {
        v3 = 10.0;
        if (v5 >= 200.0)
        {
          if (v5 >= 500.0)
            v3 = 100.0;
          else
            v3 = 50.0;
        }
      }
    }
  }
  return v3 * v2;
}

uint64_t type metadata accessor for DebugFormatGridView()
{
  return objc_opt_self();
}

uint64_t FeedLayoutAttributesFactoryProvider.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t FeedLayoutAttributesFactoryProvider.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FeedLayoutAttributesFactoryProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t *assignWithCopy for FormatMenuItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = *a2;
  v5 = a2[1];
  v6 = a2[2];
  v7 = a2[3];
  sub_1BA7CCBB4(*a2, v5, v6, v7);
  v8 = *a1;
  v9 = a1[1];
  v10 = a1[2];
  v11 = a1[3];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  sub_1BA7CCC14(v8, v9, v10, v11);
  v12 = a2[4];
  v13 = a2[5];
  v14 = a2[6];
  sub_1BA7CCCA0(v12, v13, v14);
  v15 = a1[4];
  v16 = a1[5];
  v17 = a1[6];
  a1[4] = v12;
  a1[5] = v13;
  a1[6] = v14;
  sub_1BA7CCC64(v15, v16, v17);
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *assignWithTake for FormatMenuItem(uint64_t *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = a1[3];
  v8 = a2[1];
  *(_OWORD *)a1 = *a2;
  *((_OWORD *)a1 + 1) = v8;
  sub_1BA7CCC14(v4, v5, v6, v7);
  v9 = a1[4];
  v10 = a1[5];
  v11 = a1[6];
  *((_OWORD *)a1 + 2) = a2[2];
  sub_1BA7CCC64(v9, v10, v11);
  *((_OWORD *)a1 + 3) = a2[3];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for FormatMenuItem()
{
  return &type metadata for FormatMenuItem;
}

void sub_1BB21C560(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29[2];
  unsigned __int8 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD v34[3];
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v7 = v3[1];
  v37 = *v3;
  v9 = v3[2];
  v8 = v3[3];
  v11 = v3[4];
  v10 = v3[5];
  v12 = v3[6];
  sub_1BB668AE0(a1, a2, v3[7]);
  if (!v4)
  {
    v26 = a2;
    v13 = v37;
    v25 = v12;
    if (v33)
    {
      sub_1BA4CECCC(&v31, (uint64_t)v34);
      *(_QWORD *)&v31 = v13;
      *((_QWORD *)&v31 + 1) = v7;
      v32 = v9;
      v33 = v8;
      sub_1BA7CCBB4(v13, v7, v9, v8);
      v14 = a1;
      sub_1BACCC060(a1, v26, v29);
      sub_1BA7CCC14(v13, v7, v9, v8);
      v15 = v29[1];
      v37 = v29[0];
      v16 = v30;
      if ((v25 & 0x2000000000000000) != 0)
      {
        *(_QWORD *)&v31 = v11;
        swift_retain();
        v18 = (uint64_t *)a3;
        v23 = sub_1BA76F060(v14);
        v24 = v15;
        v27 = v16;
        sub_1BA7CCC64(v11, v10, v25);
      }
      else
      {
        swift_retain();
        sub_1BA7CCCA0(v11, v10, v25);
        v17 = sub_1BB254E04(v14, v11, v10, v25, v14);
        sub_1BA7CCC64(v11, v10, v25);
        v18 = (uint64_t *)a3;
        v23 = v17;
        v24 = v15;
        v27 = v16;
      }
      v19 = v37;
      v20 = v35;
      v21 = v36;
      __swift_project_boxed_opaque_existential_1(v34, v35);
      v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 8))(v14, v20, v21);
      *v18 = v19;
      v18[1] = v24;
      v18[2] = v27;
      v18[3] = (uint64_t)v23;
      v18[4] = ((v25 & 0x2000000000000000uLL) >> 61) ^ 1;
      v18[5] = v22;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    }
    else
    {
      sub_1BB21CC18((uint64_t)&v31);
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
      *(_QWORD *)(a3 + 32) = 0;
      *(_QWORD *)(a3 + 40) = 1;
    }
  }
}

unint64_t sub_1BB21C7E4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA835294();
  a1[2] = sub_1BA8352D8();
  result = sub_1BB21C818();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB21C818()
{
  unint64_t result;

  result = qword_1EF2BE1B8;
  if (!qword_1EF2BE1B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAD3C, &type metadata for FormatMenuItem);
    atomic_store(result, (unint64_t *)&qword_1EF2BE1B8);
  }
  return result;
}

unint64_t sub_1BB21C85C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB21C880();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB21C880()
{
  unint64_t result;

  result = qword_1EF2BE1C0;
  if (!qword_1EF2BE1C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAD8C, &type metadata for FormatMenuItem);
    atomic_store(result, (unint64_t *)&qword_1EF2BE1C0);
  }
  return result;
}

void sub_1BB21C8C4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v5 = *v2;
  v6 = v2[1];
  v7 = v2[2];
  v8 = v2[3];
  v16 = v2[7];
  sub_1BB21CCFC();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  if ((v8 & 4) != 0)
  {
    swift_retain();
    sub_1BA724A8C();
  }
  else
  {
    sub_1BA7CCBB4(v5, v6, v7, v8);
    v10 = sub_1BB21CD50(a1, a2, v5);
  }
  v13 = v10;
  v14 = v11;
  v15 = v12;
  sub_1BA7CCC14(v5, v6, v7, v8);
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(inited + 40) = v14;
  *(_BYTE *)(inited + 48) = v15 & 1;
  *(_QWORD *)(inited + 56) = a1;
  *(_QWORD *)(inited + 64) = a2;
  *(_BYTE *)(inited + 72) = 0;
  __asm { BR              X10 }
}

uint64_t sub_1BB21C9D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;

  swift_bridgeObjectRetain_n();
  *(_QWORD *)(v0 + 80) = v2;
  *(_QWORD *)(v0 + 88) = v1;
  *(_BYTE *)(v0 + 96) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  return 0;
}

void sub_1BB21CB68(__int128 *a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  v5 = *((_QWORD *)a1 + 6);
  v4 = *((_QWORD *)a1 + 7);
  v6 = *((_QWORD *)a2 + 4);
  v7 = *((_QWORD *)a2 + 5);
  v8 = *((_QWORD *)a2 + 6);
  v9 = a1[1];
  v13 = *a1;
  v14 = v9;
  v10 = a2[1];
  v11 = *a2;
  v12 = v10;
  if ((_s8NewsFeed15FormatMenuTitleO2eeoiySbAC_ACtFZ_0((uint64_t *)&v13, (uint64_t *)&v11) & 1) != 0)
  {
    *(_QWORD *)&v13 = v2;
    *((_QWORD *)&v13 + 1) = v3;
    *(_QWORD *)&v14 = v5;
    *(_QWORD *)&v11 = v6;
    *((_QWORD *)&v11 + 1) = v7;
    *(_QWORD *)&v12 = v8;
    if ((_s8NewsFeed15FormatMenuImageO2eeoiySbAC_ACtFZ_0((uint64_t *)&v13, (uint64_t *)&v11) & 1) != 0)
      sub_1BB668C18(v4);
  }
}

uint64_t sub_1BB21CC18(uint64_t a1)
{
  uint64_t v2;

  sub_1BB21CC54();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB21CC54()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A70D8)
  {
    sub_1BB21CCA8();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A70D8);
  }
}

unint64_t sub_1BB21CCA8()
{
  unint64_t result;

  result = qword_1ED3A70D0;
  if (!qword_1ED3A70D0)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED3A70D0);
  }
  return result;
}

void sub_1BB21CCFC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3BBB90)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3BBB90);
  }
}

uint64_t sub_1BB21CD50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 32;
    do
    {
      sub_1BA710B08();
      v7 = v6;
      sub_1BA7114E4();
      if ((v7 & 1) != 0)
        break;
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB21CE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v4 = *(_QWORD *)(a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = 32;
    do
    {
      sub_1BA710B08();
      v7 = v6;
      sub_1BA7114E4();
      if ((v7 & 1) != 0)
        break;
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t *sub_1BB21CEB8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BB0D7C54();
    v10 = v9;
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v7, v8, v10);
  }
  return v3;
}

uint64_t sub_1BB21CF54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  sub_1BB0D7C54();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_1BB21CF9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  sub_1BB0D7C54();
  v9 = v8;
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v6, v7, v9);
  return a1;
}

_QWORD *sub_1BB21D00C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  sub_1BB0D7C54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1BB21D088(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  sub_1BB0D7C54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_1BB21D0E4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  sub_1BB0D7C54();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1BB21D150()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB21D15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    sub_1BB0D7C54();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1BB21D1D8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB21D1E4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1BB0D7C54();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SportsDataVisualizationResponseData()
{
  uint64_t result;

  result = qword_1ED3A45D8;
  if (!qword_1ED3A45D8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB21D294()
{
  unint64_t v0;

  sub_1BB0D7C54();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BB21D308(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  _BYTE v9[16];

  sub_1BB21D860(0, &qword_1EF2BE1C8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = &v9[-v6];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB21D79C();
  sub_1BB8746C8();
  v9[15] = 0;
  sub_1BB87417C();
  if (!v1)
  {
    type metadata accessor for SportsDataVisualizationResponseData();
    v9[14] = 1;
    sub_1BB0D7C54();
    sub_1BA4A2870(&qword_1EF2BE1D0, (uint64_t (*)(uint64_t))sub_1BB0D7C54, MEMORY[0x1E0DB3A30]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1BB21D464@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;

  v21 = a2;
  sub_1BB0D7C54();
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x1E0C80A78](v4);
  v22 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB21D860(0, &qword_1ED3AB3B0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v25 = v6;
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v20 - v8;
  v10 = type metadata accessor for SportsDataVisualizationResponseData();
  MEMORY[0x1E0C80A78](v10);
  v12 = (uint64_t *)((char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB21D79C();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v20 = a1;
  v13 = v7;
  v14 = v12;
  v16 = v22;
  v15 = v23;
  v17 = v24;
  v27 = 0;
  *v14 = sub_1BB874098();
  v14[1] = v18;
  v26 = 1;
  sub_1BA4A2870(&qword_1ED3A3978, (uint64_t (*)(uint64_t))sub_1BB0D7C54, MEMORY[0x1E0DB3A38]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v25);
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))((char *)v14 + *(int *)(v10 + 20), v16, v17);
  sub_1BB21D7E0((uint64_t)v14, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  return sub_1BB21D824((uint64_t)v14);
}

uint64_t sub_1BB21D6BC()
{
  _BYTE *v0;

  if (*v0)
    return 0x7A696C6175736976;
  else
    return 0x6449676174;
}

uint64_t sub_1BB21D700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB21DA60(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB21D724()
{
  sub_1BB21D79C();
  return sub_1BB874710();
}

uint64_t sub_1BB21D74C()
{
  sub_1BB21D79C();
  return sub_1BB87471C();
}

uint64_t sub_1BB21D774@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BB21D464(a1, a2);
}

uint64_t sub_1BB21D788(_QWORD *a1)
{
  return sub_1BB21D308(a1);
}

unint64_t sub_1BB21D79C()
{
  unint64_t result;

  result = qword_1ED3A45A8;
  if (!qword_1ED3A45A8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAF64, &type metadata for SportsDataVisualizationResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A45A8);
  }
  return result;
}

uint64_t sub_1BB21D7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SportsDataVisualizationResponseData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB21D824(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SportsDataVisualizationResponseData();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1BB21D860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB21D79C();
    v7 = a3(a1, &type metadata for SportsDataVisualizationResponseData.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationResponseData.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB21D908 + 4 * byte_1BB8FAE05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB21D93C + 4 * byte_1BB8FAE00[v4]))();
}

uint64_t sub_1BB21D93C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB21D944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB21D94CLL);
  return result;
}

uint64_t sub_1BB21D958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB21D960);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB21D964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB21D96C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationResponseData.CodingKeys()
{
  return &type metadata for SportsDataVisualizationResponseData.CodingKeys;
}

unint64_t sub_1BB21D98C()
{
  unint64_t result;

  result = qword_1EF2BE1D8;
  if (!qword_1EF2BE1D8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAF3C, &type metadata for SportsDataVisualizationResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BE1D8);
  }
  return result;
}

unint64_t sub_1BB21D9D4()
{
  unint64_t result;

  result = qword_1ED3A45B8;
  if (!qword_1ED3A45B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAEAC, &type metadata for SportsDataVisualizationResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A45B8);
  }
  return result;
}

unint64_t sub_1BB21DA1C()
{
  unint64_t result;

  result = qword_1ED3A45B0;
  if (!qword_1ED3A45B0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FAED4, &type metadata for SportsDataVisualizationResponseData.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED3A45B0);
  }
  return result;
}

uint64_t sub_1BB21DA60(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6449676174 && a2 == 0xE500000000000000;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A696C6175736976 && a2 == 0xEE00736E6F697461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1BB21DB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  _QWORD v16[2];

  v2 = type metadata accessor for FormatSlotDefinition();
  MEMORY[0x1E0C80A78](v2);
  v4 = (_QWORD *)((char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4A3FB4(0, qword_1EF2ADE58, (void (*)(uint64_t))type metadata accessor for FormatSlotDefinitionItemSet);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v16 - v9;
  v11 = type metadata accessor for FormatSlotDefinitionItemSet();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = sub_1BB710184((uint64_t)v10);
  if (!v1)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
    {
      return sub_1BAA441BC((uint64_t)v10);
    }
    else
    {
      sub_1BA8C88F0((uint64_t)v10, (uint64_t)v14);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v7, 1, 1, v11);
      sub_1BB5F9054((uint64_t)v14, (uint64_t)v7, v4);
      sub_1BAA441BC((uint64_t)v7);
      sub_1BAA44288((uint64_t)v14);
      return sub_1BAB0EA00((uint64_t)v4, v0);
    }
  }
  return result;
}

uint64_t *sub_1BB21DD14(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = type metadata accessor for FormatSlotDefinition();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    a1[8] = a2[8];
    v10 = *(int *)(v4 + 40);
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    v12 = sub_1BB86E710();
    v13 = *(_QWORD *)(v12 - 8);
    v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v17(v11, 1, v12))
    {
      sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t sub_1BB21DE8C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  v3 = sub_1BB86E710();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *sub_1BB21DF34(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  a1[8] = a2[8];
  v8 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  __dst = (char *)a1 + v8;
  v9 = (char *)a2 + v8;
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v14(v9, 1, v10))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(__dst, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  return a1;
}

_QWORD *sub_1BB21E080(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1BB86E710();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1BB21E240(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1BB86E710();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

_QWORD *sub_1BB21E324(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRelease();
  v7 = *(int *)(type metadata accessor for FormatSlotDefinition() + 40);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1BB86E710();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3C47E8, (void (*)(uint64_t))MEMORY[0x1E0DB48B0]);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t sub_1BB21E49C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB21E4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinition();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1BB21E4E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB21E4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatSlotDefinition();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for FormatDerivedDataBindingSlotResult()
{
  uint64_t result;

  result = qword_1EF2BE238;
  if (!qword_1EF2BE238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB21E56C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for FormatSlotDefinition();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t static OfflineModel.Traits.== infix(_:_:)()
{
  return 1;
}

uint64_t OfflineModel.Traits.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t OfflineModel.Traits.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t OfflineModel.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OfflineModel.title.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OfflineModel.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t OfflineModel.traits.getter()
{
  return swift_bridgeObjectRetain();
}

void __swiftcall OfflineModel.init(identifier:title:description:traits:)(NewsFeed::OfflineModel *__return_ptr retstr, Swift::String identifier, Swift::String title, Swift::String description, Swift::OpaquePointer traits)
{
  retstr->identifier = identifier;
  retstr->title = title;
  retstr->description = description;
  retstr->traits = traits;
}

uint64_t OfflineModel.errorModel.getter()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1BB86F448();
}

uint64_t sub_1BB21E738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v0 = sub_1BB86C8E0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86C8D4();
  v4 = sub_1BB86C8C8();
  v6 = v5;
  result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_1EF2BE270 = v4;
  *(_QWORD *)algn_1EF2BE278 = v6;
  qword_1EF2BE280 = 0;
  unk_1EF2BE288 = 0xE000000000000000;
  qword_1EF2BE290 = 0;
  unk_1EF2BE298 = 0xE000000000000000;
  qword_1EF2BE2A0 = MEMORY[0x1E0DEE9D8];
  return result;
}

uint64_t static OfflineModel.empty.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (qword_1EF2A70D0 != -1)
    swift_once();
  v2 = *(_QWORD *)algn_1EF2BE278;
  v3 = qword_1EF2BE280;
  v4 = unk_1EF2BE288;
  v5 = qword_1EF2BE290;
  v6 = unk_1EF2BE298;
  v7 = qword_1EF2BE2A0;
  *a1 = qword_1EF2BE270;
  a1[1] = v2;
  a1[2] = v3;
  a1[3] = v4;
  a1[4] = v5;
  a1[5] = v6;
  a1[6] = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

BOOL _s8NewsFeed12OfflineModelV2eeoiySbAC_ACtFZ_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1[2];
  v4 = a1[3];
  v3 = a1[4];
  v6 = a1[5];
  v5 = a1[6];
  v7 = a2[2];
  v8 = a2[3];
  v9 = a2[4];
  v10 = a2[5];
  v11 = a2[6];
  return (*a1 == *a2 && a1[1] == a2[1] || (sub_1BB874398() & 1) != 0)
      && (v2 == v7 && v4 == v8 || (sub_1BB874398() & 1) != 0)
      && (v3 == v9 && v6 == v10 || (sub_1BB874398() & 1) != 0)
      && sub_1BA891D20(v5, v11);
}

unint64_t sub_1BB21E978()
{
  unint64_t result;

  result = qword_1EF2BE2A8;
  if (!qword_1EF2BE2A8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for OfflineModel.Traits, &type metadata for OfflineModel.Traits);
    atomic_store(result, (unint64_t *)&qword_1EF2BE2A8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for OfflineModel.Traits(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB21E9FC + 4 * asc_1BB8FB014[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB21EA1C + 4 * byte_1BB8FB019[v4]))();
}

_BYTE *sub_1BB21E9FC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB21EA1C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB21EA24(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB21EA2C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB21EA34(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB21EA3C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for OfflineModel.Traits()
{
  return &type metadata for OfflineModel.Traits;
}

id SharingPuzzleTextActivityItemSource.__allocating_init(puzzle:puzzleRankProvider:shareData:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  objc_class *v3;
  id v7;

  v7 = objc_allocWithZone(v3);
  return SharingPuzzleTextActivityItemSource.init(puzzle:puzzleRankProvider:shareData:)(a1, a2, a3);
}

id sub_1BB21EAA0()
{
  id v0;
  id result;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3570]), sel_init);
  objc_msgSend(v0, sel_setAllowedUnits_, 192);
  objc_msgSend(v0, sel_setAllowsFractionalUnits_, 0);
  result = objc_msgSend(v0, sel_setUnitsStyle_, 1);
  qword_1EF3D0730 = (uint64_t)v0;
  return result;
}

id SharingPuzzleTextActivityItemSource.init(puzzle:puzzleRankProvider:shareData:)(uint64_t a1, uint64_t a2, __int128 *a3)
{
  char *v3;
  objc_class *ObjectType;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  id v12;
  __int128 v14;
  objc_super v15;

  ObjectType = (objc_class *)swift_getObjectType();
  v14 = *a3;
  v8 = *((_QWORD *)a3 + 2);
  v9 = *((_QWORD *)a3 + 3);
  v10 = &v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___defaultText];
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  *(_OWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithTimeText] = xmmword_1BB87FC90;
  *(_OWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithRankText] = xmmword_1BB87FC90;
  *(_OWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedPuzzleTypeText] = xmmword_1BB87FC90;
  *(_OWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithTimeText] = xmmword_1BB87FC90;
  LOBYTE(a3) = *((_BYTE *)a3 + 32);
  *(_OWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithRank] = xmmword_1BB87FC90;
  *(_QWORD *)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle] = a1;
  sub_1BB21EC28(a2, (uint64_t)&v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzleRankProvider]);
  v11 = &v3[OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData];
  *(_OWORD *)v11 = v14;
  *((_QWORD *)v11 + 2) = v8;
  *((_QWORD *)v11 + 3) = v9;
  v11[32] = (char)a3;
  v15.receiver = v3;
  v15.super_class = ObjectType;
  v12 = objc_msgSendSuper2(&v15, sel_init);
  sub_1BB21EC8C(a2);
  return v12;
}

uint64_t sub_1BB21EC28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA5B089C(0, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB21EC8C(uint64_t a1)
{
  uint64_t v2;

  sub_1BA5B089C(0, &qword_1ED3D2B50, (unint64_t *)&unk_1ED3C4250, (uint64_t)&protocol descriptor for PuzzleRankProviderType, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB21ECE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___defaultText);
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___defaultText + 8))
  {
    v2 = *v1;
  }
  else
  {
    v2 = sub_1BB21ED60(v0);
    *v1 = v2;
    v1[1] = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1BB21ED60(uint64_t a1)
{
  uint64_t inited;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  _QWORD *v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;

  sub_1BB10CB60();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v3 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle);
  v4 = objc_msgSend(objc_msgSend(v3, sel_puzzleType), sel_nameForSharing);
  swift_unknownObjectRelease();
  v5 = sub_1BB8729A0();
  v7 = v6;

  *(_QWORD *)(inited + 32) = v5;
  *(_QWORD *)(inited + 40) = v7;
  v8 = objc_msgSend(v3, sel_publishDateString);
  if (v8)
  {
    v9 = v8;
    v10 = sub_1BB8729A0();
    v12 = v11;

  }
  else
  {
    v10 = 0;
    v12 = 0;
  }
  *(_QWORD *)(inited + 48) = v10;
  *(_QWORD *)(inited + 56) = v12;
  swift_bridgeObjectRetain();
  v13 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v15 = v13[2];
  v14 = v13[3];
  v16 = v15 + 1;
  if (v15 >= v14 >> 1)
    v13 = sub_1BA6EA0D0((_QWORD *)(v14 > 1), v15 + 1, 1, v13);
  v13[2] = v16;
  v17 = &v13[2 * v15];
  v17[4] = v5;
  v17[5] = v7;
  if (v12)
  {
    v18 = v13[3];
    swift_bridgeObjectRetain();
    if (v16 >= v18 >> 1)
      v13 = sub_1BA6EA0D0((_QWORD *)(v18 > 1), v15 + 2, 1, v13);
    v13[2] = v15 + 2;
    v19 = &v13[2 * v16];
    v19[4] = v10;
    v19[5] = v12;
  }
  swift_release();
  sub_1BA6A0B5C(0, (unint64_t *)&qword_1ED3B95C0, (uint64_t (*)(_QWORD, _QWORD))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  v20 = sub_1BB872904();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1BB21EF60(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t ObjCClassFromMetadata;
  id v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v27[3];
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 24);
  if (v1 < 2)
    return 0;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 16);
  sub_1BB21EC28(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzleRankProvider, (uint64_t)v27);
  v5 = v28;
  if (!v28)
  {
    sub_1BB21EC8C((uint64_t)v27);
    return 0;
  }
  v6 = v29;
  __swift_project_boxed_opaque_existential_1(v27, v28);
  v7 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle);
  v8 = objc_msgSend(objc_msgSend(v7, sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  v9 = sub_1BB8729A0();
  v11 = v10;

  v12 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v4, v1, v9, v11, v5, v6);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
  if (!v12)
    return 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v14 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87A390;
  v16 = objc_msgSend(objc_msgSend(v7, sel_puzzleType, 0x80000001BB9805D0), sel_nameForSharing);
  swift_unknownObjectRelease();
  v17 = sub_1BB8729A0();
  v19 = v18;

  v20 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
  v21 = sub_1BA6A2D8C();
  *(_QWORD *)(v15 + 64) = v21;
  *(_QWORD *)(v15 + 32) = v17;
  *(_QWORD *)(v15 + 40) = v19;
  v22 = objc_msgSend(v12, sel_name);
  v23 = sub_1BB8729A0();
  v25 = v24;

  *(_QWORD *)(v15 + 96) = v20;
  *(_QWORD *)(v15 + 104) = v21;
  *(_QWORD *)(v15 + 72) = v23;
  *(_QWORD *)(v15 + 80) = v25;
  v2 = sub_1BB87297C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1BB21F24C(uint64_t a1)
{
  uint64_t ObjCClassFromMetadata;
  id v3;
  uint64_t v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 24) == 1
    || (*(_BYTE *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 8) & 1) != 0)
  {
    return 0;
  }
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v3 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  v5 = objc_msgSend(objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle), sel_puzzleType, 0x80000001BB9804B0), sel_nameForSharing);
  swift_unknownObjectRelease();
  v6 = sub_1BB8729A0();
  v8 = v7;

  *(_QWORD *)(v4 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v4 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 40) = v8;
  v9 = sub_1BB87297C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1BB21F428(_QWORD *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (uint64_t *)(v2 + *a1);
  v4 = *v3;
  v5 = v3[1];
  v6 = *v3;
  if (v5 == 1)
  {
    v6 = a2(v2);
    v7 = *v3;
    v8 = v3[1];
    *v3 = v6;
    v3[1] = v9;
    swift_bridgeObjectRetain();
    sub_1BA6E3730(v7, v8);
  }
  sub_1BA6EA1F0(v4, v5);
  return v6;
}

uint64_t sub_1BB21F4B4(uint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t ObjCClassFromMetadata;
  id v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 24);
  if (v1 < 2)
    return 0;
  v4 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 16);
  sub_1BB21EC28(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzleRankProvider, (uint64_t)v19);
  v2 = v20;
  if (!v20)
  {
    sub_1BB21EC8C((uint64_t)v19);
    return v2;
  }
  v5 = v21;
  __swift_project_boxed_opaque_existential_1(v19, v20);
  v6 = objc_msgSend(objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle), sel_puzzleType), sel_identifier);
  swift_unknownObjectRelease();
  v7 = sub_1BB8729A0();
  v9 = v8;

  v10 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8))(v4, v1, v7, v9, v2, v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
  if (!v10)
    return 0;
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v12 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1BB87CE70;
  v14 = objc_msgSend(v10, sel_name, 0x80000001BB980700);
  v15 = sub_1BB8729A0();
  v17 = v16;

  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v17;
  v2 = sub_1BB87297C();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

char sub_1BB21F730(_QWORD *a1)
{
  uint64_t v1;
  void *v3;
  id v4;
  void *v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t (*v31)(uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  unsigned __int8 v41;
  _QWORD v42[3];
  uint64_t v43;
  uint64_t v44;

  v3 = *(void **)(v1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle);
  swift_getObjectType();
  v4 = objc_msgSend(v3, sel_subtitle);
  if (v4)
  {
    v5 = v4;
    sub_1BB8729A0();

    v42[0] = 34;
    v42[1] = 0xE100000000000000;
    sub_1BB872AFC((_QWORD *)0x22);
    sub_1BB872AFC(v6);
    swift_bridgeObjectRelease();
    v7 = 0xE100000000000000;
    v40 = 34;
  }
  else
  {
    v40 = 0;
    v7 = 0;
  }
  v8 = a1[3];
  v9 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v8);
  v10 = objc_msgSend(objc_msgSend(v3, sel_puzzleType), sel_nameForSharing);
  swift_unknownObjectRelease();
  v11 = sub_1BB8729A0();
  v13 = v12;

  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v42, v11, v13, v8, v9);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v14 = v43;
  v15 = v44;
  __swift_project_boxed_opaque_existential_1(v42, v43);
  (*(void (**)(uint64_t, uint64_t))(v15 + 16))(v14, v15);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  v16 = objc_msgSend(v3, sel_publishDateString);
  if (v16)
  {
    v17 = v16;
    v18 = sub_1BB8729A0();
    v20 = v19;

    v21 = a1[3];
    v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56))(v42, v18, v20, v21, v22);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v23 = v43;
    v24 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v24 + 16))(v23, v24);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  if (v7)
  {
    v25 = a1[3];
    v26 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v25);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v26 + 56))(v42, v40, v7, v25, v26);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v27 = v43;
    v28 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v28 + 16))(v27, v28);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  LOBYTE(v29) = FCPuzzleProviding.puzzleKind.getter();
  if (v41 >= 2u)
  {
    if (v41 != 2)
      return v29;
    v30 = &OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithRank;
    v31 = sub_1BB21F4B4;
  }
  else
  {
    v30 = &OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedWithTimeText;
    v31 = sub_1BB221284;
  }
  v29 = sub_1BB21F428(v30, v31);
  if (v32)
  {
    v33 = v29;
    v34 = v32;
    v35 = a1[3];
    v36 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v35);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 56))(v42, v33, v34, v35, v36);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v37 = v43;
    v38 = v44;
    __swift_project_boxed_opaque_existential_1(v42, v43);
    (*(void (**)(uint64_t, uint64_t))(v38 + 16))(v37, v38);
    LOBYTE(v29) = __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  }
  return v29;
}

uint64_t sub_1BB21FAAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  void *v17;
  id v18;
  void (*v19)(char *, char *, uint64_t);
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _UNKNOWN **v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  id v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(__int128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  id v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _UNKNOWN **v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  id v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _UNKNOWN **v61;
  uint64_t v62;
  void *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  __int128 v68[2];
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;
  _QWORD v75[3];
  uint64_t v76;
  uint64_t v77;
  _QWORD v78[3];
  uint64_t v79;
  uint64_t v80;
  _QWORD v81[3];
  uint64_t v82;
  _UNKNOWN **v83;

  sub_1BA6EF3B0();
  MEMORY[0x1E0C80A78](v1);
  v66 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v67 = (uint64_t)&v64 - v4;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v64 - v6;
  v8 = sub_1BB86C67C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v65 = (char *)&v64 - v13;
  v14 = type metadata accessor for SharingHTMLBuilder();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0xE000000000000000;
  swift_beginAccess();
  *(_QWORD *)(v15 + 16) = 0;
  *(_QWORD *)(v15 + 24) = 0xE000000000000000;
  swift_bridgeObjectRelease();
  v82 = v14;
  v83 = &off_1E7301510;
  v81[0] = v15;
  sub_1BB21F730(v81);
  v16 = objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle), sel_identifier);
  if (!v16)
  {
    sub_1BB8729A0();
    v16 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v17 = (void *)objc_opt_self();
  v18 = objc_msgSend(v17, sel_nss_NewsURLForPuzzleID_, v16);

  if (v18)
  {
    sub_1BB86C5EC();

    v19 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v19(v7, v11, v8);
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v20(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
    {
      v19(v65, v7, v8);
      v64 = v17;
      v21 = v82;
      v22 = v83;
      __swift_project_boxed_opaque_existential_1(v81, v82);
      ((void (*)(_QWORD *__return_ptr, uint64_t, _UNKNOWN **))v22[2])(v78, v21, v22);
      v23 = v79;
      v24 = v80;
      __swift_project_boxed_opaque_existential_1(v78, v79);
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v26 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      v27 = sub_1BB86C340();
      v29 = v28;

      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v75, v27, v29, v23, v24);
      swift_bridgeObjectRelease();
      v30 = v76;
      v31 = v77;
      __swift_project_boxed_opaque_existential_1(v75, v76);
      (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v31 + 16))(v72, v30, v31);
      v32 = v74;
      __swift_project_boxed_opaque_existential_1(v72, v73);
      sub_1BAAC6DFC();
      v33 = v65;
      v34 = sub_1BB87420C();
      (*(void (**)(__int128 *__return_ptr, uint64_t))(v32 + 56))(&v69, v34);
      swift_bridgeObjectRelease();
      v35 = v70;
      v36 = v71;
      __swift_project_boxed_opaque_existential_1(&v69, v70);
      v37 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v36 + 16);
      v38 = v36;
      v17 = v64;
      v37(v68, v35, v38);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
      sub_1BA4CECCC(v68, (uint64_t)v81);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
      v39 = (uint64_t)v66;
      goto LABEL_8;
    }
  }
  else
  {
    v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v20(v7, 1, 1, v8);
  }
  v39 = (uint64_t)v66;
  sub_1BA7F0A80((uint64_t)v7);
LABEL_8:
  v40 = objc_msgSend(v17, sel_nss_MarketingPageURL);
  if (v40)
  {
    v41 = v40;
    sub_1BB86C5EC();

    v42 = 0;
  }
  else
  {
    v42 = 1;
  }
  v20((char *)v39, v42, 1, v8);
  v43 = v67;
  sub_1BA7F0AD4(v39, v67);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v43, 1, v8) == 1)
  {
    sub_1BA7F0A80(v43);
  }
  else
  {
    v44 = sub_1BB86C538();
    v46 = v45;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v43, v8);
    v47 = v82;
    v48 = v83;
    __swift_project_boxed_opaque_existential_1(v81, v82);
    ((void (*)(_QWORD *__return_ptr, uint64_t, _UNKNOWN **))v48[2])(v78, v47, v48);
    v49 = v79;
    v50 = v80;
    __swift_project_boxed_opaque_existential_1(v78, v79);
    type metadata accessor for Localized();
    v51 = swift_getObjCClassFromMetadata();
    v52 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v51);
    v53 = sub_1BB86C340();
    v55 = v54;

    (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v75, v53, v55, v49, v50);
    swift_bridgeObjectRelease();
    v56 = v76;
    v57 = v77;
    __swift_project_boxed_opaque_existential_1(v75, v76);
    (*(void (**)(_QWORD *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t))(v57 + 56))(v72, 32, 0xE100000000000000, v56, v57);
    v58 = v73;
    v59 = v74;
    __swift_project_boxed_opaque_existential_1(v72, v73);
    (*(void (**)(__int128 *__return_ptr, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 48))(&v69, 0x654E20656C707041, 0xEA00000000007377, v44, v46, v58, v59);
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
    sub_1BA4CECCC(&v69, (uint64_t)v81);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
  }
  v60 = v82;
  v61 = v83;
  __swift_project_boxed_opaque_existential_1(v81, v82);
  v62 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v61[8])(v60, v61);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v81);
  return v62;
}

id SharingPuzzleTextActivityItemSource.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void SharingPuzzleTextActivityItemSource.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id SharingPuzzleTextActivityItemSource.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SharingPuzzleTextActivityItemSource.activityViewControllerPlaceholderItem(_:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1BB21ECE8();
  a1[3] = MEMORY[0x1E0DEA968];
  *a1 = result;
  a1[1] = v3;
  return result;
}

void SharingPuzzleTextActivityItemSource.activityViewController(_:itemForActivityType:)(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  id v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  id v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  void *v25;
  void *v26;
  id v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t (*v58)(uint64_t);
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _UNKNOWN **v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  id v94[3];
  uint64_t v95;
  _UNKNOWN **v96;
  uint64_t v97;

  v3 = v2;
  v97 = *MEMORY[0x1E0C80C00];
  if (!a1)
  {
    v8 = sub_1BB21ECE8();
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
    *(_QWORD *)a2 = v8;
    *(_QWORD *)(a2 + 8) = v9;
    return;
  }
  if (sub_1BB8729A0() != 0xD000000000000026 || v6 != 0x80000001BB968360)
  {
    v10 = sub_1BB874398();
    v11 = a1;
    swift_bridgeObjectRelease();
    if ((v10 & 1) != 0)
      goto LABEL_7;

    v34 = sub_1BB8729A0();
    v36 = v35;
    if (v34 == sub_1BB8729A0() && v36 == v37)
    {
      v59 = v11;
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v39 = sub_1BB874398();
      v40 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v39 & 1) == 0)
      {
        v41 = sub_1BB8729A0();
        v43 = v42;
        if (v41 == sub_1BB8729A0() && v43 == v44)
          goto LABEL_26;
        v45 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) != 0)
          goto LABEL_27;
        v46 = sub_1BB8729A0();
        v48 = v47;
        if (v46 == sub_1BB8729A0() && v48 == v49)
          goto LABEL_26;
        v50 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v50 & 1) != 0)
          goto LABEL_27;
        v51 = v40;
        v52 = (void *)sub_1BB872970();
        v53 = sub_1BB8729A0();
        v55 = v54;
        if (v53 == sub_1BB8729A0() && v55 == v56)
        {

LABEL_26:
          swift_bridgeObjectRelease_n();
          goto LABEL_27;
        }
        v63 = sub_1BB874398();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v63 & 1) != 0)
        {
LABEL_27:
          swift_getObjectType();
          FCPuzzleProviding.puzzleKind.getter();
          if (LOBYTE(v94[0]) >= 2u)
          {
            if (LOBYTE(v94[0]) != 2)
            {
              *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
LABEL_39:

              goto LABEL_31;
            }
            v57 = &OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithRankText;
            v58 = sub_1BB21EF60;
          }
          else
          {
            v57 = &OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___completeSolvedWithTimeText;
            v58 = sub_1BB221034;
          }
          v60 = sub_1BB21F428(v57, v58);
          v62 = v61;
          *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
          if (v61)
          {
LABEL_37:

LABEL_38:
            *(_QWORD *)a2 = v60;
            *(_QWORD *)(a2 + 8) = v62;
            return;
          }
          goto LABEL_39;
        }
        v64 = sub_1BB8729A0();
        v66 = v65;
        if (v64 == sub_1BB8729A0() && v66 == v67)
        {
          swift_bridgeObjectRelease_n();
LABEL_45:
          v69 = sub_1BB21ECE8();
LABEL_46:
          v60 = v69;
          v62 = v70;
          *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

          goto LABEL_38;
        }
        v68 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v68 & 1) != 0)
          goto LABEL_45;
        v71 = sub_1BB8729A0();
        v73 = v72;
        if (v71 == sub_1BB8729A0() && v73 == v74)
        {
          swift_bridgeObjectRelease_n();
LABEL_51:
          v69 = sub_1BB21FAAC();
          goto LABEL_46;
        }
        v75 = sub_1BB874398();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v75 & 1) != 0)
          goto LABEL_51;
        v40 = v51;
        v76 = (void *)sub_1BB872970();
        v77 = sub_1BB8729A0();
        v79 = v78;
        if (v77 != sub_1BB8729A0() || v79 != v80)
        {
          v81 = sub_1BB874398();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v81 & 1) != 0)
          {
LABEL_58:
            v87 = type metadata accessor for SharingPlainTextBuilder();
            v88 = (_QWORD *)swift_allocObject();
            v88[2] = 0;
            v88[3] = 0xE000000000000000;
            swift_beginAccess();
            v88[2] = 0;
            v88[3] = 0xE000000000000000;
            swift_bridgeObjectRelease();
            v95 = v87;
            v96 = &off_1E72897E0;
            v94[0] = v88;
            sub_1BB21F730(v94);
            v89 = v95;
            v90 = v96;
            __swift_project_boxed_opaque_existential_1(v94, v95);
            v60 = ((uint64_t (*)(uint64_t, _UNKNOWN **))v90[8])(v89, v90);
            v62 = v91;
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v94);
            *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];
            goto LABEL_37;
          }
          v82 = v40;
          v76 = (void *)sub_1BB872970();
          v83 = sub_1BB8729A0();
          v85 = v84;
          if (v83 != sub_1BB8729A0() || v85 != v86)
          {
            v92 = sub_1BB874398();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v92 & 1) == 0)
            {
              v60 = sub_1BB21ECE8();
              v62 = v93;
              *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

              goto LABEL_38;
            }
            goto LABEL_58;
          }
        }

        swift_bridgeObjectRelease_n();
        goto LABEL_58;
      }
    }
    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0DEA968];

LABEL_31:
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = 0xE000000000000000;
    return;
  }
  v7 = a1;
  swift_bridgeObjectRelease();
LABEL_7:
  v12 = (void *)sub_1BB8727B4();
  v13 = *(void **)(v3 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle);
  v14 = objc_msgSend(v13, sel_title);
  if (v14)
  {
    v15 = v14;
    v16 = sub_1BB8729A0();
    v18 = v17;

    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v94[0] = v12;
    sub_1BB4BDCEC(v16, v18, 0x742D656C7A7A7570, 0xEC000000656C7469, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v20 = objc_msgSend(objc_msgSend(v13, sel_puzzleType), sel_nameForSharing);
  swift_unknownObjectRelease();
  v21 = sub_1BB8729A0();
  v23 = v22;

  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1BB4BDCEC(v21, v23, 0xD000000000000010, 0x80000001BB980330, v24);
  swift_bridgeObjectRelease();
  v25 = (void *)objc_opt_self();
  v26 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v94[0] = 0;
  v27 = objc_msgSend(v25, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v26, 1, v94);

  v28 = v94[0];
  if (v27)
  {
    v29 = sub_1BB86C6E8();
    v31 = v30;

    *(_QWORD *)(a2 + 24) = MEMORY[0x1E0CB0338];
    *(_QWORD *)a2 = v29;
    *(_QWORD *)(a2 + 8) = v31;
  }
  else
  {
    v32 = v28;
    v33 = (void *)sub_1BB86C484();

    swift_willThrow();
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
}

Swift::String __swiftcall SharingPuzzleTextActivityItemSource.activityViewController(_:dataTypeIdentifierForActivityType:)(UIActivityViewController *_, UIActivityType_optional dataTypeIdentifierForActivityType)
{
  unint64_t v3;
  uint64_t v4;
  NSString *v5;
  unint64_t v6;
  char v7;
  NSString *v8;
  uint64_t v9;
  void *v10;
  Swift::String result;

  if (dataTypeIdentifierForActivityType.value)
  {
    v3 = 0xD00000000000001DLL;
    if (sub_1BB8729A0() == 0xD000000000000026 && v4 == 0x80000001BB968360)
    {
      v5 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      v6 = 0x80000001BB968390;
    }
    else
    {
      v7 = sub_1BB874398();
      v8 = dataTypeIdentifierForActivityType.value;
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
      {
        v6 = 0x80000001BB968390;
      }
      else
      {
        v3 = 0;
        v6 = 0xE000000000000000;
      }
    }

  }
  else
  {
    v3 = 0;
    v6 = 0xE000000000000000;
  }
  v9 = v3;
  v10 = (void *)v6;
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

Swift::String __swiftcall SharingPuzzleTextActivityItemSource.activityViewController(_:subjectForActivityType:)(UIActivityViewController *_, UIActivityType_optional subjectForActivityType)
{
  uint64_t v2;
  void *v3;
  Swift::String result;

  v2 = sub_1BB21F428(&OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource____lazy_storage___solvedPuzzleTypeText, sub_1BB21F24C);
  if (!v3)
    v2 = sub_1BB21ECE8();
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t type metadata accessor for SharingPuzzleTextActivityItemSource()
{
  return objc_opt_self();
}

uint64_t method lookup function for SharingPuzzleTextActivityItemSource()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SharingPuzzleTextActivityItemSource.__allocating_init(puzzle:puzzleRankProvider:shareData:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1BB221034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t ObjCClassFromMetadata;
  id v10;
  uint64_t v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v1 = a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 24) == 1
    || (*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    return 0;
  }
  v3 = *(_QWORD *)v1;
  if (qword_1EF2A70D8 != -1)
    swift_once();
  v4 = objc_msgSend((id)qword_1EF3D0730, sel_stringFromTimeInterval_, (double)v3);
  if (!v4)
    return 0;
  v5 = v4;
  v6 = sub_1BB8729A0();
  v8 = v7;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v10 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
  v12 = objc_msgSend(objc_msgSend(*(id *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_puzzle), sel_puzzleType, 0x80000001BB980530), sel_nameForSharing);
  swift_unknownObjectRelease();
  v13 = sub_1BB8729A0();
  v15 = v14;

  v16 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 56) = MEMORY[0x1E0DEA968];
  v17 = sub_1BA6A2D8C();
  *(_QWORD *)(v11 + 32) = v13;
  *(_QWORD *)(v11 + 40) = v15;
  *(_QWORD *)(v11 + 96) = v16;
  *(_QWORD *)(v11 + 104) = v17;
  *(_QWORD *)(v11 + 64) = v17;
  *(_QWORD *)(v11 + 72) = v6;
  *(_QWORD *)(v11 + 80) = v8;
  v18 = sub_1BB87297C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1BB221284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  id v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t ObjCClassFromMetadata;
  id v9;
  uint64_t v10;
  uint64_t v11;

  v1 = a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData;
  if (*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed35SharingPuzzleTextActivityItemSource_shareData + 24) == 1
    || (*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    return 0;
  }
  v2 = *(_QWORD *)v1;
  if (qword_1EF2A70D8 != -1)
    swift_once();
  v3 = objc_msgSend((id)qword_1EF3D0730, sel_stringFromTimeInterval_, (double)v2);
  if (!v3)
    return 0;
  v4 = v3;
  v5 = sub_1BB8729A0();
  v7 = v6;

  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v9 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v10 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v10 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v10 + 32) = v5;
  *(_QWORD *)(v10 + 40) = v7;
  v11 = sub_1BB87297C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t FeedGroupTag.init(tag:subscription:subscriptionPaidAccess:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v4;

  v4 = *a3;
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_BYTE *)(a4 + 16) = v4;
  return result;
}

uint64_t FeedGroupTag.tag.getter()
{
  return swift_unknownObjectRetain();
}

void *FeedGroupTag.subscription.getter()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 8);
  v2 = v1;
  return v1;
}

void FeedGroupTag.subscriptionPaidAccess.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 16);
}

uint64_t FeedGroupTag.groupItem.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  v5 = v3;
  return swift_unknownObjectRetain();
}

uint64_t sub_1BB221500@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  void *v3;
  char v4;
  id v5;

  v3 = *(void **)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  type metadata accessor for FeedGroupItem();
  swift_storeEnumTagMultiPayload();
  v5 = v3;
  return swift_unknownObjectRetain();
}

uint64_t assignWithCopy for FeedGroupTag(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a2 + 8);
  *(_QWORD *)(a1 + 8) = v5;
  v6 = v5;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for FeedGroupTag(uint64_t a1, uint64_t a2)
{
  void *v4;

  swift_unknownObjectRelease();
  v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a1;
}

ValueMetadata *type metadata accessor for FeedGroupTag()
{
  return &type metadata for FeedGroupTag;
}

uint64_t sub_1BB221608()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1BB221648(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[2];
  _BYTE v23[16];
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = *(_QWORD *)(a1 - 8);
  v3 = *(_QWORD *)(v2 + 64);
  MEMORY[0x1E0C80A78](a1);
  v26 = sub_1BB221898(v4, v5, v6, v7);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v24 = v8;
  v25 = v9;
  type metadata accessor for FeedDatabaseGroup(255, v8, v9, v10);
  v11 = sub_1BB872EE0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v12 = sub_1BB86EAAC();
  v13 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v11);
  sub_1BAA52384((void (*)(char *, char *))sub_1BB224594, (uint64_t)v23, v11, v12, MEMORY[0x1E0DEDCE8], v13, MEMORY[0x1E0DEDD18], v14);
  swift_bridgeObjectRelease();
  v15 = (void *)sub_1BB86E854();
  sub_1BB86ECBC();
  swift_bridgeObjectRelease();

  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 16))((char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v22[1], a1);
  v16 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v8;
  *(_QWORD *)(v17 + 24) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v17 + v16, (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v18 = (_QWORD *)swift_allocObject();
  v18[2] = v8;
  v18[3] = v9;
  v18[4] = sub_1BB224780;
  v18[5] = v17;
  v19 = (void *)sub_1BB86E854();
  sub_1BB872EE0();
  v20 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1BB221898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FeedDatabaseGroup(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  sub_1BB872E5C();
  v4 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v4);
  v5 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB221968(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedTypeWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v18[6];

  v7 = type metadata accessor for RepoolFeedData(0, a4, a5, a4);
  v18[5] = sub_1BB221ABC(v7, v8, v9, v10);
  v18[2] = a4;
  v18[3] = a5;
  type metadata accessor for FeedCursorGroup(255, a4, a5, v11);
  v12 = sub_1BB872EE0();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v14 = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v12);
  sub_1BAA52384((void (*)(char *, char *))sub_1BB22484C, (uint64_t)v18, v12, AssociatedTypeWitness, MEMORY[0x1E0DEDCE8], v14, MEMORY[0x1E0DEDD18], v15);
  swift_bridgeObjectRelease();
  v16 = sub_1BB872E5C();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB221ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for FeedCursorGroup(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  sub_1BB872E5C();
  v4 = sub_1BB872EE0();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v4);
  v5 = sub_1BB872BC8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1BB221B8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t AssociatedTypeWitness;

  v6 = a1 + *(int *)(type metadata accessor for FeedCursorGroup(0, a2, a3, a4) + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a5, v6, AssociatedTypeWitness);
}

int *sub_1BB221C60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  int *result;

  v16 = type metadata accessor for FeedCursorTrackerSnapshot(0, a6, a7, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(a8, a1, v16);
  result = (int *)type metadata accessor for RepoolFeedData(0, a6, a7, v17);
  *(_QWORD *)(a8 + result[9]) = a2;
  *(_QWORD *)(a8 + result[10]) = a3;
  *(_QWORD *)(a8 + result[11]) = a4;
  *(_QWORD *)(a8 + result[12]) = a5;
  return result;
}

uint64_t sub_1BB221D08(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  unint64_t v12;
  char *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = v2;
  v19 = a2;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_QWORD *)(v5 + 64);
  MEMORY[0x1E0C80A78](a1);
  v20 = v2;
  v21 = v7;
  v9 = *(_QWORD *)(v8 + 88);
  type metadata accessor for FeedCursor(0, v4, v9, v10);
  sub_1BB86EC14();
  swift_retain();
  v11 = (void *)sub_1BB86E854();
  v18 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19, v4);
  v12 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v13 = (char *)swift_allocObject();
  *((_QWORD *)v13 + 2) = v4;
  *((_QWORD *)v13 + 3) = v9;
  *((_QWORD *)v13 + 4) = v3;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v13[v12], (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  v14 = (void *)sub_1BB86E854();
  type metadata accessor for FeedCursorResult(0, v4, v9, v15);
  v16 = sub_1BB86E968();
  swift_release();
  swift_release();

  return v16;
}

void sub_1BB221EA8(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB221EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  type metadata accessor for FeedCursor(255, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), a4);
  sub_1BB86EAAC();
  swift_retain();
  return sub_1BB86E9D4();
}

uint64_t sub_1BB222438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  char *v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;

  v4 = v3;
  v39 = a2;
  v8 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  v50 = *(_QWORD *)(v8 - 8);
  v43 = *(_QWORD *)(v50 + 64);
  MEMORY[0x1E0C80A78](a1);
  v49 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v10 + 88);
  v41 = type metadata accessor for RepoolFeedData(0, v8, v11, v12);
  v47 = *(_QWORD *)(v41 - 8);
  v13 = *(_QWORD *)(v47 + 64);
  MEMORY[0x1E0C80A78](v41);
  v48 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v37 - v15;
  v18 = type metadata accessor for FeedCursorTrackerSnapshot(0, v8, v11, v17);
  v45 = *(_QWORD *)(v18 - 8);
  v46 = v18;
  MEMORY[0x1E0C80A78](v18);
  v38 = a1;
  v20 = (char *)&v37 - v19;
  v44 = (char *)&v37 - v19;
  FeedCursorTracker.snapshot()((uint64_t)&v37 - v19);
  sub_1BB22272C(a2, (uint64_t)v20, v21, (uint64_t)v16);
  v51 = v3;
  v52 = v16;
  v42 = v16;
  v53 = a1;
  v54 = a3;
  v22 = v11;
  type metadata accessor for FeedCursor(255, v8, v11, v23);
  sub_1BB873A2C();
  v40 = sub_1BB86EC14();
  v24 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v49, a3, v8);
  v25 = v47;
  v26 = v41;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v48, v16, v41);
  v27 = (*(unsigned __int8 *)(v24 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  v28 = (v43 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  v30 = (*(unsigned __int8 *)(v25 + 80) + v29 + 8) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  v31 = (char *)swift_allocObject();
  *((_QWORD *)v31 + 2) = v8;
  *((_QWORD *)v31 + 3) = v22;
  *((_QWORD *)v31 + 4) = v4;
  (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v31[v27], v49, v8);
  *(_QWORD *)&v31[v28] = v38;
  *(_QWORD *)&v31[v29] = v39;
  v32 = v47;
  (*(void (**)(char *, char *, uint64_t))(v47 + 32))(&v31[v30], v48, v26);
  swift_retain();
  swift_retain();
  swift_retain();
  v33 = (void *)sub_1BB86E854();
  type metadata accessor for FeedCursorResult(0, v8, v22, v34);
  v35 = sub_1BB86E974();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v46);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v42, v26);
  return v35;
}

int *sub_1BB22272C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t AssociatedConformanceWitness;
  uint64_t v24;
  char v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  Swift::String v29;
  Swift::Bool v30;
  int *result;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  Swift::String v41;
  Swift::Bool v42;
  uint64_t v43;
  _QWORD v44[2];
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void (*v50)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v51;
  uint64_t AssociatedTypeWitness;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v56 = a2;
  v47 = a4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v55 = type metadata accessor for FeedCursorTrackerSnapshot(0, v6, v7, a3);
  v45 = *(_QWORD *)(v55 - 8);
  MEMORY[0x1E0C80A78](v55);
  v46 = (char *)v44 - v8;
  v10 = type metadata accessor for FeedCursorGroup(0, v6, v7, v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v53 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v44 - v14;
  v44[0] = v16;
  MEMORY[0x1E0C80A78](v17);
  v54 = (char *)v44 - v18;
  v62 = sub_1BB872748();
  v61 = sub_1BB872748();
  v20 = type metadata accessor for FeedDatabaseGroup(0, v6, v7, v19);
  v60 = sub_1BB872748();
  v59 = sub_1BB872748();
  v21 = sub_1BA632490();
  v22 = MEMORY[0x1BCCE37E4](v21, v10);
  v48 = v7;
  v49 = v6;
  if (v22)
  {
    v44[1] = a1;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v24 = 0;
    v50 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(AssociatedConformanceWitness + 88);
    v51 = AssociatedConformanceWitness;
    do
    {
      v25 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v25 & 1) != 0)
      {
        v26 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
        v26(v54, v21+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v24, v10);
        v27 = v24 + 1;
        if (__OFADD__(v24, 1))
          goto LABEL_14;
      }
      else
      {
        result = (int *)sub_1BB873D08();
        if (v44[0] != 8)
          goto LABEL_32;
        v58 = (uint64_t)result;
        v26 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
        v26(v54, (unint64_t)&v58, v10);
        swift_unknownObjectRelease();
        v27 = v24 + 1;
        if (__OFADD__(v24, 1))
        {
LABEL_14:
          __break(1u);
          break;
        }
      }
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v54, v10);
      v28 = swift_checkMetadataState();
      v50(&v58, v28, v51);
      if (v58 != 3 && (v58 & 1) != 0)
      {
        v26(v53, (unint64_t)v15, v10);
        sub_1BB872EE0();
        sub_1BB872EB0();
      }
      v29._countAndFlagsBits = FeedCursorGroup.identifier.getter();
      v30 = FeedCursorTrackerSnapshot.contains(identifier:)(v29);
      swift_bridgeObjectRelease();
      if (!v30)
      {
        v26(v53, (unint64_t)v15, v10);
        sub_1BB872EE0();
        sub_1BB872EB0();
      }
      (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v10);
      ++v24;
    }
    while (v27 != MEMORY[0x1BCCE37E4](v21, v10));
  }
  swift_bridgeObjectRelease();
  v32 = sub_1BA6325EC();
  v33 = MEMORY[0x1BCCE37E4](v32, v20);
  v35 = v48;
  v34 = v49;
  if (v33)
  {
    v36 = 4;
    while (1)
    {
      v37 = v36 - 4;
      v38 = sub_1BB872E80();
      sub_1BB872E38();
      if ((v38 & 1) != 0)
      {
        v39 = *(_QWORD *)(v32 + 8 * v36);
        swift_retain();
        v40 = v36 - 3;
        if (__OFADD__(v37, 1))
          goto LABEL_29;
      }
      else
      {
        v39 = sub_1BB873D08();
        v40 = v36 - 3;
        if (__OFADD__(v37, 1))
        {
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
      }
      sub_1BB86F064();
      sub_1BB86F22C();
      result = (int *)swift_release();
      if (!v58)
        break;
      sub_1BB86F340();
      swift_release();
      sub_1BB86F100();
      swift_release();
      if (v57 != 3 && (v57 & 1) != 0)
      {
        v58 = v39;
        sub_1BB872EE0();
        swift_retain();
        sub_1BB872EB0();
      }
      v41._countAndFlagsBits = FeedDatabaseGroup.identifier.getter();
      v42 = FeedCursorTrackerSnapshot.contains(identifier:)(v41);
      swift_bridgeObjectRelease();
      if (v42)
      {
        swift_release();
      }
      else
      {
        v58 = v39;
        sub_1BB872EE0();
        sub_1BB872EB0();
      }
      ++v36;
      if (v40 == MEMORY[0x1BCCE37E4](v32, v20))
        goto LABEL_30;
    }
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
LABEL_30:
    swift_bridgeObjectRelease();
    v43 = (uint64_t)v46;
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v46, v56, v55);
    return sub_1BB221C60(v43, v62, v60, v61, v59, v34, v35, v47);
  }
  return result;
}

uint64_t sub_1BB222CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  void *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  _QWORD v22[8];

  v4 = v3;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](a1);
  v22[4] = v4;
  v22[5] = v10;
  v22[6] = v11;
  v13 = *(_QWORD *)(v12 + 88);
  type metadata accessor for FeedCursor(255, v7, v13, v14);
  v22[1] = sub_1BB873A2C();
  sub_1BB86EC14();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v7);
  v15 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v16 = (char *)swift_allocObject();
  *((_QWORD *)v16 + 2) = v7;
  *((_QWORD *)v16 + 3) = v13;
  *((_QWORD *)v16 + 4) = v4;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(_QWORD *)&v16[(v9 + v15 + 7) & 0xFFFFFFFFFFFFFFF8] = a2;
  swift_retain();
  swift_retain();
  v17 = (void *)sub_1BB86E854();
  sub_1BB86E974();
  swift_release();
  swift_release();

  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v7;
  *(_QWORD *)(v18 + 24) = v13;
  v19 = (void *)sub_1BB86E854();
  v20 = sub_1BB86EA1C();
  swift_release();
  swift_release();

  return v20;
}

uint64_t sub_1BB222E84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;

  v20 = a6;
  v8 = *a2;
  v9 = *a1;
  v10 = a2[2];
  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a2[3];
  v12 = *(_QWORD *)(a4 + *(_QWORD *)(*(_QWORD *)a4 + 272));
  v13 = a2[4];
  v19 = a5;
  v17 = v9;
  sub_1BA99A5F0(a3, v12, (uint64_t)sub_1BB2243C8, (uint64_t)v18, (uint64_t)sub_1BB2243D0, (uint64_t)v16, v10, v11, v13, *(_QWORD *)(v8 + 80), *(_QWORD *)(v8 + 88));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v14 = sub_1BB872E68();
  return sub_1BA62EDB8(v14, a7);
}

uint64_t sub_1BB222FA4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v20[2];

  v20[0] = a3;
  v6 = *a1;
  v7 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v8 = *(_QWORD *)(*(_QWORD *)a2 + 88);
  v9 = type metadata accessor for RepoolFeedData(0, v7, v8, a4);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)v20 - v11;
  v20[1] = *(_QWORD *)(v6 + *MEMORY[0x1E0DB4D18]);
  sub_1BB86EAAC();
  v13 = *(_QWORD *)(a2 + qword_1ED4767F8);
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  static Promise<A>.+ infix(_:_:)((uint64_t)a1, v13, AssociatedConformanceWitness);
  (*(void (**)(char *, _QWORD, uint64_t))(v10 + 16))(v12, v20[0], v9);
  v15 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = v7;
  *(_QWORD *)(v16 + 24) = v8;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v16 + v15, v12, v9);
  v17 = (void *)sub_1BB86E854();
  v18 = sub_1BB86E968();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1BB223134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v18;

  swift_getAssociatedTypeWitness();
  v7 = sub_1BB873A2C();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v18 - v9;
  v12 = type metadata accessor for RepoolFeedData(0, a3, a4, v11);
  sub_1BB221648(v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a3;
  *(_QWORD *)(v14 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v14 + v13, v10, v7);
  v15 = (void *)sub_1BB86E854();
  v16 = sub_1BB86E974();
  swift_release();
  swift_release();

  return v16;
}

uint64_t sub_1BB223280()
{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v0 = sub_1BB872EE0();
  sub_1BB873A2C();
  MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v0);
  return sub_1BB872C4C();
}

uint64_t sub_1BB223390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;

  v17 = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v6 = sub_1BB873A2C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v7 + 16))((char *)&v16 - v9, a1, v6, v8);
  v11 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v12 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, AssociatedTypeWitness) == 1)
  {
    v13 = a3;
  }
  else
  {
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    v13 = a3;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v17, AssociatedTypeWitness, AssociatedConformanceWitness);
    v12 = 0;
    v7 = v11;
    v6 = AssociatedTypeWitness;
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v13, v12, 1, AssociatedTypeWitness);
}

uint64_t *sub_1BB2234F8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v17;
  uint64_t v19[2];
  uint64_t v20;
  __int16 v21;
  uint64_t v22[3];
  _QWORD v23[3];
  _OWORD v24[5];
  unsigned __int8 v25[9];

  v19[0] = a2;
  v19[1] = (uint64_t)a1;
  v2 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v19 - v7;
  v9 = *(_QWORD *)(v2 + 80);
  v10 = sub_1BB873A2C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v19 - v13;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v9 - 8) + 56))((char *)v19 - v13, 1, 1, v9, v12);
  v25[0] = 5;
  v15 = sub_1BB86C8B0();
  v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56);
  v16(v8, 1, 1, v15);
  v16(v5, 1, 1, v15);
  memset(v24, 0, sizeof(v24));
  FeedJournal.init(entries:)(MEMORY[0x1E0DEE9D8], v23);
  v22[0] = v23[0];
  v22[1] = v23[1];
  v22[2] = v23[2];
  v20 = 0;
  v21 = 256;
  v17 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v14, 0, v25, (uint64_t)v8, (uint64_t)v5, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v24,
          v22,
          (uint64_t)&v20,
          0,
          0,
          v19[0]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA76D750((uint64_t)v5);
  sub_1BA76D750((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v17;
}

uint64_t sub_1BB223740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  _QWORD v25[4];

  v5 = v4;
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  v8 = *(_QWORD *)(*(_QWORD *)v4 + 88);
  v9 = type metadata accessor for RepoolFeedData(0, *(_QWORD *)(*(_QWORD *)v5 + 80), *(_QWORD *)(*(_QWORD *)v5 + 88), a4);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_QWORD *)(v10 + 64);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v25 - v12;
  v14 = sub_1BB639298(a1);
  if (v14)
  {
    v16 = v14;
    type metadata accessor for FeedCursor(0, v7, v8, v15);
    v25[1] = sub_1BB86EC14();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, v9);
    v17 = *(unsigned __int8 *)(v10 + 80);
    v25[2] = v16;
    v18 = (v17 + 32) & ~v17;
    v19 = swift_allocObject();
    *(_QWORD *)(v19 + 16) = v7;
    *(_QWORD *)(v19 + 24) = v8;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v19 + v18, v13, v9);
    *(_QWORD *)(v19 + ((v11 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v5;
    swift_retain();
    v20 = (void *)sub_1BB86E854();
    sub_1BB873A2C();
    sub_1BB86E968();
    swift_release();
    swift_release();

    v21 = swift_allocObject();
    *(_QWORD *)(v21 + 16) = v7;
    *(_QWORD *)(v21 + 24) = v8;
    v22 = (void *)sub_1BB86E854();
    v23 = sub_1BB86EA10();
    swift_release();
    swift_release();
    swift_release();

  }
  else
  {
    type metadata accessor for FeedCursor(255, v7, v8, v15);
    sub_1BB873A2C();
    sub_1BB86EAAC();
    v25[3] = 0;
    return sub_1BB86E9D4();
  }
  return v23;
}

void sub_1BB223960(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[4];
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;

  v34 = a3;
  v35 = a4;
  v36 = a5;
  v7 = *(_QWORD *)(*a2 + 80);
  v8 = *(_QWORD *)(*a2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v10 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v29 - v14;
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *a1;
  if (*a1)
  {
    v21 = a2[2];
    v31 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))a2[3];
    v32 = v21;
    v29 = a2[4];
    v30 = v20;
    v22 = *(void (**)(uint64_t, uint64_t))(v8 + 64);
    v33 = v17;
    swift_retain();
    v22(v7, v8);
    AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    FeedContentConfigType.seenContentMarker()(AssociatedTypeWitness, AssociatedConformanceWitness, (uint64_t)v15);
    v24 = *(void (**)(char *, uint64_t))(v10 + 8);
    v24(v12, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 160))(v15, v7, v8);
    v25 = ((uint64_t (*)(char *, uint64_t))v24)(v15, AssociatedTypeWitness);
    MEMORY[0x1E0C80A78](v25);
    v28[3] = v8;
    v27 = sub_1BA99A5F0((uint64_t)v19, v26, (uint64_t)sub_1BB224974, (uint64_t)v28, (uint64_t)sub_1BB22497C, v30, v32, v31, v29, v7, v8);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v7);
    swift_release();
  }
  else
  {
    v27 = 0;
  }
  *v36 = v27;
}

uint64_t sub_1BB223BA8(uint64_t a1)
{
  double v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v1 = MEMORY[0x1E0C80A78](a1);
  (*(void (**)(char *, uint64_t, uint64_t, double))(*(_QWORD *)(*(_QWORD *)(v2 + 16) - 8) + 56))((char *)&v5 - v3, 1, 1, v1);
  return sub_1BB86E9D4();
}

uint64_t *sub_1BB223C24(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  double v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  __int16 v24;
  __int128 v25;
  uint64_t v26;
  _OWORD v27[5];
  unsigned __int8 v28[9];

  v22 = a1;
  v1 = *a1;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0540, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v20 - v6;
  v8 = *(_QWORD *)(v1 + 80);
  v21 = sub_1BB873A2C();
  v9 = *(_QWORD *)(v21 - 8);
  v10 = MEMORY[0x1E0C80A78](v21);
  v12 = (char *)&v20 - v11;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(*(_QWORD *)(v8 - 8) + 56))((char *)&v20 - v11, 1, 1, v8, v10);
  v28[0] = 1;
  v13 = sub_1BB86C8B0();
  v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56);
  v14(v7, 1, 1, v13);
  v14(v4, 1, 1, v13);
  memset(v27, 0, sizeof(v27));
  v26 = 0;
  v25 = 0u;
  v23 = 0;
  v24 = 256;
  type metadata accessor for FeedNextCursor(0, v8, *(_QWORD *)(v1 + 88), v15);
  v16 = swift_retain();
  v17 = sub_1BB63925C(v16);
  v18 = FeedCursor.with(identifier:serviceConfig:serviceState:kind:publishDate:createdDate:openEmitters:slottedEmitters:stagedEmitters:expandEmitters:emittedGroups:databaseGroups:skippedSlotCount:slotOffset:slotAdjustment:emitterCursors:feedPool:feedContext:feedJournal:cachePolicy:tracker:sidecars:nextCursor:)(0, 0, (uint64_t)v12, 0, v28, (uint64_t)v7, (uint64_t)v4, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1,
          0,
          0,
          (uint64_t)v27,
          (uint64_t *)&v25,
          (uint64_t)&v23,
          0,
          0,
          v17);
  swift_release();
  sub_1BA76D750((uint64_t)v4);
  sub_1BA76D750((uint64_t)v7);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v21);
  return v18;
}

uint64_t sub_1BB223E60(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v4 = *a3;
  v5 = *a1;
  v6 = sub_1BB639298(a2);
  sub_1BB63997C();
  if (v6
    && ((v7 = *(_QWORD *)(v5 + 16), v8 = *(_QWORD *)(v5 + 24), v7 == sub_1BB63B804()) ? (v11 = v8 == v9) : (v11 = 0),
        v11 || (sub_1BB874398() & 1) != 0))
  {
    type metadata accessor for FeedCursor(255, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), v10);
    sub_1BB873A2C();
    sub_1BB86EAAC();
    swift_retain();
    v12 = sub_1BB86E9D4();
  }
  else
  {
    v12 = sub_1BB223740(a2, v5);
  }
  v13 = v12;
  swift_release();
  return v13;
}

uint64_t sub_1BB223F5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for FeedCursor(255, a2, a3, a4);
  sub_1BB873A2C();
  sub_1BB86EAAC();
  return sub_1BB86E9D4();
}

uint64_t type metadata accessor for RepoolFeedRefreshStrategy(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepoolFeedRefreshStrategy);
}

void sub_1BB223FC0()
{
  uint64_t v0;

  sub_1BB221EA8(*(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB223FE4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_retain();
}

uint64_t sub_1BB224000()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1BB22406C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 16) - 8) + 80);
  v6 = v4 + ((v5 + 40) & ~v5);
  v7 = *a1;
  v8 = FeedCursor.rootCursor.getter((uint64_t)a1, a2, a3, a4);
  v9 = sub_1BB222438((uint64_t)v8, v7, v6);
  swift_release();
  return v9;
}

uint64_t type metadata accessor for RepoolFeedData(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RepoolFeedData);
}

uint64_t sub_1BB2240F0()
{
  uint64_t *v0;

  return sub_1BB222CC4(v0[3], v0[4], v0[5]);
}

uint64_t sub_1BB224120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t AssociatedTypeWitness;
  uint64_t v13;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (((*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(_QWORD *)(type metadata accessor for RepoolFeedData(0, v5, v6, a4) - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + v9 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v4 + v8, v5);
  swift_release();
  swift_release();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v4 + v11, AssociatedTypeWitness);
  type metadata accessor for FeedCursorTrackerSnapshot(0, v5, v6, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB224328@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v9 = (*(_QWORD *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RepoolFeedData(0, v6, *(_QWORD *)(v3 + 24), a2) - 8)
                           + 80);
  return sub_1BB222E84(a1, *(uint64_t **)(v3 + 32), v3 + v8, *(_QWORD *)(v3 + v9), *(_QWORD *)(v3 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), v3 + ((v10 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10), a3);
}

uint64_t sub_1BB2243C8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB222FA4(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t *sub_1BB2243D0(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB2234F8(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB2243DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v4 + 24);
  v8 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RepoolFeedData(0, v6, v7, a4) - 8) + 80);
  return sub_1BB223134(a1, v4 + ((v8 + 32) & ~v8), v6, v7);
}

uint64_t sub_1BB224440()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1BB873A2C() - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v3, 1, AssociatedTypeWitness))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0 + v3, AssociatedTypeWitness);
  return swift_deallocObject();
}

uint64_t sub_1BB2244EC()
{
  swift_getAssociatedTypeWitness();
  sub_1BB873A2C();
  return sub_1BB223280();
}

uint64_t sub_1BB22457C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1BB223390(a1, a2, a3);
}

uint64_t sub_1BB224594@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BA498804();
  *a1 = result;
  return result;
}

uint64_t objectdestroy_5Tm_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(_QWORD *)(type metadata accessor for RepoolFeedData(0, v5, v6, a4) - 8);
  v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v8, AssociatedTypeWitness);
  type metadata accessor for FeedCursorTrackerSnapshot(0, v5, v6, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB224780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *(_QWORD *)(v4 + 16);
  v8 = *(_QWORD *)(v4 + 24);
  v9 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RepoolFeedData(0, v7, v8, a4) - 8) + 80);
  return sub_1BB221968(a1, a2, v4 + ((v9 + 32) & ~v9), v7, v8);
}

uint64_t sub_1BB2247E8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB22480C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = (*(uint64_t (**)(_QWORD, _QWORD))(v2 + 32))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1BB22484C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BB221B8C(a1, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), a2, a3);
}

uint64_t sub_1BB224868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB223740(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32), a3, a4);
}

uint64_t sub_1BB224898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1BB224920(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)(v2 + 16) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  sub_1BB223960(a1, *(_QWORD **)(v2 + 32), v2 + v4, *(_QWORD *)(v2 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_1BB224964()
{
  return swift_deallocObject();
}

uint64_t sub_1BB224974(uint64_t a1)
{
  return sub_1BB223BA8(a1);
}

uint64_t *sub_1BB22497C(_QWORD *a1)
{
  return sub_1BB223C24(a1);
}

uint64_t sub_1BB224984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;

  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_QWORD *)(v4 + 24);
  v7 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for RepoolFeedData(0, v5, v6, a4) - 8) + 80);
  v8 = v4 + ((v7 + 32) & ~v7);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v8, AssociatedTypeWitness);
  type metadata accessor for FeedCursorTrackerSnapshot(0, v5, v6, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB224B44(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  unint64_t v7;

  v6 = *(_QWORD *)(type metadata accessor for RepoolFeedData(0, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4) - 8);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return sub_1BB223E60(a1, v4 + v7, *(uint64_t **)(v4 + ((*(_QWORD *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB224BA4()
{
  return swift_deallocObject();
}

uint64_t sub_1BB224BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB223F5C(a1, *(_QWORD *)(v4 + 16), *(_QWORD *)(v4 + 24), a4);
}

uint64_t sub_1BB224BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB638188(a1, a2, a3, a4);
}

uint64_t sub_1BB224BF0(_QWORD *a1)
{
  return sub_1BB221EA8(*a1);
}

uint64_t sub_1BB224C08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  unint64_t v5;

  result = type metadata accessor for FeedCursorTrackerSnapshot(319, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1BB224C88(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x1000F8) != 0
    || (v7 = *(_QWORD *)(v5 + 64),
        v8 = (((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8,
        ((((((((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8 > 0x18))
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    v9 = v8 + 8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v10 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    v11 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFF8);
    *v10 = *v11;
    v12 = (_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)v11 + 15) & 0xFFFFFFFFFFFFF8);
    *v12 = *v13;
    *(_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFF8);
    v15 = (_QWORD *)(((unint64_t)a2 + v9 + 7) & 0xFFFFFFFFFFFFF8);
    *v14 = *v15;
    v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
    v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
    *v16 = *v17;
    v18 = (_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
    *v18 = *v19;
    *(_QWORD *)(((unint64_t)v18 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB224ECC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB225034(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = (_QWORD *)((a1 + v11 + 7) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB225214(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = a1 + v11 + 7;
  v13 = a2 + v11 + 7;
  v14 = (v13 & 0xFFFFFFFFFFFFF8) + 15;
  *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(v13 & 0xFFFFFFFFFFFFF8);
  v15 = (v12 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 &= 0xFFFFFFFFFFFFFFF8;
  v14 &= 0xFFFFFFFFFFFFF8uLL;
  *(_QWORD *)v15 = *(_QWORD *)v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)((v15 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)((v14 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB225428(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = (_QWORD *)((a1 + v11 + 7) & 0xFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v12 = *v13;
  v14 = (_QWORD *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  *v14 = *v15;
  v16 = (_QWORD *)(((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1BB2255CC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _QWORD *v17;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)(((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_QWORD *)(((unint64_t)v8 + 15) & 0xFFFFFFFFFFFFF8);
  *v9 = *v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v9 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  v11 = (((((v6 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  v12 = a1 + v11 + 7;
  v13 = (_QWORD *)((a2 + v11 + 7) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)(v12 & 0xFFFFFFFFFFFFFFF8) = *v13;
  v14 = (v12 & 0xFFFFFFFFFFFFFFF8) + 15;
  swift_bridgeObjectRelease();
  v14 &= 0xFFFFFFFFFFFFFFF8;
  v15 = (_QWORD *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFF8);
  *(_QWORD *)v14 = *v15;
  swift_bridgeObjectRelease();
  v16 = (_QWORD *)((v14 + 15) & 0xFFFFFFFFFFFFFFF8);
  v17 = (_QWORD *)(((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFF8);
  *v16 = *v17;
  swift_bridgeObjectRelease();
  *(_QWORD *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB2257A8(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  unint64_t v12;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v4 + 84);
  if (!a2)
    return 0;
  v7 = *(_QWORD *)(v4 + 64);
  if (v6 < a2)
  {
    if (((((((((((((((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v8 = 2;
    else
      v8 = a2 - v6 + 1;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    __asm { BR              X15 }
  }
  if (v5 >= 0x7FFFFFFF)
    return (*(uint64_t (**)(uint64_t))(v4 + 48))(a1);
  v12 = *(_QWORD *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFF8);
  if (v12 >= 0xFFFFFFFF)
    LODWORD(v12) = -1;
  return (v12 + 1);
}

void sub_1BB2259CC(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v6 + 84) <= 0x7FFFFFFFu)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 >= a3)
  {
    v10 = 0u;
    if (a2 <= v7)
      goto LABEL_17;
  }
  else
  {
    if (((((((((((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
             + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v8 = a3 - v7 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
    if (a2 <= v7)
LABEL_17:
      __asm { BR              X12 }
  }
  if (((((((((((((((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
           + 15) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8)
       + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v11 = ~v7 + a2;
    bzero(a1, ((((((((((((((*(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
    *a1 = v11;
  }
  __asm { BR              X10 }
}

void sub_1BB225BA8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1BB225C24);
}

void sub_1BB225BB0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v0 + v2) = 0;
  if (v1)
    JUMPOUT(0x1BB225BB8);
  JUMPOUT(0x1BB225C24);
}

void sub_1BB225C00()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB225C24);
}

void sub_1BB225C08()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1BB225C24);
}

uint64_t sub_1BB225C10@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_WORD *)(v3 + v5) = 0;
  if (!(_DWORD)v4)
    JUMPOUT(0x1BB225C24);
  if (a1 < 0x7FFFFFFF)
  {
    if ((v4 & 0x80000000) == 0)
      JUMPOUT(0x1BB225C20);
    JUMPOUT(0x1BB225C1CLL);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 56))(v3, v4);
}

uint64_t sub_1BB225C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB224BCC(a1, a2, a3, a4);
}

__n128 FormatPattern.init(mode:content:position:)@<Q0>(unsigned __int8 *a1@<X0>, unint64_t *a2@<X1>, __n128 *a3@<X2>, __n128 *a4@<X8>)
{
  unint64_t v4;
  unint64_t v5;
  unsigned __int8 v6;
  __n128 result;

  v4 = *a2;
  v5 = a3[1].n128_u64[0];
  v6 = a3[1].n128_u8[8];
  a4->n128_u8[0] = *a1;
  a4->n128_u64[1] = v4;
  result = *a3;
  a4[1] = *a3;
  a4[2].n128_u64[0] = v5;
  a4[2].n128_u8[8] = v6;
  return result;
}

void FormatPattern.mode.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t FormatPattern.content.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  return swift_retain();
}

__n128 FormatPattern.position.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[2].n128_u64[0];
  v3 = v1[2].n128_u8[8];
  result = v1[1];
  *a1 = result;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

uint64_t sub_1BB225CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v6 = sub_1BB870CA8();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (_QWORD *)((char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *v2;
  v18[1] = *((_QWORD *)v2 + 1);
  result = sub_1BB4540D8(a1, v9);
  if (!v3)
  {
    if ((v10 & 0x80) == 0)
    {
      sub_1BB226344(0, &qword_1ED39C3F0, (void (*)(uint64_t))MEMORY[0x1E0DBAD40]);
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(a2, v9, v6);
      __asm { BR              X9 }
    }
    sub_1BB226344(0, &qword_1ED39EE70, (void (*)(uint64_t))MEMORY[0x1E0DBAD70]);
    v13 = a2 + *(int *)(v12 + 48);
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 32))(a2, v9, v6);
    v14 = sub_1BB870CF0();
    v15 = (unsigned int *)MEMORY[0x1E0DBAD68];
    if ((v10 & 1) != 0)
      v15 = (unsigned int *)MEMORY[0x1E0DBAD60];
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v13, *v15, v14);
    v16 = *MEMORY[0x1E0DBACE8];
    v17 = sub_1BB870CC0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(a2, v16, v17);
  }
  return result;
}

uint64_t sub_1BB225EE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatPattern.init(from:)(a1, a2);
}

uint64_t sub_1BB225EFC(_QWORD *a1)
{
  return FormatPattern.encode(to:)(a1);
}

BOOL _s8NewsFeed13FormatPatternV2eeoiySbAC_ACtFZ_0(char *a1, char *a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  char v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  double v13;
  double v14;
  char v15;
  char v16;
  BOOL v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v23;
  _BOOL8 result;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v4 = *a1;
  v5 = *((_QWORD *)a1 + 1);
  v6 = a1[16];
  v8 = *((double *)a1 + 3);
  v7 = *((double *)a1 + 4);
  v9 = a1[40];
  v10 = *a2;
  v11 = *((_QWORD *)a2 + 1);
  v12 = a2[16];
  v14 = *((double *)a2 + 3);
  v13 = *((double *)a2 + 4);
  v15 = a2[40];
  if ((v4 & 0x80000000) == 0)
  {
    if (v10 < 0)
      return 0;
    sub_1BB7FCC1C(v4);
    if ((v16 & 1) == 0)
      return 0;
    goto LABEL_25;
  }
  if ((v10 & 0x80000000) == 0)
    return 0;
  v17 = (v4 & 1) == 0;
  if ((v4 & 1) != 0)
    v18 = 0x6F546D6F74746F62;
  else
    v18 = 0x746F426F54706F74;
  if (v17)
    v19 = 0xEB000000006D6F74;
  else
    v19 = 0xEB00000000706F54;
  if ((v10 & 1) != 0)
    v20 = 0x6F546D6F74746F62;
  else
    v20 = 0x746F426F54706F74;
  if ((v10 & 1) != 0)
    v21 = 0xEB00000000706F54;
  else
    v21 = 0xEB000000006D6F74;
  if (v18 == v20 && v19 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_25;
  }
  v23 = sub_1BB874398();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v23 & 1) != 0)
  {
LABEL_25:
    v26 = v11;
    v27 = v5;
    if (!static FormatPatternContent.== infix(_:_:)(&v27, &v26))
      return 0;
    result = v12 == 4;
    if (v6 == 4)
      return result;
    if (v12 == 4)
      return 0;
    sub_1BB7F0B30(v6);
    if ((v25 & 1) == 0)
      return 0;
    if ((v9 & 1) != 0)
    {
      if ((v15 & 1) != 0)
        return 1;
    }
    else if ((v15 & 1) == 0 && v8 == v14 && v7 == v13)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

unint64_t sub_1BB2260A8(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2260CC();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2260CC()
{
  unint64_t result;

  result = qword_1EF2BE320;
  if (!qword_1EF2BE320)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPattern, &type metadata for FormatPattern);
    atomic_store(result, (unint64_t *)&qword_1EF2BE320);
  }
  return result;
}

unint64_t sub_1BB226110(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE8F0A8();
  a1[2] = sub_1BAEF3CD0();
  result = sub_1BB226144();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB226144()
{
  unint64_t result;

  result = qword_1EF2BE328;
  if (!qword_1EF2BE328)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPattern, &type metadata for FormatPattern);
    atomic_store(result, (unint64_t *)&qword_1EF2BE328);
  }
  return result;
}

uint64_t destroy for FormatPattern()
{
  return swift_release();
}

uint64_t initializeWithCopy for FormatPattern(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for FormatPattern(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithTake for FormatPattern(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatPattern(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 41))
    return (*(_DWORD *)a1 + 252);
  if (*(unsigned __int8 *)(a1 + 16) <= 4u)
    v3 = 4;
  else
    v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 - 5;
  if (*(unsigned __int8 *)(a1 + 16) < 4u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatPattern(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 252;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 41) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 4;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPattern()
{
  return &type metadata for FormatPattern;
}

void sub_1BB226344(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t TupleTypeMetadata2;
  uint64_t v6;

  if (!*a2)
  {
    sub_1BB870CA8();
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6)
      atomic_store(TupleTypeMetadata2, a2);
  }
}

uint64_t dispatch thunk of CoverIssueViewStylerType.accessoryLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.accessoryPointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.titleLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.titlePointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.followingButtonTextLineHeight.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.followingButtonTextPointSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.followingButtonTopPadding.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.coverCornerRadius.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.titleFontColor.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.styled(singleLineTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.styled(doubleLineTitle:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.styled(dateText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 96))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.styled(badgeText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.styled(followButtonText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.styled(unfollowButtonText:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.style(accessoryLabel:badge:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 128))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.style(followingButton:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 136))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.style(moreActionsButton:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.style(downloadProgressBar:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of CoverIssueViewStylerType.style(selectionImageView:selected:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

id sub_1BB226460(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3;
  uint64_t inited;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  void *v21;
  id v22;

  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v6 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v7 = *(void **)(v3 + 24);
  v8 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v7;
  v9 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v8;
  *(_QWORD *)(inited + 72) = v9;
  v10 = *(void **)(v3 + 80);
  v11 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v10;
  v12 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v11;
  *(_QWORD *)(inited + 112) = v12;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = a3;
  swift_bridgeObjectRetain();
  v13 = v6;
  v14 = v7;
  v15 = v9;
  v16 = v10;
  v17 = v12;
  v18 = a3;
  sub_1BA76E82C(inited);
  v19 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v20 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v21 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v22 = objc_msgSend(v19, sel_initWithString_attributes_, v20, v21);

  return v22;
}

id sub_1BB226610()
{
  uint64_t v0;
  id v1;
  uint64_t inited;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v1, sel_setLineBreakMode_, 4);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = *(void **)(v0 + 32);
  v5 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = *(void **)(v0 + 88);
  v8 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v7;
  v9 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v1;
  swift_bridgeObjectRetain();
  v10 = v3;
  v11 = v4;
  v12 = v6;
  v13 = v7;
  v14 = v9;
  v15 = v1;
  sub_1BA76E82C(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v18 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1BB226804()
{
  uint64_t v0;
  id v1;
  uint64_t inited;
  void *v3;
  void *v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  void *v18;
  id v19;

  v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
  objc_msgSend(v1, sel_setAlignment_, 1);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87FC80;
  v3 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v4 = *(void **)(v0 + 32);
  v5 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v4;
  v6 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v5;
  *(_QWORD *)(inited + 72) = v6;
  v7 = *(void **)(v0 + 96);
  v8 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v7;
  v9 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v9;
  *(_QWORD *)(inited + 144) = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v1;
  swift_bridgeObjectRetain();
  v10 = v3;
  v11 = v4;
  v12 = v6;
  v13 = v7;
  v14 = v9;
  v15 = v1;
  sub_1BA76E82C(inited);
  v16 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v17 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v18 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v19 = objc_msgSend(v16, sel_initWithString_attributes_, v17, v18);

  return v19;
}

id sub_1BB2269F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  uint64_t v28;

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(id *)(v0 + 40);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);

  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setAlignment_, 1);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = *(void **)(v0 + 136);
  v12 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v11;
  v13 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v12;
  *(_QWORD *)(inited + 112) = v13;
  v14 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  v15 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 144) = v14;
  *(_QWORD *)(inited + 152) = v15;
  *(_QWORD *)(inited + 184) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 160) = 0xBFE0000000000000;
  v16 = v5;
  swift_bridgeObjectRetain();
  v17 = v8;
  v18 = v10;
  v19 = v11;
  v20 = v13;
  v21 = v6;
  v22 = v15;
  sub_1BA76E82C(inited);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v25 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

id sub_1BB226C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  id v5;
  id v6;
  uint64_t inited;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  void *v19;
  id v20;
  id v21;
  id v22;
  id v23;
  void *v24;
  void *v25;
  id v26;
  _BYTE v28[192];

  v1 = sub_1BB86C9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = *(id *)(v0 + 40);
  sub_1BB86C994();
  v6 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v5);

  (*(void (**)(_BYTE *, uint64_t))(v2 + 8))(v4, v1);
  objc_msgSend(v6, sel_setAlignment_, 0);
  sub_1BA847C08();
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87D7A0;
  v8 = (void *)*MEMORY[0x1E0DC1138];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0DC1138];
  v9 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v5;
  v10 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v10;
  v11 = (void *)objc_opt_self();
  v12 = v5;
  swift_bridgeObjectRetain();
  v13 = v8;
  v14 = v10;
  v15 = objc_msgSend(v11, sel_secondaryLabelColor);
  v16 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v15;
  v17 = (void *)*MEMORY[0x1E0DC1178];
  *(_QWORD *)(inited + 104) = v16;
  *(_QWORD *)(inited + 112) = v17;
  v18 = sub_1BA49A224(0, (unint64_t *)&unk_1ED3B98C0);
  *(_QWORD *)(inited + 120) = v6;
  v19 = (void *)*MEMORY[0x1E0DC1150];
  *(_QWORD *)(inited + 144) = v18;
  *(_QWORD *)(inited + 152) = v19;
  *(_QWORD *)(inited + 184) = MEMORY[0x1E0DEB070];
  *(_QWORD *)(inited + 160) = 0xBFE0000000000000;
  v20 = v17;
  v21 = v6;
  v22 = v19;
  sub_1BA76E82C(inited);
  v23 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v24 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA76F768();
  v25 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v26 = objc_msgSend(v23, sel_initWithString_attributes_, v24, v25);

  return v26;
}

void sub_1BB226ECC(void *a1, _BYTE *a2)
{
  uint64_t v2;
  id v4;
  id v5;
  id v6;

  if (*a2 == 1)
  {
    objc_msgSend(a1, sel_setClipsToBounds_, 1);
    v4 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v4, sel_setCornerRadius_, 4.5);

    objc_msgSend(a1, sel_setBackgroundColor_, *(_QWORD *)(v2 + 104));
  }
  else
  {
    objc_msgSend(a1, sel_setClipsToBounds_, 0);
    v5 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v5, sel_setCornerRadius_, 0.0);

    v6 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
    objc_msgSend(a1, sel_setBackgroundColor_, v6);

  }
}

void sub_1BB226FDC(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int v8;
  id v9;
  void *v10;
  uint64_t v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  CGRect v19;

  v3 = sub_1BB86F658();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = &a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_toggleState];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  v8 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (v8 == *MEMORY[0x1E0DB6BE8])
  {
    v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v9, sel_setBorderWidth_, 0.0);
LABEL_8:

    return;
  }
  if (v8 == *MEMORY[0x1E0DB6BF0])
  {
    v10 = *(void **)(v1 + 136);
    v11 = OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor;
    v12 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor];
    *(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewFollowSwitch_borderColor] = v10;
    v13 = v10;

    v14 = objc_msgSend(a1, sel_layer);
    v15 = *(void **)&a1[v11];
    if (v15)
      v16 = objc_msgSend(v15, sel_CGColor);
    else
      v16 = 0;
    objc_msgSend(v14, sel_setBorderColor_, v16);

    v17 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v17, sel_setBorderWidth_, 1.5);

    v9 = objc_msgSend(a1, sel_layer);
    objc_msgSend(a1, sel_bounds);
    objc_msgSend(v9, sel_setCornerRadius_, CGRectGetHeight(v19) * 0.5);
    goto LABEL_8;
  }
  sub_1BB873EAC();
  __break(1u);
}

id sub_1BB227240(void *a1)
{
  uint64_t v1;
  id v3;
  id v4;

  v3 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v3, sel_setCornerRadius_, 6.0);

  v4 = objc_msgSend(a1, sel_layer);
  objc_msgSend(v4, sel_setMaskedCorners_, 12);

  objc_msgSend(a1, sel_setBackgroundColor_, *(_QWORD *)(v1 + 128));
  objc_msgSend(a1, sel_setProgressTintColor_, *(_QWORD *)(v1 + 120));
  return objc_msgSend(a1, sel_setHidden_, 1);
}

uint64_t sub_1BB2272F4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;

  v1 = *(void **)(v0 + 24);
  v2 = *(void **)(v0 + 32);
  v3 = *(void **)(v0 + 40);
  v4 = *(void **)(v0 + 48);
  v5 = *(void **)(v0 + 56);

  v6 = *(void **)(v0 + 72);
  v7 = *(void **)(v0 + 80);
  v8 = *(void **)(v0 + 88);
  v9 = *(void **)(v0 + 96);
  v10 = *(void **)(v0 + 104);
  v11 = *(void **)(v0 + 112);
  v12 = *(void **)(v0 + 120);
  v13 = *(void **)(v0 + 128);

  __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoverIssueViewStyler()
{
  return objc_opt_self();
}

id sub_1BB2273BC()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 40), sel_lineHeight);
}

id sub_1BB2273D0()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 40), sel_pointSize);
}

double sub_1BB2273E4()
{
  return 6.0;
}

id sub_1BB2273EC()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 80);
}

id sub_1BB2273F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB227408(a1, a2, a3, a4, 4);
}

id sub_1BB227400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BB227408(a1, a2, a3, a4, 0);
}

id sub_1BB227408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v17;

  v9 = sub_1BB86C9DC();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(void **)(*(_QWORD *)v5 + 24);
  sub_1BB86C994();
  v14 = _sSo23NSMutableParagraphStyleC8NewsFeedE06localebC03for0F0ABSo6UIFontC_10Foundation6LocaleVtFZ_0(v13);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  objc_msgSend(v14, sel_setLineBreakMode_, a5);
  v15 = sub_1BB226460(a1, a2, v14);

  return v15;
}

id sub_1BB2274E0()
{
  return sub_1BB226610();
}

id sub_1BB227500()
{
  return sub_1BB226804();
}

id sub_1BB227520()
{
  return sub_1BB2269F8();
}

id sub_1BB227540()
{
  return sub_1BB226C50();
}

void sub_1BB227560(void *a1, _BYTE *a2)
{
  sub_1BB226ECC(a1, a2);
}

void sub_1BB227580(char *a1)
{
  sub_1BB226FDC(a1);
}

void sub_1BB2275A0(char *a1)
{
  uint64_t v1;
  void *v3;
  uint64_t v4;
  void *v5;
  id v6;

  v3 = *(void **)(*(_QWORD *)v1 + 80);
  v4 = OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState;
  v5 = *(void **)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState];
  *(_QWORD *)&a1[OBJC_IVAR____TtC8NewsFeed21CoverViewActionButton_tintColorForNormalState] = v3;
  v6 = v3;

  objc_msgSend(a1, sel_setTintColor_, *(_QWORD *)&a1[v4]);
}

id sub_1BB227610(void *a1)
{
  return sub_1BB227240(a1);
}

id sub_1BB227634(void *a1, char a2)
{
  id v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  id v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  const char *v23;
  void *v24;
  uint64_t v25;
  CGRect v27;

  v4 = objc_msgSend(a1, sel_layer);
  objc_msgSend(a1, sel_bounds);
  objc_msgSend(v4, sel_setCornerRadius_, CGRectGetWidth(v27) * 0.5);

  v5 = (void *)objc_opt_self();
  v6 = v5;
  if ((a2 & 1) != 0)
  {
    v7 = objc_msgSend(v5, sel_systemPinkColor);
    objc_msgSend(a1, sel_setBackgroundColor_, v7);

    v8 = objc_msgSend(a1, sel_layer);
    v9 = objc_msgSend(v6, sel_whiteColor);
    v10 = objc_msgSend(v9, sel_CGColor);

    objc_msgSend(v8, sel_setBorderColor_, v10);
    v11 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v11, sel_setBorderWidth_, 1.0);

    v12 = objc_msgSend(v6, sel_whiteColor);
    objc_msgSend(a1, sel_setTintColor_, v12);

    v13 = (void *)sub_1BB872970();
    v14 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v13);

    if (v14)
    {
      v15 = objc_msgSend((id)objc_opt_self(), sel_configurationWithPointSize_weight_, 7, 13.0);
      v16 = objc_msgSend(v14, sel_imageWithConfiguration_, v15);

    }
    else
    {
      v16 = 0;
    }
    objc_msgSend(a1, sel_setImage_, v16);

    v23 = sel_setContentMode_;
    v24 = a1;
    v25 = 4;
  }
  else
  {
    v17 = objc_msgSend(v5, sel_whiteColor);
    v18 = objc_msgSend(v17, sel_colorWithAlphaComponent_, 0.9);

    objc_msgSend(a1, sel_setBackgroundColor_, v18);
    v19 = objc_msgSend(a1, sel_layer);
    v20 = objc_msgSend(v6, sel_secondaryLabelColor);
    v21 = objc_msgSend(v20, sel_CGColor);

    objc_msgSend(v19, sel_setBorderColor_, v21);
    v22 = objc_msgSend(a1, sel_layer);
    objc_msgSend(v22, sel_setBorderWidth_, 1.0);

    v23 = sel_setImage_;
    v24 = a1;
    v25 = 0;
  }
  return objc_msgSend(v24, v23, v25);
}

uint64_t dispatch thunk of LiveActivityWebEmbedDatastoreManagerObserver.liveActivityWebEmbedDatastoreDidChange(datastore:swDatastore:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1BB2279A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t ObjectType;
  _QWORD v9[2];

  v4 = *a1;
  v5 = a1[1];
  result = MEMORY[0x1BCCE5D40](v2 + 16);
  if (result)
  {
    v7 = *(_QWORD *)(v2 + 24);
    ObjectType = swift_getObjectType();
    v9[0] = v4;
    v9[1] = v5;
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v7 + 8))(v9, a2, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1BB227A24@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatGroupBinding.Color.init(from:)(a1, a2);
}

void sub_1BB227A38(_QWORD *a1)
{
  FormatGroupBinding.Color.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatGroupBindingV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB227A84
                            + 4
                            * byte_1BB8FB424[(2 * (*(_BYTE *)(a1 + 9) & 0x7F)) | (*(unsigned __int8 *)(a1 + 8) >> 5) & 1]))();
}

BOOL sub_1BB227A84@<W0>(char a1@<W8>)
{
  char v1;
  char v2;
  char v3;

  return !((2 * v3) | ((v2 & 0x20) != 0)) && (a1 ^ v1) == 0;
}

unint64_t sub_1BB227C70(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB227C94();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB227C94()
{
  unint64_t result;

  result = qword_1EF2BE330;
  if (!qword_1EF2BE330)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Color, &type metadata for FormatGroupBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BE330);
  }
  return result;
}

unint64_t sub_1BB227CD8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE88CCC();
  a1[2] = sub_1BAEF4CE4();
  result = sub_1BB227D0C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB227D0C()
{
  unint64_t result;

  result = qword_1EF2BE338;
  if (!qword_1EF2BE338)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatGroupBinding.Color, &type metadata for FormatGroupBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BE338);
  }
  return result;
}

uint64_t _s5ColorOwet_2(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x1FB && *(_BYTE *)(a1 + 10))
    return (*(_DWORD *)a1 + 507);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 5) & 1 | (2 * *(unsigned __int8 *)(a1 + 9))) ^ 0x1FF;
  if (v3 >= 0x1FA)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5ColorOwst_2(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1FA)
  {
    *(_WORD *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 507;
    if (a3 >= 0x1FB)
      *(_BYTE *)(result + 10) = 1;
  }
  else
  {
    if (a3 >= 0x1FB)
      *(_BYTE *)(result + 10) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 32 * (-(char)a2 & 1);
      *(_BYTE *)(result + 9) = -a2 >> 1;
    }
  }
  return result;
}

uint64_t sub_1BB227DF8(uint64_t a1)
{
  return (2 * (*(_BYTE *)(a1 + 9) & 0x7F)) | (*(unsigned __int8 *)(a1 + 8) >> 5) & 1u;
}

uint64_t sub_1BB227E0C(uint64_t result)
{
  *(_BYTE *)(result + 8) &= ~0x20u;
  return result;
}

uint64_t sub_1BB227E1C(uint64_t result, unsigned int a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 0xDF | (32 * (a2 & 1));
  *(_BYTE *)(result + 9) = a2 >> 1;
  return result;
}

ValueMetadata *type metadata accessor for FormatGroupBinding.Color()
{
  return &type metadata for FormatGroupBinding.Color;
}

uint64_t _s8NewsFeed25FormatPublisherLogoSizingO2eeoiySbAC_ACtFZ_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v2;
  unint64_t v3;
  char v4;
  unint64_t v5;

  v2 = *a1;
  v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      v5 = 0;
      v4 = 1;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v2 == 1)
  {
    if (v3 == 1)
    {
      v5 = 1;
      v4 = 1;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v2 != 2)
  {
    if (v3 >= 3)
    {
      sub_1BA738D44(*a2);
      sub_1BA738D44(v2);
      sub_1BA738D44(v3);
      sub_1BA738D44(v2);
      v4 = sub_1BA881EAC(v2, v3);
      sub_1BA738D54(v2);
      sub_1BA738D54(v3);
      v5 = v3;
      v3 = v2;
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v3 != 2)
  {
LABEL_11:
    sub_1BA738D44(*a2);
    sub_1BA738D44(v2);
    v4 = 0;
    v5 = v2;
    goto LABEL_12;
  }
  v4 = 1;
  v5 = 2;
LABEL_12:
  sub_1BA738D54(v5);
  sub_1BA738D54(v3);
  return v4 & 1;
}

unint64_t sub_1BB227F44(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB227F68();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB227F68()
{
  unint64_t result;

  result = qword_1EF2BE340;
  if (!qword_1EF2BE340)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizing, &type metadata for FormatPublisherLogoSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2BE340);
  }
  return result;
}

unint64_t sub_1BB227FAC(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA569C54();
  a1[2] = sub_1BA598990();
  result = sub_1BB227FE0();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB227FE0()
{
  unint64_t result;

  result = qword_1EF2BE348;
  if (!qword_1EF2BE348)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatPublisherLogoSizing, &type metadata for FormatPublisherLogoSizing);
    atomic_store(result, (unint64_t *)&qword_1EF2BE348);
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatPublisherLogoSizing()
{
  return &type metadata for FormatPublisherLogoSizing;
}

uint64_t sub_1BB228034(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int64_t v15;
  uint64_t v16;
  char *v17;
  _QWORD v19[5];
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v20 = type metadata accessor for FormatVersioningModeRelease(0);
  MEMORY[0x1E0C80A78](v20);
  v19[4] = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v19[3] = (char *)v19 - v5;
  v6 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v6);
  v19[2] = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86EB84();
  v22 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v19[1] = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v21 = (char *)v19 - v11;
  v24 = type metadata accessor for FormatVersioningModeSelection(0);
  v12 = *(_QWORD *)(v24 - 8);
  MEMORY[0x1E0C80A78](v24);
  v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a1 + 16);
  if (v15)
  {
    v19[0] = v1;
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v15, 0);
    v16 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v23 = *(_QWORD *)(v12 + 72);
    sub_1BA4C2DD8(v16, (uint64_t)v14, type metadata accessor for FormatVersioningModeSelection);
    v17 = (char *)&loc_1BB228244 + 4 * byte_1BB8FB600[swift_getEnumCaseMultiPayload()];
    __asm { BR              X9 }
  }
  return MEMORY[0x1E0DEE9D8];
}

void sub_1BB2285D0()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  unint64_t *v5;
  unint64_t v6;
  char *v7;
  unint64_t v8;
  unint64_t v9;
  char *v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  unint64_t v14;
  unint64_t v15;
  char *v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  unint64_t v20;
  _QWORD *v21;
  unint64_t v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v39;
  void *v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  char *v44;
  unint64_t *__src;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD v50[42];
  uint64_t v51;
  _QWORD v52[42];
  _BYTE __dst[336];
  _QWORD v54[43];

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v1 = sub_1BAAD4BE0();
  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B1510, (uint64_t)&type metadata for DebugFormatInventorySection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v2 = swift_allocObject();
  v3 = v2 + 32;
  v4 = (_QWORD *)v2;
  v5 = (unint64_t *)&v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages];
  memcpy(__dst, &v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], sizeof(__dst));
  memcpy(v54, &v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], 0x150uLL);
  sub_1BAF8EA94((uint64_t)__dst);
  sub_1BB228F3C(v54, v3);
  sub_1BAF8FB4C((uint64_t)__dst);
  memcpy(v54, v5, 0x150uLL);
  memcpy(v52, v5, sizeof(v52));
  sub_1BAF8EA94((uint64_t)v54);
  sub_1BB2294EC(v52, (uint64_t)(v4 + 12));
  sub_1BAF8FB4C((uint64_t)v54);
  v6 = v5[4];
  LOBYTE(v50[0]) = *(_BYTE *)v5;
  v7 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BB22FB68(v6, (uint64_t)v7, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BB7A7AB4((char *)v50, v8, (uint64_t)v52);
  LOBYTE(v50[0]) = v52[0];
  *(_OWORD *)&v50[1] = *(_OWORD *)&v52[1];
  *(_OWORD *)&v50[3] = *(_OWORD *)&v52[3];
  *(_OWORD *)&v50[5] = *(_OWORD *)&v52[5];
  sub_1BB85F55C(v50, v4 + 20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = v5[25];
  LOBYTE(v50[0]) = *((_BYTE *)v5 + 168);
  v10 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11 = sub_1BB22FB68(v9, (uint64_t)v10, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BB7A7AB4((char *)v50, v11, (uint64_t)v52);
  LOBYTE(v50[0]) = v52[0];
  *(_OWORD *)&v50[1] = *(_OWORD *)&v52[1];
  *(_OWORD *)&v50[3] = *(_OWORD *)&v52[3];
  *(_OWORD *)&v50[5] = *(_OWORD *)&v52[5];
  sub_1BB85F55C(v50, v4 + 28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = v5[32];
  LOBYTE(v50[0]) = *((_BYTE *)v5 + 224);
  v13 = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = sub_1BB22FB68(v12, (uint64_t)v13, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BB7A7AB4((char *)v50, v14, (uint64_t)v52);
  LOBYTE(v50[0]) = v52[0];
  *(_OWORD *)&v50[1] = *(_OWORD *)&v52[1];
  *(_OWORD *)&v50[3] = *(_OWORD *)&v52[3];
  *(_OWORD *)&v50[5] = *(_OWORD *)&v52[5];
  sub_1BB85F55C(v50, v4 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = v5[11];
  LOBYTE(v50[0]) = *((_BYTE *)v5 + 56);
  v16 = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17 = sub_1BB22FB68(v15, (uint64_t)v16, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BB7A7AB4((char *)v50, v17, (uint64_t)v52);
  LOBYTE(v50[0]) = v52[0];
  *(_OWORD *)&v50[1] = *(_OWORD *)&v52[1];
  *(_OWORD *)&v50[3] = *(_OWORD *)&v52[3];
  *(_OWORD *)&v50[5] = *(_OWORD *)&v52[5];
  sub_1BB85F55C(v50, v4 + 44);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v18 = v5[18];
  LOBYTE(v50[0]) = *((_BYTE *)v5 + 112);
  v19 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20 = sub_1BB22FB68(v18, (uint64_t)v19, v1);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1BB7A7AB4((char *)v50, v20, (uint64_t)v52);
  LOBYTE(v50[0]) = v52[0];
  *(_OWORD *)&v50[1] = *(_OWORD *)&v52[1];
  *(_OWORD *)&v50[3] = *(_OWORD *)&v52[3];
  *(_OWORD *)&v50[5] = *(_OWORD *)&v52[5];
  sub_1BB85F55C(v50, v4 + 52);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21 = v4;
  v47 = v4 + 60;
  v22 = v5[39];
  __src = v5;
  LOBYTE(v50[0]) = *((_BYTE *)v5 + 280);
  v23 = v19;
  v24 = v21;
  v25 = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26 = sub_1BB22FB68(v22, (uint64_t)v25, v1);
  swift_bridgeObjectRelease();
  v44 = v25;

  swift_bridgeObjectRelease();
  sub_1BB7A7AB4((char *)v50, v26, (uint64_t)v52);
  LOBYTE(v50[0]) = v52[0];
  *(_OWORD *)&v50[1] = *(_OWORD *)&v52[1];
  *(_OWORD *)&v50[3] = *(_OWORD *)&v52[3];
  *(_OWORD *)&v50[5] = *(_OWORD *)&v52[5];
  sub_1BB85F55C(v50, v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27 = 0;
  v28 = MEMORY[0x1E0DEE9D8];
  do
  {
    v32 = &v24[v27];
    v33 = v24[v27 + 11];
    if (*(_QWORD *)(v33 + 16))
    {
      v34 = v32[5];
      v35 = v32[6];
      v36 = v32[7];
      v37 = v32[8];
      v48 = v32[9];
      v49 = v32[4];
      v46 = v32[10];
      sub_1BB22FE9C(v49, v34);
      swift_bridgeObjectRetain();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v51 = v28;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BAC7B26C(0, *(_QWORD *)(v28 + 16) + 1, 1);
        v28 = v51;
      }
      v30 = *(_QWORD *)(v28 + 16);
      v29 = *(_QWORD *)(v28 + 24);
      if (v30 >= v29 >> 1)
      {
        sub_1BAC7B26C(v29 > 1, v30 + 1, 1);
        v28 = v51;
      }
      *(_QWORD *)(v28 + 16) = v30 + 1;
      v31 = (_QWORD *)(v28 + (v30 << 6));
      v31[4] = v49;
      v31[5] = v34;
      v31[6] = v35;
      v31[7] = v36;
      v31[8] = v37;
      v31[9] = v48;
      v31[10] = v46;
      v31[11] = v33;
    }
    v27 += 8;
  }
  while (v27 != 64);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v39 = *(_QWORD *)&v44[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections];
  *(_QWORD *)&v44[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections] = v28;
  swift_bridgeObjectRetain();
  sub_1BB229914(v39, v28, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BB229810();
  v41 = v40;
  memcpy(v52, __src, sizeof(v52));
  memcpy(v50, __src, sizeof(v50));
  sub_1BAF8EA94((uint64_t)v52);
  v42 = sub_1BB7A8230();
  if (v42 >> 62)
    v43 = sub_1BB873F30();
  else
    v43 = *(_QWORD *)((v42 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();
  sub_1BAF8FB4C((uint64_t)v52);
  objc_msgSend(v41, sel_setEnabled_, v43 != 0);

}

double sub_1BB228F3C@<D0>(void *__src@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  int64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  double result;
  _QWORD v32[42];
  uint64_t v33;
  _QWORD *v34;
  _BYTE __dst[336];

  memcpy(__dst, __src, sizeof(__dst));
  strcpy((char *)v32, "background::");
  BYTE5(v32[1]) = 0;
  HIWORD(v32[1]) = -5120;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB872AFC(v2);
  swift_bridgeObjectRelease();
  v3 = v32[0];
  v4 = v32[1];
  v5 = MEMORY[0x1E0DEE9D8];
  v6 = sub_1BA6EA0D0(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_1BA6EA0D0((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v6[2] = v8 + 1;
  v9 = &v6[2 * v8];
  v9[4] = v3;
  v9[5] = v4;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v10 = v32[0];
  v11 = v32[1];
  v13 = v6[2];
  v12 = v6[3];
  if (v13 >= v12 >> 1)
    v6 = sub_1BA6EA0D0((_QWORD *)(v12 > 1), v13 + 1, 1, v6);
  v6[2] = v13 + 1;
  v14 = &v6[2 * v13];
  v14[4] = v10;
  v14[5] = v11;
  v34 = v6;
  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v15 = *(_QWORD *)(v32[0] + 16);
  if (v15)
  {
    v33 = v5;
    sub_1BA7447E8(0, v15, 0);
    v16 = v32[0] + 40;
    do
    {
      strcpy((char *)v32, "theme::");
      v32[1] = 0xE700000000000000;
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v17);
      swift_bridgeObjectRelease();
      v18 = v32[0];
      v33 = v5;
      v20 = *(_QWORD *)(v5 + 16);
      v19 = *(_QWORD *)(v5 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_1BA7447E8(v19 > 1, v20 + 1, 1);
        v5 = v33;
      }
      v16 += 16;
      *(_QWORD *)(v5 + 16) = v20 + 1;
      v21 = v5 + 16 * v20;
      *(_QWORD *)(v21 + 32) = v18;
      *(_QWORD *)(v21 + 40) = 0xE700000000000000;
      --v15;
    }
    while (v15);
  }
  swift_bridgeObjectRelease();
  sub_1BA6E9BD8(v5);
  memcpy(v32, __dst, sizeof(v32));
  v22 = sub_1BB7A8230();
  v23 = v22;
  if (v22 >> 62)
  {
    swift_bridgeObjectRetain_n();
    v26 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v26)
    {
LABEL_12:
      if ((v23 & 0xC000000000000001) != 0)
      {
        v25 = MEMORY[0x1BCCE4630](0, v23);
      }
      else
      {
        v25 = *(_QWORD *)(v23 + 32);
        swift_retain();
      }
      __asm { BR              X9 }
    }
  }
  else
  {
    v24 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v24)
      goto LABEL_12;
  }
  v27 = MEMORY[0x1E0DEE9E0];
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  v28 = swift_bridgeObjectRetain();
  v29 = sub_1BB22F680(v28, v27);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  result = 0.0;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)a2 = 0u;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v29;
  return result;
}

double sub_1BB2294EC@<D0>(const void *a1@<X1>, uint64_t a2@<X8>)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double result;
  _QWORD __dst[48];

  memcpy(__dst, a1, 0x150uLL);
  __dst[46] = MEMORY[0x1E0DEE9D8];
  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v3 = sub_1BB7A8230();
  if (v3 >> 62)
  {
    v4 = sub_1BB873F30();
    if (v4)
    {
LABEL_3:
      if (v4 >= 1)
      {
        if ((v3 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1BCCE4630](0, v3);
        }
        else
        {
          v5 = *(_QWORD *)(v3 + 32);
          swift_retain();
        }
        __dst[0] = 0;
        __dst[1] = 0xE000000000000000;
        __asm { BR              X9 }
      }
      __break(1u);
      JUMPOUT(0x1BB2297F4);
    }
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = MEMORY[0x1E0DEE9D8];
  result = 0.0;
  *(_OWORD *)a2 = xmmword_1BB87FC90;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = v6;
  return result;
}

void sub_1BB229810()
{
  char *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  id v4;
  id v5;
  char *v6;
  id v7;
  void *v8;
  id v9;

  v1 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___uploadBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___uploadBarButtonItem];
  if (v2)
    goto LABEL_4;
  v3 = (void *)sub_1BB872970();
  v4 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v3);

  if (v4)
  {
    v5 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v6 = v0;
    v7 = objc_msgSend(v5, sel_initWithImage_style_target_action_, v4, 0, v6, sel_doCompileUpload);

    v8 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v7;
    v7;

    v2 = 0;
LABEL_4:
    v9 = v2;
    return;
  }
  __break(1u);
}

void sub_1BB229914(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  void *v15;
  unint64_t v16;
  char *v17;
  uint64_t isEscapingClosureAtFileLocation;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  id v24;
  _QWORD *v25;
  id v26;
  id v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD aBlock[5];
  _QWORD *v37;

  v7 = sub_1BB8716B0();
  v34 = *(_QWORD *)(v7 - 8);
  v35 = v7;
  MEMORY[0x1E0C80A78](v7);
  v33 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1BB8716BC();
  v31 = *(_QWORD *)(v9 - 8);
  v32 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (void *)objc_opt_self();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = v3;
  *(_QWORD *)(v13 + 24) = a1;
  *(_BYTE *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a2;
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = sub_1BB22FF44;
  v14[3] = v13;
  aBlock[4] = sub_1BA4D7948;
  v37 = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4D7928;
  aBlock[3] = &block_descriptor_52;
  v15 = _Block_copy(aBlock);
  v16 = (unint64_t)v37;
  v17 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel_performWithoutAnimation_, v15);
  _Block_release(v15);
  isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if ((isEscapingClosureAtFileLocation & 1) != 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (*(_QWORD *)(*(_QWORD *)&v17[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections] + 16))
  {
    v20 = v31;
    v19 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v31 + 104))(v11, *MEMORY[0x1E0DBC7E8], v32);
    v22 = v33;
    v21 = v34;
    v23 = v35;
    (*(void (**)(char *, _QWORD, uint64_t))(v34 + 104))(v33, *MEMORY[0x1E0DBC808], v35);
    sub_1BB86FDC0();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v11, v19);
  }
  v24 = objc_msgSend(v17, sel_presentedViewController);
  if (!v24)
  {
    swift_release();
    return;
  }
  isEscapingClosureAtFileLocation = (uint64_t)v24;
  type metadata accessor for DebugNavigationController();
  v25 = (_QWORD *)swift_dynamicCastClass();
  if (!v25)
    goto LABEL_19;
  v14 = v25;
  v26 = objc_msgSend(v25, sel_childViewControllers);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3C0420);
  v16 = sub_1BB872DB4();

  if (v16 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    v29 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v29)
      goto LABEL_8;
    goto LABEL_17;
  }
  if (*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_8:
    if ((v16 & 0xC000000000000001) != 0)
    {
      v27 = (id)MEMORY[0x1BCCE4630](0, v16);
    }
    else
    {
      if (!*(_QWORD *)((v16 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        return;
      }
      v27 = *(id *)(v16 + 32);
    }
    v28 = v27;
    swift_bridgeObjectRelease();
    type metadata accessor for DebugFormatSelectPackageViewController();
    if (swift_dynamicCastClass())
    {
      swift_release();

      return;
    }

    goto LABEL_18;
  }
LABEL_17:
  swift_bridgeObjectRelease();
LABEL_18:
  objc_msgSend(v14, sel_dismissViewControllerAnimated_completion_, 1, 0);
LABEL_19:
  swift_release();

}

id sub_1BB229CEC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v1 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___versionBarButtonItem;
  v2 = *(void **)(v0
                + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___versionBarButtonItem);
  if (v2)
  {
    v3 = *(id *)(v0
               + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___versionBarButtonItem);
  }
  else
  {
    v4 = sub_1BB229D4C(v0);
    v5 = *(void **)(v0 + v1);
    *(_QWORD *)(v0 + v1) = v4;
    v3 = v4;

    v2 = 0;
  }
  v6 = v2;
  return v3;
}

id sub_1BB229D4C(uint64_t a1)
{
  uint64_t v2;
  id v3;
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t inited;
  void **v8;
  void *v9;
  void *v10;
  id v11;
  id v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  void *v18;
  void *v19;

  if (qword_1EF2A6CC0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_1EF2AE4D8;
  v3 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  swift_bridgeObjectRetain();
  v4 = objc_msgSend(v3, sel_initWithTitle_style_target_action_, 0, 0, a1, sel_doShowVersioningModePicker_);
  v5 = sub_1BB228034(v2);
  swift_bridgeObjectRelease();
  sub_1BA6E43EC(v5);
  swift_bridgeObjectRelease();
  v6 = (void *)sub_1BB873024();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setPossibleTitles_, v6);

  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v8 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v9 = *v8;
  *(_QWORD *)(inited + 32) = *v8;
  v10 = (void *)objc_opt_self();
  v11 = v9;
  v12 = objc_msgSend(v10, sel_systemFontOfSize_, 10.0);
  v13 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v12;
  v14 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v13;
  *(_QWORD *)(inited + 72) = v14;
  v15 = (void *)objc_opt_self();
  v16 = v14;
  v17 = objc_msgSend(v15, sel_secondaryLabelColor);
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v17;
  sub_1BA76E82C(inited);
  type metadata accessor for Key(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9880, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v18 = (void *)sub_1BB872760();
  objc_msgSend(v4, sel_setTitleTextAttributes_forState_, v18, 0);

  v19 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_setTitleTextAttributes_forState_, v19, 1);

  return v4;
}

id sub_1BB22A02C()
{
  char *v0;
  uint64_t v1;
  void *v2;
  id v3;
  void *v4;
  id v5;
  id v6;
  char *v7;
  id v8;
  void *v9;
  id v10;

  v1 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___createPackageBarButtonItem;
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___createPackageBarButtonItem];
  if (v2)
  {
    v3 = *(id *)&v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___createPackageBarButtonItem];
  }
  else
  {
    v4 = (void *)sub_1BB872970();
    v5 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v4);

    v6 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
    v7 = v0;
    v8 = objc_msgSend(v6, sel_initWithImage_style_target_action_, v5, 0, v7, sel_doCreatePackage);

    v9 = *(void **)&v0[v1];
    *(_QWORD *)&v0[v1] = v8;
    v3 = v8;

    v2 = 0;
  }
  v10 = v2;
  return v3;
}

id sub_1BB22A14C()
{
  char *v0;
  char *v1;
  objc_class *ObjectType;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  double v8;
  uint64_t v9;
  id result;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  void *v16;
  void *v17;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  id v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  uint64_t *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  _QWORD v52[42];
  _BYTE v53[336];
  objc_super v54;

  v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  v3 = sub_1BB8716B0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB8716BC();
  v51 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v50 = (uint64_t *)((char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54.receiver = v0;
  v54.super_class = ObjectType;
  objc_msgSendSuper2(&v54, sel_viewDidLoad, v8);
  result = objc_msgSend(v0, sel_view);
  if (result)
  {
    v11 = result;
    v47 = v6;
    v48 = v4;
    v12 = (void *)objc_opt_self();
    v13 = objc_msgSend(v12, sel_systemBackgroundColor);
    objc_msgSend(v11, sel_setBackgroundColor_, v13);

    v14 = objc_msgSend(v1, sel_navigationItem);
    v15 = (void *)sub_1BB872970();
    objc_msgSend(v14, sel_setTitle_, v15);

    sub_1BB229810();
    v17 = v16;
    memcpy(v53, &v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], sizeof(v53));
    memcpy(v52, &v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], sizeof(v52));
    sub_1BAF8EA94((uint64_t)v53);
    v18 = sub_1BB7A8230();
    if (v18 >> 62)
      v19 = sub_1BB873F30();
    else
      v19 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFF8) + 0x10);
    v46 = v7;
    v49 = v3;
    swift_bridgeObjectRelease();
    sub_1BAF8FB4C((uint64_t)v53);
    objc_msgSend(v17, sel_setEnabled_, v19 != 0);

    v20 = *(void **)&v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView];
    objc_msgSend(v20, sel_setDataSource_, v1);
    objc_msgSend(v20, sel_setDelegate_, v1);
    objc_msgSend(v20, sel_setAlwaysBounceVertical_, 1);
    objc_msgSend(v20, sel_setAllowsMultipleSelection_, 1);
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3F10]), sel_initWithFrame_, 0.0, 0.0, 0.0, 0.0);
    objc_msgSend(v20, sel_setTableFooterView_, v21);

    type metadata accessor for DebugFormatTableViewCell();
    sub_1BB873234();
    type metadata accessor for DebugJournalHeaderView();
    sub_1BB873228();
    result = objc_msgSend(v1, sel_view);
    if (result)
    {
      v22 = result;
      objc_msgSend(result, sel_addSubview_, v20);

      v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC3C40]), sel_initWithSearchResultsController_, 0);
      objc_msgSend(v23, sel_setSearchResultsUpdater_, v1);
      objc_msgSend(v23, sel_setObscuresBackgroundDuringPresentation_, 0);
      objc_msgSend(v23, sel_setHidesNavigationBarDuringPresentation_, 0);
      v24 = objc_msgSend(v23, sel_searchBar);
      swift_retain();
      sub_1BB86D2B8();
      swift_release();
      v25 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      objc_msgSend(v24, sel_setText_, v25);

      v26 = objc_msgSend(v23, sel_searchBar);
      v27 = objc_msgSend(v12, sel_systemBlueColor);
      objc_msgSend(v26, sel_setTintColor_, v27);

      v28 = objc_msgSend(v23, sel_searchBar);
      v29 = (void *)sub_1BB872970();
      objc_msgSend(v28, sel_setPlaceholder_, v29);

      v30 = objc_msgSend(v23, sel_searchBar);
      v31 = objc_msgSend(v30, sel_searchTextField);

      objc_msgSend(v31, sel_setAutocorrectionType_, 1);
      v32 = objc_msgSend(v23, sel_searchBar);
      v33 = objc_msgSend(v32, sel_searchTextField);

      objc_msgSend(v33, sel_setAutocapitalizationType_, 0);
      v34 = objc_msgSend(v23, sel_searchBar);
      v35 = (void *)sub_1BB872970();
      v36 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v35);

      objc_msgSend(v34, sel_setImage_forSearchBarIcon_state_, v36, 0, 0);
      v37 = objc_msgSend(v23, sel_searchBar);
      objc_msgSend(v37, sel_setShowsCancelButton_, 0);

      v38 = objc_msgSend(v1, sel_navigationItem);
      objc_msgSend(v38, sel_setSearchController_, v23);

      sub_1BB86FDCC();
      v39 = v50;
      static CoverView.loading.getter(v50);
      v41 = v47;
      v40 = v48;
      v42 = v49;
      (*(void (**)(char *, _QWORD, uint64_t))(v48 + 104))(v47, *MEMORY[0x1E0DBC810], v49);
      sub_1BB86FDC0();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v42);
      (*(void (**)(uint64_t *, uint64_t))(v51 + 8))(v39, v46);
      sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = xmmword_1BB895C60;
      sub_1BB229810();
      *(_QWORD *)(v43 + 32) = v44;
      *(_QWORD *)(v43 + 40) = sub_1BB22A02C();
      *(_QWORD *)(v43 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC34F0]), sel_initWithBarButtonSystemItem_target_action_, 5, 0, 0);
      *(_QWORD *)(v43 + 56) = sub_1BB229CEC();
      v52[0] = v43;
      sub_1BB872DCC();
      sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
      v45 = (void *)sub_1BB872D9C();
      swift_bridgeObjectRelease();
      objc_msgSend(v1, sel_setToolbarItems_, v45);

      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_beginAccess();
      swift_retain();
      sub_1BB86E4AC();
      swift_release();
      sub_1BB86E4B8();
      swift_release();
      swift_beginAccess();
      swift_retain();
      sub_1BB86E4AC();
      swift_release();
      sub_1BB86E470();
      swift_release();
      swift_retain();
      sub_1BB86D2D0();
      swift_release();
      sub_1BB86D2DC();
      swift_release();
      swift_retain();
      sub_1BB86E4AC();
      swift_release();
      sub_1BB86E470();
      swift_release();
      swift_retain();
      sub_1BB86E4AC();
      swift_release();
      sub_1BB86E4B8();
      swift_release();
      swift_retain();
      sub_1BB86E4AC();
      swift_release();
      sub_1BB86E470();

      return (id)swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1BB22AB54(uint64_t a1)
{
  const void *v1;
  _BYTE v2[336];
  _BYTE __dst[336];

  v1 = (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages);
  memcpy(v2, (const void *)(a1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages), sizeof(v2));
  memcpy(__dst, v1, sizeof(__dst));
  sub_1BAF8EA94((uint64_t)v2);
  sub_1BAF8FB4C((uint64_t)__dst);
  sub_1BB2285D0();
}

void sub_1BB22ABC0()
{
  id v0;
  id v1;

  v0 = sub_1BB229CEC();
  type metadata accessor for FormatDerivedDataCompilerSettings();
  sub_1BAA6CAB0();
  v1 = (id)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setTitle_, v1);

}

void sub_1BB22AC3C(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2;
  id v3;

  v2 = *a2;
  v3 = sub_1BB22A02C();
  objc_msgSend(v3, sel_setEnabled_, v2);

}

uint64_t sub_1BB22AC80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  v2 = swift_bridgeObjectRetain();
  sub_1BB229914(v2, v1, 0);
  return swift_bridgeObjectRelease();
}

void sub_1BB22ACC0()
{
  sub_1BB22ACE0();
}

void sub_1BB22ACE0()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  void *v3;
  id v4;
  uint64_t v5;
  int v6;
  id v7;
  uint64_t inited;
  void **v9;
  void *v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  void *v19;
  id v20;
  void *v21;
  _BYTE v22[16];

  sub_1BA4B07F0(0, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v22[-v1];
  v3 = (void *)objc_opt_self();
  v4 = objc_msgSend(v3, sel_secondaryLabelColor);
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v5 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v6 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v2, 1, v5);
  sub_1BA5C699C((uint64_t)v2, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata);
  if (v6 != 1)
  {
    swift_retain();
    sub_1BB86E494();
    swift_release();
    if ((v22[15] & 1) == 0)
    {
      v7 = objc_msgSend(v3, sel_systemRedColor);

      v4 = v7;
    }
  }
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v9 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v10 = *v9;
  *(_QWORD *)(inited + 32) = *v9;
  v11 = (void *)objc_opt_self();
  v12 = v10;
  v13 = objc_msgSend(v11, sel_systemFontOfSize_, 10.0);
  v14 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v13;
  v15 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v14;
  *(_QWORD *)(inited + 72) = v15;
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v4;
  v16 = v15;
  v17 = v4;
  sub_1BA76E82C(inited);
  v18 = sub_1BB229CEC();
  type metadata accessor for Key(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9880, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v19 = (void *)sub_1BB872760();
  objc_msgSend(v18, sel_setTitleTextAttributes_forState_, v19, 0);

  v20 = sub_1BB229CEC();
  v21 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  objc_msgSend(v20, sel_setTitleTextAttributes_forState_, v21, 1);

}

void sub_1BB22B034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char *v29;
  void *v30;
  char *v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;

  v1 = sub_1BB86CBE0();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v52 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v39 = (char *)&v38 - v6;
  v7 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  v43 = *(_QWORD *)(v7 + 16);
  if (v43)
  {
    v8 = v5;
    v55 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView;
    v54 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_editor);
    v9 = v54 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hiddenInventoryIdentifiers;
    v38 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__backgroundLayoutIdentifier;
    v41 = v7 + 32;
    swift_bridgeObjectRetain();
    v42 = v9;
    swift_beginAccess();
    v10 = 0;
    v56 = v0;
    v45 = v8;
    v44 = v2;
    v40 = v7;
    while (v10 < *(_QWORD *)(v7 + 16))
    {
      v60 = v10;
      v12 = (uint64_t *)(v41 + (v10 << 6));
      v13 = *v12;
      v14 = v12[1];
      v16 = v12[2];
      v15 = v12[3];
      v18 = v12[4];
      v17 = v12[5];
      v19 = v12[6];
      v20 = v12[7];
      swift_retain();
      v51 = v13;
      v46 = v16;
      v47 = v15;
      v48 = v18;
      v49 = v17;
      sub_1BB22FE9C(v13, v14);
      swift_bridgeObjectRetain();
      sub_1BB86E494();
      swift_release();
      v50 = v19;
      if (v14)
      {
        if (v14 != 1)
          __asm { BR              X9 }
        v21 = 0xE600000000000000;
        v22 = 0x64656E6E6970;
      }
      else
      {
        v21 = 0xE800000000000000;
        v22 = 0x64657463656C6573;
      }
      v23 = v45;
      v24 = v44;
      v25 = sub_1BA761FE4(v22, v21, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v25 & 1) != 0)
      {
        sub_1BB230010(v51, v14);
        swift_bridgeObjectRelease();
        v11 = v60;
      }
      else
      {
        v26 = *(_QWORD *)(v20 + 16);
        v11 = v60;
        if (v26)
        {
          v59 = v14;
          v27 = v24;
          v57 = v20 + 32;
          swift_bridgeObjectRetain();
          v28 = 0;
          v53 = v26;
          v29 = v39;
          v58 = v20;
          while (v28 < *(_QWORD *)(v20 + 16))
          {
            v35 = *(_QWORD *)(v57 + 8 * v28);
            swift_retain();
            MEMORY[0x1BCCDD4D8](v28, v11);
            if (v59)
              __asm { BR              X9 }
            v30 = *(void **)(v56 + v55);
            v31 = v52;
            MEMORY[0x1BCCDD4D8](v28, v11);
            v32 = (void *)sub_1BB86CB8C();
            v33 = v31;
            v34 = v53;
            (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v23);
            objc_msgSend(v30, sel_deselectRowAtIndexPath_animated_, v32, 0);
            swift_release();

            ++v28;
            (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v23);
            v11 = v60;
            v20 = v58;
            if (v28 == v34)
            {
              swift_bridgeObjectRelease();
              v36 = v51;
              v37 = v59;
              goto LABEL_20;
            }
          }
          __break(1u);
          break;
        }
        v36 = v51;
        v37 = v14;
LABEL_20:
        sub_1BB230010(v36, v37);
        swift_bridgeObjectRelease();
      }
      v7 = v40;
      v10 = v11 + 1;
      if (v10 == v43)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_1BB22B8F8()
{
  sub_1BB873EAC();
  __break(1u);
  JUMPOUT(0x1BB22B94CLL);
}

void sub_1BB22BA1C()
{
  char *v0;
  void *v1;
  void *v2;
  id v3;
  void *v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  double v12;
  id v13;
  void *v14;
  id v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  id v22;
  uint64_t v23;
  void *v24;
  objc_super v25;

  v1 = v0;
  v25.receiver = v0;
  v25.super_class = (Class)swift_getObjectType();
  objc_msgSendSuper2(&v25, sel_viewWillLayoutSubviews);
  v2 = *(void **)&v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView];
  v3 = objc_msgSend(v1, sel_view);
  if (!v3)
  {
    __break(1u);
    goto LABEL_12;
  }
  v4 = v3;
  objc_msgSend(v3, sel_bounds);
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;

  objc_msgSend(v2, sel_setFrame_, v6, v8, v10, v12);
  v13 = objc_msgSend(v1, sel_splitViewController);
  if (v13)
  {
    v14 = v13;
    if ((sub_1BB8733D8() & 1) != 0)
    {
      v15 = objc_msgSend(v1, sel_navigationItem);
      sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
      v16 = (void *)sub_1BB872D9C();
      objc_msgSend(v15, sel_setRightBarButtonItems_, v16);

      goto LABEL_8;
    }

  }
  v15 = objc_msgSend(v1, sel_navigationItem);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1BB8856E0;
  v18 = (void *)sub_1BB872970();
  v19 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v18);

  if (!v19)
  {
LABEL_12:
    __break(1u);
    return;
  }
  v20 = objc_allocWithZone(MEMORY[0x1E0DC34F0]);
  v21 = v1;
  v22 = objc_msgSend(v20, sel_initWithImage_style_target_action_, v19, 0, v21, sel_doDismiss);

  *(_QWORD *)(v17 + 32) = v22;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1EF2AF5C0);
  v16 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_setRightBarButtonItems_, v16);
LABEL_8:

  v23 = sub_1BB8733C0();
  if (v23)
  {
    v24 = (void *)v23;
    sub_1BB8708AC();

  }
}

uint64_t type metadata accessor for DebugFormatInventoryViewController()
{
  return objc_opt_self();
}

void sub_1BB22BE58()
{
  char *v0;
  void *v1;
  uint64_t v2;
  unint64_t v3;
  const char *v4;
  _QWORD *v5;
  id v6;
  uint64_t v7;
  id v8;
  id v9;
  id v10;
  id v11;
  objc_class *v12;
  id v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  void *v20;
  double v21;
  CGFloat v22;
  double v23;
  CGFloat v24;
  double v25;
  CGFloat v26;
  double v27;
  CGFloat v28;
  id v29;
  id v30;
  void *v31;
  double v32;
  CGFloat v33;
  double v34;
  CGFloat v35;
  double v36;
  CGFloat v37;
  double v38;
  CGFloat v39;
  uint64_t v40;
  void *v41;
  __int128 aBlock;
  uint64_t (*v43)(uint64_t);
  void *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  CGRect v48;
  CGRect v49;

  v1 = v0;
  v2 = *(_QWORD *)&v0[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_editor];
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if (aBlock == 1)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1ED3C3FD0 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    if ((aBlock & 1) == 0)
    {
      v6 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadDiffViewController());
      v7 = swift_retain();
      v8 = sub_1BA9708D4(v7);
      swift_release();
      v9 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadViewController());
      swift_retain();
      v10 = v8;
      v11 = sub_1BAFAD1FC(v2, v10);
      swift_release();

      v12 = (objc_class *)type metadata accessor for DebugNavigationController();
      v13 = objc_allocWithZone(v12);
      swift_retain();
      v14 = objc_msgSend(v13, sel_initWithRootViewController_, v11);
      v15 = objc_msgSend(objc_allocWithZone(v12), sel_initWithRootViewController_, v10);
      v16 = objc_allocWithZone((Class)type metadata accessor for DebugFormatUploadMainViewController());
      v17 = sub_1BA969608(v2, v14, v15);
      objc_msgSend(v17, sel_setPreferredDisplayMode_, 2);
      objc_msgSend(v17, sel_setModalPresentationStyle_, 0);
      v18 = v17;
      v19 = objc_msgSend(v1, sel_view);
      if (v19)
      {
        v20 = v19;
        objc_msgSend(v19, sel_bounds);
        v22 = v21;
        v24 = v23;
        v26 = v25;
        v28 = v27;

        v48.origin.x = v22;
        v48.origin.y = v24;
        v48.size.width = v26;
        v48.size.height = v28;
        objc_msgSend(v18, sel_setMinimumPrimaryColumnWidth_, CGRectGetWidth(v48));

        v29 = v18;
        v30 = objc_msgSend(v1, sel_view);
        if (v30)
        {
          v31 = v30;
          objc_msgSend(v30, sel_bounds);
          v33 = v32;
          v35 = v34;
          v37 = v36;
          v39 = v38;

          v49.origin.x = v33;
          v49.origin.y = v35;
          v49.size.width = v37;
          v49.size.height = v39;
          objc_msgSend(v29, sel_setMaximumPrimaryColumnWidth_, CGRectGetWidth(v49));

          v40 = swift_allocObject();
          swift_unknownObjectWeakInit();
          v45 = (unint64_t)sub_1BB230E30;
          v46 = v40;
          *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
          *((_QWORD *)&aBlock + 1) = 1107296256;
          v43 = sub_1BA4F1DD8;
          v44 = &block_descriptor_27;
          v41 = _Block_copy(&aBlock);
          swift_release();
          objc_msgSend(v1, sel_presentViewController_animated_completion_, v29, 1, v41);
          _Block_release(v41);

          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
      return;
    }
    LOBYTE(aBlock) = 0;
    *((_QWORD *)&aBlock + 1) = 0xD000000000000011;
    v43 = (uint64_t (*)(uint64_t))0x80000001BB980BE0;
    v3 = 0xD000000000000043;
    v4 = "Disable the 'Force Pre-Release Version' setting and restart the app";
  }
  else
  {
    LOBYTE(aBlock) = 0;
    *((_QWORD *)&aBlock + 1) = 0xD000000000000011;
    v43 = (uint64_t (*)(uint64_t))0x80000001BB980BE0;
    v3 = 0xD000000000000019;
    v4 = "Check version for details";
  }
  v44 = (void *)v3;
  v45 = (unint64_t)(v4 - 32) | 0x8000000000000000;
  v46 = 0;
  v47 = 0;
  v5 = (_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
  swift_beginAccess();
  if (*v5)
  {
    swift_retain();
    sub_1BB263178(&aBlock);
    swift_release();
  }
}

void sub_1BB22C270(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  __int128 v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4B07F0(0, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - v3;
  v5 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v9 = MEMORY[0x1BCCE5D40](a1 + 16);
  if (v9)
  {
    v10 = (char *)v9;
    v11 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_editor;
    swift_retain();
    sub_1BB86E494();
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {

      sub_1BA5C699C((uint64_t)v4, &qword_1EF2B19C0, type metadata accessor for DebugFormatFileDirectoryMetadata);
    }
    else
    {
      sub_1BA5193C4((uint64_t)v4, (uint64_t)v8, type metadata accessor for DebugFormatFileDirectoryMetadata);
      if ((v8[*(int *)(v5 + 28)] & 1) != 0)
      {
        sub_1BA4A2E80((uint64_t)v8, type metadata accessor for DebugFormatFileDirectoryMetadata);

      }
      else
      {
        LOBYTE(v14) = 0;
        *((_QWORD *)&v14 + 1) = 0x676E696E726157;
        v15 = 0xE700000000000000;
        v16 = 0xD000000000000077;
        v17 = 0x80000001BB980C70;
        v18 = 0;
        v19 = 0;
        v12 = (_QWORD *)(*(_QWORD *)&v10[v11] + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_alertManager);
        swift_beginAccess();
        if (*v12)
        {
          swift_endAccess();
          swift_retain();
          sub_1BB263178(&v14);

          swift_release();
          sub_1BA4A2E80((uint64_t)v8, type metadata accessor for DebugFormatFileDirectoryMetadata);
        }
        else
        {
          swift_retain();
          sub_1BA4A2E80((uint64_t)v8, type metadata accessor for DebugFormatFileDirectoryMetadata);
          swift_endAccess();

          swift_release();
        }
      }
    }
  }
}

void sub_1BB22C500(uint64_t a1)
{
  void *v1;
  void *v2;
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  void *v8;
  id v9;

  v2 = v1;
  v4 = objc_allocWithZone((Class)type metadata accessor for DebugFormatVersioningModeViewController());
  v5 = swift_retain();
  v6 = sub_1BAC9AA9C(v5);
  swift_release();
  v9 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v6);
  objc_msgSend(v9, sel_setModalPresentationStyle_, 7);
  v7 = objc_msgSend(v9, sel_popoverPresentationController);
  if (v7)
  {
    v8 = v7;
    objc_msgSend(v7, sel_setBarButtonItem_, a1);

  }
  objc_msgSend(v2, sel_presentViewController_animated_completion_, v9, 1, 0);

}

uint64_t sub_1BB22C640()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;

  v1 = v0;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v17 - v3;
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v17 - v10;
  sub_1BB2327D4((uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    return sub_1BA5C699C((uint64_t)v4, (unint64_t *)&qword_1ED3D2E70, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  v13 = objc_allocWithZone((Class)type metadata accessor for DebugFormatSelectPackageViewController());
  v14 = swift_retain();
  v15 = sub_1BAF5ADC4(v14, (uint64_t)v8);
  swift_release();
  v16 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v15);

  objc_msgSend(v16, sel_setModalPresentationStyle_, 1);
  objc_msgSend(v16, sel_setModalInPresentation_, 1);
  objc_msgSend(v1, sel_presentViewController_animated_completion_, v16, 1, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

id sub_1BB22C8CC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t inited;
  void **v16;
  void *v17;
  void *v18;
  id v19;
  id v20;
  uint64_t v21;
  void *v22;
  id v23;
  id v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  void *v29;
  void *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  id v43;
  void *v44;
  id v45;
  void *v46;
  id v47;
  void *v48;
  char *v49;
  uint64_t v50;
  id v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  id v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  id v63;
  uint64_t v64;
  id v65;
  unint64_t v66;
  uint64_t v67;
  id v68;
  char v69;
  uint64_t v70;

  v1 = sub_1BB86CBD4();
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_48;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  if (v1 >= *(_QWORD *)(v2 + 16))
  {
LABEL_48:
    __break(1u);
    goto LABEL_49;
  }
  v3 = (_QWORD *)(v2 + (v1 << 6));
  v4 = v3[11];
  v64 = v3[4];
  v66 = v3[5];
  sub_1BB22FE9C(v64, v66);
  swift_bridgeObjectRetain();
  v5 = sub_1BB86CBC8();
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_49:
    __break(1u);
    goto LABEL_50;
  }
  if (v5 >= *(_QWORD *)(v4 + 16))
  {
LABEL_50:
    __break(1u);
    JUMPOUT(0x1BB22D598);
  }
  v6 = *(_QWORD *)(v4 + 8 * v5 + 32);
  type metadata accessor for DebugFormatTableViewCell();
  swift_retain_n();
  v63 = (id)sub_1BB87321C();
  v7 = v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v8 = *(_QWORD *)(v7 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 32));
  v67 = v6;
  if (*(_QWORD *)(v8 + 16))
  {
    sub_1BB8745CC();
    swift_bridgeObjectRetain();
    sub_1BB872A90();
    v9 = sub_1BB874608();
    v10 = -1 << *(_BYTE *)(v8 + 32);
    v11 = v9 & ~v10;
    if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
    {
      v12 = ~v10;
      while (!*(_BYTE *)(*(_QWORD *)(v8 + 48) + v11) || *(_BYTE *)(*(_QWORD *)(v8 + 48) + v11) == 1)
      {
        v13 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          v11 = (v11 + 1) & v12;
          if (((*(_QWORD *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFF8)) >> v11) & 1) != 0)
            continue;
        }
        goto LABEL_16;
      }
      swift_bridgeObjectRelease();
      v13 = 1;
LABEL_16:
      v6 = v67;
    }
    else
    {
      v13 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = v6 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name;
  swift_beginAccess();
  if (!*(_QWORD *)(v14 + 8))
    swift_bridgeObjectRetain();
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BA010, (uint64_t (*)(uint64_t))sub_1BA81D1A4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  v16 = (void **)MEMORY[0x1E0DC1138];
  *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
  v17 = *v16;
  *(_QWORD *)(inited + 32) = *v16;
  v18 = (void *)objc_opt_self();
  swift_bridgeObjectRetain();
  v19 = v17;
  v65 = v18;
  v20 = objc_msgSend(v18, sel_systemFontOfSize_, 15.0);
  v21 = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
  *(_QWORD *)(inited + 40) = v20;
  v22 = (void *)*MEMORY[0x1E0DC1140];
  *(_QWORD *)(inited + 64) = v21;
  *(_QWORD *)(inited + 72) = v22;
  if ((v13 & 1) != 0)
  {
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
    v23 = v22;
    v24 = (id)sub_1BB873804();
  }
  else
  {
    v25 = (void *)objc_opt_self();
    v26 = v22;
    v24 = objc_msgSend(v25, sel_labelColor);
  }
  v27 = v24;
  *(_QWORD *)(inited + 104) = sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  *(_QWORD *)(inited + 80) = v27;
  sub_1BA76E82C(inited);
  v28 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  v29 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9880, (uint64_t (*)(uint64_t))type metadata accessor for Key, (uint64_t)&unk_1BB87BE5C);
  v30 = (void *)sub_1BB872760();
  swift_bridgeObjectRelease();
  v68 = objc_msgSend(v28, sel_initWithString_attributes_, v29, v30);

  if (v66 <= 1)
    __asm { BR              X10 }
  sub_1BB230010(v64, v66);
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(v63, sel_textLabel);
  if (v31)
  {
    v32 = v31;
    objc_msgSend(v31, sel_setNumberOfLines_, 0);

  }
  v33 = objc_msgSend(v63, sel_textLabel);
  if (v33)
  {
    v34 = v33;
    objc_msgSend(v33, sel_setAttributedText_, v68);

  }
  v35 = objc_msgSend(v63, sel_detailTextLabel);
  if (v35)
  {
    v36 = v35;
    objc_msgSend(v35, sel_setNumberOfLines_, 0);

  }
  v37 = objc_msgSend(v63, sel_detailTextLabel);
  if (v37)
  {
    v38 = v37;
    swift_bridgeObjectRetain();
    v39 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v38, sel_setText_, v39);

  }
  v40 = objc_msgSend(v63, sel_detailTextLabel);
  if (v40)
  {
    v41 = v40;
    v42 = objc_msgSend(v65, sel_monospacedSystemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1440]);
    objc_msgSend(v41, sel_setFont_, v42);

  }
  v43 = objc_msgSend(v63, sel_detailTextLabel);
  if (v43)
  {
    v44 = v43;
    if ((v13 & 1) != 0)
      v45 = (id)sub_1BB873804();
    else
      v45 = objc_msgSend((id)objc_opt_self(), sel_secondaryLabelColor);
    v46 = v45;
    objc_msgSend(v44, sel_setTextColor_, v45);

  }
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if (v69 == 1)
  {
    v47 = objc_msgSend(v63, sel_accessoryView);
    if (v47)
    {
      v48 = v47;
      type metadata accessor for DebugFormatInventoryStatusView();
      v49 = (char *)swift_dynamicCastClass();
      if (v49)
      {
LABEL_45:
        objc_msgSend(v63, sel_setAccessoryView_, v49);
        swift_retain();
        sub_1BB86E494();
        swift_release();
        v50 = sub_1BB37D89C(v67, v70);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v49[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_compilerResultEntries] = v50;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        objc_msgSend(v49, sel_setNeedsLayout);
        v51 = *(id *)&v49[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onErrorTap];
        v52 = (void *)sub_1BB871344();

        v53 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v54 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v55 = (_QWORD *)swift_allocObject();
        v55[2] = v53;
        v55[3] = v54;
        v55[4] = v50;
        swift_bridgeObjectRetain();

        swift_release();
        v56 = *(id *)&v49[OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_onChangesTap];
        v57 = (void *)sub_1BB871344();

        v58 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v59 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v60 = (_QWORD *)swift_allocObject();
        v60[2] = v58;
        v60[3] = v59;
        v60[4] = v50;
        v61 = (void *)sub_1BB871338();

        swift_release();
        goto LABEL_46;
      }

    }
    v49 = (char *)objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugFormatInventoryStatusView()), sel_init);
    goto LABEL_45;
  }
LABEL_46:
  swift_release_n();

  return v63;
}

void sub_1BB22D5B4(uint64_t a1, uint64_t a2)
{
  void *v2;
  void *v3;
  uint64_t v6;
  uint64_t v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  void *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t inited;
  uint64_t v16;
  char *v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  uint64_t v25;

  v3 = v2;
  v6 = type metadata accessor for DebugFormatCompilerResultOutput();
  MEMORY[0x1E0C80A78](v6);
  v8 = (void **)((char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1 && *(_QWORD *)(a1 + 16))
  {
    v9 = type metadata accessor for DebugFormatCompilerResultEntry();
    v10 = *(unsigned __int8 *)(*(_QWORD *)(v9 - 8) + 80);
    sub_1BA4C2DD8(a1 + *(int *)(v9 + 20) + ((v10 + 32) & ~v10), (uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        v12 = *v8;
      }
      else
      {
        sub_1BAF05E00();
        v12 = *(void **)((char *)v8 + *(int *)(v13 + 48));
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatFile);
      }
      v14 = sub_1BB6DF1B8(v12, 0);

      type metadata accessor for DebugFormatInspectorPaneViewController();
      sub_1BA4AD288(0, (unint64_t *)&unk_1EF2B13D0, (uint64_t)&type metadata for FormatInspection, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
      *(_QWORD *)(inited + 32) = v14;
      v16 = swift_retain();
      v17 = (char *)sub_1BB2099E8(v16, inited, 0, 0);
      v18 = objc_msgSend(v17, sel_navigationItem);
      v19 = (void *)sub_1BB872970();
      objc_msgSend(v18, sel_setTitle_, v19);

      *(_OWORD *)&v17[OBJC_IVAR____TtC8NewsFeed38DebugFormatInspectorPaneViewController_preferredSize] = xmmword_1BB8FB6E0;
      v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v17);
      objc_msgSend(v20, sel_setModalPresentationStyle_, 7);
      v21 = objc_msgSend(v20, sel_popoverPresentationController);
      if (v21)
      {
        v22 = v21;
        objc_msgSend(v21, sel_setSourceView_, a2);

      }
      v23 = objc_msgSend(v20, sel_popoverPresentationController);
      if (v23)
      {
        v24 = v23;
        objc_msgSend(v23, sel_setPermittedArrowDirections_, 4);

      }
      objc_msgSend(v3, sel_presentViewController_animated_completion_, v20, 1, 0);

    }
    else
    {
      sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultOutput);
    }
  }
}

void sub_1BB22D864(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, void (*a5)(uint64_t, id))
{
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;

  v9 = a1 + 16;
  swift_beginAccess();
  v10 = MEMORY[0x1BCCE5D40](v9);
  if (v10)
  {
    v11 = (void *)v10;
    swift_beginAccess();
    v12 = MEMORY[0x1BCCE5D40](a2 + 16);
    if (v12)
    {
      v13 = (void *)v12;
      v14 = *(id *)(v12 + *a4);
      a5(a3, v14);

      v11 = v14;
    }

  }
}

void sub_1BB22D924(uint64_t a1, uint64_t a2)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t (*v19)();
  unint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  Class v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  id v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v5 = type metadata accessor for DebugFormatCacheFile();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - v10;
  if (a1 && *(_QWORD *)(a1 + 16))
  {
    v12 = type metadata accessor for DebugFormatCompilerResultEntry();
    v13 = *(unsigned __int8 *)(*(_QWORD *)(v12 - 8) + 80);
    v14 = *(_QWORD *)(a1 + ((v13 + 32) & ~v13) + *(int *)(v12 + 24));
    v15 = MEMORY[0x1E0DEE9D8];
    v43 = MEMORY[0x1E0DEE9D8];
    v16 = *(_QWORD *)(v14 + 16);
    swift_bridgeObjectRetain();
    if (v16)
    {
      v39 = a2;
      v40 = v2;
      v17 = 0;
      v18 = MEMORY[0x1E0DEE9D8];
      v19 = type metadata accessor for DebugFormatCacheFile;
      v41 = v6;
      v42 = v16;
      while (v17 < *(_QWORD *)(v14 + 16))
      {
        v20 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
        v21 = *(_QWORD *)(v6 + 72);
        sub_1BA4C2DD8(v14 + v20 + v21 * v17, (uint64_t)v11, (uint64_t (*)(_QWORD))v19);
        if (v11[24] == 1)
        {
          v22 = v19;
          sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(_QWORD))v19);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1BAC7AEDC(0, *(_QWORD *)(v18 + 16) + 1, 1);
          v18 = v43;
          v24 = *(_QWORD *)(v43 + 16);
          v23 = *(_QWORD *)(v43 + 24);
          if (v24 >= v23 >> 1)
          {
            sub_1BAC7AEDC(v23 > 1, v24 + 1, 1);
            v18 = v43;
          }
          *(_QWORD *)(v18 + 16) = v24 + 1;
          v25 = v18 + v20 + v24 * v21;
          v19 = v22;
          sub_1BA5193C4((uint64_t)v8, v25, (uint64_t (*)(_QWORD))v22);
          v6 = v41;
          v16 = v42;
        }
        else
        {
          sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))v19);
        }
        if (v16 == ++v17)
        {
          v15 = v43;
          a2 = v39;
          v2 = v40;
          goto LABEL_15;
        }
      }
      __break(1u);
    }
    else
    {
LABEL_15:
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v15 + 16))
      {
        v26 = v2;
        type metadata accessor for DebugFormatFileTreeModel();
        swift_allocObject();
        v27 = swift_retain();
        sub_1BB26C5F0(v27, v15, 0);
        swift_release();
        sub_1BA4A2870((unint64_t *)&qword_1EF2BE458, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatFileTreeModel, (uint64_t)&unk_1BB8FD238);
        swift_retain();
        v43 = sub_1BB87228C();
        v44 = v28;
        sub_1BB230D94();
        v30 = objc_allocWithZone(v29);
        v31 = (void *)sub_1BB872370();
        v32 = objc_msgSend(v31, sel_navigationItem);
        v33 = (void *)sub_1BB872970();
        objc_msgSend(v32, sel_setTitle_, v33);

        objc_msgSend(v31, sel_setPreferredContentSize_, 460.0, 0.0);
        v34 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DebugNavigationController()), sel_initWithRootViewController_, v31);
        objc_msgSend(v34, sel_setModalPresentationStyle_, 7);
        v35 = objc_msgSend(v34, sel_popoverPresentationController);
        if (v35)
        {
          v36 = v35;
          objc_msgSend(v35, sel_setSourceView_, a2);

        }
        v37 = objc_msgSend(v34, sel_popoverPresentationController, v39, v40);
        if (v37)
        {
          v38 = v37;
          objc_msgSend(v37, sel_setPermittedArrowDirections_, 4);

        }
        objc_msgSend(v26, sel_presentViewController_animated_completion_, v34, 1, 0);
        swift_release();

      }
      else
      {
        swift_release();
      }
    }
  }
}

void sub_1BB22DF7C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  _BYTE __dst[336];
  _BYTE v6[336];

  v1 = a1 + 16;
  swift_beginAccess();
  v2 = MEMORY[0x1BCCE5D40](v1);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)(v2 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages);
    memcpy(__dst, (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages), sizeof(__dst));
    memcpy(v6, v4, sizeof(v6));
    memcpy(v4, __dst, 0x150uLL);
    sub_1BAF8EA94((uint64_t)__dst);
    sub_1BAF8FB4C((uint64_t)v6);
    sub_1BB2285D0();

  }
}

id sub_1BB22E038(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  id v13;
  void *v14;
  uint64_t v16;

  v8 = sub_1BB86CBE0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB86CBA4();
  v12 = a3;
  v13 = a1;
  v14 = (void *)a5(v11);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v14;
}

char *sub_1BB22E0F8(char *result, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  void *v15;
  char *v16;
  id v17;
  id v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  _BYTE v29[56];
  _BYTE v30[8];
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;

  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  v3 = *(_QWORD *)(v2 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  if (*(_QWORD *)(v3 + 16) <= a2)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  v4 = (_OWORD *)(v3 + (a2 << 6));
  v5 = v4[2];
  v6 = v4[3];
  v7 = v4[5];
  v27 = v4[4];
  v28 = v7;
  v25 = v5;
  v26 = v6;
  sub_1BB230144((uint64_t)&v25, (uint64_t)v29);
  swift_beginAccess();
  swift_retain();
  sub_1BB230180((uint64_t)&v25);
  sub_1BB86E494();
  swift_release();
  v8 = v32;
  sub_1BB230144((uint64_t)v29, (uint64_t)&v32);
  if (v33)
  {
    if (v33 != 1)
      __asm { BR              X10 }
    v9 = 0x64656E6E6970;
    v10 = 0xE600000000000000;
  }
  else
  {
    v9 = 0x64657463656C6573;
    v10 = 0xE800000000000000;
  }
  sub_1BA761FE4(v9, v10, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for DebugJournalHeaderView();
  v11 = (void *)sub_1BB873210();
  v12 = objc_msgSend(v11, sel_textLabel);
  if (v12)
  {
    v13 = v12;
    sub_1BB230144((uint64_t)v29, (uint64_t)v30);
    if (v31 > 1)
      __asm { BR              X10 }
    sub_1BB872A24();
    swift_bridgeObjectRelease();
    v14 = (void *)sub_1BB872970();
    swift_bridgeObjectRelease();
    objc_msgSend(v13, sel_setText_, v14);

  }
  v15 = (void *)objc_opt_self();
  v16 = v11;
  v17 = objc_msgSend(v15, sel_systemBlueColor);
  objc_msgSend(v16, sel_setTintColor_, v17);

  v18 = *(id *)&v16[OBJC_IVAR____TtC8NewsFeed22DebugJournalHeaderView_showHideLabel];
  v19 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setText_, v19);

  v20 = (void *)sub_1BB86F898();
  v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v22 = swift_allocObject();
  *(_QWORD *)(v22 + 16) = v21;
  v23 = v26;
  *(_OWORD *)(v22 + 24) = v25;
  *(_OWORD *)(v22 + 40) = v23;
  v24 = v28;
  *(_OWORD *)(v22 + 56) = v27;
  *(_OWORD *)(v22 + 72) = v24;

  swift_release();
  return v16;
}

void sub_1BB22E574()
{
  sub_1BB873EAC();
  __break(1u);
  JUMPOUT(0x1BB22E5C0);
}

void sub_1BB22E5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE __dst[336];
  _BYTE v9[336];
  _BYTE v10[56];
  _BYTE v11[8];
  uint64_t v12;

  v3 = a1 + 16;
  swift_beginAccess();
  v4 = MEMORY[0x1BCCE5D40](v3);
  if (v4)
  {
    v5 = (char *)v4;
    sub_1BB230144(a2, (uint64_t)v10);
    sub_1BB230144((uint64_t)v10, (uint64_t)v11);
    if (v12)
    {
      if (v12 != 1)
        __asm { BR              X10 }
      v6 = 0xE600000000000000;
      v7 = 0x64656E6E6970;
    }
    else
    {
      v6 = 0xE800000000000000;
      v7 = 0x64657463656C6573;
    }
    swift_retain();
    sub_1BB23316C(v7, v6);
    swift_release();
    swift_bridgeObjectRelease();
    memcpy(__dst, &v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], sizeof(__dst));
    memcpy(v9, &v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], sizeof(v9));
    memcpy(&v5[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages], __dst, 0x150uLL);
    sub_1BAF8EA94((uint64_t)__dst);
    sub_1BAF8FB4C((uint64_t)v9);
    sub_1BB2285D0();

  }
}

void sub_1BB22E7C4()
{
  sub_1BB873EAC();
  __break(1u);
}

void sub_1BB22E870(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  double v6;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BYTE v16[336];
  _QWORD v17[42];

  v2 = v1;
  v4 = sub_1BB86BE54();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = objc_msgSend(a1, sel_searchBar, v6);
  v10 = objc_msgSend(v9, sel_text);

  if (v10)
  {
    v11 = sub_1BB8729A0();
    v13 = v12;

    v17[0] = v11;
    v17[1] = v13;
    sub_1BB86BDA0();
    sub_1BA7114A0();
    v10 = (id)sub_1BB873AEC();
    v15 = v14;
    (*(void (**)(_BYTE *, uint64_t))(v5 + 8))(v8, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    v15 = 0xE000000000000000;
  }
  v17[0] = v10;
  v17[1] = v15;
  swift_retain();
  sub_1BB86D2C4();
  swift_release();
  memcpy(v16, (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages), sizeof(v16));
  memcpy(v17, (const void *)(v2 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages), sizeof(v17));
  sub_1BAF8EA94((uint64_t)v16);
  sub_1BAF8FB4C((uint64_t)v17);
  sub_1BB2285D0();
}

uint64_t sub_1BB22EA64()
{
  return 0x736567616B636150;
}

id sub_1BB22EA7C()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  return v1;
}

id sub_1BB22EAE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  void *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  double v12;
  double v13;
  double v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  double v29;
  double v30;
  double v31;
  double v32;
  double v33;
  double v34;
  double v35;
  double v36;
  _QWORD v37[4];
  _BYTE v38[16];
  uint64_t v39;
  _QWORD *v40;

  v8 = *(void **)(a1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView);
  v9 = sub_1BB8731F8();
  swift_bridgeObjectRetain();
  v10 = sub_1BB22F564(v9, a2);
  swift_bridgeObjectRelease();
  v39 = a1;
  v11 = sub_1BB22F7A8(v10, v9, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, char *))sub_1BB22FF64, (uint64_t)v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_contentOffset);
  v13 = v12;
  v15 = v14;
  objc_msgSend(v8, sel_reloadData);
  sub_1BB22B034();
  if ((a3 & 1) == 0)
    return (id)swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_setNeedsLayout);
  objc_msgSend(v8, sel_layoutIfNeeded);
  objc_msgSend(v8, sel_setContentOffset_, v13, v15);
  v16 = sub_1BB8731F8();
  swift_bridgeObjectRetain();
  v17 = sub_1BB22F564(v16, a4);
  v18 = swift_bridgeObjectRelease();
  MEMORY[0x1E0C80A78](v18);
  v37[2] = a1;
  v19 = sub_1BB22F7A8(v17, v16, (void (*)(_QWORD *__return_ptr, uint64_t, uint64_t, char *))sub_1BB230F24, (uint64_t)v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v40 = v19;
  sub_1BA4AD288(0, &qword_1EF2BE420, (uint64_t)&type metadata for DebugFormatInventoryViewController.VisibleItemFrame, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BB22FF6C();
  sub_1BB22FFCC();
  v20 = sub_1BB872BBC();
  swift_bridgeObjectRelease();
  v21 = v11[2];
  if (!v21)
  {
LABEL_8:
    swift_bridgeObjectRelease();
    return (id)swift_bridgeObjectRelease();
  }
  v22 = (double *)(v11 + 7);
  while (!*(_QWORD *)(v20 + 16))
  {
LABEL_4:
    v22 += 6;
    if (!--v21)
      goto LABEL_8;
  }
  v23 = *v22;
  v25 = *((_QWORD *)v22 - 3);
  v24 = *((_QWORD *)v22 - 2);
  swift_bridgeObjectRetain_n();
  v26 = sub_1BA6E35A8(v25, v24);
  if ((v27 & 1) == 0)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_4;
  }
  v29 = *(double *)(*(_QWORD *)(v20 + 56) + 48 * v26 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(v8, sel_contentOffset);
  v31 = v30;
  v33 = v32;
  objc_msgSend(v8, sel_adjustedContentInset);
  v35 = v34;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v36 = v33 - (v23 - v29);
  if (v36 < -v35)
    v36 = -v35;
  return objc_msgSend(v8, sel_setContentOffset_, v31, v36);
}

unint64_t sub_1BB22EDFC@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  unint64_t result;
  _QWORD *v5;
  unint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (result >= *(_QWORD *)(a1 + 16))
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v12 = a2;
  v5 = (_QWORD *)(a1 + (result << 6));
  v6 = v5[5];
  v7 = v5[11];
  if (v6 > 1)
    __asm { BR              X10 }
  v11 = v5[4];
  sub_1BB22FE9C(v11, v6);
  swift_bridgeObjectRetain();
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v9);
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
    goto LABEL_10;
  if (result < *(_QWORD *)(v7 + 16))
  {
    swift_retain();
    sub_1BB47DAC8();
    swift_release();
    sub_1BB872AFC(v10);
    sub_1BB230010(v11, v6);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *v12 = 0;
    v12[1] = 0xE000000000000000;
    return result;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1BB22F034()
{
  sub_1BB873EAC();
  __break(1u);
  JUMPOUT(0x1BB22F080);
}

void sub_1BB22F09C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v7 = *(void **)(a3 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView);
  v8 = (void *)sub_1BB86CB8C();
  v9 = objc_msgSend(v7, sel_cellForRowAtIndexPath_, v8);

  if (v9)
  {
    objc_msgSend(v9, sel_frame);
    v11 = v10;
    v13 = v12;
    v15 = v14;
    v17 = v16;

    swift_bridgeObjectRetain();
  }
  else
  {
    a1 = 0;
    a2 = 0;
    v11 = 0;
    v13 = 0;
    v15 = 0;
    v17 = 0;
  }
  *a4 = a1;
  a4[1] = a2;
  a4[2] = v11;
  a4[3] = v13;
  a4[4] = v15;
  a4[5] = v17;
}

uint64_t sub_1BB22F174(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v26;

  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if ((v26 & 1) != 0
    || (v3 = a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions,
        v4 = *(_QWORD *)(v3 + *(int *)(type metadata accessor for FormatCompilerOptions(0) + 32)),
        !*(_QWORD *)(v4 + 16)))
  {
LABEL_10:
    v22 = *(_QWORD *)(a1 + 16);
    if (!v22)
      return 1;
    v10 = *(_QWORD *)(a1 + 32);
    v21 = a1 + 32;
    v11 = *(_QWORD *)(v10 + 16);
    if (!v11)
      return 1;
    v12 = a2 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory__name;
    swift_bridgeObjectRetain();
    v13 = 1;
LABEL_13:
    v23 = v13;
    swift_bridgeObjectRetain();
    result = swift_beginAccess();
    if (!*(_QWORD *)(v10 + 16))
    {
LABEL_35:
      __break(1u);
      return result;
    }
    v15 = 0;
    v16 = v10 + 40;
    v17 = v11 - 1;
    v18 = 1;
    v24 = v11 - 1;
    while (1)
    {
      if ((v18 & 1) != 0)
      {
        if (*(_QWORD *)(v12 + 8))
        {
          sub_1BB872A0C();
          sub_1BA7114A0();
          swift_bridgeObjectRetain();
          v19 = sub_1BB873B40();
          swift_bridgeObjectRelease();
          if ((v19 & 1) != 0)
          {
            result = swift_bridgeObjectRelease();
            v17 = v24;
LABEL_21:
            if (v17 == v15)
            {
              swift_bridgeObjectRelease();
LABEL_30:
              swift_bridgeObjectRelease();
              return 1;
            }
            v18 = 1;
            goto LABEL_15;
          }
          v20 = sub_1BB873B40();
          result = swift_bridgeObjectRelease();
          v17 = v24;
          if ((v20 & 1) != 0)
            goto LABEL_21;
        }
        else
        {
          sub_1BA7114A0();
          result = sub_1BB873B40();
          if ((result & 1) != 0)
            goto LABEL_21;
        }
      }
      if (v17 == v15)
      {
        swift_bridgeObjectRelease();
        if (v23 == v22)
          goto LABEL_34;
        v10 = *(_QWORD *)(v21 + 8 * v23);
        v13 = v23 + 1;
        v11 = *(_QWORD *)(v10 + 16);
        if (!v11)
          goto LABEL_30;
        goto LABEL_13;
      }
      v18 = 0;
LABEL_15:
      ++v15;
      v16 += 16;
      if (v15 >= *(_QWORD *)(v10 + 16))
        goto LABEL_35;
    }
  }
  sub_1BB8745CC();
  swift_bridgeObjectRetain();
  sub_1BB872A90();
  v5 = sub_1BB874608();
  v6 = -1 << *(_BYTE *)(v4 + 32);
  v7 = v5 & ~v6;
  if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  v8 = ~v6;
  while (!*(_BYTE *)(*(_QWORD *)(v4 + 48) + v7) || *(_BYTE *)(*(_QWORD *)(v4 + 48) + v7) == 1)
  {
    v9 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0)
      goto LABEL_34;
    v7 = (v7 + 1) & v8;
    if (((*(_QWORD *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      goto LABEL_9;
  }
  swift_bridgeObjectRelease();
LABEL_34:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB22F564(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD v17[2];
  uint64_t v18;

  v3 = v2;
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x1E0DEE9D8];
  if (v4)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1BA7447E8(0, v4, 0);
    v5 = v18;
    v7 = *(_QWORD *)(sub_1BB86CBE0() - 8);
    v8 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v9 = *(_QWORD *)(v7 + 72);
    while (1)
    {
      sub_1BB22EDFC(a2, v17);
      if (v3)
        break;
      v3 = 0;
      v10 = v17[0];
      v11 = v17[1];
      v18 = v5;
      v13 = *(_QWORD *)(v5 + 16);
      v12 = *(_QWORD *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1BA7447E8(v12 > 1, v13 + 1, 1);
        v5 = v18;
      }
      *(_QWORD *)(v5 + 16) = v13 + 1;
      v14 = v5 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v10;
      *(_QWORD *)(v14 + 40) = v11;
      v8 += v9;
      if (!--v4)
        return v5;
    }
    swift_release();
  }
  return v5;
}

uint64_t sub_1BB22F680(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  result = MEMORY[0x1E0DEE9D8];
  v11 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(_QWORD *)(a2 + 16))
      {
        v7 = *(v6 - 1);
        v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_1BA6E35A8(v7, v8);
        if ((v9 & 1) != 0)
        {
          swift_retain();
          v10 = swift_bridgeObjectRelease_n();
          MEMORY[0x1BCCE36AC](v10);
          if (*(_QWORD *)(v11 + 16) >= *(_QWORD *)(v11 + 24) >> 1)
            sub_1BB872E44();
          sub_1BB872E8C();
          sub_1BB872DCC();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return v11;
  }
  return result;
}

_QWORD *sub_1BB22F7A8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD *__return_ptr, uint64_t, uint64_t, char *), uint64_t a4)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  _QWORD v37[2];
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  char *v44;
  void (*v45)(_QWORD *__return_ptr, uint64_t, uint64_t, char *);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  _QWORD v49[6];
  _BYTE v50[8];
  uint64_t v51;
  _QWORD *v52;

  v45 = a3;
  v46 = a4;
  sub_1BA4B07F0(0, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v48 = (char *)v37 - v8;
  v9 = sub_1BB86CBE0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v44 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB230084();
  v43 = v12;
  MEMORY[0x1E0C80A78](v12);
  v42 = (_QWORD *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = *(_QWORD *)(a1 + 16);
  if (!v41)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v37[1] = v4;
  v47 = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = 0;
  v37[0] = a1;
  v15 = (uint64_t *)(a1 + 40);
  v16 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v17 = a2;
  v18 = (uint64_t)v48;
  v40 = a2;
  v39 = v9;
  v38 = v10;
  while (v47 != v14)
  {
    v20 = *(v15 - 1);
    v19 = *v15;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(v18, v17+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v14, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v18, 0, 1, v9);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v18, 1, v9) == 1)
      goto LABEL_15;
    v52 = v16;
    v21 = v18;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 32);
    v23 = v44;
    v22(v44, v21, v9);
    v24 = *(int *)(v43 + 48);
    v25 = (uint64_t)v42;
    v26 = (char *)v42 + v24;
    *v42 = v20;
    *(_QWORD *)(v25 + 8) = v19;
    v22((char *)(v25 + v24), (uint64_t)v23, v9);
    swift_bridgeObjectRetain();
    v45(v49, v20, v19, v26);
    v27 = v49[0];
    v28 = v49[1];
    v29 = v49[2];
    v30 = v49[3];
    v31 = v49[4];
    v32 = v49[5];
    sub_1BA4A2E80(v25, (uint64_t (*)(_QWORD))sub_1BB230084);
    sub_1BB2300E8((uint64_t)v49, (uint64_t)v50);
    if (v51)
    {
      v16 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v16 = sub_1BB3932D8(0, v16[2] + 1, 1, v16);
      v9 = v39;
      v10 = v38;
      v34 = v16[2];
      v33 = v16[3];
      if (v34 >= v33 >> 1)
        v16 = sub_1BB3932D8((_QWORD *)(v33 > 1), v34 + 1, 1, v16);
      v16[2] = v34 + 1;
      v35 = &v16[6 * v34];
      v35[4] = v27;
      v35[5] = v28;
      v35[6] = v29;
      v35[7] = v30;
      v35[8] = v31;
      v35[9] = v32;
    }
    else
    {
      v16 = v52;
      v9 = v39;
      v10 = v38;
    }
    ++v14;
    v15 += 2;
    v17 = v40;
    v18 = (uint64_t)v48;
    if (v41 == v14)
      goto LABEL_16;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
LABEL_15:
  sub_1BA5C699C(v18, &qword_1ED3B0568, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1658]);
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1BB22FB68(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v11 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_16:
    v10 = sub_1BB873F30();
    if (v10)
      goto LABEL_3;
  }
  else
  {
    v10 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v10)
    {
LABEL_3:
      v5 = 0;
      v6 = v10;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v7 = MEMORY[0x1BCCE4630](v5, a1);
          v8 = v5 + 1;
          if (__OFADD__(v5, 1))
          {
LABEL_13:
            __break(1u);
            return v11;
          }
        }
        else
        {
          if (v5 >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_16;
          }
          v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
          swift_retain();
          v8 = v5 + 1;
          if (__OFADD__(v5, 1))
            goto LABEL_13;
        }
        if ((sub_1BB22F174(a3, *(_QWORD *)(v7 + 16)) & 1) != 0)
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          v6 = v10;
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        else
        {
          swift_release();
        }
        ++v5;
        if (v8 == v6)
          return v11;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

id sub_1BB22FCF0(uint64_t a1)
{
  void *v1;
  objc_class *ObjectType;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  objc_super v13;
  _BYTE __dst[336];

  ObjectType = (objc_class *)swift_getObjectType();
  v4 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages;
  v5 = qword_1EF2A7490;
  v6 = v1;
  if (v5 != -1)
    swift_once();
  memcpy(__dst, &byte_1EF3D09C0, sizeof(__dst));
  memmove(&v6[v4], &byte_1EF3D09C0, 0x150uLL);
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections] = MEMORY[0x1E0DEE9D8];
  v7 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView;
  v8 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  sub_1BAF8EA94((uint64_t)__dst);
  *(_QWORD *)&v6[v7] = objc_msgSend(v8, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v9 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v6[v9] = sub_1BB86FDD8();
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___uploadBarButtonItem] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___versionBarButtonItem] = 0;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___createPackageBarButtonItem] = 0;
  v10 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)&v6[v10] = v11;
  *(_QWORD *)&v6[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_editor] = a1;
  swift_retain();

  v13.receiver = v6;
  v13.super_class = ObjectType;
  return objc_msgSendSuper2(&v13, sel_initWithNibName_bundle_, 0, 0);
}

uint64_t sub_1BB22FE9C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BB22FF10()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BB22FF44()
{
  uint64_t v0;

  return sub_1BB22EAE8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_BYTE *)(v0 + 32), *(_QWORD *)(v0 + 40));
}

uint64_t sub_1BB22FF54()
{
  return swift_deallocObject();
}

void sub_1BB22FF64(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;

  sub_1BB22F09C(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

unint64_t sub_1BB22FF6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BE428;
  if (!qword_1EF2BE428)
  {
    sub_1BA4AD288(255, &qword_1EF2BE420, (uint64_t)&type metadata for DebugFormatInventoryViewController.VisibleItemFrame, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF38], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BE428);
  }
  return result;
}

unint64_t sub_1BB22FFCC()
{
  unint64_t result;

  result = qword_1EF2BE430;
  if (!qword_1EF2BE430)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FB6B4, &type metadata for DebugFormatInventoryViewController.VisibleItemFrame);
    atomic_store(result, (unint64_t *)&qword_1EF2BE430);
  }
  return result;
}

uint64_t sub_1BB230010(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1BB230084()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BE440)
  {
    sub_1BB86CBE0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BE440);
  }
}

uint64_t sub_1BB2300E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, (unint64_t *)&unk_1EF2BE448, (uint64_t)&type metadata for DebugFormatInventoryViewController.VisibleItemFrame, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB230144(uint64_t a1, uint64_t a2)
{
  __swift_memcpy56_8(a2, a1);
  return a2;
}

uint64_t sub_1BB230180(uint64_t a1)
{
  sub_1BB22FE9C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB2301C0()
{
  uint64_t v0;

  swift_release();
  if (*(_QWORD *)(v0 + 32) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB230224()
{
  uint64_t v0;

  sub_1BB22E5F8(*(_QWORD *)(v0 + 16), v0 + 24);
}

void sub_1BB230230()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE __dst[336];

  v1 = v0;
  v2 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_packages;
  if (qword_1EF2A7490 != -1)
    swift_once();
  memcpy(__dst, &byte_1EF3D09C0, sizeof(__dst));
  memmove(&v1[v2], &byte_1EF3D09C0, 0x150uLL);
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections] = MEMORY[0x1E0DEE9D8];
  v3 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_tableView;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3D48]);
  sub_1BAF8EA94((uint64_t)__dst);
  *(_QWORD *)&v1[v3] = objc_msgSend(v4, sel_initWithFrame_style_, 1, 0.0, 0.0, 0.0, 0.0);
  v5 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_coverViewManager;
  sub_1BB86FDE4();
  swift_allocObject();
  *(_QWORD *)&v1[v5] = sub_1BB86FDD8();
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___uploadBarButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___versionBarButtonItem] = 0;
  *(_QWORD *)&v1[OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController____lazy_storage___createPackageBarButtonItem] = 0;
  v6 = OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_styler;
  type metadata accessor for DebugFormatStyler();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)&v1[v6] = v7;

  sub_1BB873EAC();
  __break(1u);
}

unint64_t sub_1BB2303BC(unint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  v2 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  if (*(_QWORD *)(v2 + 16) <= result)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  v3 = (_QWORD *)(v2 + (result << 6));
  v4 = v3[4];
  v5 = v3[5];
  v6 = v3[11];
  swift_beginAccess();
  swift_retain();
  sub_1BB22FE9C(v4, v5);
  swift_bridgeObjectRetain();
  sub_1BB86E494();
  swift_release();
  if (v5)
  {
    if (v5 != 1)
      __asm { BR              X10 }
    v7 = 0xE600000000000000;
    v8 = 0x64656E6E6970;
  }
  else
  {
    v7 = 0xE800000000000000;
    v8 = 0x64657463656C6573;
  }
  v9 = sub_1BA761FE4(v8, v7, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
    v10 = 0;
  else
    v10 = *(_QWORD *)(v6 + 16);
  sub_1BB230010(v4, v5);
  swift_bridgeObjectRelease();
  return v10;
}

void sub_1BB2305D4()
{
  sub_1BB873EAC();
  __break(1u);
  JUMPOUT(0x1BB230620);
}

void sub_1BB23063C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;

  v1 = sub_1BB86CBD4();
  if ((v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
    if (v1 < *(_QWORD *)(v2 + 16))
    {
      v3 = (_QWORD *)(v2 + (v1 << 6));
      v4 = v3[11];
      sub_1BB22FE9C(v3[4], v3[5]);
      swift_bridgeObjectRetain();
      v5 = sub_1BB86CBC8();
      if ((v5 & 0x8000000000000000) == 0)
      {
        if (v5 < *(_QWORD *)(v4 + 16))
          __asm { BR              X10 }
LABEL_9:
        __break(1u);
        JUMPOUT(0x1BB230930);
      }
LABEL_8:
      __break(1u);
      goto LABEL_9;
    }
  }
  __break(1u);
  goto LABEL_8;
}

unint64_t sub_1BB23094C()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v3 = *(_QWORD *)(v2 + (result << 6) + 88);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < *(_QWORD *)(v3 + 16))
  {
    v4 = *(_QWORD *)(v3 + 8 * result + 32);
    swift_retain();
    swift_bridgeObjectRelease();
    type metadata accessor for DebugFormatInventoryPinAction();
    v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain_n();
    v6 = swift_retain();
    v7 = sub_1BB47DBFC(v6, v4, (uint64_t)sub_1BB230D08, v5);
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v8 + 32) = v7;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
    v9 = v7;
    v10 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v11 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v10);

    objc_msgSend(v11, sel_setPerformsFirstActionWithFullSwipe_, 1);
    swift_release_n();

    return (unint64_t)v11;
  }
LABEL_9:
  __break(1u);
  return result;
}

unint64_t sub_1BB230B38()
{
  uint64_t v0;
  unint64_t result;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  id v9;
  void *v10;

  result = sub_1BB86CBD4();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed34DebugFormatInventoryViewController_sections);
  if (result >= *(_QWORD *)(v2 + 16))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  v3 = *(_QWORD *)(v2 + (result << 6) + 88);
  swift_bridgeObjectRetain();
  result = sub_1BB86CBC8();
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (result >= *(_QWORD *)(v3 + 16))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  v4 = *(_QWORD *)(v3 + 8 * result + 32);
  swift_retain();
  swift_bridgeObjectRelease();
  type metadata accessor for DebugFormatInventoryThemeAction();
  swift_retain_n();
  v5 = swift_retain();
  sub_1BB765748(v5, v4);
  v7 = v6;
  if (v6)
  {
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1BB8856E0;
    *(_QWORD *)(v8 + 32) = v7;
    sub_1BB872DCC();
    sub_1BA49A224(0, (unint64_t *)&unk_1EF2BDFC0);
    v9 = v7;
    v10 = (void *)sub_1BB872D9C();
    swift_bridgeObjectRelease();
    v7 = objc_msgSend((id)objc_opt_self(), sel_configurationWithActions_, v10);

    objc_msgSend(v7, sel_setPerformsFirstActionWithFullSwipe_, 1);
    swift_release_n();

  }
  else
  {
    swift_release_n();
  }
  return (unint64_t)v7;
}

void sub_1BB230D08()
{
  uint64_t v0;

  sub_1BB22DF7C(v0);
}

uint64_t sub_1BB230D10()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_1BB230D38()
{
  uint64_t *v0;

  sub_1BB22D864(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_errorButton, (void (*)(uint64_t, id))sub_1BB22D5B4);
}

void sub_1BB230D68()
{
  uint64_t *v0;

  sub_1BB22D864(v0[2], v0[3], v0[4], &OBJC_IVAR____TtC8NewsFeed30DebugFormatInventoryStatusView_changesButton, (void (*)(uint64_t, id))sub_1BB22D924);
}

void sub_1BB230D94()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BE460)
  {
    sub_1BB230DEC();
    v0 = sub_1BB87237C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BE460);
  }
}

unint64_t sub_1BB230DEC()
{
  unint64_t result;

  result = qword_1EF2BE468;
  if (!qword_1EF2BE468)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB925A48, &type metadata for DebugFormatFileTreeView);
    atomic_store(result, (unint64_t *)&qword_1EF2BE468);
  }
  return result;
}

void sub_1BB230E30()
{
  uint64_t v0;

  sub_1BB22C270(v0);
}

uint64_t initializeWithCopy for DebugFormatInventoryViewController.VisibleItemFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  __int128 v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for DebugFormatInventoryViewController.VisibleItemFrame(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  return a1;
}

uint64_t assignWithTake for DebugFormatInventoryViewController.VisibleItemFrame(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatInventoryViewController.VisibleItemFrame()
{
  return &type metadata for DebugFormatInventoryViewController.VisibleItemFrame;
}

uint64_t sub_1BB230F34()
{
  char v1;
  char v2;
  _BYTE v3[4];
  uint64_t v4;

  v4 = sub_1BAC86D0C(MEMORY[0x1E0DEE9D8]);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v3[3] == 1)
    sub_1BA9DA954(&v1, 0);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v3[2] == 1)
    sub_1BA9DA954(&v2, 1);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v3[1] == 1)
    sub_1BA9DA954(v3, 2);
  return v4;
}

uint64_t sub_1BB23102C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  v3 = a2[1];
  if (*(_BYTE *)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) != 6)
    goto LABEL_12;
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v6 = *(_QWORD *)(a1 + 16);
  v5 = *(_QWORD *)(a1 + 24);
  if (v10 == v6 && v11 == v5)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
      goto LABEL_12;
  }
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v10 != v4 || v11 != v3)
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v8 & 1) != 0)
      goto LABEL_11;
LABEL_12:
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BB86D2C4();
    swift_release();
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
LABEL_11:
  swift_retain();
  sub_1BB86D2C4();
  swift_release();
LABEL_13:
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t sub_1BB231224()
{
  uint64_t v1;

  swift_retain();
  sub_1BB86E494();
  swift_release();
  return v1;
}

uint64_t sub_1BB23126C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1BB87183C();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB53290C(a1, v12);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v5 = (id)sub_1BA901EAC(v12);
  MEMORY[0x1BCCE3D00]();
  sub_1BB871818();
  MEMORY[0x1BCCE3D0C](v4);
  swift_retain();
  sub_1BB86D2B8();
  v6 = swift_release();
  MEMORY[0x1BCCE3D00](v6);
  sub_1BB8717F4();
  MEMORY[0x1BCCE3D0C](v4);
  swift_retain();
  sub_1BB86D2B8();
  v7 = swift_release();
  MEMORY[0x1BCCE3D00](v7);
  sub_1BB8717C4();
  MEMORY[0x1BCCE3D0C](v4);
  swift_retain();
  sub_1BB86D2B8();
  v8 = swift_release();
  MEMORY[0x1BCCE3D00](v8);
  sub_1BB87180C();
  MEMORY[0x1BCCE3D0C](v4);
  swift_retain();
  sub_1BB86D2B8();
  v9 = swift_release();
  MEMORY[0x1BCCE3D00](v9);
  sub_1BB8717D0();
  return MEMORY[0x1BCCE3D0C](v4);
}

uint64_t sub_1BB2314D8(uint64_t a1, uint64_t a2, char a3)
{
  char v5;
  char v6;
  uint64_t v7;
  _QWORD *v9;

  if ((a3 & 1) == 0)
  {
    sub_1BAF92B74();
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    v5 = sub_1BAAD5D1C(a1, a2, v9);
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      goto LABEL_5;
LABEL_6:
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
    *(_QWORD *)(v7 + 32) = a1;
    *(_QWORD *)(v7 + 40) = a2;
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    sub_1BA6E9BD8((uint64_t)v9);
    goto LABEL_7;
  }
  sub_1BAF92B74();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  v6 = sub_1BAAD5D1C(a1, a2, v9);
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
    goto LABEL_6;
LABEL_5:
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB23AA28((uint64_t)v9, a1, a2);
  sub_1BAA49EA8();
  swift_bridgeObjectRelease();
LABEL_7:
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t sub_1BB2316FC(unint64_t a1, int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  Class v30;
  id v31;
  id v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t i;
  id v44;
  void *v45;
  id v46;
  void *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  Class v75;
  id v76;
  uint64_t v77;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unint64_t v82;
  char *v83;
  char *v84;
  unint64_t v85;
  uint64_t v86;
  id v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  id v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;

  v4 = v3;
  v8 = type metadata accessor for FormatDerivedDataCompilerSettings();
  v94 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v92 = (uint64_t)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v93 = v9;
  MEMORY[0x1E0C80A78](v10);
  v91 = (char *)&v79 - v11;
  v95 = sub_1BB86EB84();
  v12 = *(_QWORD *)(v95 - 8);
  MEMORY[0x1E0C80A78](v95);
  v14 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v15);
  v84 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0B4CD8(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = type metadata accessor for DebugFormatEditorLayoutContext();
  v20 = *(_QWORD *)(v86 - 8);
  MEMORY[0x1E0C80A78](v86);
  v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v85) = a2;
  v23 = sub_1BB3D264C(a1, a3, a2);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v53 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (!v53)
      return swift_bridgeObjectRelease();
  }
  else if (!*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    return swift_bridgeObjectRelease();
  }
  v83 = v14;
  if (v23 >> 62)
  {
    swift_bridgeObjectRetain();
    v54 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    v90 = v54;
    if (v54)
    {
LABEL_5:
      v82 = a1 >> 62;
      swift_retain();
      sub_1BB86E494();
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v86) == 1)
      {
        swift_bridgeObjectRelease();
        return sub_1BA4A2E80((uint64_t)v19, (uint64_t (*)(_QWORD))sub_1BB0B4CD8);
      }
      sub_1BA5193C4((uint64_t)v19, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
      LOBYTE(v98) = 1;
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      sub_1BA97252C(0x2D656C69706D6F63, 0xEC000000656D6974, 0);
      swift_bridgeObjectRelease();
      v98 = 0;
      v99 = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      v98 = 0xD000000000000015;
      v99 = 0x80000001BB981820;
      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        v24 = sub_1BB873F30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v24 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      v100 = v24;
      sub_1BB87420C();
      sub_1BB872AFC(v25);
      swift_bridgeObjectRelease();
      sub_1BB872AFC("Will queue compiling ");
      v100 = 0x69706D6F6365727BLL;
      v101 = 0xEB000000003D656CLL;
      sub_1BB872AFC((_QWORD *)0xE500000000000000);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v26);
      sub_1BB872AFC(v27);
      swift_bridgeObjectRelease();
      v28 = v98;
      v29 = v99;
      if (qword_1EF2A6C58 != -1)
        swift_once();
      sub_1BA9719E4((void *)2, 0, 0, v28, v29);
      swift_bridgeObjectRelease();
      sub_1BA4AD288(0, &qword_1ED3A39B0, MEMORY[0x1E0DEE9C0] + 8, MEMORY[0x1E0DB4150]);
      v31 = objc_allocWithZone(v30);
      v32 = (id)sub_1BB86E4F4();
      v33 = (void *)sub_1BB872970();
      objc_msgSend(v32, sel_setName_, v33);

      v34 = swift_allocObject();
      swift_weakInit();
      v35 = swift_allocObject();
      *(_QWORD *)(v35 + 16) = v34;
      *(_QWORD *)(v35 + 24) = a1;
      v88 = a1;
      swift_bridgeObjectRetain();
      v36 = v32;
      sub_1BB86E0BC();
      v96 = v36;

      v89 = v4;
      v81 = v22;
      v97 = v23;
      v80 = v12;
      if (v24)
      {
        v100 = MEMORY[0x1E0DEE9D8];
        sub_1BA7447E8(0, v24 & ~(v24 >> 63), 0);
        if ((v24 & 0x8000000000000000) == 0)
        {
          if ((v23 & 0xC000000000000001) != 0)
          {
            v37 = MEMORY[0x1BCCE4630](0, v97);
          }
          else
          {
            v37 = *(_QWORD *)(v97 + 32);
            swift_retain();
          }
          v38 = *(_QWORD *)(v37 + 16);
          v98 = 0;
          v99 = 0xE000000000000000;
          __asm { BR              X9 }
        }
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      v39 = sub_1BA6E43EC(MEMORY[0x1E0DEE9D8]);
      swift_bridgeObjectRelease();
      v87 = *(id *)(v4 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue);
      v40 = objc_msgSend(v87, sel_operations);
      sub_1BA49A224(0, &qword_1EF2BEC20);
      v41 = sub_1BB872DB4();

      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        v42 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v42)
          goto LABEL_20;
      }
      else
      {
        v42 = *(_QWORD *)((v41 & 0xFFFFFFFFFFFFF8) + 0x10);
        if (v42)
        {
LABEL_20:
          if (v42 < 1)
          {
LABEL_54:
            __break(1u);
            JUMPOUT(0x1BB23279CLL);
          }
          for (i = 0; v42 != i; ++i)
          {
            if ((v41 & 0xC000000000000001) != 0)
              v44 = (id)MEMORY[0x1BCCE4630](i, v41);
            else
              v44 = *(id *)(v41 + 8 * i + 32);
            v45 = v44;
            v46 = objc_msgSend(v44, sel_name);
            if (!v46)
              goto LABEL_24;
            v47 = v46;
            v48 = sub_1BB8729A0();
            v50 = v49;

            if ((sub_1BA761FE4(v48, v50, v39) & 1) != 0)
              objc_msgSend(v45, sel_cancel);
            if (v48 == 1701736292 && v50 == 0xE400000000000000)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              v52 = sub_1BB874398();
              swift_bridgeObjectRelease();
              if ((v52 & 1) == 0)
                goto LABEL_24;
            }
            objc_msgSend(v96, sel_addDependency_, v45);
LABEL_24:

          }
        }
      }
      swift_bridgeObjectRelease();
      swift_retain();
      sub_1BB86E494();
      swift_release();
      v55 = v98;
      if ((v85 & 1) != 0)
      {
        v56 = MEMORY[0x1E0DEE9D8];
      }
      else
      {
        swift_bridgeObjectRetain();
        v56 = v55;
      }
      v98 = v56;
      sub_1BAF57920();
      sub_1BA4A2870((unint64_t *)&qword_1EF2B6C80, (uint64_t (*)(uint64_t))sub_1BAF57920, MEMORY[0x1E0DEAF38]);
      sub_1BB872BD4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v57 = v89;
      sub_1BB2332AC();
      swift_retain();
      sub_1BB86E494();
      swift_release();
      swift_bridgeObjectRetain();
      v58 = swift_bridgeObjectRetain();
      v59 = sub_1BB23AB94(v58, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v98 = v59;
      sub_1BB872BD4();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB2332AC();
      v60 = *(_QWORD *)(v57 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_defaultSystemFactory);
      swift_weakInit();
      v61 = swift_weakAssign();
      sub_1BAF8FF7C(v61, (uint64_t)&v98);
      swift_retain();
      v62 = (uint64_t)v84;
      sub_1BB86D2B8();
      swift_release();
      v63 = (uint64_t)v83;
      sub_1BAA6ADB8((uint64_t)v83);
      sub_1BA4A2E80(v62, type metadata accessor for FormatVersioningModeSelection);
      v64 = (_QWORD *)sub_1BAF8ECB0((uint64_t)&v98, v63, v60);
      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v63, v95);
      sub_1BAF8FFB8((uint64_t)&v98);
      v65 = (uint64_t)v81;
      v66 = (uint64_t)&v81[*(int *)(v86 + 20)];
      swift_retain();
      sub_1BB86E494();
      swift_release();
      v67 = qword_1EF3D04D8;
      LODWORD(v62) = v98;
      swift_retain();
      v68 = sub_1BB2369D8(v66, v65, v62, v67, v64);
      swift_release();
      swift_release();
      if (v90 >= 1)
      {
        v69 = v97;
        v85 = v97 & 0xC000000000000001;
        v86 = v57 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__compilerSettings;
        swift_beginAccess();
        if (v85)
        {
          v70 = MEMORY[0x1BCCE4630](0, v69);
        }
        else
        {
          v70 = *(_QWORD *)(v69 + 32);
          swift_retain();
        }
        v71 = (uint64_t)v91;
        swift_retain();
        sub_1BB86E494();
        swift_release();
        if (qword_1ED3BB468 != -1)
          swift_once();
        __swift_project_value_buffer(v95, (uint64_t)qword_1ED3B8FC8);
        v72 = v92;
        sub_1BA4C2DD8(v71, v92, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
        v73 = (*(unsigned __int8 *)(v94 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
        v74 = swift_allocObject();
        *(_QWORD *)(v74 + 16) = v70;
        *(_QWORD *)(v74 + 24) = v68;
        sub_1BA5193C4(v72, v74 + v73, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
        sub_1BA4B07F0(0, &qword_1EF2BEC28, (uint64_t (*)(uint64_t))sub_1BAF57920, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4738]);
        v76 = objc_allocWithZone(v75);
        swift_retain();
        swift_retain();
        sub_1BB86E6D4();
        sub_1BA4A2E80(v71, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
        v77 = *(_QWORD *)(v70 + 16);
        v100 = 0;
        v101 = 0xE000000000000000;
        __asm { BR              X9 }
      }
      __break(1u);
      goto LABEL_53;
    }
  }
  else
  {
    v90 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v90)
      goto LABEL_5;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2327D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void (*v5)(char *, uint64_t);
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD v10[4];
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;

  v10[1] = a1;
  v1 = sub_1BB86BE54();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF2A6D68 != -1)
    swift_once();
  sub_1BA4A2870((unint64_t *)&unk_1EF2BAE18, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditor, (uint64_t)&unk_1BB8FB7C0);
  sub_1BB86D210();
  v11 = v13;
  v12 = v14;
  sub_1BB86BE00();
  sub_1BA7114A0();
  sub_1BB873AEC();
  v5 = *(void (**)(char *, uint64_t))(v2 + 8);
  v5(v4, v1);
  swift_bridgeObjectRelease();
  v13 = 0x2F2F3A70747468;
  v14 = 0xE700000000000000;
  if (qword_1EF2A6D60 != -1)
    swift_once();
  sub_1BB86D210();
  v10[2] = v11;
  v10[3] = v12;
  sub_1BB86BE00();
  sub_1BB873AEC();
  v5(v4, v1);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v6);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v7);
  sub_1BB872AFC(v8);
  swift_bridgeObjectRelease();
  sub_1BB86C634();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB232A00(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for DebugFormatPackagesDelta();
  v3 = *(_QWORD *)(a1 + *(int *)(v2 + 20));
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BB873F30())
    {
LABEL_3:
      swift_beginAccess();
      if ((v3 & 0xC000000000000001) != 0)
      {
        v5 = MEMORY[0x1BCCE4630](0, v3);
      }
      else
      {
        if (!*(_QWORD *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1BB232D70);
        }
        v5 = *(_QWORD *)(v3 + 32);
        swift_retain();
      }
      __asm { BR              X9 }
    }
  }
  else
  {
    v4 = *(_QWORD *)((v3 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
      goto LABEL_3;
  }
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a1 + *(int *)(v2 + 24));
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    if (sub_1BB873F30())
    {
LABEL_12:
      swift_beginAccess();
      if ((v6 & 0xC000000000000001) != 0)
      {
        v8 = MEMORY[0x1BCCE4630](0, v6);
      }
      else
      {
        if (!*(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          JUMPOUT(0x1BB2330DCLL);
        }
        v8 = *(_QWORD *)(v6 + 32);
        swift_retain();
      }
      __asm { BR              X9 }
    }
  }
  else
  {
    v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7)
      goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1BB23316C(uint64_t a1, uint64_t a2)
{
  return sub_1BB2351CC(a1, a2, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__hiddenInventoryIdentifiers, (uint64_t (*)(uint64_t))sub_1BB233484);
}

uint64_t sub_1BB233180(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  unint64_t v5;
  char v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  _QWORD *v11;

  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v4 = v11;
  v5 = sub_1BA9BEFB4(a1, a2, v11);
  if ((v6 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v4 = sub_1BA6EA0D0(0, v11[2] + 1, 1, v11);
    v8 = v4[2];
    v7 = v4[3];
    if (v8 >= v7 >> 1)
      v4 = sub_1BA6EA0D0((_QWORD *)(v7 > 1), v8 + 1, 1, v4);
    v4[2] = v8 + 1;
    v9 = &v4[2 * v8];
    v9[4] = a1;
    v9[5] = a2;
  }
  else
  {
    sub_1BAA67BAC(v5);
    swift_bridgeObjectRelease();
  }
  return sub_1BB23335C();
}

uint64_t sub_1BB2332AC()
{
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t sub_1BB23335C()
{
  swift_beginAccess();
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA6A0BA4();
  sub_1BB872904();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t sub_1BB233470()
{
  return sub_1BB233498();
}

uint64_t sub_1BB233484()
{
  return sub_1BB233498();
}

uint64_t sub_1BB233498()
{
  swift_beginAccess();
  swift_retain();
  sub_1BB86E4A0();
  swift_release();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  sub_1BA6BCC84();
  sub_1BA4A2870(&qword_1EF2BEC18, (uint64_t (*)(uint64_t))sub_1BA6BCC84, MEMORY[0x1E0DEB3D0]);
  sub_1BA7114A0();
  sub_1BB872CB8();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_1BB86D2C4();
  return swift_release();
}

uint64_t sub_1BB2335BC()
{
  uint64_t v0;
  char v2;

  if (FeedKind.rawValue.getter() == 0x746C7561666564 && v0 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v2 = sub_1BB874398();
  swift_bridgeObjectRelease();
  if ((v2 & 1) != 0)
  {
LABEL_8:
    type metadata accessor for DebugGroupLayoutKey();
    type metadata accessor for GroupLayoutContext();
    swift_retain();
    goto LABEL_9;
  }
  swift_retain();
LABEL_9:
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t sub_1BB2336C4()
{
  uint64_t result;
  uint64_t v1;
  void (*v2)(uint64_t *, _QWORD);
  uint64_t *v3;
  uint64_t v4;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = sub_1BA972C08();
    swift_beginAccess();
    swift_retain();
    v2 = (void (*)(uint64_t *, _QWORD))sub_1BB86E488();
    *v3 = v1;
    swift_bridgeObjectRelease();
    v2(&v4, 0);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB23377C()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t result;
  void (*v4)(_BYTE *, _QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v8[32];

  v0 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v0);
  v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BB86D294();
    sub_1BB86D27C();
    if (qword_1EF2A6CB8 != -1)
      swift_once();
    sub_1BB86D270();
    swift_release();
    swift_beginAccess();
    swift_retain();
    v4 = (void (*)(_BYTE *, _QWORD))sub_1BB86E488();
    v6 = v5;
    v7 = type metadata accessor for FormatDerivedDataCompilerSettings();
    sub_1BB235450((uint64_t)v2, v6 + *(int *)(v7 + 20));
    v4(v8, 0);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB2338D0()
{
  if (qword_1EF2A6FA8 != -1)
    swift_once();
  type metadata accessor for DebugFormatEditor();
  sub_1BA4A2870(&qword_1EF2BEC10, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditor, (uint64_t)&unk_1BB8FB780);
  swift_bridgeObjectRetain();
  sub_1BB86D3F0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB23398C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t (*v20)(_QWORD);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v29;
  char *v30;
  uint64_t v31;
  char v32;

  v31 = a1;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v30 = (char *)&v29 - v4;
  v5 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v5);
  v29 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v29 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v29 - v15;
  v17 = type metadata accessor for FormatVersioningModeSelection(0);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0B4CF4(0);
  v20 = (uint64_t (*)(_QWORD))sub_1BB0B4CF4;
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)&v29 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(a2, (uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
  v24 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24) == 1)
  {
    v25 = 0;
  }
  else
  {
    swift_retain();
    sub_1BB86D2B8();
    swift_release();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, &v23[*(int *)(v24 + 20)], v7);
    sub_1BAA6ADB8((uint64_t)v10);
    sub_1BB86EB6C();
    v26 = sub_1BB86E3A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v30, 1, 1, v26);
    sub_1BB86EB60();
    v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v10, v7);
    v25 = sub_1BB86EB3C();
    v27(v13, v7);
    v27(v16, v7);
    sub_1BA4A2E80((uint64_t)v19, type metadata accessor for FormatVersioningModeSelection);
    v20 = type metadata accessor for DebugFormatFileDirectoryMetadata;
  }
  sub_1BA4A2E80((uint64_t)v23, v20);
  v32 = v25 & 1;
  swift_retain();
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t sub_1BB233CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v28[3];
  char *v29;
  uint64_t v30;
  char v31;

  v28[2] = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3C20B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB3DE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v3);
  v29 = (char *)v28 - v4;
  v5 = sub_1BB86E0A4();
  MEMORY[0x1E0C80A78](v5);
  v28[1] = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86EB84();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v28 - v12;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v28 - v15;
  v17 = type metadata accessor for DebugFormatFileDirectoryMetadata(0);
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0B4CF4(0);
  MEMORY[0x1E0C80A78](v21);
  v23 = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = a1;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v23, 1, v17))
  {
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    v24 = 0;
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v23, (uint64_t)v20, type metadata accessor for DebugFormatFileDirectoryMetadata);
    sub_1BA4A2E80((uint64_t)v23, (uint64_t (*)(_QWORD))sub_1BB0B4CF4);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, &v20[*(int *)(v17 + 20)], v7);
    sub_1BAA6ADB8((uint64_t)v10);
    sub_1BB86EB6C();
    v25 = sub_1BB86E3A4();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v29, 1, 1, v25);
    sub_1BB86EB60();
    v26 = *(void (**)(char *, uint64_t))(v8 + 8);
    v26(v10, v7);
    v24 = sub_1BB86EB3C();
    v26(v13, v7);
    v26(v16, v7);
    sub_1BA4A2E80((uint64_t)v20, type metadata accessor for DebugFormatFileDirectoryMetadata);
  }
  v31 = v24 & 1;
  swift_retain();
  sub_1BB86E4A0();
  return swift_release();
}

uint64_t sub_1BB233FA8()
{
  uint64_t v0;

  byte_1EF3D0978 = 0;
  sub_1BA4A2E80(v0 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_factory);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_featureAvailability);
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_sourceTheme);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1BB23472C()
{
  sub_1BB233FA8();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB234750()
{
  return type metadata accessor for DebugFormatEditor();
}

uint64_t type metadata accessor for DebugFormatEditor()
{
  uint64_t result;

  result = qword_1EF2BE7E0;
  if (!qword_1EF2BE7E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB234794()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugGroupLayoutKey();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_1BB234980()
{
  return sub_1BA4A2870((unint64_t *)&unk_1EF2BAE18, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditor, (uint64_t)&unk_1BB8FB7C0);
}

uint64_t sub_1BB2349AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 *v23;
  unsigned int v24;
  uint64_t v25;
  char v26;
  _QWORD v27[4];
  uint64_t v28;
  uint64_t v29;

  v0 = sub_1BB86BE54();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EF2A6D70 != -1)
    swift_once();
  sub_1BA4A2870((unint64_t *)&unk_1EF2BAE18, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatEditor, (uint64_t)&unk_1BB8FB7C0);
  sub_1BB86D210();
  v27[2] = v28;
  v27[3] = v29;
  sub_1BB86BE00();
  sub_1BA7114A0();
  v4 = sub_1BB873AEC();
  v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  result = swift_bridgeObjectRelease();
  v8 = HIBYTE(v6) & 0xF;
  v9 = v4 & 0xFFFFFFFFFFFFLL;
  if ((v6 & 0x2000000000000000) != 0)
    v10 = HIBYTE(v6) & 0xF;
  else
    v10 = v4 & 0xFFFFFFFFFFFFLL;
  if (!v10)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0)
    {
      if ((v4 & 0x1000000000000000) != 0)
        v11 = (unsigned __int8 *)((v6 & 0xFFFFFFFFFFFFFFFLL) + 32);
      else
        v11 = (unsigned __int8 *)sub_1BB873D80();
      v12 = (uint64_t)sub_1BA9BF8AC(v11, v9, 10);
      LOBYTE(v4) = v13 & 1;
      goto LABEL_46;
    }
    v28 = v4;
    v29 = v6 & 0xFFFFFFFFFFFFFFLL;
    if (v4 == 43)
    {
      if (!v8)
        goto LABEL_59;
      if (v8 == 1 || (BYTE1(v4) - 48) > 9u)
        goto LABEL_33;
      v12 = (BYTE1(v4) - 48);
      if (v8 != 2)
      {
        if ((BYTE2(v4) - 48) > 9u)
          goto LABEL_33;
        v12 = 10 * (BYTE1(v4) - 48) + (BYTE2(v4) - 48);
        v14 = v8 - 3;
        if (v14)
        {
          v15 = (unsigned __int8 *)&v28 + 3;
          while (1)
          {
            v16 = *v15 - 48;
            if (v16 > 9)
              goto LABEL_33;
            v17 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_33;
            v12 = v17 + v16;
            if (__OFADD__(v17, v16))
              goto LABEL_33;
            LOBYTE(v4) = 0;
            ++v15;
            if (!--v14)
              goto LABEL_46;
          }
        }
      }
    }
    else
    {
      if (v4 == 45)
      {
        if (v8)
        {
          if (v8 != 1 && (BYTE1(v4) - 48) <= 9u)
          {
            if (v8 == 2)
            {
              LOBYTE(v4) = 0;
              v12 = -(uint64_t)(BYTE1(v4) - 48);
              goto LABEL_46;
            }
            if ((BYTE2(v4) - 48) <= 9u)
            {
              v12 = -10 * (BYTE1(v4) - 48) - (BYTE2(v4) - 48);
              v22 = v8 - 3;
              if (!v22)
                goto LABEL_45;
              v23 = (unsigned __int8 *)&v28 + 3;
              while (1)
              {
                v24 = *v23 - 48;
                if (v24 > 9)
                  break;
                v25 = 10 * v12;
                if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
                  break;
                v12 = v25 - v24;
                if (__OFSUB__(v25, v24))
                  break;
                LOBYTE(v4) = 0;
                ++v23;
                if (!--v22)
                  goto LABEL_46;
              }
            }
          }
LABEL_33:
          v12 = 0;
          LOBYTE(v4) = 1;
          goto LABEL_46;
        }
        __break(1u);
LABEL_59:
        __break(1u);
        return result;
      }
      if (!v8 || (v4 - 48) > 9u)
        goto LABEL_33;
      v12 = (v4 - 48);
      if (v8 != 1)
      {
        if ((BYTE1(v4) - 48) > 9u)
          goto LABEL_33;
        v12 = 10 * (v4 - 48) + (BYTE1(v4) - 48);
        v18 = v8 - 2;
        if (v18)
        {
          v19 = (unsigned __int8 *)&v28 + 2;
          while (1)
          {
            v20 = *v19 - 48;
            if (v20 > 9)
              goto LABEL_33;
            v21 = 10 * v12;
            if ((unsigned __int128)(v12 * (__int128)10) >> 64 != (10 * v12) >> 63)
              goto LABEL_33;
            v12 = v21 + v20;
            if (__OFADD__(v21, v20))
              goto LABEL_33;
            LOBYTE(v4) = 0;
            ++v19;
            if (!--v18)
              goto LABEL_46;
          }
        }
      }
    }
LABEL_45:
    LOBYTE(v4) = 0;
    goto LABEL_46;
  }
  v12 = (uint64_t)sub_1BA9BF9A4(v4, v6, 10);
  LOBYTE(v4) = v26;
LABEL_46:
  swift_bridgeObjectRelease();
  if ((v4 & 1) != 0)
    return 0;
  else
    return v12;
}

uint64_t sub_1BB234D6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor____lazy_storage___fonts;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor____lazy_storage___fonts))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor____lazy_storage___fonts);
  }
  else
  {
    v2 = sub_1BB234DD0(v0);
    *(_QWORD *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1BB234DD0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  char **v23;
  id v24;
  id v25;
  id v26;
  id v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t i;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v37[3];
  char *v38;
  unsigned __int8 v39;
  unint64_t v40[5];

  v2 = type metadata accessor for FeedHeadline(0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (id *)((char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_1BB86D8A0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for GroupLayoutBindingContext();
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = a1 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_key;
  v14 = v13 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24);
  sub_1BA4C010C(v14 + 8, (uint64_t)v40);
  v15 = *(_QWORD *)(v14 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v14 + *(int *)(v10 + 52), v6);
  v39 = *(_BYTE *)v14;
  v16 = *(_QWORD *)(v14 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA6A4D08(v40, v15, 0, (uint64_t)v9, &v39, v16, (uint64_t)v12);
  v38 = v12;
  v17 = sub_1BB3E0058(0, 0, 0, 0, 0);
  v18 = *(_QWORD *)(v17 + 16);
  v19 = MEMORY[0x1E0DEE9D8];
  if (v18)
  {
    v37[1] = v17;
    v37[2] = a1;
    v20 = v17 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v21 = *(_QWORD *)(v3 + 72);
    swift_bridgeObjectRetain();
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v23 = &selRef_backgroundColor;
    do
    {
      sub_1BA4C2DD8(v20, (uint64_t)v5, type metadata accessor for FeedHeadline);
      v24 = objc_msgSend(v5[5], sel_sourceChannel);
      if (v24
        && (v25 = objc_msgSend(v24, v23[98]), swift_unknownObjectRelease(), v25)
        && (v26 = objc_msgSend(v25, sel_defaultHeadlineTemplate),
            swift_unknownObjectRelease(),
            v26)
        && (v27 = objc_msgSend(v26, sel_loadableFonts), v26, v27))
      {
        sub_1BA49A224(0, (unint64_t *)&qword_1ED3B97E0);
        v28 = sub_1BB872DB4();

        sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v22 = sub_1BB393410(0, v22[2] + 1, 1, v22);
        v30 = v22[2];
        v29 = v22[3];
        if (v30 >= v29 >> 1)
          v22 = sub_1BB393410((_QWORD *)(v29 > 1), v30 + 1, 1, v22);
        v22[2] = v30 + 1;
        v22[v30 + 4] = v28;
        v23 = &selRef_backgroundColor;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v5, type metadata accessor for FeedHeadline);
      }
      v20 += v21;
      --v18;
    }
    while (v18);
    swift_bridgeObjectRelease_n();
    v19 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    swift_bridgeObjectRelease();
    v22 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  }
  v40[0] = v19;
  v31 = v22[2];
  if (v31)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v31; ++i)
    {
      v33 = swift_bridgeObjectRetain();
      sub_1BB384364(v33);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v34 = sub_1BA57FC74(v40[0]);
  swift_bridgeObjectRelease();
  v35 = FeedFontManager.load(fonts:downloadIfNeeded:)(v34);
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v38, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  return v35;
}

uint64_t sub_1BB2351B8(uint64_t a1, uint64_t a2)
{
  return sub_1BB2351CC(a1, a2, (uint64_t)&OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor__pinnedIdentifiers, (uint64_t (*)(uint64_t))sub_1BB233470);
}

uint64_t sub_1BB2351CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  char v7;
  uint64_t v9;
  uint64_t v10;

  swift_beginAccess();
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v10 = v9;
  swift_retain();
  sub_1BB86E494();
  swift_release();
  v7 = sub_1BA761FE4(a1, a2, v9);
  swift_bridgeObjectRelease();
  if ((v7 & 1) != 0)
  {
    sub_1BAC75A98(a1, a2);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BA6EE5AC(&v9, a1, a2);
  }
  swift_bridgeObjectRelease();
  return a4(v10);
}

void sub_1BB2352D4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB235318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  if (v2 == v6 && v1 == v7)
    v4 = 1;
  else
    v4 = sub_1BB874398();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_1BB235430()
{
  return sub_1BB86D3F0();
}

uint64_t sub_1BB23543C()
{
  return sub_1BB86D408();
}

uint64_t sub_1BB235448()
{
  return sub_1BB86D3FC();
}

uint64_t sub_1BB235450(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatVersioningModeSelection(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB235494()
{
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B0900, MEMORY[0x1E0DEE9C0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB2354E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v16;
  uint64_t v17;
  _QWORD aBlock[6];

  v5 = sub_1BB872610();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v17 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1BB872664();
  v9 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v12 = (void *)sub_1BB87345C();
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a2;
  *(_QWORD *)(v13 + 24) = a3;
  aBlock[4] = sub_1BB23B344;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_58_0;
  v14 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, v6, MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v11, v8, v14);
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v16);
}

uint64_t sub_1BB235704(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t i;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  Class v24;
  id v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v3 = type metadata accessor for FormatDerivedDataCompilerSettings();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  MEMORY[0x1E0C80A78](v3);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v29 - v7;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v10 = result;
    v30 = v4;
    v31 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    v11 = OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue;
    v12 = a2 >> 62;
    if (objc_msgSend(*(id *)(result + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue), sel_operationCount))
    {
      if (v12)
      {
        swift_bridgeObjectRetain();
        v15 = sub_1BB873F30();
        swift_bridgeObjectRelease();
        if (v15)
          goto LABEL_5;
      }
      else if (*(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_5:
        v13 = objc_msgSend(*(id *)(v10 + v11), sel_operationCount);
        if (v12)
        {
          swift_bridgeObjectRetain();
          v14 = sub_1BB873F30();
          swift_bridgeObjectRelease();
        }
        else
        {
          v14 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
        }
        sub_1BB235B38((uint64_t)v13, v14);
        return swift_release();
      }
    }
    swift_beginAccess();
    swift_retain();
    sub_1BB86E494();
    swift_release();
    v32 = MEMORY[0x1E0DEE9D8];
    if (v12)
    {
      swift_bridgeObjectRetain();
      result = sub_1BB873F30();
      v16 = result;
      v29 = v11;
      if (result)
        goto LABEL_12;
    }
    else
    {
      v16 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      v29 = v11;
      if (v16)
      {
LABEL_12:
        if (v16 < 1)
        {
          __break(1u);
          return result;
        }
        if ((a2 & 0xC000000000000001) != 0)
        {
          for (i = 0; i != v16; ++i)
          {
            if (*(_BYTE *)(*(_QWORD *)(MEMORY[0x1BCCE4630](i, a2) + 16)
                          + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role) == 5)
            {
              swift_unknownObjectRelease();
            }
            else
            {
              sub_1BB873DB0();
              sub_1BB873DE0();
              sub_1BB873DEC();
              sub_1BB873DBC();
            }
          }
        }
        else
        {
          v18 = 0;
          v19 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
          do
          {
            if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a2 + 8 * v18 + 32) + 16) + v19) != 5)
            {
              swift_retain();
              sub_1BB873DB0();
              sub_1BB873DE0();
              sub_1BB873DEC();
              sub_1BB873DBC();
              v19 = OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_role;
            }
            ++v18;
          }
          while (v16 != v18);
        }
      }
    }
    swift_bridgeObjectRelease();
    v21 = v31;
    v20 = v32;
    sub_1BA4C2DD8((uint64_t)v8, v31, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
    v22 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    v23 = swift_allocObject();
    sub_1BA5193C4(v21, v23 + v22, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
    *(_QWORD *)(v23 + ((v5 + v22 + 7) & 0xFFFFFFFFFFFFFFF8)) = v20;
    sub_1BA4B07F0(0, &qword_1EF2BEC28, (uint64_t (*)(uint64_t))sub_1BAF57920, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4738]);
    v25 = objc_allocWithZone(v24);
    v26 = (void *)sub_1BB86E6D4();
    sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatDerivedDataCompilerSettings);
    v27 = swift_allocObject();
    swift_weakInit();
    v28 = swift_allocObject();
    *(_QWORD *)(v28 + 16) = v27;
    *(_QWORD *)(v28 + 24) = a2;
    swift_bridgeObjectRetain();
    sub_1BB86E0BC();
    objc_msgSend(*(id *)(v10 + v29), sel_addOperation_, v26);

    return swift_release();
  }
  return result;
}

uint64_t sub_1BB235B38(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  _QWORD *v5;
  _QWORD *v6;
  _QWORD v7[2];

  swift_retain();
  sub_1BB86E494();
  result = swift_release();
  if (LOBYTE(v7[0]) == 1)
  {
    if (a1 && a2)
    {
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      strcpy((char *)v7, "Compiling... ");
      HIWORD(v7[1]) = -4864;
      sub_1BB87420C();
      sub_1BB872AFC(v5);
      swift_bridgeObjectRelease();
      sub_1BB872AFC((_QWORD *)0xEA0000000000676ELL);
      sub_1BB872AFC((_QWORD *)0xE100000000000000);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v6);
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      swift_retain();
      sub_1BB86E4A0();
      return swift_release();
    }
    else
    {
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      v7[0] = 0x7964616552;
      v7[1] = 0xE500000000000000;
      swift_retain();
      sub_1BB86E4A0();
      swift_release();
      if (qword_1EF2A6C58 != -1)
        swift_once();
      return sub_1BA9719E4((void *)2, 0x2D656C69706D6F63, 0xEC000000656D6974, 0xD000000000000011, 0x80000001BB981860);
    }
  }
  return result;
}

uint64_t sub_1BB235E3C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4;
  char v5;
  uint64_t result;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)a1;
  v5 = *(_BYTE *)(a1 + 8);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v7 = result;
    if ((v5 & 1) == 0)
    {
      swift_retain();
      sub_1BB86E494();
      swift_release();
      sub_1BAF57448(v4, v10, v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BB2332AC();
    }
    v8 = objc_msgSend(*(id *)(v7 + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue), sel_operationCount);
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1BB235B38((uint64_t)v8, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB235F94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD aBlock[6];

  v4 = sub_1BB872610();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v16 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1BB872664();
  v8 = *(_QWORD *)(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v11 = (void *)sub_1BB87345C();
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a1;
  *(_QWORD *)(v12 + 24) = a2;
  aBlock[4] = sub_1BB23B2D4;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_23_0;
  v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, v5, MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  MEMORY[0x1BCCE3D90](0, v10, v7, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v15);
}

uint64_t sub_1BB2361B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    sub_1BB86E494();
    swift_release();
    sub_1BAF57310(a2, v4, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1BB2332AC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB236298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  char v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  v8 = sub_1BB872610();
  v23 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB872664();
  v21 = *(_QWORD *)(v11 - 8);
  v22 = v11;
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(void **)a1;
  v15 = *(_BYTE *)(a1 + 8);
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9850);
  v20 = sub_1BB87345C();
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  *(_QWORD *)(v16 + 32) = v14;
  *(_BYTE *)(v16 + 40) = v15;
  *(_QWORD *)(v16 + 48) = a4;
  aBlock[4] = sub_1BB23B270;
  aBlock[5] = v16;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1BA4F1DD8;
  aBlock[3] = &block_descriptor_53;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB23B284(v14, v15);
  swift_retain();
  swift_release();
  sub_1BB872634();
  aBlock[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA4A2870((unint64_t *)&qword_1ED3B0C40, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  sub_1BA60B87C();
  sub_1BA4A2870((unint64_t *)&qword_1ED3B9320, (uint64_t (*)(uint64_t))sub_1BA60B87C, MEMORY[0x1E0DEAF38]);
  sub_1BB873BC4();
  v18 = (void *)v20;
  MEMORY[0x1BCCE3D90](0, v13, v10, v17);
  _Block_release(v17);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v22);
}

void sub_1BB2364E4(uint64_t a1, unint64_t a2, _QWORD *a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t Strong;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t, uint64_t, uint64_t);
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  unint64_t v34;
  _QWORD *v35;

  sub_1BB23B290(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB23B2AC(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v14 = objc_msgSend(*(id *)(Strong + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_compilerOperationQueue), sel_operationCount);
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      v15 = sub_1BB873F30();
      swift_bridgeObjectRelease();
    }
    else
    {
      v15 = *(_QWORD *)((a2 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    sub_1BB235B38((uint64_t)v14, v15);
    if ((a4 & 1) != 0)
    {
      sub_1BB23B284(a3, 1);
      swift_retain();
      sub_1BB86E494();
      swift_release();
      v33 = v35;
      swift_bridgeObjectRetain();
      sub_1BB5743C8();
      sub_1BAA499F4(v19, v20, (uint64_t)v12);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BB23B2AC);
      swift_bridgeObjectRelease();
      sub_1BB2332AC();
      v33 = a3;
      v21 = a3;
      sub_1BA8EBDF8();
      v22 = sub_1BB86E500();
      v23 = swift_dynamicCast();
      v24 = *(_QWORD *)(v22 - 8);
      v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
      if ((v23 & 1) != 0)
      {
        v25(v9, 0, 1, v22);
        if ((*(unsigned int (**)(char *, uint64_t))(v24 + 88))(v9, v22) == *MEMORY[0x1E0DB4168])
        {
          sub_1BB23B264(a3, 1);
          swift_release();
          (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v22);
          return;
        }
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v22);
      }
      else
      {
        v25(v9, 1, 1, v22);
        sub_1BA4A2E80((uint64_t)v9, (uint64_t (*)(_QWORD))sub_1BB23B290);
      }
      v33 = 0;
      v34 = 0xE000000000000000;
      sub_1BB873CB4();
      sub_1BB872AFC("Compiler finished");
      swift_bridgeObjectRetain();
      sub_1BB872AFC(v26);
      swift_bridgeObjectRelease();
      sub_1BB872AFC(v27);
      v32 = a3;
      sub_1BB873E34();
      v29 = (uint64_t)v33;
      v28 = v34;
      v30 = a3;
      if (qword_1EF2A6C58 != -1)
        swift_once();
      sub_1BA9719E4(a3, 0, 0, v29, v28);
      swift_release();
      sub_1BB23B264(a3, 1);
      swift_bridgeObjectRelease();
      sub_1BB23B264(a3, 1);
    }
    else
    {
      swift_retain();
      sub_1BB86E494();
      swift_release();
      v33 = v35;
      swift_bridgeObjectRetain();
      sub_1BB5743C8();
      sub_1BAA499F4(v16, v17, (uint64_t)v12);
      swift_bridgeObjectRelease();
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))sub_1BB23B2AC);
      if (a3[2])
      {
        v32 = a3;
        sub_1BB23B284(a3, 0);
        v18 = swift_bridgeObjectRetain();
        sub_1BB38633C(v18);
        sub_1BAF57920();
        sub_1BA4A2870((unint64_t *)&qword_1EF2B6C80, (uint64_t (*)(uint64_t))sub_1BAF57920, MEMORY[0x1E0DEAF38]);
        sub_1BB872BD4();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_1BB2332AC();
      swift_release();
    }
  }
}

uint64_t sub_1BB2369D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void *v28;
  void *v29;
  void *v30;
  void (*v31)(char *, char *);
  id v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  void *v39;
  id v40;
  _QWORD *v41;
  uint64_t v42;
  void *v43;
  id v44;
  _QWORD *v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  void (*v59)(char *, char *);
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;
  id v84;
  _QWORD *v85;
  uint64_t v86;
  void *v87;
  id v88;
  _QWORD *v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  void *v99;
  id v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  id v108;
  _QWORD *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  id v113;
  id v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  unint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void *v124;
  double v125;
  _QWORD *v126;
  _QWORD *v127;
  uint64_t v128;
  void *v129;
  id v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  unint64_t v134;
  unint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  void *v139;
  void *v140;
  id v141;
  uint64_t v142;
  uint64_t v143;
  BOOL IsBoldTextEnabled;
  void *v145;
  id v146;
  uint64_t v147;
  id v148;
  _QWORD *v149;
  id v150;
  _QWORD *v151;
  char *v152;
  _QWORD *v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unsigned int v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  id v189;
  void *v190;
  int64_t v191;
  uint64_t *v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t *v195;
  int64_t v196;
  char v197;
  const char *v198;
  uint64_t *v199;
  char v200;
  uint64_t v201;
  id v202;
  _QWORD *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  int v207;
  int v208;
  char v209;
  int v210;
  int v211;
  _QWORD *v212;
  __int128 v213;
  unint64_t v214;
  unint64_t v215;
  int64_t v216;
  uint64_t v217;
  char v218;
  uint64_t v219;
  id v220;
  uint64_t v221;
  unint64_t v222;
  const char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  _QWORD *v229;
  _QWORD *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  _QWORD *v238;
  _QWORD *v239;
  char *v240;
  void (*v241)(uint64_t, char *, uint64_t);
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  void (*v247)(char *, char *);
  _QWORD *v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  _QWORD *v255;
  _QWORD *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  void (*v264)(char *, char *);
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  _QWORD *v272;
  _QWORD *v273;
  _QWORD *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  void (*v280)(char *, char *);
  _QWORD *v281;
  _QWORD *v282;
  char *v283;
  void (*v284)(uint64_t, char *, uint64_t);
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  _QWORD *v289;
  _QWORD *v290;
  _QWORD *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  void (*v297)(char *, char *);
  uint64_t v298;
  unint64_t *v299;
  unint64_t *v300;
  char *v301;
  void (*v302)(uint64_t, char *, uint64_t);
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t v306;
  uint64_t v307;
  _QWORD *v308;
  uint64_t v309;
  unint64_t *v310;
  unint64_t *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  _QWORD *v320;
  uint64_t v321;
  _QWORD *v322;
  _QWORD *v323;
  void (*v324)(uint64_t, uint64_t, uint64_t);
  uint64_t v325;
  uint64_t v326;
  _QWORD *v327;
  _QWORD *v328;
  uint64_t v329;
  void (*v330)(uint64_t, uint64_t, uint64_t);
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  void (*v336)(char *, char *);
  _QWORD *v337;
  _QWORD *v338;
  _QWORD *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  _QWORD *v344;
  _QWORD *v345;
  _QWORD *v346;
  void (*v347)(char *, char *);
  uint64_t v348;
  uint64_t v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  void (*v355)(char *, char *);
  uint64_t v356;
  uint64_t v357;
  _QWORD *v358;
  _QWORD *v359;
  char *v360;
  void (*v361)(uint64_t, char *, uint64_t);
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  _QWORD *v366;
  _QWORD *v367;
  char *v368;
  char *v369;
  void (*v370)(uint64_t, char *, uint64_t);
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  void (*v377)(char *, char *);
  _QWORD *v378;
  _QWORD *v379;
  _QWORD *v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  _QWORD *v386;
  uint64_t v387;
  _QWORD *v388;
  _QWORD *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  void (*v395)(char *, char *);
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  void (*v399)(char *, char *);
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  unint64_t *v413;
  unint64_t *v414;
  uint64_t v415;
  void (*v416)(uint64_t, uint64_t, uint64_t);
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  void (*v422)(char *, char *);
  _QWORD *v423;
  _QWORD *v424;
  _QWORD *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  void (*v432)(char *, char *);
  _QWORD *v433;
  _QWORD *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  _QWORD *v441;
  uint64_t v442;
  _QWORD *v443;
  _QWORD *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  void (*v451)(char *, char *);
  _QWORD *v452;
  uint64_t v453;
  _QWORD *v454;
  _QWORD *v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  _QWORD *v460;
  uint64_t v461;
  uint64_t v462;
  _QWORD *v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  void *v467;
  uint64_t v468;
  uint64_t v469;
  __int128 v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  void (*v476)(uint64_t *__return_ptr, uint64_t, uint64_t);
  id v477;
  uint64_t v478;
  unint64_t v479;
  uint64_t v480;
  _QWORD *v481;
  uint64_t *v483;
  char v484;
  uint64_t *v485;
  char v486;
  uint64_t *v487;
  char v488;
  uint64_t v489;
  char *v490;
  uint64_t v491;
  uint64_t v492;
  char *v493;
  uint64_t v494;
  uint64_t v495;
  char *v496;
  uint64_t v497;
  _QWORD *v498;
  unint64_t v499;
  char *v500;
  uint64_t v501;
  char *v502;
  uint64_t v503;
  _QWORD *v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  void (*v510)(char *, char *);
  uint64_t v511;
  char *v512;
  _QWORD *v513;
  __int128 v514;
  uint64_t v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  unint64_t v522;
  _QWORD v523[5];
  uint64_t v524;

  v504 = a5;
  LODWORD(v497) = a3;
  v503 = a2;
  v509 = a1;
  v492 = sub_1BB86D93C();
  v491 = *(_QWORD *)(v492 - 8);
  MEMORY[0x1E0C80A78](v492);
  v490 = (char *)&v489 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v507 = type metadata accessor for FormatVersionRequirement(0);
  v489 = *(_QWORD *)(v507 - 8);
  MEMORY[0x1E0C80A78](v507);
  v493 = (char *)&v489 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v495 = sub_1BB86C8B0();
  v494 = *(_QWORD *)(v495 - 8);
  MEMORY[0x1E0C80A78](v495);
  v496 = (char *)&v489 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA6BF9E8(0);
  MEMORY[0x1E0C80A78](v9);
  v506 = (uint64_t)&v489 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB23B2DC(0);
  MEMORY[0x1E0C80A78](v11);
  v505 = (char *)&v489 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v511 = sub_1BB86C9C4();
  v499 = *(_QWORD *)(v511 - 8);
  MEMORY[0x1E0C80A78](v511);
  v500 = (char *)&v489 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v498 = (uint64_t *)((char *)&v489 - v15);
  sub_1BB23B2F8(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v489 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB86C9DC();
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v502 = (char *)&v489 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v489 - v23;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v489 - v26;
  v523[3] = type metadata accessor for DebugFormatLogger();
  v523[4] = &off_1E727E580;
  v523[0] = a4;
  v508 = OBJC_IVAR____TtC8NewsFeed19FormatSystemFactory_formatVersion;
  v28 = (void *)objc_opt_self();
  swift_retain();
  v29 = (void *)sub_1BB872970();
  sub_1BB86C994();
  v30 = (void *)sub_1BB86C940();
  v31 = *(void (**)(char *, char *))(v20 + 8);
  v512 = (char *)v19;
  v510 = v31;
  v31(v27, (char *)v19);
  v32 = objc_msgSend(v28, sel_dateFormatFromTemplate_options_locale_, v29, 0, v30);

  if (v32)
  {
    v33 = sub_1BB8729A0();
    v35 = v34;

  }
  else
  {
    v33 = 0;
    v35 = 0xE000000000000000;
  }
  *(_QWORD *)&v514 = v33;
  *((_QWORD *)&v514 + 1) = v35;
  v521 = 72;
  v522 = 0xE100000000000000;
  v36 = sub_1BA7114A0();
  v37 = sub_1BB873B40();
  v513 = (_QWORD *)v36;
  if ((v37 & 1) != 0)
  {
    swift_bridgeObjectRelease();
    LODWORD(v501) = 1;
  }
  else
  {
    *(_QWORD *)&v514 = v33;
    *((_QWORD *)&v514 + 1) = v35;
    v521 = 107;
    v522 = 0xE100000000000000;
    LODWORD(v501) = sub_1BB873B40();
    swift_bridgeObjectRelease();
  }
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_1BB8FB6F0;
  *(_QWORD *)&v514 = 11624;
  *((_QWORD *)&v514 + 1) = 0xE200000000000000;
  v39 = (void *)sub_1BB86D738();
  v40 = objc_msgSend(v39, sel_horizontalSizeClass);

  if (v40)
    v41 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v41);
  swift_bridgeObjectRelease();
  v42 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 32) = v514;
  *(_QWORD *)(v38 + 40) = v42;
  *(_QWORD *)&v514 = 11638;
  *((_QWORD *)&v514 + 1) = 0xE200000000000000;
  v43 = (void *)sub_1BB86D738();
  v44 = objc_msgSend(v43, sel_verticalSizeClass);

  if (v44)
    v45 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v45);
  swift_bridgeObjectRelease();
  v46 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 48) = v514;
  *(_QWORD *)(v38 + 56) = v46;
  strcpy((char *)&v514, "column-");
  *((_QWORD *)&v514 + 1) = 0xE700000000000000;
  v521 = sub_1BB86D63C();
  sub_1BB87420C();
  sub_1BB872AFC(v47);
  swift_bridgeObjectRelease();
  v48 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 64) = v514;
  *(_QWORD *)(v38 + 72) = v48;
  *(_QWORD *)&v514 = 0x2D676E616CLL;
  *((_QWORD *)&v514 + 1) = 0xE500000000000000;
  sub_1BB86C994();
  v49 = v498;
  sub_1BB86C9D0();
  v510(v24, v512);
  sub_1BB86C9A0();
  v50 = *(void (**)(_QWORD *, uint64_t))(v499 + 8);
  v50(v49, v511);
  v51 = sub_1BB86C91C();
  v52 = *(_QWORD *)(v51 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v18, 1, v51) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BB23B2F8);
  }
  else
  {
    sub_1BB86C910();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v18, v51);
  }
  sub_1BB872AFC(v53);
  swift_bridgeObjectRelease();
  v54 = sub_1BB872A0C();
  v56 = v55;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 80) = v54;
  *(_QWORD *)(v38 + 88) = v56;
  *(_QWORD *)&v514 = 0x2D676E616CLL;
  *((_QWORD *)&v514 + 1) = 0xE500000000000000;
  sub_1BB86C994();
  v57 = v500;
  sub_1BB86C9D0();
  v58 = v512;
  v59 = v510;
  v510(v27, v512);
  sub_1BB86C9B8();
  v60 = v511;
  v50(v57, v511);
  sub_1BB872AFC(v61);
  swift_bridgeObjectRelease();
  v62 = sub_1BB872A0C();
  v64 = v63;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 96) = v62;
  *(_QWORD *)(v38 + 104) = v64;
  *(_QWORD *)&v514 = 0x2D676E616CLL;
  *((_QWORD *)&v514 + 1) = 0xE500000000000000;
  sub_1BB86C994();
  sub_1BB86C9D0();
  v59(v27, v58);
  sub_1BB86C9AC();
  v50(v57, v60);
  sub_1BB872AFC(v65);
  swift_bridgeObjectRelease();
  v66 = sub_1BB872A0C();
  v68 = v67;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 112) = v66;
  *(_QWORD *)(v38 + 120) = v68;
  strcpy((char *)&v514, "region-");
  *((_QWORD *)&v514 + 1) = 0xE700000000000000;
  v69 = v502;
  sub_1BB86C994();
  v70 = (uint64_t)v505;
  sub_1BB86C988();
  v59(v69, v58);
  v71 = sub_1BB86C97C();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71);
  v74 = v506;
  if (v73 == 1)
  {
    sub_1BA4A2E80(v70, (uint64_t (*)(_QWORD))sub_1BB23B2DC);
  }
  else
  {
    sub_1BB86C910();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
  }
  v76 = MEMORY[0x1E0DEA968];
  sub_1BB872AFC(v75);
  swift_bridgeObjectRelease();
  v77 = sub_1BB872A0C();
  v79 = v78;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 128) = v77;
  *(_QWORD *)(v38 + 136) = v79;
  strcpy((char *)&v514, "time-hour-");
  BYTE11(v514) = 0;
  HIDWORD(v514) = -369098752;
  sub_1BB872AFC((_QWORD *)0x683231);
  swift_bridgeObjectRelease();
  v80 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 144) = v514;
  *(_QWORD *)(v38 + 152) = v80;
  strcpy((char *)&v514, "platform-");
  WORD5(v514) = 0;
  HIDWORD(v514) = -385875968;
  v81 = (void *)sub_1BB86D738();
  objc_msgSend(v81, sel_userInterfaceIdiom);

  sub_1BB872AFC(v504);
  swift_bridgeObjectRelease();
  v82 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 160) = v514;
  *(_QWORD *)(v38 + 168) = v82;
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v501 = 0xD000000000000012;
  *(_QWORD *)&v514 = 0xD000000000000012;
  *((_QWORD *)&v514 + 1) = 0x80000001BB9818A0;
  v83 = (void *)sub_1BB86D738();
  v84 = objc_msgSend(v83, sel_legibilityWeight);

  if (v84 != (id)-1)
    v85 = (_QWORD *)0xE700000000000000;
  sub_1BB872AFC(v85);
  swift_bridgeObjectRelease();
  v86 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 176) = v514;
  *(_QWORD *)(v38 + 184) = v86;
  strcpy((char *)&v514, "ax-contrast-");
  BYTE13(v514) = 0;
  HIWORD(v514) = -5120;
  v87 = (void *)sub_1BB86D738();
  v88 = objc_msgSend(v87, sel_accessibilityContrast);

  if (v88 != (id)-1)
  {
    v89 = (_QWORD *)0xE700000000000000;
    if (v88 == (id)1)
      v89 = (_QWORD *)0xE400000000000000;
  }
  sub_1BB872AFC(v89);
  swift_bridgeObjectRelease();
  v90 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 192) = v514;
  *(_QWORD *)(v38 + 200) = v90;
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = 0xD000000000000016;
  *((_QWORD *)&v514 + 1) = 0x80000001BB9818C0;
  v91 = (void *)sub_1BB86D75C();
  UIContentSizeCategory.description.getter();

  v92 = sub_1BB872A0C();
  v94 = v93;
  swift_bridgeObjectRelease();
  v521 = v92;
  v522 = v94;
  v519 = 95;
  v520 = 0xE100000000000000;
  v517 = 45;
  v518 = 0xE100000000000000;
  sub_1BB873B04();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v95);
  swift_bridgeObjectRelease();
  v96 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 208) = v514;
  *(_QWORD *)(v38 + 216) = v96;
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = 0x762D74616D726F66;
  *((_QWORD *)&v514 + 1) = 0xEF2D6E6F69737265;
  sub_1BB86EB24();
  sub_1BB872AFC(v97);
  swift_bridgeObjectRelease();
  v98 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 224) = v514;
  *(_QWORD *)(v38 + 232) = v98;
  strcpy((char *)&v514, "app-version-");
  BYTE13(v514) = 0;
  HIWORD(v514) = -5120;
  v99 = (void *)objc_opt_self();
  v100 = objc_msgSend(v99, sel_mainBundle);
  sub_1BB86EBB4();
  v101 = sub_1BB86EB84();
  v102 = *(_QWORD *)(v101 - 8);
  v103 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 48))(v74, 1, v101);
  v508 = v101;
  v499 = v102;
  if (v103 == 1)
  {
    sub_1BA4A2E80(v74, (uint64_t (*)(_QWORD))sub_1BA6BF9E8);
  }
  else
  {
    sub_1BB86EB24();
    v76 = MEMORY[0x1E0DEA968];
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v74, v101);
  }
  sub_1BB872AFC(v104);
  swift_bridgeObjectRelease();
  v105 = sub_1BB872A0C();
  v107 = v106;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 240) = v105;
  *(_QWORD *)(v38 + 248) = v107;
  strcpy((char *)&v514, "app-build-");
  BYTE11(v514) = 0;
  HIDWORD(v514) = -369098752;
  v108 = objc_msgSend(v99, sel_mainBundle);
  sub_1BB873894();

  sub_1BB872AFC(v109);
  swift_bridgeObjectRelease();
  v110 = sub_1BB872A0C();
  v112 = v111;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 256) = v110;
  *(_QWORD *)(v38 + 264) = v112;
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  strcpy((char *)&v514, "app-bundle-id-");
  HIBYTE(v514) = -18;
  v113 = objc_msgSend(v99, sel_mainBundle);
  v114 = objc_msgSend(v113, sel_bundleIdentifier);

  v115 = 0xD000000000000016;
  if (v114)
  {
    v116 = sub_1BB8729A0();
    v118 = v117;

    v521 = v116;
    v522 = v118;
    v519 = 46;
    v520 = 0xE100000000000000;
    v517 = 45;
    v518 = 0xE100000000000000;
    sub_1BB873B04();
    swift_bridgeObjectRelease();
  }
  v119 = v504;
  sub_1BB872AFC(&v524);
  swift_bridgeObjectRelease();
  v120 = (_QWORD *)*((_QWORD *)&v514 + 1);
  v121 = sub_1BB872A0C();
  v123 = v122;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v38 + 272) = v121;
  *(_QWORD *)(v38 + 280) = v123;
  *(_QWORD *)&v514 = 0x2D656C616373;
  *((_QWORD *)&v514 + 1) = 0xE600000000000000;
  v124 = (void *)v509;
  sub_1BB86D774();
  if ((~*(_QWORD *)&v125 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_163;
  }
  if (v125 <= -9.22337204e18)
  {
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  if (v125 >= 9.22337204e18)
  {
LABEL_164:
    __break(1u);
LABEL_165:
    swift_once();
    goto LABEL_64;
  }
  v521 = (uint64_t)v125;
  sub_1BB87420C();
  sub_1BB872AFC(v126);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v127);
  v128 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 288) = v514;
  *(_QWORD *)(v38 + 296) = v128;
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v506 = 0xD000000000000015;
  *(_QWORD *)&v514 = 0xD000000000000015;
  *((_QWORD *)&v514 + 1) = 0x80000001BB9818E0;
  v129 = (void *)sub_1BB86D738();
  v130 = objc_msgSend(v129, sel_userInterfaceStyle);

  if (v130)
    v131 = (_QWORD *)0xE500000000000000;
  sub_1BB872AFC(v131);
  swift_bridgeObjectRelease();
  v132 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 304) = v514;
  *(_QWORD *)(v38 + 312) = v132;
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  v500 = (char *)0xD000000000000011;
  *(_QWORD *)&v514 = 0xD000000000000011;
  *((_QWORD *)&v514 + 1) = 0x80000001BB981900;
  sub_1BB86D72C();
  v133 = sub_1BB872A0C();
  v135 = v134;
  swift_bridgeObjectRelease();
  v521 = v133;
  v522 = v135;
  v519 = 32;
  v520 = 0xE100000000000000;
  v517 = 45;
  v518 = 0xE100000000000000;
  sub_1BB873B04();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v136);
  swift_bridgeObjectRelease();
  v137 = *((_QWORD *)&v514 + 1);
  *(_QWORD *)(v38 + 320) = v514;
  *(_QWORD *)(v38 + 328) = v137;
  v138 = sub_1BA6E43EC(v38);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v521 = v138;
  v139 = (void *)sub_1BB86D75C();
  LOBYTE(v138) = sub_1BB873504();

  if ((v138 & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000018, 0x80000001BB982040);
    swift_bridgeObjectRelease();
  }
  v140 = (void *)sub_1BB86D738();
  v141 = objc_msgSend(v140, sel_legibilityWeight);

  if (v141 == (id)-1)
  {
    IsBoldTextEnabled = UIAccessibilityIsBoldTextEnabled();
    v142 = v495;
    v143 = v494;
    if (!IsBoldTextEnabled)
      goto LABEL_41;
    goto LABEL_40;
  }
  v142 = v495;
  v143 = v494;
  if (v141 && (v141 == (id)1 || UIAccessibilityIsBoldTextEnabled()))
  {
LABEL_40:
    sub_1BA6EE5AC((uint64_t *)&v514, 0x2D646C6F622D7861, 0xEC00000074786574);
    swift_bridgeObjectRelease();
  }
LABEL_41:
  if (UIAccessibilityIsGrayscaleEnabled())
  {
    sub_1BA6EE5AC((uint64_t *)&v514, 0x73796172672D7861, 0xEC000000656C6163);
    swift_bridgeObjectRelease();
  }
  v145 = (void *)sub_1BB86D738();
  v146 = objc_msgSend(v145, sel_accessibilityContrast);

  if (v146 == (id)-1)
  {
    if (!UIAccessibilityDarkerSystemColorsEnabled())
      goto LABEL_50;
    goto LABEL_49;
  }
  if (v146 && (v146 == (id)1 || UIAccessibilityDarkerSystemColorsEnabled()))
  {
LABEL_49:
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000017, 0x80000001BB982020);
    swift_bridgeObjectRelease();
  }
LABEL_50:
  if (UIAccessibilityIsInvertColorsEnabled())
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v501, 0x80000001BB982000);
    swift_bridgeObjectRelease();
    if (!UIAccessibilityIsReduceMotionEnabled())
    {
LABEL_52:
      if (!UIAccessibilityIsReduceTransparencyEnabled())
        goto LABEL_53;
      goto LABEL_91;
    }
  }
  else if (!UIAccessibilityIsReduceMotionEnabled())
  {
    goto LABEL_52;
  }
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000010, 0x80000001BB981FE0);
  swift_bridgeObjectRelease();
  if (!UIAccessibilityIsReduceTransparencyEnabled())
  {
LABEL_53:
    if (!UIAccessibilityShouldDifferentiateWithoutColor())
      goto LABEL_54;
    goto LABEL_92;
  }
LABEL_91:
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000016, 0x80000001BB981FC0);
  swift_bridgeObjectRelease();
  if (!UIAccessibilityShouldDifferentiateWithoutColor())
  {
LABEL_54:
    if (!UIAccessibilityButtonShapesEnabled())
      goto LABEL_56;
    goto LABEL_55;
  }
LABEL_92:
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000025, 0x80000001BB981F90);
  swift_bridgeObjectRelease();
  if (UIAccessibilityButtonShapesEnabled())
  {
LABEL_55:
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000010, 0x80000001BB981F70);
    swift_bridgeObjectRelease();
  }
LABEL_56:
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  v147 = swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = 0x6D726F6674616C70;
  *((_QWORD *)&v514 + 1) = 0xEF2D6C65646F6D2DLL;
  v148 = (id)MEMORY[0x1BCCE5344](v147);
  sub_1BB8729A0();

  sub_1BB872A0C();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v149);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, v514, *((uint64_t *)&v514 + 1));
  swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = v500;
  *((_QWORD *)&v514 + 1) = 0x80000001BB981920;
  v150 = (id)NSSNTPBAnalyticsOsVersionValue();
  sub_1BB8729A0();

  sub_1BB872A0C();
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v151);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, v514, *((uint64_t *)&v514 + 1));
  swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = 0;
  *((_QWORD *)&v514 + 1) = 0xE000000000000000;
  sub_1BB873CB4();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v514 = 0xD000000000000019;
  *((_QWORD *)&v514 + 1) = 0x80000001BB96C980;
  v124 = (void *)objc_opt_self();
  objc_msgSend(v124, sel_isInternalBuild);
  sub_1BB872AFC((_QWORD *)0x6C616E7265746E69);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, v514, *((uint64_t *)&v514 + 1));
  swift_bridgeObjectRelease();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B99E0);
  if ((sub_1BB8739FC() & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000017, 0x80000001BB981F50);
    swift_bridgeObjectRelease();
  }
  v76 = 0xD000000000000016;
  v152 = v496;
  sub_1BB86C8A4();
  v153 = sub_1BA6D5BF0();
  (*(void (**)(char *, uint64_t))(v143 + 8))(v152, v142);
  v154 = v153[2];
  if (v154)
  {
    v155 = v153 + 5;
    do
    {
      v156 = *(v155 - 1);
      v157 = *v155;
      swift_bridgeObjectRetain();
      sub_1BA6EE5AC((uint64_t *)&v514, v156, v157);
      swift_bridgeObjectRelease();
      v155 += 2;
      --v154;
    }
    while (v154);
  }
  swift_bridgeObjectRelease();
  v158 = v119[5];
  v159 = v119[6];
  __swift_project_boxed_opaque_existential_1(v119 + 2, v158);
  v160 = (*(uint64_t (**)(uint64_t, uint64_t))(v159 + 8))(v158, v159);
  sub_1BA6E3FB8(v160);
  LOBYTE(v514) = v497;
  v161 = FeedKind.selector.getter();
  if (v162)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v161, v162);
    swift_bridgeObjectRelease();
  }
  v519 = v521;
  v120 = v119 + 7;
  v115 = MEMORY[0x1E0DEE9E8];
  v517 = MEMORY[0x1E0DEE9E8];
  if (qword_1ED3C6318 != -1)
    goto LABEL_165;
LABEL_64:
  v163 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v163);
  if (qword_1ED3C6D90 != -1)
    swift_once();
  v164 = swift_bridgeObjectRetain();
  sub_1BA6E3FB8(v164);
  v165 = v119[10];
  v166 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v165);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v166 + 8))(v165, v166) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v501, 0x80000001BB981F30);
    swift_bridgeObjectRelease();
  }
  v167 = v119[10];
  v168 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v167);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v168 + 32))(v167, v168) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v76 + 9, 0x80000001BB981F10);
    swift_bridgeObjectRelease();
  }
  v169 = v119[10];
  v170 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v169);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v170 + 112))(v169, v170) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v76 + 6, 0x80000001BB981EF0);
    swift_bridgeObjectRelease();
  }
  v171 = v119[10];
  v172 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v171);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v172 + 88))(v171, v172) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000018, 0x80000001BB981EA0);
    swift_bridgeObjectRelease();
    v76 = 0xD000000000000016;
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000021, 0x80000001BB981EC0);
    swift_bridgeObjectRelease();
  }
  v173 = v119[10];
  v174 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v173);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v174 + 128))(v173, v174) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v506, 0x80000001BB981E80);
    swift_bridgeObjectRelease();
  }
  v175 = v119[10];
  v176 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v175);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v176 + 96))(v175, v176) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v76 + 23, 0x80000001BB981E50);
    swift_bridgeObjectRelease();
  }
  v177 = v119[10];
  v178 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v177);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v178 + 168))(v177, v178) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000016, 0x80000001BB981E30);
    swift_bridgeObjectRelease();
  }
  v179 = v119[10];
  v180 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v179);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v180 + 184))(v179, v180) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v76 + 16, 0x80000001BB981E00);
    swift_bridgeObjectRelease();
  }
  v181 = v119[10];
  v182 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v181);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v182 + 192))(v181, v182) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v76 + 7, 0x80000001BB981DE0);
    swift_bridgeObjectRelease();
  }
  v183 = v119[10];
  v184 = v119[11];
  __swift_project_boxed_opaque_existential_1(v120, v183);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v184 + 176))(v183, v184) & 1) != 0)
  {
    sub_1BA6EE5AC((uint64_t *)&v514, v76 - 2, 0x80000001BB981DC0);
    swift_bridgeObjectRelease();
  }
  v185 = objc_msgSend(v124, sel_isInternalBuild);
  sub_1BA4C010C((uint64_t)v120, (uint64_t)&v514);
  if (v185)
  {
    v186 = v515;
    v187 = v516;
    __swift_project_boxed_opaque_existential_1(&v514, v515);
    LOBYTE(v186) = (*(uint64_t (**)(uint64_t, uint64_t))(v187 + 200))(v186, v187);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v514);
    if ((v186 & 1) != 0)
    {
      sub_1BA6EE5AC(&v521, v76 + 3, 0x80000001BB981DA0);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v514);
  }
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000019, 0x80000001BB981940);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD00000000000001DLL, 0x80000001BB981960);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD00000000000001CLL, 0x80000001BB981980);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000018, 0x80000001BB9819A0);
  swift_bridgeObjectRelease();
  v505 = (char *)0xD000000000000014;
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000014, 0x80000001BB9819C0);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD00000000000001BLL, 0x80000001BB9819E0);
  swift_bridgeObjectRelease();
  sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000018, 0x80000001BB981A00);
  swift_bridgeObjectRelease();
  sub_1BA6E3FB8(v517);
  v188 = (char *)objc_msgSend((id)objc_opt_self(), sel_sharedAccount);
  v521 = v115;
  v189 = objc_msgSend(v188, sel_currentStoreFrontID);
  if (v189)
  {
    v190 = v189;
    v191 = sub_1BB8729A0();
    v193 = v192;

    v194 = sub_1BB8729A0();
    v196 = 0xD000000000000016;
    if (v193)
    {
      if (v194 == v191 && v193 == v195)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v197 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v197 & 1) == 0)
        {
          if (sub_1BB8729A0() == v191 && v193 == v199)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v200 = sub_1BB874398();
            swift_bridgeObjectRelease();
            if ((v200 & 1) == 0)
            {
              if (sub_1BB8729A0() == v191 && v193 == v483)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                v484 = sub_1BB874398();
                swift_bridgeObjectRelease();
                if ((v484 & 1) == 0)
                  goto LABEL_152;
              }
              swift_bridgeObjectRelease();
              v198 = "account-store-front-ca";
              goto LABEL_109;
            }
          }
          swift_bridgeObjectRelease();
          v198 = "account-store-front-au";
LABEL_109:
          sub_1BA6EE5AC((uint64_t *)&v514, 0xD000000000000016, (unint64_t)(v198 - 32) | 0x8000000000000000);
          goto LABEL_110;
        }
      }
      swift_bridgeObjectRelease();
      v198 = "account-store-front-us";
      goto LABEL_109;
    }
  }
  else
  {
    sub_1BB8729A0();
    v196 = 0xD000000000000016;
  }
  swift_bridgeObjectRelease();
  sub_1BB8729A0();
  swift_bridgeObjectRelease();
  sub_1BB8729A0();
  swift_bridgeObjectRelease();
  sub_1BB8729A0();
  swift_bridgeObjectRelease();
  sub_1BB8729A0();
LABEL_110:
  swift_bridgeObjectRelease();
  v201 = v506;
  while (1)
  {
    if (objc_msgSend(v188, sel_isPrimaryAccountEmailAddress))
    {
      sub_1BA6EE5AC((uint64_t *)&v514, v196 + 7, 0x80000001BB981CE0);
      swift_bridgeObjectRelease();
    }
    *(_QWORD *)&v514 = 0;
    *((_QWORD *)&v514 + 1) = 0xE000000000000000;
    sub_1BB873CB4();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v514 = v201;
    *((_QWORD *)&v514 + 1) = 0x80000001BB981A20;
    v202 = objc_msgSend(v188, sel_primaryLanguageCode);
    sub_1BB8729A0();

    sub_1BB872A0C();
    swift_bridgeObjectRelease();
    sub_1BB872AFC(v203);
    swift_bridgeObjectRelease();
    sub_1BA6EE5AC((uint64_t *)&v514, v514, *((uint64_t *)&v514 + 1));

    swift_bridgeObjectRelease();
    sub_1BA6E3FB8(v521);
    v204 = v119[15];
    v205 = v119[16];
    v498 = v119 + 12;
    __swift_project_boxed_opaque_existential_1(v119 + 12, v204);
    v188 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v205 + 8))(v204, v205);
    v191 = *((_QWORD *)v188 + 2);
    if (!v191)
      break;
    v521 = MEMORY[0x1E0DEE9D8];
    v193 = &v521;
    sub_1BA7447E8(0, v191, 0);
    v206 = v521;
    v196 = sub_1BA580CE4((uint64_t)v188);
    v208 = v207;
    v512 = v188 + 56;
    v210 = v209 & 1;
    v511 = 0xD000000000000010;
    v510 = (void (*)(char *, char *))0x80000001BB96C9C0;
    while ((v196 & 0x8000000000000000) == 0 && v196 < 1 << v188[32])
    {
      if (((*(_QWORD *)&v512[((unint64_t)v196 >> 3) & 0xFFFFFFFFFFFFF8] >> v196) & 1) == 0)
        goto LABEL_150;
      if (*((_DWORD *)v188 + 9) != v208)
        goto LABEL_151;
      LODWORD(v513) = v210;
      v119 = v188;
      v211 = *(_DWORD *)(*((_QWORD *)v188 + 6) + 4 * v196);
      *(_QWORD *)&v514 = 0;
      *((_QWORD *)&v514 + 1) = 0xE000000000000000;
      sub_1BB873CB4();
      swift_bridgeObjectRelease();
      *(_QWORD *)&v514 = v511;
      *((_QWORD *)&v514 + 1) = v510;
      LODWORD(v517) = v211;
      sub_1BB87420C();
      v193 = (uint64_t *)&v514;
      sub_1BB872AFC(v212);
      swift_bridgeObjectRelease();
      v213 = v514;
      v521 = v206;
      v215 = *(_QWORD *)(v206 + 16);
      v214 = *(_QWORD *)(v206 + 24);
      if (v215 >= v214 >> 1)
      {
        v193 = &v521;
        sub_1BA7447E8(v214 > 1, v215 + 1, 1);
        v206 = v521;
      }
      *(_QWORD *)(v206 + 16) = v215 + 1;
      *(_OWORD *)(v206 + 16 * v215 + 32) = v213;
      v216 = sub_1BA57FFE8(v196, v208, v513 & 1, (uint64_t)v119);
      v196 = v216;
      v208 = v217;
      v210 = v218 & 1;
      --v191;
      v188 = (char *)v119;
      if (!v191)
      {
        sub_1BA8CA884(v216, v217, v210);
        swift_bridgeObjectRelease();
        v119 = v504;
        v196 = 0xD000000000000016;
        goto LABEL_124;
      }
    }
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    if (sub_1BB8729A0() == v191 && v193 == v485)
    {
      swift_bridgeObjectRelease();
LABEL_156:
      swift_bridgeObjectRelease();
      v198 = "account-store-front-uk";
      goto LABEL_109;
    }
    v486 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v486 & 1) != 0)
      goto LABEL_156;
    if (sub_1BB8729A0() == v191 && v193 == v487)
    {
      swift_bridgeObjectRelease_n();
      v201 = v506;
      goto LABEL_161;
    }
    v488 = sub_1BB874398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v201 = v506;
    if ((v488 & 1) != 0)
    {
LABEL_161:
      sub_1BA6EE5AC((uint64_t *)&v514, v196 + 3, 0x80000001BB981D00);
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  v206 = MEMORY[0x1E0DEE9D8];
LABEL_124:
  v219 = sub_1BA6E43EC(v206);
  swift_bridgeObjectRelease();
  sub_1BA6E3FB8(v219);
  v220 = objc_msgSend((id)v119[17], sel_cachedSubscription);
  v221 = v196 + 5;
  v222 = 0x80000001BB963850;
  switch((unint64_t)objc_msgSend(v220, sel_unprotectedSubscriptionState))
  {
    case 0uLL:
      v221 = v196 + 3;
      v223 = "bundle-subscription-trial";
      goto LABEL_129;
    case 1uLL:
      v221 = v196 + 8;
      v223 = "bundle-subscription-subscribed";
      goto LABEL_129;
    case 2uLL:
      goto LABEL_130;
    case 3uLL:
      v221 = v196 + 12;
      v223 = "bundle-subscription-not-subscribed";
      goto LABEL_129;
    default:
      v223 = "bundle-subscription-unknown";
LABEL_129:
      v222 = (unint64_t)(v223 - 32) | 0x8000000000000000;
LABEL_130:

      sub_1BA6EE5AC((uint64_t *)&v514, v221, v222);
      swift_bridgeObjectRelease();
      sub_1BA6D69B0((uint64_t)&v514);
      v224 = *((_QWORD *)&v514 + 1);
      sub_1BA6D6924(v514, *((uint64_t *)&v514 + 1));
      if (v224)
        v225 = 0xEE00656E696C6666;
      else
        v225 = 0xED0000656E696C6ELL;
      sub_1BA6EE5AC((uint64_t *)&v514, 0x6F2D656369766564, v225);
      swift_bridgeObjectRelease();
      sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B9D90, (uint64_t (*)(uint64_t))sub_1BA76B9F0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
      v226 = swift_allocObject();
      *(_OWORD *)(v226 + 16) = xmmword_1BB8FB700;
      v227 = type metadata accessor for FormatOption();
      v228 = swift_allocBox();
      v230 = v229;
      if (qword_1ED3C6D30 != -1)
        swift_once();
      v231 = v508;
      v502 = (char *)__swift_project_value_buffer(v508, (uint64_t)qword_1ED476B90);
      v512 = *(char **)(v499 + 16);
      v232 = (uint64_t)v493;
      ((void (*)(char *, char *, uint64_t))v512)(v493, v502, v231);
      v511 = type metadata accessor for FormatVersionRequirement.Value(0);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D708();
      v234 = v233;
      v235 = swift_allocObject();
      *(_QWORD *)(v235 + 16) = v234;
      *(_QWORD *)(v235 + 24) = MEMORY[0x1E0DEE9D8];
      *v230 = v506;
      v230[1] = 0x80000001BB981A40;
      v230[2] = v235 | 0x3000000000000000;
      v230[3] = 1;
      v236 = (uint64_t)v230 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v236, type metadata accessor for FormatVersionRequirement);
      v510 = *(void (**)(char *, char *))(v489 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v236, 0, 1, v507);
      *(_QWORD *)(v226 + 32) = v228;
      v237 = swift_allocBox();
      v513 = (_QWORD *)v226;
      v499 = v237;
      v239 = v238;
      v240 = v502;
      v241 = (void (*)(uint64_t, char *, uint64_t))v512;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v232, v502, v231);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D708();
      v243 = v242;
      v244 = swift_allocObject();
      *(_QWORD *)(v244 + 16) = v243;
      *(_QWORD *)(v244 + 24) = MEMORY[0x1E0DEE9D8];
      *v239 = 0xD000000000000016;
      v239[1] = 0x80000001BB981A60;
      v239[2] = v244 | 0x3000000000000000;
      v239[3] = 1;
      v245 = (uint64_t)v239 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v245, type metadata accessor for FormatVersionRequirement);
      v246 = v507;
      v247 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v245, 0, 1, v507);
      v513[5] = v499;
      v497 = swift_allocBox();
      v249 = v248;
      v241(v232, v240, v231);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D6E4();
      v251 = v250;
      v252 = swift_allocObject();
      *(_QWORD *)(v252 + 16) = v251;
      *(_QWORD *)(v252 + 24) = MEMORY[0x1E0DEE9D8];
      v499 = 0xD000000000000013;
      *v249 = 0xD000000000000013;
      v249[1] = 0x80000001BB981A80;
      v249[2] = v252 | 0x3000000000000000;
      v249[3] = 1;
      v253 = (uint64_t)v249 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v253, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v247)(v253, 0, 1, v246);
      v513[6] = v497;
      v254 = swift_allocBox();
      v256 = v255;
      v257 = v502;
      v241(v232, v502, v231);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D6E4();
      v259 = v258;
      v260 = swift_allocObject();
      *(_QWORD *)(v260 + 16) = v259;
      *(_QWORD *)(v260 + 24) = MEMORY[0x1E0DEE9D8];
      *v256 = v505;
      v256[1] = 0x80000001BB981AA0;
      v256[2] = v260 | 0x3000000000000000;
      v256[3] = 1;
      v261 = (uint64_t)v256 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v261, type metadata accessor for FormatVersionRequirement);
      v262 = v261;
      v263 = v507;
      v264 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v262, 0, 1, v507);
      v513[7] = v254;
      v265 = swift_allocBox();
      v267 = v266;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v232, v257, v231);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D774();
      v269 = v268;
      v270 = swift_allocObject();
      *(_QWORD *)(v270 + 16) = v269;
      *(_QWORD *)(v270 + 24) = MEMORY[0x1E0DEE9D8];
      strcpy((char *)v267, "layout-scale");
      *(_BYTE *)(v267 + 13) = 0;
      *(_WORD *)(v267 + 14) = -5120;
      *(_QWORD *)(v267 + 16) = v270 | 0x3000000000000000;
      *(_QWORD *)(v267 + 24) = 1;
      v271 = v267 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v271, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v264)(v271, 0, 1, v263);
      v513[8] = v265;
      v272 = v513;
      v497 = swift_allocBox();
      v274 = v273;
      if (qword_1ED3C6D58 != -1)
        swift_once();
      v502 = (char *)__swift_project_value_buffer(v231, (uint64_t)qword_1ED476C08);
      ((void (*)(uint64_t, char *, uint64_t))v512)(v232, v502, v231);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v276 = v275;
      v277 = swift_allocObject();
      *(_QWORD *)(v277 + 16) = v276;
      *(_QWORD *)(v277 + 24) = MEMORY[0x1E0DEE9D8];
      *v274 = v500;
      v274[1] = 0x80000001BB981AC0;
      v274[2] = v277 | 0x3000000000000000;
      v274[3] = 1;
      v278 = (uint64_t)v274 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v278, type metadata accessor for FormatVersionRequirement);
      v279 = v263;
      v280 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v278, 0, 1, v263);
      v272[9] = v497;
      v500 = (char *)swift_allocBox();
      v282 = v281;
      v283 = v502;
      v284 = (void (*)(uint64_t, char *, uint64_t))v512;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v232, v502, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v286 = v285;
      v287 = swift_allocObject();
      *(_QWORD *)(v287 + 16) = v286;
      *(_QWORD *)(v287 + 24) = MEMORY[0x1E0DEE9D8];
      *v282 = v501;
      v282[1] = 0x80000001BB981AE0;
      v282[2] = v287 | 0x3000000000000000;
      v282[3] = 1;
      v288 = (uint64_t)v282 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v288, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v280)(v288, 0, 1, v279);
      v289 = v513;
      v513[10] = v500;
      v501 = swift_allocBox();
      v291 = v290;
      v284(v232, v283, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v293 = v292;
      v294 = swift_allocObject();
      *(_QWORD *)(v294 + 16) = v293;
      *(_QWORD *)(v294 + 24) = MEMORY[0x1E0DEE9D8];
      *v291 = v505;
      v291[1] = 0x80000001BB981B00;
      v291[2] = v294 | 0x3000000000000000;
      v291[3] = 1;
      v295 = (uint64_t)v291 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v295, type metadata accessor for FormatVersionRequirement);
      v296 = v507;
      v297 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v295, 0, 1, v507);
      v289[11] = v501;
      v298 = swift_allocBox();
      v300 = v299;
      v301 = v502;
      v302 = (void (*)(uint64_t, char *, uint64_t))v512;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v232, v502, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D714();
      v304 = v303;
      v305 = swift_allocObject();
      *(_QWORD *)(v305 + 16) = v304;
      *(_QWORD *)(v305 + 24) = MEMORY[0x1E0DEE9D8];
      v306 = v499;
      *v300 = v499;
      v300[1] = 0x80000001BB981B20;
      v300[2] = v305 | 0x3000000000000000;
      v300[3] = 1;
      v307 = (uint64_t)v300 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v307, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v297)(v307, 0, 1, v296);
      v308 = v513;
      v513[12] = v298;
      v309 = swift_allocBox();
      v311 = v310;
      v312 = v301;
      v313 = v508;
      v302(v232, v312, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5D0();
      v315 = v314;
      v316 = swift_allocObject();
      *(_QWORD *)(v316 + 16) = v315;
      *(_QWORD *)(v316 + 24) = MEMORY[0x1E0DEE9D8];
      *v311 = v306;
      v311[1] = 0x80000001BB981B40;
      v311[2] = v316 | 0x3000000000000000;
      v311[3] = 1;
      v317 = (uint64_t)v311 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v317, type metadata accessor for FormatVersionRequirement);
      v318 = v317;
      v319 = v507;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v297)(v318, 0, 1, v507);
      v308[13] = v309;
      v320 = v308;
      v321 = swift_allocBox();
      v323 = v322;
      v324 = (void (*)(uint64_t, uint64_t, uint64_t))v512;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v232, v502, v313);
      swift_storeEnumTagMultiPayload();
      v325 = swift_allocObject();
      *(_QWORD *)(v325 + 16) = 0x400921FB54442D18;
      *(_QWORD *)(v325 + 24) = MEMORY[0x1E0DEE9D8];
      *v323 = 26992;
      v323[1] = 0xE200000000000000;
      v323[2] = v325 | 0x3000000000000000;
      v323[3] = 1;
      v326 = (uint64_t)v323 + *(int *)(v227 + 28);
      sub_1BA5193C4(v232, v326, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v326, 0, 1, v319);
      v320[14] = v321;
      v502 = (char *)swift_allocBox();
      v328 = v327;
      v329 = v232;
      v330 = v324;
      if (qword_1ED3C6D20 != -1)
        swift_once();
      v501 = __swift_project_value_buffer(v313, (uint64_t)qword_1ED476B78);
      v324(v329, v501, v313);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D768();
      v332 = v331;
      v333 = swift_allocObject();
      *(_QWORD *)(v333 + 16) = v332;
      *(_QWORD *)(v333 + 24) = MEMORY[0x1E0DEE9D8];
      *v328 = v505;
      v328[1] = 0x80000001BB981B60;
      v328[2] = v333 | 0x3000000000000000;
      v328[3] = 1;
      v334 = (uint64_t)v328 + *(int *)(v227 + 28);
      sub_1BA5193C4(v329, v334, type metadata accessor for FormatVersionRequirement);
      v335 = v507;
      v336 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v334, 0, 1, v507);
      v337 = v513;
      v513[15] = v502;
      v502 = (char *)swift_allocBox();
      v339 = v338;
      v330(v329, v501, v313);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D768();
      v341 = v340;
      v342 = swift_allocObject();
      *(_QWORD *)(v342 + 16) = v341;
      *(_QWORD *)(v342 + 24) = MEMORY[0x1E0DEE9D8];
      *v339 = v506;
      v339[1] = 0x80000001BB981B80;
      v339[2] = v342 | 0x3000000000000000;
      v339[3] = 1;
      v343 = (uint64_t)v339 + *(int *)(v227 + 28);
      sub_1BA5193C4(v329, v343, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v336)(v343, 0, 1, v335);
      v337[16] = v502;
      v501 = swift_allocBox();
      v345 = v344;
      v346 = v337;
      v347 = v336;
      v348 = v335;
      if (qword_1ED3C6D48 != -1)
        swift_once();
      v349 = v508;
      v502 = (char *)__swift_project_value_buffer(v508, (uint64_t)qword_1ED476BD8);
      ((void (*)(uint64_t, char *, uint64_t))v512)(v329, v502, v349);
      swift_storeEnumTagMultiPayload();
      v350 = v490;
      sub_1BB86D750();
      sub_1BB86D930();
      v352 = v351;
      (*(void (**)(char *, uint64_t))(v491 + 8))(v350, v492);
      v353 = swift_allocObject();
      *(_QWORD *)(v353 + 16) = v352;
      *(_QWORD *)(v353 + 24) = MEMORY[0x1E0DEE9D8];
      *v345 = 0xD00000000000001BLL;
      v345[1] = 0x80000001BB981BA0;
      v345[2] = v353 | 0x3000000000000000;
      v345[3] = 1;
      v354 = (uint64_t)v345 + *(int *)(v227 + 28);
      sub_1BA5193C4(v329, v354, type metadata accessor for FormatVersionRequirement);
      v355 = v347;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v347)(v354, 0, 1, v348);
      v346[17] = v501;
      v356 = v227;
      v357 = v348;
      v501 = swift_allocBox();
      v359 = v358;
      v360 = v502;
      v361 = (void (*)(uint64_t, char *, uint64_t))v512;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v329, v502, v349);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v363 = v362;
      v364 = swift_allocObject();
      *(_QWORD *)(v364 + 16) = v363;
      *(_QWORD *)(v364 + 24) = MEMORY[0x1E0DEE9D8];
      *v359 = v505;
      v359[1] = 0x80000001BB981BC0;
      v359[2] = v364 | 0x3000000000000000;
      v359[3] = 1;
      v365 = (uint64_t)v359 + *(int *)(v356 + 28);
      sub_1BA5193C4(v329, v365, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v355)(v365, 0, 1, v357);
      v513[18] = v501;
      v505 = (char *)swift_allocBox();
      v367 = v366;
      v368 = v360;
      v369 = v360;
      v370 = v361;
      v361(v329, v368, v349);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v372 = v371;
      v373 = swift_allocObject();
      *(_QWORD *)(v373 + 16) = v372;
      *(_QWORD *)(v373 + 24) = MEMORY[0x1E0DEE9D8];
      *v367 = v506;
      v367[1] = 0x80000001BB981BE0;
      v367[2] = v373 | 0x3000000000000000;
      v367[3] = 1;
      v374 = (uint64_t)v367 + *(int *)(v356 + 28);
      sub_1BA5193C4(v329, v374, type metadata accessor for FormatVersionRequirement);
      v375 = v374;
      v376 = v507;
      v377 = v355;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v355)(v375, 0, 1, v507);
      v378 = v513;
      v513[19] = v505;
      v506 = swift_allocBox();
      v380 = v379;
      v381 = v508;
      v370(v329, v369, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v383 = v382;
      v384 = swift_allocObject();
      *(_QWORD *)(v384 + 16) = v383;
      *(_QWORD *)(v384 + 24) = MEMORY[0x1E0DEE9D8];
      *v380 = 0xD000000000000017;
      v380[1] = 0x80000001BB981C00;
      v380[2] = v384 | 0x3000000000000000;
      v380[3] = 1;
      v385 = (uint64_t)v380 + *(int *)(v356 + 28);
      sub_1BA5193C4(v329, v385, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v377)(v385, 0, 1, v376);
      v378[20] = v506;
      v386 = v378;
      v387 = swift_allocBox();
      v389 = v388;
      ((void (*)(uint64_t, char *, uint64_t))v512)(v329, v502, v381);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D720();
      v391 = v390;
      v392 = swift_allocObject();
      *(_QWORD *)(v392 + 16) = v391;
      *(_QWORD *)(v392 + 24) = MEMORY[0x1E0DEE9D8];
      *v389 = 0xD000000000000016;
      v389[1] = 0x80000001BB981C20;
      v389[2] = v392 | 0x3000000000000000;
      v389[3] = 1;
      v393 = (uint64_t)v389 + *(int *)(v356 + 28);
      sub_1BA5193C4(v329, v393, type metadata accessor for FormatVersionRequirement);
      v394 = v393;
      v395 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v394, 0, 1, v376);
      v378[21] = v387;
      v506 = swift_allocBox();
      v397 = v396;
      v398 = v329;
      v399 = v395;
      v400 = v356;
      if (qword_1ED3C6D50 != -1)
        swift_once();
      v401 = v508;
      v509 = __swift_project_value_buffer(v508, (uint64_t)qword_1ED476BF0);
      ((void (*)(uint64_t, uint64_t, uint64_t))v512)(v398, v509, v401);
      swift_storeEnumTagMultiPayload();
      v402 = sub_1BB86D63C();
      v403 = swift_allocObject();
      *(_QWORD *)(v403 + 16) = v402;
      *(_QWORD *)(v403 + 24) = MEMORY[0x1E0DEE9D8];
      strcpy((char *)v397, "column-count");
      *(_BYTE *)(v397 + 13) = 0;
      *(_WORD *)(v397 + 14) = -5120;
      *(_QWORD *)(v397 + 16) = v403 | 0x4000000000000000;
      *(_QWORD *)(v397 + 24) = 1;
      v404 = v397 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v404, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v399)(v404, 0, 1, v376);
      v386[22] = v506;
      v506 = swift_allocBox();
      v405 = v376;
      v407 = v406;
      v408 = v509;
      ((void (*)(uint64_t, uint64_t, uint64_t))v512)(v398, v509, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5C4();
      v410 = v409;
      v411 = swift_allocObject();
      *(_QWORD *)(v411 + 16) = v410;
      *(_QWORD *)(v411 + 24) = MEMORY[0x1E0DEE9D8];
      strcpy((char *)v407, "column-width");
      *(_BYTE *)(v407 + 13) = 0;
      *(_WORD *)(v407 + 14) = -5120;
      *(_QWORD *)(v407 + 16) = v411 | 0x3000000000000000;
      *(_QWORD *)(v407 + 24) = 1;
      v412 = v407 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v412, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v399)(v412, 0, 1, v405);
      v386[23] = v506;
      v506 = swift_allocBox();
      v414 = v413;
      v415 = v508;
      v416 = (void (*)(uint64_t, uint64_t, uint64_t))v512;
      ((void (*)(uint64_t, uint64_t, uint64_t))v512)(v398, v408, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5D0();
      v418 = v417;
      v419 = swift_allocObject();
      *(_QWORD *)(v419 + 16) = v418;
      *(_QWORD *)(v419 + 24) = MEMORY[0x1E0DEE9D8];
      *v414 = v499;
      v414[1] = 0x80000001BB981C40;
      v414[2] = v419 | 0x3000000000000000;
      v414[3] = 1;
      v420 = (uint64_t)v414 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v420, type metadata accessor for FormatVersionRequirement);
      v421 = v405;
      v422 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v420, 0, 1, v421);
      v423 = v513;
      v513[24] = v506;
      v505 = (char *)swift_allocBox();
      v425 = v424;
      v416(v398, v408, v415);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D648();
      v427 = v426;
      v428 = swift_allocObject();
      *(_QWORD *)(v428 + 16) = v427;
      *(_QWORD *)(v428 + 24) = MEMORY[0x1E0DEE9D8];
      v506 = 0xD000000000000010;
      *v425 = 0xD000000000000010;
      v425[1] = 0x80000001BB981C60;
      v425[2] = v428 | 0x3000000000000000;
      v425[3] = 1;
      v429 = (uint64_t)v425 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v429, type metadata accessor for FormatVersionRequirement);
      v430 = v429;
      v431 = v507;
      v432 = v422;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v422)(v430, 0, 1, v507);
      v423[25] = v505;
      v502 = (char *)swift_allocBox();
      v434 = v433;
      v435 = v509;
      v436 = v508;
      v416(v398, v509, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5E8();
      v438 = v437;
      v439 = swift_allocObject();
      *(_QWORD *)(v439 + 16) = v438;
      *(_QWORD *)(v439 + 24) = MEMORY[0x1E0DEE9D8];
      v505 = (char *)0xD000000000000019;
      *v434 = 0xD000000000000019;
      v434[1] = 0x80000001BB981C80;
      v434[2] = v439 | 0x3000000000000000;
      v434[3] = 1;
      v440 = (uint64_t)v434 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v440, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v432)(v440, 0, 1, v431);
      v441 = v513;
      v513[26] = v502;
      v442 = swift_allocBox();
      v444 = v443;
      v416(v398, v435, v436);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D654();
      v446 = v445;
      v447 = swift_allocObject();
      *(_QWORD *)(v447 + 16) = v446;
      *(_QWORD *)(v447 + 24) = MEMORY[0x1E0DEE9D8];
      *v444 = v506;
      v444[1] = 0x80000001BB981CA0;
      v444[2] = v447 | 0x3000000000000000;
      v444[3] = 1;
      v448 = (uint64_t)v444 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v448, type metadata accessor for FormatVersionRequirement);
      v449 = v448;
      v450 = v507;
      v451 = v510;
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v510)(v449, 0, 1, v507);
      v452 = v441;
      v441[27] = v442;
      v453 = swift_allocBox();
      v455 = v454;
      v416(v398, v509, v508);
      swift_storeEnumTagMultiPayload();
      sub_1BB86D5F4();
      v457 = v456;
      v458 = swift_allocObject();
      *(_QWORD *)(v458 + 16) = v457;
      *(_QWORD *)(v458 + 24) = MEMORY[0x1E0DEE9D8];
      *v455 = v505;
      v455[1] = 0x80000001BB981CC0;
      v455[2] = v458 | 0x3000000000000000;
      v455[3] = 1;
      v459 = (uint64_t)v455 + *(int *)(v400 + 28);
      sub_1BA5193C4(v398, v459, type metadata accessor for FormatVersionRequirement);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v451)(v459, 0, 1, v450);
      v452[28] = v453;
      v460 = v504;
      v461 = v504[15];
      v462 = v504[16];
      v463 = v498;
      __swift_project_boxed_opaque_existential_1(v498, v461);
      v464 = (*(uint64_t (**)(uint64_t, uint64_t))(v462 + 8))(v461, v462);
      v465 = v460[15];
      v466 = v460[16];
      __swift_project_boxed_opaque_existential_1(v463, v465);
      v467 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v466 + 16))(v465, v466);
      v468 = v460[15];
      v469 = v460[16];
      __swift_project_boxed_opaque_existential_1(v463, v468);
      (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v469 + 24))(&v514, v468, v469);
      v470 = v514;
      v471 = v460[15];
      v472 = v460[16];
      __swift_project_boxed_opaque_existential_1(v463, v471);
      v473 = (*(uint64_t (**)(uint64_t, uint64_t))(v472 + 40))(v471, v472);
      v512 = (char *)v519;
      sub_1BA4C010C((uint64_t)v523, (uint64_t)&v514);
      v474 = v460[15];
      v475 = v460[16];
      __swift_project_boxed_opaque_existential_1(v463, v474);
      v476 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v475 + 32);
      v477 = v467;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v476(&v521, v474, v475);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      v478 = v521;
      v479 = v522;
      type metadata accessor for FormatSystem();
      v480 = swift_allocObject();
      v481 = v513;
      *(_QWORD *)(v480 + 16) = v512;
      *(_QWORD *)(v480 + 24) = v481;
      sub_1BA4CECCC(&v514, v480 + 32);
      *(_QWORD *)(v480 + 72) = v464;
      *(_QWORD *)(v480 + 80) = v467;
      *(_OWORD *)(v480 + 88) = v470;
      *(_QWORD *)(v480 + 104) = v473;
      *(_QWORD *)(v480 + 112) = v478;
      *(_QWORD *)(v480 + 120) = v479;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v523);
      return v480;
  }
}

uint64_t sub_1BB23AA28(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *i;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;

  v3 = *(_QWORD *)(result + 16);
  if (!v3)
    return MEMORY[0x1E0DEE9D8];
  v6 = 0;
  v7 = result + 40;
  v8 = -(uint64_t)v3;
  v9 = MEMORY[0x1E0DEE9D8];
  v19 = result + 40;
  do
  {
    if (v6 <= v3)
      v10 = v3;
    else
      v10 = v6;
    v11 = -(uint64_t)v10;
    for (i = (uint64_t *)(v7 + 16 * v6++); ; i += 2)
    {
      if (v11 + v6 == 1)
      {
        __break(1u);
        return result;
      }
      v13 = *(i - 1);
      v14 = *i;
      if (v13 != a2 || v14 != a3)
      {
        result = sub_1BB874398();
        if ((result & 1) == 0)
          break;
      }
      ++v6;
      if (v8 + v6 == 1)
        return v9;
    }
    swift_bridgeObjectRetain();
    result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
      result = sub_1BA7447E8(0, *(_QWORD *)(v9 + 16) + 1, 1);
    v17 = *(_QWORD *)(v9 + 16);
    v16 = *(_QWORD *)(v9 + 24);
    if (v17 >= v16 >> 1)
      result = sub_1BA7447E8(v16 > 1, v17 + 1, 1);
    *(_QWORD *)(v9 + 16) = v17 + 1;
    v18 = v9 + 16 * v17;
    *(_QWORD *)(v18 + 32) = v13;
    *(_QWORD *)(v18 + 40) = v14;
    v3 = v20;
    v7 = v19;
  }
  while (v8 + v6);
  return v9;
}

uint64_t sub_1BB23AB94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v15 = a2;
  v4 = type metadata accessor for DebugFormatCompilerResultEntry();
  MEMORY[0x1E0C80A78](v4);
  v14 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v9 = (uint64_t *)((char *)&v12 - v8);
  result = MEMORY[0x1E0DEE9D8];
  v18 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)(a1 + 16))
  {
    v12 = v2;
    v13 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    sub_1BA4C2DD8(a1 + v13, (uint64_t)&v12 - v8, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatCompilerResultEntry);
    v11 = *v9;
    v16 = 0;
    v17 = 0xE000000000000000;
    __asm { BR              X9 }
  }
  return result;
}

void sub_1BB23AE4C(uint64_t a1@<X8>, double a2@<D0>, double a3@<D1>, double a4@<D2>, double a5@<D3>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v10 = sub_1BB86D7A4();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for DebugFormatEditorLayoutContext();
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB0B4CD8(0);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1BB86E494();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14))
  {
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB0B4CD8);
    v21 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  }
  else
  {
    sub_1BA4C2DD8((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
    sub_1BA4A2E80((uint64_t)v20, (uint64_t (*)(_QWORD))sub_1BB0B4CD8);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, &v17[*(int *)(v14 + 20)], v10);
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatEditorLayoutContext);
    v21 = (id)sub_1BB86D738();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  v22 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  objc_msgSend(v22, sel_scale);
  v24 = v23;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(double *)(a1 + 16) = a2;
  *(double *)(a1 + 24) = a3;
  *(double *)(a1 + 32) = a4;
  *(double *)(a1 + 40) = a5;
  *(_QWORD *)(a1 + 48) = v24;
  *(_QWORD *)(a1 + 56) = v21;
}

uint64_t sub_1BB23B084()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB23B0A8()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BB23B0B4(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2354E4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB23B0BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;

  v1 = type metadata accessor for FormatDerivedDataCompilerSettings();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v3 = v0 + ((v2 + 32) & ~v2) + *(int *)(v1 + 20);
  type metadata accessor for FormatVersioningModeSelection(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
    goto LABEL_4;
  if (EnumCaseMultiPayload <= 1)
  {
    swift_bridgeObjectRelease();
    v3 += *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
LABEL_4:
    v5 = sub_1BB86EB84();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB23B190(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatDerivedDataCompilerSettings() - 8) + 80);
  return sub_1BAFBC720(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), v1 + ((v3 + 32) & ~v3));
}

uint64_t sub_1BB23B1D0()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB23B1DC()
{
  uint64_t v0;

  return sub_1BB235F94(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB23B1E4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB23B218(uint64_t a1)
{
  uint64_t *v1;

  return sub_1BB236298(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1BB23B224()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  sub_1BB23B264(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  swift_release();
  return swift_deallocObject();
}

void sub_1BB23B264(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

void sub_1BB23B270()
{
  uint64_t v0;

  sub_1BB2364E4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

id sub_1BB23B284(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1BB23B290(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B7E98, (uint64_t (*)(uint64_t))MEMORY[0x1E0DB4170], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB23B2AC(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2BEC30, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatCompilingPackage, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB23B2C8()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1BB23B2D4()
{
  uint64_t v0;

  return sub_1BB2361B4(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BB23B2DC(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3C4510, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0C48], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB23B2F8(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3C4500, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0AE8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB23B314()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB23B338()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BB23B344()
{
  uint64_t v0;

  return sub_1BB235704(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB23B34C()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unsigned int EnumCaseMultiPayload;
  uint64_t v5;

  v1 = type metadata accessor for FormatDerivedDataCompilerSettings();
  v2 = (*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  swift_bridgeObjectRelease();
  v3 = v0 + v2 + *(int *)(v1 + 20);
  type metadata accessor for FormatVersioningModeSelection(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
    goto LABEL_4;
  if (EnumCaseMultiPayload <= 1)
  {
    swift_bridgeObjectRelease();
    v3 += *(int *)(type metadata accessor for FormatVersioningModeRelease(0) + 20);
LABEL_4:
    v5 = sub_1BB86EB84();
    (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
  }
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB23B42C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  v3 = *(_QWORD *)(type metadata accessor for FormatDerivedDataCompilerSettings() - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_1BAFBE33C(a1, (uint64_t *)(v1 + v4), *(_QWORD *)(v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFF8)));
}

uint64_t sub_1BB23B47C()
{
  return objectdestroy_6Tm((void (*)(_QWORD))MEMORY[0x1E0DEEB08]);
}

uint64_t sub_1BB23B488(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB235E3C(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

_QWORD *sub_1BB23B4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t *v7;
  void *v8;
  id v9;
  id v10;
  void *v11;
  double v12;
  id v13;
  uint64_t v14;
  id v15;
  id v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  id v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD **v35;
  _QWORD *v36;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v38;
  unint64_t v39;
  _OWORD *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char v53;
  unint64_t v54;
  unint64_t v55;
  _OWORD *v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _OWORD v67[4];
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;

  v5 = v4;
  v66 = a4;
  v65 = a3;
  v62 = a2;
  v63 = a1;
  v64 = type metadata accessor for DebugGroupLayoutKey();
  MEMORY[0x1E0C80A78](v64);
  v7 = (uint64_t *)((char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (void *)objc_opt_self();
  v9 = objc_msgSend(v8, sel_systemGrayColor);
  v10 = objc_msgSend(v8, sel_lightGrayColor);
  v11 = (void *)objc_opt_self();
  v12 = *MEMORY[0x1E0DC1420];
  v13 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 12.0, *MEMORY[0x1E0DC1420]);
  v14 = sub_1BACD43D0(v9, 0, 0, v10, v13, 44.0, 44.0);

  v4[4] = v14;
  v15 = objc_msgSend(v8, sel_lightGrayColor);
  v16 = objc_msgSend(v11, sel_systemFontOfSize_weight_, 12.0, v12);
  v17 = sub_1BACD43D0(0, 0, 0, v15, v16, 44.0, 44.0);

  v4[5] = v17;
  v18 = objc_msgSend(v8, sel_lightGrayColor);
  v19 = v11;
  v20 = v63;
  v21 = objc_msgSend(v19, sel_systemFontOfSize_weight_, 12.0, v12);
  v22 = sub_1BACD43D0(0, 4271950, 0xE300000000000000, v18, v21, 44.0, 44.0);

  v23 = MEMORY[0x1E0DEE9E8];
  v24 = MEMORY[0x1E0DEE9E0];
  v4[6] = v22;
  v4[7] = v23;
  v4[8] = v23;
  v4[9] = v24;
  v25 = MEMORY[0x1E0DEE9D8];
  v4[10] = MEMORY[0x1E0DEE9D8];
  v4[11] = v23;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_sections) = v25;
  *(_QWORD *)((char *)v4 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_feedItemImages) = v24;
  sub_1BA4C2DD8(v20, (uint64_t)v4 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_key, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v26 = (_QWORD *)(v20 + *(int *)(v64 + 24));
  v27 = v26[4];
  v28 = v26[5];
  __swift_project_boxed_opaque_existential_1(v26 + 1, v27);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v28 + 64))(&v68, v27, v28);
  v29 = *((_QWORD *)&v69 + 1);
  if (*((_QWORD *)&v69 + 1))
  {
    v30 = v70;
    __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
    v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v29, v30);
    v33 = v32;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
    sub_1BA4C2DD8(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
    if (v33)
      goto LABEL_6;
  }
  else
  {
    sub_1BA554698((uint64_t)&v68);
    sub_1BA4C2DD8(v20, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  }
  v31 = *v7;
  v33 = v7[1];
  swift_bridgeObjectRetain();
LABEL_6:
  sub_1BA4A2E80((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  v5[2] = v31;
  v5[3] = v33;
  sub_1BA4C010C(v66, (uint64_t)&v68);
  type metadata accessor for DebugInspectHeadlineService();
  v34 = swift_allocObject();
  sub_1BA4CECCC(&v68, v34 + 16);
  *(_QWORD *)((char *)v5 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_headlineService) = v34;
  sub_1BB23D42C(v20, (uint64_t *)v67);
  v35 = (_QWORD **)((char *)v5 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_sections);
  swift_beginAccess();
  v36 = *v35;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v35 = v36;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v36 = sub_1BB3928B8(0, v36[2] + 1, 1, v36);
    *v35 = v36;
  }
  v39 = v36[2];
  v38 = v36[3];
  if (v39 >= v38 >> 1)
  {
    v36 = sub_1BB3928B8((_QWORD *)(v38 > 1), v39 + 1, 1, v36);
    *v35 = v36;
  }
  v36[2] = v39 + 1;
  v40 = &v36[8 * v39];
  v41 = v67[0];
  v42 = v67[1];
  v43 = v67[3];
  v40[4] = v67[2];
  v40[5] = v43;
  v40[2] = v41;
  v40[3] = v42;
  swift_endAccess();
  v44 = v26[4];
  v45 = v26[5];
  __swift_project_boxed_opaque_existential_1(v26 + 1, v44);
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v45 + 64))(&v68, v44, v45);
  v46 = *((_QWORD *)&v69 + 1);
  if (!*((_QWORD *)&v69 + 1))
  {
    sub_1BA554698((uint64_t)&v68);
LABEL_22:
    v50 = v62;
    goto LABEL_23;
  }
  v47 = v70;
  __swift_project_boxed_opaque_existential_1(&v68, *((uint64_t *)&v69 + 1));
  v48 = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 32))(v46, v47);
  if (!v48)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
    goto LABEL_22;
  }
  v49 = *(_QWORD *)(v48 + 16);
  swift_bridgeObjectRetain();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  v50 = v62;
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    v51 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  else
  {
    v51 = *(_QWORD *)((v49 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v51)
  {
    sub_1BB23E4F8(v20, (uint64_t)&v68);
    swift_beginAccess();
    v52 = *v35;
    v53 = swift_isUniquelyReferenced_nonNull_native();
    *v35 = v52;
    if ((v53 & 1) == 0)
    {
      v52 = sub_1BB3928B8(0, v52[2] + 1, 1, v52);
      *v35 = v52;
    }
    v55 = v52[2];
    v54 = v52[3];
    if (v55 >= v54 >> 1)
    {
      v52 = sub_1BB3928B8((_QWORD *)(v54 > 1), v55 + 1, 1, v52);
      *v35 = v52;
    }
    v52[2] = v55 + 1;
    v56 = &v52[8 * v55];
    v57 = v68;
    v58 = v69;
    v59 = v71;
    v56[4] = v70;
    v56[5] = v59;
    v56[2] = v57;
    v56[3] = v58;
    swift_endAccess();
  }
LABEL_23:
  __swift_destroy_boxed_opaque_existential_1(v66);
  sub_1BACD5E78(v65);
  sub_1BA4A2E80(v50, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
  sub_1BA4A2E80(v20, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  return v5;
}

id *sub_1BB23BADC()
{
  id *v0;

  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4A2E80((uint64_t)v0 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_key, (uint64_t (*)(_QWORD))type metadata accessor for DebugGroupLayoutKey);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_1BB23BB80()
{
  sub_1BB23BADC();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB23BBA4()
{
  return type metadata accessor for DebugPersonalizationInspectViewDataSource();
}

uint64_t type metadata accessor for DebugPersonalizationInspectViewDataSource()
{
  uint64_t result;

  result = qword_1EF2BEC80;
  if (!qword_1EF2BEC80)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB23BBE8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for DebugGroupLayoutKey();
  if (v1 <= 0x3F)
    return swift_updateClassMetadata2();
  return result;
}

uint64_t sub_1BB23BC94(void *a1, uint64_t a2, _QWORD *a3, void (*a4)(id))
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  uint64_t *v13;
  id v14;
  char isUniquelyReferenced_nonNull_native;
  id v16;
  id v17;
  uint64_t v18;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v8 = result;
    __swift_project_boxed_opaque_existential_1(a3, a3[3]);
    v9 = sub_1BB86DEE8();
    v11 = v10;
    if (a1)
      v12 = a1;
    else
      v12 = *(id *)(v8 + 48);
    v13 = (uint64_t *)(v8 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_feedItemImages);
    swift_beginAccess();
    v14 = a1;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v13;
    *v13 = 0x8000000000000000;
    sub_1BB4BF834((uint64_t)v12, v9, v11, isUniquelyReferenced_nonNull_native);
    *v13 = v18;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    v16 = v14;
    if (!a1)
      v16 = *(id *)(v8 + 48);
    v17 = v14;
    a4(v16);

    return swift_release();
  }
  return result;
}

uint64_t sub_1BB23BDF8(uint64_t a1)
{
  return sub_1BB0B6A68(a1 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_key);
}

uint64_t sub_1BB23BE34(uint64_t *a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD), uint64_t a5)
{
  uint64_t v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  _WORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  void (*v35)(uint64_t);
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 *v49;
  __int128 v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  _QWORD *v84;
  void (*v85)(uint64_t);
  uint64_t ObjCClassFromMetadata;
  _QWORD *v87;
  id v88;
  uint64_t v89;
  uint64_t v90;
  id v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *boxed_opaque_existential_0;
  unint64_t v101;
  unint64_t v102;
  char isUniquelyReferenced_nonNull_native;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[2];
  void (*v109)(uint64_t);
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  _QWORD *v122;
  unint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char v129;
  void *v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;

  sub_1BA7C2AA0(0);
  MEMORY[0x1E0C80A78](v11);
  v116 = (char *)v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v115 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v115);
  v114 = (char *)v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v113 = type metadata accessor for FeedHeadline(0);
  v112 = *(_QWORD *)(v113 - 8);
  MEMORY[0x1E0C80A78](v113);
  v111 = (char *)v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (int *)type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v15);
  v17 = (_WORD *)((char *)v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v18);
  v124 = (char *)v108 - v19;
  v128 = type metadata accessor for FeedItem(0);
  v125 = *(_QWORD *)(v128 - 8);
  MEMORY[0x1E0C80A78](v128);
  v126 = (uint64_t)v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v127 = (uint64_t)v108 - v22;
  MEMORY[0x1E0C80A78](v23);
  v118 = (char *)v108 - v24;
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)v108 - v26;
  MEMORY[0x1E0C80A78](v28);
  v123 = (unint64_t)v108 - v29;
  v30 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v30);
  v33 = (char *)v108 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = *a1;
  v34 = *(_QWORD *)(v117 + 16);
  v119 = v5;
  if (!v34)
  {
    swift_beginAccess();
    sub_1BAA67C88(a3, (uint64_t)&v131);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(_QWORD))a4)(MEMORY[0x1E0DEE9D8]);
  }
  v35 = a4;
  v36 = v31;
  v122 = v33;
  v108[0] = a3;
  v108[1] = a5;
  v109 = v35;
  v110 = a2;
  v37 = a2 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_key;
  v38 = (_QWORD *)(v37 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v40 = v38[4];
  v39 = v38[5];
  __swift_project_boxed_opaque_existential_1(v38 + 1, v40);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v39 + 64))(&v136, v40, v39);
  v41 = v137;
  if (!v137)
  {
    sub_1BA554698((uint64_t)&v136);
    v54 = MEMORY[0x1E0DEE9D8];
    goto LABEL_26;
  }
  v42 = v138;
  __swift_project_boxed_opaque_existential_1(&v136, v137);
  v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 40))(v41, v42);
  if (!v43)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v136);
    v54 = MEMORY[0x1E0DEE9D8];
    goto LABEL_26;
  }
  v44 = MEMORY[0x1E0DEE9D8];
  v45 = (uint64_t)v122;
  sub_1BA4C2DD8(v43 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content, (uint64_t)v122, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  swift_release();
  v46 = v45;
  v47 = *(_QWORD *)(v45 + *(int *)(v36 + 32));
  v139 = v44;
  v48 = *(_QWORD *)(v47 + 16);
  if (v48)
  {
    swift_bridgeObjectRetain();
    v49 = (__int128 *)(v47 + 96);
    do
    {
      v131 = *(v49 - 4);
      v132 = *(v49 - 3);
      v133 = *(v49 - 2);
      v134 = *(v49 - 1);
      v50 = *v49;
      v49 += 5;
      v135 = v50;
      v51 = FormatContentSubgroup.ResolvedContainer.headlines.getter();
      sub_1BA66293C(v51);
      --v48;
    }
    while (v48);
    swift_bridgeObjectRelease();
    v52 = v139;
    v46 = (uint64_t)v122;
  }
  else
  {
    v52 = v44;
  }
  sub_1BA4A2E80(v46, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    v55 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v55)
      goto LABEL_14;
  }
  else
  {
    v55 = *(_QWORD *)((v52 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v55)
    {
LABEL_14:
      v139 = MEMORY[0x1E0DEE9D8];
      sub_1BAC7AD0C(0, v55 & ~(v55 >> 63), 0);
      if (v55 < 0)
      {
LABEL_56:
        __break(1u);
        JUMPOUT(0x1BB23CCC8);
      }
      v56 = 0;
      v54 = v139;
      v120 = v52 & 0xC000000000000001;
      v122 = (_QWORD *)v52;
      v121 = v55;
      do
      {
        if (v120)
        {
          v57 = (void *)MEMORY[0x1BCCE4630](v56, v52);
        }
        else
        {
          v57 = *(void **)(v52 + 8 * v56 + 32);
          swift_unknownObjectRetain();
        }
        v58 = sub_1BB871B24();
        v59 = (uint64_t)v124;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v124, 1, 1, v58);
        v130 = 0;
        *(_QWORD *)&v131 = 0;
        BYTE8(v131) = 1;
        v129 = 0;
        v60 = (char *)v17 + v15[6];
        v61 = type metadata accessor for SharedItem();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 1, 1, v61);
        *v17 = 258;
        *((_BYTE *)v17 + v15[7]) = 1;
        *((_BYTE *)v17 + v15[8]) = 0;
        *((_BYTE *)v17 + v15[9]) = 0;
        *((_BYTE *)v17 + v15[10]) = 0;
        swift_unknownObjectRetain();
        v62 = v123;
        FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v57, 0, &v129, v59, (uint64_t)v17, &v130, v123, (uint64_t)&v131);
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        v139 = v54;
        v64 = *(_QWORD *)(v54 + 16);
        v63 = *(_QWORD *)(v54 + 24);
        if (v64 >= v63 >> 1)
        {
          sub_1BAC7AD0C(v63 > 1, v64 + 1, 1);
          v54 = v139;
        }
        ++v56;
        *(_QWORD *)(v54 + 16) = v64 + 1;
        sub_1BA5193C4(v62, v54+ ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80))+ *(_QWORD *)(v125 + 72) * v64, type metadata accessor for FeedItem);
        v52 = (unint64_t)v122;
      }
      while (v121 != v56);
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
  }
  swift_bridgeObjectRelease();
  v54 = MEMORY[0x1E0DEE9D8];
LABEL_25:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v136);
LABEL_26:
  v65 = v119;
  if (*(_QWORD *)(v54 + 16))
  {
    v66 = v54 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v67 = *(_QWORD *)(v125 + 72);
    swift_bridgeObjectRetain();
    v68 = (uint64_t)v118;
    v122 = (_QWORD *)v67;
    sub_1BA4C2DD8(v66, (uint64_t)v27, type metadata accessor for FeedItem);
    sub_1BA4C2DD8((uint64_t)v27, v68, type metadata accessor for FeedItem);
    v69 = (char *)&loc_1BB23C5B8 + *((int *)qword_1BB23CCC8 + swift_getEnumCaseMultiPayload());
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v70 = MEMORY[0x1E0DEE9D8];
  v71 = swift_bridgeObjectRetain();
  v72 = sub_1BB23D1B0(v71, v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v73 = *(_QWORD *)(v72 + 16);
  v74 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v119 = v65;
  v124 = (char *)v72;
  v123 = v73;
  if (v73)
  {
    v75 = v72 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
    v76 = *(_QWORD *)(v125 + 72);
    do
    {
      v77 = v127;
      sub_1BA4C2DD8(v75, v127, type metadata accessor for FeedItem);
      FeedItem.identifier.getter();
      v79 = v78;
      v81 = v80;
      sub_1BA4A2E80(v77, type metadata accessor for FeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v74 = sub_1BA6EA0D0(0, v74[2] + 1, 1, v74);
      v83 = v74[2];
      v82 = v74[3];
      if (v83 >= v82 >> 1)
        v74 = sub_1BA6EA0D0((_QWORD *)(v82 > 1), v83 + 1, 1, v74);
      v74[2] = v83 + 1;
      v84 = &v74[2 * v83];
      v84[4] = v79;
      v84[5] = v81;
      v75 += v76;
      --v73;
    }
    while (v73);
  }
  v85 = (void (*)(uint64_t))v110;
  *(_QWORD *)(v110 + 80) = v74;
  swift_bridgeObjectRelease();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v87 = (_QWORD *)objc_opt_self();
  v88 = objc_msgSend(v87, sel_bundleForClass_, ObjCClassFromMetadata);
  v89 = sub_1BB86C340();
  v127 = v90;

  v91 = objc_msgSend(v87, sel_bundleForClass_, ObjCClassFromMetadata);
  v92 = sub_1BB86C340();
  v94 = v93;

  if (v123 >= 0xA)
    v95 = 10;
  else
    v95 = v123;
  if (*((_QWORD *)v124 + 2) < v95)
  {
    __break(1u);
LABEL_53:
    v94 = sub_1BAA67F00(v94);
    *v87 = v94;
    goto LABEL_49;
  }
  v122 = v94;
  v123 = v89;
  if (v95)
  {
    v121 = v92;
    v136 = MEMORY[0x1E0DEE9D8];
    v96 = v125;
    v97 = (uint64_t)&v124[(*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80)];
    sub_1BAC7B090(0, v95, 0);
    v98 = *(_QWORD *)(v96 + 72);
    v89 = v136;
    do
    {
      v99 = v126;
      sub_1BA4C2DD8(v97, v126, type metadata accessor for FeedItem);
      *((_QWORD *)&v132 + 1) = v128;
      *(_QWORD *)&v133 = sub_1BAF352EC();
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v131);
      sub_1BA4C2DD8(v99, (uint64_t)boxed_opaque_existential_0, type metadata accessor for FeedItem);
      BYTE8(v134) = 1;
      sub_1BA4A2E80(v99, type metadata accessor for FeedItem);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B090(0, *(_QWORD *)(v89 + 16) + 1, 1);
        v89 = v136;
      }
      v102 = *(_QWORD *)(v89 + 16);
      v101 = *(_QWORD *)(v89 + 24);
      if (v102 >= v101 >> 1)
      {
        sub_1BAC7B090(v101 > 1, v102 + 1, 1);
        v89 = v136;
      }
      *(_QWORD *)(v89 + 16) = v102 + 1;
      sub_1BB23E630((uint64_t)&v131, v89 + (v102 << 6) + 32);
      v97 += v98;
      --v95;
    }
    while (v95);
    swift_bridgeObjectRelease();
    v85 = (void (*)(uint64_t))v110;
    v92 = v121;
  }
  else
  {
    swift_bridgeObjectRelease();
    v89 = MEMORY[0x1E0DEE9D8];
  }
  v87 = (_QWORD *)((char *)v85 + OBJC_IVAR____TtC8NewsFeed41DebugPersonalizationInspectViewDataSource_sections);
  swift_beginAccess();
  v94 = (_QWORD *)*v87;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v87 = v94;
  v85 = v109;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_53;
LABEL_49:
  if ((v108[0] & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_55;
  }
  if (v94[2] <= v108[0])
  {
LABEL_55:
    __break(1u);
    goto LABEL_56;
  }
  v104 = &v94[8 * v108[0]];
  v105 = v127;
  v104[4] = v123;
  v104[5] = v105;
  v106 = (uint64_t)v122;
  v104[6] = v92;
  v104[7] = v106;
  v104[8] = v89;
  *((_BYTE *)v104 + 72) = 0;
  v104[10] = 0;
  v104[11] = 0;
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v107 = swift_bridgeObjectRetain();
  v85(v107);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB23CD10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(_QWORD))
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD v10[3];

  if (qword_1EF2A7360 != -1)
    swift_once();
  v6 = (id)qword_1EF3D0928;
  v7 = sub_1BB8732F4();
  sub_1BA5B089C(0, (unint64_t *)&qword_1ED3D4470, (unint64_t *)&qword_1ED3D4480, MEMORY[0x1E0DEE208], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  v10[0] = 0;
  v10[1] = 0xE000000000000000;
  sub_1BA4D9CE8(0, (unint64_t *)&qword_1ED3BA030);
  sub_1BB873E34();
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 40) = 0xE000000000000000;
  sub_1BB86EF44("Failed to fetch headlines for scored feed items, error=%@", 57, 2, &dword_1BA493000, v6, v7, v8);

  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_1BAA67C88(a3, (uint64_t)v10);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4(MEMORY[0x1E0DEE9D8]);
}

uint64_t sub_1BB23CEEC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = (_QWORD *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v2 = v1[4];
  v3 = v1[5];
  __swift_project_boxed_opaque_existential_1(v1 + 1, v2);
  (*(void (**)(_QWORD *__return_ptr, uint64_t, uint64_t))(v3 + 64))(v10, v2, v3);
  v4 = v11;
  if (v11)
  {
    v5 = v12;
    __swift_project_boxed_opaque_existential_1(v10, v11);
    v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
    if (v6)
    {
      v7 = *(_QWORD *)(v6 + 16);
      swift_bridgeObjectRetain();
      swift_release();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        v8 = sub_1BB873F30();
        swift_bridgeObjectRelease();
      }
      else
      {
        v8 = *(_QWORD *)((v7 & 0xFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v8)
      {
        sub_1BB23E5DC();
        result = swift_allocObject();
        *(_OWORD *)(result + 16) = xmmword_1BB87CE70;
        *(_OWORD *)(result + 32) = 0u;
        *(_OWORD *)(result + 48) = 0u;
        *(_OWORD *)(result + 64) = 0u;
        *(_QWORD *)(result + 80) = 0;
        *(_BYTE *)(result + 88) = 2;
        return result;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    }
  }
  else
  {
    sub_1BA554698((uint64_t)v10);
  }
  return MEMORY[0x1E0DEE9D8];
}

void (*sub_1BB23D03C(void (**a1)(uint64_t *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(uint64_t *a1)
{
  void (*result)(uint64_t *);

  result = (void (*)(uint64_t *))malloc(0xF8uLL);
  *a1 = result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    sub_1BA670450(a4 + 248 * a2, (uint64_t)result);
    return sub_1BB23D0BC;
  }
  return result;
}

void sub_1BB23D0BC(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1BAA7D0B0(*a1);
  free(v1);
}

void (*sub_1BB23D0E4(void (**a1)(uint64_t *a1), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6))(uint64_t *a1)
{
  uint64_t v11;
  void (*result)(uint64_t *);

  v11 = *(_QWORD *)(type metadata accessor for FeedItem(0) - 8);
  result = (void (*)(uint64_t *))malloc(*(_QWORD *)(v11 + 64));
  *a1 = result;
  if (a2 < a5 || (uint64_t)(a6 >> 1) <= a2)
  {
    __break(1u);
  }
  else
  {
    sub_1BA4C2DD8(a4 + *(_QWORD *)(v11 + 72) * a2, (uint64_t)result, type metadata accessor for FeedItem);
    return sub_1BB23D180;
  }
  return result;
}

void sub_1BB23D180(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_1BA4A2E80(*a1, type metadata accessor for FeedItem);
  free(v1);
}

uint64_t sub_1BB23D1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  unint64_t v13;
  uint64_t (*v14)(uint64_t);
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v5 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v5);
  v33 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v30 - v9;
  result = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v35 = *(_QWORD *)(a1 + 16);
  if (!v35)
    return result;
  v12 = 0;
  v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v36 = *(_QWORD *)(v8 + 72);
  v32 = v13;
  v34 = a1 + v13;
  v30 = v2;
  v31 = (_QWORD *)(a2 + 56);
  v14 = type metadata accessor for FeedItem;
  v37 = a2;
  while (1)
  {
    v15 = v14;
    sub_1BA4C2DD8(v34 + v36 * v12, (uint64_t)v10, v14);
    v16 = (uint64_t)v10;
    FeedItem.identifier.getter();
    v19 = v18;
    v20 = *(_QWORD *)(a2 + 16);
    if (!v20)
      goto LABEL_20;
    v21 = v17;
    if (*(_QWORD *)(v37 + 32) != v17 || *(_QWORD *)(v37 + 40) != v18)
    {
      result = sub_1BB874398();
      if ((result & 1) == 0)
        break;
    }
LABEL_3:
    swift_bridgeObjectRelease();
    v10 = (char *)v16;
    v14 = v15;
    sub_1BA4A2E80(v16, v15);
LABEL_4:
    a2 = v37;
    if (++v12 == v35)
      return v38;
  }
  if (v20 == 1)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    v10 = (char *)v16;
    v14 = v15;
    sub_1BA5193C4(v16, v33, v15);
    v27 = v38;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1BAC7AD0C(0, *(_QWORD *)(v27 + 16) + 1, 1);
      v27 = v38;
    }
    v29 = *(_QWORD *)(v27 + 16);
    v28 = *(_QWORD *)(v27 + 24);
    if (v29 >= v28 >> 1)
    {
      sub_1BAC7AD0C(v28 > 1, v29 + 1, 1);
      v27 = v38;
    }
    *(_QWORD *)(v27 + 16) = v29 + 1;
    sub_1BA5193C4(v33, v27 + v32 + v29 * v36, v15);
    goto LABEL_4;
  }
  v23 = v31;
  v24 = 1;
  while (1)
  {
    v25 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (*(v23 - 1) == v21 && *v23 == v19)
      goto LABEL_3;
    result = sub_1BB874398();
    if ((result & 1) != 0)
      goto LABEL_3;
    v23 += 2;
    ++v24;
    if (v25 == v20)
      goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB23D42C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  void *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  _WORD *v66;
  void *v67;
  uint64_t v68;
  char *v69;
  int *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t ObjCClassFromMetadata;
  void *v78;
  id v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  int64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  uint64_t result;
  uint64_t *v96;
  _QWORD v97[2];
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  char *v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  unint64_t v140;
  char v141;
  void *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  char v147;

  v99 = a2;
  v105 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v105);
  v104 = (char *)v97 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v4);
  v103 = (char *)v97 - v5;
  v120 = type metadata accessor for FeedItem(0);
  v106 = *(_QWORD *)(v120 - 8);
  MEMORY[0x1E0C80A78](v120);
  v113 = (uint64_t)v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v102 = (uint64_t)v97 - v8;
  sub_1BA6C5ACC(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v97 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v134 = type metadata accessor for FormatWebEmbed.Resolved();
  MEMORY[0x1E0C80A78](v134);
  v13 = (char *)v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for FormatContentSlotItemObject.Resolved();
  v131 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v138 = (unint64_t)v97 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for FormatContent.Resolved();
  MEMORY[0x1E0C80A78](v16);
  v98 = (uint64_t)v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = (_QWORD *)(a1 + *(int *)(type metadata accessor for DebugGroupLayoutKey() + 24));
  v19 = v18[4];
  v20 = v18[5];
  __swift_project_boxed_opaque_existential_1(v18 + 1, v19);
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v20 + 64))(&v144, v19, v20);
  v21 = v145;
  if (!v145)
  {
    sub_1BA554698((uint64_t)&v144);
LABEL_17:
    v26 = MEMORY[0x1E0DEE9D8];
    goto LABEL_32;
  }
  v22 = v146;
  __swift_project_boxed_opaque_existential_1(&v144, v145);
  v23 = (*(uint64_t (**)(uint64_t, unint64_t))(v22 + 40))(v21, v22);
  if (!v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v144);
    goto LABEL_17;
  }
  v24 = v98;
  sub_1BA4C2DD8(v23 + OBJC_IVAR____TtC8NewsFeed20FeedGroupDebugFormat_content, v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  swift_release();
  v25 = *(_QWORD *)(v24 + *(int *)(v16 + 32));
  v26 = MEMORY[0x1E0DEE9D8];
  v140 = MEMORY[0x1E0DEE9D8];
  v101 = *(_QWORD *)(v25 + 16);
  if (v101)
  {
    v110 = 0;
    v100 = v25 + 32;
    v97[1] = v25;
    swift_bridgeObjectRetain_n();
    v136 = v11;
    v123 = v13;
    v27 = 0;
    v137 = v14;
    do
    {
      v109 = v27;
      v29 = (uint64_t *)(v100 + 80 * v27);
      v30 = *v29;
      v31 = v29[1];
      v32 = v29[2];
      v33 = v29[3];
      v35 = v29[4];
      v34 = v29[5];
      v36 = v29[6];
      v122 = v29[7];
      v37 = v29[8];
      v38 = v29[9];
      v118 = v35 & 0x7FFFFFFFFFFFFFFFLL;
      v119 = v37;
      v121 = v31;
      v116 = v32;
      v111 = v36;
      sub_1BA6D78DC();
      v117 = v30;
      v39 = v33;
      v40 = v122;
      sub_1BA6D78DC();
      v114 = v38;
      sub_1BA6D78DC();
      v115 = v35;
      v41 = v34;
      v42 = v40;
      sub_1BA6D78DC();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v43 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v44 = v119;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v45 = v110;
      v46 = sub_1BB4A4184(v44);
      v110 = v45;
      swift_bridgeObjectRelease();
      v143 = v42;
      swift_bridgeObjectRetain();
      sub_1BA6D74C4(v46);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v47 = v143;
      v48 = MEMORY[0x1E0DEE9D8];
      v143 = MEMORY[0x1E0DEE9D8];
      v125 = *(_QWORD *)(v47 + 16);
      v112 = v39;
      v108 = v47;
      if (v125)
      {
        v107 = v43;
        v124 = v47 + 32;
        swift_bridgeObjectRetain();
        v49 = 0;
        v50 = (void *)v48;
        do
        {
          v133 = v49;
          v51 = (_QWORD *)(v124 + (v49 << 6));
          v52 = v51[1];
          v53 = v51[2];
          v55 = v51[3];
          v54 = v51[4];
          v57 = v51[5];
          v56 = v51[6];
          v135 = v51[7];
          v142 = v50;
          v58 = *(_QWORD *)(v54 + 16);
          v132 = v52;
          if (v58)
          {
            v59 = v54;
            v60 = v54 + ((*(unsigned __int8 *)(v131 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80));
            swift_bridgeObjectRetain_n();
            v129 = v53;
            swift_bridgeObjectRetain_n();
            v128 = v55;
            swift_bridgeObjectRetain_n();
            v130 = v59;
            swift_bridgeObjectRetain_n();
            v127 = v57;
            swift_bridgeObjectRetain_n();
            v126 = v56;
            swift_bridgeObjectRetain_n();
            swift_bridgeObjectRetain_n();
            sub_1BA4C2DD8(v60, v138, (uint64_t (*)(_QWORD))type metadata accessor for FormatContentSlotItemObject.Resolved);
            v61 = (char *)&loc_1BB23DD58 + dword_1BB23E4D4[swift_getEnumCaseMultiPayload()];
            __asm { BR              X9 }
          }
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
          v49 = v133 + 1;
          sub_1BA66293C((unint64_t)v50);
        }
        while (v49 != v125);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v135 = v143;
        v28 = v109;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v135 = v48;
        v28 = v109;
      }
      v27 = v28 + 1;
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA7F4208();
      sub_1BA66293C(v135);
    }
    while (v27 != v101);
    swift_bridgeObjectRelease_n();
    v62 = v140;
    v26 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v62 = MEMORY[0x1E0DEE9D8];
  }
  sub_1BA4A2E80(v98, (uint64_t (*)(_QWORD))type metadata accessor for FormatContent.Resolved);
  if (v62 >> 62)
  {
    swift_bridgeObjectRetain();
    v26 = MEMORY[0x1E0DEE9D8];
    v63 = sub_1BB873F30();
    swift_bridgeObjectRelease();
    if (v63)
      goto LABEL_21;
  }
  else
  {
    v63 = *(_QWORD *)((v62 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v63)
    {
LABEL_21:
      v143 = v26;
      sub_1BAC7AD0C(0, v63 & ~(v63 >> 63), 0);
      if (v63 < 0)
      {
        __break(1u);
        JUMPOUT(0x1BB23E4D4);
      }
      v64 = 0;
      v26 = v143;
      v138 = v62 & 0xC000000000000001;
      v65 = v62;
      v66 = v104;
      do
      {
        if (v138)
        {
          v67 = (void *)MEMORY[0x1BCCE4630](v64, v62);
        }
        else
        {
          v67 = *(void **)(v62 + 8 * v64 + 32);
          swift_unknownObjectRetain();
        }
        v68 = sub_1BB871B24();
        v69 = v103;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 56))(v103, 1, 1, v68);
        v142 = 0;
        v140 = 0;
        v141 = 1;
        LOBYTE(v139) = 0;
        v70 = (int *)v105;
        v71 = (char *)v66 + *(int *)(v105 + 24);
        v72 = type metadata accessor for SharedItem();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 56))(v71, 1, 1, v72);
        *v66 = 258;
        *((_BYTE *)v66 + v70[7]) = 1;
        *((_BYTE *)v66 + v70[8]) = 0;
        *((_BYTE *)v66 + v70[9]) = 0;
        *((_BYTE *)v66 + v70[10]) = 0;
        swift_unknownObjectRetain();
        v73 = (uint64_t)v69;
        v74 = v102;
        FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v67, 0, (char *)&v139, v73, (uint64_t)v66, &v142, v102, (uint64_t)&v140);
        swift_storeEnumTagMultiPayload();
        swift_unknownObjectRelease();
        v143 = v26;
        v76 = *(_QWORD *)(v26 + 16);
        v75 = *(_QWORD *)(v26 + 24);
        if (v76 >= v75 >> 1)
        {
          sub_1BAC7AD0C(v75 > 1, v76 + 1, 1);
          v26 = v143;
        }
        ++v64;
        *(_QWORD *)(v26 + 16) = v76 + 1;
        sub_1BA5193C4(v74, v26+ ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80))+ *(_QWORD *)(v106 + 72) * v76, type metadata accessor for FeedItem);
        v62 = v65;
      }
      while (v63 != v64);
    }
  }
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v144);
LABEL_32:
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v78 = (void *)objc_opt_self();
  v79 = objc_msgSend(v78, sel_bundleForClass_, ObjCClassFromMetadata);
  v80 = sub_1BB86C340();
  v82 = v81;

  v83 = objc_msgSend(v78, sel_bundleForClass_, ObjCClassFromMetadata);
  v84 = sub_1BB86C340();
  v86 = v85;

  v87 = *(_QWORD *)(v26 + 16);
  if (v87)
  {
    v136 = (char *)v84;
    v137 = v82;
    v138 = v80;
    v140 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7B090(0, v87, 0);
    v88 = v26 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
    v89 = *(_QWORD *)(v106 + 72);
    do
    {
      v90 = v113;
      sub_1BA4C2DD8(v88, v113, type metadata accessor for FeedItem);
      v145 = v120;
      v146 = sub_1BAF352EC();
      v91 = __swift_allocate_boxed_opaque_existential_0(&v144);
      sub_1BA4C2DD8(v90, (uint64_t)v91, type metadata accessor for FeedItem);
      v147 = 1;
      sub_1BA4A2E80(v90, type metadata accessor for FeedItem);
      v92 = v140;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1BAC7B090(0, *(_QWORD *)(v92 + 16) + 1, 1);
        v92 = v140;
      }
      v94 = *(_QWORD *)(v92 + 16);
      v93 = *(_QWORD *)(v92 + 24);
      if (v94 >= v93 >> 1)
      {
        sub_1BAC7B090(v93 > 1, v94 + 1, 1);
        v92 = v140;
      }
      *(_QWORD *)(v92 + 16) = v94 + 1;
      sub_1BB23E630((uint64_t)&v144, v92 + (v94 << 6) + 32);
      v88 += v89;
      --v87;
    }
    while (v87);
    result = swift_bridgeObjectRelease();
    v82 = v137;
    v80 = v138;
    v84 = (uint64_t)v136;
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v92 = MEMORY[0x1E0DEE9D8];
  }
  v96 = v99;
  *v99 = v80;
  v96[1] = v82;
  v96[2] = v84;
  v96[3] = v86;
  v96[4] = v92;
  *((_BYTE *)v96 + 40) = 1;
  v96[6] = 0;
  v96[7] = 0;
  return result;
}

void sub_1BB23E4F8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t ObjCClassFromMetadata;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = sub_1BB23CEEC(a1);
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v5 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
  v6 = sub_1BB86C340();
  v8 = v7;

  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = 0;
  *(_QWORD *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = v3;
  *(_BYTE *)(a2 + 40) = 0;
  *(_QWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = 0;
}

void sub_1BB23E5DC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2B13C8)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2B13C8);
  }
}

uint64_t sub_1BB23E630(uint64_t a1, uint64_t a2)
{
  __swift_memcpy57_8(a2, a1);
  return a2;
}

uint64_t sub_1BB23E674(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v8 = (uint64_t *)(a1 + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      swift_bridgeObjectRetain();
      sub_1BB86E8B4();
      static Random.issue(with:isCurrent:publicationDate:)(v9, v10, 0, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v8 += 2;
      --v6;
    }
    while (v6);
    v7 = v13;
  }
  v13 = v7;
  sub_1BA4B07F0(0, &qword_1ED39E370, (uint64_t (*)(uint64_t))sub_1BA4B08A0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86E9E0();
}

uint64_t sub_1BB23E7C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t result;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_1BB86C8B0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  result = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1BB873DD4();
    v8 = (uint64_t *)(a1 + 40);
    do
    {
      v9 = *(v8 - 1);
      v10 = *v8;
      swift_bridgeObjectRetain();
      sub_1BB86E8B4();
      static Random.issue(with:isCurrent:publicationDate:)(v9, v10, 0, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      sub_1BB873DB0();
      sub_1BB873DE0();
      sub_1BB873DEC();
      sub_1BB873DBC();
      v8 += 2;
      --v6;
    }
    while (v6);
    return v12;
  }
  return result;
}

uint64_t FormatAnimationNodeBasicAnimation.keyPath.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  v8 = *(_BYTE *)(v1 + 64);
  *(_BYTE *)(a1 + 48) = v8;
  return sub_1BA51A92C(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t FormatAnimationNodeBasicAnimation.cumulative.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 72);
  v3 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 88);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatAnimationNodeBasicAnimation.additive.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 112);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA796C58(v2, v3, v4);
}

uint64_t FormatAnimationNodeBasicAnimation.mediaTiming.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[144];

  sub_1BB004424(v1 + 120, (uint64_t)v4);
  sub_1BB004424((uint64_t)v4, a1);
  return sub_1BA8966F8((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
}

uint64_t FormatAnimationNodeBasicAnimation.__allocating_init(keyPath:cumulative:additive:mediaTiming:)(__int128 *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v15;
  __int128 v16;
  _BYTE v18[152];

  v7 = swift_allocObject();
  v15 = a1[1];
  v16 = *a1;
  v8 = *((_QWORD *)a1 + 4);
  v9 = *((_QWORD *)a1 + 5);
  LOBYTE(a1) = *((_BYTE *)a1 + 48);
  v10 = *a2;
  v11 = a2[1];
  LOBYTE(a2) = *((_BYTE *)a2 + 16);
  v13 = *a3;
  v12 = a3[1];
  LOBYTE(a3) = *((_BYTE *)a3 + 16);
  sub_1BB004424(a4, (uint64_t)v18);
  *(_OWORD *)(v7 + 16) = v16;
  *(_OWORD *)(v7 + 32) = v15;
  *(_QWORD *)(v7 + 48) = v8;
  *(_QWORD *)(v7 + 56) = v9;
  *(_BYTE *)(v7 + 64) = (_BYTE)a1;
  *(_QWORD *)(v7 + 72) = v10;
  *(_QWORD *)(v7 + 80) = v11;
  *(_BYTE *)(v7 + 88) = (_BYTE)a2;
  *(_QWORD *)(v7 + 96) = v13;
  *(_QWORD *)(v7 + 104) = v12;
  *(_BYTE *)(v7 + 112) = (_BYTE)a3;
  sub_1BB004424((uint64_t)v18, v7 + 120);
  return v7;
}

uint64_t FormatAnimationNodeBasicAnimation.init(keyPath:cumulative:additive:mediaTiming:)(__int128 *a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v15;
  __int128 v16;
  _BYTE v17[152];

  v15 = a1[1];
  v16 = *a1;
  v5 = *((_QWORD *)a1 + 4);
  v6 = *((_QWORD *)a1 + 5);
  v7 = *((_BYTE *)a1 + 48);
  v8 = *a2;
  v9 = a2[1];
  v10 = *((_BYTE *)a2 + 16);
  v11 = *a3;
  v12 = a3[1];
  v13 = *((_BYTE *)a3 + 16);
  sub_1BB004424(a4, (uint64_t)v17);
  *(_OWORD *)(v4 + 16) = v16;
  *(_OWORD *)(v4 + 32) = v15;
  *(_QWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 56) = v6;
  *(_BYTE *)(v4 + 64) = v7;
  *(_QWORD *)(v4 + 72) = v8;
  *(_QWORD *)(v4 + 80) = v9;
  *(_BYTE *)(v4 + 88) = v10;
  *(_QWORD *)(v4 + 96) = v11;
  *(_QWORD *)(v4 + 104) = v12;
  *(_BYTE *)(v4 + 112) = v13;
  sub_1BB004424((uint64_t)v17, v4 + 120);
  return v4;
}

void sub_1BB23EAE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  double v15;
  uint64_t v16;
  char v17;
  char *v18;
  uint64_t v19;
  char *v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  double v28;
  uint64_t v29;
  char v30;
  char *v31;
  uint64_t v32;
  char *v33;
  id v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  double v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  int v44;
  id v45;
  char v46;
  char v47;
  int v48;
  id v49;
  char v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  id v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92[3];
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char v102;
  uint64_t v103;

  v82 = a1;
  v2 = *(_QWORD *)(v1 + 16);
  v77 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_QWORD *)(v1 + 56);
  v79 = *(unsigned __int8 *)(v1 + 64);
  sub_1BA51AA88();
  v7 = (void *)sub_1BB872970();
  swift_bridgeObjectRelease();
  v81 = objc_msgSend((id)objc_opt_self(), sel_animationWithKeyPath_, v7);

  v8 = v79;
  *(_QWORD *)&v97 = v2;
  *((_QWORD *)&v97 + 1) = v77;
  v98 = v4;
  v99 = v3;
  v100 = v5;
  v101 = v6;
  v102 = v79;
  v80 = v2;
  v103 = v3;
  v83 = v5;
  v84 = v6;
  sub_1BA51A92C(v2, v77, v4, v3, v5, v6, v79);
  sub_1BA4A4B58();
  v9 = v78;
  if (v78)
  {
    sub_1BA51A9E0(v80, v77, v4, v103, v83, v84, v79);

    return;
  }
  v74 = v1;
  v10 = v80;
  sub_1BA51A9E0(v80, v77, v4, v103, v83, v84, v79);
  v11 = v93;
  v78 = v4;
  v12 = v77;
  if (v93)
  {
    v13 = __swift_project_boxed_opaque_existential_1(v92, v93);
    v75 = &v72;
    v76 = 0;
    v14 = *(_QWORD *)(v11 - 8);
    v15 = MEMORY[0x1E0C80A78](v13);
    v17 = v8;
    v18 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v14 + 16))(v18, v15);
    v19 = sub_1BB874380();
    v9 = v76;
    v20 = v18;
    v8 = v17;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v20, v11);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  }
  else
  {
    v19 = 0;
  }
  v21 = v81;
  objc_msgSend(v81, sel_setFromValue_, v19);
  swift_unknownObjectRelease();
  *(_QWORD *)&v97 = v10;
  *((_QWORD *)&v97 + 1) = v12;
  v22 = v21;
  v23 = v10;
  v24 = v78;
  v98 = v78;
  v99 = v103;
  v100 = v83;
  v101 = v84;
  v102 = v8;
  sub_1BA51A92C(v23, v12, v78, v103, v83, v84, v8);
  sub_1BA4A49CC();
  if (v9)
    goto LABEL_11;
  sub_1BA51A9E0(v23, v12, v24, v103, v83, v84, v8);
  v25 = v93;
  if (v93)
  {
    v26 = __swift_project_boxed_opaque_existential_1(v92, v93);
    v76 = 0;
    v27 = *(_QWORD *)(v25 - 8);
    v28 = MEMORY[0x1E0C80A78](v26);
    v30 = v8;
    v31 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v27 + 16))(v31, v28);
    v32 = sub_1BB874380();
    v9 = v76;
    v33 = v31;
    v8 = v30;
    (*(void (**)(char *, uint64_t))(v27 + 8))(v33, v25);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  }
  else
  {
    v32 = 0;
  }
  v23 = v80;
  v34 = v81;
  objc_msgSend(v81, sel_setToValue_, v32);
  swift_unknownObjectRelease();
  *(_QWORD *)&v97 = v23;
  *((_QWORD *)&v97 + 1) = v12;
  v22 = v34;
  v24 = v78;
  v98 = v78;
  v99 = v103;
  v100 = v83;
  v101 = v84;
  v102 = v8;
  sub_1BA51A92C(v23, v12, v78, v103, v83, v84, v8);
  sub_1BA825674();
  if (v9)
  {
LABEL_11:
    sub_1BA51A9E0(v23, v12, v24, v103, v83, v84, v8);

    return;
  }
  sub_1BA51A9E0(v23, v12, v24, v103, v83, v84, v8);
  v35 = v93;
  if (v93)
  {
    v36 = __swift_project_boxed_opaque_existential_1(v92, v93);
    v76 = 0;
    v37 = *(_QWORD *)(v35 - 8);
    v38 = MEMORY[0x1E0C80A78](v36);
    v40 = (char *)&v72 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v37 + 16))(v40, v38);
    v41 = sub_1BB874380();
    v9 = v76;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v92);
  }
  else
  {
    v41 = 0;
  }
  v42 = v81;
  objc_msgSend(v81, sel_setByValue_, v41);
  swift_unknownObjectRelease();
  v43 = v74;
  v44 = *(unsigned __int8 *)(v74 + 88);
  if (v44 != 255)
  {
    v97 = *(_OWORD *)(v74 + 72);
    LOBYTE(v98) = v44 & 1;
    v45 = v42;
    sub_1BB86DD80();
    v46 = FormatBoolean.value(contextLayoutOptions:)(v92[0]);
    if (v9)
    {

LABEL_22:
      swift_release();
      return;
    }
    v47 = v46;
    swift_release();
    objc_msgSend(v45, sel_setCumulative_, v47 & 1);

  }
  v48 = *(unsigned __int8 *)(v43 + 112);
  if (v48 != 255)
  {
    v97 = *(_OWORD *)(v43 + 96);
    LOBYTE(v98) = v48 & 1;
    v49 = v42;
    sub_1BB86DD80();
    v50 = FormatBoolean.value(contextLayoutOptions:)(v92[0]);
    if (v9)
    {

      goto LABEL_22;
    }
    v51 = v50;
    swift_release();
    objc_msgSend(v49, sel_setAdditive_, v51 & 1);

  }
  v52 = v80;
  v92[0] = v80;
  v92[1] = v12;
  v53 = v103;
  v92[2] = v78;
  v93 = v103;
  v54 = v83;
  v55 = v84;
  v94 = v83;
  v95 = v84;
  v56 = v79;
  v96 = v79;
  v75 = (uint64_t *)sub_1BA51AA88();
  v76 = v57;
  sub_1BB004424(v74 + 120, (uint64_t)&v97);
  sub_1BB004424((uint64_t)&v97, (uint64_t)v92);
  v85 = v52;
  v86 = v12;
  v87 = v78;
  v88 = v53;
  v89 = v54;
  v90 = v55;
  v91 = v56;
  sub_1BA51A92C(v52, v12, v78, v53, v54, v55, v56);
  sub_1BA8966F8((uint64_t)&v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
  sub_1BA4AC5A4();
  if (v9)
  {

    swift_bridgeObjectRelease();
    sub_1BA51A9E0(v80, v12, v78, v103, v83, v84, v79);
    sub_1BA8966F8((uint64_t)&v97, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  }
  else
  {
    v73 = v58;
    v74 = v59;
    v60 = v80;
    v61 = v78;
    v62 = v103;
    v63 = v83;
    v64 = v84;
    v65 = v79;
    sub_1BA51A9E0(v80, v12, v78, v103, v83, v84, v79);
    v85 = v60;
    v86 = v12;
    v87 = v61;
    v88 = v62;
    v89 = v63;
    v90 = v64;
    v91 = v65;
    v66 = v64;
    v67 = v82;
    sub_1BA51A92C(v60, v12, v61, v62, v63, v66, v65);
    sub_1BA4AEA6C();
    v69 = v68;
    v71 = v70;
    sub_1BA51A9E0(v80, v12, v61, v103, v83, v84, v79);
    type metadata accessor for FormatAnimation();
    swift_allocObject();
    swift_retain();
    sub_1BA4BE8EC(v81, (uint64_t)v75, v76, v67, (uint64_t)v92, v73, v74, v69, v71);
  }
}

uint64_t FormatAnimationNodeBasicAnimation.deinit()
{
  uint64_t v0;
  _BYTE v2[144];

  sub_1BA51A9E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_1BA796C70(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_1BA796C70(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  sub_1BB004424(v0 + 120, (uint64_t)v2);
  sub_1BA8966F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  return v0;
}

uint64_t FormatAnimationNodeBasicAnimation.__deallocating_deinit()
{
  uint64_t v0;
  _BYTE v2[144];

  sub_1BA51A9E0(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56), *(_BYTE *)(v0 + 64));
  sub_1BA796C70(*(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_BYTE *)(v0 + 88));
  sub_1BA796C70(*(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 104), *(_BYTE *)(v0 + 112));
  sub_1BB004424(v0 + 120, (uint64_t)v2);
  sub_1BA8966F8((uint64_t)v2, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB23F38C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB23F444(&qword_1EF2BEE00, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeBasicAnimation);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatAnimationNodeBasicAnimation()
{
  return objc_opt_self();
}

uint64_t sub_1BB23F3E0(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB23F444(&qword_1EF2B2908, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeBasicAnimation);
  a1[2] = sub_1BB23F444(&qword_1EF2B5EC0, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeBasicAnimation);
  result = sub_1BB23F444(&qword_1EF2BEE08, (uint64_t)&protocol conformance descriptor for FormatAnimationNodeBasicAnimation);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB23F444(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatAnimationNodeBasicAnimation();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB23F480@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAE7FDC8(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB23F4A8(_QWORD *a1)
{
  return FormatAnimationNodeBasicAnimation.encode(to:)(a1);
}

BOOL sub_1BB23F4C8(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed024FormatAnimationNodeBasicD0C2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t method lookup function for FormatAnimationNodeBasicAnimation()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatAnimationNodeBasicAnimation.__allocating_init(keyPath:cumulative:additive:mediaTiming:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

_QWORD *sub_1BB23F4E8(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 v14;
  void (*v15)(_QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 v18;
  uint64_t v19;
  __int128 v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  char v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  _QWORD *v30;
  _QWORD *v32;
  uint64_t inited;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  char v39;
  _BYTE v40[144];
  _OWORD v41[2];
  uint64_t v42;

  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2A9CC0, type metadata accessor for FormatInspectionItem, v2);
  v34 = type metadata accessor for FormatInspectionItem(0);
  v3 = *(_QWORD *)(v34 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v2);
  v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_1BB87A390;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
  v11 = (_QWORD *)(v10 + v9);
  if (a1)
  {
    v12 = *(_QWORD *)(a1 + 72);
    v13 = *(_QWORD *)(a1 + 80);
    v14 = *(_BYTE *)(a1 + 88);
    sub_1BA796C58(v12, v13, v14);
  }
  else
  {
    v12 = 0;
    v13 = 0;
    v14 = -1;
  }
  v32 = (_QWORD *)(v35 + v4);
  sub_1BAAFA830(0x6974616C756D7543, 0xEA00000000006576, v12, v13, v14, v11);
  v15 = *(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v3 + 56);
  v15(v11, 0, 1, v34);
  if (a1)
  {
    v17 = *(_QWORD *)(a1 + 96);
    v16 = *(_QWORD *)(a1 + 104);
    v18 = *(_BYTE *)(a1 + 112);
    sub_1BA796C58(v17, v16, v18);
  }
  else
  {
    v17 = 0;
    v16 = 0;
    v18 = -1;
  }
  sub_1BAAFA830(0x6576697469646441, 0xE800000000000000, v17, v16, v18, (_QWORD *)((char *)v11 + v8));
  v15((_QWORD *)((char *)v11 + v8), 0, 1, v34);
  sub_1BAF89090(0x6E41206369736142, 0xEF6E6F6974616D69, 0, 0, v10, v41);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v5 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v5 + 64) = &off_1E72D2F60;
  v19 = swift_allocObject();
  *(_QWORD *)(v5 + 32) = v19;
  *(_QWORD *)(v19 + 48) = v42;
  v20 = v41[1];
  *(_OWORD *)(v19 + 16) = v41[0];
  *(_OWORD *)(v19 + 32) = v20;
  if (a1)
  {
    sub_1BB004424(a1 + 120, (uint64_t)&v36);
    sub_1BA8966F8((uint64_t)&v36, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B7794);
  }
  else
  {
    sub_1BAA2BE10((uint64_t)&v36);
  }
  sub_1BB004424((uint64_t)&v36, (uint64_t)v40);
  sub_1BB004424((uint64_t)v40, (uint64_t)&v36);
  v21 = sub_1BB004468((uint64_t)&v36);
  sub_1BA8966F8((uint64_t)v40, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1BA4B6260);
  *(_QWORD *)(v5 + 96) = &type metadata for FormatInspection;
  *(_QWORD *)(v5 + 104) = &off_1E7335C38;
  *(_QWORD *)(v5 + 72) = v21;
  v22 = sub_1BA9747FC(v5);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v23 = sub_1BB6DF010(v22);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(1701869908, 0xE400000000000000, (uint64_t)v23, 0x6369736142, 0xE500000000000000, v32);
  if (a1)
  {
    v24 = *(_BYTE *)(a1 + 64);
    v25 = *(_OWORD *)(a1 + 32);
    v36 = *(_OWORD *)(a1 + 16);
    v37 = v25;
    v38 = *(_OWORD *)(a1 + 48);
    v39 = v24;
    sub_1BAFCED48();
  }
  else
  {
    v26 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v36 = v35;
  sub_1BB383BA8(v26);
  v27 = sub_1BA97461C(v36);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x6F6974616D696E41, 0xE90000000000006ELL, 0, 0, v27, &v36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v28 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v28;
  *(_QWORD *)(v28 + 48) = v38;
  v29 = v37;
  *(_OWORD *)(v28 + 16) = v36;
  *(_OWORD *)(v28 + 32) = v29;
  v30 = sub_1BB6DF010(inited);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v30;
}

uint64_t sub_1BB23F9C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

id sub_1BB23F9F8@<X0>(_QWORD *a1@<X8>)
{
  void *v2;
  void *v3;
  double v4;
  Swift::String v5;
  id v6;
  id v7;
  Swift::String v8;
  Class v9;
  id v10;
  Swift::String v11;
  Class v12;
  id v13;
  id v14;
  id result;
  id v16;
  Class isa;
  id v18;
  id v19;

  v2 = (void *)objc_opt_self();
  v19 = objc_msgSend(v2, sel_secondaryLabelColor);
  v3 = (void *)objc_opt_self();
  v4 = *MEMORY[0x1E0DC1438];
  v18 = objc_msgSend(v3, sel_monospacedSystemFontOfSize_weight_, 14.0, *MEMORY[0x1E0DC1438]);
  sub_1BA748DB8();
  v5._countAndFlagsBits = 0x38373139454323;
  v5._object = (void *)0xE700000000000000;
  isa = UIColor.init(hex:)(v5).super.isa;
  v16 = objc_msgSend(v3, sel_monospacedSystemFontOfSize_weight_, 14.0, v4);
  v6 = objc_msgSend(v2, sel_systemPinkColor);
  v7 = objc_msgSend(v3, sel_monospacedSystemFontOfSize_weight_, 14.0, v4);
  v8._countAndFlagsBits = 0x39364642304423;
  v8._object = (void *)0xE700000000000000;
  v9 = UIColor.init(hex:)(v8).super.isa;
  v10 = objc_msgSend(v3, sel_monospacedSystemFontOfSize_weight_, 14.0, v4);
  v11._countAndFlagsBits = 0x36444339363523;
  v11._object = (void *)0xE700000000000000;
  v12 = UIColor.init(hex:)(v11).super.isa;
  v13 = objc_msgSend(v3, sel_monospacedSystemFontOfSize_weight_, 14.0, v4);
  v14 = objc_msgSend(v2, sel_systemGray2Color);
  result = objc_msgSend(v3, sel_monospacedSystemFontOfSize_weight_, 14.0, v4);
  *a1 = 1634889539;
  a1[1] = 0xE400000000000000;
  a1[2] = v19;
  a1[3] = v18;
  a1[4] = isa;
  a1[5] = v16;
  a1[6] = v6;
  a1[7] = v7;
  a1[8] = v9;
  a1[9] = v10;
  a1[10] = v12;
  a1[11] = v13;
  a1[12] = v14;
  a1[13] = result;
  return result;
}

void destroy for DebugFormatDebuggerSourceTheme.Cora(id *a1)
{
  swift_bridgeObjectRelease();

}

_QWORD *initializeWithCopy for DebugFormatDebuggerSourceTheme.Cora(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  id v14;
  id v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;
  id v22;
  id v23;
  id v24;
  id v25;
  void *v27;
  void *v28;
  void *v29;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = (void *)a2[2];
  v5 = (void *)a2[3];
  a1[2] = v4;
  a1[3] = v5;
  v6 = (void *)a2[4];
  v7 = (void *)a2[5];
  a1[4] = v6;
  a1[5] = v7;
  v8 = (void *)a2[6];
  v9 = (void *)a2[7];
  a1[6] = v8;
  a1[7] = v9;
  v10 = (void *)a2[8];
  v11 = (void *)a2[9];
  a1[8] = v10;
  a1[9] = v11;
  v13 = (void *)a2[10];
  v12 = (void *)a2[11];
  a1[10] = v13;
  a1[11] = v12;
  v27 = v12;
  v28 = (void *)a2[12];
  v29 = (void *)a2[13];
  a1[12] = v28;
  a1[13] = v29;
  swift_bridgeObjectRetain();
  v14 = v4;
  v15 = v5;
  v16 = v6;
  v17 = v7;
  v18 = v8;
  v19 = v9;
  v20 = v10;
  v21 = v11;
  v22 = v13;
  v23 = v27;
  v24 = v28;
  v25 = v29;
  return a1;
}

_QWORD *assignWithCopy for DebugFormatDebuggerSourceTheme.Cora(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  void *v14;
  id v15;
  void *v16;
  void *v17;
  id v18;
  void *v19;
  void *v20;
  id v21;
  void *v22;
  void *v23;
  id v24;
  void *v25;
  void *v26;
  id v27;
  void *v28;
  void *v29;
  id v30;
  void *v31;
  void *v32;
  id v33;
  void *v34;
  void *v35;
  id v36;
  void *v37;
  void *v38;
  id v39;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (void *)a2[2];
  v5 = (void *)a1[2];
  a1[2] = v4;
  v6 = v4;

  v7 = (void *)a2[3];
  v8 = (void *)a1[3];
  a1[3] = v7;
  v9 = v7;

  v10 = (void *)a2[4];
  v11 = (void *)a1[4];
  a1[4] = v10;
  v12 = v10;

  v13 = (void *)a2[5];
  v14 = (void *)a1[5];
  a1[5] = v13;
  v15 = v13;

  v16 = (void *)a2[6];
  v17 = (void *)a1[6];
  a1[6] = v16;
  v18 = v16;

  v19 = (void *)a2[7];
  v20 = (void *)a1[7];
  a1[7] = v19;
  v21 = v19;

  v22 = (void *)a2[8];
  v23 = (void *)a1[8];
  a1[8] = v22;
  v24 = v22;

  v25 = (void *)a2[9];
  v26 = (void *)a1[9];
  a1[9] = v25;
  v27 = v25;

  v28 = (void *)a2[10];
  v29 = (void *)a1[10];
  a1[10] = v28;
  v30 = v28;

  v31 = (void *)a2[11];
  v32 = (void *)a1[11];
  a1[11] = v31;
  v33 = v31;

  v34 = (void *)a2[12];
  v35 = (void *)a1[12];
  a1[12] = v34;
  v36 = v34;

  v37 = (void *)a2[13];
  v38 = (void *)a1[13];
  a1[13] = v37;
  v39 = v37;

  return a1;
}

uint64_t assignWithTake for DebugFormatDebuggerSourceTheme.Cora(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  void *v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  v6 = *(void **)(a1 + 48);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);

  v7 = *(void **)(a1 + 64);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);

  v8 = *(void **)(a1 + 80);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);

  v9 = *(void **)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);

  v10 = *(void **)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);

  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatDebuggerSourceTheme.Cora(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 112))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatDebuggerSourceTheme.Cora(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 112) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 112) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerSourceTheme.Cora()
{
  return &type metadata for DebugFormatDebuggerSourceTheme.Cora;
}

ValueMetadata *type metadata accessor for DebugFormatDebuggerSourceThemeStyle()
{
  return &type metadata for DebugFormatDebuggerSourceThemeStyle;
}

uint64_t sub_1BB24002C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _BYTE v5[8];

  v3 = sub_1BB242630(a1, a2, (uint64_t)v5, (void (*)(_QWORD *__return_ptr, _QWORD *, uint64_t))sub_1BB241FD8);
  sub_1BA8DAD20(a2);
  return v3;
}

unint64_t sub_1BB240080@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, unint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  unint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_1BB86C67C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *a1;
  if (*a1 < 0)
  {
    v16 = *(_QWORD *)(v10 + 16);
    v17 = *(_QWORD *)(v10 + 24);
    v18 = swift_allocObject();
    v20 = v16;
    swift_retain();
    swift_retain();
    sub_1BB240080(&v20, a2);
    v20 = v17;
    sub_1BB240080(&v20, a2);
    swift_release();
    swift_release();
    result = v18 | 0x8000000000000000;
  }
  else
  {
    v11 = swift_projectBox();
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v11, v6);
    v12 = *(void **)(a2 + 72);
    v13 = (void *)sub_1BB86C58C();
    v14 = objc_msgSend(v12, sel_assetHandleForURL_lifetimeHint_, v13, 0);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = v14;
  }
  *a3 = result;
  return result;
}

void static FormatDecorationContent.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1BB240244@<X0>(uint64_t a1@<X8>)
{
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v5;

  if (v1 >> 60)
  {
    v3 = 0;
  }
  else
  {
    v5 = *(_QWORD *)(a1 + 16);
    swift_retain();
    swift_retain();
    static FormatColor.== infix(_:_:)((uint64_t)&v5);
    v3 = v2;
    swift_release();
    swift_release();
  }
  return v3 & 1;
}

_QWORD *sub_1BB2407BC(uint64_t a1, _QWORD *a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  _QWORD *v12;
  _OWORD v14[2];
  uint64_t v15;

  if ((~*a2 & 0xF000000000000007) != 0)
    __asm { BR              X11 }
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v2);
  sub_1BA8C88C8(0);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  v8 = (_QWORD *)(v7 + v6);
  sub_1BAAF7494(1701869908, 0xE400000000000000, 1701736270, 0xE400000000000000, v8);
  v9 = type metadata accessor for FormatInspectionItem(0);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 0, 1, v9);
  sub_1BAF89090(0x697461726F636544, 0xEA00000000006E6FLL, 0, 0, v7, v14);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v3 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v3 + 64) = &off_1E72D2F60;
  v10 = swift_allocObject();
  *(_QWORD *)(v3 + 32) = v10;
  v11 = v14[1];
  *(_OWORD *)(v10 + 16) = v14[0];
  *(_OWORD *)(v10 + 32) = v11;
  *(_QWORD *)(v10 + 48) = v15;
  v12 = sub_1BB6DF010(v3);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v12;
}

void sub_1BB2409F0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,__int128 a30,__int128 a31,__int128 a32)
{
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, _QWORD, uint64_t, uint64_t);
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  __int128 v48;

  v32 = *(_QWORD *)(a1 + 16);
  v33 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v33);
  sub_1BA8C88C8(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(_QWORD *)(v36 + 72);
  v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_1BB87A390;
  v40 = (char *)(v39 + v38);
  swift_retain();
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x726F6C6F43, 0xE500000000000000, v40);
  v41 = type metadata accessor for FormatInspectionItem(0);
  v42 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56);
  v42(v40, 0, 1, v41);
  v43 = &v40[v37];
  v44 = &v43[*(int *)(v41 + 24)];
  *(_QWORD *)v44 = v32;
  v45 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 56))(v44, 0, 1, v45);
  *(_OWORD *)v43 = xmmword_1BB89D8A0;
  *((_QWORD *)v43 + 2) = 0;
  *((_QWORD *)v43 + 3) = 0;
  v46 = &v43[*(int *)(v41 + 28)];
  *(_QWORD *)v46 = 0;
  *((_QWORD *)v46 + 1) = 0;
  v46[16] = -1;
  v42(v43, 0, 1, v41);
  swift_retain();
  sub_1BAF89090(0x697461726F636544, 0xEA00000000006E6FLL, 0, 0, v39, &a30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v34 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v34 + 64) = &off_1E72D2F60;
  v47 = swift_allocObject();
  *(_QWORD *)(v34 + 32) = v47;
  v48 = a31;
  *(_OWORD *)(v47 + 16) = a30;
  *(_OWORD *)(v47 + 32) = v48;
  *(_QWORD *)(v47 + 48) = a32;
  sub_1BB6DF010(v34);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  JUMPOUT(0x1BB2409ACLL);
}

void sub_1BB24178C(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,__int128 a30,__int128 a31,uint64_t a32)
{
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  void (*v43)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;

  v33 = *(_QWORD *)(a1 + 16);
  v34 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v34);
  sub_1BA8C88C8(0);
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(_QWORD *)(v37 + 72);
  v39 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  v55 = 2 * v38;
  v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_1BB87FC80;
  v41 = v40 + v39;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BAAF7494(1701869908, 0xE400000000000000, 0x726F7463656C6553, 0xE800000000000000, (_QWORD *)(v40 + v39));
  v42 = type metadata accessor for FormatInspectionItem(0);
  v43 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 56);
  v43(v41, 0, 1, v42);
  v44 = (_QWORD *)(v41 + v38);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v34);
  v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)&a30 = v33;
  swift_retain();
  v46 = sub_1BB2407BC(v32, &a30);
  swift_release();
  *(_QWORD *)(v45 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v45 + 64) = &off_1E7335C38;
  *(_QWORD *)(v45 + 32) = v46;
  v47 = sub_1BA9747FC(v45);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v48 = sub_1BB6DF010(v47);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x65756C6156, 0xE500000000000000, (uint64_t)v48, 0, 0, v44);
  v43((unint64_t)v44, 0, 1, v42);
  sub_1BA8DACF0(v32);
  v49 = swift_bridgeObjectRetain();
  v50 = sub_1BB24002C(v49, v32);
  swift_bridgeObjectRelease();
  v51 = sub_1BA9747FC(v50);
  swift_bridgeObjectRelease();
  v52 = sub_1BB6DF010(v51);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x726F7463656C6553, 0xE900000000000073, (uint64_t)v52, 0, 0, (_QWORD *)(v41 + v55));
  v43(v41 + v55, 0, 1, v42);
  sub_1BAF89090(0x697461726F636544, 0xEA00000000006E6FLL, 0, 0, v40, &a30);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v35 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v35 + 64) = &off_1E72D2F60;
  v53 = swift_allocObject();
  *(_QWORD *)(v35 + 32) = v53;
  v54 = a31;
  *(_OWORD *)(v53 + 16) = a30;
  *(_OWORD *)(v53 + 32) = v54;
  *(_QWORD *)(v53 + 48) = a32;
  sub_1BB6DF010(v35);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_bridgeObjectRelease();
  swift_release();
  JUMPOUT(0x1BB2409A8);
}

void sub_1BB241F10()
{
  uint64_t (*v0)(uint64_t, uint64_t);

  v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v0);
  sub_1BA8C88C8(0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1BB87CE70;
  JUMPOUT(0x1BB2408ACLL);
}

double sub_1BB241FD8@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  void (*v15)(unint64_t, _QWORD, uint64_t, uint64_t);
  _QWORD *v16;
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  __int128 v23;
  _OWORD v25[2];
  uint64_t v26;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_QWORD *)(v9 + 72);
  v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1BB87A390;
  v13 = v12 + v11;
  swift_bridgeObjectRetain();
  sub_1BAAF7D88(0x726F7463656C6553, 0xE800000000000000, v4, v5, (_QWORD *)(v12 + v11));
  v14 = type metadata accessor for FormatInspectionItem(0);
  v15 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v15(v13, 0, 1, v14);
  v16 = (_QWORD *)(v13 + v10);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, v7);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)&v25[0] = v6;
  swift_retain();
  v18 = sub_1BB2407BC(a2, v25);
  swift_release();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 64) = &off_1E7335C38;
  *(_QWORD *)(inited + 32) = v18;
  v19 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v20 = sub_1BB6DF010(v19);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x65756C6156, 0xE500000000000000, (uint64_t)v20, 0, 0, v16);
  v15((unint64_t)v16, 0, 1, v14);
  sub_1BAF89090(0, 0xE000000000000000, 0, 0, v12, v25);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  a3[3] = (uint64_t)&type metadata for FormatInspectionGroup;
  a3[4] = (uint64_t)&off_1E72D2F60;
  v21 = swift_allocObject();
  *a3 = v21;
  result = *(double *)v25;
  v23 = v25[1];
  *(_OWORD *)(v21 + 16) = v25[0];
  *(_OWORD *)(v21 + 32) = v23;
  *(_QWORD *)(v21 + 48) = v26;
  return result;
}

double sub_1BB242264@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  unint64_t v15;
  void (*v16)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t inited;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  double result;
  __int128 v23;
  _OWORD v26[2];
  uint64_t v27;

  v3 = *a1;
  v4 = a1[1];
  v5 = a1[2];
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  sub_1BA8C88C8(0);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 72);
  v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1BB87A390;
  v11 = v10 + v9;
  v12 = type metadata accessor for FormatInspectionItem(0);
  v13 = (_QWORD *)(v11 + *(int *)(v12 + 24));
  *v13 = v3;
  v13[1] = v4;
  v14 = type metadata accessor for FormatInspectionItem.Value(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(v13, 0, 1, v14);
  *(_OWORD *)v11 = xmmword_1BB8FBBF0;
  *(_QWORD *)(v11 + 16) = 0;
  *(_QWORD *)(v11 + 24) = 0;
  v15 = v11 + *(int *)(v12 + 28);
  *(_QWORD *)v15 = 0;
  *(_QWORD *)(v15 + 8) = 0;
  *(_BYTE *)(v15 + 16) = -1;
  v16 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v16(v11, 0, 1, v12);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CD0, (uint64_t (*)(uint64_t))sub_1BA89EA20, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  *(_QWORD *)&v26[0] = v5;
  swift_retain();
  swift_bridgeObjectRetain();
  v18 = sub_1BB2407BC(a2, v26);
  swift_release();
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(inited + 64) = &off_1E7335C38;
  *(_QWORD *)(inited + 32) = v18;
  v19 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v20 = sub_1BB6DF010(v19);
  swift_bridgeObjectRelease();
  sub_1BAAF3C48(0x65756C6156, 0xE500000000000000, (uint64_t)v20, 0, 0, (_QWORD *)(v11 + v8));
  v16(v11 + v8, 0, 1, v12);
  sub_1BAF89090(0, 0xE000000000000000, 0, 0, v10, v26);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  a3[3] = (uint64_t)&type metadata for FormatInspectionGroup;
  a3[4] = (uint64_t)&off_1E72D2F60;
  v21 = swift_allocObject();
  *a3 = v21;
  result = *(double *)v26;
  v23 = v26[1];
  *(_OWORD *)(v21 + 16) = v26[0];
  *(_OWORD *)(v21 + 32) = v23;
  *(_QWORD *)(v21 + 48) = v27;
  return result;
}

unint64_t sub_1BB24253C(uint64_t a1)
{
  unint64_t result;

  result = sub_1BA829604();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB242560()
{
  unint64_t result;

  result = qword_1ED3D2558;
  if (!qword_1ED3D2558)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatDecorationContent, &type metadata for FormatDecorationContent);
    atomic_store(result, (unint64_t *)&qword_1ED3D2558);
  }
  return result;
}

uint64_t sub_1BB2425A4(_QWORD *a1)
{
  uint64_t v1;

  v1 = *a1 >> 60;
  if (v1 <= 7)
    return v1;
  else
    return (*a1 >> 3) + 8;
}

unint64_t *sub_1BB2425C0(unint64_t *result, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;

  if (a2 < 8)
  {
    v2 = *result & 0xFFFFFFFFFFFFFF8;
    v3 = a2 << 60;
  }
  else
  {
    v2 = 8 * (a2 - 8);
    v3 = 0x8000000000000000;
  }
  *result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatDecorationContent()
{
  return &type metadata for FormatDecorationContent;
}

uint64_t sub_1BB2425FC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB242630(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD *__return_ptr, _QWORD *, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  double v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v23;
  void (*v24)(_QWORD *__return_ptr, _QWORD *, uint64_t);
  _QWORD v25[3];
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v24 = a4;
  v5 = v4;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x1E0DEE9D8];
  if (v6)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A388(0, v6, 0);
    v7 = v29;
    v10 = (uint64_t *)(a1 + 48);
    while (1)
    {
      v11 = *(v10 - 1);
      v12 = *v10;
      v25[0] = *(v10 - 2);
      v25[1] = v11;
      v25[2] = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      v24(v26, v25, a2);
      if (v5)
        break;
      v5 = 0;
      swift_release();
      swift_bridgeObjectRelease();
      v29 = v7;
      v14 = *(_QWORD *)(v7 + 16);
      v13 = *(_QWORD *)(v7 + 24);
      if (v14 >= v13 >> 1)
        sub_1BAC7A388(v13 > 1, v14 + 1, 1);
      v10 += 3;
      v15 = v27;
      v16 = v28;
      v17 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v26, v27);
      v18 = MEMORY[0x1E0C80A78](v17);
      v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, double))(v21 + 16))(v20, v18);
      sub_1BA6AC628(v14, (uint64_t)v20, &v29, v15, v16);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
      v7 = v29;
      if (!--v6)
        return v7;
    }
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t sub_1BB2427E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatDecorationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1BB242824(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_1BA772DC0(*(_QWORD *)(v2 + 16), *a1);
  if (v3)
    *a2 = v3;
}

uint64_t *sub_1BB24285C(uint64_t *a1)
{
  sub_1BA5DCC20(*a1);
  return a1;
}

uint64_t *sub_1BB242888(uint64_t *a1)
{
  sub_1BA5DCC4C(*a1);
  return a1;
}

uint64_t sub_1BB2428B4()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB2428E8()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB24290C()
{
  _QWORD *v0;
  _QWORD *v1;

  sub_1BB87420C();
  sub_1BB872AFC(v0);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v1);
  sub_1BB872AFC((_QWORD *)0xE000000000000000);
  swift_bridgeObjectRelease();
  return 0x2074736554;
}

ValueMetadata *type metadata accessor for DebugFormatTestSuite()
{
  return &type metadata for DebugFormatTestSuite;
}

uint64_t FeedItemImpressionProcessor.__allocating_init(contentPrefetchManager:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BB0E59E8(a1, v2 + 16);
  return v2;
}

uint64_t FeedItemImpressionProcessor.init(contentPrefetchManager:)(uint64_t a1)
{
  uint64_t v1;

  sub_1BB0E59E8(a1, v1 + 16);
  return v1;
}

void sub_1BB242A30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BB210)
  {
    sub_1BB242A84();
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BB210);
  }
}

unint64_t sub_1BB242A84()
{
  unint64_t result;

  result = qword_1EF2BB200;
  if (!qword_1EF2BB200)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EF2BB200);
  }
  return result;
}

uint64_t FeedItemImpressionProcessor.blueprintImpressionManager(_:startedImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB242BA8(a2);
}

uint64_t FeedItemImpressionProcessor.blueprintImpressionManager(_:createdImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB242E08(a2);
}

uint64_t FeedItemImpressionProcessor.blueprintImpressionManager(_:cancelledImpression:)(uint64_t a1, uint64_t a2)
{
  return sub_1BB242E08(a2);
}

uint64_t FeedItemImpressionProcessor.deinit()
{
  uint64_t v0;

  sub_1BA4A2E80(v0 + 16, (uint64_t (*)(_QWORD))sub_1BB242A30);
  return v0;
}

uint64_t FeedItemImpressionProcessor.__deallocating_deinit()
{
  uint64_t v0;

  sub_1BA4A2E80(v0 + 16, (uint64_t (*)(_QWORD))sub_1BB242A30);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB242B60(uint64_t a1, uint64_t a2)
{
  return sub_1BB242BA8(a2);
}

uint64_t sub_1BB242B84(uint64_t a1, uint64_t a2)
{
  return sub_1BB242E08(a2);
}

uint64_t sub_1BB242BA8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v3 = (uint64_t)(v1 + 2);
  v2 = *v1;
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v19 - v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = sub_1BB86F778();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  sub_1BB2430C8(v3, (uint64_t)v30);
  v14 = v31;
  if (!v31)
    return sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BB242A30);
  v22 = v32;
  v21 = __swift_project_boxed_opaque_existential_1(v30, v31);
  v15 = swift_getAssociatedTypeWitness();
  v20 = v2;
  v16 = v15;
  v17 = swift_getAssociatedConformanceWitness();
  v26 = v16;
  v27 = AssociatedTypeWitness;
  v28 = v17;
  v29 = AssociatedConformanceWitness;
  sub_1BB870A98();
  sub_1BB870A8C();
  sub_1BB86F76C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  (*(void (**)(uint64_t))(*(_QWORD *)(v20 + 96) + 8))(AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v14);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BB242E08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  char *v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v30[3];
  uint64_t v31;
  uint64_t v32;

  v25 = a1;
  v3 = (uint64_t)(v1 + 2);
  v2 = *v1;
  v4 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v9 = (char *)&v19 - v8;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v11 = sub_1BB86F778();
  v23 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v19 - v12;
  sub_1BB2430C8(v3, (uint64_t)v30);
  v14 = v31;
  if (!v31)
    return sub_1BA4A2E80((uint64_t)v30, (uint64_t (*)(_QWORD))sub_1BB242A30);
  v22 = v32;
  v21 = __swift_project_boxed_opaque_existential_1(v30, v31);
  v15 = swift_getAssociatedTypeWitness();
  v20 = v2;
  v16 = v15;
  v17 = swift_getAssociatedConformanceWitness();
  v26 = v16;
  v27 = AssociatedTypeWitness;
  v28 = v17;
  v29 = AssociatedConformanceWitness;
  sub_1BB870258();
  sub_1BB87024C();
  sub_1BB86F76C();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v13, v11);
  (*(void (**)(uint64_t))(*(_QWORD *)(v20 + 96) + 8))(AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v22 + 16))(v6, v14);
  sub_1BA4A2E80((uint64_t)v6, type metadata accessor for FeedItem);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
}

uint64_t sub_1BB243068()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for FeedItemImpressionProcessor(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FeedItemImpressionProcessor);
}

uint64_t method lookup function for FeedItemImpressionProcessor()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FeedItemImpressionProcessor.__allocating_init(contentPrefetchManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1BB2430C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB242A30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void destroy for FormatContextMenuData(uint64_t a1)
{
  sub_1BA726DD8(*(void **)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
  swift_bridgeObjectRelease();
  sub_1BA726DA4(*(void **)(a1 + 56), *(_BYTE *)(a1 + 64));
}

uint64_t initializeWithCopy for FormatContextMenuData(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 41);
  v10 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7271AC(*(id *)a2, v5, v6, v7, v8, v10, v9);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_BYTE *)(a1 + 40) = v10;
  *(_BYTE *)(a1 + 41) = v9;
  v11 = *(void **)(v2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v2 + 48);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  swift_bridgeObjectRetain();
  sub_1BA727178(v11, v2);
  *(_QWORD *)(a1 + 56) = v11;
  *(_BYTE *)(a1 + 64) = v2;
  return a1;
}

uint64_t assignWithCopy for FormatContextMenuData(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  id v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  void *v18;
  void *v19;
  unsigned __int8 v20;

  v2 = a2;
  v4 = *(id *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_BYTE *)(a2 + 41);
  v10 = *(unsigned __int8 *)(a2 + 40);
  sub_1BA7271AC(*(id *)a2, v5, v6, v7, v8, v10, v9);
  v11 = *(void **)a1;
  v12 = *(_QWORD *)(a1 + 8);
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  v15 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v16 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v10;
  v17 = *(_BYTE *)(a1 + 41);
  *(_BYTE *)(a1 + 41) = v9;
  sub_1BA726DD8(v11, v12, v13, v14, v15, v16, v17);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(v2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = *(void **)(v2 + 56);
  LOBYTE(v2) = *(_BYTE *)(v2 + 64);
  sub_1BA727178(v18, v2);
  v19 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = v18;
  v20 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v2;
  sub_1BA726DA4(v19, v20);
  return a1;
}

uint64_t assignWithTake for FormatContextMenuData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int16 v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v12;
  uint64_t v13;
  char v14;
  void *v15;
  unsigned __int8 v16;

  v4 = *(_QWORD *)(a2 + 32);
  v5 = *(_WORD *)(a2 + 40);
  v6 = *(void **)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  v10 = *(_QWORD *)(a1 + 32);
  v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v11;
  *(_QWORD *)(a1 + 32) = v4;
  v12 = *(_BYTE *)(a1 + 41);
  v13 = *(unsigned __int8 *)(a1 + 40);
  *(_WORD *)(a1 + 40) = v5;
  sub_1BA726DD8(v6, v7, v8, v9, v10, v13, v12);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  v14 = *(_BYTE *)(a2 + 64);
  v15 = *(void **)(a1 + 56);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v16 = *(_BYTE *)(a1 + 64);
  *(_BYTE *)(a1 + 64) = v14;
  sub_1BA726DA4(v15, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatContextMenuData(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 65))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatContextMenuData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 64) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 65) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 65) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatContextMenuData()
{
  return &type metadata for FormatContextMenuData;
}

uint64_t sub_1BB243414@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ContextMenu.ItemOptions.description.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

_QWORD *sub_1BB24344C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD v42[4];
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59[11];

  v2 = type metadata accessor for FeedHeadline.State(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B0B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0D52718], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v42 - v7;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3B2DB0, type metadata accessor for FeedHeadline, v5);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v42 - v10;
  sub_1BA8C88C8(0);
  v56 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (_QWORD *)((char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(_QWORD *)(a1 + 48);
  if (v16)
  {
    v42[0] = v2;
    v42[1] = v8;
    v42[2] = v4;
    v42[3] = v11;
    v45 = v13;
    v18 = *(void **)a1;
    v17 = *(_QWORD *)(a1 + 8);
    v19 = *(_QWORD *)(a1 + 16);
    v20 = *(_QWORD *)(a1 + 24);
    v21 = *(_QWORD *)(a1 + 32);
    v22 = *(_QWORD *)(a1 + 40);
    v23 = *(void **)(a1 + 56);
    v24 = v22 >> 8;
    v46 = *(unsigned __int8 *)(a1 + 64);
    v48 = v17;
    v49 = v19;
    v50 = v20;
    v51 = v21;
    v47 = v22;
    v53 = v23;
    sub_1BB246438(v18, v17, v19, v20, v21, v22, v16, v23, v46);
    v25 = swift_bridgeObjectRetain();
    sub_1BA85DFD4(v25);
    swift_bridgeObjectRelease();
    v26 = sub_1BB872E14();
    swift_release();
    v27 = *(_QWORD *)(v26 + 16);
    v52 = v18;
    if (v27)
    {
      v43 = v24;
      v44 = v16;
      v58 = MEMORY[0x1E0DEE9D8];
      sub_1BAC79E1C(0, v27, 0);
      v28 = 0;
      v29 = v58;
      v54 = v15 + 2;
      v55 = v26;
      do
      {
        v30 = v27;
        v57 = *(_BYTE *)(v26 + v28 + 32);
        v31 = ContextMenu.ItemOptions.description.getter();
        v33 = v32;
        v34 = type metadata accessor for FormatInspectionItem(0);
        v35 = (uint64_t *)((char *)v15 + *(int *)(v34 + 24));
        *v35 = 0;
        v35[1] = 0xE000000000000000;
        v36 = type metadata accessor for FormatInspectionItem.Value(0);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 56))(v35, 0, 1, v36);
        *v15 = v31;
        v15[1] = v33;
        v37 = v54;
        *v54 = 0;
        v37[1] = 0;
        v38 = (char *)v15 + *(int *)(v34 + 28);
        *(_QWORD *)v38 = 0;
        *((_QWORD *)v38 + 1) = 0;
        v38[16] = -1;
        (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v15, 0, 1, v34);
        v58 = v29;
        v40 = *(_QWORD *)(v29 + 16);
        v39 = *(_QWORD *)(v29 + 24);
        if (v40 >= v39 >> 1)
        {
          sub_1BAC79E1C(v39 > 1, v40 + 1, 1);
          v29 = v58;
        }
        ++v28;
        *(_QWORD *)(v29 + 16) = v40 + 1;
        sub_1BA5193C4((uint64_t)v15, v29+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(_QWORD *)(v56 + 72) * v40, (uint64_t (*)(_QWORD))sub_1BA8C88C8);
        v27 = v30;
        v26 = v55;
      }
      while (v30 != v28);
      swift_bridgeObjectRelease();
      LOBYTE(v24) = v43;
    }
    else
    {
      swift_bridgeObjectRelease();
      v29 = MEMORY[0x1E0DEE9D8];
    }
    sub_1BAF89090(0xD000000000000019, 0x80000001BB982260, 0, 0, v29, v59);
    swift_bridgeObjectRelease();
    __asm { BR              X10 }
  }
  return sub_1BB6DF010(MEMORY[0x1E0DEE9D8]);
}

_QWORD *sub_1BB24382C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  int *v14;
  _WORD *v15;
  char *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  void *v26;
  _QWORD *v27;
  _QWORD *v28;
  void *v29;

  v3 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87FC80;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v3);
  v5 = *(_QWORD *)(v0 + 144);
  v6 = *(_QWORD *)(v5 + 72);
  v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87A390;
  v9 = v8 + v7;
  swift_unknownObjectRetain();
  sub_1BAAF7494(0x70795420756E654DLL, 0xE900000000000065, 0x6F69647541, 0xE500000000000000, (_QWORD *)(v8 + v7));
  v10 = type metadata accessor for FormatInspectionItem(0);
  v11 = *(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  *(_QWORD *)(v0 + 144) = v11;
  v11(v9, 0, 1, v10);
  *(_QWORD *)(v0 + 128) = v9 + v6;
  v12 = sub_1BB871B24();
  v13 = *(_QWORD *)(v0 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v13, 1, 1, v12);
  *(_QWORD *)(v0 + 176) = 0;
  *(_QWORD *)(v0 + 320) = 0;
  *(_BYTE *)(v0 + 328) = 1;
  *(_BYTE *)(v2 - 128) = 0;
  v14 = *(int **)v0;
  v15 = *(_WORD **)(v0 + 16);
  v16 = (char *)v15 + *(int *)(*(_QWORD *)v0 + 24);
  v17 = type metadata accessor for SharedItem();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v16, 1, 1, v17);
  *v15 = 258;
  *((_BYTE *)v15 + v14[7]) = 1;
  *((_BYTE *)v15 + v14[8]) = 0;
  *((_BYTE *)v15 + v14[9]) = 0;
  *((_BYTE *)v15 + v14[10]) = 0;
  v18 = *(void **)(v0 + 104);
  swift_unknownObjectRetain();
  v19 = *(_QWORD *)(v0 + 24);
  FeedHeadline.init(identifier:headline:metadata:premiumBadge:nativeAdInfo:state:audioTrack:additionalTraits:)(0, 0, v18, 0, (char *)(v2 - 128), v13, (uint64_t)v15, (void **)(v0 + 176), v19, v0 + 320);
  v20 = type metadata accessor for FeedHeadline(0);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 0, 1, v20);
  v21 = *(_QWORD **)(v0 + 128);
  sub_1BAAF6720(0x656E696C64616548, 0xE800000000000000, v19, v21);
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v0 + 144))(v21, 0, 1, v10);
  sub_1BAF89090(0x20747865746E6F43, 0xEC000000756E654DLL, 0, 0, v8, (_QWORD *)(v0 + 320));
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  *(_QWORD *)(v4 + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v4 + 64) = &off_1E72D2F60;
  v22 = swift_allocObject();
  *(_QWORD *)(v4 + 32) = v22;
  v23 = *(_OWORD *)(v0 + 336);
  *(_OWORD *)(v22 + 16) = *(_OWORD *)(v0 + 320);
  *(_OWORD *)(v22 + 32) = v23;
  *(_QWORD *)(v22 + 48) = *(_QWORD *)(v0 + 352);
  *(_QWORD *)(v4 + 96) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v4 + 104) = &off_1E72D2F60;
  v24 = swift_allocObject();
  *(_QWORD *)(v4 + 72) = v24;
  v25 = *(_OWORD *)(v2 - 152);
  *(_OWORD *)(v24 + 16) = *(_OWORD *)(v2 - 168);
  *(_OWORD *)(v24 + 32) = v25;
  *(_QWORD *)(v24 + 48) = *(_QWORD *)(v2 - 136);
  v26 = *(void **)(v0 + 112);
  *(_QWORD *)(v0 + 176) = v26;
  LODWORD(v19) = *(_DWORD *)(v0 + 60);
  *(_BYTE *)(v0 + 184) = v19;
  v27 = sub_1BA8EC950(v0 + 176);
  *(_QWORD *)(v4 + 136) = &type metadata for FormatInspection;
  *(_QWORD *)(v4 + 144) = &off_1E7335C38;
  *(_QWORD *)(v4 + 112) = v27;
  v28 = sub_1BB6DF010(v4);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v29 = *(void **)(v0 + 104);
  swift_unknownObjectRelease();
  sub_1BB2464B8(v29, *(_QWORD *)(v0 + 72), *(_QWORD *)(v0 + 80), *(_QWORD *)(v0 + 88), *(_QWORD *)(v0 + 96), *(_QWORD *)(v0 + 64), v1, v26, v19);
  return v28;
}

id sub_1BB246438(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, unsigned __int8 a9)
{
  if (a7)
  {
    sub_1BA7271AC(result, a2, a3, a4, a5, a6, SBYTE1(a6));
    swift_bridgeObjectRetain();
    return sub_1BA727178(a8, a9);
  }
  return result;
}

uint64_t sub_1BB246484()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB2464B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, unsigned __int8 a9)
{
  if (a7)
  {
    sub_1BA726DD8(a1, a2, a3, a4, a5, a6, SBYTE1(a6));
    swift_bridgeObjectRelease();
    sub_1BA726DA4(a8, a9);
  }
}

id LocationDetectionManager.observableMostFrequentLocation.getter()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observableMostFrequentLocation);
  swift_beginAccess();
  return *v1;
}

uint64_t LocationDetectionManager.mostFrequentLocation.getter()
{
  uint64_t v1;

  swift_retain();
  sub_1BB86E878();
  swift_release();
  return v1;
}

uint64_t sub_1BB2466E4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_retain();
  sub_1BB86E878();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1BB246738(id *a1)
{
  id v1;

  v1 = *a1;
  swift_retain();
  sub_1BB86E884();
  return swift_release();
}

id LocationDetectionManager.locationServicesEnabled.getter()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager), sel_locationServicesAvailable);
}

BOOL LocationDetectionManager.authorized.getter()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  if (qword_1ED3C2638 != -1)
    swift_once();
  v1 = (id)qword_1ED476978;
  v2 = sub_1BB8732F4();
  sub_1BB86EF44("WARNING! You can calling a synchronous API that can hang on macOS rdar://125515627. Need to move to async call", 110, 2, &dword_1BA493000, v1, v2, MEMORY[0x1E0DEE9D8]);

  return objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager), sel__authorizationStatus)- 3 < 2;
}

id LocationDetectionManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_1BB246894(void *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  void *v5;
  id v6;

  v3 = a2 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v3);
  if (result)
  {
    v5 = (void *)result;
    v6 = a1;
    swift_retain();
    sub_1BB86E884();

    return swift_release();
  }
  return result;
}

uint64_t static LocationDetectionManager.fetchAuthorizationStatus(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BB86E050();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_1BB86E044();
  return swift_release();
}

void sub_1BB246988(void *a1, uint64_t a2)
{
  uint64_t v3;
  id v4;
  uint64_t inited;
  id v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id *v14;
  id v15;

  v3 = a2 + 16;
  v4 = objc_msgSend((id)objc_opt_self(), sel_standardUserDefaults);
  if (a1)
  {
    sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3AB9B0, (uint64_t (*)(uint64_t))sub_1BB2482A8, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    *(_QWORD *)(inited + 32) = 0x656475746974616CLL;
    *(_QWORD *)(inited + 40) = 0xEB0000000079654BLL;
    v6 = a1;
    objc_msgSend(v6, sel_coordinate);
    *(_QWORD *)(inited + 48) = v7;
    strcpy((char *)(inited + 56), "longitudeKey");
    *(_BYTE *)(inited + 69) = 0;
    *(_WORD *)(inited + 70) = -5120;
    objc_msgSend(v6, sel_coordinate);
    *(_QWORD *)(inited + 72) = v8;
    sub_1BA8F3F90(inited);
    v9 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v10 = (void *)sub_1BB872970();
    objc_msgSend(v4, sel_setObject_forKey_, v9, v10);

  }
  else
  {
    v11 = (void *)sub_1BB872970();
    objc_msgSend(v4, sel_setURL_forKey_, 0, v11);

  }
  swift_beginAccess();
  v12 = MEMORY[0x1BCCE5D40](v3);
  if (v12)
  {
    v13 = (void *)v12;
    v14 = (id *)(v12 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observableMostFrequentLocation);
    swift_beginAccess();
    v15 = *v14;

    objc_msgSend(v15, sel_setValue_, a1);
  }
}

uint64_t LocationDetectionManager.removeObserver(_:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v13;
  uint64_t v14;

  v3 = v1 + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observers;
  swift_beginAccess();
  v4 = *(_QWORD *)v3;
  v14 = MEMORY[0x1E0DEE9D8];
  if (*(_QWORD *)v3 >> 62)
  {
LABEL_18:
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_1BB873F30();
    if (v5)
      goto LABEL_3;
  }
  else
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    if (v5)
    {
LABEL_3:
      v13 = (_QWORD *)v3;
      v3 = 0;
      while (1)
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          v6 = MEMORY[0x1BCCE4630](v3, v4);
          v7 = (char *)(v3 + 1);
          if (__OFADD__(v3, 1))
          {
LABEL_15:
            __break(1u);
LABEL_16:
            v3 = (unint64_t)v13;
            v11 = v14;
            goto LABEL_20;
          }
        }
        else
        {
          if (v3 >= *(_QWORD *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_18;
          }
          v6 = *(_QWORD *)(v4 + 8 * v3 + 32);
          swift_retain();
          v7 = (char *)(v3 + 1);
          if (__OFADD__(v3, 1))
            goto LABEL_15;
        }
        v8 = MEMORY[0x1BCCE5D40](v6 + 16);
        swift_unknownObjectRelease();
        if (!v8 || (v9 = MEMORY[0x1BCCE5D40](v6 + 16)) != 0 && (v10 = v9, swift_unknownObjectRelease(), v10 == a1))
        {
          swift_release();
        }
        else
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        ++v3;
        if (v7 == (char *)v5)
          goto LABEL_16;
      }
    }
  }
  v11 = MEMORY[0x1E0DEE9D8];
LABEL_20:
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  *(_QWORD *)v3 = v11;
  return swift_bridgeObjectRelease();
}

uint64_t LocationDetectionManager.isAuthorized()()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_1BB246EB8;
  return sub_1BB874224();
}

uint64_t sub_1BB246EB8()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB246F0C()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(unsigned __int8 *)(v0 + 24));
}

uint64_t sub_1BB246F18(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  double v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  sub_1BB24830C();
  v3 = v2;
  v4 = *(_QWORD *)(v2 - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v4 + 16))((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3, v6);
  v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  sub_1BB86E050();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = sub_1BB2483D0;
  *(_QWORD *)(v9 + 24) = v8;
  swift_retain();
  sub_1BB86E044();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB247150(const void *a1, void *a2)
{
  _QWORD *v2;
  id v4;
  _QWORD *v5;

  v2[2] = a2;
  v2[3] = _Block_copy(a1);
  v4 = a2;
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_1BB2471F4;
  return sub_1BB874224();
}

uint64_t sub_1BB2471F4()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1BB247248()
{
  uint64_t v0;
  void (**v1)(_QWORD, _QWORD);

  v1 = *(void (***)(_QWORD, _QWORD))(v0 + 24);

  v1[2](v1, *(unsigned __int8 *)(v0 + 40));
  _Block_release(v1);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id LocationDetectionManager.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1BB247334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t result;
  void *v6;
  unint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t i;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a3 + 16;
  swift_beginAccess();
  result = MEMORY[0x1BCCE5D40](v4);
  if (result)
  {
    v6 = (void *)result;
    v7 = (unint64_t *)(result + OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_observers);
    swift_beginAccess();
    v8 = *v7;
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      result = sub_1BB873F30();
      v9 = result;
      if (result)
        goto LABEL_4;
    }
    else
    {
      v9 = *(_QWORD *)((v8 & 0xFFFFFFFFFFFFF8) + 0x10);
      result = swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_4:
        if (v9 < 1)
        {
          __break(1u);
          return result;
        }
        for (i = 0; i != v9; ++i)
        {
          if ((v8 & 0xC000000000000001) != 0)
          {
            v13 = MEMORY[0x1BCCE4630](i, v8);
          }
          else
          {
            v13 = *(_QWORD *)(v8 + 8 * i + 32);
            swift_retain();
          }
          v14 = MEMORY[0x1BCCE5D40](v13 + 16);
          if (v14)
          {
            v11 = (void *)v14;
            v12 = v6;
            objc_msgSend(v11, sel_locationDetectionManager_didChangeAuthorizationStatus_, v12, a2);
            swift_release();

            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
        }
      }
    }

    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t LocationDetectionManager.uid.getter()
{
  return 0xD00000000000001ELL;
}

uint64_t LocationDetectionManager.requiresPresentation()()
{
  sub_1BB247DF4();
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB247508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BB248208;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1BB86E050();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BB248238;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  swift_retain();
  sub_1BB86E044();
  swift_release();
  return swift_release();
}

void (*LocationDetectionManager.presentationAction()())(void (*a1)(void *, uint64_t), uint64_t a2)
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  return sub_1BB247E48;
}

void sub_1BB247614(void (*a1)(void *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (**v9)();
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;

  v5 = a3 + 16;
  swift_beginAccess();
  v6 = MEMORY[0x1BCCE5D40](v5);
  if (v6)
  {
    v7 = (char *)v6;
    v8 = swift_allocObject();
    *(_QWORD *)(v8 + 16) = a1;
    *(_QWORD *)(v8 + 24) = a2;
    v9 = (uint64_t (**)())&v7[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC];
    v10 = *(_QWORD *)&v7[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_onUserInteractedWithLocationAuthorizationTCC];
    *v9 = sub_1BB2481E0;
    v9[1] = (uint64_t (*)())v8;
    swift_retain();
    sub_1BA49EBE0(v10);
    objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC8NewsFeed24LocationDetectionManager_locationManager], sel_requestWhenInUseAuthorization);

  }
  else
  {
    v11 = sub_1BB870A38();
    sub_1BB248198();
    v12 = (void *)swift_allocError();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, *MEMORY[0x1E0DBA098], v11);
    a1(v12, 1);

  }
}

uint64_t sub_1BB24772C()
{
  sub_1BB247DF4();
  swift_allocObject();
  return sub_1BB86EA58();
}

void (*sub_1BB24776C())(void (*a1)(void *, uint64_t), uint64_t a2)
{
  swift_allocObject();
  swift_unknownObjectWeakInit();
  return sub_1BB247E48;
}

uint64_t sub_1BB2477B8(uint64_t a1, uint64_t a2)
{
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  id v11;

  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3C8]), sel_init);
  if (qword_1ED3C2638 != -1)
    swift_once();
  v5 = (id)qword_1ED476978;
  v6 = sub_1BB87330C();
  v7 = MEMORY[0x1E0DEE9D8];
  sub_1BB86EF44("Will request location authorizationStatus", 41, 2, &dword_1BA493000, v5, v6, MEMORY[0x1E0DEE9D8]);

  LODWORD(v5) = objc_msgSend(v4, sel__authorizationStatus);
  v8 = (id)qword_1ED476978;
  v9 = sub_1BB87330C();
  sub_1BB86EF44("Did complete request for location authorizationStatus", 53, 2, &dword_1BA493000, v8, v9, v7);

  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = v4;
  *(_DWORD *)(v10 + 40) = (_DWORD)v5;
  swift_retain();
  v11 = v4;
  sub_1BB86ED4C();

  return swift_release();
}

uint64_t static LocationDetectionManager.authorizationStatus()()
{
  sub_1BA4B07F0(0, &qword_1ED3ABDC0, (uint64_t (*)(uint64_t))sub_1BB247E50, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  swift_allocObject();
  return sub_1BB86EA58();
}

uint64_t sub_1BB247970()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB247994(void *a1)
{
  uint64_t v1;

  return sub_1BB246894(a1, v1);
}

uint64_t sub_1BB24799C()
{
  uint64_t v0;

  return sub_1BB2477B8(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1BB2479A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(void);

  v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v4;
  *v4 = v3;
  v4[1] = sub_1BA8195A4;
  return v6();
}

uint64_t sub_1BB2479F8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v5;
  *v5 = v4;
  v5[1] = sub_1BA8195A4;
  return v7();
}

uint64_t sub_1BB247A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1BB872F94();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1BB872F88();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1BB248094(a1);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1BB872F28();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1BB247B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1BB248158;
  *(_QWORD *)(v5 + 24) = v4;
  sub_1BB86E050();
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1BA4D7950;
  *(_QWORD *)(v6 + 24) = v5;
  swift_retain();
  swift_retain();
  sub_1BB86E044();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB247C54(unint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t i;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v12;

  v12 = MEMORY[0x1E0DEE9D8];
  if (a1 >> 62)
  {
LABEL_18:
    v3 = sub_1BB873F30();
    if (v3)
      goto LABEL_3;
  }
  else
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v3)
    {
LABEL_3:
      for (i = 0; ; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0)
        {
          v5 = MEMORY[0x1BCCE4630](i, a1);
          v6 = i + 1;
          if (__OFADD__(i, 1))
          {
LABEL_15:
            __break(1u);
            return v12;
          }
        }
        else
        {
          if (i >= *(_QWORD *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_18;
          }
          v5 = *(_QWORD *)(a1 + 8 * i + 32);
          swift_retain();
          v6 = i + 1;
          if (__OFADD__(i, 1))
            goto LABEL_15;
        }
        v7 = MEMORY[0x1BCCE5D40](v5 + 16);
        swift_unknownObjectRelease();
        if (!v7 || (v8 = MEMORY[0x1BCCE5D40](v5 + 16)) != 0 && (v9 = v8, swift_unknownObjectRelease(), v9 == a2))
        {
          swift_release();
        }
        else
        {
          sub_1BB873DB0();
          sub_1BB873DE0();
          sub_1BB873DEC();
          sub_1BB873DBC();
        }
        if (v6 == v3)
          return v12;
      }
    }
  }
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1BB247DD0()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1BB247DF4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3A3AB8)
  {
    v0 = sub_1BB86EAAC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3A3AB8);
  }
}

void sub_1BB247E48(void (*a1)(void *, uint64_t), uint64_t a2)
{
  uint64_t v2;

  sub_1BB247614(a1, a2, v2);
}

void sub_1BB247E50()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AC028)
  {
    sub_1BA49A224(255, &qword_1ED3AC020);
    type metadata accessor for CLAuthorizationStatus(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AC028);
  }
}

uint64_t sub_1BB247ED4()
{
  uint64_t v0;

  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_1BB247F00()
{
  uint64_t v0;
  uint64_t v1;
  const void *v2;
  void *v3;
  _QWORD *v4;

  v2 = *(const void **)(v0 + 16);
  v3 = *(void **)(v0 + 24);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v4;
  *v4 = v1;
  v4[1] = sub_1BA4B0D38;
  return ((uint64_t (*)(const void *, void *))((char *)&dword_1EF2BEFF8 + dword_1EF2BEFF8))(v2, v3);
}

uint64_t sub_1BB247F68()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  _QWORD *v5;

  v2 = v0[2];
  v3 = v0[3];
  v4 = (int *)v0[4];
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  *v5 = v1;
  v5[1] = sub_1BA8195A4;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_1EF2BF008 + dword_1EF2BF008))(v2, v3, v4);
}

uint64_t objectdestroy_21Tm_2()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB248010(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  _QWORD *v7;

  v4 = v1[2];
  v5 = v1[3];
  v6 = (int *)v1[4];
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v7;
  *v7 = v2;
  v7[1] = sub_1BA8195A4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_1EF2BF018 + dword_1EF2BF018))(a1, v4, v5, v6);
}

uint64_t sub_1BB248094(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB2480E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1BA4B0D38;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EF2BF028 + dword_1EF2BF028))(a1, v4);
}

void sub_1BB248158(void *a1, int a2)
{
  uint64_t v2;
  void (*v3)(void **);
  id v4;
  void *v5;
  int v6;

  v3 = *(void (**)(void **))(v2 + 16);
  v5 = a1;
  v6 = a2;
  v4 = a1;
  v3(&v5);

}

unint64_t sub_1BB248198()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EF2BF038;
  if (!qword_1EF2BF038)
  {
    v1 = sub_1BB870A38();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DBA0A8], v1);
    atomic_store(result, (unint64_t *)&qword_1EF2BF038);
  }
  return result;
}

uint64_t sub_1BB2481E0()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(0, 0);
}

uint64_t sub_1BB248208(char a1)
{
  uint64_t v1;
  uint64_t (*v2)(char *);
  char v4;

  v2 = *(uint64_t (**)(char *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_1BB248238(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  _BOOL8 v4;

  v4 = (a2 & 0x1F) == 0 && a2 < 5;
  return (*(uint64_t (**)(_BOOL8))(v2 + 16))(v4);
}

uint64_t sub_1BB248264(uint64_t a1, int a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(BOOL))(v2 + 16))((a2 - 3) < 2);
}

uint64_t sub_1BB248290(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB247334(a1, a2, v2);
}

void sub_1BB24829C()
{
  uint64_t v0;

  sub_1BB246988(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

void sub_1BB2482A8()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3AAD48)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1ED3AAD48);
  }
}

void sub_1BB24830C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BF040)
  {
    v0 = sub_1BB872F4C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BF040);
  }
}

uint64_t sub_1BB248370()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BB24830C();
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_1BB2483D0()
{
  sub_1BB24830C();
  return sub_1BB872F40();
}

uint64_t sub_1BB24842C()
{
  uint64_t v0;

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1BB248458()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 16))(*(_QWORD *)(v0 + 32), *(unsigned int *)(v0 + 40));
}

uint64_t dispatch thunk of FeedGroupDecorationProviderType.decorations(layoutOptions:columnOptions:feedKind:feedSelectors:frame:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 8))();
}

uint64_t destroy for DebugFormatLayoutModel(uint64_t a1)
{
  uint64_t result;

  swift_release();
  sub_1BAFB39D8(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_BYTE *)(a1 + 48));
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 176);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for DebugFormatLayoutModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  swift_retain();
  sub_1BAFB38AC(v4, v5, v6, v7, v8, v9);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v10 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v10;
  v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  v12 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v12;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v13 = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  if (v13)
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  }
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  return a1;
}

uint64_t assignWithCopy for DebugFormatLayoutModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _OWORD *v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_retain();
  swift_release();
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(_BYTE *)(a2 + 48);
  sub_1BAFB38AC(v4, v5, v6, v7, v8, v9);
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  v14 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  v15 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v9;
  sub_1BAFB39D8(v10, v11, v12, v13, v14, v15);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = (_OWORD *)(a1 + 168);
  v17 = (_OWORD *)(a2 + 168);
  v18 = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 176))
  {
    if (v18)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BB248804(a1 + 168);
      v19 = *(_QWORD *)(a2 + 184);
      *v16 = *v17;
      *(_QWORD *)(a1 + 184) = v19;
    }
  }
  else if (v18)
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = *v17;
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *v16 = v20;
  }
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  return a1;
}

uint64_t sub_1BB248804(uint64_t a1)
{
  destroy for FormatOptionBinding();
  return a1;
}

__n128 __swift_memcpy193_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

uint64_t assignWithTake for DebugFormatLayoutModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  v4 = *(_QWORD *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v4;
  v11 = *(_BYTE *)(a1 + 48);
  *(_BYTE *)(a1 + 48) = v5;
  sub_1BAFB39D8(v6, v7, v8, v9, v10, v11);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v12 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v12;
  v13 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v13;
  v14 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v14;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  swift_bridgeObjectRelease();
  if (!*(_QWORD *)(a1 + 176))
    goto LABEL_5;
  v15 = *(_QWORD *)(a2 + 176);
  if (!v15)
  {
    sub_1BB248804(a1 + 168);
LABEL_5:
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatLayoutModel(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 193))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatLayoutModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 184) = 0;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 192) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 193) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 193) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatLayoutModel()
{
  return &type metadata for DebugFormatLayoutModel;
}

id sub_1BB248A40(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  void **i;
  uint64_t v7;
  uint64_t v8;
  char v9;
  void *v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD *);
  id v12;
  char v13;
  id v15;
  uint64_t v16;
  _QWORD v18[2];
  char v19;

  v4 = *(_QWORD *)(*(_QWORD *)(v2 + 24) + 16);
  if (!v4)
    return *(id *)(v2 + 32);
  v5 = *(_QWORD *)(v2 + 16);
  for (i = (void **)(swift_bridgeObjectRetain() + 56); ; i += 4)
  {
    v7 = (uint64_t)*(i - 3);
    v8 = (uint64_t)*(i - 2);
    v9 = *((_BYTE *)i - 8);
    v10 = *i;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v5 + 104);
    v18[0] = v7;
    v18[1] = v8;
    v19 = v9;
    sub_1BA73B1CC(v7, v8, v9);
    v12 = v10;
    sub_1BA73B1CC(v7, v8, v9);
    v13 = v11(a1, a2, v18);
    sub_1BA73B1B8(v7, v8, v9);
    if ((v13 & 1) != 0)
      break;
    sub_1BA73B1B8(v7, v8, v9);

    if (!--v4)
    {
      swift_bridgeObjectRelease();
      v2 = v16;
      return *(id *)(v2 + 32);
    }
  }
  swift_bridgeObjectRelease();
  v15 = v12;
  sub_1BA73B1B8(v7, v8, v9);

  return v15;
}

uint64_t sub_1BB248B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v28)(uint64_t, uint64_t, _QWORD *);
  _QWORD v29[2];
  char v30;

  v4 = *(_QWORD *)(v3[3] + 16);
  if (v4)
  {
    v22 = a3;
    v25 = v3[2];
    v5 = swift_bridgeObjectRetain();
    v6 = 0;
    while (1)
    {
      v7 = v5;
      v9 = *(_QWORD *)(v5 + v6 + 32);
      v8 = *(_QWORD *)(v5 + v6 + 40);
      v10 = *(_BYTE *)(v5 + v6 + 48);
      v11 = *(_QWORD *)(v5 + v6 + 88);
      v12 = *(_QWORD *)(v5 + v6 + 64);
      v13 = *(_QWORD *)(v5 + v6 + 72);
      v23 = *(_QWORD *)(v5 + v6 + 56);
      v24 = *(_QWORD *)(v5 + v6 + 80);
      v28 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v25 + 104);
      v29[0] = v9;
      v29[1] = v8;
      v30 = v10;
      sub_1BA73B1CC(v9, v8, v10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v9, v8, v10);
      v14 = v28(a1, a2, v29);
      sub_1BA73B1B8(v9, v8, v10);
      if ((v14 & 1) != 0)
        break;
      sub_1BA73B1B8(v9, v8, v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 64;
      --v4;
      v5 = v7;
      if (!v4)
      {
        swift_bridgeObjectRelease();
        v3 = v21;
        a3 = v22;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA73B1B8(v9, v8, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *v22 = v23;
    v22[1] = v12;
    v22[2] = v13;
    v22[3] = v24;
    v22[4] = v11;
  }
  else
  {
LABEL_6:
    v16 = v3[4];
    v15 = v3[5];
    v18 = v3[6];
    v17 = v3[7];
    v19 = v3[8];
    *a3 = v16;
    a3[1] = v15;
    a3[2] = v18;
    a3[3] = v17;
    a3[4] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1BB248D64(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, _QWORD *);
  char v11;
  _QWORD *v13;
  _QWORD v16[2];
  char v17;

  v3 = *(_QWORD *)(v2[3] + 16);
  if (v3)
  {
    v4 = v2[2];
    v5 = swift_bridgeObjectRetain() + 64;
    while (1)
    {
      v6 = *(_QWORD *)(v5 - 32);
      v7 = *(_QWORD *)(v5 - 24);
      v8 = *(_BYTE *)(v5 - 16);
      v9 = *(_QWORD *)(v5 - 8);
      v10 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v4 + 104);
      v16[0] = v6;
      v16[1] = v7;
      v17 = v8;
      sub_1BA73B1CC(v6, v7, v8);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v6, v7, v8);
      v11 = v10(a1, a2, v16);
      sub_1BA73B1B8(v6, v7, v8);
      if ((v11 & 1) != 0)
        break;
      v5 += 40;
      sub_1BA73B1B8(v6, v7, v8);
      swift_bridgeObjectRelease();
      if (!--v3)
      {
        swift_bridgeObjectRelease();
        v2 = v13;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1BA73B1B8(v6, v7, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    v9 = v2[4];
    swift_bridgeObjectRetain();
  }
  return v9;
}

uint64_t sub_1BB248E9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD *);
  char v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD v18[2];
  char v19;

  v4 = *(_QWORD *)(v3[3] + 16);
  if (v4)
  {
    v15 = a3;
    v5 = v3[2];
    v6 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *((_BYTE *)v6 - 8);
      v10 = *v6;
      v11 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v5 + 104);
      v18[0] = v7;
      v18[1] = v8;
      v19 = v9;
      sub_1BA73B1CC(v7, v8, v9);
      swift_retain();
      sub_1BA73B1CC(v7, v8, v9);
      v12 = v11(a1, a2, v18);
      sub_1BA73B1B8(v7, v8, v9);
      if ((v12 & 1) != 0)
        break;
      v6 += 4;
      sub_1BA73B1B8(v7, v8, v9);
      swift_release();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        a3 = v15;
        v3 = v14;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BA73B1B8(v7, v8, v9);
    result = swift_release();
    *v15 = v10;
  }
  else
  {
LABEL_6:
    *a3 = v3[4];
    return swift_retain();
  }
  return result;
}

uint64_t sub_1BB248FFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, _QWORD *);
  char v12;
  uint64_t result;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD v18[2];
  char v19;

  v4 = *(_QWORD *)(v3[3] + 16);
  if (v4)
  {
    v15 = a3;
    v5 = v3[2];
    v6 = (_QWORD *)(swift_bridgeObjectRetain() + 56);
    while (1)
    {
      v7 = *(v6 - 3);
      v8 = *(v6 - 2);
      v9 = *((_BYTE *)v6 - 8);
      v10 = *v6;
      v11 = *(uint64_t (**)(uint64_t, uint64_t, _QWORD *))(v5 + 104);
      v18[0] = v7;
      v18[1] = v8;
      v19 = v9;
      sub_1BA73B1CC(v7, v8, v9);
      swift_retain();
      sub_1BA73B1CC(v7, v8, v9);
      v12 = v11(a1, a2, v18);
      sub_1BA73B1B8(v7, v8, v9);
      if ((v12 & 1) != 0)
        break;
      v6 += 4;
      sub_1BA73B1B8(v7, v8, v9);
      swift_release();
      if (!--v4)
      {
        swift_bridgeObjectRelease();
        a3 = v15;
        v3 = v14;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1BA73B1B8(v7, v8, v9);
    result = swift_release();
    *v15 = v10;
  }
  else
  {
LABEL_6:
    *a3 = v3[4];
    return swift_retain();
  }
  return result;
}

void sub_1BB24915C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  _QWORD v9[6];
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 48);
  v9[0] = *(_QWORD *)v0;
  v9[1] = v1;
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v4;
  v9[5] = v5;
  v10 = v6;
  v16 = *(_OWORD *)(v0 + 129);
  v17 = *(_OWORD *)(v0 + 145);
  v18 = *(_OWORD *)(v0 + 161);
  v19 = *(_OWORD *)(v0 + 177);
  v12 = *(_OWORD *)(v0 + 65);
  v13 = *(_OWORD *)(v0 + 81);
  v14 = *(_OWORD *)(v0 + 97);
  v15 = *(_OWORD *)(v0 + 113);
  v11 = *(_OWORD *)(v0 + 49);
  swift_retain();
  sub_1BB24ADBC();
  sub_1BB23AE4C((uint64_t)v9, 0.0, 0.0, v7, v8);
  swift_release();
  __asm { BR              X9 }
}

uint64_t sub_1BB24922C()
{
  uint64_t v1;

  sub_1BA8DAD20((uint64_t)&v1);
  return 0;
}

uint64_t sub_1BB24925C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t inited;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  va_list va;

  va_start(va, a14);
  if (((v14 >> 59) & 0x1E | (v14 >> 2) & 1) == 4)
  {
    v20 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    v21 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
    v26 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    v23 = *(_QWORD *)(v20 + 160);
    if (v23)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v23 + 16) + 80);
      swift_retain();
    }
    else
    {
      v24 = 0;
    }
    sub_1BAFB38AC(v14, v15, v16, v17, v18, 3);
    swift_retain();
    swift_retain();
    sub_1BA8E9488(v26, v21);
    v25 = sub_1BAF4EE0C((double *)va, v24);
    swift_release();
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 64) = &off_1E7335C38;
    *(_QWORD *)(inited + 32) = v25;
    sub_1BB6DF010(inited);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    swift_release();
    swift_release();
    sub_1BA8E94B8(v26, v21);
    sub_1BAFB39D8(v14, v15, v16, v17, v18, 3);
    sub_1BA8DAD20((uint64_t)va);
    JUMPOUT(0x1BB249238);
  }
  return sub_1BB24922C();
}

void sub_1BB2493D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  _QWORD v9[6];
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 32);
  v5 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 48);
  v9[0] = *(_QWORD *)v0;
  v9[1] = v1;
  v9[2] = v2;
  v9[3] = v3;
  v9[4] = v4;
  v9[5] = v5;
  v10 = v6;
  v16 = *(_OWORD *)(v0 + 129);
  v17 = *(_OWORD *)(v0 + 145);
  v18 = *(_OWORD *)(v0 + 161);
  v19 = *(_OWORD *)(v0 + 177);
  v12 = *(_OWORD *)(v0 + 65);
  v13 = *(_OWORD *)(v0 + 81);
  v14 = *(_OWORD *)(v0 + 97);
  v15 = *(_OWORD *)(v0 + 113);
  v11 = *(_OWORD *)(v0 + 49);
  swift_retain();
  sub_1BB24ADBC();
  sub_1BB23AE4C((uint64_t)v9, 0.0, 0.0, v7, v8);
  swift_release();
  __asm { BR              X9 }
}

uint64_t sub_1BB2494A8()
{
  uint64_t v1;

  sub_1BA8DAD20((uint64_t)&v1);
  return 0;
}

uint64_t sub_1BB2494D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t inited;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  va_list va;

  va_start(va, a14);
  if (((v14 >> 59) & 0x1E | (v14 >> 2) & 1) == 4)
  {
    v20 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x10);
    v26 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
    v27 = *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
    sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
    inited = swift_initStackObject();
    v22 = v20;
    v23 = 0;
    *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
    if (*(_QWORD *)(v22 + 160))
    {
      v24 = *(_QWORD *)(v22 + 168);
      if (v24)
      {
        v23 = *(_QWORD *)(v24 + 16);
        swift_retain();
      }
    }
    sub_1BAFB38AC(v14, v15, v16, v17, v18, 3);
    swift_retain();
    swift_retain();
    sub_1BA8E9488(v26, v27);
    v25 = sub_1BB1DE598((uint64_t *)va, v23);
    swift_release();
    *(_QWORD *)(inited + 56) = &type metadata for FormatInspection;
    *(_QWORD *)(inited + 64) = &off_1E7335C38;
    *(_QWORD *)(inited + 32) = v25;
    sub_1BB6DF010(inited);
    swift_setDeallocating();
    sub_1BA89EA04(0);
    swift_arrayDestroy();
    swift_release();
    swift_release();
    sub_1BA8E94B8(v26, v27);
    sub_1BAFB39D8(v14, v15, v16, v17, v18, 3);
    sub_1BA8DAD20((uint64_t)va);
    JUMPOUT(0x1BB2494B4);
  }
  return sub_1BB2494A8();
}

void sub_1BB24965C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB24968C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

_QWORD *sub_1BB249700()
{
  uint64_t v0;
  unsigned int v1;
  _QWORD *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  _QWORD *v14;
  _QWORD *v15;
  unint64_t v16;
  unint64_t v17;

  v1 = *(unsigned __int8 *)(v0 + 48);
  if (!sub_1BB24EFEC())
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v1 > 2)
  {
    sub_1BB873CB4();
    sub_1BB872AFC("Draws outside of parent");
    type metadata accessor for CGRect(0);
    sub_1BB873E34();
    sub_1BB872AFC(v8);
    v2 = sub_1BB392EE4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v9 = v2[2];
    v10 = v2[3];
    v11 = v9 + 1;
    if (v9 >= v10 >> 1)
    {
      v16 = v2[2];
      v17 = v9 + 1;
      v15 = sub_1BB392EE4((_QWORD *)(v10 > 1), v9 + 1, 1, v2);
      v9 = v16;
      v11 = v17;
      v2 = v15;
    }
    v2[2] = v11;
    v12 = &v2[5 * v9];
    v12[7] = 0;
    v7 = v12 + 7;
    *((_BYTE *)v7 - 24) = 1;
  }
  else
  {
    sub_1BB873CB4();
    sub_1BB872AFC("Draws outside of parent");
    type metadata accessor for CGRect(0);
    sub_1BB873E34();
    sub_1BB872AFC("Draws outside the bounds ");
    v2 = sub_1BB392EE4(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v4 = v2[2];
    v3 = v2[3];
    v5 = v4 + 1;
    if (v4 >= v3 >> 1)
    {
      v14 = sub_1BB392EE4((_QWORD *)(v3 > 1), v4 + 1, 1, v2);
      v5 = v4 + 1;
      v2 = v14;
    }
    v2[2] = v5;
    v6 = &v2[5 * v4];
    v6[7] = 0;
    v7 = v6 + 7;
    *((_BYTE *)v7 - 24) = 0;
  }
  *(v7 - 2) = 0xD000000000000017;
  *(v7 - 1) = 0x80000001BB9825C0;
  v7[1] = 0xE000000000000000;
  return v2;
}

void sub_1BB2499DC()
{
  __asm { BR              X9 }
}

id sub_1BB249A24()
{
  void *v0;
  id v1;

  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (!v1)
  {
    __break(1u);
    JUMPOUT(0x1BB249A78);
  }
  return v1;
}

void sub_1BB249CF4()
{
  void *v0;
  id v1;

  swift_retain();
  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (!v1)
    __break(1u);
  JUMPOUT(0x1BB249CB4);
}

void sub_1BB249D58()
{
  void *v0;
  id v1;

  swift_retain();
  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (!v1)
    __break(1u);
  JUMPOUT(0x1BB249CB4);
}

void sub_1BB249DBC()
{
  void *v0;
  id v1;

  swift_retain();
  v0 = (void *)sub_1BB872970();
  v1 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v0);

  if (!v1)
    __break(1u);
  JUMPOUT(0x1BB249CB4);
}

void sub_1BB249E18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  id v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFFBLL) + 0x20);
  v6 = *(_QWORD *)((v0 & 0xFFFFFFFFFFFFFFBLL) + 0x28);
  v12 = *(_QWORD *)(*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFFBLL) + 0x10) + 160);
  sub_1BAFB38AC(v0, v4, v1, v2, v3, 3);
  swift_retain();
  swift_retain();
  v11 = v5;
  sub_1BA8E9488(v5, v6);
  if (v12)
  {
    v7 = (void *)sub_1BB872970();
    v8 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v7);

    if (!v8)
    {
      __break(1u);
      JUMPOUT(0x1BB249EDCLL);
    }
  }
  else
  {
    v9 = (void *)sub_1BB872970();
    v10 = objc_msgSend((id)objc_opt_self(), sel_systemImageNamed_, v9);

    if (!v10)
    {
      __break(1u);
      JUMPOUT(0x1BB24A4A8);
    }
  }
  swift_release();
  swift_release();
  sub_1BA8E94B8(v11, v6);
  JUMPOUT(0x1BB249CB4);
}

void sub_1BB24A50C()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB24A560()
{
  return 1835365449;
}

void sub_1BB24A694()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A6A4()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A6B4()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A6F4()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A70C()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A72C()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A73C()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A758()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A768()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A788()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A79C()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A7BC()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A7D8()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A7F8()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A81C()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A83C()
{
  JUMPOUT(0x1BB24A680);
}

void sub_1BB24A860()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB24A898@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB24A908()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB24A940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  if (!v1)
    return 0;
  v2 = *(_QWORD *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1BB24AAEC()
{
  uint64_t v0;

  sub_1BA6BC5C0(0, (unint64_t *)&qword_1ED3A2A80, (void (*)(uint64_t))type metadata accessor for FormatItemNodeData, (void (*)(uint64_t))type metadata accessor for FormatItemNodeDataLayoutAttributes);
  if (!*(_QWORD *)(*(_QWORD *)(swift_projectBox() + *(int *)(v0 + 48)) + 32))
    JUMPOUT(0x1BB24AACCLL);
  JUMPOUT(0x1BB24A948);
}

void sub_1BB24AB34()
{
  uint64_t v0;

  if (*(_QWORD *)(*(_QWORD *)((v0 & 0xFFFFFFFFFFFFFFFBLL) + 0x18) + 104))
    JUMPOUT(0x1BB24A95CLL);
  JUMPOUT(0x1BB24AACCLL);
}

void sub_1BB24AB50()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB24AB88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB24ABF8()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB24AC30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes)
                 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_1BB24ACA0()
{
  __asm { BR              X13 }
}

void sub_1BB24AD3C()
{
  __asm { BR              X12 }
}

uint64_t sub_1BB24AD6C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

void sub_1BB24ADBC()
{
  __asm { BR              X10 }
}

double sub_1BB24AE3C()
{
  return 0.0;
}

_QWORD *sub_1BB24AF48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;

  sub_1BB24AFF4();
  v1 = v0;
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v2 + 16) + 16))
  {
    v8 = *(_QWORD *)(v1 + 56);
    v3 = swift_bridgeObjectRetain();
    v4 = sub_1BA6E42A0(v3);
    sub_1BA6E3FB8(v4);
    swift_release();
    v5 = v8;
  }
  else
  {
    v5 = sub_1BA6E3F38();
    swift_release();
  }
  v6 = sub_1BA67F4CC(v5);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1BB24AFF4()
{
  __asm { BR              X11 }
}

uint64_t sub_1BB24B024()
{
  return swift_retain();
}

void sub_1BB24B080()
{
  sub_1BA6BC5C0(0, &qword_1ED3C6D98, (void (*)(uint64_t))type metadata accessor for FormatViewData, sub_1BB24F378);
  swift_projectBox();
  JUMPOUT(0x1BB24B074);
}

void sub_1BB24B158()
{
  JUMPOUT(0x1BB24B074);
}

void sub_1BB24B168()
{
  sub_1BA6BC5C0(0, (unint64_t *)&unk_1EF2BDA80, (void (*)(uint64_t))type metadata accessor for FormatVideoData, sub_1BB24F35C);
  swift_projectBox();
  JUMPOUT(0x1BB24B074);
}

void sub_1BB24B224()
{
  JUMPOUT(0x1BB24B074);
}

void sub_1BB24B234()
{
  JUMPOUT(0x1BB24B254);
}

void sub_1BB24B278()
{
  JUMPOUT(0x1BB24B074);
}

void sub_1BB24B288()
{
  sub_1BA6BC5C0(0, (unint64_t *)&unk_1ED3C42D8, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerData, (void (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes);
  swift_projectBox();
  JUMPOUT(0x1BB24B074);
}

void sub_1BB24B2CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD v54[6];
  char v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  uint64_t v65;

  v65 = *MEMORY[0x1E0C80C00];
  sub_1BB24F2D4(0);
  MEMORY[0x1E0C80A78](v1);
  v42 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = type metadata accessor for FormatVideoPlayerData();
  v39 = *(_QWORD *)(v40 - 8);
  MEMORY[0x1E0C80A78](v40);
  v44 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA9BB7E8(0);
  MEMORY[0x1E0C80A78](v4);
  v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatShareAttributionData();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x1E0C80A78](v6);
  v37 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB24F2F0(0);
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = type metadata accessor for FormatVideoData(0);
  v33 = *(_QWORD *)(v34 - 8);
  MEMORY[0x1E0C80A78](v34);
  v43 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1BB871A70();
  v47 = *(_QWORD *)(v11 - 8);
  v48 = v11;
  MEMORY[0x1E0C80A78](v11);
  MEMORY[0x1E0C80A78](v12);
  v46 = (char *)&v29 - v13;
  v14 = type metadata accessor for FormatAdMetricsData();
  MEMORY[0x1E0C80A78](v14);
  v45 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = type metadata accessor for FormatMicaData();
  MEMORY[0x1E0C80A78](v30);
  v38 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, &qword_1EF2AFF58, (uint64_t (*)(uint64_t))MEMORY[0x1E0DBC548], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v17);
  v41 = (char *)&v29 - v18;
  sub_1BB2034F0(0);
  MEMORY[0x1E0C80A78](v19);
  v20 = type metadata accessor for FormatButtonNodeData();
  MEMORY[0x1E0C80A78](v20);
  v21 = *(_QWORD *)(v0 + 8);
  v23 = *(_QWORD *)(v0 + 16);
  v22 = *(_QWORD *)(v0 + 24);
  v25 = *(_QWORD *)(v0 + 32);
  v24 = *(_QWORD *)(v0 + 40);
  v26 = *(unsigned __int8 *)(v0 + 48);
  v54[0] = *(_QWORD *)v0;
  v54[1] = v21;
  v49 = v21;
  v50 = v24;
  v52 = v23;
  v53 = v22;
  v54[2] = v23;
  v54[3] = v22;
  v51 = v25;
  v54[4] = v25;
  v54[5] = v24;
  v55 = v26;
  v61 = *(_OWORD *)(v0 + 129);
  v62 = *(_OWORD *)(v0 + 145);
  v63 = *(_OWORD *)(v0 + 161);
  v64 = *(_OWORD *)(v0 + 177);
  v57 = *(_OWORD *)(v0 + 65);
  v58 = *(_OWORD *)(v0 + 81);
  v59 = *(_OWORD *)(v0 + 97);
  v60 = *(_OWORD *)(v0 + 113);
  v56 = *(_OWORD *)(v0 + 49);
  swift_retain();
  sub_1BB24ADBC();
  sub_1BB23AE4C((uint64_t)v54, 0.0, 0.0, v27, v28);
  swift_release();
  __asm { BR              X9 }
}

uint64_t sub_1BB24B6B0()
{
  uint64_t v0;

  sub_1BA8DAD20(v0 + 352);
  return 0;
}

uint64_t sub_1BB24E640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  uint64_t v16[5];

  sub_1BA74E57C();
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v16[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1BB86E710();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v16[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4C2DD8(*(_QWORD *)(a1 + OBJC_IVAR____TtC8NewsFeed18FormatWebEmbedData_config)+ OBJC_IVAR____TtC8NewsFeed24FormatWebEmbedDataConfig_json, (uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA74E57C);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1BA4A2E80((uint64_t)v6, (uint64_t (*)(_QWORD))sub_1BA74E57C);
    v11 = sub_1BB8714E8();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v16[3] = v7;
    v16[4] = sub_1BB24F3B0();
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
    (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(boxed_opaque_existential_0, v10, v7);
    sub_1BB8714F4();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    v14 = sub_1BB8714E8();
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a2, 0, 1, v14);
  }
}

void sub_1BB24E7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  _QWORD v9[6];
  char v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;

  v1 = *(_QWORD *)(v0 + 8);
  v3 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v5 = *(_QWORD *)(v0 + 32);
  v4 = *(_QWORD *)(v0 + 40);
  v6 = *(unsigned __int8 *)(v0 + 48);
  v9[0] = *(_QWORD *)v0;
  v9[1] = v1;
  v9[2] = v3;
  v9[3] = v2;
  v9[4] = v5;
  v9[5] = v4;
  v10 = v6;
  v16 = *(_OWORD *)(v0 + 129);
  v17 = *(_OWORD *)(v0 + 145);
  v18 = *(_OWORD *)(v0 + 161);
  v19 = *(_OWORD *)(v0 + 177);
  v12 = *(_OWORD *)(v0 + 65);
  v13 = *(_OWORD *)(v0 + 81);
  v14 = *(_OWORD *)(v0 + 97);
  v15 = *(_OWORD *)(v0 + 113);
  v11 = *(_OWORD *)(v0 + 49);
  swift_retain();
  sub_1BB24ADBC();
  sub_1BB23AE4C((uint64_t)v9, 0.0, 0.0, v7, v8);
  swift_release();
  __asm { BR              X9 }
}

uint64_t sub_1BB24E8C0()
{
  uint64_t v1;

  sub_1BA8DAD20((uint64_t)&v1);
  return 0;
}

uint64_t sub_1BB24E8F0()
{
  unint64_t v0;

  return ((uint64_t (*)())((char *)sub_1BB24E8C0 + 4 * byte_1BB8FBF00[(v0 >> 59) & 0x1E | (v0 >> 2) & 1]))();
}

void sub_1BB24E914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v5 = v4[4];
  v6 = v4[5];
  v9 = v4[6];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
  if (v5)
  {
    v5 = *(_QWORD *)(v5 + 16);
    swift_retain();
  }
  sub_1BAFB38AC((uint64_t)v4, v3, v2, v1, v0, 3);
  swift_retain();
  swift_retain();
  sub_1BA8E9488(v6, v9);
  v8 = sub_1BB1DE598(&STACK[0x220], v5);
  swift_release();
  *(_QWORD *)(v7 + 56) = &type metadata for FormatInspection;
  *(_QWORD *)(v7 + 64) = &off_1E7335C38;
  *(_QWORD *)(v7 + 32) = v8;
  sub_1BB6DF010(v7);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  swift_release();
  swift_release();
  sub_1BA8E94B8(v6, v9);
  sub_1BAFB39D8((uint64_t)v4, v3, v2, v1, v0, 3);
  sub_1BA8DAD20((uint64_t)&STACK[0x220]);
  JUMPOUT(0x1BB24E8CCLL);
}

uint64_t sub_1BB24EE24()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 48) == 3)
    __asm { BR              X11 }
  return 0;
}

BOOL sub_1BB24EFEC()
{
  uint64_t v0;
  CGFloat v1;
  CGFloat v2;
  CGFloat v3;
  CGFloat v4;
  CGFloat v5;
  CGFloat v6;
  CGFloat v7;
  CGFloat v8;
  double v9;
  double v10;
  double v11;
  double v12;
  double v13;
  double v14;
  double v15;
  double v16;
  __n128 v17;
  CGRect v19;
  CGRect v20;
  CGRect v21;
  CGRect v22;
  CGRect v23;

  v1 = *(double *)(v0 + 128);
  v2 = *(double *)(v0 + 136);
  v3 = *(double *)(v0 + 144);
  v4 = *(double *)(v0 + 152);
  if (*(unsigned __int8 *)(v0 + 48) > 2u)
    goto LABEL_8;
  CGRectGetHeight(*(CGRect *)(v0 + 128));
  if ((sub_1BB86DC30() & 1) != 0)
  {
    sub_1BB24ACA0();
    sub_1BB24ACA0();
    CGRectGetMinY(v19);
    sub_1BB8735E8();
    goto LABEL_9;
  }
  v20.origin.x = v1;
  v20.origin.y = v2;
  v20.size.width = v3;
  v20.size.height = v4;
  CGRectGetWidth(v20);
  if ((sub_1BB86DC30() & 1) == 0)
  {
LABEL_8:
    sub_1BB24ACA0();
    goto LABEL_9;
  }
  sub_1BB24ACA0();
  v10 = v9;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  sub_1BB24ACA0();
  v17.n128_f64[0] = CGRectGetMinX(v21);
  if (v17.n128_f64[0] <= 0.0)
    v17.n128_f64[0] = 0.0;
  MEMORY[0x1BCCE3EF8](v17, v10, v12, v14, v16);
LABEL_9:
  v23.origin.x = v5;
  v23.origin.y = v6;
  v23.size.width = v7;
  v23.size.height = v8;
  v22.origin.x = v1;
  v22.origin.y = v2;
  v22.size.width = v3;
  v22.size.height = v4;
  return !CGRectContainsRect(v22, v23);
}

void sub_1BB24F2D4(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BF8B0, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

void sub_1BB24F2F0(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2BF050, type metadata accessor for FormatVideoData, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB24F30C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB24F340(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1EF2BDA70, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoPlayerNodeLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
}

void sub_1BB24F35C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1EF2B0788, (uint64_t (*)(uint64_t))type metadata accessor for FormatVideoNodeLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
}

void sub_1BB24F378(uint64_t a1)
{
  sub_1BA4B07F0(a1, (unint64_t *)&unk_1ED3CEFA0, (uint64_t (*)(uint64_t))type metadata accessor for FormatViewNodeLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
}

void sub_1BB24F394(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3CEFB0, (uint64_t (*)(uint64_t))type metadata accessor for FormatButtonNodeDataLayoutAttributes, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FormatAnimationNodeDataLayoutAttributes);
}

unint64_t sub_1BB24F3B0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED3C47D0;
  if (!qword_1ED3C47D0)
  {
    v1 = sub_1BB86E710();
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DB48C0], v1);
    atomic_store(result, (unint64_t *)&qword_1ED3C47D0);
  }
  return result;
}

uint64_t destroy for DebugFormatLayoutModel.Layout(uint64_t a1)
{
  return sub_1BAFB39D8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_BYTE *)(a1 + 40));
}

uint64_t initializeWithCopy for DebugFormatLayoutModel.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1BAFB38AC(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_BYTE *)(a1 + 40) = v8;
  return a1;
}

uint64_t assignWithCopy for DebugFormatLayoutModel.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  v8 = *(_BYTE *)(a2 + 40);
  sub_1BAFB38AC(*(_QWORD *)a2, v4, v5, v6, v7, v8);
  v9 = *(_QWORD *)a1;
  v10 = *(_QWORD *)(a1 + 8);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = *(_QWORD *)(a1 + 24);
  v13 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  v14 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  sub_1BAFB39D8(v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t assignWithTake for DebugFormatLayoutModel.Layout(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  char v11;

  v3 = *(_QWORD *)(a2 + 32);
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_QWORD *)(a1 + 32) = v3;
  v11 = *(_BYTE *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  sub_1BAFB39D8(v5, v7, v6, v8, v9, v11);
  return a1;
}

ValueMetadata *type metadata accessor for DebugFormatLayoutModel.Layout()
{
  return &type metadata for DebugFormatLayoutModel.Layout;
}

uint64_t sub_1BB24F56C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  char v18;
  uint64_t v19;

  sub_1BB24F9D0(a2, a1, a3);
  v19 = a3[2];
  FormatOptionValue.type.getter();
  FormatPropertyDefinition.type.getter(&v19);
  v4 = FormatOptionType.rawValue.getter();
  v6 = v5;
  if (v4 == FormatOptionType.rawValue.getter() && v6 == v7)
    return swift_bridgeObjectRelease_n();
  v9 = sub_1BB874398();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    type metadata accessor for FormatLayoutError();
    sub_1BA4A2870((unint64_t *)&qword_1ED3B4C10, (uint64_t (*)(uint64_t))type metadata accessor for FormatLayoutError, (uint64_t)&unk_1BB94DDEC);
    swift_allocError();
    v11 = v10;
    FormatPropertyDefinition.identifier.getter();
    v13 = v12;
    v15 = v14;
    FormatPropertyDefinition.type.getter(&v18);
    v16 = v18;
    v19 = a3[2];
    FormatOptionValue.type.getter();
    *(_QWORD *)v11 = v13;
    *(_QWORD *)(v11 + 8) = v15;
    *(_BYTE *)(v11 + 16) = v16;
    *(_BYTE *)(v11 + 17) = v17;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    return sub_1BA4A2E80((uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
  }
  return result;
}

uint64_t FormatOptionConverter.convert(option:context:)@<X0>(uint64_t *a1@<X0>, __int128 *a2@<X1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t v6;
  __int128 v8;
  char v9;

  v5 = *((_BYTE *)a2 + 16);
  v8 = *a2;
  v9 = v5;
  sub_1BB24F76C((uint64_t)&v8);
  FormatOptionConverter.convert(option:contextProperties:)(a1, v6, a3);
  return swift_bridgeObjectRelease();
}

void sub_1BB24F76C(uint64_t a1)
{
  __asm { BR              X10 }
}

unint64_t sub_1BB24F79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;

  v3 = *(_QWORD *)(v1 + 72);
  if (*(_QWORD *)(v3 + 16))
  {
    swift_bridgeObjectRetain();
    v4 = sub_1BA6E35A8(v2, v0);
    if ((v5 & 1) != 0)
    {
      v6 = *(_QWORD *)(*(_QWORD *)(v3 + 56) + 8 * v4);
      swift_bridgeObjectRetain();
      sub_1BA98C024(v2, v0, 0);
      return v6;
    }
    sub_1BA98C024(v2, v0, 0);
  }
  return sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
}

unint64_t FormatOptionConverter.convert(options:context:)(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  __int128 v9;
  char v10;

  if (!*(_QWORD *)(a1 + 16))
    return MEMORY[0x1E0DEE9D8];
  v4 = *((_BYTE *)a2 + 16);
  v9 = *a2;
  v10 = v4;
  sub_1BB24F76C((uint64_t)&v9);
  v6 = v5;
  swift_retain();
  v7 = sub_1BA7ABE88(a1, v2, v6);
  swift_bridgeObjectRelease();
  swift_release();
  return v7;
}

uint64_t sub_1BB24F9D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v6 = type metadata accessor for FormatEnumPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for FormatPropertyDefinition(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB250938();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = a2[2];
  v17 = *(int *)(v16 + 48);
  sub_1BA4C2DD8(a1, (uint64_t)v14, type metadata accessor for FormatPropertyDefinition);
  *(_QWORD *)&v14[v17] = v15;
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    swift_retain();
LABEL_6:
    sub_1BA4C2DD8((uint64_t)a2, (uint64_t)a3, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
    v28 = (uint64_t (*)(_QWORD))sub_1BB250938;
    return sub_1BA4A2E80((uint64_t)v14, v28);
  }
  sub_1BA4C2DD8((uint64_t)v14, (uint64_t)v11, type metadata accessor for FormatPropertyDefinition);
  if (v15 >> 60 != 5)
  {
    swift_retain();
    sub_1BA4A2E80((uint64_t)v11, type metadata accessor for FormatEnumPropertyDefinition);
    goto LABEL_6;
  }
  v18 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x10);
  v31 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x18);
  v32 = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFFLL) + 0x20);
  v33 = v18;
  sub_1BA5193C4((uint64_t)v11, (uint64_t)v8, type metadata accessor for FormatEnumPropertyDefinition);
  v20 = *a2;
  v19 = a2[1];
  v21 = swift_allocObject();
  v22 = *((_QWORD *)v8 + 4);
  v23 = *((_QWORD *)v8 + 5);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v8, type metadata accessor for FormatEnumPropertyDefinition);
  *(_QWORD *)(v21 + 16) = v22;
  *(_QWORD *)(v21 + 24) = v23;
  v24 = v32;
  v25 = v31;
  *(_QWORD *)(v21 + 32) = v33;
  *(_QWORD *)(v21 + 40) = v25;
  *(_QWORD *)(v21 + 48) = v24;
  *a3 = v20;
  a3[1] = v19;
  a3[2] = v21 | 0x1000000000000000;
  a3[3] = 1;
  v26 = (char *)a3 + *(int *)(type metadata accessor for FormatOption() + 28);
  v27 = type metadata accessor for FormatVersionRequirement(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v26, 1, 1, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  v28 = type metadata accessor for FormatPropertyDefinition;
  return sub_1BA4A2E80((uint64_t)v14, v28);
}

uint64_t FormatOptionConverter.deinit()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

_QWORD *sub_1BB24FCA0(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char isUniquelyReferenced_nonNull_native;
  char v55;
  unint64_t v56;
  uint64_t v57;
  _BOOL8 v58;
  uint64_t v59;
  char v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  BOOL v66;
  uint64_t v67;
  _QWORD *v68;
  char v69;
  char v70;
  unint64_t v71;
  uint64_t v72;
  _BOOL8 v73;
  uint64_t v74;
  char v75;
  unint64_t v76;
  char v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  char v84;
  char v85;
  unint64_t v86;
  uint64_t v87;
  _BOOL8 v88;
  uint64_t v89;
  char v90;
  unint64_t v91;
  char v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  char v99;
  char v100;
  unint64_t v101;
  uint64_t v102;
  _BOOL8 v103;
  uint64_t v104;
  char v105;
  unint64_t v106;
  char v107;
  _QWORD *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  _QWORD *v112;
  _QWORD *v113;
  _QWORD *result;
  _QWORD v115[2];
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  _QWORD *v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  uint64_t v133;
  unint64_t v134;
  _QWORD *v135;
  unint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  _QWORD *v139;
  uint64_t v140[5];

  sub_1BA4B07F0(0, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v115 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)v115 - v14;
  MEMORY[0x1E0C80A78](v16);
  v124 = (_QWORD *)((char *)v115 - v17);
  v123 = type metadata accessor for FormatCompilerSlotDefinition(0);
  v18 = *(_QWORD *)(v123 - 8);
  MEMORY[0x1E0C80A78](v123);
  v20 = (char *)v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v140[3] = a4;
  v140[4] = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v140);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v116 = a3;
  a3[2] = a1;
  sub_1BA4C010C((uint64_t)v140, (uint64_t)(a3 + 3));
  v22 = a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions;
  v139 = *(_QWORD **)(a1 + OBJC_IVAR____TtC8NewsFeed22FormatPackageInventory_compilerOptions);
  sub_1BA4B07F0(0, &qword_1ED3B9538, type metadata accessor for FormatCompilerProperty, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  v24 = v23;
  v25 = sub_1BA7AD188();
  v26 = v24;
  v27 = sub_1BA4A2870(&qword_1ED3C9DD0, type metadata accessor for FormatCompilerProperty, (uint64_t)&protocol conformance descriptor for FormatCompilerProperty);
  swift_retain();
  v122 = v25;
  v129 = v27;
  v116[8] = sub_1BB872BB0();
  v28 = *(_QWORD *)(v22 + 8);
  v120 = *(_QWORD *)(v28 + 16);
  if (!v120)
  {
    swift_bridgeObjectRetain();
    swift_release();
    v112 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v113 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v32 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    v33 = (_QWORD *)MEMORY[0x1E0DEE9E0];
LABEL_66:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v140);
    swift_bridgeObjectRelease();
    result = v116;
    v116[9] = v33;
    result[10] = v112;
    result[11] = v113;
    result[12] = v32;
    return result;
  }
  v126 = v26;
  v115[1] = a1;
  v121 = v28 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  swift_bridgeObjectRetain();
  v29 = 0;
  v130 = 0;
  v30 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v31 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v32 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v33 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  v119 = v12;
  v125 = v15;
  v118 = v18;
  v131 = v20;
  v117 = v28;
  while (1)
  {
    if (v29 >= *(_QWORD *)(v28 + 16))
      goto LABEL_75;
    v132 = v32;
    v135 = v31;
    v137 = v30;
    v34 = *(_QWORD *)(v18 + 72);
    v128 = v29;
    sub_1BA4C2DD8(v121 + v34 * v29, (uint64_t)v20, type metadata accessor for FormatCompilerSlotDefinition);
    v139 = (_QWORD *)*((_QWORD *)v20 + 6);
    v138 = sub_1BB872BB0();
    v35 = (uint64_t)&v20[*(int *)(v123 + 40)];
    v36 = (char *)v124;
    sub_1BA7AD26C(v35, (uint64_t)v124);
    v37 = type metadata accessor for FormatCompilerSlotDefinitionItemSet();
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 48);
    if (v38(v36, 1, v37) == 1)
    {
      sub_1BA5C699C((uint64_t)v36, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      v136 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
    }
    else
    {
      v39 = *(_QWORD **)v36;
      swift_bridgeObjectRetain();
      sub_1BA4A2E80((uint64_t)v36, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      v139 = v39;
      v15 = v125;
      v136 = sub_1BB872BB0();
      swift_bridgeObjectRelease();
    }
    sub_1BA7AD26C(v35, (uint64_t)v15);
    if (v38(v15, 1, v37) == 1)
    {
      sub_1BA5C699C((uint64_t)v15, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
    }
    else
    {
      v40 = *((_QWORD *)v15 + 1);
      sub_1BA8EF4D4(v40);
      sub_1BA4A2E80((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      if (v40)
      {
        v41 = swift_bridgeObjectRetain();
        sub_1BA5DCC4C(v41);
        v139 = (_QWORD *)v40;
        v134 = sub_1BB872BB0();
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    v134 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
LABEL_13:
    sub_1BA7AD26C(v35, (uint64_t)v12);
    if (v38(v12, 1, v37) == 1)
    {
      sub_1BA5C699C((uint64_t)v12, &qword_1ED3CE608, (uint64_t (*)(uint64_t))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      v42 = (uint64_t)v131;
    }
    else
    {
      v43 = *((_QWORD *)v12 + 1);
      v44 = (_QWORD *)*((_QWORD *)v12 + 2);
      sub_1BA8EF4D4(v43);
      sub_1BA4A2E80((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for FormatCompilerSlotDefinitionItemSet);
      v42 = (uint64_t)v131;
      if (v43)
      {
        swift_bridgeObjectRetain();
        sub_1BA5DCC4C(v43);
        if (v44)
        {
          v139 = v44;
          v133 = sub_1BB872BB0();
          v45 = swift_bridgeObjectRelease();
          goto LABEL_19;
        }
      }
    }
    v45 = sub_1BA7AD1F4(MEMORY[0x1E0DEE9D8]);
    v133 = v45;
LABEL_19:
    v46 = v130;
    if ((*(_QWORD *)(v42 + 64) & 0x8000000000000000) != 0)
      goto LABEL_76;
    MEMORY[0x1E0C80A78](v45);
    v115[-2] = v42;
    v48 = sub_1BA8A135C(sub_1BA7AD740, (uint64_t)&v115[-4], 0, v47);
    v49 = v48[2];
    v127 = v48;
    if (v49)
      break;
LABEL_3:
    v130 = v46;
    v29 = v128 + 1;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v20 = v131;
    sub_1BA4A2E80((uint64_t)v131, type metadata accessor for FormatCompilerSlotDefinition);
    v12 = v119;
    v15 = v125;
    v18 = v118;
    v28 = v117;
    v30 = v137;
    v31 = v135;
    v32 = v132;
    if (v29 == v120)
    {
      v112 = v137;
      v113 = v135;
      swift_release();
      goto LABEL_66;
    }
  }
  v50 = v48 + 5;
  while (1)
  {
    v52 = *(v50 - 1);
    v53 = *v50;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v139 = v33;
    v56 = sub_1BA6E35A8(v52, v53);
    v57 = v33[2];
    v58 = (v55 & 1) == 0;
    v59 = v57 + v58;
    if (__OFADD__(v57, v58))
      break;
    v60 = v55;
    if (v33[3] >= v59)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      {
        v33 = v139;
        if ((v55 & 1) != 0)
          goto LABEL_31;
      }
      else
      {
        sub_1BB4C36D0();
        v33 = v139;
        if ((v60 & 1) != 0)
          goto LABEL_31;
      }
    }
    else
    {
      sub_1BA7AD1E8(v59, isUniquelyReferenced_nonNull_native);
      v61 = sub_1BA6E35A8(v52, v53);
      if ((v60 & 1) != (v62 & 1))
        goto LABEL_77;
      v56 = v61;
      v33 = v139;
      if ((v60 & 1) != 0)
      {
LABEL_31:
        v63 = v33[7];
        swift_bridgeObjectRelease();
        *(_QWORD *)(v63 + 8 * v56) = v138;
        goto LABEL_35;
      }
    }
    v33[(v56 >> 6) + 8] |= 1 << v56;
    v64 = (uint64_t *)(v33[6] + 16 * v56);
    *v64 = v52;
    v64[1] = v53;
    *(_QWORD *)(v33[7] + 8 * v56) = v138;
    v65 = v33[2];
    v66 = __OFADD__(v65, 1);
    v67 = v65 + 1;
    if (v66)
      goto LABEL_71;
    v33[2] = v67;
    swift_bridgeObjectRetain();
LABEL_35:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v68 = v137;
    v69 = swift_isUniquelyReferenced_nonNull_native();
    v139 = v68;
    v71 = sub_1BA6E35A8(v52, v53);
    v72 = v68[2];
    v73 = (v70 & 1) == 0;
    v74 = v72 + v73;
    if (__OFADD__(v72, v73))
      goto LABEL_68;
    v75 = v70;
    if (v68[3] >= v74)
    {
      if ((v69 & 1) == 0)
        sub_1BB4C36D0();
    }
    else
    {
      sub_1BA7AD1E8(v74, v69);
      v76 = sub_1BA6E35A8(v52, v53);
      if ((v75 & 1) != (v77 & 1))
        goto LABEL_77;
      v71 = v76;
    }
    v78 = v139;
    v137 = v139;
    if ((v75 & 1) != 0)
    {
      v79 = v139[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v79 + 8 * v71) = v136;
    }
    else
    {
      v139[(v71 >> 6) + 8] |= 1 << v71;
      v80 = (uint64_t *)(v78[6] + 16 * v71);
      *v80 = v52;
      v80[1] = v53;
      *(_QWORD *)(v78[7] + 8 * v71) = v136;
      v81 = v78[2];
      v66 = __OFADD__(v81, 1);
      v82 = v81 + 1;
      if (v66)
        goto LABEL_72;
      v78[2] = v82;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v83 = v135;
    v84 = swift_isUniquelyReferenced_nonNull_native();
    v139 = v83;
    v86 = sub_1BA6E35A8(v52, v53);
    v87 = v83[2];
    v88 = (v85 & 1) == 0;
    v89 = v87 + v88;
    if (__OFADD__(v87, v88))
      goto LABEL_69;
    v90 = v85;
    if (v83[3] >= v89)
    {
      if ((v84 & 1) == 0)
        sub_1BB4C36D0();
    }
    else
    {
      sub_1BA7AD1E8(v89, v84);
      v91 = sub_1BA6E35A8(v52, v53);
      if ((v90 & 1) != (v92 & 1))
        goto LABEL_77;
      v86 = v91;
    }
    v93 = v139;
    v135 = v139;
    if ((v90 & 1) != 0)
    {
      v94 = v139[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v94 + 8 * v86) = v134;
    }
    else
    {
      v139[(v86 >> 6) + 8] |= 1 << v86;
      v95 = (uint64_t *)(v93[6] + 16 * v86);
      *v95 = v52;
      v95[1] = v53;
      *(_QWORD *)(v93[7] + 8 * v86) = v134;
      v96 = v93[2];
      v66 = __OFADD__(v96, 1);
      v97 = v96 + 1;
      if (v66)
        goto LABEL_73;
      v93[2] = v97;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v98 = v132;
    v99 = swift_isUniquelyReferenced_nonNull_native();
    v139 = v98;
    v101 = sub_1BA6E35A8(v52, v53);
    v102 = v98[2];
    v103 = (v100 & 1) == 0;
    v104 = v102 + v103;
    if (__OFADD__(v102, v103))
      goto LABEL_70;
    v105 = v100;
    if (v98[3] >= v104)
    {
      if ((v99 & 1) == 0)
        sub_1BB4C36D0();
    }
    else
    {
      sub_1BA7AD1E8(v104, v99);
      v106 = sub_1BA6E35A8(v52, v53);
      if ((v105 & 1) != (v107 & 1))
        goto LABEL_77;
      v101 = v106;
    }
    v108 = v139;
    v132 = v139;
    if ((v105 & 1) != 0)
    {
      v51 = v139[7];
      swift_bridgeObjectRelease();
      *(_QWORD *)(v51 + 8 * v101) = v133;
    }
    else
    {
      v139[(v101 >> 6) + 8] |= 1 << v101;
      v109 = (uint64_t *)(v108[6] + 16 * v101);
      *v109 = v52;
      v109[1] = v53;
      *(_QWORD *)(v108[7] + 8 * v101) = v133;
      v110 = v108[2];
      v66 = __OFADD__(v110, 1);
      v111 = v110 + 1;
      if (v66)
        goto LABEL_74;
      v108[2] = v111;
      swift_bridgeObjectRetain();
    }
    v50 += 2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v49)
      goto LABEL_3;
  }
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  result = (_QWORD *)sub_1BB874560();
  __break(1u);
  return result;
}

uint64_t method lookup function for FormatOptionConverter()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1BB2507EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_1BB250820()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1EF2BF058)
  {
    type metadata accessor for FormatCompilerProperty(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EF2BF058);
  }
}

_QWORD *sub_1BB250888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD *v12;
  uint64_t v14;

  v9 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, a4);
  return sub_1BB24FCA0(a1, (uint64_t)v11, v12, a4, a5);
}

void sub_1BB250938()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_1ED3C18C8[0])
  {
    type metadata accessor for FormatPropertyDefinition(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, qword_1ED3C18C8);
  }
}

uint64_t sub_1BB2509A0(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  char *v16;
  id v17;
  id v18;
  void (*v19)(char *, uint64_t, uint64_t, uint64_t);
  id v20;
  uint64_t ObjCClassFromMetadata;
  void *v22;
  id v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;

  v2 = sub_1BB870150();
  v28 = *(_QWORD *)(v2 - 8);
  v29 = v2;
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1BB86C67C();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3D2E70, v9, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v27 - v15;
  v17 = objc_msgSend(a1, sel_identifier, v14);
  if (!v17)
  {
    sub_1BB8729A0();
    v17 = (id)sub_1BB872970();
    swift_bridgeObjectRelease();
  }
  v18 = objc_msgSend(a1, sel_routeURL);
  if (v18)
  {
    sub_1BB86C5EC();

    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v16, v8, v5);
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v19(v16, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v16, 1, v5) == 1)
    {
      v18 = 0;
    }
    else
    {
      v18 = (id)sub_1BB86C58C();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    }
  }
  else
  {
    v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
    v19(v16, 1, 1, v5);
  }
  v20 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForArticleID_routeURL_, v17, v18);

  if (!v20)
  {
    v19(v12, 1, 1, v5);
    goto LABEL_16;
  }
  sub_1BB86C5EC();

  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v12, v8, v5);
  v19(v12, 0, 1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
LABEL_16:
    sub_1BA7F0A80((uint64_t)v12);
    return 0;
  }
  sub_1BA7F0A80((uint64_t)v12);
  if (qword_1ED3BC060 != -1)
    swift_once();
  type metadata accessor for Localized();
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v22 = (void *)objc_opt_self();
  swift_retain();
  swift_unknownObjectRetain();
  v23 = objc_msgSend(v22, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_1BB86C340();

  if (qword_1EF2A72A8 != -1)
    swift_once();
  v24 = (void *)qword_1EF2C4778;
  (*(void (**)(char *, _QWORD, uint64_t))(v28 + 104))(v4, *MEMORY[0x1E0DB8530], v29);
  v30 = a1;
  sub_1BB86FB38();
  swift_allocObject();
  v25 = v24;
  return sub_1BB86FB20();
}

uint64_t sub_1BB250DD0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  const void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v6;
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 56) = a2[7];
    v9 = a2 + 8;
    v10 = a2[9];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 <= 2)
    {
      *(_OWORD *)(a1 + 64) = *v9;
    }
    else
    {
      *(_BYTE *)(a1 + 64) = *(_BYTE *)v9;
      *(_QWORD *)(a1 + 72) = v10;
      swift_bridgeObjectRetain();
    }
    v12 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v12;
    v38 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v38;
    v13 = a2[15];
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = v13;
    *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
    *(_QWORD *)(a1 + 136) = a2[17];
    sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
    v15 = *(int *)(v14 + 36);
    v16 = (char *)(a1 + v15);
    v17 = (uint64_t)a2 + v15;
    v18 = *(uint64_t *)((char *)a2 + v15 + 8);
    *(_QWORD *)v16 = *(uint64_t *)((char *)a2 + v15);
    *((_QWORD *)v16 + 1) = v18;
    v19 = (int *)type metadata accessor for FormatMetadata();
    v20 = v19[5];
    v36 = v17 + v20;
    v37 = &v16[v20];
    v21 = sub_1BB86EB84();
    v22 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
    v23 = *(_QWORD *)(v21 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v37, v36, v21);
    v22(&v16[v19[6]], v17 + v19[6], v21);
    v24 = v19[7];
    v25 = &v16[v24];
    v26 = (const void *)(v17 + v24);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v17 + v24, 1, v21))
    {
      sub_1BA6BF9E8(0);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      v22(v25, (uint64_t)v26, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v25, 0, 1, v21);
    }
    *(_QWORD *)&v16[v19[8]] = *(_QWORD *)(v17 + v19[8]);
    *(_QWORD *)&v16[v19[9]] = *(_QWORD *)(v17 + v19[9]);
    *(_QWORD *)&v16[v19[10]] = *(_QWORD *)(v17 + v19[10]);
    *(_QWORD *)&v16[v19[11]] = *(_QWORD *)(v17 + v19[11]);
    v28 = a3[5];
    v29 = a3[6];
    v30 = (_QWORD *)(a1 + v28);
    v31 = (uint64_t *)((char *)a2 + v28);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = v31[3];
    v30[2] = v31[2];
    v30[3] = v33;
    v39 = v31[5];
    v30[4] = v31[4];
    v30[5] = v39;
    *(_QWORD *)(a1 + v29) = *(uint64_t *)((char *)a2 + v29);
    *(_QWORD *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1BB251108(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 72) >= 3uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v3 = a1 + *(int *)(v2 + 36);
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for FormatMetadata();
  v5 = v3 + v4[5];
  v6 = sub_1BB86EB84();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[6], v6);
  v9 = v3 + v4[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6))
    v8(v9, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB2512CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  const void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v8 = (_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 <= 2)
  {
    *(_OWORD *)(a1 + 64) = *v8;
  }
  else
  {
    *(_BYTE *)(a1 + 64) = *(_BYTE *)v8;
    *(_QWORD *)(a1 + 72) = v9;
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  v35 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v35;
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v13 = *(int *)(v12 + 36);
  v14 = (char *)(a1 + v13);
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a2 + v13 + 8);
  *(_QWORD *)v14 = *(_QWORD *)(a2 + v13);
  *((_QWORD *)v14 + 1) = v16;
  v17 = (int *)type metadata accessor for FormatMetadata();
  v18 = v17[5];
  v33 = v15 + v18;
  v34 = &v14[v18];
  v19 = sub_1BB86EB84();
  v20 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
  v21 = *(_QWORD *)(v19 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v34, v33, v19);
  v20(&v14[v17[6]], v15 + v17[6], v19);
  v22 = v17[7];
  v23 = &v14[v22];
  v24 = (const void *)(v15 + v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48))(v15 + v22, 1, v19))
  {
    sub_1BA6BF9E8(0);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    v20(v23, (uint64_t)v24, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v23, 0, 1, v19);
  }
  *(_QWORD *)&v14[v17[8]] = *(_QWORD *)(v15 + v17[8]);
  *(_QWORD *)&v14[v17[9]] = *(_QWORD *)(v15 + v17[9]);
  *(_QWORD *)&v14[v17[10]] = *(_QWORD *)(v15 + v17[10]);
  *(_QWORD *)&v14[v17[11]] = *(_QWORD *)(v15 + v17[11]);
  v26 = a3[5];
  v27 = a3[6];
  v28 = (_QWORD *)(a1 + v26);
  v29 = (_QWORD *)(a2 + v26);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = v29[3];
  v28[2] = v29[2];
  v28[3] = v31;
  v36 = v29[5];
  v28[4] = v29[4];
  v28[5] = v36;
  *(_QWORD *)(a1 + v27) = *(_QWORD *)(a2 + v27);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1BB2515D8(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  const void *v19;
  uint64_t (*v20)(void);
  int v21;
  uint64_t v22;
  size_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v30;
  char *v31;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 72);
  v6 = *(_QWORD *)(a2 + 72);
  if (v5 == 2)
  {
    if (v6 > 2)
      goto LABEL_8;
    goto LABEL_11;
  }
  if (v6 == 2)
  {
    sub_1BA92760C(a1 + 64);
LABEL_11:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_12;
  }
  if (v5 < 2)
  {
    if (v6 >= 2)
    {
LABEL_8:
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v6 < 2)
  {
    sub_1BB0EA510(a1 + 64);
    goto LABEL_11;
  }
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v8 = *(int *)(v7 + 36);
  v9 = (char *)(a1 + v8);
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)(a2 + v8);
  *((_QWORD *)v9 + 1) = *(_QWORD *)(a2 + v8 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = (int *)type metadata accessor for FormatMetadata();
  v12 = v11[5];
  v13 = &v9[v12];
  v14 = v10 + v12;
  v15 = sub_1BB86EB84();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 24);
  v17(v13, v14, v15);
  v17(&v9[v11[6]], v10 + v11[6], v15);
  v18 = v11[7];
  v19 = (const void *)(v10 + v18);
  v20 = *(uint64_t (**)(void))(v16 + 48);
  v30 = v11;
  v31 = &v9[v18];
  LODWORD(v11) = v20();
  v21 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v20)(v19, 1, v15);
  if ((_DWORD)v11)
  {
    if (!v21)
    {
      (*(void (**)(char *, const void *, uint64_t))(v16 + 16))(v31, v19, v15);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v31, 0, 1, v15);
      goto LABEL_20;
    }
    sub_1BA6BF9E8(0);
    v23 = *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64);
    v24 = v31;
  }
  else
  {
    if (!v21)
    {
      v17(v31, (uint64_t)v19, v15);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v31, v15);
    sub_1BA6BF9E8(0);
    v23 = *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64);
    v24 = v31;
  }
  memcpy(v24, v19, v23);
LABEL_20:
  *(_QWORD *)&v9[v30[8]] = *(_QWORD *)(v10 + v30[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[v30[9]] = *(_QWORD *)(v10 + v30[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[v30[10]] = *(_QWORD *)(v10 + v30[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v9[v30[11]] = *(_QWORD *)(v10 + v30[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[5];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *(_QWORD *)(a1 + v26) = *(_QWORD *)(a2 + v26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[2] = v28[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[3] = v28[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[4] = v28[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v27[5] = v28[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1BB251AB0(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;

  v5 = a2[7];
  a1[6] = a2[6];
  a1[7] = v5;
  a1[8] = a2[8];
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[1];
  *a1 = *a2;
  a1[1] = v8;
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v10 = *(int *)(v9 + 36);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  v13 = (int *)type metadata accessor for FormatMetadata();
  v14 = v13[5];
  v15 = &v11[v14];
  v16 = &v12[v14];
  v17 = sub_1BB86EB84();
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  v19(v15, v16, v17);
  v19(&v11[v13[6]], &v12[v13[6]], v17);
  v20 = v13[7];
  v21 = &v11[v20];
  v22 = &v12[v20];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(&v12[v20], 1, v17))
  {
    sub_1BA6BF9E8(0);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v19(v21, v22, v17);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v21, 0, 1, v17);
  }
  *(_QWORD *)&v11[v13[8]] = *(_QWORD *)&v12[v13[8]];
  *(_QWORD *)&v11[v13[9]] = *(_QWORD *)&v12[v13[9]];
  *(_QWORD *)&v11[v13[10]] = *(_QWORD *)&v12[v13[10]];
  *(_QWORD *)&v11[v13[11]] = *(_QWORD *)&v12[v13[11]];
  v24 = a3[5];
  v25 = a3[6];
  v26 = (_OWORD *)((char *)a1 + v24);
  v27 = (_OWORD *)((char *)a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v26[2] = v27[2];
  *(_QWORD *)((char *)a1 + v25) = *(_QWORD *)((char *)a2 + v25);
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_1BB251C84(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  const void *v24;
  uint64_t (*v25)(void);
  int v26;
  uint64_t v27;
  size_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v35;
  char *v36;

  v5 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v8 = (_OWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a2 + 72);
  if (v9 == 2)
    goto LABEL_7;
  if (v10 == 2)
  {
    sub_1BA92760C(a1 + 64);
LABEL_7:
    *(_OWORD *)(a1 + 64) = *v8;
    goto LABEL_8;
  }
  if (v9 < 2)
    goto LABEL_7;
  if (v10 < 2)
  {
    sub_1BB0EA510(a1 + 64);
    goto LABEL_7;
  }
  *(_BYTE *)(a1 + 64) = *(_BYTE *)v8;
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
LABEL_8:
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v12 = *(int *)(v11 + 36);
  v13 = (char *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *(_QWORD *)v13 = *(_QWORD *)(a2 + v12);
  *((_QWORD *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  v16 = (int *)type metadata accessor for FormatMetadata();
  v17 = v16[5];
  v18 = &v13[v17];
  v19 = v14 + v17;
  v20 = sub_1BB86EB84();
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 40);
  v22(v18, v19, v20);
  v22(&v13[v16[6]], v14 + v16[6], v20);
  v23 = v16[7];
  v24 = (const void *)(v14 + v23);
  v35 = v21;
  v36 = &v13[v23];
  v25 = *(uint64_t (**)(void))(v21 + 48);
  LODWORD(v21) = v25();
  v26 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v25)(v24, 1, v20);
  if ((_DWORD)v21)
  {
    if (!v26)
    {
      (*(void (**)(char *, const void *, uint64_t))(v35 + 32))(v36, v24, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v36, 0, 1, v20);
      goto LABEL_16;
    }
    sub_1BA6BF9E8(0);
    v28 = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64);
    v29 = v36;
  }
  else
  {
    if (!v26)
    {
      v22(v36, (uint64_t)v24, v20);
      goto LABEL_16;
    }
    (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v20);
    sub_1BA6BF9E8(0);
    v28 = *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64);
    v29 = v36;
  }
  memcpy(v29, v24, v28);
LABEL_16:
  *(_QWORD *)&v13[v16[8]] = *(_QWORD *)(v14 + v16[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[v16[9]] = *(_QWORD *)(v14 + v16[9]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[v16[10]] = *(_QWORD *)(v14 + v16[10]);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v13[v16[11]] = *(_QWORD *)(v14 + v16[11]);
  swift_bridgeObjectRelease();
  v31 = a3[5];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_bridgeObjectRelease();
  v32[1] = v33[1];
  swift_bridgeObjectRelease();
  v32[2] = v33[2];
  swift_bridgeObjectRelease();
  v32[3] = v33[3];
  swift_bridgeObjectRelease();
  v32[4] = v33[4];
  swift_bridgeObjectRelease();
  v32[5] = v33[5];
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1BB252048()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB252054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1BB2520F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1BB2520FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;

  sub_1BA4CDF6C(0, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, v8);
  else
    *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
}

uint64_t type metadata accessor for FormatDerivedDataBinderResult()
{
  uint64_t result;

  result = qword_1EF2BF0B8;
  if (!qword_1EF2BF0B8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB2521D0()
{
  unint64_t v0;

  sub_1BA4CDF6C(319, (unint64_t *)&qword_1ED3B37B0, (uint64_t (*)(void))sub_1BA896A68, (uint64_t)&type metadata for FormatGroup, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FormatObject);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1BB252270(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[2];
  char v14;
  char v15;

  v13[0] = a4;
  v13[1] = a5;
  sub_1BB25278C(0, &qword_1EF2BF108, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v8 = v7;
  v9 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v13 - v10;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB252748();
  sub_1BB8746C8();
  v15 = 0;
  sub_1BB87417C();
  if (!v5)
  {
    v14 = 1;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1BB2523A0()
{
  sub_1BB252748();
  return sub_1BB874710();
}

uint64_t sub_1BB2523C8()
{
  sub_1BB252748();
  return sub_1BB87471C();
}

uint64_t sub_1BB2523F0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = sub_1BB252594(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1BB25241C(_QWORD *a1)
{
  uint64_t *v1;

  return sub_1BB252270(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1BB252438@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t inited;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;

  sub_1BA4B07F0(0, (unint64_t *)&unk_1EF2C2450, (uint64_t (*)(uint64_t))sub_1BAA85C90, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BAFD3CA0();
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1BB87A390;
  *(_QWORD *)(v11 + 32) = 0x696669746E656449;
  *(_QWORD *)(v11 + 40) = 0xEA00000000007265;
  v12 = MEMORY[0x1E0DEA968];
  v13 = MEMORY[0x1E0DEA9D8];
  *(_QWORD *)(v11 + 72) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v11 + 80) = v13;
  *(_QWORD *)(v11 + 48) = a1;
  *(_QWORD *)(v11 + 56) = a2;
  *(_BYTE *)(v11 + 88) = 0;
  *(_QWORD *)(v11 + 96) = 1701667150;
  *(_QWORD *)(v11 + 104) = 0xE400000000000000;
  *(_QWORD *)(v11 + 136) = v12;
  *(_QWORD *)(v11 + 144) = v13;
  *(_QWORD *)(v11 + 112) = a3;
  *(_QWORD *)(v11 + 120) = a4;
  *(_BYTE *)(v11 + 152) = 0;
  *(_QWORD *)(inited + 56) = &type metadata for DebugInspectionDataSection;
  *(_QWORD *)(inited + 64) = &off_1E728C9C8;
  *(_QWORD *)(inited + 32) = 0x656C7A7A7550;
  *(_QWORD *)(inited + 40) = 0xE600000000000000;
  *(_QWORD *)(inited + 48) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BAA85898(inited);
  a5[3] = (uint64_t)&type metadata for DebugInspectionDataSource;
  a5[4] = (uint64_t)&off_1E728CA90;
  *a5 = result;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzle()
{
  return &type metadata for DebugInspectionPuzzle;
}

uint64_t sub_1BB252594(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  sub_1BB25278C(0, &qword_1EF2BF0F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v10 - v6;
  v8 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB252748();
  sub_1BB87468C();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    v12 = 0;
    v8 = sub_1BB874098();
    v11 = 1;
    swift_bridgeObjectRetain();
    sub_1BB874098();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1BB252748()
{
  unint64_t result;

  result = qword_1EF2BF100;
  if (!qword_1EF2BF100)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC16C, &type metadata for DebugInspectionPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF100);
  }
  return result;
}

void sub_1BB25278C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB252748();
    v7 = a3(a1, &type metadata for DebugInspectionPuzzle.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

uint64_t storeEnumTagSinglePayload for DebugInspectionPuzzle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB252834 + 4 * byte_1BB8FC035[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB252868 + 4 * byte_1BB8FC030[v4]))();
}

uint64_t sub_1BB252868(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB252870(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB252878);
  return result;
}

uint64_t sub_1BB252884(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB25288CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB252890(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB252898(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugInspectionPuzzle.CodingKeys()
{
  return &type metadata for DebugInspectionPuzzle.CodingKeys;
}

unint64_t sub_1BB2528B8()
{
  unint64_t result;

  result = qword_1EF2BF110;
  if (!qword_1EF2BF110)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC144, &type metadata for DebugInspectionPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF110);
  }
  return result;
}

unint64_t sub_1BB252900()
{
  unint64_t result;

  result = qword_1EF2BF118;
  if (!qword_1EF2BF118)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC0B4, &type metadata for DebugInspectionPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF118);
  }
  return result;
}

unint64_t sub_1BB252948()
{
  unint64_t result;

  result = qword_1EF2BF120;
  if (!qword_1EF2BF120)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC0DC, &type metadata for DebugInspectionPuzzle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF120);
  }
  return result;
}

uint64_t static FormatTagIconStyle.default.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (qword_1ED3C1DD0 != -1)
    swift_once();
  swift_beginAccess();
  v2 = qword_1ED3CF380;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  sub_1BA6DC310(0, (unint64_t *)&qword_1ED3B9E70, sub_1BB253E64);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v4 + 32) = v3;
  *(_BYTE *)(v4 + 40) = 0;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = 0x4020000000000000;
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v6 + 32) = v5;
  *(_BYTE *)(v6 + 40) = 0;
  *(_BYTE *)a1 = 1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v6;
  return swift_retain();
}

_BYTE *FormatTagIconStyle.init(prefersSource:font:padding:cornerRadius:)@<X0>(_BYTE *result@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = *a3;
  v7 = *a4;
  *(_BYTE *)a5 = *result;
  *(_QWORD *)(a5 + 8) = v5;
  *(_QWORD *)(a5 + 16) = v6;
  *(_QWORD *)(a5 + 24) = v7;
  return result;
}

void sub_1BB252AE4()
{
  __asm { BR              X10 }
}

void sub_1BB252B44(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id a12, __int128 a13, __int128 a14, __int128 a15, __int128 a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t *@<X8>);
  void (*v52)(uint64_t *@<X8>);
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t *__return_ptr, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t *__return_ptr, uint64_t);
  uint64_t v59;
  void *v60;
  double v61;
  double v62;
  id v63;
  uint64_t v64;
  id v65;
  id v66;
  uint64_t v67;
  double v68;
  double v69;
  uint64_t v70;
  uint64_t ObjectType;
  void *v72;
  void *v73;
  uint64_t v74;
  id v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79[20];

  v76 = v39;
  v45 = swift_allocObject();
  *(_QWORD *)(v45 + 16) = v44;
  *(_QWORD *)(v45 + 24) = v43;
  v46 = v38;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = v44;
  *(_QWORD *)(v47 + 24) = v43;
  sub_1BA6DC310(0, (unint64_t *)&unk_1ED3A09E0, (void (*)(uint64_t))sub_1BB2549CC);
  v48 = swift_allocObject();
  v49 = v42;
  v50 = v48;
  v51 = sub_1BB2549C4;
  *(_OWORD *)(v48 + 16) = xmmword_1BB87A390;
  if ((v46 & 1) != 0)
    v52 = sub_1BB2549C4;
  else
    v52 = sub_1BB25498C;
  if ((v46 & 1) != 0)
    v53 = v47;
  else
    v53 = v45;
  if ((v46 & 1) != 0)
    v51 = sub_1BB25498C;
  *(_QWORD *)(v48 + 32) = v52;
  *(_QWORD *)(v48 + 40) = v53;
  if ((v46 & 1) != 0)
    v54 = v45;
  else
    v54 = v47;
  *(_QWORD *)(v48 + 48) = v51;
  *(_QWORD *)(v48 + 56) = v54;
  swift_unknownObjectRetain_n();
  swift_retain_n();
  v77 = v46;
  v74 = v49;
  sub_1BA967EC0(v46, v41);
  swift_retain();
  swift_retain();
  v55 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v50 + 32);
  v56 = swift_retain();
  v55(v79, v56);
  swift_release();
  v57 = v79[0];
  if ((~v79[0] & 0xF000000000000007) != 0
    || (v58 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v50 + 48),
        v59 = swift_retain(),
        v58(v79, v59),
        swift_release(),
        v57 = v79[0],
        (~v79[0] & 0xF000000000000007) != 0))
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1BA967D84(v77, v41);
    *v39 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
    v79[0] = v41;
    swift_retain();
    sub_1BA742278();
    if (v78)
    {
      swift_release();
      swift_release();
      swift_release();
      sub_1BA967D84(v77, v41);
    }
    else
    {
      v72 = v60;
      swift_release();
      swift_bridgeObjectRetain();
      sub_1BB86DD80();
      v61 = sub_1BA72BED4(v79[0], v40);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      sub_1BB86DD80();
      v62 = sub_1BA72BED4(v79[0], v74);
      swift_bridgeObjectRelease();
      swift_release();
      ObjectType = swift_getObjectType();
      v63 = FCTagProviding.iconColor.getter();
      v64 = objc_opt_self();
      v75 = v72;
      v73 = (void *)v64;
      v65 = objc_msgSend((id)v64, sel_whiteColor);
      LOBYTE(v64) = objc_msgSend(v63, sel__isSimilarToColor_withinPercentage_, v65, 0.12);

      if ((v64 & 1) != 0)
      {
        v66 = objc_msgSend(v73, sel_blackColor);

        v63 = v66;
      }
      v67 = swift_allocObject();
      v68 = *(double *)(v43 + 16);
      v69 = *(double *)(v43 + 24);
      *(double *)v79 = v62;
      v79[1] = (uint64_t)v63;
      v79[2] = (uint64_t)v75;
      *(double *)&v79[3] = v61;
      v70 = FCTagProviding.createTagImage(imageSize:style:)(v79, ObjectType, v68, v69);
      swift_release();
      swift_release();
      sub_1BA967D84(v77, v41);

      *(_QWORD *)(v67 + 16) = v70;
      *v76 = v67;
    }
  }
}

double sub_1BB253A78@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  double result;
  char v11;
  char v12;
  char v13;
  char v14;

  if (a2 == 2)
  {
    v11 = 0;
    swift_getObjectType();
    v6 = &v11;
  }
  else
  {
    v7 = objc_msgSend(a1, sel_userInterfaceStyle);
    if ((unint64_t)v7 >= 2)
    {
      if (v7 == (id)2)
      {
        v12 = 0;
        swift_getObjectType();
        v6 = &v12;
      }
      else
      {
        v14 = 1;
        swift_getObjectType();
        v6 = &v14;
      }
    }
    else
    {
      v13 = 1;
      swift_getObjectType();
      v6 = &v13;
    }
  }
  sub_1BA7834E0(a3, (uint64_t)v6);
  if (v8)
  {
    v9 = v8;
    *(_QWORD *)(a4 + 24) = sub_1BA749984();
    *(_QWORD *)(a4 + 32) = sub_1BA7499C0();
    *(_QWORD *)a4 = v9;
  }
  else
  {
    *(_QWORD *)(a4 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

double sub_1BB253B5C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  char *v5;
  uint64_t v6;
  uint64_t v7;
  double result;
  char v9;
  char v10;

  if (a1 == 2)
  {
    v9 = 0;
    swift_getObjectType();
    v5 = &v9;
  }
  else
  {
    v10 = 2;
    swift_getObjectType();
    v5 = &v10;
  }
  sub_1BA7834E0(a2, (uint64_t)v5);
  if (v6)
  {
    v7 = v6;
    *(_QWORD *)(a3 + 24) = sub_1BA749984();
    *(_QWORD *)(a3 + 32) = sub_1BA7499C0();
    *(_QWORD *)a3 = v7;
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

void sub_1BB253BF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  char v24;

  v24 = 3;
  swift_getObjectType();
  sub_1BA7834E0(a1, (uint64_t)&v24);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject();
    v10 = *(_QWORD *)(a2 + 48);
    v9 = *(_QWORD *)(a2 + 56);
    v22 = *(_OWORD *)(a2 + 80);
    v23 = *(_OWORD *)(a2 + 64);
    v21 = *(_OWORD *)(a2 + 96);
    v11 = *(_QWORD *)(a2 + 112);
    v12 = *(_QWORD *)(a2 + 120);
    v13 = *(_BYTE *)(a2 + 128);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v7;
    __asm { FMOV            V1.2D, #1.0 }
    *(_OWORD *)(v8 + 16) = xmmword_1BB8FC4D0;
    *(_OWORD *)(v8 + 32) = _Q1;
    *(_BYTE *)(v8 + 48) = 0;
    *(_QWORD *)(v8 + 56) = v10;
    *(_QWORD *)(v8 + 64) = v9;
    *(_OWORD *)(v8 + 72) = v23;
    *(_OWORD *)(v8 + 88) = v22;
    *(_OWORD *)(v8 + 104) = v21;
    *(_QWORD *)(v8 + 120) = v11;
    *(_QWORD *)(v8 + 128) = v12;
    *(_BYTE *)(v8 + 136) = v13;
    v20 = v8 | 0x2000000000000000;
    *(_QWORD *)(v8 + 144) = sub_1BB254AB8;
    *(_QWORD *)(v8 + 152) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    v20 = 0xF000000000000007;
  }
  *a3 = v20;
}

void sub_1BB253D0C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  char v19;

  v19 = 4;
  swift_getObjectType();
  sub_1BA7834E0(a1, (uint64_t)&v19);
  if (v6)
  {
    v7 = v6;
    v8 = swift_allocObject();
    v10 = *(_QWORD *)(a2 + 48);
    v9 = *(_QWORD *)(a2 + 56);
    v17 = *(_OWORD *)(a2 + 80);
    v18 = *(_OWORD *)(a2 + 64);
    v16 = *(_OWORD *)(a2 + 96);
    v11 = *(_QWORD *)(a2 + 112);
    v12 = *(_QWORD *)(a2 + 120);
    v13 = *(_BYTE *)(a2 + 128);
    v14 = swift_allocObject();
    *(_QWORD *)(v14 + 16) = v7;
    *(_OWORD *)(v8 + 16) = 0u;
    *(_OWORD *)(v8 + 32) = 0u;
    *(_BYTE *)(v8 + 48) = 1;
    *(_QWORD *)(v8 + 56) = v10;
    *(_QWORD *)(v8 + 64) = v9;
    *(_OWORD *)(v8 + 72) = v18;
    *(_OWORD *)(v8 + 88) = v17;
    *(_OWORD *)(v8 + 104) = v16;
    *(_QWORD *)(v8 + 120) = v11;
    *(_QWORD *)(v8 + 128) = v12;
    *(_BYTE *)(v8 + 136) = v13;
    v15 = v8 | 0x2000000000000000;
    *(_QWORD *)(v8 + 144) = sub_1BB254AB8;
    *(_QWORD *)(v8 + 152) = v14;
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = 0xF000000000000007;
  }
  *a3 = v15;
}

void sub_1BB253E28(_QWORD *a1)
{
  FormatTagBinding.Image.encode(to:)(a1);
}

void sub_1BB253E40()
{
  sub_1BA7F1480();
}

uint64_t sub_1BB253E54()
{
  return swift_deallocObject();
}

void sub_1BB253E64(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3B5BC0[0])
  {
    v2 = sub_1BA83708C();
    v4 = type metadata accessor for FormatEquationToken(a1, (uint64_t)&type metadata for FormatFloat, v2, v3);
    if (!v5)
      atomic_store(v4, qword_1ED3B5BC0);
  }
}

uint64_t sub_1BB253EC0(_QWORD *a1)
{
  return FormatTagIconStyle.encode(to:)(a1);
}

BOOL static FormatTagIconPreferredSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t FormatTagIconPreferredSource.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t FormatTagIconPreferredSource.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

uint64_t sub_1BB253F5C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return FormatTagIconPreferredSource.init(from:)(a1, a2);
}

uint64_t sub_1BB253F70(_QWORD *a1)
{
  return FormatTagIconPreferredSource.encode(to:)(a1);
}

uint64_t _s8NewsFeed18FormatTagIconStyleV2eeoiySbAC_ACtFZ_0(_QWORD *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  uint64_t v10;

  if (*(unsigned __int8 *)a1 != *a2)
    return 0;
  v3 = a1[2];
  v2 = a1[3];
  v5 = *((_QWORD *)a2 + 2);
  v4 = *((_QWORD *)a2 + 3);
  v10 = a1[1];
  static FormatFont.== infix(_:_:)((uint64_t)&v10);
  if ((v6 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7 = sub_1BA881EAC(v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
    return 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = sub_1BA881EAC(v2, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void _s8NewsFeed16FormatTagBindingV5ImageO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB2540AC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  unsigned __int8 v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[16];

  if ((v6 >> 59) & 2 | (v6 >> 2) & 1)
  {
    sub_1BA967EC0(v7, v6);
    sub_1BA967EC0(v3, v2);
    sub_1BA967D84(v3, v2);
    sub_1BA967D84(v7, v6);
    v8 = 0;
  }
  else
  {
    LOBYTE(v14[0]) = v3 & 1;
    v14[1] = v2;
    v14[2] = v1;
    v14[3] = v0;
    v10 = v7 & 1;
    v11 = v6;
    v12 = v5;
    v13 = v4;
    sub_1BA967EC0(v7, v6);
    sub_1BA967EC0(v3, v2);
    sub_1BA967EC0(v7, v6);
    sub_1BA967EC0(v3, v2);
    v8 = _s8NewsFeed18FormatTagIconStyleV2eeoiySbAC_ACtFZ_0(v14, &v10);
    sub_1BA967D84(v3, v2);
    sub_1BA967D84(v7, v6);
    sub_1BA967D84(v7, v6);
    sub_1BA967D84(v3, v2);
  }
  return v8 & 1;
}

unint64_t sub_1BB254338(uint64_t a1)
{
  unint64_t result;

  result = sub_1BAEBEBF8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB25435C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA5C16C4, (uint64_t (*)(void))sub_1BAEEB0EC, (uint64_t (*)(void))sub_1BB254378);
}

unint64_t sub_1BB254378()
{
  unint64_t result;

  result = qword_1EF2BF130;
  if (!qword_1EF2BF130)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagBinding.Image, &type metadata for FormatTagBinding.Image);
    atomic_store(result, (unint64_t *)&qword_1EF2BF130);
  }
  return result;
}

unint64_t sub_1BB2543BC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2543E0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2543E0()
{
  unint64_t result;

  result = qword_1EF2BF138;
  if (!qword_1EF2BF138)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconStyle, &type metadata for FormatTagIconStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2BF138);
  }
  return result;
}

uint64_t sub_1BB254424(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BA4E17A0, (uint64_t (*)(void))sub_1BAEE9FB8, (uint64_t (*)(void))sub_1BB254440);
}

unint64_t sub_1BB254440()
{
  unint64_t result;

  result = qword_1EF2BF140;
  if (!qword_1EF2BF140)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconStyle, &type metadata for FormatTagIconStyle);
    atomic_store(result, (unint64_t *)&qword_1EF2BF140);
  }
  return result;
}

unint64_t sub_1BB254488()
{
  unint64_t result;

  result = qword_1EF2BF148;
  if (!qword_1EF2BF148)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconPreferredSource, &type metadata for FormatTagIconPreferredSource);
    atomic_store(result, (unint64_t *)&qword_1EF2BF148);
  }
  return result;
}

unint64_t sub_1BB2544CC(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2544F0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2544F0()
{
  unint64_t result;

  result = qword_1EF2BF150;
  if (!qword_1EF2BF150)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatTagIconPreferredSource, &type metadata for FormatTagIconPreferredSource);
    atomic_store(result, (unint64_t *)&qword_1EF2BF150);
  }
  return result;
}

uint64_t sub_1BB254534(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA828C60(a1, a2, a3, (uint64_t (*)(void))sub_1BAEC3D78, (uint64_t (*)(void))sub_1BAEE9E64, (uint64_t (*)(void))sub_1BB254488);
}

uint64_t _s14descr1E72F5289V5ImageOwxx(uint64_t a1)
{
  return sub_1BA967D84(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *_s14descr1E72F5289V5ImageOwcp(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1BA967EC0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  return a1;
}

uint64_t *_s14descr1E72F5289V5ImageOwca(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  sub_1BA967EC0(*a2, v4);
  v7 = *a1;
  v8 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  sub_1BA967D84(v7, v8);
  return a1;
}

uint64_t _s14descr1E72F5289V5ImageOwta(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;
  __int128 v5;

  v3 = *(_QWORD *)a1;
  v4 = *(_QWORD *)(a1 + 8);
  v5 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v5;
  sub_1BA967D84(v3, v4);
  return a1;
}

uint64_t sub_1BB254650(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unsigned int v3;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = v1 >> 2;
  v3 = (v1 >> 2) & 1 | (v1 >> 59) & 2;
  if (v3 == 3)
    return (v2 & 0xFFFFFFFE | *(_DWORD *)a1 & 1) + 3;
  else
    return v3;
}

uint64_t sub_1BB254680(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xEFFFFFFFFFFFFFFBLL;
  return result;
}

_QWORD *sub_1BB254698(_QWORD *result, uint64_t a2)
{
  unint64_t v2;

  if (a2 < 3)
  {
    v2 = (a2 << 59) & 0x1000000000000000 | (4 * (a2 & 1)) | result[1] & 0xEFFFFFFFFFFFFFF8;
    *result &= 1uLL;
    result[1] = v2;
  }
  else
  {
    *result = ((_BYTE)a2 - 3) & 1;
    result[1] = (4 * (a2 - 3)) | 0x1000000000000004;
    result[2] = 0;
    result[3] = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatTagBinding.Image()
{
  return &type metadata for FormatTagBinding.Image;
}

uint64_t destroy for FormatTagIconStyle()
{
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatTagIconStyle(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatTagIconStyle(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for FormatTagIconStyle(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for FormatTagIconStyle()
{
  return &type metadata for FormatTagIconStyle;
}

uint64_t storeEnumTagSinglePayload for FormatTagIconPreferredSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2548B8 + 4 * byte_1BB8FC1CD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2548EC + 4 * byte_1BB8FC1C8[v4]))();
}

uint64_t sub_1BB2548EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2548F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2548FCLL);
  return result;
}

uint64_t sub_1BB254908(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB254910);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB254914(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB25491C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatTagIconPreferredSource()
{
  return &type metadata for FormatTagIconPreferredSource;
}

uint64_t sub_1BB254938()
{
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB254964()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

void sub_1BB25498C(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1BB253BF4(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t objectdestroy_35Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB2549C4(uint64_t *a1@<X8>)
{
  uint64_t v1;

  sub_1BB253D0C(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

unint64_t sub_1BB2549CC()
{
  unint64_t result;

  result = qword_1ED39F778;
  if (!qword_1ED39F778)
  {
    sub_1BB254A0C();
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1ED39F778);
  }
  return result;
}

void sub_1BB254A0C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39EC20)
  {
    v0 = sub_1BB873A2C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39EC20);
  }
}

uint64_t sub_1BB254A60()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1BB254A84()
{
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

double sub_1BB254AA8@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1BB253B5C(a1, *(_QWORD *)(v2 + 16), a2);
}

double sub_1BB254AB0@<D0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return sub_1BB253A78(a1, a2, *(_QWORD *)(v3 + 16), a3);
}

id sub_1BB254ABC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  id v4;

  v4 = *(id *)(v1 + 16);
  a1[3] = sub_1BA749984();
  a1[4] = sub_1BA7499C0();
  *a1 = v4;
  return v4;
}

_QWORD *sub_1BB254B28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  char v11;
  uint64_t v12;
  _QWORD *result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v33;
  uint64_t v34;

  v8 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v9 = *(_QWORD *)(a2 + 32);
  v10 = *(unsigned __int8 *)(a2 + 40);
  v11 = *(_BYTE *)(a2 + 41);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1BB255830(v8, v7, v9, v10, v11, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  if (v33)
  {
    sub_1BB255830(v8, v7, v9, v10, v11, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_bridgeObjectRelease_n();
    return (_QWORD *)swift_release();
  }
  v34 = v12;
  sub_1BB255830(v8, v7, v9, v10, v11, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
  swift_release();
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  v15 = sub_1BB2558F4(v14, a6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a6 + 16);
  swift_bridgeObjectRetain();
  if (!v16)
  {
LABEL_8:
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    v29 = v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v30 = sub_1BA85C6FC(a6);
    swift_bridgeObjectRelease();
    *v29 = a4;
    v29[1] = a5;
    v29[2] = v30;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
  swift_bridgeObjectRetain();
  v17 = sub_1BA6E35A8(a4, a5);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v19 = (uint64_t *)(*(_QWORD *)(a6 + 56) + 40 * v17);
  v21 = *v19;
  v20 = v19[1];
  v22 = v19[2];
  v23 = v19[3];
  v24 = v19[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  sub_1BB255B94(0, v25, v26, v27);
  result = (_QWORD *)swift_allocObject();
  result[4] = v21;
  result[5] = v20;
  result[6] = v22;
  result[7] = v23;
  result[8] = v24;
  result[2] = v34;
  result[3] = v15;
  return result;
}

_QWORD *sub_1BB254E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  uint64_t v11;
  _QWORD *result;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a2 + 40);
  v10 = *(_BYTE *)(a2 + 41);
  swift_retain();
  swift_retain();
  sub_1BB255830(v6, v7, v8, v9, v10, (uint64_t (*)(void))sub_1BA856DD0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DF54);
  sub_1BA73AA74();
  if (v29)
  {
    sub_1BB255830(v6, v7, v8, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_release_n();
    return (_QWORD *)swift_release();
  }
  else
  {
    v13 = v11;
    v28 = a5;
    sub_1BB255830(v6, v7, v8, v9, v10, (uint64_t (*)(void))sub_1BA7EDFFC, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))sub_1BA60DFC4);
    swift_release();
    v14 = *(_QWORD *)(a3 + 16);
    v26 = v13;
    if (v14)
    {
      v31 = MEMORY[0x1E0DEE9D8];
      v15 = a5;
      swift_retain_n();
      swift_bridgeObjectRetain();
      sub_1BAC7B2B4(0, v14, 0);
      v30 = v31;
      v16 = a3 + 56;
      do
      {
        v18 = *(_QWORD *)(v16 - 24);
        v17 = *(_QWORD *)(v16 - 16);
        v19 = *(_BYTE *)(v16 - 8);
        swift_retain();
        sub_1BA73B1CC(v18, v17, v19);
        swift_retain();
        sub_1BA73B1CC(v18, v17, v19);
        v20 = sub_1BA76F060(v15);
        swift_release();
        sub_1BA73B1B8(v18, v17, v19);
        swift_release();
        v21 = v30;
        v23 = *(_QWORD *)(v30 + 16);
        v22 = *(_QWORD *)(v30 + 24);
        if (v23 >= v22 >> 1)
        {
          sub_1BAC7B2B4(v22 > 1, v23 + 1, 1);
          v21 = v30;
        }
        v16 += 32;
        *(_QWORD *)(v21 + 16) = v23 + 1;
        v30 = v21;
        v24 = v21 + 32 * v23;
        *(_QWORD *)(v24 + 32) = v18;
        *(_QWORD *)(v24 + 40) = v17;
        *(_BYTE *)(v24 + 48) = v19;
        *(_QWORD *)(v24 + 56) = v20;
        --v14;
        v15 = v28;
      }
      while (v14);
      swift_bridgeObjectRelease();
      swift_release_n();
    }
    else
    {
      v30 = MEMORY[0x1E0DEE9D8];
      v15 = a5;
    }
    swift_retain();
    v25 = sub_1BA76F060(v15);
    swift_release_n();
    swift_release();
    sub_1BB2558A0(0);
    result = (_QWORD *)swift_allocObject();
    result[2] = v26;
    result[3] = v30;
    result[4] = v25;
  }
  return result;
}

uint64_t sub_1BB255198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  char v17;

  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = *(unsigned __int8 *)(a1 + 16);
  v10 = *(_QWORD *)a2;
  v11 = *(_QWORD *)(a2 + 8);
  v12 = *(unsigned __int8 *)(a2 + 16);
  if (*(_BYTE *)(a1 + 16))
  {
    if (v9 == 1)
    {
      if (v12 == 1)
      {
        v13 = a4;
        sub_1BA73B1B8(*(_QWORD *)a1, v8, 1);
        sub_1BA73B1B8(v10, v11, 1);
        if (((((v7 & 1) == 0) ^ v10) & 1) != 0)
          goto LABEL_19;
        return 0;
      }
    }
    else if (v12 == 2)
    {
      v13 = a4;
      sub_1BA73B1B8(*(_QWORD *)a1, v8, 2);
      sub_1BA73B1B8(v10, v11, 2);
      if (v7 == v10)
        goto LABEL_19;
      return 0;
    }
LABEL_11:
    sub_1BA73B1CC(v10, v11, v12);
    sub_1BA73B1B8(v7, v8, v9);
    sub_1BA73B1B8(v10, v11, v12);
    return 0;
  }
  if (*(_BYTE *)(a2 + 16))
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  v13 = a4;
  v15 = *(_QWORD *)a1;
  if (v7 == v10 && v8 == v11)
  {
    sub_1BA73B1CC(v15, v8, 0);
    sub_1BA73B1CC(v7, v8, 0);
    sub_1BA73B1B8(v7, v8, 0);
    sub_1BA73B1B8(v7, v8, 0);
  }
  else
  {
    v17 = sub_1BB874398();
    sub_1BA73B1CC(v7, v8, 0);
    sub_1BA73B1CC(v10, v11, 0);
    sub_1BA73B1B8(v7, v8, 0);
    sub_1BA73B1B8(v10, v11, 0);
    if ((v17 & 1) == 0)
      return 0;
  }
LABEL_19:
  type metadata accessor for FormatCommandValue.CaseValue(0, a3, v13, a5);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB25539C()
{
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB2553C4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_1BB255198(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t sub_1BB2553D4()
{
  return sub_1BB25539C();
}

uint64_t static FormatCommandValue.== infix(_:_:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t v15;
  __int128 v17;
  uint64_t v18;
  char v19;
  char v20;
  __int128 v21;
  uint64_t v22;
  char v23;
  char v24;

  v8 = *a2;
  v9 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v10 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v11 = *(_BYTE *)(*(_QWORD *)a1 + 41);
  v12 = *(_QWORD *)(*a2 + 32);
  v13 = *(_BYTE *)(*a2 + 40);
  v14 = *(_BYTE *)(*a2 + 41);
  v21 = *(_OWORD *)(*(_QWORD *)a1 + 16);
  v22 = v9;
  v23 = v10;
  v24 = v11;
  v17 = *(_OWORD *)(v8 + 16);
  v18 = v12;
  v19 = v13;
  v20 = v14;
  if ((static FormatCommandBinding.== infix(_:_:)(&v21, &v17) & 1) == 0)
    return 0;
  v15 = type metadata accessor for FormatCommandValue.CaseValue(0, a3, a4, a5);
  MEMORY[0x1BCCE5B24](&unk_1BB8FC710, v15);
  if ((sub_1BB872EEC() & 1) == 0)
    return 0;
  type metadata accessor for FormatCommandValue(0, a3, a4, a5);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB255508(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatCommandValue<A, B>);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB255534(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  return static FormatCommandValue.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t *sub_1BB255544(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = ((v6 + 16) & ~v6) + *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    v12 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    v13 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *v12 = *v13;
    v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
  }
  return a1;
}

_QWORD *sub_1BB25561C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v6 = *(_QWORD *)(v5 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

_QWORD *sub_1BB2556B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;

  *a1 = *a2;
  v4 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 = (_QWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *v4 = *v5;
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

_QWORD *sub_1BB25571C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  unint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  v6 = (_QWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *v6 = *(_QWORD *)v5;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 8 + v5) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1BB2557A0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&unk_1BB8FC7B0, (uint64_t)&unk_1BB8FC760, (uint64_t)&unk_1BB8FC710);
}

uint64_t sub_1BB2557BC(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&unk_1BB8FC678);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB2557E8(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  return sub_1BA49D568(a1, a2, a3, (uint64_t)&unk_1BB8FC788, (uint64_t)&unk_1BB8FC738, (uint64_t)&unk_1BB8FC6B0);
}

uint64_t sub_1BB255804(uint64_t a1)
{
  uint64_t result;

  result = MEMORY[0x1BCCE5B24](&unk_1BB8FC6D8);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB255830(uint64_t result, uint64_t a2, uint64_t a3, unsigned int a4, char a5, uint64_t (*a6)(void), uint64_t (*a7)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  int v7;

  if ((a5 & 1) != 0)
    v7 = 4;
  else
    v7 = 0;
  switch(v7 & 0xFFFFFFFC | (a4 >> 2) & 3)
  {
    case 0u:
      result = sub_1BA856ECC(result, a2, a3, a4, a6);
      break;
    case 3u:
      result = a6();
      break;
    case 6u:
      result = sub_1BA856F00(result, a2, a3, a4 & 0xF3, a6);
      break;
    case 7u:
      result = a7(result, a2, a3, a4 & 1);
      break;
    default:
      return result;
  }
  return result;
}

void sub_1BB2558A0(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED3A73F0)
  {
    v2 = sub_1BA49DEA8();
    v5 = type metadata accessor for FormatCommandActionValue(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED3A73F0);
  }
}

uint64_t sub_1BB2558F4(uint64_t a1, uint64_t a2)
{
  int64_t v2;
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v29 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1BAC7A1AC(0, v2, 0);
    v3 = v29;
    v6 = (uint64_t *)(a1 + 64);
    v7 = a2;
    v24 = a2;
    while (1)
    {
      v27 = v3;
      v8 = *(v6 - 4);
      v9 = *(v6 - 3);
      v10 = *((_BYTE *)v6 - 16);
      v11 = *(v6 - 1);
      v12 = *v6;
      v13 = *(_QWORD *)(v7 + 16);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v8, v9, v10);
      swift_bridgeObjectRetain();
      sub_1BA73B1CC(v8, v9, v10);
      if (!v13)
        break;
      swift_bridgeObjectRetain();
      v14 = sub_1BA6E35A8(v11, v12);
      if ((v15 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        break;
      }
      v16 = *(_QWORD *)(v7 + 56) + 40 * v14;
      v28 = *(_OWORD *)(v16 + 8);
      v17 = *(_QWORD *)(v16 + 32);
      v25 = *(_QWORD *)(v16 + 24);
      v26 = *(_QWORD *)v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1BA73B1B8(v8, v9, v10);
      swift_bridgeObjectRelease();
      v3 = v27;
      v19 = *(_QWORD *)(v27 + 16);
      v18 = *(_QWORD *)(v27 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1BAC7A1AC(v18 > 1, v19 + 1, 1);
        v3 = v27;
      }
      v6 += 5;
      *(_QWORD *)(v3 + 16) = v19 + 1;
      v20 = v3 + (v19 << 6);
      *(_QWORD *)(v20 + 32) = v8;
      *(_QWORD *)(v20 + 40) = v9;
      *(_BYTE *)(v20 + 48) = v10;
      *(_QWORD *)(v20 + 56) = v26;
      *(_OWORD *)(v20 + 64) = v28;
      v7 = v24;
      *(_QWORD *)(v20 + 80) = v25;
      *(_QWORD *)(v20 + 88) = v17;
      if (!--v2)
      {
        swift_bridgeObjectRelease();
        return v3;
      }
    }
    type metadata accessor for FormatLayoutError();
    sub_1BA689E84();
    swift_allocError();
    v22 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v3 = sub_1BA85C6FC(v7);
    swift_bridgeObjectRelease();
    *v22 = v11;
    v22[1] = v12;
    v22[2] = v3;
    swift_storeEnumTagMultiPayload();
    swift_willThrow();
    sub_1BA73B1B8(v8, v9, v10);
    swift_bridgeObjectRelease();
    sub_1BA73B1B8(v8, v9, v10);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_1BB255B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED3CAA60)
  {
    v4 = type metadata accessor for FormatCommandActionValue(0, (uint64_t)&type metadata for FormatStateMachineEvent, a3, a4);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED3CAA60);
  }
}

void sub_1BB255BE8()
{
  __asm { BR              X10 }
}

void sub_1BB255C38()
{
  sub_1BA9BC1C8();
}

uint64_t sub_1BB255F54(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB255F84 + 4 * byte_1BB8FC7D8[a1]))(0x746E657665, 0xE500000000000000);
}

uint64_t sub_1BB255F84()
{
  return 0x65756761656CLL;
}

uint64_t sub_1BB255F98()
{
  return 0x74697465706D6F63;
}

unint64_t sub_1BB255FB4()
{
  return 0xD000000000000010;
}

unint64_t sub_1BB255FD0()
{
  return 0xD000000000000011;
}

void sub_1BB255FF0(char *a1)
{
  sub_1BB7F4EB4(*a1);
}

void sub_1BB255FFC()
{
  char *v0;

  sub_1BA8D42FC(*v0);
}

void sub_1BB256004(uint64_t a1)
{
  char *v1;

  sub_1BA9D2150(a1, *v1);
}

void sub_1BB25600C(uint64_t a1)
{
  char *v1;

  sub_1BAB08814(a1, *v1);
}

uint64_t sub_1BB256014@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB2576CC();
  *a1 = result;
  return result;
}

uint64_t sub_1BB256040@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1BB255F54(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1BB256068()
{
  sub_1BB2571EC();
  return sub_1BB872D60();
}

uint64_t sub_1BB2560C4()
{
  sub_1BB2571EC();
  return sub_1BB872D0C();
}

void sub_1BB256110(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7252BE8;
}

uint64_t sub_1BB256124@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatSportsEventBinding.Color.init(from:)(a1, a2);
}

void sub_1BB256138(_QWORD *a1)
{
  FormatSportsEventBinding.Color.encode(to:)(a1);
}

void sub_1BB25614C(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB256194()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  void *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t inited;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t result;

  sub_1BA6DC310(0, (unint64_t *)&unk_1EF2A9CC0, (void (*)(uint64_t))type metadata accessor for FormatInspectionItem);
  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for FormatInspectionItem(0) - 8) + 80);
  v4 = (v3 + 32) & ~v3;
  v5 = swift_allocObject();
  *(_OWORD *)(v2 - 304) = xmmword_1BB87CE70;
  *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
  v6 = (_QWORD *)(v5 + v4);
  v7 = *(void **)(v1 + 16);
  swift_getObjectType();
  v8 = objc_msgSend(v7, sel_displayName);
  v9 = sub_1BB8729A0();
  v11 = v10;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = *(_OWORD *)(v2 - 304);
  sub_1BA9BE500((uint64_t)v7, v2 - 128);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v13 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v13;
  *(_QWORD *)(v13 + 48) = *(_QWORD *)(v2 - 96);
  v14 = *(_OWORD *)(v2 - 112);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)(v2 - 128);
  *(_OWORD *)(v13 + 32) = v14;
  v15 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v16 = sub_1BB6DF010(v15);
  swift_bridgeObjectRelease();
  result = sub_1BAAF3C48(0x746E657645, 0xE500000000000000, (uint64_t)v16, v9, v11, v6);
  *v0 = v5;
  return result;
}

uint64_t sub_1BB2567F8@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  __int128 v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  uint64_t v12;
  __int128 v13;
  uint64_t v14;
  _QWORD *v15;
  _OWORD v17[2];
  uint64_t v18;

  strcpy((char *)v17, "Competitor [");
  BYTE13(v17[0]) = 0;
  HIWORD(v17[0]) = -5120;
  sub_1BB87420C();
  sub_1BB872AFC(v4);
  swift_bridgeObjectRelease();
  sub_1BB872AFC(v5);
  v6 = v17[0];
  swift_getObjectType();
  v7 = objc_msgSend(a1, sel_displayName);
  v8 = sub_1BB8729A0();
  v10 = v9;

  sub_1BA6DC310(0, (unint64_t *)&qword_1EF2A9CD0, (void (*)(uint64_t))sub_1BA89EA20);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA9BE500((uint64_t)a1, (uint64_t)v17);
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(inited + 64) = &off_1E72D2F60;
  v12 = swift_allocObject();
  *(_QWORD *)(inited + 32) = v12;
  *(_QWORD *)(v12 + 48) = v18;
  v13 = v17[1];
  *(_OWORD *)(v12 + 16) = v17[0];
  *(_OWORD *)(v12 + 32) = v13;
  v14 = sub_1BA9747FC(inited);
  swift_setDeallocating();
  sub_1BA89EA20();
  swift_arrayDestroy();
  v15 = sub_1BB6DF010(v14);
  swift_bridgeObjectRelease();
  return sub_1BAAF3C48(v6, *((uint64_t *)&v6 + 1), (uint64_t)v15, v8, v10, a2);
}

void sub_1BB2569B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  v2 = type metadata accessor for FormatJson();
  MEMORY[0x1E0C80A78](v2);
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

uint64_t sub_1BB256A54(uint64_t a1)
{
  _QWORD *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[14];

  MEMORY[0x1E0C80A78](a1);
  v7[2] = v4;
  *v2 = sub_1BA8A2568((void (*)(char *))sub_1BB25777C, (uint64_t)v7, (uint64_t)&unk_1E724C2F8, v3 - 112);
  swift_storeEnumTagMultiPayload();
  *v1 = 0x746E657665;
  v1[1] = 0xE500000000000000;
  v5 = type metadata accessor for FormatJsonKeyValue();
  sub_1BA5193C4((uint64_t)v2, (uint64_t)v1 + *(int *)(v5 + 20), (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 56))(v1, 0, 1, v5);
}

uint64_t _s8NewsFeed24FormatSportsEventBindingV5ColorO2eeoiySbAE_AEtFZ_0(uint64_t a1)
{
  return ((uint64_t (*)(void))((char *)sub_1BB256DF0 + 4 * byte_1BB8FC7DD[*(unsigned __int8 *)(a1 + 8) >> 6]))();
}

BOOL sub_1BB256DF0@<W0>(char a1@<W8>)
{
  char v1;
  unsigned int v2;

  return v2 < 0x40 && (a1 ^ v1) == 0;
}

unint64_t sub_1BB256E80(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB256EA4();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB256EA4()
{
  unint64_t result;

  result = qword_1EF2BF160;
  if (!qword_1EF2BF160)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Color, &type metadata for FormatSportsEventBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BF160);
  }
  return result;
}

unint64_t sub_1BB256EE8(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE88C88();
  a1[2] = sub_1BAEF2D84();
  result = sub_1BB256F1C();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB256F1C()
{
  unint64_t result;

  result = qword_1EF2BF178;
  if (!qword_1EF2BF178)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatSportsEventBinding.Color, &type metadata for FormatSportsEventBinding.Color);
    atomic_store(result, (unint64_t *)&qword_1EF2BF178);
  }
  return result;
}

uint64_t _s5ColorOwet_1(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 5 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 5);
  v3 = ((*(unsigned __int8 *)(a1 + 8) >> 3) & 4 | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 7;
  if (v3 >= 4)
    v3 = -1;
  return v3 + 1;
}

uint64_t _s5ColorOwst_1(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 4)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 5;
    if (a3 >= 5)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 5)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 32 - ((_BYTE)a2 << 6);
    }
  }
  return result;
}

uint64_t sub_1BB257000(uint64_t a1)
{
  unsigned int v1;

  v1 = *(unsigned __int8 *)(a1 + 8) >> 6;
  if (v1 == 3)
    return (*(_DWORD *)a1 + 3);
  else
    return v1;
}

uint64_t sub_1BB25701C(uint64_t result, unsigned int a2)
{
  if (a2 < 3)
  {
    *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 0x1F | ((_BYTE)a2 << 6);
  }
  else
  {
    *(_QWORD *)result = a2 - 3;
    *(_BYTE *)(result + 8) = -64;
  }
  return result;
}

ValueMetadata *type metadata accessor for FormatSportsEventBinding.Color()
{
  return &type metadata for FormatSportsEventBinding.Color;
}

uint64_t _s5ColorO10CodingTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1BB2570A4 + 4 * byte_1BB8FC7E6[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1BB2570D8 + 4 * byte_1BB8FC7E1[v4]))();
}

uint64_t sub_1BB2570D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2570E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB2570E8);
  return result;
}

uint64_t sub_1BB2570F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB2570FCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1BB257100(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB257108(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s5ColorO10CodingTypeOMa_0()
{
  return &_s5ColorO10CodingTypeON_0;
}

uint64_t sub_1BB257124()
{
  return sub_1BA4A2870(&qword_1EF2BF180, (uint64_t (*)(uint64_t))sub_1BB257150, MEMORY[0x1E0DEAF50]);
}

void sub_1BB257150()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BF188)
  {
    v0 = sub_1BB872EE0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BF188);
  }
}

unint64_t sub_1BB2571A8()
{
  unint64_t result;

  result = qword_1EF2BF190;
  if (!qword_1EF2BF190)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC9AC, &_s5ColorO10CodingTypeON_0);
    atomic_store(result, &qword_1EF2BF190);
  }
  return result;
}

unint64_t sub_1BB2571EC()
{
  unint64_t result;

  result = qword_1ED3A7448;
  if (!qword_1ED3A7448)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FC934, &_s5ColorO10CodingTypeON_0);
    atomic_store(result, (unint64_t *)&qword_1ED3A7448);
  }
  return result;
}

uint64_t sub_1BB257230(unint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  char *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;

  v2 = type metadata accessor for FormatJsonKeyValue();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for FormatJson();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
    goto LABEL_20;
  v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    v10 = MEMORY[0x1E0DEE9D8];
    if (!v9)
      return MEMORY[0x1E0DEE9D8];
    v34 = MEMORY[0x1E0DEE9D8];
    result = sub_1BAC7A2A0(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0)
      break;
    v12 = 0;
    v31 = v34;
    v26 = a1 & 0xC000000000000001;
    v27 = v9;
    v23[1] = a1 + 32;
    v24 = v8;
    v25 = a1;
    while (v12 != v9)
    {
      if (v26)
        MEMORY[0x1BCCE4630](v12, a1);
      else
        swift_unknownObjectRetain();
      v30 = v12;
      v13 = 18;
      v33 = v10;
      sub_1BAC7A274(0, 18, 0);
      v14 = v33;
      v15 = &byte_1E724C318;
      do
      {
        v16 = *v15++;
        v32 = v16;
        sub_1BA9BDDE8((uint64_t)&v32);
        v33 = v14;
        v18 = *(_QWORD *)(v14 + 16);
        v17 = *(_QWORD *)(v14 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_1BAC7A274(v17 > 1, v18 + 1, 1);
          v14 = v33;
        }
        *(_QWORD *)(v14 + 16) = v18 + 1;
        sub_1BA5193C4((uint64_t)v5, v14+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v18, (uint64_t (*)(_QWORD))type metadata accessor for FormatJsonKeyValue);
        --v13;
      }
      while (v13);
      v8 = v24;
      a1 = v25;
      *(_QWORD *)v24 = v14;
      swift_storeEnumTagMultiPayload();
      swift_unknownObjectRelease();
      v19 = v31;
      v34 = v31;
      v21 = *(_QWORD *)(v31 + 16);
      v20 = *(_QWORD *)(v31 + 24);
      v9 = v27;
      if (v21 >= v20 >> 1)
      {
        sub_1BAC7A2A0(v20 > 1, v21 + 1, 1);
        v19 = v34;
      }
      v12 = v30 + 1;
      *(_QWORD *)(v19 + 16) = v21 + 1;
      v22 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
      v31 = v19;
      sub_1BA5193C4((uint64_t)v8, v19 + v22 + *(_QWORD *)(v28 + 72) * v21, (uint64_t (*)(_QWORD))type metadata accessor for FormatJson);
      v10 = MEMORY[0x1E0DEE9D8];
      if (v12 == v9)
        return v31;
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    v9 = sub_1BB873F30();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

double sub_1BB257528@<D0>(__int128 *a1@<X1>, uint64_t a2@<X8>)
{
  __int128 v3;
  uint64_t v4;
  double result;
  __int128 v6;
  uint64_t v7;
  char v8;
  _OWORD v9[2];
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;

  v3 = a1[1];
  v11 = *a1;
  v12 = v3;
  v13 = *((_BYTE *)a1 + 32);
  *(_QWORD *)&v9[0] = MEMORY[0x1E0DEE9D8];
  v8 = 0;
  sub_1BB25614C((uint64_t)&v8);
  sub_1BB383BA8(v7);
  v8 = 1;
  sub_1BB25614C((uint64_t)&v8);
  sub_1BB383BA8(v7);
  v8 = 2;
  sub_1BB25614C((uint64_t)&v8);
  sub_1BB383BA8(v7);
  v8 = 3;
  sub_1BB25614C((uint64_t)&v8);
  sub_1BB383BA8(v7);
  v8 = 4;
  sub_1BB25614C((uint64_t)&v8);
  sub_1BB383BA8(v7);
  v4 = sub_1BA97461C(*(uint64_t *)&v9[0]);
  swift_bridgeObjectRelease();
  sub_1BAF89090(0x726F6C6F43, 0xE500000000000000, 0, 0, v4, v9);
  swift_bridgeObjectRelease();
  result = *(double *)v9;
  v6 = v9[1];
  *(_OWORD *)a2 = v9[0];
  *(_OWORD *)(a2 + 16) = v6;
  *(_QWORD *)(a2 + 32) = v10;
  return result;
}

uint64_t sub_1BB2576CC()
{
  unint64_t v0;

  v0 = sub_1BB873FE4();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_1BB257714@<X0>(void *a1@<X1>, _QWORD *a2@<X8>)
{
  return sub_1BB2567F8(a1, a2);
}

uint64_t sub_1BB25771C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB257750()
{
  return swift_deallocObject();
}

void sub_1BB257760(uint64_t a1)
{
  sub_1BA9BDDE8(a1);
}

void sub_1BB25777C(uint64_t a1)
{
  sub_1BB257760(a1);
}

char *initializeBufferWithCopyOfBuffer for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  char *v3;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  unint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  int *v68;
  unsigned int (*v69)(char *, uint64_t, int *);
  uint64_t v70;
  void *v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  id v75;
  id v76;
  __int128 v77;
  int v78;
  void *v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  id v83;
  id v84;
  __int128 v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  unsigned int (*v103)(char *, uint64_t, uint64_t);
  uint64_t v104;
  uint64_t v105;
  int *v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  unint64_t v118;
  uint64_t v119;
  _QWORD *v120;
  unint64_t v121;
  uint64_t v122;
  int *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  _QWORD *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  id v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  __int128 v151;
  _OWORD *v152;
  _OWORD *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(char *, uint64_t, uint64_t);
  uint64_t v162;
  __int128 v163;
  _OWORD *v164;
  _OWORD *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  int *v176;
  unsigned int (*v177)(char *, uint64_t, int *);
  uint64_t v178;
  __int128 v179;
  uint64_t v180;
  uint64_t v181;
  void *v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  void (*v187)(char *, char *, uint64_t);
  id v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  __int128 v196;
  _OWORD *v197;
  _OWORD *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  _QWORD *v203;
  unint64_t v204;
  uint64_t v205;
  unint64_t v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  __int128 v212;
  __int128 v213;
  void *v214;
  uint64_t v215;
  void *v216;
  uint64_t v217;
  id v218;
  id v219;
  __int128 v220;
  uint64_t v221;
  void *v222;
  id v223;
  __int128 v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  id v228;
  _QWORD *v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  void *v235;
  id v236;
  _QWORD *v237;
  unint64_t v238;
  void *v239;
  uint64_t v240;
  uint64_t v241;
  void *v242;
  uint64_t v243;
  id v244;
  id v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  char *v251;
  char *v252;
  id v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  unint64_t v263;
  uint64_t v264;
  unint64_t v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  uint64_t v270;
  uint64_t v271;
  void *v272;
  id v273;
  _QWORD *v274;
  unint64_t v275;
  uint64_t v276;
  void *v277;
  void (*v278)(char *, _QWORD, uint64_t, int *);
  id v279;
  uint64_t v280;
  char *v281;
  char *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  int EnumCaseMultiPayload;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  int *v292;
  char *v293;
  char *v294;
  char *v295;
  __int128 v296;
  int *v297;
  uint64_t v298;
  char *v299;
  char *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  unint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  _QWORD *v317;
  uint64_t v318;
  char *result;
  uint64_t v320;
  int *v321;
  uint64_t v322;
  int *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  void (*v327)(char *, char *, uint64_t);
  int *v328;
  uint64_t v329;
  int *v330;
  int *v331;
  int *v332;
  int *v333;
  int *v334;
  _QWORD *v335;
  char *v336;

  v3 = a2;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v13 = (char *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for FeedItem(0);
    v335 = v3;
    v336 = a1;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v8 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v8;
        v9 = *((_QWORD *)v3 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        *((_QWORD *)a1 + 3) = v9;
        a1[32] = v3[32];
        v10 = v3 + 40;
        v11 = *((_QWORD *)v3 + 6);
        swift_bridgeObjectRetain();
        if (v11 >= 0x11)
        {
          *((_QWORD *)a1 + 5) = *v10;
          *((_QWORD *)a1 + 6) = v11;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)v10;
        }
        goto LABEL_143;
      case 1u:
        v53 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v53;
        v54 = *((_QWORD *)v3 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        *((_QWORD *)a1 + 3) = v54;
        a1[32] = v3[32];
        v55 = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 6) = v55;
        v56 = *((_QWORD *)v3 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)v3 + 7);
        *((_QWORD *)a1 + 8) = v56;
        v57 = v3 + 72;
        v58 = *((_QWORD *)v3 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v58 >= 0x11)
        {
          *((_QWORD *)a1 + 9) = *v57;
          *((_QWORD *)a1 + 10) = v58;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v57;
        }
        goto LABEL_143;
      case 2u:
        v14 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v14;
        v15 = (int *)type metadata accessor for FeedBannerAd();
        v16 = v15[5];
        v17 = &a1[v16];
        v18 = &v3[v16];
        v19 = sub_1BB8721C0();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v21 = v19;
        v3 = (char *)v335;
        v20(v17, v18, v21);
        *(_QWORD *)&a1[v15[6]] = *(_QWORD *)((char *)v335 + v15[6]);
        v22 = v15[7];
        v23 = &a1[v22];
        v24 = (char *)v335 + v22;
        *(_QWORD *)v23 = *(_QWORD *)v24;
        v23[8] = v24[8];
        v25 = v15[8];
        v26 = &a1[v25];
        v27 = (char *)v335 + v25;
        v28 = *((_QWORD *)v27 + 1);
        if (v28 >= 0x11)
          goto LABEL_39;
        *(_OWORD *)v26 = *(_OWORD *)v27;
        goto LABEL_143;
      case 3u:
        v332 = v6;
        v59 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v59;
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        a1[24] = v3[24];
        v60 = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)v3 + 4);
        *((_QWORD *)a1 + 5) = v60;
        *((_QWORD *)a1 + 6) = *((_QWORD *)v3 + 6);
        a1[56] = v3[56];
        v328 = (int *)type metadata accessor for FeedHeadline(0);
        v61 = v328[10];
        v62 = &a1[v61];
        v63 = &v3[v61];
        *v62 = v3[v61];
        v62[1] = v3[v61 + 1];
        v64 = (int *)type metadata accessor for FeedHeadline.State(0);
        v65 = v64[6];
        v66 = &v62[v65];
        v67 = &v63[v65];
        v68 = (int *)type metadata accessor for SharedItem();
        v325 = *((_QWORD *)v68 - 1);
        v69 = *(unsigned int (**)(char *, uint64_t, int *))(v325 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v69(v67, 1, v68))
        {
          v70 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
        }
        else
        {
          v180 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16))(v66, v67, v180);
          v66[v68[5]] = v67[v68[5]];
          v181 = v68[6];
          v182 = *(void **)&v67[v181];
          *(_QWORD *)&v66[v181] = v182;
          v183 = v68[7];
          v184 = &v66[v183];
          v185 = &v67[v183];
          v186 = sub_1BB86C67C();
          v187 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16);
          v188 = v182;
          v187(v184, v185, v186);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v325 + 56))(v66, 0, 1, v68);
        }
        v6 = v332;
        v3 = (char *)v335;
        v62[v64[7]] = v63[v64[7]];
        v62[v64[8]] = v63[v64[8]];
        v62[v64[9]] = v63[v64[9]];
        v62[v64[10]] = v63[v64[10]];
        v189 = v328[11];
        v190 = &v336[v189];
        v191 = (char *)v335 + v189;
        v192 = sub_1BB871B24();
        v193 = *(_QWORD *)(v192 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v190, v191, v192);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56))(v190, 0, 1, v192);
        }
        a1 = v336;
        v201 = v328[12];
        v202 = &v336[v201];
        v203 = (_QWORD *)((char *)v335 + v201);
        v204 = v203[1];
        if (v204 >= 0x11)
        {
          *(_QWORD *)v202 = *v203;
          *((_QWORD *)v202 + 1) = v204;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v202 = *(_OWORD *)v203;
        }
        v205 = v328[13];
        v206 = *(_QWORD *)((char *)v335 + v205);
        if (v206 >= 2)
        {
          if (v206 == 2)
          {
            *(_QWORD *)&v336[v205] = 2;
          }
          else
          {
            *(_QWORD *)&v336[v205] = v206;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&v336[v205] = v206;
        }
        v221 = v328[14];
        v222 = *(void **)((char *)v335 + v221);
        *(_QWORD *)&v336[v221] = v222;
        v223 = v222;
        goto LABEL_143;
      case 4u:
        v29 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v29;
        a1[16] = v3[16];
        v30 = v3 + 24;
        v31 = *((_QWORD *)v3 + 4);
        if (v31 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v30;
          *((_QWORD *)a1 + 4) = v31;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v30;
        }
        v122 = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 6) = v122;
        v123 = (int *)type metadata accessor for FeedWebEmbed();
        v124 = v123[8];
        v125 = &a1[v124];
        v126 = &v3[v124];
        v127 = sub_1BB86C67C();
        v128 = *(_QWORD *)(v127 - 8);
        v129 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
        swift_bridgeObjectRetain();
        v129(v125, v126, v127);
        v330 = v123;
        v130 = v123[9];
        v131 = &a1[v130];
        v132 = &v3[v130];
        v324 = v127;
        v327 = v129;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(&v3[v130], 1, v127))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v131, v132, *(_QWORD *)(*(_QWORD *)(v133 - 8) + 64));
        }
        else
        {
          v129(v131, v132, v127);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v128 + 56))(v131, 0, 1, v127);
        }
        *(_QWORD *)&a1[v123[10]] = *(_QWORD *)&v3[v123[10]];
        *(_QWORD *)&a1[v123[11]] = *(_QWORD *)&v3[v123[11]];
        v156 = v123[12];
        v157 = &a1[v156];
        v158 = &v3[v156];
        v159 = type metadata accessor for FeedHeadline(0);
        v160 = *(_QWORD *)(v159 - 8);
        v161 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v160 + 48);
        swift_retain();
        swift_retain();
        if (v161(v158, 1, v159))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
        }
        else
        {
          v322 = v160;
          v323 = (int *)v159;
          v334 = v6;
          v168 = *((_QWORD *)v158 + 1);
          *(_QWORD *)v157 = *(_QWORD *)v158;
          *((_QWORD *)v157 + 1) = v168;
          *((_QWORD *)v157 + 2) = *((_QWORD *)v158 + 2);
          v157[24] = v158[24];
          v169 = *((_QWORD *)v158 + 5);
          *((_QWORD *)v157 + 4) = *((_QWORD *)v158 + 4);
          *((_QWORD *)v157 + 5) = v169;
          *((_QWORD *)v157 + 6) = *((_QWORD *)v158 + 6);
          v157[56] = v158[56];
          v170 = *(int *)(v159 + 40);
          v171 = &v157[v170];
          v172 = &v158[v170];
          *v171 = v158[v170];
          v171[1] = v158[v170 + 1];
          v321 = (int *)type metadata accessor for FeedHeadline.State(0);
          v173 = v321[6];
          v174 = &v171[v173];
          v175 = &v172[v173];
          v176 = (int *)type metadata accessor for SharedItem();
          v320 = *((_QWORD *)v176 - 1);
          v177 = *(unsigned int (**)(char *, uint64_t, int *))(v320 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          if (v177(v175, 1, v176))
          {
            v178 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
          }
          else
          {
            v247 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(v174, v175, v247);
            v174[v176[5]] = v175[v176[5]];
            v248 = v176[6];
            v249 = *(void **)&v175[v248];
            *(_QWORD *)&v174[v248] = v249;
            v250 = v176[7];
            v251 = &v174[v250];
            v252 = &v175[v250];
            v253 = v249;
            v129(v251, v252, v324);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v320 + 56))(v174, 0, 1, v176);
          }
          v171[v321[7]] = v172[v321[7]];
          v171[v321[8]] = v172[v321[8]];
          v171[v321[9]] = v172[v321[9]];
          v171[v321[10]] = v172[v321[10]];
          v254 = v323[11];
          v255 = &v157[v254];
          v256 = &v158[v254];
          v257 = sub_1BB871B24();
          v258 = *(_QWORD *)(v257 - 8);
          v3 = (char *)v335;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v258 + 48))(v256, 1, v257))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v255, v256, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v258 + 16))(v255, v256, v257);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v258 + 56))(v255, 0, 1, v257);
          }
          v6 = v334;
          v260 = v323[12];
          v261 = &v157[v260];
          v262 = &v158[v260];
          v263 = *((_QWORD *)v262 + 1);
          if (v263 >= 0x11)
          {
            *(_QWORD *)v261 = *(_QWORD *)v262;
            *((_QWORD *)v261 + 1) = v263;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v261 = *(_OWORD *)v262;
          }
          v264 = v323[13];
          v265 = *(_QWORD *)&v158[v264];
          if (v265 >= 2)
          {
            if (v265 == 2)
            {
              *(_QWORD *)&v157[v264] = 2;
            }
            else
            {
              *(_QWORD *)&v157[v264] = v265;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)&v157[v264] = v265;
          }
          v276 = v323[14];
          v277 = *(void **)&v158[v276];
          *(_QWORD *)&v157[v276] = v277;
          v278 = *(void (**)(char *, _QWORD, uint64_t, int *))(v322 + 56);
          v279 = v277;
          v278(v157, 0, 1, v323);
        }
        v280 = v330[13];
        v281 = &v336[v280];
        v282 = &v3[v280];
        v283 = type metadata accessor for WebEmbedDataVisualization();
        v284 = *(_QWORD *)(v283 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v284 + 48))(v282, 1, v283))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v287 = *(_QWORD *)v282;
          if (EnumCaseMultiPayload == 1)
          {
            v288 = *((_QWORD *)v282 + 1);
            *(_QWORD *)v281 = v287;
            *((_QWORD *)v281 + 1) = v288;
            v289 = type metadata accessor for GenericDataVisualization();
            v290 = *(int *)(v289 + 20);
            v291 = &v281[v290];
            v292 = v6;
            v293 = &v282[v290];
            swift_bridgeObjectRetain();
            v294 = v291;
            v3 = (char *)v335;
            v295 = v293;
            v6 = v292;
            v327(v294, v295, v324);
            *(_QWORD *)&v281[*(int *)(v289 + 24)] = *(_QWORD *)&v282[*(int *)(v289 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_QWORD *)v281 = v287;
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v284 + 56))(v281, 0, 1, v283);
        }
        a1 = v336;
        v336[v330[14]] = v3[v330[14]];
        goto LABEL_143;
      case 5u:
        v71 = *(void **)v3;
        v72 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v72;
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)v3 + 12);
        *((_QWORD *)a1 + 4) = *((_QWORD *)v3 + 4);
        a1[40] = v3[40];
        v73 = (void *)*((_QWORD *)v3 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 7) = v73;
        a1[64] = v3[64];
        v74 = *((_QWORD *)v3 + 10);
        v75 = v71;
        swift_bridgeObjectRetain();
        v76 = v73;
        if (v74 == 1)
        {
          v77 = *(_OWORD *)(v3 + 88);
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(v3 + 72);
          *(_OWORD *)(a1 + 88) = v77;
          *(_OWORD *)(a1 + 104) = *(_OWORD *)(v3 + 104);
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)v3 + 9);
          *((_QWORD *)a1 + 10) = v74;
          v135 = *((_QWORD *)v3 + 12);
          *((_QWORD *)a1 + 11) = *((_QWORD *)v3 + 11);
          *((_QWORD *)a1 + 12) = v135;
          v137 = (void *)*((_QWORD *)v3 + 13);
          v136 = *((_QWORD *)v3 + 14);
          *((_QWORD *)a1 + 13) = v137;
          *((_QWORD *)a1 + 14) = v136;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v138 = v137;
        }
        v139 = v3 + 120;
        v140 = *((_QWORD *)v3 + 16);
        if (v140 >= 0x11)
        {
          *((_QWORD *)a1 + 15) = *v139;
          *((_QWORD *)a1 + 16) = v140;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)v139;
        }
        a1[136] = v3[136];
        goto LABEL_143;
      case 6u:
        v78 = v3[281];
        if (v78 == 2)
        {
          v208 = v335[1];
          *(_QWORD *)a1 = *v335;
          *((_QWORD *)a1 + 1) = v208;
          *((_QWORD *)a1 + 2) = v335[2];
          a1[24] = *((_BYTE *)v335 + 24);
          *((_QWORD *)a1 + 4) = v335[4];
          a1[40] = *((_BYTE *)v335 + 40);
          v209 = v335[7];
          *((_QWORD *)a1 + 6) = v335[6];
          *((_QWORD *)a1 + 7) = v209;
          v210 = v335[9];
          *((_QWORD *)a1 + 8) = v335[8];
          *((_QWORD *)a1 + 9) = v210;
          v211 = v335[11];
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v211 == 1)
          {
            v212 = *((_OWORD *)v335 + 8);
            *((_OWORD *)a1 + 7) = *((_OWORD *)v335 + 7);
            *((_OWORD *)a1 + 8) = v212;
            a1[144] = *((_BYTE *)v335 + 144);
            v213 = *((_OWORD *)v335 + 6);
            *((_OWORD *)a1 + 5) = *((_OWORD *)v335 + 5);
            *((_OWORD *)a1 + 6) = v213;
          }
          else
          {
            *((_QWORD *)a1 + 10) = v335[10];
            *((_QWORD *)a1 + 11) = v211;
            v231 = v335[15];
            swift_bridgeObjectRetain();
            if (v231)
            {
              v232 = v335[16];
              *((_QWORD *)a1 + 15) = v231;
              *((_QWORD *)a1 + 16) = v232;
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v231 - 8))((uint64_t)(a1 + 96), (uint64_t)(v335 + 12), v231);
              *((_QWORD *)a1 + 17) = v335[17];
            }
            else
            {
              v296 = *((_OWORD *)v335 + 7);
              *((_OWORD *)a1 + 6) = *((_OWORD *)v335 + 6);
              *((_OWORD *)a1 + 7) = v296;
              *((_OWORD *)a1 + 8) = *((_OWORD *)v335 + 8);
            }
            a1[144] = *((_BYTE *)v335 + 144);
          }
        }
        else if (v78 == 1)
        {
          v79 = (void *)*v335;
          v80 = v335[1];
          *(_QWORD *)a1 = *v335;
          *((_QWORD *)a1 + 1) = v80;
          *((_QWORD *)a1 + 2) = v335[2];
          *((_WORD *)a1 + 12) = *((_WORD *)v335 + 12);
          *((_QWORD *)a1 + 4) = v335[4];
          a1[40] = *((_BYTE *)v335 + 40);
          v81 = (void *)v335[7];
          *((_QWORD *)a1 + 6) = v335[6];
          *((_QWORD *)a1 + 7) = v81;
          a1[64] = *((_BYTE *)v335 + 64);
          v82 = v335[10];
          v83 = v79;
          swift_bridgeObjectRetain();
          v84 = v81;
          if (v82 == 1)
          {
            v85 = *(_OWORD *)(v335 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(v335 + 9);
            *(_OWORD *)(a1 + 88) = v85;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(v335 + 13);
          }
          else
          {
            *((_QWORD *)a1 + 9) = v335[9];
            *((_QWORD *)a1 + 10) = v82;
            v225 = v335[12];
            *((_QWORD *)a1 + 11) = v335[11];
            *((_QWORD *)a1 + 12) = v225;
            v227 = (void *)v335[13];
            v226 = v335[14];
            *((_QWORD *)a1 + 13) = v227;
            *((_QWORD *)a1 + 14) = v226;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v228 = v227;
          }
          v229 = v335 + 15;
          v230 = v335[16];
          if (v230 >= 0x11)
          {
            *((_QWORD *)a1 + 15) = *v229;
            *((_QWORD *)a1 + 16) = v230;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v229;
          }
          v239 = (void *)v335[18];
          a1[136] = *((_BYTE *)v335 + 136);
          if (v239)
          {
            v240 = v335[19];
            v241 = v335[20];
            *((_QWORD *)a1 + 18) = v239;
            *((_QWORD *)a1 + 19) = v240;
            *((_QWORD *)a1 + 20) = v241;
            *((_WORD *)a1 + 84) = *((_WORD *)v335 + 84);
            *((_QWORD *)a1 + 22) = v335[22];
            a1[184] = *((_BYTE *)v335 + 184);
            v242 = (void *)v335[25];
            *((_QWORD *)a1 + 24) = v335[24];
            *((_QWORD *)a1 + 25) = v242;
            a1[208] = *((_BYTE *)v335 + 208);
            v243 = v335[28];
            v244 = v239;
            swift_bridgeObjectRetain();
            v245 = v242;
            if (v243 == 1)
            {
              v246 = *(_OWORD *)(v335 + 29);
              *(_OWORD *)(a1 + 216) = *(_OWORD *)(v335 + 27);
              *(_OWORD *)(a1 + 232) = v246;
              *(_OWORD *)(a1 + 248) = *(_OWORD *)(v335 + 31);
            }
            else
            {
              *((_QWORD *)a1 + 27) = v335[27];
              *((_QWORD *)a1 + 28) = v243;
              v270 = v335[30];
              *((_QWORD *)a1 + 29) = v335[29];
              *((_QWORD *)a1 + 30) = v270;
              v272 = (void *)v335[31];
              v271 = v335[32];
              *((_QWORD *)a1 + 31) = v272;
              *((_QWORD *)a1 + 32) = v271;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v273 = v272;
            }
            v274 = v335 + 33;
            v275 = v335[34];
            if (v275 >= 0x11)
            {
              *((_QWORD *)a1 + 33) = *v274;
              *((_QWORD *)a1 + 34) = v275;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)v274;
            }
            a1[280] = *((_BYTE *)v335 + 280);
          }
          else
          {
            v266 = *((_OWORD *)v335 + 16);
            *((_OWORD *)a1 + 15) = *((_OWORD *)v335 + 15);
            *((_OWORD *)a1 + 16) = v266;
            *(_OWORD *)(a1 + 265) = *(_OWORD *)((char *)v335 + 265);
            v267 = *((_OWORD *)v335 + 12);
            *((_OWORD *)a1 + 11) = *((_OWORD *)v335 + 11);
            *((_OWORD *)a1 + 12) = v267;
            v268 = *((_OWORD *)v335 + 14);
            *((_OWORD *)a1 + 13) = *((_OWORD *)v335 + 13);
            *((_OWORD *)a1 + 14) = v268;
            v269 = *((_OWORD *)v335 + 10);
            *((_OWORD *)a1 + 9) = *((_OWORD *)v335 + 9);
            *((_OWORD *)a1 + 10) = v269;
          }
        }
        else
        {
          v214 = (void *)*v335;
          v215 = v335[1];
          *(_QWORD *)a1 = *v335;
          *((_QWORD *)a1 + 1) = v215;
          *((_QWORD *)a1 + 2) = v335[2];
          *((_WORD *)a1 + 12) = *((_WORD *)v335 + 12);
          *((_QWORD *)a1 + 4) = v335[4];
          a1[40] = *((_BYTE *)v335 + 40);
          v216 = (void *)v335[7];
          *((_QWORD *)a1 + 6) = v335[6];
          *((_QWORD *)a1 + 7) = v216;
          a1[64] = *((_BYTE *)v335 + 64);
          v217 = v335[10];
          v218 = v214;
          swift_bridgeObjectRetain();
          v219 = v216;
          if (v217 == 1)
          {
            v220 = *(_OWORD *)(v335 + 11);
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(v335 + 9);
            *(_OWORD *)(a1 + 88) = v220;
            *(_OWORD *)(a1 + 104) = *(_OWORD *)(v335 + 13);
          }
          else
          {
            *((_QWORD *)a1 + 9) = v335[9];
            *((_QWORD *)a1 + 10) = v217;
            v233 = v335[12];
            *((_QWORD *)a1 + 11) = v335[11];
            *((_QWORD *)a1 + 12) = v233;
            v235 = (void *)v335[13];
            v234 = v335[14];
            *((_QWORD *)a1 + 13) = v235;
            *((_QWORD *)a1 + 14) = v234;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v236 = v235;
          }
          v237 = v335 + 15;
          v238 = v335[16];
          if (v238 >= 0x11)
          {
            *((_QWORD *)a1 + 15) = *v237;
            *((_QWORD *)a1 + 16) = v238;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)v237;
          }
          a1[136] = *((_BYTE *)v335 + 136);
        }
        a1[281] = v78;
        goto LABEL_142;
      case 7u:
        v86 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v86;
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        a1[24] = v3[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)v3 + 4);
        a1[40] = v3[40];
        v87 = *((_QWORD *)v3 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 7) = v87;
        v88 = *((_QWORD *)v3 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)v3 + 8);
        *((_QWORD *)a1 + 9) = v88;
        v89 = *((_QWORD *)v3 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v89 == 1)
        {
          v90 = *((_OWORD *)v3 + 8);
          *((_OWORD *)a1 + 7) = *((_OWORD *)v3 + 7);
          *((_OWORD *)a1 + 8) = v90;
          a1[144] = v3[144];
          v91 = *((_OWORD *)v3 + 6);
          *((_OWORD *)a1 + 5) = *((_OWORD *)v3 + 5);
          *((_OWORD *)a1 + 6) = v91;
        }
        else
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)v3 + 10);
          *((_QWORD *)a1 + 11) = v89;
          v141 = *((_QWORD *)v3 + 15);
          swift_bridgeObjectRetain();
          if (v141)
          {
            v142 = *((_QWORD *)v3 + 16);
            *((_QWORD *)a1 + 15) = v141;
            *((_QWORD *)a1 + 16) = v142;
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v141 - 8))((uint64_t)(a1 + 96), (uint64_t)(v3 + 96), v141);
            *((_QWORD *)a1 + 17) = *((_QWORD *)v3 + 17);
          }
          else
          {
            v224 = *((_OWORD *)v3 + 7);
            *((_OWORD *)a1 + 6) = *((_OWORD *)v3 + 6);
            *((_OWORD *)a1 + 7) = v224;
            *((_OWORD *)a1 + 8) = *((_OWORD *)v3 + 8);
          }
          a1[144] = v3[144];
        }
        goto LABEL_143;
      case 8u:
        v333 = v6;
        v92 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v92;
        v93 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v94 = &a1[v93];
        v95 = &v3[v93];
        v96 = *(_QWORD *)&v3[v93];
        v97 = *((_QWORD *)v95 + 1);
        *(_QWORD *)v94 = v96;
        *((_QWORD *)v94 + 1) = v97;
        v98 = *((_QWORD *)v95 + 3);
        *((_QWORD *)v94 + 2) = *((_QWORD *)v95 + 2);
        *((_QWORD *)v94 + 3) = v98;
        v329 = type metadata accessor for FormatCustomItem.Resolved();
        v99 = *(int *)(v329 + 24);
        v100 = &v94[v99];
        v101 = &v95[v99];
        v102 = type metadata accessor for FormatCustomItem.Action();
        v326 = *(_QWORD *)(v102 - 8);
        v103 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v326 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v103(v101, 1, v102))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
        }
        else
        {
          v195 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v195 - 8) + 16))(v100, v101, v195);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v326 + 56))(v100, 0, 1, v102);
        }
        v6 = v333;
        v3 = (char *)v335;
        a1 = v336;
        *(_QWORD *)&v94[*(int *)(v329 + 28)] = *(_QWORD *)&v95[*(int *)(v329 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_143;
      case 9u:
        v32 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v32;
        v33 = *((_QWORD *)v3 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        *((_QWORD *)a1 + 3) = v33;
        v34 = *((_QWORD *)v3 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v34)
        {
          v35 = *((_QWORD *)v3 + 8);
          *((_QWORD *)a1 + 7) = v34;
          *((_QWORD *)a1 + 8) = v35;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v34 - 8))((uint64_t)(a1 + 32), (uint64_t)(v3 + 32), v34);
        }
        else
        {
          v151 = *((_OWORD *)v3 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)v3 + 2);
          *((_OWORD *)a1 + 3) = v151;
          *((_QWORD *)a1 + 8) = *((_QWORD *)v3 + 8);
        }
        v152 = a1 + 72;
        v153 = v3 + 72;
        v154 = *((_QWORD *)v3 + 12);
        if (v154)
        {
          v155 = *((_QWORD *)v3 + 13);
          *((_QWORD *)a1 + 12) = v154;
          *((_QWORD *)a1 + 13) = v155;
          (**(void (***)(_OWORD *, _OWORD *))(v154 - 8))(v152, v153);
        }
        else
        {
          v163 = *(_OWORD *)(v3 + 88);
          *v152 = *v153;
          *(_OWORD *)(a1 + 88) = v163;
          *((_QWORD *)a1 + 13) = *((_QWORD *)v3 + 13);
        }
        v164 = a1 + 112;
        v165 = v3 + 112;
        v166 = *((_QWORD *)v3 + 17);
        if (v166)
        {
          v167 = *((_QWORD *)v3 + 18);
          *((_QWORD *)a1 + 17) = v166;
          *((_QWORD *)a1 + 18) = v167;
          (**(void (***)(_OWORD *, _OWORD *))(v166 - 8))(v164, v165);
        }
        else
        {
          v179 = *((_OWORD *)v3 + 8);
          *v164 = *v165;
          *((_OWORD *)a1 + 8) = v179;
          *((_QWORD *)a1 + 18) = *((_QWORD *)v3 + 18);
        }
        goto LABEL_143;
      case 0xAu:
        v105 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v105;
        v106 = (int *)type metadata accessor for FeedEngagementBanner();
        v107 = v106[5];
        v108 = &a1[v107];
        v109 = &v3[v107];
        v110 = sub_1BB86EDAC();
        v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
        swift_bridgeObjectRetain();
        v111(v108, v109, v110);
        *(_QWORD *)&a1[v106[6]] = *(_QWORD *)&v3[v106[6]];
        v112 = v106[7];
        v113 = &a1[v112];
        v114 = &v3[v112];
        *(_QWORD *)v113 = *(_QWORD *)v114;
        v113[8] = v114[8];
        v115 = v106[8];
        v26 = &a1[v115];
        v27 = &v3[v115];
        v28 = *((_QWORD *)v27 + 1);
        if (v28 >= 0x11)
        {
LABEL_39:
          *(_QWORD *)v26 = *(_QWORD *)v27;
          *((_QWORD *)v26 + 1) = v28;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v26 = *(_OWORD *)v27;
        }
        goto LABEL_143;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)v3;
        swift_retain();
        goto LABEL_143;
      case 0xCu:
        v36 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v36;
        v37 = *((_QWORD *)v3 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        *((_QWORD *)a1 + 3) = v37;
        a1[32] = v3[32];
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_143;
      case 0xDu:
        v116 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v116;
        a1[16] = v3[16];
        v117 = v3 + 24;
        v118 = *((_QWORD *)v3 + 4);
        if (v118 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v117;
          *((_QWORD *)a1 + 4) = v118;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v117;
        }
        v143 = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 6) = v143;
        v144 = (void *)*((_QWORD *)v3 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)v3 + 7);
        *((_QWORD *)a1 + 8) = v144;
        a1[72] = v3[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)v3 + 10);
        v145 = *((_QWORD *)v3 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v146 = v144;
        swift_bridgeObjectRetain();
        if (v145)
        {
          v147 = *((_QWORD *)v3 + 15);
          *((_QWORD *)a1 + 14) = v145;
          *((_QWORD *)a1 + 15) = v147;
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v145 - 8))((uint64_t)(a1 + 88), (uint64_t)(v3 + 88), v145);
        }
        else
        {
          v196 = *(_OWORD *)(v3 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(v3 + 88);
          *(_OWORD *)(a1 + 104) = v196;
          *((_QWORD *)a1 + 15) = *((_QWORD *)v3 + 15);
        }
        v197 = a1 + 128;
        v198 = v3 + 128;
        v199 = *((_QWORD *)v3 + 19);
        if (v199)
        {
          v200 = *((_QWORD *)v3 + 20);
          *((_QWORD *)a1 + 19) = v199;
          *((_QWORD *)a1 + 20) = v200;
          (**(void (***)(_OWORD *, _OWORD *))(v199 - 8))(v197, v198);
        }
        else
        {
          v207 = *((_OWORD *)v3 + 9);
          *v197 = *v198;
          *((_OWORD *)a1 + 9) = v207;
          *((_QWORD *)a1 + 20) = *((_QWORD *)v3 + 20);
        }
        goto LABEL_143;
      case 0xEu:
        v38 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v38;
        a1[16] = v3[16];
        v39 = v3 + 24;
        v40 = *((_QWORD *)v3 + 4);
        if (v40 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v39;
          *((_QWORD *)a1 + 4) = v40;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v39;
        }
        v134 = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 6) = v134;
        *((_QWORD *)a1 + 7) = *((_QWORD *)v3 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
LABEL_143:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v119 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v119;
        a1[16] = v3[16];
        v120 = v3 + 24;
        v121 = *((_QWORD *)v3 + 4);
        if (v121 >= 0x11)
        {
          *((_QWORD *)a1 + 3) = *v120;
          *((_QWORD *)a1 + 4) = v121;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)v120;
        }
        v148 = *((_QWORD *)v3 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 6) = v148;
        v149 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v149] = *(_QWORD *)&v3[v149];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v150 = (char *)&loc_1BB2582BC + 4 * word_1BB8FCA22[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        v331 = v6;
        v41 = *((_QWORD *)v3 + 1);
        *(_QWORD *)a1 = *(_QWORD *)v3;
        *((_QWORD *)a1 + 1) = v41;
        v42 = *((_QWORD *)v3 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)v3 + 2);
        *((_QWORD *)a1 + 3) = v42;
        v43 = *((_QWORD *)v3 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)v3 + 4);
        *((_QWORD *)a1 + 5) = v43;
        *((_WORD *)a1 + 24) = *((_WORD *)v3 + 24);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(v3 + 56);
        v44 = *((_QWORD *)v3 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)v3 + 9);
        *((_QWORD *)a1 + 10) = v44;
        v45 = *((_QWORD *)v3 + 12);
        *((_QWORD *)a1 + 11) = *((_QWORD *)v3 + 11);
        *((_QWORD *)a1 + 12) = v45;
        *((_QWORD *)a1 + 13) = *((_QWORD *)v3 + 13);
        a1[112] = v3[112];
        v46 = *((_QWORD *)v3 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)v3 + 15);
        *((_QWORD *)a1 + 16) = v46;
        a1[136] = v3[136];
        v47 = *((_QWORD *)v3 + 19);
        *((_QWORD *)a1 + 18) = *((_QWORD *)v3 + 18);
        *((_QWORD *)a1 + 19) = v47;
        v48 = *((_QWORD *)v3 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)v3 + 20);
        *((_QWORD *)a1 + 21) = v48;
        a1[184] = v3[184];
        *((_QWORD *)a1 + 22) = *((_QWORD *)v3 + 22);
        v49 = *((_QWORD *)v3 + 25);
        *((_QWORD *)a1 + 24) = *((_QWORD *)v3 + 24);
        *((_QWORD *)a1 + 25) = v49;
        a1[224] = v3[224];
        v50 = *((_QWORD *)v3 + 27);
        *((_QWORD *)a1 + 26) = *((_QWORD *)v3 + 26);
        *((_QWORD *)a1 + 27) = v50;
        v51 = v3 + 232;
        v52 = *((_QWORD *)v3 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v52 >= 0x11)
        {
          *((_QWORD *)a1 + 29) = *v51;
          *((_QWORD *)a1 + 30) = v52;
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)v51;
        }
        v6 = v331;
LABEL_142:
        swift_storeEnumTagMultiPayload();
        v3 = (char *)v335;
        break;
      default:
        memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        break;
    }
    v297 = v6;
    v298 = v6[5];
    v299 = &a1[v298];
    v300 = &v3[v298];
    v301 = *(_QWORD *)&v3[v298 + 8];
    *(_QWORD *)v299 = *(_QWORD *)&v3[v298];
    *((_QWORD *)v299 + 1) = v301;
    v302 = *(_QWORD *)&v3[v298 + 24];
    *((_QWORD *)v299 + 2) = *(_QWORD *)&v3[v298 + 16];
    *((_QWORD *)v299 + 3) = v302;
    v303 = *(_QWORD *)&v3[v298 + 40];
    *((_QWORD *)v299 + 4) = *(_QWORD *)&v3[v298 + 32];
    *((_QWORD *)v299 + 5) = v303;
    v304 = &v3[v298 + 48];
    v305 = *(_QWORD *)&v3[v298 + 56];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v305 >= 0xF)
    {
      *((_QWORD *)v299 + 6) = *(_QWORD *)v304;
      *((_QWORD *)v299 + 7) = v305;
      swift_bridgeObjectRetain();
    }
    else
    {
      *((_OWORD *)v299 + 3) = *(_OWORD *)v304;
    }
    v306 = *((_QWORD *)v300 + 9);
    *((_QWORD *)v299 + 8) = *((_QWORD *)v300 + 8);
    *((_QWORD *)v299 + 9) = v306;
    v307 = *((_QWORD *)v300 + 11);
    *((_QWORD *)v299 + 10) = *((_QWORD *)v300 + 10);
    *((_QWORD *)v299 + 11) = v307;
    v308 = *((_QWORD *)v300 + 13);
    *((_QWORD *)v299 + 12) = *((_QWORD *)v300 + 12);
    *((_QWORD *)v299 + 13) = v308;
    *((_QWORD *)v299 + 14) = *((_QWORD *)v300 + 14);
    v299[120] = v300[120];
    v309 = v297[6];
    v310 = *(_QWORD *)((char *)v335 + v309);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1BA728598(v310);
    v13 = v336;
    *(_QWORD *)&v336[v309] = v310;
    v311 = v297[7];
    v312 = &v336[v311];
    v313 = (char *)v335 + v311;
    v314 = sub_1BB86FE38();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 16))(v312, v313, v314);
    v315 = v297[8];
    v316 = &v336[v315];
    v317 = (_QWORD *)((char *)v335 + v315);
    v318 = v317[1];
    if (v318)
    {
      *(_QWORD *)v316 = *v317;
      *((_QWORD *)v316 + 1) = v318;
      *((_QWORD *)v316 + 2) = v317[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)v316 = *(_OWORD *)v317;
      *((_QWORD *)v316 + 2) = v317[2];
    }
  }
  return v13;
}

char *assignWithCopy for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int *v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  char v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  int *v35;
  uint64_t v36;
  char *v37;
  int *v38;
  unsigned int (*v39)(char *, uint64_t, int *);
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  id v45;
  id v46;
  __int128 v47;
  __int128 v48;
  int v49;
  void *v50;
  uint64_t v51;
  void *v52;
  uint64_t v53;
  id v54;
  id v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  int *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  uint64_t v78;
  char *v79;
  char *v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void *v96;
  id v97;
  uint64_t v98;
  char v99;
  void *v100;
  uint64_t v101;
  id v102;
  uint64_t v103;
  char *v104;
  __int128 v105;
  __int128 v106;
  _OWORD *v107;
  __int128 *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  unsigned int (*v115)(char *, uint64_t, uint64_t);
  uint64_t v116;
  __int128 v117;
  __int128 v118;
  _OWORD *v119;
  __int128 *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  int *v126;
  uint64_t v127;
  char *v128;
  int *v129;
  unsigned int (*v130)(char *, uint64_t, int *);
  _QWORD *v131;
  uint64_t v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  uint64_t v138;
  uint64_t v139;
  void (*v140)(char *, char *, uint64_t);
  id v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  _OWORD *v151;
  __int128 *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  unint64_t v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  void *v166;
  uint64_t v167;
  void *v168;
  uint64_t v169;
  id v170;
  id v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  void *v175;
  id v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  void *v180;
  id v181;
  uint64_t v182;
  char v183;
  void *v184;
  id v185;
  void *v186;
  uint64_t v187;
  void *v188;
  uint64_t v189;
  id v190;
  id v191;
  __int128 v192;
  __int128 v193;
  uint64_t v194;
  uint64_t v195;
  void *v196;
  uint64_t v197;
  char *v198;
  char *v199;
  int *v200;
  char *v201;
  id v202;
  char *v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  _QWORD *v211;
  _QWORD *v212;
  uint64_t v213;
  unint64_t v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  void *v221;
  id v222;
  uint64_t v223;
  void *v224;
  void (*v225)(_QWORD *, _QWORD, uint64_t, int *);
  id v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  int EnumCaseMultiPayload;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  char *v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  char *v243;
  char *v244;
  unint64_t v245;
  uint64_t v246;
  unint64_t v247;
  unint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  __int128 v259;
  char *result;
  uint64_t v261;
  _QWORD *v262;
  char *v263;
  uint64_t v264;
  char *v265;
  uint64_t v266;
  int *v267;
  char *__dst;
  _QWORD *__dsta;
  void (*__dstb)(char *, char *, void *);
  int *v271;
  char *v272;
  void *v273;
  uint64_t v274;
  int *v275;
  char *v276;
  int *v277;
  int *v278;
  int *v279;

  if (a1 != a2)
  {
    sub_1BA6DB314((uint64_t)a1);
    v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v7 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v7;
        v8 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        if (v8 >= 0x11)
        {
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        }
        goto LABEL_138;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v29 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v29;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v30 = *((_QWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v30 >= 0x11)
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
        }
        goto LABEL_138;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v9 = (int *)type metadata accessor for FeedBannerAd();
        v10 = v9[5];
        v11 = &a1[v10];
        v12 = &a2[v10];
        v13 = sub_1BB8721C0();
        v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v14(v11, v12, v13);
        *(_QWORD *)&a1[v9[6]] = *(_QWORD *)&a2[v9[6]];
        v15 = v9[7];
        v16 = &a1[v15];
        v17 = &a2[v15];
        v18 = v17[8];
        *(_QWORD *)v16 = *(_QWORD *)v17;
        v16[8] = v18;
        v19 = v9[8];
        v20 = &a1[v19];
        v21 = &a2[v19];
        if (*((_QWORD *)v21 + 1) >= 0x11uLL)
          goto LABEL_38;
        *(_OWORD *)v20 = *(_OWORD *)v21;
        goto LABEL_138;
      case 3u:
        v277 = a3;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v31 = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 2) = v31;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        a1[56] = a2[56];
        v271 = (int *)type metadata accessor for FeedHeadline(0);
        v32 = v271[10];
        v33 = &a1[v32];
        v34 = &a2[v32];
        *v33 = a2[v32];
        v33[1] = a2[v32 + 1];
        v35 = (int *)type metadata accessor for FeedHeadline.State(0);
        v36 = v35[6];
        __dst = &v33[v36];
        v37 = &v34[v36];
        v38 = (int *)type metadata accessor for SharedItem();
        v266 = *((_QWORD *)v38 - 1);
        v39 = *(unsigned int (**)(char *, uint64_t, int *))(v266 + 48);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_unknownObjectRetain();
        if (v39(v37, 1, v38))
        {
          v40 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          v135 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(__dst, v37, v135);
          __dst[v38[5]] = v37[v38[5]];
          v136 = v38[6];
          v137 = *(void **)&v37[v136];
          *(_QWORD *)&__dst[v136] = v137;
          v138 = v38[7];
          v276 = &__dst[v138];
          v265 = &v37[v138];
          v139 = sub_1BB86C67C();
          v140 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v139 - 8) + 16);
          v141 = v137;
          v140(v276, v265, v139);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v266 + 56))(__dst, 0, 1, v38);
        }
        a3 = v277;
        v33[v35[7]] = v34[v35[7]];
        v33[v35[8]] = v34[v35[8]];
        v33[v35[9]] = v34[v35[9]];
        v33[v35[10]] = v34[v35[10]];
        v142 = v271[11];
        v143 = &a1[v142];
        v144 = &a2[v142];
        v145 = sub_1BB871B24();
        v146 = *(_QWORD *)(v145 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v146 + 48))(v144, 1, v145))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v146 + 16))(v143, v144, v145);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v146 + 56))(v143, 0, 1, v145);
        }
        v154 = v271[12];
        v155 = &a1[v154];
        v156 = &a2[v154];
        if (*((_QWORD *)v156 + 1) >= 0x11uLL)
        {
          *(_QWORD *)v155 = *(_QWORD *)v156;
          *((_QWORD *)v155 + 1) = *((_QWORD *)v156 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v155 = *(_OWORD *)v156;
        }
        v157 = v271[13];
        v158 = *(_QWORD *)&a2[v157];
        if (v158 >= 2)
        {
          if (v158 == 2)
          {
            *(_QWORD *)&a1[v157] = 2;
          }
          else
          {
            *(_QWORD *)&a1[v157] = v158;
            swift_unknownObjectRetain();
          }
        }
        else
        {
          *(_QWORD *)&a1[v157] = v158;
        }
        v174 = v271[14];
        v175 = *(void **)&a2[v174];
        *(_QWORD *)&a1[v174] = v175;
        v176 = v175;
        goto LABEL_138;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v22 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v22;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v85 = (int *)type metadata accessor for FeedWebEmbed();
        v86 = v85[8];
        v87 = &a1[v86];
        v88 = &a2[v86];
        v89 = sub_1BB86C67C();
        v90 = *(_QWORD *)(v89 - 8);
        v91 = *(void (**)(char *, char *, uint64_t))(v90 + 16);
        swift_bridgeObjectRetain();
        v91(v87, v88, v89);
        v275 = v85;
        v92 = v85[9];
        v93 = &a1[v92];
        v94 = &a2[v92];
        __dstb = (void (*)(char *, char *, void *))v91;
        v273 = (void *)v89;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(&a2[v92], 1, v89))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
        }
        else
        {
          v91(v93, v94, v89);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v90 + 56))(v93, 0, 1, v89);
        }
        *(_QWORD *)&a1[v85[10]] = *(_QWORD *)&a2[v85[10]];
        *(_QWORD *)&a1[v85[11]] = *(_QWORD *)&a2[v85[11]];
        v110 = v85[12];
        v111 = &a1[v110];
        v112 = &a2[v110];
        v113 = type metadata accessor for FeedHeadline(0);
        v114 = *(_QWORD *)(v113 - 8);
        v115 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v114 + 48);
        swift_retain();
        swift_retain();
        if (v115(v112, 1, v113))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
        }
        else
        {
          v264 = v114;
          v267 = (int *)v113;
          v278 = a3;
          *(_QWORD *)v111 = *(_QWORD *)v112;
          v262 = v112;
          *((_QWORD *)v111 + 1) = *((_QWORD *)v112 + 1);
          v122 = *((_QWORD *)v112 + 2);
          v111[24] = v112[24];
          *((_QWORD *)v111 + 2) = v122;
          *((_QWORD *)v111 + 4) = *((_QWORD *)v112 + 4);
          *((_QWORD *)v111 + 5) = *((_QWORD *)v112 + 5);
          *((_QWORD *)v111 + 6) = *((_QWORD *)v112 + 6);
          v111[56] = v112[56];
          v123 = *(int *)(v113 + 40);
          v124 = &v111[v123];
          v125 = &v112[v123];
          *v124 = v112[v123];
          v124[1] = v112[v123 + 1];
          v126 = (int *)type metadata accessor for FeedHeadline.State(0);
          v127 = v126[6];
          v263 = &v124[v127];
          v128 = &v125[v127];
          v129 = (int *)type metadata accessor for SharedItem();
          v261 = *((_QWORD *)v129 - 1);
          v130 = *(unsigned int (**)(char *, uint64_t, int *))(v261 + 48);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_unknownObjectRetain();
          v131 = v111;
          if (v130(v128, 1, v129))
          {
            v132 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(v263, v128, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
          }
          else
          {
            v194 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v263, v128, v194);
            v263[v129[5]] = v128[v129[5]];
            v195 = v129[6];
            v196 = *(void **)&v128[v195];
            *(_QWORD *)&v263[v195] = v196;
            v197 = v129[7];
            v198 = v128;
            v199 = &v263[v197];
            v200 = v126;
            v201 = &v198[v197];
            v202 = v196;
            v203 = v201;
            v126 = v200;
            __dstb(v199, v203, v273);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v261 + 56))(v263, 0, 1, v129);
          }
          v124[v126[7]] = v125[v126[7]];
          v124[v126[8]] = v125[v126[8]];
          v124[v126[9]] = v125[v126[9]];
          v124[v126[10]] = v125[v126[10]];
          v204 = v267[11];
          v205 = (char *)v131 + v204;
          v206 = (char *)v262 + v204;
          v207 = sub_1BB871B24();
          v208 = *(_QWORD *)(v207 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v206, 1, v207))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v208 + 16))(v205, v206, v207);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v208 + 56))(v205, 0, 1, v207);
          }
          a3 = v278;
          v210 = v267[12];
          v211 = (_QWORD *)((char *)v131 + v210);
          v212 = (_QWORD *)((char *)v262 + v210);
          if (v212[1] >= 0x11uLL)
          {
            *v211 = *v212;
            v211[1] = v212[1];
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)v211 = *(_OWORD *)v212;
          }
          v213 = v267[13];
          v214 = *(_QWORD *)((char *)v262 + v213);
          if (v214 >= 2)
          {
            if (v214 == 2)
            {
              *(_QWORD *)((char *)v131 + v213) = 2;
            }
            else
            {
              *(_QWORD *)((char *)v131 + v213) = v214;
              swift_unknownObjectRetain();
            }
          }
          else
          {
            *(_QWORD *)((char *)v131 + v213) = v214;
          }
          v223 = v267[14];
          v224 = *(void **)((char *)v262 + v223);
          *(_QWORD *)((char *)v131 + v223) = v224;
          v225 = *(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v264 + 56);
          v226 = v224;
          v225(v131, 0, 1, v267);
        }
        v227 = v275[13];
        v228 = &a1[v227];
        v229 = &a2[v227];
        v230 = type metadata accessor for WebEmbedDataVisualization();
        v231 = *(_QWORD *)(v230 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48))(v229, 1, v230))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v228, v229, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v228 = *(_QWORD *)v229;
          if (EnumCaseMultiPayload == 1)
          {
            *((_QWORD *)v228 + 1) = *((_QWORD *)v229 + 1);
            v234 = type metadata accessor for GenericDataVisualization();
            v235 = *(int *)(v234 + 20);
            v236 = &v228[v235];
            v279 = a3;
            v237 = &v229[v235];
            swift_bridgeObjectRetain();
            v238 = v237;
            a3 = v279;
            __dstb(v236, v238, v273);
            *(_QWORD *)&v228[*(int *)(v234 + 24)] = *(_QWORD *)&v229[*(int *)(v234 + 24)];
            swift_bridgeObjectRetain();
          }
          else
          {
            swift_retain();
          }
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v231 + 56))(v228, 0, 1, v230);
        }
        a1[v275[14]] = a2[v275[14]];
        goto LABEL_138;
      case 5u:
        v41 = *(void **)a2;
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        a1[25] = a2[25];
        v42 = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        *((_QWORD *)a1 + 4) = v42;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v43 = (void *)*((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 7) = v43;
        a1[64] = a2[64];
        v44 = *((_QWORD *)a2 + 10);
        v45 = v41;
        swift_bridgeObjectRetain();
        v46 = v43;
        if (v44 == 1)
        {
          v47 = *(_OWORD *)(a2 + 72);
          v48 = *(_OWORD *)(a2 + 104);
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
          *(_OWORD *)(a1 + 104) = v48;
          *(_OWORD *)(a1 + 72) = v47;
        }
        else
        {
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          v96 = (void *)*((_QWORD *)a2 + 13);
          *((_QWORD *)a1 + 13) = v96;
          *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v97 = v96;
        }
        if (*((_QWORD *)a2 + 16) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        }
        a1[136] = a2[136];
        goto LABEL_138;
      case 6u:
        v49 = a2[281];
        if (v49 == 2)
        {
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          v161 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v161;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          v162 = *((_QWORD *)a2 + 11);
          swift_bridgeObjectRetain();
          swift_unknownObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v162 == 1)
          {
            *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
            v163 = *((_OWORD *)a2 + 6);
            v164 = *((_OWORD *)a2 + 7);
            v165 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 7) = v164;
            *((_OWORD *)a1 + 8) = v165;
            *((_OWORD *)a1 + 6) = v163;
          }
          else
          {
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            v182 = *((_QWORD *)a2 + 15);
            swift_bridgeObjectRetain();
            if (v182)
            {
              *((_QWORD *)a1 + 15) = v182;
              *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
              (**(void (***)(uint64_t, uint64_t, uint64_t))(v182 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v182);
              v183 = a2[144];
              *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
              a1[144] = v183;
            }
            else
            {
              v239 = *((_OWORD *)a2 + 6);
              v240 = *((_OWORD *)a2 + 7);
              v241 = *((_OWORD *)a2 + 8);
              a1[144] = a2[144];
              *((_OWORD *)a1 + 7) = v240;
              *((_OWORD *)a1 + 8) = v241;
              *((_OWORD *)a1 + 6) = v239;
            }
          }
        }
        else if (v49 == 1)
        {
          v50 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          a1[25] = a2[25];
          v51 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v51;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          v52 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 7) = v52;
          a1[64] = a2[64];
          v53 = *((_QWORD *)a2 + 10);
          v54 = v50;
          swift_bridgeObjectRetain();
          v55 = v52;
          if (v53 == 1)
          {
            v56 = *(_OWORD *)(a2 + 72);
            v57 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v57;
            *(_OWORD *)(a1 + 72) = v56;
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
            v180 = (void *)*((_QWORD *)a2 + 13);
            *((_QWORD *)a1 + 13) = v180;
            *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v181 = v180;
          }
          if (*((_QWORD *)a2 + 16) >= 0x11uLL)
          {
            *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          a1[136] = a2[136];
          v186 = (void *)*((_QWORD *)a2 + 18);
          if (v186)
          {
            *((_QWORD *)a1 + 18) = v186;
            *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
            *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
            a1[168] = a2[168];
            a1[169] = a2[169];
            v187 = *((_QWORD *)a2 + 22);
            a1[184] = a2[184];
            *((_QWORD *)a1 + 22) = v187;
            *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
            v188 = (void *)*((_QWORD *)a2 + 25);
            *((_QWORD *)a1 + 25) = v188;
            a1[208] = a2[208];
            v189 = *((_QWORD *)a2 + 28);
            v190 = v186;
            swift_bridgeObjectRetain();
            v191 = v188;
            if (v189 == 1)
            {
              v192 = *(_OWORD *)(a2 + 216);
              v193 = *(_OWORD *)(a2 + 248);
              *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
              *(_OWORD *)(a1 + 248) = v193;
              *(_OWORD *)(a1 + 216) = v192;
            }
            else
            {
              *((_QWORD *)a1 + 27) = *((_QWORD *)a2 + 27);
              *((_QWORD *)a1 + 28) = *((_QWORD *)a2 + 28);
              *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
              *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
              v221 = (void *)*((_QWORD *)a2 + 31);
              *((_QWORD *)a1 + 31) = v221;
              *((_QWORD *)a1 + 32) = *((_QWORD *)a2 + 32);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v222 = v221;
            }
            if (*((_QWORD *)a2 + 34) >= 0x11uLL)
            {
              *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
              *((_QWORD *)a1 + 34) = *((_QWORD *)a2 + 34);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
            }
            a1[280] = a2[280];
          }
          else
          {
            *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
            v215 = *((_OWORD *)a2 + 10);
            v216 = *((_OWORD *)a2 + 11);
            v217 = *((_OWORD *)a2 + 13);
            *((_OWORD *)a1 + 12) = *((_OWORD *)a2 + 12);
            *((_OWORD *)a1 + 13) = v217;
            *((_OWORD *)a1 + 10) = v215;
            *((_OWORD *)a1 + 11) = v216;
            v218 = *((_OWORD *)a2 + 14);
            v219 = *((_OWORD *)a2 + 15);
            v220 = *((_OWORD *)a2 + 16);
            *(_OWORD *)(a1 + 265) = *(_OWORD *)(a2 + 265);
            *((_OWORD *)a1 + 15) = v219;
            *((_OWORD *)a1 + 16) = v220;
            *((_OWORD *)a1 + 14) = v218;
          }
        }
        else
        {
          v166 = *(void **)a2;
          *(_QWORD *)a1 = *(_QWORD *)a2;
          *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
          *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
          a1[24] = a2[24];
          a1[25] = a2[25];
          v167 = *((_QWORD *)a2 + 4);
          a1[40] = a2[40];
          *((_QWORD *)a1 + 4) = v167;
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          v168 = (void *)*((_QWORD *)a2 + 7);
          *((_QWORD *)a1 + 7) = v168;
          a1[64] = a2[64];
          v169 = *((_QWORD *)a2 + 10);
          v170 = v166;
          swift_bridgeObjectRetain();
          v171 = v168;
          if (v169 == 1)
          {
            v172 = *(_OWORD *)(a2 + 72);
            v173 = *(_OWORD *)(a2 + 104);
            *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
            *(_OWORD *)(a1 + 104) = v173;
            *(_OWORD *)(a1 + 72) = v172;
          }
          else
          {
            *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
            *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
            *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
            *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
            v184 = (void *)*((_QWORD *)a2 + 13);
            *((_QWORD *)a1 + 13) = v184;
            *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v185 = v184;
          }
          if (*((_QWORD *)a2 + 16) >= 0x11uLL)
          {
            *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
          }
          a1[136] = a2[136];
        }
        a1[281] = v49;
        goto LABEL_138;
      case 7u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        v58 = *((_QWORD *)a2 + 4);
        a1[40] = a2[40];
        *((_QWORD *)a1 + 4) = v58;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        v59 = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v59 == 1)
        {
          *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
          v60 = *((_OWORD *)a2 + 6);
          v61 = *((_OWORD *)a2 + 7);
          v62 = *((_OWORD *)a2 + 8);
          a1[144] = a2[144];
          *((_OWORD *)a1 + 7) = v61;
          *((_OWORD *)a1 + 8) = v62;
          *((_OWORD *)a1 + 6) = v60;
        }
        else
        {
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          v98 = *((_QWORD *)a2 + 15);
          swift_bridgeObjectRetain();
          if (v98)
          {
            *((_QWORD *)a1 + 15) = v98;
            *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
            (**(void (***)(uint64_t, uint64_t, uint64_t))(v98 - 8))((uint64_t)(a1 + 96), (uint64_t)(a2 + 96), v98);
            v99 = a2[144];
            *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
            a1[144] = v99;
          }
          else
          {
            v177 = *((_OWORD *)a2 + 6);
            v178 = *((_OWORD *)a2 + 7);
            v179 = *((_OWORD *)a2 + 8);
            a1[144] = a2[144];
            *((_OWORD *)a1 + 7) = v178;
            *((_OWORD *)a1 + 8) = v179;
            *((_OWORD *)a1 + 6) = v177;
          }
        }
        goto LABEL_138;
      case 8u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v63 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v64 = &a1[v63];
        v65 = &a2[v63];
        *(_QWORD *)v64 = *(_QWORD *)&a2[v63];
        *((_QWORD *)v64 + 1) = *(_QWORD *)&a2[v63 + 8];
        *((_QWORD *)v64 + 2) = *(_QWORD *)&a2[v63 + 16];
        *((_QWORD *)v64 + 3) = *(_QWORD *)&a2[v63 + 24];
        v66 = type metadata accessor for FormatCustomItem.Resolved();
        v67 = *(int *)(v66 + 24);
        v272 = &v64[v67];
        v274 = v66;
        v68 = &v65[v67];
        v69 = type metadata accessor for FormatCustomItem.Action();
        __dsta = *(_QWORD **)(v69 - 8);
        v70 = (unsigned int (*)(char *, uint64_t, uint64_t))__dsta[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70(v68, 1, v69))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v272, v68, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
        }
        else
        {
          v148 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v272, v68, v148);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dsta[7])(v272, 0, 1, v69);
        }
        *(_QWORD *)&v64[*(int *)(v274 + 28)] = *(_QWORD *)&v65[*(int *)(v274 + 28)];
        swift_bridgeObjectRetain();
        goto LABEL_138;
      case 9u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v23 = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23)
        {
          *((_QWORD *)a1 + 7) = v23;
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8))((uint64_t)(a1 + 32), (uint64_t)(a2 + 32), v23);
        }
        else
        {
          v105 = *((_OWORD *)a2 + 2);
          v106 = *((_OWORD *)a2 + 3);
          *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
          *((_OWORD *)a1 + 2) = v105;
          *((_OWORD *)a1 + 3) = v106;
        }
        v107 = a1 + 72;
        v108 = (__int128 *)(a2 + 72);
        v109 = *((_QWORD *)a2 + 12);
        if (v109)
        {
          *((_QWORD *)a1 + 12) = v109;
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          (**(void (***)(_OWORD *, __int128 *))(v109 - 8))(v107, v108);
        }
        else
        {
          v117 = *v108;
          v118 = *(_OWORD *)(a2 + 88);
          *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
          *v107 = v117;
          *(_OWORD *)(a1 + 88) = v118;
        }
        v119 = a1 + 112;
        v120 = (__int128 *)(a2 + 112);
        v121 = *((_QWORD *)a2 + 17);
        if (v121)
        {
          *((_QWORD *)a1 + 17) = v121;
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          (**(void (***)(_OWORD *, __int128 *))(v121 - 8))(v119, v120);
        }
        else
        {
          v133 = *v120;
          v134 = *((_OWORD *)a2 + 8);
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          *v119 = v133;
          *((_OWORD *)a1 + 8) = v134;
        }
        goto LABEL_138;
      case 0xAu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v72 = (int *)type metadata accessor for FeedEngagementBanner();
        v73 = v72[5];
        v74 = &a1[v73];
        v75 = &a2[v73];
        v76 = sub_1BB86EDAC();
        v77 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16);
        swift_bridgeObjectRetain();
        v77(v74, v75, v76);
        *(_QWORD *)&a1[v72[6]] = *(_QWORD *)&a2[v72[6]];
        v78 = v72[7];
        v79 = &a1[v78];
        v80 = &a2[v78];
        v81 = v80[8];
        *(_QWORD *)v79 = *(_QWORD *)v80;
        v79[8] = v81;
        v82 = v72[8];
        v20 = &a1[v82];
        v21 = &a2[v82];
        if (*((_QWORD *)v21 + 1) >= 0x11uLL)
        {
LABEL_38:
          *(_QWORD *)v20 = *(_QWORD *)v21;
          *((_QWORD *)v20 + 1) = *((_QWORD *)v21 + 1);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)v20 = *(_OWORD *)v21;
        }
        goto LABEL_138;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_retain();
        goto LABEL_138;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        v24 = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 3) = v24;
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xDu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v83 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v83;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v100 = (void *)*((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 8) = v100;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v101 = *((_QWORD *)a2 + 14);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v102 = v100;
        swift_bridgeObjectRetain();
        if (v101)
        {
          *((_QWORD *)a1 + 14) = v101;
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          (**(void (***)(uint64_t, uint64_t, uint64_t))(v101 - 8))((uint64_t)(a1 + 88), (uint64_t)(a2 + 88), v101);
        }
        else
        {
          v149 = *(_OWORD *)(a2 + 88);
          v150 = *(_OWORD *)(a2 + 104);
          *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
          *(_OWORD *)(a1 + 88) = v149;
          *(_OWORD *)(a1 + 104) = v150;
        }
        v151 = a1 + 128;
        v152 = (__int128 *)(a2 + 128);
        v153 = *((_QWORD *)a2 + 19);
        if (v153)
        {
          *((_QWORD *)a1 + 19) = v153;
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
          (**(void (***)(_OWORD *, __int128 *))(v153 - 8))(v151, v152);
        }
        else
        {
          v159 = *v152;
          v160 = *((_OWORD *)a2 + 9);
          *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
          *v151 = v159;
          *((_OWORD *)a1 + 9) = v160;
        }
        goto LABEL_138;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v25 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v25;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        goto LABEL_138;
      case 0xFu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v84 = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 1) = v84;
        if (*((_QWORD *)a2 + 4) >= 0x11uLL)
        {
          *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        }
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v103 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v103] = *(_QWORD *)&a2[v103];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        swift_bridgeObjectRetain();
        swift_unknownObjectRetain();
        v104 = (char *)&loc_1BB25A640 + 4 * word_1BB8FCA9C[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        a1[48] = a2[48];
        a1[49] = a2[49];
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        a1[112] = a2[112];
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = *((_QWORD *)a2 + 16);
        a1[136] = a2[136];
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
        v26 = *((_QWORD *)a2 + 22);
        a1[184] = a2[184];
        *((_QWORD *)a1 + 22) = v26;
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        v27 = *((_QWORD *)a2 + 27);
        a1[224] = a2[224];
        *((_QWORD *)a1 + 27) = v27;
        v28 = *((_QWORD *)a2 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v28 >= 0x11)
        {
          *((_QWORD *)a1 + 29) = *((_QWORD *)a2 + 29);
          *((_QWORD *)a1 + 30) = *((_QWORD *)a2 + 30);
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
        }
LABEL_138:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v242 = a3[5];
  v243 = &a1[v242];
  v244 = &a2[v242];
  *(_QWORD *)v243 = *(_QWORD *)&a2[v242];
  *((_QWORD *)v243 + 1) = *(_QWORD *)&a2[v242 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 2) = *((_QWORD *)v244 + 2);
  *((_QWORD *)v243 + 3) = *((_QWORD *)v244 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 4) = *((_QWORD *)v244 + 4);
  *((_QWORD *)v243 + 5) = *((_QWORD *)v244 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v245 = *((_QWORD *)v244 + 7);
  if (*((_QWORD *)v243 + 7) < 0xFuLL)
  {
    if (v245 >= 0xF)
    {
      *((_QWORD *)v243 + 6) = *((_QWORD *)v244 + 6);
      *((_QWORD *)v243 + 7) = *((_QWORD *)v244 + 7);
      swift_bridgeObjectRetain();
      goto LABEL_146;
    }
    goto LABEL_144;
  }
  if (v245 < 0xF)
  {
    sub_1BA905D68((uint64_t)(v243 + 48));
LABEL_144:
    *((_OWORD *)v243 + 3) = *((_OWORD *)v244 + 3);
    goto LABEL_146;
  }
  *((_QWORD *)v243 + 6) = *((_QWORD *)v244 + 6);
  *((_QWORD *)v243 + 7) = *((_QWORD *)v244 + 7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_146:
  *((_QWORD *)v243 + 8) = *((_QWORD *)v244 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 9) = *((_QWORD *)v244 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 10) = *((_QWORD *)v244 + 10);
  swift_retain();
  swift_release();
  *((_QWORD *)v243 + 11) = *((_QWORD *)v244 + 11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 12) = *((_QWORD *)v244 + 12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 13) = *((_QWORD *)v244 + 13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v243 + 14) = *((_QWORD *)v244 + 14);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v243[120] = v244[120];
  v246 = a3[6];
  v247 = *(_QWORD *)&a2[v246];
  sub_1BA728598(v247);
  v248 = *(_QWORD *)&a1[v246];
  *(_QWORD *)&a1[v246] = v247;
  sub_1BA7280A0(v248);
  v249 = a3[7];
  v250 = &a1[v249];
  v251 = &a2[v249];
  v252 = sub_1BB86FE38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 24))(v250, v251, v252);
  v253 = a3[8];
  v254 = &a1[v253];
  v255 = &a2[v253];
  v256 = *(_QWORD *)&a1[v253 + 8];
  v257 = *((_QWORD *)v255 + 1);
  if (v256)
  {
    if (v257)
    {
      *(_QWORD *)v254 = *(_QWORD *)v255;
      *((_QWORD *)v254 + 1) = *((_QWORD *)v255 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v254 + 2) = *((_QWORD *)v255 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BB25BEDC((uint64_t)v254);
      v258 = *((_QWORD *)v255 + 2);
      *(_OWORD *)v254 = *(_OWORD *)v255;
      *((_QWORD *)v254 + 2) = v258;
    }
  }
  else if (v257)
  {
    *(_QWORD *)v254 = *(_QWORD *)v255;
    *((_QWORD *)v254 + 1) = *((_QWORD *)v255 + 1);
    *((_QWORD *)v254 + 2) = *((_QWORD *)v255 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v259 = *(_OWORD *)v255;
    *((_QWORD *)v254 + 2) = *((_QWORD *)v255 + 2);
    *(_OWORD *)v254 = v259;
  }
  return a1;
}

uint64_t sub_1BB25BEDC(uint64_t a1)
{
  destroy for FormatOptionBinding();
  return a1;
}

char *initializeWithTake for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  int *v82;
  uint64_t v83;
  char *v84;
  int *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *result;
  uint64_t v121;
  uint64_t v122;
  int *v123;
  char *__dst;
  void (*v125)(char *, char *, uint64_t);
  uint64_t v126;
  char *v127;
  int *v128;
  int *v129;

  v6 = type metadata accessor for FeedItem(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v7 = (int *)type metadata accessor for FeedBannerAd();
      v8 = v7[5];
      v9 = &a1[v8];
      v10 = &a2[v8];
      v11 = sub_1BB8721C0();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
      v12 = v7[7];
      v13 = &a1[v12];
      v14 = &a2[v12];
      v13[8] = v14[8];
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
      goto LABEL_40;
    case 3u:
      v128 = a3;
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      a1[24] = a2[24];
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      a1[56] = a2[56];
      v15 = (int *)type metadata accessor for FeedHeadline(0);
      v16 = v15[10];
      v17 = &a1[v16];
      v18 = &a2[v16];
      *v17 = a2[v16];
      v17[1] = a2[v16 + 1];
      v19 = (int *)type metadata accessor for FeedHeadline.State(0);
      v20 = v19[6];
      v21 = &v17[v20];
      v22 = &v18[v20];
      v23 = (int *)type metadata accessor for SharedItem();
      v24 = *((_QWORD *)v23 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
      {
        v25 = type metadata accessor for FeedItem.SharedState(0);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        v60 = sub_1BB86C8B0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v21, v22, v60);
        v21[v23[5]] = v22[v23[5]];
        *(_QWORD *)&v21[v23[6]] = *(_QWORD *)&v22[v23[6]];
        v61 = v23[7];
        v127 = &v21[v61];
        v62 = &v22[v61];
        v63 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v127, v62, v63);
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
      }
      v17[v19[7]] = v18[v19[7]];
      v17[v19[8]] = v18[v19[8]];
      v17[v19[9]] = v18[v19[9]];
      v17[v19[10]] = v18[v19[10]];
      v64 = v15[11];
      v65 = &a1[v64];
      v66 = &a2[v64];
      v67 = sub_1BB871B24();
      v68 = *(_QWORD *)(v67 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
        memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
      }
      a3 = v128;
      *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
      v77 = v15[13];
      v78 = *(_QWORD *)&a2[v77];
      if (v78 == 2)
        v78 = 2;
      *(_QWORD *)&a1[v77] = v78;
      *(_QWORD *)&a1[v15[14]] = *(_QWORD *)&a2[v15[14]];
      goto LABEL_40;
    case 4u:
      v26 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v26;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v27 = (int *)type metadata accessor for FeedWebEmbed();
      v28 = v27[8];
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = sub_1BB86C67C();
      v32 = *(_QWORD *)(v31 - 8);
      v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      v33(v29, v30, v31);
      v34 = v27[9];
      v35 = &a1[v34];
      v36 = &a2[v34];
      v125 = v33;
      v126 = v31;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v31);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
      }
      *(_QWORD *)&a1[v27[10]] = *(_QWORD *)&a2[v27[10]];
      *(_QWORD *)&a1[v27[11]] = *(_QWORD *)&a2[v27[11]];
      v70 = v27[12];
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = (int *)type metadata accessor for FeedHeadline(0);
      v74 = *((_QWORD *)v73 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
      {
        sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
        memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
      }
      else
      {
        v122 = v74;
        v123 = v27;
        v129 = a3;
        *(_OWORD *)v71 = *(_OWORD *)v72;
        *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
        v71[24] = v72[24];
        *((_QWORD *)v71 + 4) = *((_QWORD *)v72 + 4);
        *(_OWORD *)(v71 + 40) = *(_OWORD *)(v72 + 40);
        v71[56] = v72[56];
        v79 = v73[10];
        v80 = &v71[v79];
        v81 = &v72[v79];
        *v80 = v72[v79];
        v80[1] = v72[v79 + 1];
        v82 = (int *)type metadata accessor for FeedHeadline.State(0);
        v83 = v82[6];
        __dst = &v80[v83];
        v84 = &v81[v83];
        v85 = (int *)type metadata accessor for SharedItem();
        v121 = *((_QWORD *)v85 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v121 + 48))(v84, 1, v85))
        {
          v86 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(__dst, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
        }
        else
        {
          v87 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(__dst, v84, v87);
          __dst[v85[5]] = v84[v85[5]];
          *(_QWORD *)&__dst[v85[6]] = *(_QWORD *)&v84[v85[6]];
          v125(&__dst[v85[7]], &v84[v85[7]], v126);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v121 + 56))(__dst, 0, 1, v85);
        }
        v80[v82[7]] = v81[v82[7]];
        v80[v82[8]] = v81[v82[8]];
        v80[v82[9]] = v81[v82[9]];
        v80[v82[10]] = v81[v82[10]];
        v88 = v73[11];
        v89 = &v71[v88];
        v90 = &v72[v88];
        v91 = sub_1BB871B24();
        v92 = *(_QWORD *)(v91 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v92 + 48))(v90, 1, v91))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v93 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v89, v90, v91);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v92 + 56))(v89, 0, 1, v91);
        }
        a3 = v129;
        v27 = v123;
        *(_OWORD *)&v71[v73[12]] = *(_OWORD *)&v72[v73[12]];
        v94 = v73[13];
        v95 = *(_QWORD *)&v72[v94];
        if (v95 == 2)
          v95 = 2;
        *(_QWORD *)&v71[v94] = v95;
        *(_QWORD *)&v71[v73[14]] = *(_QWORD *)&v72[v73[14]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v122 + 56))(v71, 0, 1, v73);
      }
      v96 = v27[13];
      v97 = &a1[v96];
      v98 = &a2[v96];
      v99 = type metadata accessor for WebEmbedDataVisualization();
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
      {
        sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)v97 = *(_OWORD *)v98;
          v102 = type metadata accessor for GenericDataVisualization();
          v125(&v97[*(int *)(v102 + 20)], &v98[*(int *)(v102 + 20)], v126);
          *(_QWORD *)&v97[*(int *)(v102 + 24)] = *(_QWORD *)&v98[*(int *)(v102 + 24)];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v97, v98, *(_QWORD *)(v100 + 64));
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
      }
      a1[v27[14]] = a2[v27[14]];
      goto LABEL_40;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
      v39 = &a1[v38];
      v40 = &a2[v38];
      v41 = *(_OWORD *)&a2[v38 + 16];
      *(_OWORD *)v39 = *(_OWORD *)&a2[v38];
      *((_OWORD *)v39 + 1) = v41;
      v42 = type metadata accessor for FormatCustomItem.Resolved();
      v43 = *(int *)(v42 + 24);
      v44 = &v39[v43];
      v45 = &v40[v43];
      v46 = type metadata accessor for FormatCustomItem.Action();
      v47 = *(_QWORD *)(v46 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
      {
        sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
        memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
      }
      else
      {
        v76 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 32))(v44, v45, v76);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
      *(_QWORD *)&v39[*(int *)(v42 + 28)] = *(_QWORD *)&v40[*(int *)(v42 + 28)];
      goto LABEL_40;
    case 0xAu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v49 = (int *)type metadata accessor for FeedEngagementBanner();
      v50 = v49[5];
      v51 = &a1[v50];
      v52 = &a2[v50];
      v53 = sub_1BB86EDAC();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
      *(_QWORD *)&a1[v49[6]] = *(_QWORD *)&a2[v49[6]];
      v54 = v49[7];
      v55 = &a1[v54];
      v56 = &a2[v54];
      v55[8] = v56[8];
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
LABEL_40:
      swift_storeEnumTagMultiPayload();
      break;
    case 0xFu:
      v57 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v57;
      a1[16] = a2[16];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
      *(_QWORD *)&a1[v58] = *(_QWORD *)&a2[v58];
      type metadata accessor for PuzzleStatistic();
      type metadata accessor for PuzzleStatisticCategory(0);
      v59 = (char *)&loc_1BB25C32C + 4 * word_1BB8FCAB2[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
      break;
  }
  v103 = a3[5];
  v104 = a3[6];
  v105 = &a1[v103];
  v106 = &a2[v103];
  *(_OWORD *)(v105 + 105) = *(_OWORD *)(v106 + 105);
  v107 = *((_OWORD *)v106 + 6);
  v108 = *((_OWORD *)v106 + 4);
  *((_OWORD *)v105 + 5) = *((_OWORD *)v106 + 5);
  *((_OWORD *)v105 + 6) = v107;
  v109 = *((_OWORD *)v106 + 1);
  *(_OWORD *)v105 = *(_OWORD *)v106;
  *((_OWORD *)v105 + 1) = v109;
  v110 = *((_OWORD *)v106 + 2);
  v111 = *((_OWORD *)v106 + 3);
  v112 = *(_QWORD *)&a2[v104];
  *((_OWORD *)v105 + 2) = v110;
  *((_OWORD *)v105 + 3) = v111;
  *((_OWORD *)v105 + 4) = v108;
  *(_QWORD *)&a1[v104] = v112;
  v113 = a3[7];
  v114 = &a1[v113];
  v115 = &a2[v113];
  v116 = sub_1BB86FE38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
  v117 = a3[8];
  v118 = &a1[v117];
  v119 = &a2[v117];
  *(_OWORD *)v118 = *(_OWORD *)v119;
  *((_QWORD *)v118 + 2) = *((_QWORD *)v119 + 2);
  return a1;
}

char *assignWithTake for FormatItemNodeData(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  int *v83;
  uint64_t v84;
  char *v85;
  int *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  _OWORD *v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  char *result;
  uint64_t v123;
  uint64_t v124;
  char *__dst;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  int *v128;
  char *v129;
  int *v130;
  int *v131;

  if (a1 != a2)
  {
    sub_1BA6DB314((uint64_t)a1);
    v6 = type metadata accessor for FeedItem(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v7 = (int *)type metadata accessor for FeedBannerAd();
        v8 = v7[5];
        v9 = &a1[v8];
        v10 = &a2[v8];
        v11 = sub_1BB8721C0();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        *(_QWORD *)&a1[v7[6]] = *(_QWORD *)&a2[v7[6]];
        v12 = v7[7];
        v13 = &a1[v12];
        v14 = &a2[v12];
        v13[8] = v14[8];
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)&a1[v7[8]] = *(_OWORD *)&a2[v7[8]];
        goto LABEL_41;
      case 3u:
        v130 = a3;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        a1[56] = a2[56];
        v15 = (int *)type metadata accessor for FeedHeadline(0);
        v16 = v15[10];
        v17 = &a1[v16];
        v18 = &a2[v16];
        *v17 = a2[v16];
        v17[1] = a2[v16 + 1];
        v19 = (int *)type metadata accessor for FeedHeadline.State(0);
        v20 = v19[6];
        v21 = &v17[v20];
        v22 = &v18[v20];
        v23 = (int *)type metadata accessor for SharedItem();
        v24 = *((_QWORD *)v23 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v24 + 48))(v22, 1, v23))
        {
          v25 = type metadata accessor for FeedItem.SharedState(0);
          memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v60 = sub_1BB86C8B0();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v21, v22, v60);
          v21[v23[5]] = v22[v23[5]];
          *(_QWORD *)&v21[v23[6]] = *(_QWORD *)&v22[v23[6]];
          v61 = v23[7];
          v129 = &v21[v61];
          v62 = &v22[v61];
          v63 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v129, v62, v63);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v24 + 56))(v21, 0, 1, v23);
        }
        v17[v19[7]] = v18[v19[7]];
        v17[v19[8]] = v18[v19[8]];
        v17[v19[9]] = v18[v19[9]];
        v17[v19[10]] = v18[v19[10]];
        v64 = v15[11];
        v65 = &a1[v64];
        v66 = &a2[v64];
        v67 = sub_1BB871B24();
        v68 = *(_QWORD *)(v67 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
          memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v69 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v65, v66, v67);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
        }
        a3 = v130;
        *(_OWORD *)&a1[v15[12]] = *(_OWORD *)&a2[v15[12]];
        v78 = v15[13];
        v79 = *(_QWORD *)&a2[v78];
        if (v79 == 2)
          v79 = 2;
        *(_QWORD *)&a1[v78] = v79;
        *(_QWORD *)&a1[v15[14]] = *(_QWORD *)&a2[v15[14]];
        goto LABEL_41;
      case 4u:
        v26 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v26;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v27 = (int *)type metadata accessor for FeedWebEmbed();
        v28 = v27[8];
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_1BB86C67C();
        v32 = *(_QWORD *)(v31 - 8);
        v33 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
        v33(v29, v30, v31);
        v128 = v27;
        v34 = v27[9];
        v35 = &a1[v34];
        v36 = &a2[v34];
        v126 = v33;
        v127 = v31;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(&a2[v34], 1, v31))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3D2E70, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
        }
        else
        {
          v33(v35, v36, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v35, 0, 1, v31);
        }
        v70 = v27;
        *(_QWORD *)&a1[v27[10]] = *(_QWORD *)&a2[v27[10]];
        *(_QWORD *)&a1[v27[11]] = *(_QWORD *)&a2[v27[11]];
        v71 = v27[12];
        v72 = &a1[v71];
        v73 = &a2[v71];
        v74 = (int *)type metadata accessor for FeedHeadline(0);
        v75 = *((_QWORD *)v74 - 1);
        if ((*(unsigned int (**)(char *, uint64_t, int *))(v75 + 48))(v73, 1, v74))
        {
          sub_1BA4A3FB4(0, (unint64_t *)&unk_1ED3B2DB0, (void (*)(uint64_t))type metadata accessor for FeedHeadline);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
        }
        else
        {
          v124 = v75;
          v131 = a3;
          *(_OWORD *)v72 = *(_OWORD *)v73;
          *((_QWORD *)v72 + 2) = *((_QWORD *)v73 + 2);
          v72[24] = v73[24];
          *((_QWORD *)v72 + 4) = *((_QWORD *)v73 + 4);
          *(_OWORD *)(v72 + 40) = *(_OWORD *)(v73 + 40);
          v72[56] = v73[56];
          v80 = v74[10];
          v81 = &v72[v80];
          v82 = &v73[v80];
          *v81 = v73[v80];
          v81[1] = v73[v80 + 1];
          v83 = (int *)type metadata accessor for FeedHeadline.State(0);
          v84 = v83[6];
          __dst = &v81[v84];
          v85 = &v82[v84];
          v86 = (int *)type metadata accessor for SharedItem();
          v123 = *((_QWORD *)v86 - 1);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(v123 + 48))(v85, 1, v86))
          {
            v87 = type metadata accessor for FeedItem.SharedState(0);
            memcpy(__dst, v85, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
          }
          else
          {
            v88 = sub_1BB86C8B0();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v88 - 8) + 32))(__dst, v85, v88);
            __dst[v86[5]] = v85[v86[5]];
            *(_QWORD *)&__dst[v86[6]] = *(_QWORD *)&v85[v86[6]];
            v126(&__dst[v86[7]], &v85[v86[7]], v127);
            (*(void (**)(char *, _QWORD, uint64_t, int *))(v123 + 56))(__dst, 0, 1, v86);
          }
          v81[v83[7]] = v82[v83[7]];
          v81[v83[8]] = v82[v83[8]];
          v81[v83[9]] = v82[v83[9]];
          v81[v83[10]] = v82[v83[10]];
          v89 = v74[11];
          v90 = &v72[v89];
          v91 = &v73[v89];
          v92 = sub_1BB871B24();
          v93 = *(_QWORD *)(v92 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
          {
            sub_1BA4A3FB4(0, (unint64_t *)&qword_1ED3B0B00, (void (*)(uint64_t))MEMORY[0x1E0D52718]);
            memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v94 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v90, v91, v92);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v93 + 56))(v90, 0, 1, v92);
          }
          v70 = v128;
          a3 = v131;
          *(_OWORD *)&v72[v74[12]] = *(_OWORD *)&v73[v74[12]];
          v95 = v74[13];
          v96 = *(_QWORD *)&v73[v95];
          if (v96 == 2)
            v96 = 2;
          *(_QWORD *)&v72[v95] = v96;
          *(_QWORD *)&v72[v74[14]] = *(_QWORD *)&v73[v74[14]];
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v124 + 56))(v72, 0, 1, v74);
        }
        v97 = v70[13];
        v98 = &a1[v97];
        v99 = &a2[v97];
        v100 = type metadata accessor for WebEmbedDataVisualization();
        v101 = *(_QWORD *)(v100 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
        {
          sub_1BA4A3FB4(0, &qword_1ED3CB5E0, (void (*)(uint64_t))type metadata accessor for WebEmbedDataVisualization);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_OWORD *)v98 = *(_OWORD *)v99;
            v103 = type metadata accessor for GenericDataVisualization();
            v126(&v98[*(int *)(v103 + 20)], &v99[*(int *)(v103 + 20)], v127);
            *(_QWORD *)&v98[*(int *)(v103 + 24)] = *(_QWORD *)&v99[*(int *)(v103 + 24)];
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v98, v99, *(_QWORD *)(v101 + 64));
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
        }
        a1[v70[14]] = a2[v70[14]];
        goto LABEL_41;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v38 = *(int *)(type metadata accessor for FeedCustomItem() + 20);
        v39 = &a1[v38];
        v40 = &a2[v38];
        v41 = *(_OWORD *)&a2[v38 + 16];
        *(_OWORD *)v39 = *(_OWORD *)&a2[v38];
        *((_OWORD *)v39 + 1) = v41;
        v42 = type metadata accessor for FormatCustomItem.Resolved();
        v43 = *(int *)(v42 + 24);
        v44 = &v39[v43];
        v45 = &v40[v43];
        v46 = type metadata accessor for FormatCustomItem.Action();
        v47 = *(_QWORD *)(v46 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
        {
          sub_1BA4A3FB4(0, &qword_1ED3C7270, (void (*)(uint64_t))type metadata accessor for FormatCustomItem.Action);
          memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
        }
        else
        {
          v77 = sub_1BB86C67C();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v77 - 8) + 32))(v44, v45, v77);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
        }
        *(_QWORD *)&v39[*(int *)(v42 + 28)] = *(_QWORD *)&v40[*(int *)(v42 + 28)];
        goto LABEL_41;
      case 0xAu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v49 = (int *)type metadata accessor for FeedEngagementBanner();
        v50 = v49[5];
        v51 = &a1[v50];
        v52 = &a2[v50];
        v53 = sub_1BB86EDAC();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v53 - 8) + 32))(v51, v52, v53);
        *(_QWORD *)&a1[v49[6]] = *(_QWORD *)&a2[v49[6]];
        v54 = v49[7];
        v55 = &a1[v54];
        v56 = &a2[v54];
        v55[8] = v56[8];
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *(_OWORD *)&a1[v49[8]] = *(_OWORD *)&a2[v49[8]];
LABEL_41:
        swift_storeEnumTagMultiPayload();
        break;
      case 0xFu:
        v57 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v57;
        a1[16] = a2[16];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
        v58 = *(int *)(type metadata accessor for FeedPuzzleStatistic() + 32);
        *(_QWORD *)&a1[v58] = *(_QWORD *)&a2[v58];
        type metadata accessor for PuzzleStatistic();
        type metadata accessor for PuzzleStatisticCategory(0);
        v59 = (char *)&loc_1BB25D6B0 + 4 * word_1BB8FCAC8[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v104 = a3[5];
  v105 = &a1[v104];
  v106 = &a2[v104];
  v107 = *(_QWORD *)&a2[v104 + 8];
  *(_QWORD *)v105 = *(_QWORD *)&a2[v104];
  *((_QWORD *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  v108 = *((_QWORD *)v106 + 3);
  *((_QWORD *)v105 + 2) = *((_QWORD *)v106 + 2);
  *((_QWORD *)v105 + 3) = v108;
  swift_bridgeObjectRelease();
  v109 = *((_QWORD *)v106 + 5);
  *((_QWORD *)v105 + 4) = *((_QWORD *)v106 + 4);
  *((_QWORD *)v105 + 5) = v109;
  swift_bridgeObjectRelease();
  v110 = v106 + 48;
  if (*((_QWORD *)v105 + 7) < 0xFuLL)
    goto LABEL_45;
  v111 = *((_QWORD *)v106 + 7);
  if (v111 < 0xF)
  {
    sub_1BA905D68((uint64_t)(v105 + 48));
LABEL_45:
    *((_OWORD *)v105 + 3) = *v110;
    goto LABEL_47;
  }
  *((_QWORD *)v105 + 6) = *(_QWORD *)v110;
  *((_QWORD *)v105 + 7) = v111;
  swift_bridgeObjectRelease();
LABEL_47:
  *((_QWORD *)v105 + 8) = *((_QWORD *)v106 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v105 + 9) = *((_QWORD *)v106 + 9);
  swift_bridgeObjectRelease();
  *((_QWORD *)v105 + 10) = *((_QWORD *)v106 + 10);
  swift_release();
  *((_QWORD *)v105 + 11) = *((_QWORD *)v106 + 11);
  swift_bridgeObjectRelease();
  *((_QWORD *)v105 + 12) = *((_QWORD *)v106 + 12);
  swift_bridgeObjectRelease();
  *((_QWORD *)v105 + 13) = *((_QWORD *)v106 + 13);
  swift_bridgeObjectRelease();
  *((_QWORD *)v105 + 14) = *((_QWORD *)v106 + 14);
  swift_bridgeObjectRelease();
  v105[120] = v106[120];
  v112 = a3[6];
  v113 = *(_QWORD *)&a1[v112];
  *(_QWORD *)&a1[v112] = *(_QWORD *)&a2[v112];
  sub_1BA7280A0(v113);
  v114 = a3[7];
  v115 = &a1[v114];
  v116 = &a2[v114];
  v117 = sub_1BB86FE38();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 40))(v115, v116, v117);
  v118 = a3[8];
  v119 = (uint64_t)&a1[v118];
  v120 = &a2[v118];
  if (!*(_QWORD *)&a1[v118 + 8])
  {
LABEL_51:
    *(_OWORD *)v119 = *(_OWORD *)v120;
    *(_QWORD *)(v119 + 16) = *((_QWORD *)v120 + 2);
    return a1;
  }
  v121 = *((_QWORD *)v120 + 1);
  if (!v121)
  {
    sub_1BB25BEDC(v119);
    goto LABEL_51;
  }
  *(_QWORD *)v119 = *(_QWORD *)v120;
  *(_QWORD *)(v119 + 8) = v121;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v119 + 16) = *((_QWORD *)v120 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatItemNodeData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB25E744(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;

  v6 = type metadata accessor for FeedItem(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = sub_1BB86FE38();
    v10 = a1 + *(int *)(a3 + 28);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for FormatItemNodeData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB25E7FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = type metadata accessor for FeedItem(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
      return result;
    }
    v10 = sub_1BB86FE38();
    v12 = a1 + *(int *)(a4 + 28);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

_QWORD *WeatherKitService.__allocating_init(weatherServiceProvider:stringBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;

  v6 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v6);
  v7 = (_QWORD *)swift_allocObject();
  if (qword_1ED39DF78 != -1)
    swift_once();
  sub_1BB25EB44();
  swift_allocObject();
  swift_retain();
  v7[4] = sub_1BB86D2F4();
  sub_1BB86DE64();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AC9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE9B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v7[2] = sub_1BB86E740();
  v7[3] = a3;
  return v7;
}

_QWORD *WeatherKitService.init(weatherServiceProvider:stringBuilder:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;

  v7 = sub_1BB86DE7C();
  MEMORY[0x1E0C80A78](v7);
  if (qword_1ED39DF78 != -1)
    swift_once();
  sub_1BB25EB44();
  swift_allocObject();
  swift_retain();
  v3[4] = sub_1BB86D2F4();
  sub_1BB86DE64();
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a1;
  *(_QWORD *)(v8 + 24) = a2;
  sub_1BA4B07F0(0, (unint64_t *)&unk_1ED3AC9A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE9B8], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4918]);
  swift_allocObject();
  v3[2] = sub_1BB86E740();
  v3[3] = a3;
  return v3;
}

void sub_1BB25EB44()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED39A498)
  {
    v0 = sub_1BB86D2E8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED39A498);
  }
}

uint64_t sub_1BB25EBA0@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_1BB25EBC8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB25EBEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t WeatherKitService.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t WeatherKitService.__deallocating_deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB25EC74(uint64_t *a1)
{
  return WeatherKitService.weather(for:)(a1);
}

uint64_t WeatherKitService.weather(for:)(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  double v23;

  v2 = v1;
  v4 = sub_1BB872688();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v10 = &v19[-v9];
  v11 = *a1;
  v12 = a1[1];
  sub_1BA4B07F0(0, &qword_1ED3AD1C8, (uint64_t (*)(uint64_t))sub_1BB25EE80, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
  sub_1BB87267C();
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  MEMORY[0x1BCCE2FE0](v7, v23);
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v7, v4);
  v20 = v2;
  v21 = v11;
  v22 = v12;
  swift_allocObject();
  sub_1BB86EA58();
  v14 = (void *)sub_1BB86E854();
  sub_1BB86EA4C();
  swift_release();

  v13(v10, v4);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = v11;
  *(_QWORD *)(v15 + 24) = v12;
  v16 = (void *)sub_1BB86E854();
  type metadata accessor for FeedWeather(0);
  v17 = sub_1BB86E980();
  swift_release();
  swift_release();

  return v17;
}

void sub_1BB25EE80()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1ED3AD0E8)
  {
    MEMORY[0x1E0C80A78](0);
    sub_1BB86CC58();
    sub_1BB25EF8C();
    sub_1BA9C068C();
    sub_1BB25F05C(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED3AD0E8);
  }
}

void sub_1BB25EF8C()
{
  uint64_t (*v0)(uint64_t);
  unint64_t v1;
  uint64_t v2;

  if (!qword_1ED3A32E0)
  {
    sub_1BB86CC1C();
    v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE668];
    sub_1BA4A2870(&qword_1ED3A32B0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE668], MEMORY[0x1E0CEE688]);
    sub_1BA4A2870(&qword_1ED3A32A0, v0, MEMORY[0x1E0CEE678]);
    sub_1BA4A2870(&qword_1ED3A32A8, v0, MEMORY[0x1E0CEE680]);
    v1 = sub_1BB86CCF4();
    if (!v2)
      atomic_store(v1, (unint64_t *)&qword_1ED3A32E0);
  }
}

void sub_1BB25F05C(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AD100, MEMORY[0x1E0CEE940], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB25F078(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31[2];
  uint64_t v32;

  v28 = a2;
  sub_1BB25EE80();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)v31 = a3;
  *(double *)&v31[1] = a4;
  v11 = v10[12];
  v12 = (uint64_t)&v9[v11];
  v13 = v10[16];
  v14 = &v9[v13];
  v15 = v10[20];
  v16 = (void (*)(char *, uint64_t))&v9[v15];
  v17 = a1 + v11;
  v18 = a1 + v13;
  v32 = a1 + v15;
  v19 = sub_1BB86CC58();
  v29 = *(_QWORD *)(v19 - 8);
  v30 = v19;
  (*(void (**)(char *, uint64_t))(v29 + 16))(v9, a1);
  sub_1BB25EF8C();
  v21 = v20;
  v22 = *(_QWORD *)(v20 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v12, v17, v20);
  sub_1BA9C068C();
  v24 = v23;
  v25 = *(_QWORD *)(v23 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v14, v18, v23);
  sub_1BA4C2DD8(v32, (uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v32 = v12;
  v26 = sub_1BB25F220(v31, (uint64_t)v9, v12, v14, v16);
  sub_1BA4A2E80((uint64_t)v16, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v32, v21);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
  return v26;
}

uint64_t sub_1BB25F220(uint64_t *a1, uint64_t a2, uint64_t a3, char *a4, void (*a5)(char *, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  int *v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(void);
  uint64_t v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  void (*v95)(char *, uint64_t);
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  int *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  void (*v122)(char *, char *, uint64_t);
  char *v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t (*v135)(uint64_t, uint64_t, uint64_t);
  uint64_t result;
  void (*v137)(uint64_t, uint64_t);
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  void (*v150)(char *, uint64_t);
  uint64_t v151;
  uint64_t v152;
  int *v153;
  char **v154;
  char *v155;
  uint64_t v156;
  void (*v157)(uint64_t, char *, uint64_t);
  uint64_t v158;
  int *v159;
  uint64_t v160;
  void (*v161)(char *, uint64_t);
  char *v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  uint64_t v172;
  _QWORD *v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  char *v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  char *v189;
  char *v190;
  char *v191;
  char *v192;
  char *v193;
  uint64_t v194;
  char *v195;
  char *v196;
  char *v197;
  uint64_t v198;
  uint64_t v199;
  void (*v200)(char *, uint64_t);
  void (*v201)(char *, uint64_t);
  int *v202;
  void (*v203)(char *, char *, uint64_t);
  char *v204;
  char *v205;
  uint64_t v206;
  void (*v207)(uint64_t, char *, uint64_t);
  uint64_t v208;
  void (*v209)(void);
  char *v210;
  uint64_t v211;
  int v212;
  unsigned __int8 v213;

  v201 = a5;
  v196 = a4;
  v206 = a3;
  sub_1BA4B07F0(0, &qword_1ED3A3298, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE608], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v7);
  v175 = (uint64_t)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v186 = (uint64_t)&v164 - v10;
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3BBDC0, (uint64_t (*)(uint64_t))sub_1BA9405B0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CAE328]);
  v172 = v11;
  v170 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v171 = (char *)&v164 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v187 = (char *)&v164 - v14;
  MEMORY[0x1E0C80A78](v15);
  v189 = (char *)&v164 - v16;
  MEMORY[0x1E0C80A78](v17);
  v192 = (char *)&v164 - v18;
  v169 = sub_1BB87270C();
  v168 = *(_QWORD *)(v169 - 8);
  MEMORY[0x1E0C80A78](v169);
  v190 = (char *)&v164 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = sub_1BB86CCE8();
  v200 = *(void (**)(char *, uint64_t))(v198 - 8);
  MEMORY[0x1E0C80A78](v198);
  v183 = (char *)&v164 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v197 = (char *)&v164 - v22;
  v167 = type metadata accessor for FeedWeather(0);
  MEMORY[0x1E0C80A78](v167);
  v174 = (uint64_t)&v164 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v24);
  v173 = (uint64_t *)((char *)&v164 - v25);
  sub_1BB25EE80();
  v27 = v26;
  MEMORY[0x1E0C80A78](v26);
  v188 = (char *)&v164 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v29);
  v191 = (char *)&v164 - v30;
  MEMORY[0x1E0C80A78](v31);
  v184 = (uint64_t)&v164 - v32;
  MEMORY[0x1E0C80A78](v33);
  v182 = (char *)&v164 - v34;
  MEMORY[0x1E0C80A78](v35);
  v193 = (char *)&v164 - v36;
  MEMORY[0x1E0C80A78](v37);
  v39 = (char *)&v164 - v38;
  MEMORY[0x1E0C80A78](v40);
  v42 = (char *)&v164 - v41;
  v43 = *a1;
  v44 = a1[1];
  v46 = (char *)&v164 + v45[12] - v41;
  v47 = (char *)&v164 + v45[16] - v41;
  v48 = (char *)&v164 + v45[20] - v41;
  v211 = (uint64_t)&v164 - v41;
  v49 = sub_1BB86CC58();
  v194 = *(_QWORD *)(v49 - 8);
  v209 = *(void (**)(void))(v194 + 16);
  ((void (*)(char *, uint64_t, uint64_t))v209)(v42, a2, v49);
  sub_1BB25EF8C();
  v208 = v50;
  v181 = *(_QWORD *)(v50 - 8);
  v51 = *(void (**)(char *, uint64_t, uint64_t))(v181 + 16);
  v204 = v46;
  v51(v46, v206, v50);
  v207 = (void (*)(uint64_t, char *, uint64_t))v51;
  sub_1BA9C068C();
  v206 = v52;
  v180 = *(char **)(v52 - 8);
  v53 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v180 + 2);
  v210 = v47;
  v53(v47, v196, v52);
  v203 = v53;
  sub_1BA4C2DD8((uint64_t)v201, (uint64_t)v48, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v202 = v27;
  v54 = v27[12];
  v55 = v39;
  v195 = v39;
  v56 = (uint64_t)&v39[v54];
  v179 = (char *)v56;
  v178 = &v55[v27[16]];
  v57 = v178;
  v58 = (uint64_t)&v55[v27[20]];
  v177 = (char *)v58;
  v209();
  v51((char *)v56, (uint64_t)v46, v208);
  v59 = v47;
  v60 = v206;
  v53(v57, v59, v206);
  v205 = v48;
  sub_1BA4C2DD8((uint64_t)v48, v58, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v61 = v197;
  v62 = v195;
  sub_1BB86CC4C();
  v63 = *(void (**)(char *, uint64_t))(v194 + 8);
  v64 = v49;
  v63(v62, v49);
  v201 = v63;
  v65 = v193;
  v176 = &v193[v202[12]];
  v66 = (uint64_t)v176;
  v67 = &v193[v202[16]];
  v196 = &v193[v202[20]];
  ((void (*)(char *, uint64_t, uint64_t))v209)(v193, v211, v64);
  v68 = v66;
  v69 = v208;
  v207(v68, v204, v208);
  v203(v67, v210, v60);
  v70 = (uint64_t)v48;
  v71 = v196;
  sub_1BA4C2DD8(v70, (uint64_t)v196, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  sub_1BB86CC28();
  v63(v65, v64);
  v166 = sub_1BB86CCC4();
  v165 = v72;
  v194 = *((_QWORD *)v200 + 1);
  ((void (*)(char *, uint64_t))v194)(v61, v198);
  sub_1BA4A2E80((uint64_t)v71, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v73 = (void (*)(char *, uint64_t))*((_QWORD *)v180 + 1);
  v74 = v206;
  v73(v67, v206);
  v75 = v73;
  v200 = v73;
  v76 = *(char **)(v181 + 8);
  v77 = v69;
  ((void (*)(char *, uint64_t))v76)(v176, v69);
  v196 = v76;
  sub_1BA4A2E80((uint64_t)v177, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v78 = v74;
  v75(v178, v74);
  v79 = v77;
  ((void (*)(char *, uint64_t))v76)(v179, v77);
  v80 = v182;
  v81 = &v182[v202[12]];
  v82 = (uint64_t)&v182[v202[16]];
  v83 = (uint64_t)&v182[v202[20]];
  ((void (*)(char *, uint64_t, uint64_t))v209)(v182, v211, v64);
  v178 = v81;
  v84 = v204;
  v207((uint64_t)v81, v204, v79);
  v177 = (char *)v82;
  v203((char *)v82, v210, v78);
  v176 = (char *)v83;
  sub_1BA4C2DD8((uint64_t)v205, v83, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v85 = v183;
  sub_1BB86CC4C();
  v199 = v64;
  v201(v80, v64);
  sub_1BA968EAC(&v213);
  ((void (*)(char *, uint64_t))v194)(v85, v198);
  v212 = v213;
  v183 = &v195[v202[12]];
  v86 = v183;
  v182 = &v195[v202[16]];
  v87 = v182;
  v181 = (uint64_t)&v195[v202[20]];
  v88 = v181;
  v89 = (uint64_t)v195;
  v90 = v209;
  v209();
  v91 = v208;
  v207((uint64_t)v86, v84, v208);
  v92 = v89;
  v93 = v203;
  v203(v87, v210, v206);
  sub_1BA4C2DD8((uint64_t)v205, v88, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  sub_1BB86CC4C();
  v94 = v199;
  v95 = v201;
  v201((char *)v89, v199);
  v96 = v193;
  v180 = &v193[v202[12]];
  v97 = v180;
  v98 = &v193[v202[16]];
  v179 = &v193[v202[20]];
  ((void (*)(char *, uint64_t, uint64_t))v90)(v193, v211, v94);
  v207((uint64_t)v97, v204, v91);
  v99 = v206;
  v93(v98, v210, v206);
  v100 = (uint64_t)v179;
  sub_1BA4C2DD8((uint64_t)v205, (uint64_t)v179, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  sub_1BB86CC28();
  v95(v96, v94);
  v101 = v197;
  sub_1BB86CCB8();
  ((void (*)(char *, uint64_t))v194)(v101, v198);
  sub_1BA4A2E80(v100, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v102 = v98;
  v103 = v99;
  v104 = v200;
  v200(v102, v99);
  v105 = v208;
  v106 = v202;
  v107 = v196;
  ((void (*)(char *, uint64_t))v196)(v180, v208);
  sub_1BA4A2E80(v181, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v104(v182, v103);
  ((void (*)(char *, uint64_t))v107)(v183, v105);
  v108 = v92 + v106[12];
  v109 = v92 + v106[16];
  v110 = v92 + v106[20];
  ((void (*)(uint64_t, uint64_t, uint64_t))v209)(v92, v211, v94);
  v207(v108, v204, v105);
  v111 = v103;
  v203((char *)v109, v210, v103);
  sub_1BA4C2DD8((uint64_t)v205, v110, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v183 = (char *)sub_1BB260AE4(v92, v108, v109, v110);
  v182 = v112;
  sub_1BA4A2E80(v110, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v200((char *)v109, v103);
  v113 = v208;
  ((void (*)(uint64_t, uint64_t))v196)(v108, v208);
  v114 = v199;
  v201((char *)v92, v199);
  LODWORD(v181) = sub_1BB86CC28();
  v115 = v184 + v106[12];
  v116 = (char *)(v184 + v106[16]);
  v117 = v184 + v106[20];
  v118 = v184;
  v209();
  v198 = v115;
  v119 = v115;
  v120 = v204;
  v121 = v113;
  v122 = (void (*)(char *, char *, uint64_t))v207;
  v207(v119, v204, v121);
  v197 = v116;
  v123 = v116;
  v124 = v203;
  v203(v123, v210, v111);
  v125 = (uint64_t)v205;
  v194 = v117;
  sub_1BA4C2DD8((uint64_t)v205, v117, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  sub_1BB86CC34();
  v201((char *)v118, v114);
  v126 = &v191[v106[12]];
  v127 = &v191[v106[16]];
  v128 = (uint64_t)&v191[v106[20]];
  v209();
  v193 = v126;
  v122(v126, v120, v208);
  v129 = v206;
  v124(v127, v210, v206);
  v185 = v128;
  sub_1BA4C2DD8(v125, v128, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v130 = v186;
  sub_1BA9BEB24(v186);
  v131 = v127;
  v132 = v130;
  v200(v131, v129);
  v133 = sub_1BB86CC10();
  v134 = *(_QWORD *)(v133 - 8);
  v135 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
  result = v135(v132, 1, v133);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1BB86CC04();
    v137 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
    v137(v132, v133);
    v138 = (uint64_t)&v188[v106[12]];
    v139 = &v188[v106[16]];
    v140 = (uint64_t)&v188[v106[20]];
    v209();
    v186 = v138;
    v207(v138, v204, v208);
    v141 = v206;
    v203(v139, v210, v206);
    v184 = v140;
    sub_1BA4C2DD8((uint64_t)v205, v140, (uint64_t (*)(_QWORD))sub_1BB25F05C);
    v142 = v175;
    sub_1BA9BEB24(v175);
    v200(v139, v141);
    result = v135(v142, 1, v133);
    if ((_DWORD)result != 1)
    {
      sub_1BB86CBF8();
      v137(v142, v133);
      v143 = v195;
      v180 = &v195[v106[12]];
      v144 = v180;
      v179 = &v195[v106[16]];
      v145 = (uint64_t)v179;
      v202 = (int *)&v195[v106[20]];
      v146 = v202;
      v147 = v199;
      ((void (*)(char *, uint64_t, uint64_t))v209)(v195, v211, v199);
      v148 = v208;
      v207((uint64_t)v144, v204, v208);
      v203((char *)v145, v210, v206);
      sub_1BA4C2DD8((uint64_t)v205, (uint64_t)v146, (uint64_t (*)(_QWORD))sub_1BB25F05C);
      v149 = v171;
      sub_1BB86CC40();
      v150 = v201;
      v201(v143, v147);
      v151 = (uint64_t)v173;
      *v173 = v43;
      *(_QWORD *)(v151 + 8) = v44;
      v152 = v165;
      *(_QWORD *)(v151 + 16) = v166;
      *(_QWORD *)(v151 + 24) = v152;
      *(_BYTE *)(v151 + 32) = v212;
      v153 = (int *)v167;
      (*(void (**)(uint64_t, char *, uint64_t))(v168 + 32))(v151 + *(int *)(v167 + 28), v190, v169);
      v154 = (char **)(v151 + v153[10]);
      v155 = v182;
      *v154 = v183;
      v154[1] = v155;
      *(_BYTE *)(v151 + v153[8]) = (v181 & 1) == 0;
      v156 = v151 + v153[9];
      v157 = *(void (**)(uint64_t, char *, uint64_t))(v170 + 32);
      v158 = v172;
      v157(v156, v192, v172);
      v159 = (int *)type metadata accessor for FeedWeather.Temperature(0);
      v157(v156 + v159[5], v189, v158);
      v157(v156 + v159[6], v187, v158);
      v157(v156 + v159[7], v149, v158);
      sub_1BA4A2E80((uint64_t)v202, (uint64_t (*)(_QWORD))sub_1BB25F05C);
      v160 = v206;
      v161 = v200;
      v200(v179, v206);
      v162 = v196;
      ((void (*)(char *, uint64_t))v196)(v180, v148);
      sub_1BA4A2E80(v184, (uint64_t (*)(_QWORD))sub_1BB25F05C);
      ((void (*)(uint64_t, uint64_t))v162)(v186, v148);
      v150(v188, v147);
      sub_1BA4A2E80(v185, (uint64_t (*)(_QWORD))sub_1BB25F05C);
      ((void (*)(char *, uint64_t))v162)(v193, v148);
      v150(v191, v147);
      sub_1BA4A2E80(v194, (uint64_t (*)(_QWORD))sub_1BB25F05C);
      v161(v197, v160);
      ((void (*)(uint64_t, uint64_t))v162)(v198, v148);
      sub_1BA4A2E80((uint64_t)v176, (uint64_t (*)(_QWORD))sub_1BB25F05C);
      v161(v177, v160);
      ((void (*)(char *, uint64_t))v162)(v178, v148);
      sub_1BA4C2DD8(v151, v174, type metadata accessor for FeedWeather);
      sub_1BA4B07F0(0, &qword_1ED39E368, type metadata accessor for FeedWeather, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DB4D08]);
      swift_allocObject();
      v163 = sub_1BB86E9E0();
      sub_1BA4A2E80(v151, type metadata accessor for FeedWeather);
      sub_1BA4A2E80(v211, (uint64_t (*)(_QWORD))sub_1BB25EE80);
      return v163;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB260200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;

  sub_1BA4B07F0(0, &qword_1ED3C1DE0, (uint64_t (*)(uint64_t))MEMORY[0x1E0DF0750], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v21 - v15;
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  v18 = sub_1BB872F94();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 56))(v16, 1, 1, v18);
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = 0;
  *(_QWORD *)(v19 + 24) = 0;
  *(_QWORD *)(v19 + 32) = a5;
  *(double *)(v19 + 40) = a6;
  *(double *)(v19 + 48) = a7;
  *(_QWORD *)(v19 + 56) = sub_1BB260D50;
  *(_QWORD *)(v19 + 64) = v17;
  *(_QWORD *)(v19 + 72) = a3;
  *(_QWORD *)(v19 + 80) = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1BB1B6AEC((uint64_t)v16, (uint64_t)&unk_1EF2BF1A0, v19);
  return swift_release();
}

uint64_t sub_1BB260344(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB260200(a1, a2, a3, a4, *(_QWORD *)(v4 + 16), *(double *)(v4 + 24), *(double *)(v4 + 32));
}

uint64_t sub_1BB260350()
{
  return swift_deallocObject();
}

uint64_t sub_1BB260360(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1BB25F078(a1, a2, *(double *)(v2 + 16), *(double *)(v2 + 24));
}

uint64_t method lookup function for WeatherKitService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WeatherKitService.__allocating_init(weatherServiceProvider:stringBuilder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1BB26038C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(char *))
{
  int *v10;
  int *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v20;

  sub_1BB25EE80();
  v11 = v10;
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1BB86CC58();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v13, a1, v14);
  v15 = &v13[v11[12]];
  sub_1BB25EF8C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v15, a2, v16);
  v17 = &v13[v11[16]];
  sub_1BA9C068C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v17, a3, v18);
  sub_1BA4C2DD8(a4, (uint64_t)&v13[v11[20]], (uint64_t (*)(_QWORD))sub_1BB25F05C);
  a5(v13);
  return sub_1BA4A2E80((uint64_t)v13, (uint64_t (*)(_QWORD))sub_1BB25EE80);
}

uint64_t sub_1BB2604BC(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v10 + 64) = a9;
  *(_QWORD *)(v10 + 72) = a10;
  *(_QWORD *)(v10 + 48) = a7;
  *(_QWORD *)(v10 + 56) = a8;
  *(double *)(v10 + 32) = a1;
  *(double *)(v10 + 40) = a2;
  *(_QWORD *)(v10 + 24) = a6;
  v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0CEE8F8];
  sub_1BA4B07F0(0, &qword_1ED3AD0F8, (uint64_t (*)(uint64_t))sub_1BB25F05C, MEMORY[0x1E0CEE8F8]);
  *(_QWORD *)(v10 + 80) = v12;
  *(_QWORD *)(v10 + 88) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v10 + 96) = swift_task_alloc();
  sub_1BA4B07F0(0, &qword_1ED3A32C0, (uint64_t (*)(uint64_t))sub_1BA9C068C, v11);
  *(_QWORD *)(v10 + 104) = v13;
  *(_QWORD *)(v10 + 112) = *(_QWORD *)(v13 - 8);
  *(_QWORD *)(v10 + 120) = swift_task_alloc();
  sub_1BA4B07F0(0, &qword_1ED3A32C8, (uint64_t (*)(uint64_t))sub_1BB25EF8C, v11);
  *(_QWORD *)(v10 + 128) = v14;
  *(_QWORD *)(v10 + 136) = *(_QWORD *)(v14 - 8);
  *(_QWORD *)(v10 + 144) = swift_task_alloc();
  sub_1BA4B07F0(0, &qword_1ED3A32B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEE728], v11);
  *(_QWORD *)(v10 + 152) = v15;
  *(_QWORD *)(v10 + 160) = *(_QWORD *)(v15 - 8);
  *(_QWORD *)(v10 + 168) = swift_task_alloc();
  sub_1BB260E3C();
  *(_QWORD *)(v10 + 176) = v16;
  *(_QWORD *)(v10 + 184) = swift_task_alloc();
  *(_QWORD *)(v10 + 192) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1BB26062C()
{
  uint64_t v0;
  _DWORD *v1;
  double v2;
  double v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_DWORD **)(v0 + 176);
  v3 = *(double *)(v0 + 32);
  v2 = *(double *)(v0 + 40);
  *(_DWORD *)(v0 + 256) = v1[12];
  *(_DWORD *)(v0 + 260) = v1[16];
  *(_DWORD *)(v0 + 264) = v1[20];
  sub_1BB86E71C();
  *(_QWORD *)(v0 + 200) = *(_QWORD *)(v0 + 16);
  *(_QWORD *)(v0 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C9E3B8]), sel_initWithLatitude_longitude_, v3, v2);
  *(_QWORD *)(v0 + 216) = sub_1BB86CC58();
  sub_1BB86CC88();
  sub_1BB25EF8C();
  *(_QWORD *)(v0 + 224) = v4;
  sub_1BB86CC70();
  sub_1BA9C068C();
  *(_QWORD *)(v0 + 232) = v5;
  sub_1BB86CC64();
  sub_1BB25F05C(0);
  sub_1BB86CC7C();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 240) = v6;
  *v6 = v0;
  v6[1] = sub_1BB2607AC;
  return sub_1BB86CC94();
}

uint64_t sub_1BB2607AC()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = *(void **)(*(_QWORD *)v1 + 208);
  v14 = *(_QWORD *)(*(_QWORD *)v1 + 152);
  v15 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  v12 = *(_QWORD *)(*(_QWORD *)v1 + 144);
  v13 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 120);
  v10 = *(_QWORD *)(*(_QWORD *)v1 + 136);
  v11 = *(_QWORD *)(*(_QWORD *)v1 + 128);
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 112);
  v6 = *(_QWORD *)(*(_QWORD *)v1 + 88);
  v7 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v8 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  *(_QWORD *)(*(_QWORD *)v1 + 248) = v0;
  swift_task_dealloc();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v12, v11);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v15, v14);
  return swift_task_switch();
}

uint64_t sub_1BB2608B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v1 = *(_QWORD *)(v0 + 224);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(_QWORD *)(v0 + 184);
  v4 = *(_QWORD *)(v0 + 192);
  v5 = *(int **)(v0 + 176);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v0 + 48);
  v15 = v4 + *(int *)(v0 + 264);
  v6 = v4 + *(int *)(v0 + 260);
  v7 = v4 + *(int *)(v0 + 256);
  v8 = v3 + v5[12];
  v9 = v3 + v5[16];
  v10 = v3 + v5[20];
  v18 = *(_QWORD *)(v0 + 216);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v3, v4);
  v11 = v1;
  v16 = v1;
  v12 = *(_QWORD *)(v1 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v8, v7, v11);
  v13 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v9, v6, v2);
  sub_1BA4C2DD8(v15, v10, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  v17(v3, v8, v9, v10);
  sub_1BA4A2E80(v4, (uint64_t (*)(_QWORD))sub_1BB260E3C);
  sub_1BA4A2E80(v10, (uint64_t (*)(_QWORD))sub_1BB25F05C);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v9, v2);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v8, v16);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v18);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB260A54()
{
  uint64_t v0;
  void *v1;

  v1 = *(void **)(v0 + 248);
  (*(void (**)(void *))(v0 + 64))(v1);

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1BB260AE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  int *v15;
  int *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;

  v8 = sub_1BB86CB50();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB260D34(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB25EE80();
  v16 = v15;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_1BB86CC58();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v18, a1, v19);
  v20 = &v18[v16[12]];
  sub_1BB25EF8C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, a2, v21);
  v22 = &v18[v16[16]];
  sub_1BA9C068C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v22, a3, v23);
  sub_1BA4C2DD8(a4, (uint64_t)&v18[v16[20]], (uint64_t (*)(_QWORD))sub_1BB25F05C);
  sub_1BB86CB44();
  sub_1BB872718();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v24 = sub_1BB8726E8();
  v25 = *(_QWORD *)(v24 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v14, 1, v24) == 1)
  {
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BB25EE80);
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB260D34);
    return 0;
  }
  else
  {
    v26 = sub_1BB8726DC();
    sub_1BA4A2E80((uint64_t)v18, (uint64_t (*)(_QWORD))sub_1BB25EE80);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v24);
  }
  return v26;
}

void sub_1BB260D34(uint64_t a1)
{
  sub_1BA4B07F0(a1, &qword_1ED3AAC18, (uint64_t (*)(uint64_t))MEMORY[0x1E0DCC818], (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB260D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return sub_1BB26038C(a1, a2, a3, a4, *(void (**)(char *))(v4 + 16));
}

uint64_t sub_1BB260D58()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB260D94(uint64_t a1)
{
  double *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  double v7;
  double v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;

  v4 = *((_QWORD *)v1 + 2);
  v5 = *((_QWORD *)v1 + 3);
  v6 = *((_QWORD *)v1 + 4);
  v7 = v1[5];
  v8 = v1[6];
  v9 = *((_QWORD *)v1 + 7);
  v10 = *((_QWORD *)v1 + 8);
  v12 = *((_QWORD *)v1 + 9);
  v11 = *((_QWORD *)v1 + 10);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v13;
  *v13 = v2;
  v13[1] = sub_1BA4B0D38;
  return sub_1BB2604BC(v7, v8, a1, v4, v5, v6, v9, v10, v12, v11);
}

void sub_1BB260E3C()
{
  unint64_t TupleTypeMetadata;
  uint64_t v1;

  if (!qword_1ED3AD0F0)
  {
    sub_1BB86CC58();
    sub_1BB25EF8C();
    sub_1BA9C068C();
    sub_1BB25F05C(255);
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    if (!v1)
      atomic_store(TupleTypeMetadata, (unint64_t *)&qword_1ED3AD0F0);
  }
}

uint64_t FormatSponsoredBannerNode.adjustments.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

unint64_t FormatSponsoredBannerNode.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v3;

  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 56);
  *a1 = v3;
  return sub_1BA67D3F4(v3);
}

uint64_t FormatSponsoredBannerNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerNode.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 64);
}

uint64_t FormatSponsoredBannerNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

unint64_t FormatSponsoredBannerNode.size.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 32);
  *a1 = v2;
  return sub_1BA71CA6C(v2);
}

uint64_t FormatSponsoredBannerNode.resize.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
  return swift_retain();
}

uint64_t FormatSponsoredBannerNode.adjustments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNode.adjustments.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

unint64_t sub_1BB261120(unint64_t *a1, uint64_t *a2)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *(_QWORD *)(v3 + 56) = v2;
  sub_1BA67D3F4(v2);
  return sub_1BA6EEDB4(v4);
}

unint64_t FormatSponsoredBannerNode.visibility.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  swift_beginAccess();
  v3 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)(v1 + 56) = v2;
  return sub_1BA6EEDB4(v3);
}

uint64_t (*FormatSponsoredBannerNode.visibility.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNode.isUserInteractionEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 64) = a1;
  return result;
}

uint64_t (*FormatSponsoredBannerNode.isUserInteractionEnabled.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

void FormatSponsoredBannerNode.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 80);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 72);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatSponsoredBannerNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 88) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSponsoredBannerNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNode.style.getter()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t FormatSponsoredBannerNode.style.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 96) = a1;
  return swift_release();
}

uint64_t (*FormatSponsoredBannerNode.style.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSponsoredBannerNode.__allocating_init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v17;

  v17 = swift_allocObject();
  FormatSponsoredBannerNode.init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t FormatSponsoredBannerNode.init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, uint64_t a5, uint64_t *a6, char a7, uint64_t *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;

  v14 = *a3;
  v15 = *a4;
  v16 = *a6;
  v17 = *a8;
  v18 = *((_BYTE *)a8 + 8);
  *(_QWORD *)(v10 + 96) = 0;
  swift_beginAccess();
  *(_QWORD *)(v10 + 16) = a1;
  *(_QWORD *)(v10 + 24) = a2;
  *(_QWORD *)(v10 + 32) = v14;
  *(_QWORD *)(v10 + 40) = v15;
  swift_beginAccess();
  *(_QWORD *)(v10 + 48) = a5;
  swift_beginAccess();
  *(_QWORD *)(v10 + 56) = v16;
  swift_beginAccess();
  *(_BYTE *)(v10 + 64) = a7;
  *(_QWORD *)(v10 + 72) = v17;
  *(_BYTE *)(v10 + 80) = v18;
  swift_beginAccess();
  *(_QWORD *)(v10 + 88) = a9;
  swift_beginAccess();
  *(_QWORD *)(v10 + 96) = a10;
  swift_release();
  return v10;
}

uint64_t FormatSponsoredBannerNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA719718(*(_QWORD *)(v0 + 32));
  swift_release();
  swift_bridgeObjectRelease();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 56));
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatSponsoredBannerNode.__deallocating_deinit()
{
  FormatSponsoredBannerNode.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB2615FC(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB26173C(&qword_1EF2BF1A8, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for FormatSponsoredBannerNode()
{
  return objc_opt_self();
}

uint64_t sub_1BB261650(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB26173C(&qword_1ED3ADAC8, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNode);
  a1[2] = sub_1BB26173C(&qword_1EF2B5C58, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNode);
  result = sub_1BB26173C(&qword_1EF2BF1B0, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB2616B4@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1BAEBCC88(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1BB2616DC(_QWORD *a1)
{
  return FormatSponsoredBannerNode.encode(to:)(a1);
}

uint64_t sub_1BB2616FC(uint64_t *a1, uint64_t *a2)
{
  return _s8NewsFeed25FormatSponsoredBannerNodeC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t sub_1BB261708(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB26173C(&qword_1EF2BF1B8, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB26173C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSponsoredBannerNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB261778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unint64_t *a7@<X8>, double a8@<D0>, double a9@<D1>, double a10@<D2>, double a11@<D3>)
{
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v31;
  uint64_t v32;
  char v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;

  swift_beginAccess();
  v19 = *(_QWORD *)(a5 + 16);
  v20 = *(_QWORD *)(a5 + 24);
  v21 = *(_QWORD *)(a5 + 40);
  if (v21)
  {
    v22 = *(_QWORD *)(v21 + 16);
    swift_retain();
  }
  else
  {
    v22 = 0;
  }
  v23 = swift_allocObject();
  v36 = v22;
  swift_beginAccess();
  v34 = *(_QWORD *)(a5 + 56);
  swift_bridgeObjectRetain();
  sub_1BA67D3F4(v34);
  sub_1BA67C978(a6, &v35);
  sub_1BA6EEDB4(v34);
  swift_beginAccess();
  v24 = *(_BYTE *)(a5 + 64);
  sub_1BB86DD80();
  v25 = *(_BYTE *)(a5 + 80);
  v32 = *(_QWORD *)(a5 + 72);
  v33 = v25;
  swift_beginAccess();
  v26 = *(_QWORD *)(a5 + 96);
  type metadata accessor for FormatSponsoredBannerLayoutAttributes();
  swift_allocObject();
  *(_QWORD *)(v23 + 16) = FormatSponsoredBannerLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)(a1, a2, a3, a4, v19, v20, &v36, 999, a8, a9, a10, a11, &v35, v24, v31, &v32, v26);
  *a7 = v23 | 0xA000000000000000;
  swift_retain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB261970@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB2619BC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

unint64_t sub_1BB261A08@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 56);
  *a2 = v4;
  return sub_1BA67D3F4(v4);
}

uint64_t sub_1BB261A54@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 64);
  return result;
}

uint64_t sub_1BB261A98(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 64) = v2;
  return result;
}

uint64_t sub_1BB261AD8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSponsoredBannerNode()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSponsoredBannerNode.__allocating_init(identifier:size:resize:adjustments:visibility:isUserInteractionEnabled:accessibilityRole:selectors:style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t sub_1BB261B40()
{
  swift_release();
  return swift_deallocObject();
}

Swift::Void __swiftcall NSUserDefaults.set(location:forKey:)(CLLocation_optional location, Swift::String forKey)
{
  void *v2;
  Class isa;
  uint64_t inited;
  objc_class *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  id v10;

  if (location.value.super.isa)
  {
    isa = location.value.super.isa;
    sub_1BB261CD8();
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1BB87A390;
    *(_QWORD *)(inited + 32) = 0x656475746974616CLL;
    *(_QWORD *)(inited + 40) = 0xEB0000000079654BLL;
    v5 = isa;
    -[objc_class coordinate](v5, sel_coordinate);
    *(_QWORD *)(inited + 48) = v6;
    strcpy((char *)(inited + 56), "longitudeKey");
    *(_BYTE *)(inited + 69) = 0;
    *(_WORD *)(inited + 70) = -5120;
    -[objc_class coordinate](v5, sel_coordinate);
    *(_QWORD *)(inited + 72) = v7;
    sub_1BA8F3F90(inited);
    v8 = (void *)sub_1BB872760();
    swift_bridgeObjectRelease();
    v9 = (void *)sub_1BB872970();
    objc_msgSend(v2, sel_setObject_forKey_, v8, v9);

  }
  else
  {
    v10 = (id)sub_1BB872970();
    objc_msgSend(v2, sel_setURL_forKey_, 0, v10);

  }
}

void sub_1BB261CD8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED3AB9B0)
  {
    sub_1BB2482A8();
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED3AB9B0);
  }
}

id sub_1BB261D2C()
{
  char *v0;
  objc_class *ObjectType;
  objc_super v3;

  ObjectType = (objc_class *)swift_getObjectType();
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutList], sel_removeObserver_, v0);
  v3.receiver = v0;
  v3.super_class = ObjectType;
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1BB261E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unsigned __int8 *a5)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a4;
  v7 = a4[1];
  v8 = *a5;
  v9 = (_QWORD *)(*v5 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutManager);
  v10 = v9[3];
  v11 = v9[4];
  __swift_project_boxed_opaque_existential_1(v9, v10);
  v12 = 24;
  if (v8)
    v12 = 16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + v12))(v6, v7, v10, v11);
}

uint64_t sub_1BB261F04@<X0>(uint64_t *a1@<X3>, BOOL *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v5 = a1[1];
  v6 = (_QWORD *)(*v2 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_shortcutManager);
  v7 = v6[3];
  v8 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v7);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 32))(v4, v5, v7, v8);
  *a2 = (result & 1) == 0;
  return result;
}

uint64_t sub_1BB261F78()
{
  return sub_1BB26206C() & 1;
}

uint64_t sub_1BB26206C()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v8;
  id v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;

  v1 = v0;
  v2 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v3 = objc_msgSend(v2, sel_bundleIdentifier);

  if (!v3)
    return 0;
  v4 = sub_1BB8729A0();
  v6 = v5;

  if (v4 == 0x6C7070612E6D6F63 && v6 == 0xEE007377656E2E65)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = sub_1BB874398();
    swift_bridgeObjectRelease();
    v9 = 0;
    if ((v8 & 1) == 0)
      return (uint64_t)v9;
  }
  v10 = (_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability);
  v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability + 24);
  v12 = *(_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability + 32);
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_featureAvailability), v11);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 184))(v11, v12) & 1) == 0)
    return 1;
  v13 = v10[3];
  v14 = v10[4];
  __swift_project_boxed_opaque_existential_1(v10, v13);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v14 + 184))(v13, v14) & 1) == 0)
    return 0;
  v15 = objc_msgSend(*(id *)(v1 + OBJC_IVAR____TtC8NewsFeed22ShortcutCommandHandler_bundleSubscriptionManager), sel_cachedSubscription);
  v9 = objc_msgSend(v15, sel_isSubscribed);

  return (uint64_t)v9;
}

uint64_t sub_1BB262228@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return FormatRGBAColor.init(from:)(a1, a2);
}

uint64_t sub_1BB26223C(_QWORD *a1)
{
  return FormatRGBAColor.encode(to:)(a1);
}

uint64_t _s8NewsFeed15FormatRGBAColorV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4;

  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  v4 = *(_BYTE *)(a2 + 32);
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 32) & 1) == 0)
      return 0;
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24))
      v4 = 1;
    if ((v4 & 1) != 0)
      return 0;
  }
  return 1;
}

unint64_t sub_1BB2622A4(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB2622C8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB2622C8()
{
  unint64_t result;

  result = qword_1EF2BF250;
  if (!qword_1EF2BF250)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRGBAColor, &type metadata for FormatRGBAColor);
    atomic_store(result, (unint64_t *)&qword_1EF2BF250);
  }
  return result;
}

unint64_t sub_1BB26230C(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BAE884EC();
  a1[2] = sub_1BAEF4F48();
  result = sub_1BB262340();
  a1[3] = result;
  return result;
}

unint64_t sub_1BB262340()
{
  unint64_t result;

  result = qword_1EF2BF258;
  if (!qword_1EF2BF258)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatRGBAColor, &type metadata for FormatRGBAColor);
    atomic_store(result, (unint64_t *)&qword_1EF2BF258);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FormatRGBAColor(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for FormatRGBAColor(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 33) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FormatRGBAColor()
{
  return &type metadata for FormatRGBAColor;
}

uint64_t FormatAnimation.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA49EBE0(*(_QWORD *)(v0 + 56));
  sub_1BA49EBE0(*(_QWORD *)(v0 + 72));
  return v0;
}

uint64_t FormatAnimation.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  sub_1BA49EBE0(*(_QWORD *)(v0 + 56));
  sub_1BA49EBE0(*(_QWORD *)(v0 + 72));
  return swift_deallocClassInstance();
}

uint64_t method lookup function for FormatAnimation()
{
  return swift_lookUpClassMethod();
}

uint64_t CategoryViewLayoutOptions.layoutOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1BB86D7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t CategoryViewLayoutOptions.itemWidth.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;

  result = type metadata accessor for CategoryViewLayoutOptions();
  v4 = (uint64_t *)(v1 + *(int *)(result + 20));
  v5 = *v4;
  LOBYTE(v4) = *((_BYTE *)v4 + 8);
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = (_BYTE)v4;
  return result;
}

uint64_t type metadata accessor for CategoryViewLayoutOptions()
{
  uint64_t result;

  result = qword_1ED39E1C8;
  if (!qword_1ED39E1C8)
    return swift_getSingletonMetadata();
  return result;
}

double CategoryViewLayoutOptions.origin.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 24));
}

double CategoryViewLayoutOptions.contentViewEdgeInsets.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 28));
}

double CategoryViewLayoutOptions.verticalTextPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 32));
}

double CategoryViewLayoutOptions.leadingIconPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 36));
}

double CategoryViewLayoutOptions.leadingTextPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 40));
}

double CategoryViewLayoutOptions.trailingTextPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 44));
}

double CategoryViewLayoutOptions.verticalIconPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 48));
}

double CategoryViewLayoutOptions.paddingBetweenCells.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for CategoryViewLayoutOptions() + 52));
}

uint64_t CategoryViewLayoutOptions.init(alwaysInsetIcon:origin:itemWidth:layoutOptions:contentViewEdgeInsets:)@<X0>(char a1@<W0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>, double a9@<D4>, double a10@<D5>)
{
  uint64_t v19;
  int v20;
  int *v21;
  int *v22;
  double v23;
  double *v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  double *v30;

  v19 = *a2;
  v20 = *((unsigned __int8 *)a2 + 8);
  v21 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  v22 = v21;
  *(_QWORD *)(a4 + v21[8]) = 0x4030000000000000;
  *(_QWORD *)(a4 + v21[10]) = 0x4018000000000000;
  *(_QWORD *)(a4 + v21[11]) = 0x402E000000000000;
  *(_QWORD *)(a4 + v21[12]) = 0x4024000000000000;
  *(_QWORD *)(a4 + v21[13]) = 0x4024000000000000;
  v23 = 0.0;
  if ((a1 & 1) != 0)
    v23 = 3.0;
  *(double *)(a4 + v21[9]) = v23;
  v24 = (double *)(a4 + v21[6]);
  *v24 = a5;
  v24[1] = a6;
  if (v20 == 255)
    v25 = 0;
  else
    v25 = v19;
  if (v20 == 255)
    v26 = 2;
  else
    v26 = v20;
  v27 = a4 + v21[5];
  *(_QWORD *)v27 = v25;
  *(_BYTE *)(v27 + 8) = v26;
  v28 = sub_1BB86D7A4();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(a4, a3, v28);
  v30 = (double *)(a4 + v22[7]);
  *v30 = a7;
  v30[1] = a8;
  v30[2] = a9;
  v30[3] = a10;
  return result;
}

double CategoryViewLayoutOptions.init(from:alwaysInsetIcon:itemWidth:contentViewEdgeInsets:)@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t *a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>, double a7@<D2>, double a8@<D3>)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  int *v31;
  double v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  double v37;
  double result;
  _QWORD v39[10];
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  double v45;
  double v46;
  double v47;
  double v48;

  v47 = a7;
  v48 = a8;
  v45 = a5;
  v46 = a6;
  v44 = a2;
  v11 = sub_1BB86D93C();
  MEMORY[0x1E0C80A78](v11);
  v12 = sub_1BB86D7A4();
  v42 = *(_QWORD *)(v12 - 8);
  v43 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a3;
  v16 = *((unsigned __int8 *)a3 + 8);
  sub_1BB87057C();
  v40 = v18;
  v41 = v17;
  sub_1BB8705B8();
  v39[8] = v20;
  v39[9] = v19;
  sub_1BB87051C();
  v39[6] = v22;
  v39[7] = v21;
  sub_1BB87054C();
  v39[5] = v23;
  v39[4] = v24;
  sub_1BB8704F8();
  v39[3] = v25;
  v39[2] = v26;
  sub_1BB870558();
  v39[1] = v27;
  v39[0] = v28;
  sub_1BB870540();
  sub_1BB870510();
  sub_1BB870534();
  sub_1BB870570();
  sub_1BB870528();
  if (qword_1ED3BC390 != -1)
    swift_once();
  if (v16 == 255)
  {
    LOBYTE(v16) = 2;
    v15 = 0;
  }
  swift_retain();
  sub_1BB86D2B8();
  swift_release();
  sub_1BB86D6F0();
  v29 = sub_1BB8705C4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(a1, v29);
  v30 = (int *)type metadata accessor for CategoryViewLayoutOptions();
  v31 = v30;
  *(_QWORD *)(a4 + v30[8]) = 0x4030000000000000;
  *(_QWORD *)(a4 + v30[10]) = 0x4018000000000000;
  *(_QWORD *)(a4 + v30[11]) = 0x402E000000000000;
  *(_QWORD *)(a4 + v30[12]) = 0x4024000000000000;
  *(_QWORD *)(a4 + v30[13]) = 0x4024000000000000;
  v32 = 0.0;
  if ((v44 & 1) != 0)
    v32 = 3.0;
  *(double *)(a4 + v30[9]) = v32;
  v33 = (_QWORD *)(a4 + v30[6]);
  v34 = v40;
  *v33 = v41;
  v33[1] = v34;
  v35 = a4 + v30[5];
  *(_QWORD *)v35 = v15;
  *(_BYTE *)(v35 + 8) = v16;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(a4, v14, v43);
  v36 = (double *)(a4 + v31[7]);
  v37 = v46;
  *v36 = v45;
  v36[1] = v37;
  result = v48;
  v36[2] = v47;
  v36[3] = result;
  return result;
}

NewsFeed::CategoryViewLayoutOptions::Embedded __swiftcall CategoryViewLayoutOptions.Embedded.init(categoryOptions:)(NewsFeed::CategoryViewLayoutOptions::Embedded categoryOptions)
{
  _BYTE *v1;
  char v2;

  v2 = *(_BYTE *)(*(_QWORD *)&categoryOptions.categoryOptions.alwaysInsetIcon + 1);
  *v1 = **(_BYTE **)&categoryOptions.categoryOptions.alwaysInsetIcon;
  v1[1] = v2;
  return categoryOptions;
}

uint64_t *initializeBufferWithCopyOfBuffer for CategoryViewLayoutOptions(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1BB86D7A4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *(_OWORD *)((char *)a1 + v9) = *(_OWORD *)((char *)a2 + v9);
    v12 = a3[7];
    v13 = a3[8];
    v14 = (_OWORD *)((char *)a1 + v12);
    v15 = (_OWORD *)((char *)a2 + v12);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    v17 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v17) = *(uint64_t *)((char *)a2 + v17);
    v18 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    *(uint64_t *)((char *)a1 + v18) = *(uint64_t *)((char *)a2 + v18);
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
  }
  return a1;
}

uint64_t destroy for CategoryViewLayoutOptions(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1BB86D7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t initializeWithCopy for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithCopy for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[6];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  v15[2] = v16[2];
  v15[3] = v16[3];
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t assignWithTake for CategoryViewLayoutOptions(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[7];
  v12 = a3[8];
  v13 = (_OWORD *)(a1 + v11);
  v14 = (_OWORD *)(a2 + v11);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  *(_QWORD *)(a1 + v12) = *(_QWORD *)(a2 + v12);
  v16 = a3[10];
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v16) = *(_QWORD *)(a2 + v16);
  v17 = a3[12];
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v17) = *(_QWORD *)(a2 + v17);
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryViewLayoutOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB262EF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1BB86D7A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 > 2)
    return (v9 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for CategoryViewLayoutOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB262F7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1BB86D7A4();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  return result;
}

uint64_t sub_1BB262FF8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1BB86D7A4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CategoryViewLayoutOptions.Embedded(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2630E0 + 4 * byte_1BB8FCEB5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1BB263114 + 4 * byte_1BB8FCEB0[v4]))();
}

uint64_t sub_1BB263114(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB26311C(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1BB263124);
  return result;
}

uint64_t sub_1BB263130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1BB263138);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB26313C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1BB263144(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CategoryViewLayoutOptions.Embedded()
{
  return &type metadata for CategoryViewLayoutOptions.Embedded;
}

uint64_t dispatch thunk of GutterableViewController.gutterView.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of GutterableViewController.gutterView.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of GutterableViewController.gutterView.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

void sub_1BB263178(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  __int128 *v11;
  _QWORD *v12;
  _QWORD *v13;
  char v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  __int128 *v37;
  _QWORD *v38;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v40;
  unint64_t v41;
  _QWORD *v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  void *v47;
  void (*v48)(uint64_t);
  uint64_t v49;
  __int128 *v50;
  void *v51;
  uint64_t v52;
  _QWORD *v53;
  id v54;
  id v55;
  __int128 v56;
  _BYTE v57[16];
  __int128 v58;

  v2 = v1;
  v4 = MEMORY[0x1BCCE5D40](v1 + 16);
  if (v4)
  {
    v5 = (void *)v4;
    v6 = (void *)sub_1BB8733CC();

    if ((*(_BYTE *)a1 & 1) != 0)
    {
      v7 = *(_QWORD *)(v2 + 24);
      if (v7)
      {
        if (*(_BYTE *)(v7 + 16) == 1)
        {
          v8 = MEMORY[0x1BCCE5D40](v7 + 72);
          if (v8)
          {
            v54 = (id)v8;

            return;
          }
        }
      }
      v51 = v6;
      v53 = (_QWORD *)(v2 + 32);
      swift_beginAccess();
      v52 = v2;
      v24 = *(_QWORD *)(*(_QWORD *)(v2 + 32) + 16);
      if (v24)
      {
        v50 = a1;
        v25 = (uint64_t *)(swift_bridgeObjectRetain() + 80);
        v26 = MEMORY[0x1E0DEE9D8];
        do
        {
          if ((*(_BYTE *)(v25 - 6) & 1) == 0)
          {
            v30 = *(v25 - 4);
            v55 = (id)*(v25 - 5);
            v31 = *(v25 - 3);
            v32 = *(v25 - 2);
            v33 = *(v25 - 1);
            v34 = *v25;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1BA4BEB58(v33);
            *(_QWORD *)&v56 = v26;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1BAC7A478(0, *(_QWORD *)(v26 + 16) + 1, 1);
              v26 = v56;
            }
            v28 = *(_QWORD *)(v26 + 16);
            v27 = *(_QWORD *)(v26 + 24);
            if (v28 >= v27 >> 1)
            {
              sub_1BAC7A478(v27 > 1, v28 + 1, 1);
              v26 = v56;
            }
            *(_QWORD *)(v26 + 16) = v28 + 1;
            v29 = v26 + 56 * v28;
            *(_BYTE *)(v29 + 32) = 0;
            *(_QWORD *)(v29 + 40) = v55;
            *(_QWORD *)(v29 + 48) = v30;
            *(_QWORD *)(v29 + 56) = v31;
            *(_QWORD *)(v29 + 64) = v32;
            *(_QWORD *)(v29 + 72) = v33;
            *(_QWORD *)(v29 + 80) = v34;
          }
          v25 += 7;
          --v24;
        }
        while (v24);
        swift_bridgeObjectRelease();
        v35 = v53;
        a1 = v50;
      }
      else
      {
        v26 = MEMORY[0x1E0DEE9D8];
        v35 = (_QWORD *)(v2 + 32);
      }
      *v35 = v26;
      swift_bridgeObjectRelease();
      v58 = *(__int128 *)((char *)a1 + 8);
      sub_1BB264204((uint64_t)a1 + 24, (uint64_t)v57);
      v36 = *((_QWORD *)a1 + 5);
      v37 = a1;
      swift_beginAccess();
      v38 = (_QWORD *)*v35;
      sub_1BA739BF4((uint64_t)&v58);
      sub_1BA739BF4((uint64_t)v57);
      sub_1BA4BEB58(v36);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *v35 = v38;
      v22 = v51;
      v15 = v52;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v38 = sub_1BB38F740(0, v38[2] + 1, 1, v38);
        *v53 = v38;
      }
      v41 = v38[2];
      v40 = v38[3];
      if (v41 >= v40 >> 1)
      {
        v38 = sub_1BB38F740((_QWORD *)(v40 > 1), v41 + 1, 1, v38);
        *v53 = v38;
      }
      v38[2] = v41 + 1;
      v42 = &v38[7 * v41];
      v43 = *v37;
      v44 = v37[1];
      v45 = v37[2];
      v42[10] = *((_QWORD *)v37 + 6);
      *((_OWORD *)v42 + 3) = v44;
      *((_OWORD *)v42 + 4) = v45;
      *((_OWORD *)v42 + 2) = v43;
      swift_endAccess();
      v23 = *(_QWORD *)(v52 + 24);
      if (v23)
        goto LABEL_29;
    }
    else
    {
      v9 = v6;
      v56 = *(__int128 *)((char *)a1 + 8);
      sub_1BB264204((uint64_t)a1 + 24, (uint64_t)&v58);
      v10 = *((_QWORD *)a1 + 5);
      v11 = a1;
      v12 = (_QWORD *)(v2 + 32);
      swift_beginAccess();
      v13 = *(_QWORD **)(v2 + 32);
      sub_1BA739BF4((uint64_t)&v56);
      sub_1BA739BF4((uint64_t)&v58);
      sub_1BA4BEB58(v10);
      v14 = swift_isUniquelyReferenced_nonNull_native();
      v15 = v2;
      *(_QWORD *)(v2 + 32) = v13;
      if ((v14 & 1) == 0)
      {
        v13 = sub_1BB38F740(0, v13[2] + 1, 1, v13);
        *v12 = v13;
      }
      v17 = v13[2];
      v16 = v13[3];
      if (v17 >= v16 >> 1)
      {
        v13 = sub_1BB38F740((_QWORD *)(v16 > 1), v17 + 1, 1, v13);
        *v12 = v13;
      }
      v13[2] = v17 + 1;
      v18 = &v13[7 * v17];
      v19 = *v11;
      v20 = v11[1];
      v21 = v11[2];
      v18[10] = *((_QWORD *)v11 + 6);
      *((_OWORD *)v18 + 3) = v20;
      *((_OWORD *)v18 + 4) = v21;
      *((_OWORD *)v18 + 2) = v19;
      swift_endAccess();
      v22 = v9;
      v23 = *(_QWORD *)(v15 + 24);
      if (v23)
      {
LABEL_29:
        v46 = MEMORY[0x1BCCE5D40](v23 + 72);
        if (v46)
        {
          v47 = (void *)v46;

          return;
        }
        v48 = *(void (**)(uint64_t))(v23 + 56);
        if (v48)
        {
          v49 = swift_retain();
          v48(v49);
          sub_1BA49EBE0((uint64_t)v48);
        }
      }
    }
    *(_QWORD *)(v15 + 24) = 0;
    swift_release();
    sub_1BB263844();

  }
}

void sub_1BB2635B4(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  _QWORD aBlock[6];

  swift_beginAccess();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 32) + 16);
  if (v2)
  {
    v20 = v1;
    v3 = (uint64_t *)(swift_bridgeObjectRetain() + 80);
    v4 = MEMORY[0x1E0DEE9D8];
    v5 = a1;
    do
    {
      v9 = *((unsigned __int8 *)v3 - 48);
      if (((((v5 & 1) == 0) ^ v9) & 1) == 0)
      {
        v10 = *(v3 - 4);
        v23 = *(v3 - 5);
        v11 = *(v3 - 2);
        v22 = *(v3 - 3);
        v12 = *(v3 - 1);
        v13 = *v3;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA4BEB58(v12);
        aBlock[0] = v4;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1BAC7A478(0, *(_QWORD *)(v4 + 16) + 1, 1);
          v5 = a1;
          v4 = aBlock[0];
        }
        v7 = *(_QWORD *)(v4 + 16);
        v6 = *(_QWORD *)(v4 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_1BAC7A478(v6 > 1, v7 + 1, 1);
          v5 = a1;
          v4 = aBlock[0];
        }
        *(_QWORD *)(v4 + 16) = v7 + 1;
        v8 = v4 + 56 * v7;
        *(_BYTE *)(v8 + 32) = v9;
        *(_QWORD *)(v8 + 40) = v23;
        *(_QWORD *)(v8 + 48) = v10;
        *(_QWORD *)(v8 + 56) = v22;
        *(_QWORD *)(v8 + 64) = v11;
        *(_QWORD *)(v8 + 72) = v12;
        *(_QWORD *)(v8 + 80) = v13;
      }
      v3 += 7;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
    v1 = v20;
  }
  else
  {
    v4 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)(v1 + 32) = v4;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(v1 + 24);
  if (v14)
  {
    v15 = MEMORY[0x1BCCE5D40](v14 + 72);
    if (v15)
    {
      v16 = (void *)v15;
      if (((a1 & 1) == 0) != *(_BYTE *)(v14 + 16))
      {
        v17 = swift_allocObject();
        swift_weakInit();
        v18 = swift_allocObject();
        *(_QWORD *)(v18 + 16) = v14;
        *(_QWORD *)(v18 + 24) = v17;
        aBlock[4] = sub_1BB264368;
        aBlock[5] = v18;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1BA4F1DD8;
        aBlock[3] = &block_descriptor_19;
        v19 = _Block_copy(aBlock);
        swift_retain_n();
        swift_release();
        objc_msgSend(v16, sel_dismissViewControllerAnimated_completion_, 1, v19);
        _Block_release(v19);
        swift_release();
      }

    }
  }
}

void sub_1BB263844()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  char v29;
  _QWORD aBlock[6];

  v1 = v0;
  v2 = MEMORY[0x1BCCE5D40](v0 + 16);
  if (v2)
  {
    v3 = (void *)v2;
    v4 = (void *)sub_1BB8733CC();

    v5 = (uint64_t *)(v1 + 32);
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v1 + 32) + 16))
    {
      swift_beginAccess();
      v6 = *v5;
      if (!*(_QWORD *)(*v5 + 16))
      {
        __break(1u);
        return;
      }
      v27 = v4;
      v29 = *(_BYTE *)(v6 + 32);
      v7 = *(_QWORD *)(v6 + 40);
      v8 = *(_QWORD *)(v6 + 48);
      v10 = *(_QWORD *)(v6 + 56);
      v9 = *(_QWORD *)(v6 + 64);
      v11 = *(_QWORD *)(v6 + 72);
      v12 = *(_QWORD *)(v6 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4BEB58(v11);
      sub_1BAA68FD4(0, 1);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v28 = v7;
      v13 = (void *)sub_1BB872970();
      swift_bridgeObjectRelease();
      if (v9)
      {
        v14 = (void *)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = 0;
      }
      v15 = v10;
      v25 = objc_msgSend((id)objc_opt_self(), sel_alertControllerWithTitle_message_preferredStyle_, v13, v14, 1);

      v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v17 = swift_allocObject();
      swift_weakInit();
      v18 = swift_allocObject();
      *(_QWORD *)(v18 + 16) = v16;
      *(_BYTE *)(v18 + 24) = v29;
      *(_QWORD *)(v18 + 32) = v28;
      *(_QWORD *)(v18 + 40) = v8;
      v26 = v15;
      *(_QWORD *)(v18 + 48) = v15;
      *(_QWORD *)(v18 + 56) = v9;
      *(_QWORD *)(v18 + 64) = v11;
      *(_QWORD *)(v18 + 72) = v12;
      *(_QWORD *)(v18 + 80) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4BEB58(v11);
      swift_retain();
      swift_retain();
      v19 = (void *)sub_1BB872970();
      aBlock[4] = sub_1BB2642DC;
      aBlock[5] = v18;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1BA573874;
      aBlock[3] = &block_descriptor_55;
      v20 = _Block_copy(aBlock);
      swift_release();
      v21 = v12;
      v22 = v11;
      v23 = objc_msgSend((id)objc_opt_self(), sel_actionWithTitle_style_handler_, v19, 0, v20);
      _Block_release(v20);
      swift_release();
      swift_release();

      objc_msgSend(v25, sel_addAction_, v23);
      type metadata accessor for DebugFormatAlertManager.AlertPresentation();
      v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      *(_BYTE *)(v24 + 16) = v29;
      *(_QWORD *)(v24 + 24) = v28;
      *(_QWORD *)(v24 + 32) = v8;
      *(_QWORD *)(v24 + 40) = v26;
      *(_QWORD *)(v24 + 48) = v9;
      *(_QWORD *)(v24 + 56) = v22;
      *(_QWORD *)(v24 + 64) = v21;
      swift_unknownObjectWeakAssign();
      *(_QWORD *)(v1 + 24) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1BA4BEB58(v22);
      swift_release();
      v4 = v27;
      objc_msgSend(v27, sel_presentViewController_animated_completion_, v25, 1, 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      sub_1BA49EBE0(v22);
    }

  }
}

uint64_t sub_1BB263BF8(uint64_t a1)
{
  void (*v1)(void);
  uint64_t Strong;
  uint64_t result;

  v1 = *(void (**)(void))(a1 + 56);
  if (v1)
    v1();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong + 24) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BB263844();
    return swift_release();
  }
  return result;
}

void sub_1BB263C90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  __int128 v10;
  void *v11;
  uint64_t v12;
  _QWORD aBlock[6];
  _BYTE v14[16];
  __int128 v15;

  v6 = a2 + 16;
  swift_beginAccess();
  v7 = MEMORY[0x1BCCE5D40](v6);
  if (v7)
  {
    v8 = (void *)v7;
    v9 = swift_allocObject();
    v10 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a3;
    *(_OWORD *)(v9 + 32) = v10;
    *(_OWORD *)(v9 + 48) = *(_OWORD *)(a3 + 32);
    *(_QWORD *)(v9 + 64) = *(_QWORD *)(a3 + 48);
    *(_QWORD *)(v9 + 72) = a4;
    aBlock[4] = sub_1BB264330;
    aBlock[5] = v9;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1BA4F1DD8;
    aBlock[3] = &block_descriptor_12_2;
    v11 = _Block_copy(aBlock);
    v15 = *(_OWORD *)(a3 + 8);
    sub_1BB264204(a3 + 24, (uint64_t)v14);
    v12 = *(_QWORD *)(a3 + 40);
    sub_1BA739BF4((uint64_t)&v15);
    sub_1BA739BF4((uint64_t)v14);
    sub_1BA4BEB58(v12);
    swift_retain();
    swift_release();
    objc_msgSend(v8, sel_dismissViewControllerAnimated_completion_, 1, v11);
    _Block_release(v11);

  }
}

uint64_t sub_1BB263DCC(uint64_t a1)
{
  void (*v1)(void);
  uint64_t Strong;
  uint64_t result;

  v1 = *(void (**)(void))(a1 + 40);
  if (v1)
    v1();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(_QWORD *)(Strong + 24) = 0;
    swift_release();
    swift_release();
  }
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1BB263844();
    return swift_release();
  }
  return result;
}

uint64_t sub_1BB263E64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1BA49EBE0(v1);
  swift_unknownObjectWeakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB263EBC()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatAlertManager()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for DebugFormatAlertManager.AlertPresentation()
{
  return objc_opt_self();
}

uint64_t destroy for DebugFormatAlert(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40))
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for DebugFormatAlert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v7 = (_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  return a1;
}

uint64_t assignWithCopy for DebugFormatAlert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v4)
    {
      v6 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v4;
      *(_QWORD *)(a1 + 48) = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DebugFormatAlert(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  if (!*(_QWORD *)(a1 + 40))
  {
    if (v6)
    {
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = v6;
      *(_QWORD *)(a1 + 48) = v8;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugFormatAlert(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 56))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugFormatAlert(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatAlert()
{
  return &type metadata for DebugFormatAlert;
}

uint64_t sub_1BB264204(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA76D834();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1BB264248()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB26426C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB264290()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 64))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

void sub_1BB2642DC(uint64_t a1)
{
  uint64_t v1;

  sub_1BB263C90(a1, *(_QWORD *)(v1 + 16), v1 + 24, *(_QWORD *)(v1 + 80));
}

uint64_t sub_1BB2642EC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 56))
    swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB264330()
{
  uint64_t v0;

  return sub_1BB263DCC(v0 + 16);
}

uint64_t sub_1BB26433C()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB264368()
{
  uint64_t v0;

  return sub_1BB263BF8(*(_QWORD *)(v0 + 16));
}

uint64_t storeEnumTagSinglePayload for DebugFormatAlertType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB2643BC + 4 * byte_1BB8FCFB5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB2643F0 + 4 * asc_1BB8FCFB0[v4]))();
}

uint64_t sub_1BB2643F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB2643F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB264400);
  return result;
}

uint64_t sub_1BB26440C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB264414);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB264418(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB264420(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DebugFormatAlertType()
{
  return &type metadata for DebugFormatAlertType;
}

unint64_t sub_1BB264440()
{
  unint64_t result;

  result = qword_1EF2BF3B8;
  if (!qword_1EF2BF3B8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD0A8, &type metadata for DebugFormatAlertType);
    atomic_store(result, (unint64_t *)&qword_1EF2BF3B8);
  }
  return result;
}

uint64_t static LayeredMediaTraits.== infix(_:_:)()
{
  return 1;
}

uint64_t LayeredMediaTraits.hash(into:)()
{
  return sub_1BB8745D8();
}

uint64_t LayeredMediaTraits.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB2644F4()
{
  unint64_t result;

  result = qword_1EF2BF3C0;
  if (!qword_1EF2BF3C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for LayeredMediaTraits, &type metadata for LayeredMediaTraits);
    atomic_store(result, (unint64_t *)&qword_1EF2BF3C0);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LayeredMediaTraits(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1BB264578 + 4 * byte_1BB8FD0D0[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1BB264598 + 4 * byte_1BB8FD0D5[v4]))();
}

_BYTE *sub_1BB264578(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1BB264598(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2645A0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2645A8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1BB2645B0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1BB2645B8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for LayeredMediaTraits()
{
  return &type metadata for LayeredMediaTraits;
}

uint64_t sub_1BB2645D4(uint64_t a1, uint64_t *a2)
{
  int64_t v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v22[2];
  __int128 v23;
  _BYTE v24[25];
  uint64_t v25;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    sub_1BAC7A494(0, v2, 0);
    v3 = v25;
    v6 = (_QWORD *)(a1 + 32);
    do
    {
      v7 = *a2;
      v8 = v6[3];
      v9 = v6[4];
      __swift_project_boxed_opaque_existential_1(v6, v8);
      v10 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v9 + 40);
      swift_bridgeObjectRetain();
      v10(&v23, v8, v9);
      v11 = v23;
      LOBYTE(v9) = sub_1BAB0CB8C(v23, *((unint64_t *)&v23 + 1), v7);
      swift_bridgeObjectRelease();
      sub_1BA6E0CBC(v11, *((unint64_t *)&v11 + 1));
      if ((v9 & 1) != 0)
      {
        v12 = 0;
      }
      else
      {
        v13 = v6[3];
        v14 = v6[4];
        __swift_project_boxed_opaque_existential_1(v6, v13);
        (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v14 + 40))(v22, v13, v14);
        sub_1BA9D742C((uint64_t *)&v23, v22[0], v22[1]);
        sub_1BA6E0CBC(v23, *((unint64_t *)&v23 + 1));
        v12 = 1;
      }
      sub_1BA4C010C((uint64_t)v6, (uint64_t)&v23);
      v24[24] = v12;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v25 = v3;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1BAC7A494(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v25;
      }
      v17 = *(_QWORD *)(v3 + 16);
      v16 = *(_QWORD *)(v3 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1BAC7A494(v16 > 1, v17 + 1, 1);
        v3 = v25;
      }
      *(_QWORD *)(v3 + 16) = v17 + 1;
      v18 = (_OWORD *)(v3 + 48 * v17);
      v19 = v23;
      v20 = *(_OWORD *)v24;
      *(_OWORD *)((char *)v18 + 57) = *(_OWORD *)&v24[9];
      v18[2] = v19;
      v18[3] = v20;
      v6 += 5;
      --v2;
    }
    while (v2);
  }
  return v3;
}

uint64_t sub_1BB2647A0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  int64_t v17;
  uint64_t result;
  int64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t i;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;

  sub_1BA641024();
  v50 = v2;
  MEMORY[0x1E0C80A78](v2);
  v49 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for FormatItemNodeLayoutContext();
  MEMORY[0x1E0C80A78](v4);
  v48 = (uint64_t)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for DebugFormatLayoutOrderingModel();
  v46 = *(_QWORD *)(v6 - 8);
  v47 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v45 = (uint64_t)&v42 - v10;
  MEMORY[0x1E0C80A78](v11);
  v44 = (uint64_t)&v42 - v12;
  v13 = a1 + 64;
  v14 = 1 << *(_BYTE *)(a1 + 32);
  v15 = -1;
  if (v14 < 64)
    v15 = ~(-1 << v14);
  v16 = v15 & *(_QWORD *)(a1 + 64);
  v17 = (unint64_t)(v14 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = MEMORY[0x1E0DEE9D8];
  v43 = v8;
  if (!v16)
    goto LABEL_7;
LABEL_4:
  v21 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  for (i = v21 | (v19 << 6); ; i = __clz(__rbit64(v24)) + (v19 << 6))
  {
    if (*(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * i) >> 60 == 7)
    {
      v26 = swift_projectBox();
      v27 = v49;
      v28 = *(int *)(v50 + 48);
      v51 = v20;
      sub_1BA4C2DD8(v26, v49, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
      v29 = *(_QWORD *)(v26 + v28);
      v30 = v27;
      v31 = v48;
      sub_1BA5193C4(v30, v48, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
      sub_1BAF38740();
      v33 = *(int *)(v32 + 48);
      v34 = v31;
      v35 = (uint64_t)v43;
      v36 = v45;
      sub_1BA5193C4(v34, v45, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
      *(_QWORD *)(v36 + v33) = v29;
      swift_storeEnumTagMultiPayload();
      v37 = v36;
      v38 = v44;
      sub_1BA5193C4(v37, v44, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      v39 = v38;
      v20 = v51;
      sub_1BA5193C4(v39, v35, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      swift_retain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v20 = sub_1BB393168(0, *(_QWORD *)(v20 + 16) + 1, 1, v20);
      v41 = *(_QWORD *)(v20 + 16);
      v40 = *(_QWORD *)(v20 + 24);
      if (v41 >= v40 >> 1)
        v20 = sub_1BB393168(v40 > 1, v41 + 1, 1, v20);
      *(_QWORD *)(v20 + 16) = v41 + 1;
      result = sub_1BA5193C4(v35, v20+ ((*(unsigned __int8 *)(v46 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80))+ *(_QWORD *)(v46 + 72) * v41, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      if (v16)
        goto LABEL_4;
    }
    else if (v16)
    {
      goto LABEL_4;
    }
LABEL_7:
    v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v23 >= v17)
      goto LABEL_29;
    v24 = *(_QWORD *)(v13 + 8 * v23);
    ++v19;
    if (!v24)
    {
      v19 = v23 + 1;
      if (v23 + 1 >= v17)
        goto LABEL_29;
      v24 = *(_QWORD *)(v13 + 8 * v19);
      if (!v24)
      {
        v19 = v23 + 2;
        if (v23 + 2 >= v17)
          goto LABEL_29;
        v24 = *(_QWORD *)(v13 + 8 * v19);
        if (!v24)
        {
          v19 = v23 + 3;
          if (v23 + 3 >= v17)
            goto LABEL_29;
          v24 = *(_QWORD *)(v13 + 8 * v19);
          if (!v24)
            break;
        }
      }
    }
LABEL_22:
    v16 = (v24 - 1) & v24;
  }
  v25 = v23 + 4;
  if (v25 >= v17)
  {
LABEL_29:
    swift_release();
    return v20;
  }
  v24 = *(_QWORD *)(v13 + 8 * v25);
  if (v24)
  {
    v19 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    v19 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v19 >= v17)
      goto LABEL_29;
    v24 = *(_QWORD *)(v13 + 8 * v19);
    ++v25;
    if (v24)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1BB264B58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v21[3];
  uint64_t v22;

  v3 = v2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 24);
  if (!(v4 >> 62))
  {
    v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v5)
      goto LABEL_3;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  result = sub_1BB873F30();
  v5 = result;
  if (!result)
    return swift_bridgeObjectRelease();
LABEL_3:
  if (v5 >= 1)
  {
    v7 = 0;
    v17 = v4 & 0xC000000000000001;
    v18 = v4;
    do
    {
      if (v17)
      {
        v8 = MEMORY[0x1BCCE4630](v7, v4);
      }
      else
      {
        v8 = *(_QWORD *)(v4 + 8 * v7 + 32);
        swift_retain();
      }
      v9 = swift_allocObject();
      swift_retain();
      sub_1BB86DF9C();
      swift_release();
      sub_1BB86DFA8();
      v10 = (_QWORD *)swift_allocObject();
      v10[2] = v9;
      v10[3] = a1;
      v10[4] = a2;
      swift_retain();
      swift_retain();
      sub_1BB86E4B8();
      swift_release();
      swift_release();
      v11 = v3;
      v12 = *(_QWORD *)(v8 + 32);
      v13 = (uint64_t *)(*(_QWORD *)(v8 + 24) + OBJC_IVAR____TtC8NewsFeed17DebugFormatEditor_commandCenter);
      v15 = *v13;
      v14 = v13[1];
      v16 = swift_allocObject();
      swift_weakInit();
      sub_1BAA41258(v12);
      swift_unknownObjectRetain();
      swift_retain();
      sub_1BAA41654(v15, v14, (uint64_t)sub_1BB2696A4, v16, v21);
      swift_unknownObjectRelease();
      swift_release();
      sub_1BA86DA90(v12);
      swift_release();
      if (v22)
      {
        __swift_project_boxed_opaque_existential_1(v21, v22);
        sub_1BB86DCF0();
        swift_release();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
      }
      else
      {
        swift_release();
        sub_1BAACC92C((uint64_t)v21);
      }
      v3 = v11;
      ++v7;
      swift_release();
      v4 = v18;
    }
    while (v5 != v7);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_1BB264E14()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1BA86DA90(*(_QWORD *)(v0 + 32));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugFormatLayoutTreeStateMachine()
{
  return objc_opt_self();
}

uint64_t sub_1BB264E6C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  double v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  int v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD **v74;
  _QWORD *v75;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v77;
  unint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  unint64_t v81;
  char *v82;
  unint64_t v83;
  int EnumCaseMultiPayload;
  uint64_t v85;
  uint64_t v86;
  double *v87;
  double v88;
  double v89;
  double v90;
  double v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  double *v101;
  double v102;
  double v103;
  double v104;
  double v105;
  double v106;
  int64_t v107;
  double v108;
  uint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(__int128 *__return_ptr, uint64_t, uint64_t);
  __int128 v116;
  char v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  unint64_t v121;
  unint64_t v122;
  _OWORD *v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  char v145;
  uint64_t v146;
  CGFloat v147;
  CGFloat v148;
  double *v149;
  CGFloat v150;
  CGFloat v151;
  CGFloat v152;
  CGFloat v153;
  CGFloat MinX;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  CGFloat v158;
  CGFloat v159;
  uint64_t v160;
  _QWORD **v161;
  _QWORD *v162;
  char v163;
  unint64_t v164;
  CGFloat v165;
  CGFloat v166;
  CGFloat v167;
  uint64_t v168;
  double *v169;
  CGFloat v170;
  CGFloat v171;
  CGFloat v172;
  CGFloat v173;
  CGFloat MinY;
  uint64_t v175;
  uint64_t v176;
  CGFloat v177;
  uint64_t *v178;
  uint64_t v179;
  _QWORD **v180;
  _QWORD *v181;
  char v182;
  unint64_t v183;
  unint64_t v184;
  _QWORD *v185;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  double v190;
  __int128 v191;
  uint64_t v192;
  unint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  double v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209[2];
  __int128 v210;
  _BYTE v211[25];
  uint64_t v212;
  uint64_t v213;
  CGRect v214;
  CGRect v215;
  CGRect v216;
  CGRect v217;
  CGRect v218;
  CGRect v219;
  CGRect v220;
  CGRect v221;

  sub_1BA4B07F0(0, &qword_1EF2BF528, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v187 - v6;
  v205 = type metadata accessor for DebugFormatLayoutOrderingModel();
  v206 = *(_QWORD *)(v205 - 8);
  MEMORY[0x1E0C80A78](v205);
  v200 = (char *)&v187 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v187 = (char *)&v187 - v10;
  MEMORY[0x1E0C80A78](v11);
  v196 = (char **)((char *)&v187 - v12);
  MEMORY[0x1E0C80A78](v13);
  v201 = (uint64_t)&v187 - v14;
  MEMORY[0x1E0C80A78](v15);
  *(_QWORD *)&v17 = (char *)&v187 - v16;
  MEMORY[0x1E0C80A78](v18);
  v199 = (uint64_t)&v187 - v19;
  v204 = type metadata accessor for FeedItemSupplementaryAttributes();
  v20 = *(_QWORD *)(v204 - 8);
  MEMORY[0x1E0C80A78](v204);
  v22 = (char *)&v187 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v25 = (char *)&v187 - v24;
  v26 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v2 + 16) = MEMORY[0x1E0DEE9D8];
  v195 = (_QWORD *)(v2 + 16);
  *(_QWORD *)(v2 + 24) = v26;
  v208 = a1;
  v27 = *(_QWORD **)(a1 + 16);
  v29 = v27[26];
  v28 = v27[27];
  v30 = v27[29];
  if (v30)
  {
    v202 = *(_QWORD *)(v30 + 32);
    swift_retain();
  }
  else
  {
    type metadata accessor for FormatSourceMapCollection();
    v202 = swift_allocObject();
    *(_QWORD *)(v202 + 16) = MEMORY[0x1E0DEE9E0];
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v197 = sub_1BB2647A0(v29);
  swift_bridgeObjectRelease();
  v31 = *(_QWORD *)(v28 + 16);
  v207 = a2;
  v32 = v28;
  v33 = v205;
  if (v31)
  {
    v34 = v32 + ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80));
    v203 = *(_QWORD *)(v20 + 72);
    v194 = v32;
    swift_bridgeObjectRetain();
    v35 = MEMORY[0x1E0DEE9D8];
    v198 = v17;
    do
    {
      sub_1BA4C2DD8(v34, (uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      sub_1BA4C2DD8((uint64_t)v25, (uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        v36 = *((_QWORD *)v22 + 14);
        v37 = *((_OWORD *)v22 + 1);
        *(_OWORD *)v7 = *(_OWORD *)v22;
        *((_OWORD *)v7 + 1) = v37;
        v38 = *((_OWORD *)v22 + 3);
        *((_OWORD *)v7 + 2) = *((_OWORD *)v22 + 2);
        *((_OWORD *)v7 + 3) = v38;
        v39 = *((_OWORD *)v22 + 5);
        *((_OWORD *)v7 + 4) = *((_OWORD *)v22 + 4);
        *((_OWORD *)v7 + 5) = v39;
        *((_OWORD *)v7 + 6) = *((_OWORD *)v22 + 6);
        *((_QWORD *)v7 + 14) = v36;
        swift_storeEnumTagMultiPayload();
        v40 = 0;
      }
      else
      {
        sub_1BA4A2E80((uint64_t)v22, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
        v40 = 1;
      }
      v41 = v206;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v206 + 56))(v7, v40, 1, v33);
      sub_1BA4A2E80((uint64_t)v25, (uint64_t (*)(_QWORD))type metadata accessor for FeedItemSupplementaryAttributes);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v7, 1, v33) == 1)
      {
        sub_1BB2696AC((uint64_t)v7);
      }
      else
      {
        v42 = v199;
        sub_1BA5193C4((uint64_t)v7, v199, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
        sub_1BA5193C4(v42, *(uint64_t *)&v17, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v35 = sub_1BB393168(0, *(_QWORD *)(v35 + 16) + 1, 1, v35);
        v44 = *(_QWORD *)(v35 + 16);
        v43 = *(_QWORD *)(v35 + 24);
        if (v44 >= v43 >> 1)
          v35 = sub_1BB393168(v43 > 1, v44 + 1, 1, v35);
        *(_QWORD *)(v35 + 16) = v44 + 1;
        v45 = v35
            + ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80))
            + *(_QWORD *)(v206 + 72) * v44;
        v17 = v198;
        sub_1BA5193C4(*(uint64_t *)&v198, v45, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
        v33 = v205;
      }
      v34 += v203;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease_n();
    a2 = v207;
  }
  else
  {
    swift_bridgeObjectRelease();
    v35 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v210 = v197;
  sub_1BB386E84(v35);
  sub_1BA4A2870(&qword_1EF2BF530, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel, (uint64_t)&unk_1BB8D50B8);
  v197 = sub_1BB872DE4();
  swift_bridgeObjectRelease();
  v46 = *(_QWORD *)(v208 + 16);
  sub_1BB86D6FC();
  v48 = v47;
  v50 = v49;
  v51 = *(_QWORD *)(v46 + 248);
  v52 = *(_QWORD *)(v51 + 16);
  v53 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v52)
  {
    swift_bridgeObjectRetain();
    while (v52 <= *(_QWORD *)(v51 + 16))
    {
      v57 = *(_QWORD *)(v51 + 8 * v52 + 24);
      if (v57 >> 61 == 5)
      {
        v58 = *(_QWORD *)(v57 + 16);
        v59 = *(void **)(v208 + 24);
        swift_retain();
        swift_retain();
        objc_msgSend(v59, sel_bounds);
        v61 = v60;
        v63 = v62;
        v65 = v64;
        v67 = v66;
        v68 = *(_QWORD *)(v58 + 16);
        v69 = *(_QWORD *)(v58 + 24);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v53 = sub_1BB393018(0, v53[2] + 1, 1, v53);
        v71 = v53[2];
        v70 = v53[3];
        if (v71 >= v70 >> 1)
          v53 = sub_1BB393018((_QWORD *)(v70 > 1), v71 + 1, 1, v53);
        v53[2] = v71 + 1;
        v54 = &v53[25 * v71];
        a2 = v207;
        v54[4] = v207;
        v54[5] = v58;
        v54[6] = v61;
        v54[7] = v63;
        v54[8] = v65;
        v54[9] = v67;
        *((_BYTE *)v54 + 80) = 0;
        v55 = *(_DWORD *)((char *)&v210 + 3);
        *(_DWORD *)((char *)v54 + 81) = v210;
        *((_DWORD *)v54 + 21) = v55;
        v54[11] = 0;
        v54[12] = v61;
        v54[13] = v63;
        v54[14] = v65;
        v54[15] = v67;
        *((_OWORD *)v54 + 8) = 0u;
        *((_OWORD *)v54 + 9) = 0u;
        *((_OWORD *)v54 + 10) = 0u;
        v54[22] = v48;
        v54[23] = v50;
        v56 = MEMORY[0x1E0DEE9D8];
        v54[24] = MEMORY[0x1E0DEE9D8];
        v54[25] = v68;
        v54[26] = v69;
        v54[27] = v56;
        *((_BYTE *)v54 + 224) = 1;
        swift_release();
        swift_release();
      }
      if (!--v52)
        goto LABEL_30;
    }
    __break(1u);
LABEL_30:
    swift_bridgeObjectRelease();
  }
  v72 = v189;
  v73 = (uint64_t)v200;
  if (v53[2])
  {
    v51 = sub_1BB872E14();
    swift_bridgeObjectRelease();
    v74 = (_QWORD **)v195;
    swift_beginAccess();
    v75 = *v74;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v74 = v75;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      goto LABEL_98;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
LABEL_37:
  v75 = v196;
  v80 = v201;
  v194 = *(_QWORD *)(v197 + 16);
  if (v194)
  {
    v81 = 0;
    v193 = v197 + ((*(unsigned __int8 *)(v206 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v206 + 80));
    v192 = v202 + 16;
    v191 = xmmword_1BB87CE70;
    v204 = v48;
    v203 = v50;
    while (1)
    {
      if (v81 >= *(_QWORD *)(v197 + 16))
      {
        __break(1u);
LABEL_98:
        v75 = sub_1BB393154(0, v75[2] + 1, 1, v75);
        *v195 = v75;
LABEL_33:
        v78 = v75[2];
        v77 = v75[3];
        if (v78 >= v77 >> 1)
        {
          v75 = sub_1BB393154((_QWORD *)(v77 > 1), v78 + 1, 1, v75);
          *v195 = v75;
        }
        v75[2] = v78 + 1;
        v79 = &v75[3 * v78];
        v79[4] = 0x697461726F636544;
        v79[5] = 0xEB00000000736E6FLL;
        v79[6] = v51;
        swift_endAccess();
        goto LABEL_37;
      }
      sub_1BA4C2DD8(v193 + *(_QWORD *)(v206 + 72) * v81, v80, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      sub_1BA4C2DD8(v80, (uint64_t)v75, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      v207 = v81;
      if (EnumCaseMultiPayload != 1)
      {
        sub_1BAF38740();
        v99 = v98;
        v100 = *(_QWORD *)((char *)v75 + *(int *)(v98 + 48));
        v198 = *(double *)&OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes;
        v101 = *(double **)(v100 + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
        v102 = v101[2];
        v103 = v101[3];
        v104 = v101[4];
        v105 = v101[5];
        sub_1BB266554();
        v213 = MEMORY[0x1E0DEE9E8];
        v107 = *(_QWORD *)(*(_QWORD *)&v106 + 16);
        v199 = v100;
        v190 = v106;
        if (v107)
        {
          v108 = v106;
          v188 = v99;
          v212 = MEMORY[0x1E0DEE9D8];
          sub_1BAC7A494(0, v107, 0);
          v109 = v212;
          v110 = (_QWORD *)(*(_QWORD *)&v108 + 32);
          v111 = (uint64_t)v187;
          do
          {
            v112 = v213;
            v114 = v110[3];
            v113 = v110[4];
            __swift_project_boxed_opaque_existential_1(v110, v114);
            v115 = *(void (**)(__int128 *__return_ptr, uint64_t, uint64_t))(v113 + 40);
            swift_bridgeObjectRetain();
            v115(&v210, v114, v113);
            v116 = v210;
            LOBYTE(v114) = sub_1BAB0CB8C(v210, *((unint64_t *)&v210 + 1), v112);
            swift_bridgeObjectRelease();
            sub_1BA6E0CBC(v116, *((unint64_t *)&v116 + 1));
            if ((v114 & 1) != 0)
            {
              v117 = 0;
            }
            else
            {
              v118 = v110[3];
              v119 = v110[4];
              __swift_project_boxed_opaque_existential_1(v110, v118);
              (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v119 + 40))(v209, v118, v119);
              sub_1BA9D742C((uint64_t *)&v210, v209[0], v209[1]);
              sub_1BA6E0CBC(v210, *((unint64_t *)&v210 + 1));
              v117 = 1;
            }
            sub_1BA4C010C((uint64_t)v110, (uint64_t)&v210);
            v211[24] = v117;
            v120 = swift_isUniquelyReferenced_nonNull_native();
            v212 = v109;
            if ((v120 & 1) == 0)
            {
              sub_1BAC7A494(0, *(_QWORD *)(v109 + 16) + 1, 1);
              v109 = v212;
            }
            v122 = *(_QWORD *)(v109 + 16);
            v121 = *(_QWORD *)(v109 + 24);
            if (v122 >= v121 >> 1)
            {
              sub_1BAC7A494(v121 > 1, v122 + 1, 1);
              v109 = v212;
            }
            *(_QWORD *)(v109 + 16) = v122 + 1;
            v123 = (_OWORD *)(v109 + 48 * v122);
            v124 = v210;
            v125 = *(_OWORD *)v211;
            *(_OWORD *)((char *)v123 + 57) = *(_OWORD *)&v211[9];
            v123[2] = v124;
            v123[3] = v125;
            v110 += 5;
            --v107;
          }
          while (v107);
          v72 = v189;
          v100 = v199;
          v99 = v188;
        }
        else
        {
          v109 = MEMORY[0x1E0DEE9D8];
          v111 = (uint64_t)v187;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1BB269768();
        v136 = swift_allocObject();
        *(_OWORD *)(v136 + 16) = v191;
        sub_1BA4C2DD8(v201, v111, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v137 = *(_QWORD *)(v111 + 112);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v138 = *(_QWORD *)(v137
                           + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
          v139 = *(_QWORD *)(v138 + 48);
          v140 = *(_QWORD *)(v138 + 56);
          swift_bridgeObjectRetain();
          v72 = v189;
          swift_release();
        }
        else
        {
          v141 = *(_QWORD *)(*(_QWORD *)(v111 + *(int *)(v99 + 48))
                           + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
          v139 = *(_QWORD *)(v141 + 48);
          v140 = *(_QWORD *)(v141 + 56);
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_release();
          sub_1BA4A2E80(v111, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
        }
        v142 = v192;
        swift_beginAccess();
        v143 = *(_QWORD *)v142;
        if (*(_QWORD *)(*(_QWORD *)v142 + 16))
        {
          swift_bridgeObjectRetain();
          v144 = sub_1BA6E35A8(v139, v140);
          if ((v145 & 1) != 0)
          {
            v146 = *(_QWORD *)(*(_QWORD *)(v143 + 56) + 8 * v144);
            swift_endAccess();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_84:
            *(_QWORD *)(v136 + 32) = a2;
            *(_QWORD *)(v136 + 40) = v100;
            *(_OWORD *)(v136 + 48) = 0u;
            *(_OWORD *)(v136 + 64) = 0u;
            *(_BYTE *)(v136 + 80) = 1;
            *(_QWORD *)(v136 + 88) = 0;
            v190 = v102;
            *(double *)(v136 + 96) = v102;
            *(double *)(v136 + 104) = v103;
            v165 = v103;
            v166 = v104;
            *(double *)(v136 + 112) = v104;
            *(double *)(v136 + 120) = v105;
            v167 = v105;
            *(_OWORD *)(v136 + 128) = 0u;
            *(_OWORD *)(v136 + 144) = 0u;
            *(_OWORD *)(v136 + 160) = 0u;
            v168 = v203;
            *(_QWORD *)(v136 + 176) = v204;
            *(_QWORD *)(v136 + 184) = v168;
            *(_QWORD *)(v136 + 192) = v109;
            *(_QWORD *)(v136 + 200) = v139;
            *(_QWORD *)(v136 + 208) = v140;
            *(_QWORD *)(v136 + 216) = v146;
            *(_BYTE *)(v136 + 224) = 1;
            v209[0] = v136;
            v169 = *(double **)(v100 + *(_QWORD *)&v198);
            v170 = v169[2];
            v171 = v169[3];
            v172 = v169[4];
            v173 = v169[5];
            v218.origin.x = v170;
            v218.origin.y = v171;
            v218.size.width = v172;
            v218.size.height = v173;
            MinY = CGRectGetMinY(v218);
            v198 = 0.0;
            if (MinY < 0.0)
            {
              v219.origin.x = v170;
              v219.origin.y = v171;
              v219.size.width = v172;
              v219.size.height = v173;
              CGRectGetMinY(v219);
            }
            v220.origin.x = v170;
            v220.origin.y = v171;
            v220.size.width = v172;
            v220.size.height = v173;
            if (CGRectGetMinX(v220) < 0.0)
            {
              v221.origin.x = v170;
              v221.origin.y = v171;
              v221.size.width = v172;
              v221.size.height = v173;
              v198 = -CGRectGetMinX(v221);
            }
            sub_1BB873594();
            sub_1BB8735C4();
            sub_1BB8735B8();
            swift_bridgeObjectRetain();
            v175 = sub_1BB872DE4();
            swift_bridgeObjectRelease();
            v176 = *(_QWORD *)(v175 + 16);
            v177 = v190;
            if (v176)
            {
              v178 = (uint64_t *)(v175 + 32);
              do
              {
                v179 = *v178++;
                *(_QWORD *)&v210 = v179;
                swift_retain();
                sub_1BB2675DC((uint64_t *)&v210, v177, v165, v166, v167);
                swift_release();
                --v176;
              }
              while (v176);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v51 = v209[0];
            v180 = (_QWORD **)v195;
            swift_beginAccess();
            v181 = *v180;
            v182 = swift_isUniquelyReferenced_nonNull_native();
            *v180 = v181;
            if ((v182 & 1) == 0)
            {
              v181 = sub_1BB393154(0, v181[2] + 1, 1, v181);
              *v195 = v181;
            }
            v73 = (uint64_t)v200;
            v83 = v207;
            v48 = v204;
            v50 = v203;
            v184 = v181[2];
            v183 = v181[3];
            if (v184 >= v183 >> 1)
            {
              v181 = sub_1BB393154((_QWORD *)(v183 > 1), v184 + 1, 1, v181);
              *v195 = v181;
            }
            v181[2] = v184 + 1;
            v185 = &v181[3 * v184];
            v185[4] = 1835365449;
            v185[5] = 0xE400000000000000;
            v185[6] = v51;
            swift_endAccess();
            swift_release();
            v80 = v201;
            sub_1BA4A2E80(v201, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
            v75 = v196;
            sub_1BA4A2E80((uint64_t)v196, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
            goto LABEL_40;
          }
          swift_bridgeObjectRelease();
        }
        swift_endAccess();
        v146 = MEMORY[0x1E0DEE9D8];
        goto LABEL_84;
      }
      v85 = v75[14];
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v199 = OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes;
      v86 = v85;
      v87 = *(double **)(v85
                       + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
      v89 = v87[2];
      v88 = v87[3];
      v91 = v87[4];
      v90 = v87[5];
      sub_1BB269768();
      v92 = swift_allocObject();
      *(_OWORD *)(v92 + 16) = v191;
      sub_1BA4C2DD8(v80, v73, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v93 = *(_QWORD *)(v73 + 112);
        swift_retain();
        swift_retain();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        v72 = v189;
        swift_bridgeObjectRelease();
        v94 = *(_QWORD *)(v93
                        + OBJC_IVAR____TtC8NewsFeed43FormatSupplementaryNodeDataLayoutAttributes_dataLayoutAttributes);
        v95 = *(_QWORD *)(v94 + 48);
        v96 = *(_QWORD *)(v94 + 56);
        swift_bridgeObjectRetain();
        v97 = v95;
        swift_release();
      }
      else
      {
        sub_1BAF38740();
        v127 = *(_QWORD *)(*(_QWORD *)(v73 + *(int *)(v126 + 48))
                         + OBJC_IVAR____TtC8NewsFeed34FormatItemNodeDataLayoutAttributes_dataLayoutAttributes);
        v128 = v73;
        v97 = *(_QWORD *)(v127 + 48);
        v96 = *(_QWORD *)(v127 + 56);
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_release();
        sub_1BA4A2E80(v128, (uint64_t (*)(_QWORD))type metadata accessor for FormatItemNodeLayoutContext);
      }
      v129 = v86;
      v130 = v192;
      swift_beginAccess();
      v131 = *(_QWORD *)v130;
      if (!*(_QWORD *)(*(_QWORD *)v130 + 16))
        goto LABEL_68;
      swift_bridgeObjectRetain();
      v132 = sub_1BA6E35A8(v97, v96);
      if ((v133 & 1) == 0)
        break;
      v134 = *(_QWORD *)(*(_QWORD *)(v131 + 56) + 8 * v132);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v135 = MEMORY[0x1E0DEE9D8];
LABEL_69:
      *(_QWORD *)(v92 + 32) = a2;
      *(_QWORD *)(v92 + 40) = v86;
      *(_OWORD *)(v92 + 48) = 0u;
      *(_OWORD *)(v92 + 64) = 0u;
      *(_BYTE *)(v92 + 80) = 2;
      *(_QWORD *)(v92 + 88) = 0;
      v147 = v89;
      *(double *)(v92 + 96) = v89;
      *(double *)(v92 + 104) = v88;
      v198 = v88;
      v148 = v91;
      *(double *)(v92 + 112) = v91;
      *(double *)(v92 + 120) = v90;
      v190 = v90;
      *(_OWORD *)(v92 + 128) = 0u;
      *(_OWORD *)(v92 + 144) = 0u;
      *(_OWORD *)(v92 + 160) = 0u;
      *(_QWORD *)(v92 + 176) = v48;
      *(_QWORD *)(v92 + 184) = v50;
      *(_QWORD *)(v92 + 192) = v135;
      *(_QWORD *)(v92 + 200) = v97;
      *(_QWORD *)(v92 + 208) = v96;
      *(_QWORD *)(v92 + 216) = v134;
      *(_BYTE *)(v92 + 224) = 1;
      v209[0] = v92;
      v149 = *(double **)(v86 + v199);
      v150 = v149[2];
      v151 = v149[3];
      v152 = v149[4];
      v153 = v149[5];
      v214.origin.x = v150;
      v214.origin.y = v151;
      v214.size.width = v152;
      v214.size.height = v153;
      if (CGRectGetMinY(v214) < 0.0)
      {
        v215.origin.x = v150;
        v215.origin.y = v151;
        v215.size.width = v152;
        v215.size.height = v153;
        CGRectGetMinY(v215);
      }
      v216.origin.x = v150;
      v216.origin.y = v151;
      v216.size.width = v152;
      v216.size.height = v153;
      MinX = CGRectGetMinX(v216);
      v73 = (uint64_t)v200;
      if (MinX < 0.0)
      {
        v217.origin.x = v150;
        v217.origin.y = v151;
        v217.size.width = v152;
        v217.size.height = v153;
        CGRectGetMinX(v217);
      }
      sub_1BB873594();
      sub_1BB8735C4();
      sub_1BB8735B8();
      swift_bridgeObjectRetain();
      v155 = sub_1BB872DE4();
      swift_bridgeObjectRelease();
      v156 = *(_QWORD *)(v155 + 16);
      if (v156)
      {
        v199 = v129;
        v157 = 0;
        v158 = v198;
        v159 = v190;
        do
        {
          v160 = *(_QWORD *)(v155 + 8 * v157++ + 32);
          *(_QWORD *)&v210 = v160;
          swift_retain();
          sub_1BB2675DC((uint64_t *)&v210, v147, v158, v148, v159);
          swift_release();
        }
        while (v156 != v157);
        swift_bridgeObjectRelease();
        v92 = v209[0];
        v73 = (uint64_t)v200;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      v161 = (_QWORD **)v195;
      swift_beginAccess();
      v162 = *v161;
      v163 = swift_isUniquelyReferenced_nonNull_native();
      *v161 = v162;
      v48 = v204;
      v50 = v203;
      if ((v163 & 1) == 0)
      {
        v162 = sub_1BB393154(0, v162[2] + 1, 1, v162);
        *v195 = v162;
      }
      v51 = v162[2];
      v164 = v162[3];
      if (v51 >= v164 >> 1)
      {
        v162 = sub_1BB393154((_QWORD *)(v164 > 1), v51 + 1, 1, v162);
        *v195 = v162;
      }
      v162[2] = v51 + 1;
      v82 = (char *)&v162[3 * v51];
      strcpy(v82 + 32, "Supplementary");
      *((_WORD *)v82 + 23) = -4864;
      *((_QWORD *)v82 + 6) = v92;
      swift_endAccess();
      swift_release();
      v80 = v201;
      sub_1BA4A2E80(v201, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
      v75 = v196;
      v83 = v207;
LABEL_40:
      v81 = v83 + 1;
      if (v81 == v194)
        goto LABEL_96;
    }
    swift_bridgeObjectRelease();
LABEL_68:
    swift_endAccess();
    v135 = MEMORY[0x1E0DEE9D8];
    v134 = MEMORY[0x1E0DEE9D8];
    goto LABEL_69;
  }
LABEL_96:
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v72;
}

uint64_t sub_1BB2664AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1BA4C2DD8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for DebugFormatLayoutOrderingModel);
}

void sub_1BB2664CC(uint64_t a1)
{
  __asm { BR              X11 }
}

uint64_t sub_1BB266508@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t result;

  if (*(_BYTE *)(a1 + 88))
    result = -100;
  else
    result = *(_QWORD *)(a1 + 80);
  *v1 = result;
  return result;
}

void sub_1BB266554()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v17 = type metadata accessor for FeedPuzzleStatistic();
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v21 = (char *)&v15 - v3;
  v16 = type metadata accessor for FeedCustomItem();
  MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v18 = (char *)&v15 - v6;
  v7 = type metadata accessor for FeedWebEmbed();
  MEMORY[0x1E0C80A78](v7);
  MEMORY[0x1E0C80A78](v8);
  v9 = type metadata accessor for FeedHeadline(0);
  MEMORY[0x1E0C80A78](v9);
  MEMORY[0x1E0C80A78](v10);
  v11 = type metadata accessor for FeedItem(0);
  MEMORY[0x1E0C80A78](v11);
  v22 = MEMORY[0x1E0DEE9D8];
  sub_1BA4C2DD8(v0, (uint64_t)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  v14 = (char *)&loc_1BB266758 + dword_1BB267594[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1BB266768()
{
  uint64_t v0;
  uint64_t v1;

  sub_1BA4A2E80(v1, type metadata accessor for FeedItem);
  return *(_QWORD *)(v0 + 72);
}

void sub_1BB2675DC(uint64_t *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v9;
  CGRect v10;
  CGRect v11;

  v9 = *a1;
  sub_1BB5D406C();
  v10.origin.x = a2;
  v10.origin.y = a3;
  v10.size.width = a4;
  v10.size.height = a5;
  CGRectGetMinX(v10);
  sub_1BB8735A0();
  v11.origin.x = a2;
  v11.origin.y = a3;
  v11.size.width = a4;
  v11.size.height = a5;
  CGRectGetMinY(v11);
  sub_1BB8735AC();
  __asm { BR              X10 }
}

uint64_t sub_1BB267700()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  unint64_t v30;
  unint64_t v31;
  _QWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t result;

  *(_QWORD *)(v0 + 496) = v3;
  swift_retain();
  swift_retain();
  sub_1BB5D4658();
  v12 = *(_QWORD *)(v7 - 192);
  v13 = *(_QWORD *)(v7 - 184);
  v14 = *(_QWORD *)(v7 - 176);
  v15 = *(_QWORD *)(v7 - 168);
  *(_QWORD *)(v0 + 496) = v3;
  sub_1BA676824();
  v17 = v16;
  v19 = v18;
  swift_beginAccess();
  v20 = *(_QWORD *)(v1 + 16);
  v21 = *(_QWORD *)(v20 + 16);
  swift_bridgeObjectRetain();
  if (v21)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = sub_1BA6E35A8(v17, v19);
    if ((v23 & 1) != 0)
    {
      v24 = *(_QWORD *)(*(_QWORD *)(v20 + 56) + 8 * v22);
      swift_endAccess();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_7;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_endAccess();
  v24 = MEMORY[0x1E0DEE9D8];
LABEL_7:
  sub_1BA739A14(v7 - 192, v0 + 280);
  v25 = 0;
  v26 = 0;
  v27 = 0;
  v28 = 0;
  if ((*(_BYTE *)(v0 + 312) & 1) == 0)
  {
    v25 = v14;
    v26 = v15;
    v27 = v12;
    v28 = v13;
  }
  *(_QWORD *)(v0 + 496) = v4;
  *(_QWORD *)(v0 + 504) = v3;
  *(_OWORD *)(v0 + 512) = 0u;
  *(_OWORD *)(v0 + 528) = 0u;
  *(_BYTE *)(v0 + 544) = 3;
  *(_QWORD *)(v0 + 552) = v2;
  *(_QWORD *)(v0 + 560) = v8;
  *(_QWORD *)(v0 + 568) = v9;
  *(_QWORD *)(v0 + 576) = v10;
  *(_QWORD *)(v0 + 584) = v11;
  *(_QWORD *)(v0 + 592) = v27;
  *(_QWORD *)(v0 + 600) = v28;
  *(_QWORD *)(v0 + 608) = v25;
  *(_QWORD *)(v0 + 616) = v26;
  *(_QWORD *)(v0 + 624) = *(_QWORD *)(v0 + 144);
  *(_QWORD *)(v0 + 632) = *(_QWORD *)(v0 + 152);
  *(_QWORD *)(v0 + 640) = *(_QWORD *)(v0 + 160);
  *(_QWORD *)(v0 + 648) = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 656) = v6;
  *(_QWORD *)(v0 + 664) = v17;
  *(_QWORD *)(v0 + 672) = v19;
  *(_QWORD *)(v0 + 680) = v24;
  *(_BYTE *)(v0 + 688) = *(_DWORD *)(v0 + 184) & 1;
  v29 = *v5;
  sub_1BAFB380C(v0 + 496);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v29 = sub_1BB393018(0, v29[2] + 1, 1, v29);
  v31 = v29[2];
  v30 = v29[3];
  if (v31 >= v30 >> 1)
    v29 = sub_1BB393018((_QWORD *)(v30 > 1), v31 + 1, 1, v29);
  v29[2] = v31 + 1;
  v32 = &v29[25 * v31];
  *((_OWORD *)v32 + 2) = *(_OWORD *)(v0 + 496);
  v33 = *(_OWORD *)(v0 + 512);
  v34 = *(_OWORD *)(v0 + 528);
  v35 = *(_OWORD *)(v0 + 560);
  *((_OWORD *)v32 + 5) = *(_OWORD *)(v0 + 544);
  *((_OWORD *)v32 + 6) = v35;
  *((_OWORD *)v32 + 3) = v33;
  *((_OWORD *)v32 + 4) = v34;
  v36 = *(_OWORD *)(v0 + 576);
  v37 = *(_OWORD *)(v0 + 592);
  v38 = *(_OWORD *)(v0 + 624);
  *((_OWORD *)v32 + 9) = *(_OWORD *)(v0 + 608);
  *((_OWORD *)v32 + 10) = v38;
  *((_OWORD *)v32 + 7) = v36;
  *((_OWORD *)v32 + 8) = v37;
  v39 = *(_OWORD *)(v0 + 640);
  v40 = *(_OWORD *)(v0 + 656);
  v41 = *(_OWORD *)(v0 + 672);
  *((_BYTE *)v32 + 224) = *(_BYTE *)(v0 + 688);
  *((_OWORD *)v32 + 12) = v40;
  *((_OWORD *)v32 + 13) = v41;
  *((_OWORD *)v32 + 11) = v39;
  result = sub_1BAFB3938(v0 + 496);
  *v5 = v29;
  return result;
}

uint64_t sub_1BB2694AC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v10;

  v7 = *a2;
  v6 = a2[1];
  swift_beginAccess();
  result = *(_QWORD *)(a3 + 16);
  if (result != v7 || *(_QWORD *)(a3 + 24) != v6)
  {
    result = sub_1BB874398();
    if ((result & 1) == 0)
    {
      swift_beginAccess();
      *(_QWORD *)(a3 + 16) = v7;
      *(_QWORD *)(a3 + 24) = v6;
      swift_bridgeObjectRetain();
      v10 = swift_bridgeObjectRelease();
      return a4(v10);
    }
  }
  return result;
}

uint64_t sub_1BB269558()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_1BB86DF84();
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for DebugFormatLayoutTree()
{
  return objc_opt_self();
}

uint64_t sub_1BB269624()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB269648()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1BB269674(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  return sub_1BB2694AC(a1, a2, *(_QWORD *)(v2 + 16), *(uint64_t (**)(uint64_t))(v2 + 24));
}

uint64_t sub_1BB269680()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1BB2696A4()
{
  return sub_1BB269558();
}

uint64_t sub_1BB2696AC(uint64_t a1)
{
  uint64_t v2;

  sub_1BA4B07F0(0, &qword_1EF2BF528, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatLayoutOrderingModel, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1BB269700(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1BACABA14(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  result = sub_1BB2697BC(v5);
  *a1 = v2;
  return result;
}

void sub_1BB269768()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BF538)
  {
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BF538);
  }
}

uint64_t sub_1BB2697BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  unint64_t v42;
  unint64_t v43;
  char *v44;
  char *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  BOOL v67;
  uint64_t v68;
  char v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  BOOL v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  unint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t *__dst;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  _BYTE v119[80];
  uint64_t v120;

  v2 = v1;
  v4 = a1[1];
  result = sub_1BB8741F4();
  if (result >= v4)
  {
    if (v4 < 0)
      goto LABEL_130;
    if (v4)
      return sub_1BB26A15C(0, v4, 1, a1);
    return result;
  }
  if (v4 >= 0)
    v6 = v4;
  else
    v6 = v4 + 1;
  if (v4 < -1)
    goto LABEL_138;
  v101 = result;
  v98 = a1;
  if (v4 < 2)
  {
    v9 = (char *)MEMORY[0x1E0DEE9D8];
    __dst = (uint64_t *)(MEMORY[0x1E0DEE9D8] + 32);
    v100 = MEMORY[0x1E0DEE9D8];
    if (v4 != 1)
    {
      v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_96:
      if (v12 >= 2)
      {
        v92 = *v98;
        do
        {
          v93 = v12 - 2;
          if (v12 < 2)
            goto LABEL_125;
          if (!v92)
            goto LABEL_137;
          v94 = *(_QWORD *)&v9[16 * v93 + 32];
          v95 = *(_QWORD *)&v9[16 * v12 + 24];
          sub_1BB26A340((uint64_t *)(v92 + 32 * v94), (uint64_t *)(v92 + 32 * *(_QWORD *)&v9[16 * v12 + 16]), v92 + 32 * v95, __dst);
          if (v2)
            break;
          if (v95 < v94)
            goto LABEL_126;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v9 = sub_1BACAB464((uint64_t)v9);
          if (v93 >= *((_QWORD *)v9 + 2))
            goto LABEL_127;
          v96 = &v9[16 * v93 + 32];
          *(_QWORD *)v96 = v94;
          *((_QWORD *)v96 + 1) = v95;
          v97 = *((_QWORD *)v9 + 2);
          if (v12 > v97)
            goto LABEL_128;
          memmove(&v9[16 * v12 + 16], &v9[16 * v12 + 32], 16 * (v97 - v12));
          *((_QWORD *)v9 + 2) = v97 - 1;
          v12 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_107:
      swift_bridgeObjectRelease();
      *(_QWORD *)(v100 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    v7 = v6 >> 1;
    sub_1BA8651EC();
    v8 = sub_1BB872E74();
    *(_QWORD *)(v8 + 16) = v7;
    v100 = v8;
    __dst = (uint64_t *)(v8 + 32);
  }
  v10 = 0;
  v11 = *a1;
  v99 = *a1 + 48;
  v9 = (char *)MEMORY[0x1E0DEE9D8];
  v105 = v4;
  v110 = *a1;
  while (1)
  {
    v13 = v10;
    v14 = v10 + 1;
    if (v10 + 1 < v4)
    {
      v15 = *(_QWORD *)(v11 + 32 * v14);
      v16 = (uint64_t *)(v11 + 32 * v10);
      v106 = v10;
      v17 = *v16;
      v120 = v16[1];
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v119, v15);
      v116 = sub_1BB874608();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v119, v17);
      v114 = sub_1BB874608();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      v13 = v106;
      swift_bridgeObjectRelease_n();
      v14 = v106 + 2;
      if (v106 + 2 < v4)
      {
        v111 = v106 + 2;
        v18 = v99 + 32 * v106;
        while (1)
        {
          LODWORD(v120) = v116 < v114;
          v19 = *(_QWORD *)(v18 + 16);
          v20 = *(_QWORD *)(v18 - 16);
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1BB8745CC();
          sub_1BA5A0D54((uint64_t)v119, v19);
          v117 = sub_1BB874608();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1BB8745CC();
          sub_1BA5A0D54((uint64_t)v119, v20);
          v21 = sub_1BB874608();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          if ((_DWORD)v120 == v117 >= v21)
            break;
          v18 += 32;
          v4 = v105;
          if (v105 == ++v111)
          {
            v14 = v105;
            goto LABEL_22;
          }
        }
        v4 = v105;
        v14 = v111;
LABEL_22:
        v13 = v106;
      }
      v11 = v110;
      if (v116 < v114)
      {
        if (v14 < v13)
          goto LABEL_131;
        if (v13 < v14)
        {
          v22 = 32 * v14;
          v23 = 32 * v13;
          v24 = v14;
          v25 = v13;
          do
          {
            if (v25 != --v24)
            {
              if (!v110)
                goto LABEL_136;
              v26 = (_OWORD *)(v110 + v23);
              v27 = v110 + v22;
              v28 = *(_OWORD *)(v110 + v23);
              v29 = *(_OWORD *)(v110 + v23 + 16);
              v30 = *(_OWORD *)(v110 + v22 - 16);
              *v26 = *(_OWORD *)(v110 + v22 - 32);
              v26[1] = v30;
              *(_OWORD *)(v27 - 32) = v28;
              *(_OWORD *)(v27 - 16) = v29;
            }
            ++v25;
            v22 -= 32;
            v23 += 32;
          }
          while (v25 < v24);
        }
      }
    }
    if (v14 < v4)
    {
      if (__OFSUB__(v14, v13))
        goto LABEL_129;
      if (v14 - v13 < v101)
        break;
    }
LABEL_48:
    if (v14 < v13)
      goto LABEL_124;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1BACAA368(0, *((_QWORD *)v9 + 2) + 1, 1, v9);
    v43 = *((_QWORD *)v9 + 2);
    v42 = *((_QWORD *)v9 + 3);
    v12 = v43 + 1;
    v11 = v110;
    if (v43 >= v42 >> 1)
    {
      v91 = sub_1BACAA368((char *)(v42 > 1), v43 + 1, 1, v9);
      v11 = v110;
      v9 = v91;
    }
    *((_QWORD *)v9 + 2) = v12;
    v44 = v9 + 32;
    v45 = &v9[16 * v43 + 32];
    *(_QWORD *)v45 = v13;
    *((_QWORD *)v45 + 1) = v14;
    v113 = v14;
    if (v43)
    {
      while (1)
      {
        v46 = v12 - 1;
        if (v12 >= 4)
        {
          v51 = &v44[16 * v12];
          v52 = *((_QWORD *)v51 - 8);
          v53 = *((_QWORD *)v51 - 7);
          v57 = __OFSUB__(v53, v52);
          v54 = v53 - v52;
          if (v57)
            goto LABEL_113;
          v56 = *((_QWORD *)v51 - 6);
          v55 = *((_QWORD *)v51 - 5);
          v57 = __OFSUB__(v55, v56);
          v49 = v55 - v56;
          v50 = v57;
          if (v57)
            goto LABEL_114;
          v58 = v12 - 2;
          v59 = &v44[16 * v12 - 32];
          v61 = *(_QWORD *)v59;
          v60 = *((_QWORD *)v59 + 1);
          v57 = __OFSUB__(v60, v61);
          v62 = v60 - v61;
          if (v57)
            goto LABEL_116;
          v57 = __OFADD__(v49, v62);
          v63 = v49 + v62;
          if (v57)
            goto LABEL_119;
          if (v63 >= v54)
          {
            v81 = &v44[16 * v46];
            v83 = *(_QWORD *)v81;
            v82 = *((_QWORD *)v81 + 1);
            v57 = __OFSUB__(v82, v83);
            v84 = v82 - v83;
            if (v57)
              goto LABEL_123;
            v74 = v49 < v84;
            goto LABEL_85;
          }
        }
        else
        {
          if (v12 != 3)
          {
            v75 = *((_QWORD *)v9 + 4);
            v76 = *((_QWORD *)v9 + 5);
            v57 = __OFSUB__(v76, v75);
            v68 = v76 - v75;
            v69 = v57;
            goto LABEL_79;
          }
          v48 = *((_QWORD *)v9 + 4);
          v47 = *((_QWORD *)v9 + 5);
          v57 = __OFSUB__(v47, v48);
          v49 = v47 - v48;
          v50 = v57;
        }
        if ((v50 & 1) != 0)
          goto LABEL_115;
        v58 = v12 - 2;
        v64 = &v44[16 * v12 - 32];
        v66 = *(_QWORD *)v64;
        v65 = *((_QWORD *)v64 + 1);
        v67 = __OFSUB__(v65, v66);
        v68 = v65 - v66;
        v69 = v67;
        if (v67)
          goto LABEL_118;
        v70 = &v44[16 * v46];
        v72 = *(_QWORD *)v70;
        v71 = *((_QWORD *)v70 + 1);
        v57 = __OFSUB__(v71, v72);
        v73 = v71 - v72;
        if (v57)
          goto LABEL_121;
        if (__OFADD__(v68, v73))
          goto LABEL_122;
        if (v68 + v73 >= v49)
        {
          v74 = v49 < v73;
LABEL_85:
          if (v74)
            v46 = v58;
          goto LABEL_87;
        }
LABEL_79:
        if ((v69 & 1) != 0)
          goto LABEL_117;
        v77 = &v44[16 * v46];
        v79 = *(_QWORD *)v77;
        v78 = *((_QWORD *)v77 + 1);
        v57 = __OFSUB__(v78, v79);
        v80 = v78 - v79;
        if (v57)
          goto LABEL_120;
        if (v80 < v68)
          goto LABEL_14;
LABEL_87:
        v85 = v46 - 1;
        if (v46 - 1 >= v12)
        {
          __break(1u);
LABEL_110:
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
          goto LABEL_133;
        }
        if (!v11)
          goto LABEL_135;
        v86 = &v44[16 * v85];
        v87 = *(_QWORD *)v86;
        v88 = &v44[16 * v46];
        v89 = *((_QWORD *)v88 + 1);
        sub_1BB26A340((uint64_t *)(v11 + 32 * *(_QWORD *)v86), (uint64_t *)(v11 + 32 * *(_QWORD *)v88), v11 + 32 * v89, __dst);
        if (v2)
          goto LABEL_107;
        if (v89 < v87)
          goto LABEL_110;
        if (v46 > *((_QWORD *)v9 + 2))
          goto LABEL_111;
        *(_QWORD *)v86 = v87;
        *(_QWORD *)&v44[16 * v85 + 8] = v89;
        v90 = *((_QWORD *)v9 + 2);
        if (v46 >= v90)
          goto LABEL_112;
        v12 = v90 - 1;
        memmove(&v44[16 * v46], v88 + 16, 16 * (v90 - 1 - v46));
        *((_QWORD *)v9 + 2) = v90 - 1;
        v11 = v110;
        if (v90 <= 2)
          goto LABEL_14;
      }
    }
    v12 = 1;
LABEL_14:
    v4 = v105;
    v10 = v113;
    if (v113 >= v105)
      goto LABEL_96;
  }
  v31 = v13 + v101;
  if (__OFADD__(v13, v101))
    goto LABEL_132;
  if (v31 >= v4)
    v31 = v4;
  if (v31 >= v13)
  {
    if (v14 != v31)
    {
      v107 = v13;
      v102 = v9;
      v103 = v2;
      v32 = (uint64_t *)(v11 + 32 * v14);
      v104 = v31;
      do
      {
        v34 = *(_QWORD *)(v11 + 32 * v14);
        v108 = v32;
        v35 = v107;
        v112 = v14;
        while (1)
        {
          v115 = v35;
          v36 = *(v32 - 4);
          v120 = *(v32 - 3);
          swift_bridgeObjectRetain_n();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_retain();
          sub_1BB8745CC();
          sub_1BA5A0D54((uint64_t)v119, v34);
          v118 = sub_1BB874608();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRetain();
          sub_1BB8745CC();
          sub_1BA5A0D54((uint64_t)v119, v36);
          v37 = sub_1BB874608();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
          if (v118 >= v37)
            break;
          v11 = v110;
          v33 = v112;
          if (!v110)
            goto LABEL_134;
          v34 = *v32;
          v38 = v32[1];
          v39 = v32[2];
          v40 = v32[3];
          v41 = *((_OWORD *)v32 - 1);
          *(_OWORD *)v32 = *((_OWORD *)v32 - 2);
          *((_OWORD *)v32 + 1) = v41;
          *(v32 - 3) = v38;
          *(v32 - 2) = v39;
          *(v32 - 1) = v40;
          *(v32 - 4) = v34;
          v32 -= 4;
          v35 = v115 + 1;
          if (v112 == v115 + 1)
            goto LABEL_41;
        }
        v11 = v110;
        v33 = v112;
LABEL_41:
        v14 = v33 + 1;
        v32 = v108 + 4;
      }
      while (v14 != v104);
      v14 = v104;
      v9 = v102;
      v2 = v103;
      v13 = v107;
    }
    goto LABEL_48;
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
LABEL_135:
  __break(1u);
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BB26A15C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[72];
  uint64_t v20;

  v13 = result;
  if (a3 != a2)
  {
    v15 = *a4;
    v4 = (uint64_t *)(*a4 + 32 * a3);
LABEL_5:
    v5 = *(_QWORD *)(v15 + 32 * a3);
    v14 = v4;
    v16 = a3;
    v17 = v13;
    while (1)
    {
      v6 = *(v4 - 4);
      v20 = *(v4 - 3);
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v19, v5);
      v18 = sub_1BB874608();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v19, v6);
      v7 = sub_1BB874608();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      result = swift_bridgeObjectRelease_n();
      if (v18 >= v7)
      {
LABEL_4:
        a3 = v16 + 1;
        v4 = v14 + 4;
        if (v16 + 1 == a2)
          return result;
        goto LABEL_5;
      }
      if (!v15)
        break;
      v5 = *v4;
      v8 = v4[1];
      v9 = v4[2];
      v10 = v4[3];
      v11 = *((_OWORD *)v4 - 1);
      *(_OWORD *)v4 = *((_OWORD *)v4 - 2);
      *((_OWORD *)v4 + 1) = v11;
      *(v4 - 3) = v8;
      *(v4 - 2) = v9;
      *(v4 - 1) = v10;
      *(v4 - 4) = v5;
      v4 -= 4;
      if (v16 == ++v17)
        goto LABEL_4;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB26A340(uint64_t *__src, uint64_t *a2, unint64_t a3, uint64_t *__dst)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  int64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  __int128 v18;
  __int128 v19;
  char *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  __int128 v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t *v36;
  char *v37;
  uint64_t v39;
  char *v40;
  _OWORD *v41;
  uint64_t *v42;
  uint64_t *v43;
  _BYTE v44[72];
  char *v45;
  uint64_t *v46;
  uint64_t *v47;

  v4 = __dst;
  v5 = a2;
  v6 = __src;
  v7 = (char *)a2 - (char *)__src;
  v8 = (char *)a2 - (char *)__src + 31;
  if ((char *)a2 - (char *)__src >= 0)
    v8 = (char *)a2 - (char *)__src;
  v9 = v8 >> 5;
  v10 = a3 - (_QWORD)a2;
  v11 = a3 - (_QWORD)a2 + 31;
  if ((uint64_t)(a3 - (_QWORD)a2) >= 0)
    v11 = a3 - (_QWORD)a2;
  v12 = v11 >> 5;
  v47 = __src;
  v46 = __dst;
  if (v9 >= v11 >> 5)
  {
    if (v10 < -31)
      goto LABEL_44;
    if (__dst != a2 || &a2[4 * v12] <= __dst)
      memmove(__dst, a2, 32 * v12);
    v20 = (char *)&v4[4 * v12];
    v45 = v20;
    v47 = v5;
    if (v6 >= v5 || v10 < 32)
      goto LABEL_43;
    v21 = (uint64_t *)(a3 - 32);
    v22 = v5;
    v35 = v4;
    v42 = v6;
    while (1)
    {
      v43 = v5;
      v40 = v20;
      v41 = v21 + 4;
      v23 = *((_QWORD *)v20 - 4);
      v20 -= 32;
      v24 = *(v22 - 4);
      v22 -= 4;
      v36 = v21;
      swift_bridgeObjectRetain_n();
      swift_retain();
      swift_retain();
      swift_retain();
      v25 = v24;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_retain();
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v44, v23);
      v26 = sub_1BB874608();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1BB8745CC();
      sub_1BA5A0D54((uint64_t)v44, v25);
      v27 = sub_1BB874608();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      if (v26 >= v27)
      {
        v45 = v20;
        v22 = v43;
        v28 = v36;
        if (v41 >= (_OWORD *)v40 && v36 < (uint64_t *)v40)
        {
          v30 = (unint64_t)v35;
          v31 = (unint64_t)v42;
          if (v41 != (_OWORD *)v40)
          {
            v32 = *((_OWORD *)v20 + 1);
            *(_OWORD *)v36 = *(_OWORD *)v20;
            *((_OWORD *)v36 + 1) = v32;
          }
          goto LABEL_41;
        }
        v33 = *((_OWORD *)v20 + 1);
        *(_OWORD *)v36 = *(_OWORD *)v20;
        *((_OWORD *)v36 + 1) = v33;
      }
      else
      {
        v20 = v40;
        v28 = v36;
        if (v41 != (_OWORD *)v43 || v36 >= v43)
        {
          v29 = *((_OWORD *)v22 + 1);
          *(_OWORD *)v36 = *(_OWORD *)v22;
          *((_OWORD *)v36 + 1) = v29;
        }
        v47 = v22;
      }
      v30 = (unint64_t)v35;
      v31 = (unint64_t)v42;
LABEL_41:
      if ((unint64_t)v22 > v31)
      {
        v21 = v28 - 4;
        v5 = v22;
        if ((unint64_t)v20 > v30)
          continue;
      }
      goto LABEL_43;
    }
  }
  if (v7 >= -31)
  {
    if (__dst != __src || &__src[4 * v9] <= __dst)
      memmove(__dst, __src, 32 * v9);
    v37 = (char *)&v4[4 * v9];
    v45 = v37;
    if ((unint64_t)v5 < a3 && v7 >= 32)
    {
      do
      {
        v13 = *v5;
        v14 = *v4;
        v15 = v4;
        swift_bridgeObjectRetain_n();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_retain();
        sub_1BB8745CC();
        sub_1BA5A0D54((uint64_t)v44, v13);
        v39 = sub_1BB874608();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1BB8745CC();
        sub_1BA5A0D54((uint64_t)v44, v14);
        v16 = sub_1BB874608();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        if (v39 >= v16)
        {
          v17 = v5;
          if (v6 != v4)
          {
            v19 = *((_OWORD *)v4 + 1);
            *(_OWORD *)v6 = *(_OWORD *)v4;
            *((_OWORD *)v6 + 1) = v19;
          }
          v4 += 4;
          v46 = v15 + 4;
        }
        else
        {
          v17 = v5 + 4;
          if (v6 < v5 || v6 >= v17 || v6 != v5)
          {
            v18 = *((_OWORD *)v5 + 1);
            *(_OWORD *)v6 = *(_OWORD *)v5;
            *((_OWORD *)v6 + 1) = v18;
          }
        }
        v6 += 4;
        if (v4 >= (uint64_t *)v37)
          break;
        v5 = v17;
      }
      while ((unint64_t)v17 < a3);
      v47 = v6;
    }
LABEL_43:
    sub_1BACAB20C((void **)&v47, (const void **)&v46, &v45);
    return 1;
  }
LABEL_44:
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB26A804()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB26A840()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 104) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v0 + 136))
      __swift_destroy_boxed_opaque_existential_1(v0 + 112);
  }
  return swift_deallocObject();
}

uint64_t sub_1BB26A89C()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 48) >= 0x11uLL)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 128))
    __swift_destroy_boxed_opaque_existential_1(v0 + 104);
  if (*(_QWORD *)(v0 + 168))
    __swift_destroy_boxed_opaque_existential_1(v0 + 144);
  return swift_deallocObject();
}

uint64_t sub_1BB26A908()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v0 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

  }
  if (*(_QWORD *)(v0 + 144) >= 0x11uLL)
    swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1BB26A96C(uint64_t a1, uint64_t a2)
{
  initializeWithCopy for DebugFormatLayoutFeedItem(a2, a1);
  return a2;
}

uint64_t sub_1BB26A9A8(uint64_t a1)
{
  destroy for FeedTag.Overrides.Image();
  return a1;
}

uint64_t sub_1BB26A9DC(void **__src, void **a2, unint64_t a3, void **a4)
{
  void **v4;
  void **v5;
  int64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  void **v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  char v16;
  void **v17;
  void **v18;
  __int128 v19;
  char v20;
  __int128 v21;
  char v22;
  char *v23;
  unint64_t v24;
  void **v25;
  _QWORD *v26;
  void *v27;
  void *v28;
  void *v29;
  void *v30;
  char v32;
  unint64_t v33;
  __int128 v34;
  char v35;
  __int128 v36;
  char v37;
  uint64_t result;
  _QWORD *v39;
  void *v40;
  void *__dsta;
  void **v43;
  unint64_t v44;
  void **v46;
  void **v47;
  void **v48;
  void *v49;
  void *v50;
  char *v51;
  void **v52;
  void **v53;

  v4 = a2;
  v5 = __src;
  v6 = (char *)a2 - (char *)__src;
  v7 = ((char *)a2 - (char *)__src) / 24;
  v8 = a3 - (_QWORD)a2;
  v9 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  v53 = __src;
  v52 = a4;
  if (v7 >= v9)
  {
    if (v8 < -23)
      goto LABEL_76;
    if (a4 != a2 || &a2[3 * v9] <= a4)
      memmove(a4, a2, 24 * v9);
    v23 = (char *)&a4[3 * v9];
    v51 = v23;
    v53 = v4;
    if (v5 >= v4 || v8 < 24)
    {
LABEL_75:
      sub_1BACAB2E4((void **)&v53, (const void **)&v52, &v51);
      return 1;
    }
    v24 = a3 - 24;
    v25 = v4;
    while (1)
    {
      v48 = v4;
      v44 = v24;
      v26 = (_QWORD *)(v24 + 24);
      v27 = (void *)*((_QWORD *)v23 - 3);
      v28 = (void *)*((_QWORD *)v23 - 2);
      v29 = *(v25 - 3);
      v30 = *(v25 - 2);
      v25 -= 3;
      v40 = v29;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB86DF9C();
      if (v27 == v49 && v28 == v50)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v33 = v44;
LABEL_51:
        if (v26 != v48 || v33 >= (unint64_t)v48)
        {
          v34 = *(_OWORD *)v25;
          *(_QWORD *)(v33 + 16) = v25[2];
          *(_OWORD *)v33 = v34;
        }
        v53 = v25;
        goto LABEL_55;
      }
      v39 = v26;
      v32 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v32 & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v33 = v44;
        v26 = v39;
        goto LABEL_51;
      }
      sub_1BB86DF9C();
      if (v40 == v49 && v30 == v50)
        break;
      v35 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v35 & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
      if (v27 == v40 && v28 == v30)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        goto LABEL_63;
      }
      v37 = sub_1BB874398();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v26 = v39;
      v33 = v44;
      if ((v37 & 1) != 0)
        goto LABEL_51;
LABEL_64:
      v51 = v23 - 24;
      v25 = v48;
      if (v26 >= (_QWORD *)v23 && v33 < (unint64_t)v23 && v26 == (_QWORD *)v23)
      {
        v23 -= 24;
      }
      else
      {
        v36 = *(_OWORD *)(v23 - 24);
        *(_QWORD *)(v33 + 16) = *((_QWORD *)v23 - 1);
        *(_OWORD *)v33 = v36;
        v23 -= 24;
      }
LABEL_55:
      if (v25 > v5)
      {
        v24 = v33 - 24;
        v4 = v25;
        if (v23 > (char *)a4)
          continue;
      }
      goto LABEL_75;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
LABEL_63:
    v26 = v39;
    v33 = v44;
    goto LABEL_64;
  }
  if (v6 >= -23)
  {
    if (a4 != __src || &__src[3 * v7] <= a4)
      memmove(a4, __src, 24 * v7);
    v43 = &a4[3 * v7];
    v51 = (char *)v43;
    if ((unint64_t)v4 < a3 && v6 >= 24)
    {
      v10 = a4;
      while (1)
      {
        v46 = v5;
        v47 = v4;
        v11 = *v4;
        v12 = v4[1];
        v13 = *v10;
        v14 = v10[1];
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1BB86DF9C();
        if (v11 == v49 && v12 == v50)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          __dsta = v13;
          v16 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v16 & 1) != 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            sub_1BB86DF9C();
            if (__dsta == v49 && v14 == v50)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              goto LABEL_23;
            }
            v20 = sub_1BB874398();
            swift_bridgeObjectRelease();
            if ((v20 & 1) != 0)
            {
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_26;
            }
            if (v11 == __dsta && v12 == v14)
            {
              swift_release();
              swift_release();
LABEL_23:
              swift_bridgeObjectRelease_n();
LABEL_26:
              v17 = v46;
              if (v46 != v10)
              {
                v21 = *(_OWORD *)v10;
                v46[2] = v10[2];
                *(_OWORD *)v46 = v21;
              }
              v10 += 3;
              v52 = v10;
              v18 = v47;
              goto LABEL_29;
            }
            v22 = sub_1BB874398();
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
            if ((v22 & 1) == 0)
              goto LABEL_26;
          }
        }
        v17 = v46;
        v18 = v47 + 3;
        if (v46 < v47 || v46 >= v18 || v46 != v47)
        {
          v19 = *(_OWORD *)v47;
          v46[2] = v47[2];
          *(_OWORD *)v46 = v19;
        }
LABEL_29:
        v5 = v17 + 3;
        if (v10 < v43)
        {
          v4 = v18;
          if ((unint64_t)v18 < a3)
            continue;
        }
        v53 = v5;
        goto LABEL_75;
      }
    }
    goto LABEL_75;
  }
LABEL_76:
  swift_release();
  result = sub_1BB873F84();
  __break(1u);
  return result;
}

uint64_t sub_1BB26B070(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  uint64_t v13;
  char v14;
  char v15;
  uint64_t v16;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v18 = result;
  if (a3 != a2)
  {
    v20 = *a4;
    v4 = (_QWORD *)(*a4 + 24 * a3);
LABEL_7:
    v6 = (uint64_t *)(v20 + 24 * a3);
    v7 = *v6;
    v8 = v6[1];
    v9 = v18;
    v19 = v4;
    v21 = a3;
    while (1)
    {
      v26 = v9;
      v10 = *(v4 - 2);
      v23 = *(v4 - 3);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB86DF9C();
      if (v7 == v24 && v8 == v25)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease_n();
        v13 = v26;
        v5 = v21;
      }
      else
      {
        v22 = v10;
        v12 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v12 & 1) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          result = swift_bridgeObjectRelease();
          v5 = v21;
          v13 = v26;
        }
        else
        {
          sub_1BB86DF9C();
          if (v23 == v24 && v22 == v25)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_26;
          }
          v14 = sub_1BB874398();
          swift_bridgeObjectRelease();
          if ((v14 & 1) != 0)
          {
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();
            result = swift_bridgeObjectRelease();
            goto LABEL_5;
          }
          if (v7 == v23 && v8 == v22)
          {
            swift_release();
            swift_release();
LABEL_26:
            result = swift_bridgeObjectRelease_n();
LABEL_5:
            v5 = v21;
LABEL_6:
            a3 = v5 + 1;
            v4 = v19 + 3;
            if (a3 == a2)
              return result;
            goto LABEL_7;
          }
          v15 = sub_1BB874398();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          result = swift_bridgeObjectRelease();
          v5 = v21;
          v13 = v26;
          if ((v15 & 1) == 0)
            goto LABEL_6;
        }
      }
      if (!v20)
        break;
      v7 = *v4;
      v8 = v4[1];
      v16 = v4[2];
      *(_OWORD *)v4 = *(_OWORD *)(v4 - 3);
      v4[2] = *(v4 - 1);
      *(v4 - 2) = v8;
      *(v4 - 1) = v16;
      *(v4 - 3) = v7;
      v4 -= 3;
      v9 = v13 + 1;
      if (v5 == v9)
        goto LABEL_6;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1BB26B32C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  char v30;
  char v32;
  int v34;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v54;
  char v55;
  char v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  char *v60;
  char *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  BOOL v73;
  unint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  BOOL v83;
  uint64_t v84;
  char v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  BOOL v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  unint64_t v105;
  char *v106;
  uint64_t v107;
  void **v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void **v116;
  char *v117;
  unint64_t v118;
  uint64_t result;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  void **v131;
  uint64_t v132;
  int v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  void **v146;

  v3 = a1[1];
  swift_retain_n();
  v4 = sub_1BB8741F4();
  if (v4 >= v3)
  {
    if (v3 < 0)
      goto LABEL_203;
    if (v3)
    {
      swift_retain();
      sub_1BB26B070(0, v3, 1, a1);
    }
    swift_release_n();
    return swift_release();
  }
  if (v3 >= 0)
    v5 = v3;
  else
    v5 = v3 + 1;
  if (v3 < -1)
    goto LABEL_211;
  v129 = v3;
  v123 = v4;
  v132 = v1;
  v120 = a1;
  if (v3 < 2)
  {
    v131 = (void **)(MEMORY[0x1E0DEE9D8] + 32);
    v122 = MEMORY[0x1E0DEE9D8];
    if (v3 == 1)
      goto LABEL_13;
    v10 = (char *)MEMORY[0x1E0DEE9D8];
    v12 = *(_QWORD *)(MEMORY[0x1E0DEE9D8] + 16);
LABEL_167:
    v126 = v10;
    if (v12 >= 2)
    {
      v112 = *v120;
      do
      {
        v113 = v12 - 2;
        if (v12 < 2)
          goto LABEL_198;
        if (!v112)
          goto LABEL_210;
        v114 = *(_QWORD *)&v126[16 * v113 + 32];
        v115 = *(_QWORD *)&v126[16 * v12 + 24];
        v116 = (void **)(v112 + 24 * *(_QWORD *)&v126[16 * v12 + 16]);
        swift_retain();
        sub_1BB26A9DC((void **)(v112 + 24 * v114), v116, v112 + 24 * v115, v131);
        if (v132)
          goto LABEL_164;
        swift_release();
        if (v115 < v114)
          goto LABEL_199;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v126 = sub_1BACAB464((uint64_t)v126);
        if (v113 >= *((_QWORD *)v126 + 2))
          goto LABEL_200;
        v117 = &v126[16 * v113 + 32];
        *(_QWORD *)v117 = v114;
        *((_QWORD *)v117 + 1) = v115;
        v118 = *((_QWORD *)v126 + 2);
        if (v12 > v118)
          goto LABEL_201;
        memmove(&v126[16 * v12 + 16], &v126[16 * v12 + 32], 16 * (v118 - v12));
        *((_QWORD *)v126 + 2) = v118 - 1;
        v12 = v118 - 1;
      }
      while (v118 > 2);
    }
    swift_bridgeObjectRelease();
LABEL_179:
    *(_QWORD *)(v122 + 16) = 0;
    swift_release_n();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  v6 = v5 >> 1;
  sub_1BA865254();
  v7 = sub_1BB872E74();
  *(_QWORD *)(v7 + 16) = v6;
  v122 = v7;
  v131 = (void **)(v7 + 32);
LABEL_13:
  v8 = *a1;
  v9 = 0;
  v121 = v8 + 16;
  v10 = (char *)MEMORY[0x1E0DEE9D8];
  v11 = v129;
  v135 = v8;
  while (2)
  {
    v13 = v9++;
    if (v9 >= v11)
    {
LABEL_72:
      if (v9 >= v11)
        goto LABEL_107;
      goto LABEL_73;
    }
    v136 = v9;
    v14 = (uint64_t *)(v8 + 24 * v9);
    v16 = *v14;
    v15 = v14[1];
    v17 = (uint64_t *)(v8 + 24 * v13);
    v18 = v17[1];
    v143 = *v17;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1BB86DF9C();
    v19 = v16 == v141 && v15 == v142;
    v127 = v13;
    if (v19)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      v133 = 1;
      goto LABEL_24;
    }
    v20 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v20 & 1) != 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v133 = 1;
      v13 = v127;
      goto LABEL_24;
    }
    sub_1BB86DF9C();
    if (v143 == v141 && v18 == v142)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease_n();
      v133 = 0;
      v13 = v127;
      goto LABEL_24;
    }
    v36 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v36 & 1) == 0)
    {
      if (v16 == v143 && v15 == v18)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
        v13 = v127;
        v11 = v129;
        v21 = v127 + 2;
        v22 = v136;
        if (v127 + 2 >= v129)
        {
LABEL_161:
          v9 = v21;
          v8 = v135;
          if (v21 >= v11)
            goto LABEL_107;
          goto LABEL_73;
        }
        v133 = 0;
        goto LABEL_160;
      }
      v133 = sub_1BB874398();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v13 = v127;
LABEL_24:
      v21 = v13 + 2;
      v11 = v129;
      v22 = v136;
      v8 = v135;
      if (v13 + 2 >= v129)
        goto LABEL_60;
      goto LABEL_25;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v13 = v127;
    v11 = v129;
    v21 = v127 + 2;
    if (v127 + 2 >= v129)
      goto LABEL_161;
    v133 = 0;
    v22 = v136;
LABEL_160:
    v8 = v135;
LABEL_25:
    v23 = v121 + 24 * v21;
    v24 = v21;
    do
    {
      v144 = v24;
      v26 = *(_QWORD *)(v23 - 16);
      v25 = *(_QWORD *)(v23 - 8);
      v27 = (uint64_t *)(v8 + 24 * v22);
      v28 = v27[1];
      v139 = *v27;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      sub_1BB86DF9C();
      if (v26 == v141 && v25 == v142)
      {
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        v8 = v135;
        if ((v133 & 1) == 0)
          goto LABEL_71;
        goto LABEL_27;
      }
      v30 = sub_1BB874398();
      swift_bridgeObjectRelease();
      if ((v30 & 1) != 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v8 = v135;
        if ((v133 & 1) == 0)
        {
LABEL_71:
          v9 = v144;
          v13 = v127;
          v11 = v129;
          goto LABEL_72;
        }
      }
      else
      {
        sub_1BB86DF9C();
        if (v139 == v141 && v28 == v142)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          v8 = v135;
          if ((v133 & 1) != 0)
            goto LABEL_51;
          goto LABEL_27;
        }
        v32 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v32 & 1) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_50;
        }
        if (v26 == v139 && v25 == v28)
        {
          swift_release();
          swift_release();
          swift_bridgeObjectRelease_n();
LABEL_50:
          v8 = v135;
          if ((v133 & 1) != 0)
          {
LABEL_51:
            v13 = v127;
            v11 = v129;
            v21 = v144;
            goto LABEL_61;
          }
          goto LABEL_27;
        }
        v34 = sub_1BB874398();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        v8 = v135;
        if (((v133 ^ v34) & 1) != 0)
        {
          v13 = v127;
          v11 = v129;
          v21 = v144;
          goto LABEL_60;
        }
      }
LABEL_27:
      v22 = v144;
      v24 = v144 + 1;
      v23 += 24;
    }
    while (v144 + 1 < v129);
    v21 = v144 + 1;
    v13 = v127;
    v11 = v129;
LABEL_60:
    v9 = v21;
    if ((v133 & 1) == 0)
      goto LABEL_72;
LABEL_61:
    if (v21 < v13)
      goto LABEL_206;
    if (v13 < v21)
    {
      v37 = 24 * v21;
      v38 = 24 * v13;
      v39 = v21;
      v40 = v13;
      do
      {
        if (v40 != --v39)
        {
          if (!v8)
            goto LABEL_209;
          v41 = v8 + v38;
          v42 = v8 + v37;
          v43 = *(_QWORD *)(v8 + v38);
          v44 = *(_OWORD *)(v8 + v38 + 8);
          v45 = *(_OWORD *)(v8 + v37 - 24);
          *(_QWORD *)(v41 + 16) = *(_QWORD *)(v8 + v37 - 8);
          *(_OWORD *)v41 = v45;
          *(_QWORD *)(v42 - 24) = v43;
          *(_OWORD *)(v42 - 16) = v44;
        }
        ++v40;
        v37 -= 24;
        v38 += 24;
      }
      while (v40 < v39);
    }
    v9 = v21;
    if (v21 >= v11)
      goto LABEL_107;
LABEL_73:
    if (__OFSUB__(v9, v13))
      goto LABEL_202;
    if (v9 - v13 >= v123)
      goto LABEL_107;
    if (__OFADD__(v13, v123))
      goto LABEL_204;
    if (v13 + v123 >= v11)
      v46 = v11;
    else
      v46 = v13 + v123;
    if (v46 >= v13)
    {
      if (v9 == v46)
        goto LABEL_107;
      v125 = v10;
      v128 = v13;
      v47 = (_QWORD *)(v8 + 24 * v9);
      v124 = v46;
      while (2)
      {
        v49 = (uint64_t *)(v8 + 24 * v9);
        v50 = *v49;
        v51 = v49[1];
        v130 = v47;
        v137 = v9;
        while (2)
        {
          v145 = v13;
          v52 = *(v47 - 2);
          v140 = *(v47 - 3);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_bridgeObjectRetain();
          swift_retain();
          sub_1BB86DF9C();
          if (v50 == v141 && v51 == v142)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
LABEL_92:
            v8 = v135;
LABEL_99:
            if (!v8)
              goto LABEL_207;
            v50 = *v47;
            v51 = v47[1];
            v57 = v47[2];
            *(_OWORD *)v47 = *(_OWORD *)(v47 - 3);
            v47[2] = *(v47 - 1);
            *(v47 - 2) = v51;
            *(v47 - 1) = v57;
            *(v47 - 3) = v50;
            v47 -= 3;
            ++v13;
            v48 = v137;
            if (v137 == v145 + 1)
              goto LABEL_83;
            continue;
          }
          break;
        }
        v134 = v52;
        v54 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v54 & 1) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_92;
        }
        sub_1BB86DF9C();
        if (v140 == v141 && v134 == v142)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease_n();
          v8 = v135;
          v48 = v137;
          goto LABEL_83;
        }
        v55 = sub_1BB874398();
        swift_bridgeObjectRelease();
        if ((v55 & 1) != 0)
        {
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_104;
        }
        if (v50 != v140 || v51 != v134)
        {
          v56 = sub_1BB874398();
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          v8 = v135;
          if ((v56 & 1) == 0)
            goto LABEL_105;
          goto LABEL_99;
        }
        swift_release();
        swift_release();
        swift_bridgeObjectRelease_n();
LABEL_104:
        v8 = v135;
LABEL_105:
        v48 = v137;
LABEL_83:
        v9 = v48 + 1;
        v47 = v130 + 3;
        v13 = v128;
        if (v9 != v124)
          continue;
        break;
      }
      v9 = v124;
      v10 = v125;
LABEL_107:
      if (v9 < v13)
        goto LABEL_197;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v10 = sub_1BACAA368(0, *((_QWORD *)v10 + 2) + 1, 1, v10);
      v59 = *((_QWORD *)v10 + 2);
      v58 = *((_QWORD *)v10 + 3);
      v12 = v59 + 1;
      if (v59 >= v58 >> 1)
        v10 = sub_1BACAA368((char *)(v58 > 1), v59 + 1, 1, v10);
      *((_QWORD *)v10 + 2) = v12;
      v60 = v10 + 32;
      v61 = &v10[16 * v59 + 32];
      *(_QWORD *)v61 = v13;
      *((_QWORD *)v61 + 1) = v9;
      if (!v59)
      {
        v12 = 1;
LABEL_15:
        v11 = v129;
        if (v9 >= v129)
          goto LABEL_167;
        continue;
      }
      v138 = v9;
LABEL_114:
      v62 = v12 - 1;
      if (v12 >= 4)
      {
        v67 = &v60[16 * v12];
        v68 = *((_QWORD *)v67 - 8);
        v69 = *((_QWORD *)v67 - 7);
        v73 = __OFSUB__(v69, v68);
        v70 = v69 - v68;
        if (v73)
          goto LABEL_186;
        v72 = *((_QWORD *)v67 - 6);
        v71 = *((_QWORD *)v67 - 5);
        v73 = __OFSUB__(v71, v72);
        v65 = v71 - v72;
        v66 = v73;
        if (v73)
          goto LABEL_187;
        v74 = v12 - 2;
        v75 = &v60[16 * v12 - 32];
        v77 = *(_QWORD *)v75;
        v76 = *((_QWORD *)v75 + 1);
        v73 = __OFSUB__(v76, v77);
        v78 = v76 - v77;
        if (v73)
          goto LABEL_189;
        v73 = __OFADD__(v65, v78);
        v79 = v65 + v78;
        if (v73)
          goto LABEL_192;
        if (v79 >= v70)
        {
          v97 = &v60[16 * v62];
          v99 = *(_QWORD *)v97;
          v98 = *((_QWORD *)v97 + 1);
          v73 = __OFSUB__(v98, v99);
          v100 = v98 - v99;
          if (v73)
            goto LABEL_196;
          v90 = v65 < v100;
        }
        else
        {
LABEL_127:
          if ((v66 & 1) != 0)
            goto LABEL_188;
          v74 = v12 - 2;
          v80 = &v60[16 * v12 - 32];
          v82 = *(_QWORD *)v80;
          v81 = *((_QWORD *)v80 + 1);
          v83 = __OFSUB__(v81, v82);
          v84 = v81 - v82;
          v85 = v83;
          if (v83)
            goto LABEL_191;
          v86 = &v60[16 * v62];
          v88 = *(_QWORD *)v86;
          v87 = *((_QWORD *)v86 + 1);
          v73 = __OFSUB__(v87, v88);
          v89 = v87 - v88;
          if (v73)
            goto LABEL_194;
          if (__OFADD__(v84, v89))
            goto LABEL_195;
          if (v84 + v89 < v65)
            goto LABEL_139;
          v90 = v65 < v89;
        }
        if (v90)
          v62 = v74;
      }
      else
      {
        if (v12 == 3)
        {
          v64 = *((_QWORD *)v10 + 4);
          v63 = *((_QWORD *)v10 + 5);
          v73 = __OFSUB__(v63, v64);
          v65 = v63 - v64;
          v66 = v73;
          goto LABEL_127;
        }
        v91 = *((_QWORD *)v10 + 4);
        v92 = *((_QWORD *)v10 + 5);
        v73 = __OFSUB__(v92, v91);
        v84 = v92 - v91;
        v85 = v73;
LABEL_139:
        if ((v85 & 1) != 0)
          goto LABEL_190;
        v93 = &v60[16 * v62];
        v95 = *(_QWORD *)v93;
        v94 = *((_QWORD *)v93 + 1);
        v73 = __OFSUB__(v94, v95);
        v96 = v94 - v95;
        if (v73)
          goto LABEL_193;
        if (v96 < v84)
          goto LABEL_15;
      }
      v101 = v62 - 1;
      if (v62 - 1 >= v12)
      {
        __break(1u);
LABEL_183:
        __break(1u);
LABEL_184:
        __break(1u);
LABEL_185:
        __break(1u);
LABEL_186:
        __break(1u);
LABEL_187:
        __break(1u);
LABEL_188:
        __break(1u);
LABEL_189:
        __break(1u);
LABEL_190:
        __break(1u);
LABEL_191:
        __break(1u);
LABEL_192:
        __break(1u);
LABEL_193:
        __break(1u);
LABEL_194:
        __break(1u);
LABEL_195:
        __break(1u);
LABEL_196:
        __break(1u);
LABEL_197:
        __break(1u);
LABEL_198:
        __break(1u);
LABEL_199:
        __break(1u);
LABEL_200:
        __break(1u);
LABEL_201:
        __break(1u);
LABEL_202:
        __break(1u);
LABEL_203:
        __break(1u);
LABEL_204:
        __break(1u);
        break;
      }
      if (!v8)
        goto LABEL_208;
      v102 = v8;
      v103 = &v60[16 * v101];
      v104 = *(_QWORD *)v103;
      v105 = v62;
      v106 = &v60[16 * v62];
      v107 = *((_QWORD *)v106 + 1);
      v108 = (void **)(v8 + 24 * *(_QWORD *)v103);
      v146 = (void **)(v102 + 24 * *(_QWORD *)v106);
      v109 = v102 + 24 * v107;
      swift_retain();
      sub_1BB26A9DC(v108, v146, v109, v131);
      if (v132)
      {
LABEL_164:
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_179;
      }
      swift_release();
      if (v107 < v104)
        goto LABEL_183;
      if (v105 > *((_QWORD *)v10 + 2))
        goto LABEL_184;
      v110 = v105;
      *(_QWORD *)v103 = v104;
      v60 = v10 + 32;
      *(_QWORD *)&v10[16 * v101 + 40] = v107;
      v111 = *((_QWORD *)v10 + 2);
      if (v110 >= v111)
        goto LABEL_185;
      v12 = v111 - 1;
      memmove(v106, v106 + 16, 16 * (v111 - 1 - v110));
      *((_QWORD *)v10 + 2) = v111 - 1;
      v8 = v135;
      v9 = v138;
      if (v111 <= 2)
        goto LABEL_15;
      goto LABEL_114;
    }
    break;
  }
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  swift_release_n();
  __break(1u);
LABEL_208:
  swift_release_n();
  __break(1u);
LABEL_209:
  swift_release_n();
  __break(1u);
LABEL_210:
  swift_release_n();
  __break(1u);
LABEL_211:
  swift_release_n();
  result = sub_1BB873EA0();
  __break(1u);
  return result;
}

uint64_t sub_1BB26C178(_QWORD **a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v5[2];

  v2 = *a1;
  swift_retain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (_QWORD *)sub_1BACABA00(v2);
  v3 = v2[2];
  v5[0] = (uint64_t)(v2 + 4);
  v5[1] = v3;
  swift_retain();
  sub_1BB26B32C(v5);
  swift_release();
  *a1 = v2;
  return swift_release_n();
}

uint64_t sub_1BB26C21C()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BB26C28C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  return swift_release();
}

uint64_t sub_1BB26C2F0()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1BB871890();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1BB26C360()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  swift_release();
  v1 = v0 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__items;
  v2 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198];
  sub_1BA4B07F0(0, &qword_1EF2BF590, (uint64_t (*)(uint64_t))sub_1BA86500C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v1, v3);
  v4 = v0 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__selection;
  sub_1BA4B07F0(0, &qword_1EF2BF598, (uint64_t (*)(uint64_t))sub_1BA8EBB30, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = v0 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__metrics;
  sub_1BA4B07F0(0, &qword_1EF2BF5A0, (uint64_t (*)(uint64_t))sub_1BB26C598, v2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_deallocClassInstance();
}

uint64_t sub_1BB26C454()
{
  return type metadata accessor for DebugFormatFileTreeModel();
}

uint64_t type metadata accessor for DebugFormatFileTreeModel()
{
  uint64_t result;

  result = qword_1EF2BF580;
  if (!qword_1EF2BF580)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1BB26C498()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1BA4B07F0(319, &qword_1EF2BF590, (uint64_t (*)(uint64_t))sub_1BA86500C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  if (v0 <= 0x3F)
  {
    sub_1BA4B07F0(319, &qword_1EF2BF598, (uint64_t (*)(uint64_t))sub_1BA8EBB30, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
    if (v1 <= 0x3F)
    {
      sub_1BA4B07F0(319, &qword_1EF2BF5A0, (uint64_t (*)(uint64_t))sub_1BB26C598, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

void sub_1BB26C598(uint64_t a1)
{
  sub_1BA4B07F0(a1, qword_1EF2BF5A8, (uint64_t (*)(uint64_t))type metadata accessor for DebugFormatDebuggerSourceMetricContext, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEB940]);
}

uint64_t sub_1BB26C5B4()
{
  return MEMORY[0x1E0C96020];
}

uint64_t sub_1BB26C5C0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1BB871878();
  *a1 = result;
  return result;
}

uint64_t sub_1BB26C5F0(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  _QWORD v31[16];
  _OWORD v32[8];

  v29 = a3;
  v27 = a1;
  v28 = a2;
  v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198];
  sub_1BA4B07F0(0, &qword_1EF2BF5A0, (uint64_t (*)(uint64_t))sub_1BB26C598, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0C96198]);
  v25 = *(_QWORD *)(v5 - 8);
  v26 = v5;
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v24 - v6;
  sub_1BA4B07F0(0, &qword_1EF2BF598, (uint64_t (*)(uint64_t))sub_1BA8EBB30, v4);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v24 - v11;
  sub_1BA4B07F0(0, &qword_1EF2BF590, (uint64_t (*)(uint64_t))sub_1BA86500C, v4);
  v14 = v13;
  v15 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v24 - v16;
  v18 = v3 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__items;
  *(_QWORD *)&v32[0] = MEMORY[0x1E0DEE9D8];
  sub_1BA86500C(0);
  v24 = v19;
  sub_1BB871884();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v18, v17, v14);
  v20 = v3 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__selection;
  sub_1BA8EBB18(v32);
  sub_1BAF97E40((uint64_t)v32, (uint64_t)v31);
  sub_1BA8EBB30();
  sub_1BB871884();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v20, v12, v9);
  v21 = v3 + OBJC_IVAR____TtC8NewsFeed24DebugFormatFileTreeModel__metrics;
  v31[0] = 0;
  sub_1BB26C598(0);
  sub_1BB871884();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v21, v7, v26);
  *(_QWORD *)(v3 + 16) = v27;
  swift_retain();
  v22 = sub_1BB54EBCC();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v18, v14);
  v30 = v22;
  sub_1BB871884();
  swift_endAccess();
  *(_BYTE *)(v3 + 24) = v29;
  return v3;
}

char *initializeBufferWithCopyOfBuffer for FormatButtonNodeDataAction(char *a1, char **a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  id *v8;
  unsigned int v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unsigned __int8 v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int EnumCaseMultiPayload;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  uint64_t v39;
  id v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int (*v51)(char *, uint64_t, uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  void (*v56)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v57;
  void *v58;
  id v59;
  char *__dst;
  uint64_t v62;
  uint64_t v63;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *a2;
        v8 = (id *)(a2 + 1);
        v9 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v9 <= 0xFD)
        {
          v40 = *v8;
          sub_1BA727178(*v8, v9);
          *((_QWORD *)a1 + 1) = v40;
          a1[16] = v9;
        }
        else
        {
          *((_QWORD *)a1 + 1) = *v8;
          a1[16] = *((_BYTE *)a2 + 16);
        }
        goto LABEL_30;
      case 1u:
        v11 = *a2;
        v12 = (uint64_t)a2[1];
        v13 = (uint64_t)a2[2];
        v14 = (uint64_t)a2[3];
        v15 = (uint64_t)a2[4];
        v16 = v6;
        v17 = *((_BYTE *)a2 + 41);
        v18 = *((_BYTE *)a2 + 40);
        sub_1BA7271AC(*a2, v12, v13, v14, v15, v18, v17);
        *(_QWORD *)a1 = v11;
        *((_QWORD *)a1 + 1) = v12;
        *((_QWORD *)a1 + 2) = v13;
        *((_QWORD *)a1 + 3) = v14;
        *((_QWORD *)a1 + 4) = v15;
        a1[40] = v18;
        a1[41] = v17;
        v6 = v16;
        v19 = a2[7];
        *((_QWORD *)a1 + 6) = a2[6];
        LOBYTE(v11) = *((_BYTE *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v19, v11);
        *((_QWORD *)a1 + 7) = v19;
        a1[64] = (char)v11;
        goto LABEL_30;
      case 2u:
        *(_QWORD *)a1 = *a2;
        swift_retain();
        goto LABEL_30;
      case 4u:
        v20 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v20;
        v21 = a2[3];
        *((_QWORD *)a1 + 2) = a2[2];
        *((_QWORD *)a1 + 3) = v21;
        v22 = a2[5];
        *((_QWORD *)a1 + 4) = a2[4];
        *((_QWORD *)a1 + 5) = v22;
        v62 = v6;
        v23 = (uint64_t)a2[6];
        v24 = (uint64_t)a2[7];
        v25 = (uint64_t)a2[8];
        v26 = (uint64_t)a2[9];
        v27 = *((_BYTE *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v23, v24, v25, v26, v27);
        *((_QWORD *)a1 + 6) = v23;
        *((_QWORD *)a1 + 7) = v24;
        *((_QWORD *)a1 + 8) = v25;
        *((_QWORD *)a1 + 9) = v26;
        v6 = v62;
        a1[80] = v27;
        v28 = a2[12];
        *((_QWORD *)a1 + 11) = a2[11];
        *((_QWORD *)a1 + 12) = v28;
        v29 = a2[14];
        *((_QWORD *)a1 + 13) = a2[13];
        *((_QWORD *)a1 + 14) = v29;
        *((_QWORD *)a1 + 15) = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_30;
      case 5u:
        v30 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v41 = type metadata accessor for FormatPurchaseLandingPageData();
          v42 = *(_QWORD *)(v41 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v42 + 48))(a2, 1, v41))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
          }
          else
          {
            v63 = v6;
            v46 = a2[1];
            *(_QWORD *)a1 = *a2;
            *((_QWORD *)a1 + 1) = v46;
            v47 = *(int *)(v41 + 20);
            __dst = &a1[v47];
            v48 = (char *)a2 + v47;
            v49 = type metadata accessor for FormatPostPurchaseData();
            v50 = *(_QWORD *)(v49 - 8);
            v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
            swift_bridgeObjectRetain();
            if (v51(v48, 1, v49))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v48, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
              v6 = v63;
            }
            else
            {
              v53 = sub_1BB86C67C();
              v54 = *(_QWORD *)(v53 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v48, 2, v53))
              {
                v55 = __dst;
                memcpy(__dst, v48, *(_QWORD *)(v50 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v54 + 16))(__dst, v48, v53);
                v56 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56);
                v55 = __dst;
                v56(__dst, 0, 2, v53);
              }
              v6 = v63;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v55, 0, 1, v49);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(a1, 0, 1, v41);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
            goto LABEL_30;
          }
          v32 = a2[1];
          *(_QWORD *)a1 = *a2;
          *((_QWORD *)a1 + 1) = v32;
          v33 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v34 = &a1[v33];
          v35 = (char *)a2 + v33;
          v36 = type metadata accessor for FormatPostPurchaseData();
          v37 = *(_QWORD *)(v36 - 8);
          v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
          swift_bridgeObjectRetain();
          if (v38(v35, 1, v36))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
          }
          else
          {
            v44 = sub_1BB86C67C();
            v45 = *(_QWORD *)(v44 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v35, 2, v44))
            {
              memcpy(v34, v35, *(_QWORD *)(v37 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v34, v35, v44);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v34, 0, 2, v44);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_30:
        swift_storeEnumTagMultiPayload();
LABEL_31:
        v57 = *(int *)(v6 + 20);
        v58 = *(char **)((char *)a2 + v57);
        *(_QWORD *)&a1[v57] = v58;
        v59 = v58;
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
        goto LABEL_31;
    }
  }
  return a1;
}

uint64_t *assignWithCopy for FormatButtonNodeDataAction(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  id *v7;
  unsigned int v8;
  id v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned __int8 v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  int EnumCaseMultiPayload;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  void (*v48)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v49;
  void *v50;
  void *v51;
  id v52;
  char *__dst;
  uint64_t v55;
  uint64_t v56;

  if (a1 != a2)
  {
    sub_1BB26D3A4((uint64_t)a1);
    v6 = type metadata accessor for FormatAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v7 = (id *)(a2 + 1);
        v8 = *((unsigned __int8 *)a2 + 16);
        swift_bridgeObjectRetain();
        if (v8 <= 0xFD)
        {
          v33 = *v7;
          sub_1BA727178(*v7, v8);
          a1[1] = (uint64_t)v33;
          *((_BYTE *)a1 + 16) = v8;
        }
        else
        {
          v9 = *v7;
          *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
          a1[1] = (uint64_t)v9;
        }
        goto LABEL_29;
      case 1u:
        v10 = *a2;
        v11 = a2[1];
        v12 = a2[2];
        v13 = a2[3];
        v14 = a2[4];
        v15 = a3;
        v16 = *((_BYTE *)a2 + 41);
        v17 = *((_BYTE *)a2 + 40);
        sub_1BA7271AC((id)*a2, v11, v12, v13, v14, v17, v16);
        *a1 = v10;
        a1[1] = v11;
        a1[2] = v12;
        a1[3] = v13;
        a1[4] = v14;
        *((_BYTE *)a1 + 40) = v17;
        *((_BYTE *)a1 + 41) = v16;
        a3 = v15;
        a1[6] = a2[6];
        v18 = (void *)a2[7];
        LOBYTE(v10) = *((_BYTE *)a2 + 64);
        swift_bridgeObjectRetain();
        sub_1BA727178(v18, v10);
        a1[7] = (uint64_t)v18;
        *((_BYTE *)a1 + 64) = v10;
        goto LABEL_29;
      case 2u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_29;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        v55 = a3;
        v19 = a2[6];
        v20 = a2[7];
        v21 = a2[8];
        v22 = a2[9];
        v23 = *((_BYTE *)a2 + 80);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1BA7261E0(v19, v20, v21, v22, v23);
        a1[6] = v19;
        a1[7] = v20;
        a1[8] = v21;
        a1[9] = v22;
        a3 = v55;
        *((_BYTE *)a1 + 80) = v23;
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        a1[14] = a2[14];
        a1[15] = a2[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_29;
      case 5u:
        v24 = type metadata accessor for FormatPurchaseData(0);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          v34 = type metadata accessor for FormatPurchaseLandingPageData();
          v35 = *(_QWORD *)(v34 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v35 + 48))(a2, 1, v34))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          }
          else
          {
            v56 = a3;
            *a1 = *a2;
            a1[1] = a2[1];
            v39 = *(int *)(v34 + 20);
            __dst = (char *)a1 + v39;
            v40 = (char *)a2 + v39;
            v41 = type metadata accessor for FormatPostPurchaseData();
            v42 = *(_QWORD *)(v41 - 8);
            v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
            swift_bridgeObjectRetain();
            if (v43(v40, 1, v41))
            {
              sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
              memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
              a3 = v56;
            }
            else
            {
              v45 = sub_1BB86C67C();
              v46 = *(_QWORD *)(v45 - 8);
              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v40, 2, v45))
              {
                v47 = __dst;
                memcpy(__dst, v40, *(_QWORD *)(v42 + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(v46 + 16))(__dst, v40, v45);
                v48 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56);
                v47 = __dst;
                v48(__dst, 0, 2, v45);
              }
              a3 = v56;
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v47, 0, 1, v41);
            }
            (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v35 + 56))(a1, 0, 1, v34);
          }
        }
        else
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
            goto LABEL_29;
          }
          *a1 = *a2;
          a1[1] = a2[1];
          v26 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = type metadata accessor for FormatPostPurchaseData();
          v30 = *(_QWORD *)(v29 - 8);
          v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
          swift_bridgeObjectRetain();
          if (v31(v28, 1, v29))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
          }
          else
          {
            v37 = sub_1BB86C67C();
            v38 = *(_QWORD *)(v37 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v28, 2, v37))
            {
              memcpy(v27, v28, *(_QWORD *)(v30 + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v27, v28, v37);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v27, 0, 2, v37);
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          }
        }
        swift_storeEnumTagMultiPayload();
LABEL_29:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
  }
  v49 = *(int *)(a3 + 20);
  v50 = *(void **)((char *)a1 + v49);
  v51 = *(void **)((char *)a2 + v49);
  *(uint64_t *)((char *)a1 + v49) = (uint64_t)v51;
  v52 = v51;

  return a1;
}

uint64_t sub_1BB26D3A4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatAction();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *initializeWithTake for FormatButtonNodeDataAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v29;
  uint64_t v30;
  void (**__dst)(void *, const void *, uint64_t);
  char *__dsta;

  v6 = type metadata accessor for FormatAction();
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    v7 = type metadata accessor for FormatPurchaseData(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      v15 = type metadata accessor for FormatPurchaseLandingPageData();
      v16 = *(_QWORD *)(v15 - 8);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        v19 = *(int *)(v15 + 20);
        __dsta = (char *)a1 + v19;
        v20 = (char *)a2 + v19;
        v21 = type metadata accessor for FormatPostPurchaseData();
        v22 = *(_QWORD *)(v21 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(__dsta, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v30 = v22;
          v24 = sub_1BB86C67C();
          v29 = *(_QWORD *)(v24 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v20, 2, v24))
          {
            v25 = v30;
            v26 = v20;
            v27 = __dsta;
            memcpy(__dsta, v26, *(_QWORD *)(v30 + 64));
          }
          else
          {
            v27 = __dsta;
            (*(void (**)(void))(v29 + 32))();
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dsta, 0, 2, v24);
            v25 = v30;
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v21);
        }
        (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_23:
        swift_storeEnumTagMultiPayload();
        goto LABEL_24;
      }
      *a1 = *a2;
      v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = type metadata accessor for FormatPostPurchaseData();
      v13 = *(_QWORD *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
      }
      else
      {
        v18 = sub_1BB86C67C();
        __dst = *(void (***)(void *, const void *, uint64_t))(v18 - 8);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v11, 2, v18))
        {
          memcpy(v10, v11, *(_QWORD *)(v13 + 64));
        }
        else
        {
          __dst[4](v10, v11, v18);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dst[7])(v10, 0, 2, v18);
        }
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_23;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
LABEL_24:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

_OWORD *assignWithTake for FormatButtonNodeDataAction(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void *v29;
  uint64_t v31;
  uint64_t v32;
  void (**__dst)(void *, const void *, uint64_t);
  char *__dsta;

  if (a1 != a2)
  {
    sub_1BB26D3A4((uint64_t)a1);
    v6 = type metadata accessor for FormatAction();
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      v7 = type metadata accessor for FormatPurchaseData(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v15 = type metadata accessor for FormatPurchaseLandingPageData();
        v16 = *(_QWORD *)(v15 - 8);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v16 + 48))(a2, 1, v15))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BB328, (void (*)(uint64_t))type metadata accessor for FormatPurchaseLandingPageData);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          v19 = *(int *)(v15 + 20);
          __dsta = (char *)a1 + v19;
          v20 = (char *)a2 + v19;
          v21 = type metadata accessor for FormatPostPurchaseData();
          v22 = *(_QWORD *)(v21 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
          {
            sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
            memcpy(__dsta, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
          }
          else
          {
            v32 = v22;
            v24 = sub_1BB86C67C();
            v31 = *(_QWORD *)(v24 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v20, 2, v24))
            {
              v25 = v32;
              v26 = v20;
              v27 = __dsta;
              memcpy(__dsta, v26, *(_QWORD *)(v32 + 64));
            }
            else
            {
              v27 = __dsta;
              (*(void (**)(void))(v31 + 32))();
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(__dsta, 0, 2, v24);
              v25 = v32;
            }
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v27, 0, 1, v21);
          }
          (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
LABEL_24:
          swift_storeEnumTagMultiPayload();
          goto LABEL_25;
        }
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for OsloSheetPurchaseDataModel(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = type metadata accessor for FormatPostPurchaseData();
        v13 = *(_QWORD *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
          sub_1BA4A3FB4(0, &qword_1ED3BECA8, (void (*)(uint64_t))type metadata accessor for FormatPostPurchaseData);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
        }
        else
        {
          v18 = sub_1BB86C67C();
          __dst = *(void (***)(void *, const void *, uint64_t))(v18 - 8);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))__dst[6])(v11, 2, v18))
          {
            memcpy(v10, v11, *(_QWORD *)(v13 + 64));
          }
          else
          {
            __dst[4](v10, v11, v18);
            ((void (*)(char *, _QWORD, uint64_t, uint64_t))__dst[7])(v10, 0, 2, v18);
          }
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_24;
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
LABEL_25:
  v28 = *(int *)(a3 + 20);
  v29 = *(void **)((char *)a1 + v28);
  *(_QWORD *)((char *)a1 + v28) = *(_QWORD *)((char *)a2 + v28);

  return a1;
}

uint64_t sub_1BB26DAF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = type metadata accessor for FormatAction();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1BB26DB78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for FormatAction();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = a2;
  return result;
}

id FCFeedDescriptor.feedTag.getter()
{
  void *v0;
  id v1;
  id result;

  v1 = objc_msgSend(objc_msgSend(v0, sel_backingTag), sel_tagType);
  swift_unknownObjectRelease();
  if (v1 != (id)3)
    return objc_msgSend(v0, sel_backingTag);
  result = objc_msgSend(v0, sel_backingChannel);
  if (!result)
    return objc_msgSend(v0, sel_backingTag);
  return result;
}

void FCFeedDescriptor.feedURL.getter()
{
  void *v0;
  id v1;
  id v2;
  void *v3;
  id v4;
  id v5;
  id v6;
  id v7;
  id v8;
  id v9;

  v1 = objc_msgSend(v0, sel_feedConfiguration);
  v2 = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  v3 = v2;
  if (v2)
  {
    v4 = objc_msgSend(v2, sel_feedConfiguration);

    if (v1 != (id)9)
      goto LABEL_3;
LABEL_9:
    v5 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForPuzzleHub);
    goto LABEL_19;
  }
  v4 = 0;
  if (v1 == (id)9)
    goto LABEL_9;
LABEL_3:
  if (v1 == (id)3)
  {
    if (!v3)
      goto LABEL_14;
    if (v4 == (id)6)
    {
      v5 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForMySportsHighlights);
      goto LABEL_19;
    }
    if (v4 == (id)5)
      v5 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForMySportsScores);
    else
LABEL_14:
      v5 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForMySports);
  }
  else
  {
    v6 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_identifier);
    swift_unknownObjectRelease();
    if (v3)
    {
      if (!v6)
      {
        sub_1BB8729A0();
        v6 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      v7 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_feedConfiguration_, v6, v4);
    }
    else
    {
      if (!v6)
      {
        sub_1BB8729A0();
        v6 = (id)sub_1BB872970();
        swift_bridgeObjectRelease();
      }
      v7 = objc_msgSend((id)objc_opt_self(), sel_nss_NewsURLForTagID_feedConfiguration_, v6, objc_msgSend(v0, sel_feedConfiguration));
    }
    v8 = v7;

    v5 = v8;
  }
LABEL_19:
  v9 = v5;
  sub_1BB86C5EC();

}

uint64_t FCFeedDescriptor.localizedFeedType.getter()
{
  void *v0;
  char *v1;
  id v2;
  void *v3;
  id v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;

  v1 = (char *)objc_msgSend(v0, sel_feedConfiguration);
  v2 = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  if (v2)
  {
    v3 = v2;
    v4 = objc_msgSend(v2, sel_feedConfiguration);

    switch((unint64_t)v4)
    {
      case 4uLL:
      case 5uLL:
      case 6uLL:
      case 7uLL:
        goto LABEL_8;
      default:
        break;
    }
  }
  if ((unint64_t)(v1 - 9) < 2)
    return 0;
  if (v1 == (char *)8 || v1 == (char *)3)
  {
LABEL_8:
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v5 = sub_1BB86C340();

  }
  else
  {
    FCFeedDescriptor.feedTag.getter();
    swift_getObjectType();
    v5 = FCTagProviding.localizedTagType.getter();
    swift_unknownObjectRelease();
  }
  return v5;
}

id FCFeedDescriptor.feedKind.getter@<X0>(char *a1@<X8>)
{
  void *v1;
  id result;
  char v4;
  unsigned int v5;
  id v6;
  unsigned __int8 v7;

  result = objc_msgSend(v1, sel_feedConfiguration);
  v4 = 2;
  switch((unint64_t)result)
  {
    case 0uLL:
      result = objc_msgSend(v1, sel_backingChannel);
      if (!result)
        goto LABEL_2;
      v5 = objc_msgSend(result, sel_isLocal);
      v6 = objc_msgSend(objc_msgSend(v1, sel_backingTag), sel_asSection);
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      result = (id)swift_unknownObjectRelease();
      if (v5)
      {
        if (v6)
          v4 = 7;
        else
          v4 = 6;
      }
      else if (v6)
      {
        v4 = 3;
      }
      else
      {
        v4 = 2;
      }
      break;
    case 1uLL:
      result = objc_msgSend(v1, sel_backingChannel);
      if (result
        && (v7 = objc_msgSend(result, sel_isLocal),
            result = (id)swift_unknownObjectRelease(),
            (v7 & 1) != 0))
      {
        v4 = 6;
      }
      else
      {
        v4 = 2;
      }
      break;
    case 2uLL:
      break;
    case 3uLL:
      v4 = 9;
      break;
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
LABEL_2:
      v4 = 20;
      break;
    case 8uLL:
      v4 = 24;
      break;
    case 9uLL:
      v4 = 10;
      break;
    case 0xAuLL:
      v4 = 11;
      break;
    case 0xBuLL:
      v4 = 12;
      break;
    default:
      v4 = 21;
      break;
  }
  *a1 = v4;
  return result;
}

unint64_t FCFeedDescriptorConfiguration.description.getter(uint64_t a1)
{
  unint64_t result;

  result = 0x746C7561666564;
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = 1701670760;
      break;
    case 2:
      result = 0x617461436B636162;
      break;
    case 3:
      result = 0x7374726F7053796DLL;
      break;
    case 4:
      result = 0x74537374726F7073;
      break;
    case 5:
      result = 0x63537374726F7073;
      break;
    case 6:
      result = 0xD000000000000010;
      break;
    case 7:
      result = 0x72427374726F7073;
      break;
    case 8:
      result = 0x76457374726F7073;
      break;
    case 9:
      result = 0x7548656C7A7A7570;
      break;
    case 10:
      result = 0x7954656C7A7A7570;
      break;
    case 11:
      result = 0xD000000000000011;
      break;
    default:
      result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t FCFeedDescriptor.feedExternalTitle.getter()
{
  void *v0;
  id v1;
  void *v2;
  id v3;
  uint64_t result;
  uint64_t ObjCClassFromMetadata;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v1 = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  if (!v1)
    return FCFeedDescriptor.feedTitle.getter();
  v2 = v1;
  v3 = objc_msgSend(v1, sel_feedConfiguration);

  switch((unint64_t)v3)
  {
    case 4uLL:
    case 5uLL:
    case 6uLL:
    case 7uLL:
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v6 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1BB86C340();

      sub_1BA7AA598();
      v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1BB87CE70;
      v8 = FCFeedDescriptor.feedTitle.getter();
      v10 = v9;
      *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v7 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v7 + 32) = v8;
      *(_QWORD *)(v7 + 40) = v10;
      v11 = sub_1BB8729D0();
      swift_bridgeObjectRelease();
      result = v11;
      break;
    default:
      return FCFeedDescriptor.feedTitle.getter();
  }
  return result;
}

uint64_t FCFeedDescriptor.feedTitle.getter()
{
  void *v0;
  id v1;
  id v2;
  uint64_t ObjCClassFromMetadata;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  id v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  uint64_t v22;

  v1 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_asPuzzleType);
  swift_unknownObjectRelease();
  v2 = objc_msgSend(v0, sel_feedConfiguration);
  if (v1)
  {
    if (v2 == (id)11)
    {
      type metadata accessor for Localized();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v4 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
      sub_1BB86C340();

      sub_1BA7AA598();
      v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_1BB87CE70;
      v6 = objc_msgSend(v1, sel_name, 0x80000001BB983010);
      v7 = sub_1BB8729A0();
      v9 = v8;

      *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
      *(_QWORD *)(v5 + 64) = sub_1BA6A2D8C();
      *(_QWORD *)(v5 + 32) = v7;
      *(_QWORD *)(v5 + 40) = v9;
      v10 = sub_1BB87297C();
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      v20 = objc_msgSend(v1, sel_nameForSharing);
      v10 = sub_1BB8729A0();
      swift_unknownObjectRelease();

    }
    return v10;
  }
  else if (v2 == (id)9)
  {
    type metadata accessor for Localized();
    v12 = swift_getObjCClassFromMetadata();
    v13 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, v12);
    sub_1BB86C340();

    sub_1BA7AA598();
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1BB87CE70;
    v15 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_displayName, 0x80000001BB982FB0);
    swift_unknownObjectRelease();
    v16 = sub_1BB8729A0();
    v18 = v17;

    *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v14 + 64) = sub_1BA6A2D8C();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    v19 = sub_1BB87297C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    v21 = objc_msgSend(FCFeedDescriptor.feedTag.getter(), sel_displayName);
    swift_unknownObjectRelease();
    v22 = sub_1BB8729A0();

    return v22;
  }
}

id FCFeedDescriptor.navigationChromeBackgroundColor.getter()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  id v12;
  id v13;
  id v15;

  v1 = v0;
  v2 = objc_msgSend(v0, sel_backingChannel);
  if (!v2 || (v3 = objc_msgSend(v2, sel_theme), swift_unknownObjectRelease(), !v3))
  {
    v3 = objc_msgSend(objc_msgSend(v0, sel_backingTag), sel_theme);
    swift_unknownObjectRelease();
    if (!v3)
      goto LABEL_9;
  }
  v4 = objc_msgSend(v3, sel_navigationChromeBackgroundColor);
  if (!v4)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v10 = FCFeedTheming.hasNavigationChromeBackgroundImage.getter();
    swift_unknownObjectRelease();
    if ((v10 & 1) != 0)
    {
      v11 = objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
      swift_unknownObjectRelease();
      return v11;
    }
LABEL_9:
    v12 = objc_msgSend(objc_msgSend(v1, sel_backingTag), sel_asSports);
    swift_unknownObjectRelease();
    if (v12)
    {
      swift_getObjectType();
      v13 = FCSportsProviding.navigationBarBackgroundColor.getter();
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      return v13;
    }
    if (!v3)
      return objc_msgSend((id)objc_opt_self(), sel_systemBackgroundColor);
    swift_getObjectType();
    swift_unknownObjectRetain();
    v11 = FCFeedTheming.navigationBarBackgroundColor.getter();
    swift_unknownObjectRelease_n();
    return v11;
  }
  v5 = v4;
  v6 = objc_msgSend(v4, sel_ne_color);

  v7 = objc_msgSend(v3, sel_darkStyleNavigationChromeBackgroundColor);
  if (v7)
  {
    v8 = v7;
    v9 = objc_msgSend(v7, sel_ne_color);

  }
  else
  {
    v9 = v6;
  }
  v15 = objc_msgSend((id)objc_opt_self(), sel_ts_dynamicColor_withDarkStyleVariant_, v6, v9);

  swift_unknownObjectRelease();
  return v15;
}

id FCFeedDescriptor.initialRefreshState.getter()
{
  void *v0;
  id result;
  void *v2;
  unint64_t v3;

  result = objc_msgSend(v0, sel_alternativeFeedDescriptor);
  if (result)
  {
    v2 = result;
    v3 = (unint64_t)objc_msgSend(result, sel_feedConfiguration);

    if (v3 > 0xB)
      return 0;
    else
      return (id)byte_1BB8FD3F6[v3];
  }
  return result;
}

unint64_t sub_1BB26EF54()
{
  uint64_t *v0;

  return FCFeedDescriptorConfiguration.description.getter(*v0);
}

uint64_t FormatSlotNode.children.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotNode.options.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotNode.extended.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t FormatSlotNode.selectors.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatSlotNode.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSlotNode.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.identifier.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FormatSlotNode.extended.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 32) = a1;
  return result;
}

uint64_t (*FormatSlotNode.extended.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.children.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 40) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.children.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.selectors.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 48) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.selectors.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.options.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 56) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatSlotNode.options.modify())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t FormatSlotNode.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatSlotNode.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB26F364(_QWORD *a1, _QWORD *a2)
{
  return static FormatSlotNode.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1BB26F370(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[10];

  v5 = type metadata accessor for FormatOption();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(a2 + 56);
  swift_beginAccess();
  v10 = swift_bridgeObjectRetain();
  sub_1BB3D81F8(v10);
  result = swift_bridgeObjectRelease();
  if (!v2)
  {
    swift_beginAccess();
    v12 = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    sub_1BABEBCF0(a1, v12);
    swift_bridgeObjectRelease();
    result = *v9;
    v13 = *(_QWORD *)(*v9 + 16);
    if (v13)
    {
      v14 = result + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
      v15 = *(_QWORD *)(v6 + 72);
      v16[1] = result;
      swift_bridgeObjectRetain_n();
      do
      {
        sub_1BA900B30(v14, (uint64_t)v8);
        v16[9] = *((_QWORD *)v8 + 2);
        swift_retain();
        sub_1BAC49F9C();
        swift_release();
        sub_1BA4A2E80((uint64_t)v8, (uint64_t (*)(_QWORD))type metadata accessor for FormatOption);
        v14 += v15;
        --v13;
      }
      while (v13);
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

uint64_t sub_1BB26F524(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[4];
  _QWORD v9[2];

  v3 = *v1;
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  v4 = *(_QWORD *)(v3 + 24);
  swift_beginAccess();
  v6 = *(unsigned __int8 *)(v3 + 32);
  v8[0] = v5;
  v8[1] = v4;
  v8[3] = 0;
  v9[0] = 0;
  v8[2] = v6;
  *(_QWORD *)((char *)v9 + 6) = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1BB3D7E68((uint64_t)v8, a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1BB26F5D4(uint64_t a1, uint64_t a2)
{
  return FormatSlotNode.bind(binder:context:)(a1, a2);
}

uint64_t sub_1BB26F5F4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB26F6C0(&qword_1EF2BF648, (uint64_t)&protocol conformance descriptor for FormatSlotNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB26F628(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB26F6C0(&qword_1ED3BD090, (uint64_t)&protocol conformance descriptor for FormatSlotNode);
  a1[2] = sub_1BB26F6C0(&qword_1ED39F938, (uint64_t)&protocol conformance descriptor for FormatSlotNode);
  result = sub_1BB26F6C0(&qword_1EF2BF650, (uint64_t)&protocol conformance descriptor for FormatSlotNode);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB26F68C(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB26F6C0(&qword_1EF2BF658, (uint64_t)&protocol conformance descriptor for FormatSlotNode);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB26F6C0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatSlotNode();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB26F6FC@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 32);
  return result;
}

uint64_t sub_1BB26F740(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 32) = v2;
  return result;
}

uint64_t sub_1BB26F780@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 40);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB26F7CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 48);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB26F818@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatSlotNode()
{
  return swift_lookUpClassMethod();
}

void sub_1BB26F870()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB26F8D4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, id a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  id v46;
  uint64_t v47;
  void *v49;

  v46 = objc_msgSend(v49, sel_identifier);
  v47 = sub_1BB8729A0();

  return v47;
}

BOOL static FormatIssueBinding.Text.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void sub_1BB26FC18(char *a1)
{
  sub_1BB7FDEFC(*a1);
}

void sub_1BB26FC24()
{
  char *v0;

  sub_1BAB0A610(0, *v0);
}

void sub_1BB26FC30(uint64_t a1)
{
  char *v1;

  sub_1BA9D3ADC(a1, *v1);
}

void sub_1BB26FC38(uint64_t a1)
{
  char *v1;

  sub_1BAB0A610(a1, *v1);
}

void sub_1BB26FC40(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E724F820;
}

uint64_t FormatIssueBinding.Text.hash(into:)()
{
  return sub_1BB8745D8();
}

void *static FormatIssueBinding.Text.allCases.getter()
{
  return &unk_1E7251548;
}

uint64_t FormatIssueBinding.Text.hashValue.getter()
{
  sub_1BB8745CC();
  sub_1BB8745D8();
  return sub_1BB874608();
}

unint64_t sub_1BB26FCCC()
{
  unint64_t result;

  result = qword_1EF2BF660;
  if (!qword_1EF2BF660)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Text, &type metadata for FormatIssueBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BF660);
  }
  return result;
}

unint64_t sub_1BB26FD10(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB26FD34();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB26FD34()
{
  unint64_t result;

  result = qword_1EF2BF668;
  if (!qword_1EF2BF668)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatIssueBinding.Text, &type metadata for FormatIssueBinding.Text);
    atomic_store(result, (unint64_t *)&qword_1EF2BF668);
  }
  return result;
}

uint64_t sub_1BB26FD78()
{
  return sub_1BB26FE34(&qword_1EF2BF670, &qword_1EF2BF678, (uint64_t)&type metadata for FormatIssueBinding.Text);
}

void sub_1BB26FDA4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E7251548;
}

unint64_t sub_1BB26FDB4(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA62208C();
  a1[2] = sub_1BA61FD54();
  result = sub_1BB26FCCC();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatIssueBinding.Text()
{
  return &type metadata for FormatIssueBinding.Text;
}

ValueMetadata *_s4TextO10CodingTypeOMa_3()
{
  return &_s4TextO10CodingTypeON_3;
}

uint64_t sub_1BB26FE08()
{
  return sub_1BB26FE34(&qword_1EF2BF680, &qword_1EF2BF688, (uint64_t)&_s4TextO10CodingTypeON_3);
}

uint64_t sub_1BB26FE34(unint64_t *a1, unint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    sub_1BA4AD288(255, a2, a3, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    result = MEMORY[0x1BCCE5B24](MEMORY[0x1E0DEAF50], v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1BB26FE80()
{
  unint64_t result;

  result = qword_1EF2BF690;
  if (!qword_1EF2BF690)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD7C0, &_s4TextO10CodingTypeON_3);
    atomic_store(result, (unint64_t *)&qword_1EF2BF690);
  }
  return result;
}

void sub_1BB26FEC4(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_1BB26FF0C()
{
  _QWORD *v0;
  id *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = objc_msgSend(*v1, sel_identifier);
  v3 = sub_1BB8729A0();
  v5 = v4;

  sub_1BAAF7494(0x696669746E656449, 0xEA00000000007265, v3, v5, v0);
  v6 = type metadata accessor for FormatInspectionItem(0);
  return (*(uint64_t (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(v0, 0, 1, v6);
}

void sub_1BB270354(uint64_t a1)
{
  unint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  if (!qword_1ED39CBE0)
  {
    v2 = sub_1BB2703AC();
    v4 = type metadata accessor for CellAutomation(a1, (uint64_t)&type metadata for IssueAutomation, v2, v3);
    if (!v5)
      atomic_store(v4, (unint64_t *)&qword_1ED39CBE0);
  }
}

unint64_t sub_1BB2703AC()
{
  unint64_t result;

  result = qword_1ED39CBF8;
  if (!qword_1ED39CBF8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for IssueAutomation, &type metadata for IssueAutomation);
    atomic_store(result, (unint64_t *)&qword_1ED39CBF8);
  }
  return result;
}

unint64_t sub_1BB2703F0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED39CBD8;
  if (!qword_1ED39CBD8)
  {
    sub_1BB270354(255);
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for CellAutomation<A>, v1);
    atomic_store(result, (unint64_t *)&qword_1ED39CBD8);
  }
  return result;
}

uint64_t sub_1BB270438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1BA4AD288(0, &qword_1ED39C8F8, (uint64_t)&type metadata for FeedIssue.Overrides, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEB940]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PaywallAutomation.identifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaywallAutomation.type.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaywallAutomation.host.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PaywallAutomation.init(paywall:)@<X0>(__int128 *a1@<X0>, _OWORD *a2@<X8>)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t result;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;

  v3 = a1[13];
  v26 = a1[12];
  v27 = v3;
  v28 = a1[14];
  v29 = *((_QWORD *)a1 + 30);
  v4 = a1[9];
  v22 = a1[8];
  v23 = v4;
  v5 = a1[11];
  v24 = a1[10];
  v25 = v5;
  v6 = a1[5];
  v18 = a1[4];
  v19 = v6;
  v7 = a1[7];
  v20 = a1[6];
  v21 = v7;
  v8 = a1[1];
  v14 = *a1;
  v15 = v8;
  v9 = a1[3];
  v16 = a1[2];
  v17 = v9;
  v10 = v14;
  v11 = v15;
  v12 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  result = sub_1BA93EC1C((uint64_t)&v14);
  *a2 = v10;
  a2[1] = v11;
  a2[2] = v12;
  return result;
}

uint64_t PaywallAutomation.automationType.getter()
{
  return 0x6C6C6177796170;
}

uint64_t sub_1BB2705EC()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1701869940;
  if (*v0 != 1)
    v1 = 1953722216;
  if (*v0)
    return v1;
  else
    return 0x696669746E656469;
}

uint64_t sub_1BB27063C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB270D88(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB270660()
{
  sub_1BB270820();
  return sub_1BB874710();
}

uint64_t sub_1BB270688()
{
  sub_1BB270820();
  return sub_1BB87471C();
}

uint64_t PaywallAutomation.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[6];
  char v13;
  char v14;
  char v15;

  sub_1BB270AA8(0, &qword_1EF2BF698, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED170]);
  v4 = v3;
  v5 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v12 - v6;
  v8 = v1[2];
  v12[3] = v1[3];
  v12[4] = v8;
  v9 = v1[4];
  v12[1] = v1[5];
  v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB270820();
  sub_1BB8746C8();
  v15 = 0;
  v10 = v12[5];
  sub_1BB87417C();
  if (!v10)
  {
    v14 = 1;
    sub_1BB87417C();
    v13 = 2;
    sub_1BB87417C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1BB270820()
{
  unint64_t result;

  result = qword_1EF2BF6A0;
  if (!qword_1EF2BF6A0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD998, &type metadata for PaywallAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6A0);
  }
  return result;
}

uint64_t PaywallAutomation.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;

  sub_1BB270AA8(0, &qword_1EF2BF6A8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x1E0DED048]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB270820();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v28 = 0;
  v10 = sub_1BB874098();
  v12 = v11;
  v25 = v10;
  v27 = 1;
  swift_bridgeObjectRetain();
  v13 = sub_1BB874098();
  v15 = v14;
  v23 = v13;
  v26 = 2;
  swift_bridgeObjectRetain();
  v24 = v15;
  v16 = sub_1BB874098();
  v18 = v17;
  v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1BB270AA8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_1BB270820();
    v7 = a3(a1, &type metadata for PaywallAutomation.CodingKeys, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_1BB270B08()
{
  unint64_t result;

  result = qword_1EF2BF6B0;
  if (!qword_1EF2BF6B0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PaywallAutomation, &type metadata for PaywallAutomation);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6B0);
  }
  return result;
}

unint64_t sub_1BB270B50()
{
  unint64_t result;

  result = qword_1EF2BF6B8;
  if (!qword_1EF2BF6B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for PaywallAutomation, &type metadata for PaywallAutomation);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6B8);
  }
  return result;
}

uint64_t sub_1BB270B94()
{
  return 0x6C6C6177796170;
}

uint64_t sub_1BB270BAC@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return PaywallAutomation.init(from:)(a1, a2);
}

uint64_t sub_1BB270BC0(_QWORD *a1)
{
  return PaywallAutomation.encode(to:)(a1);
}

ValueMetadata *type metadata accessor for PaywallAutomation()
{
  return &type metadata for PaywallAutomation;
}

uint64_t storeEnumTagSinglePayload for PaywallAutomation.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1BB270C30 + 4 * byte_1BB8FD815[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1BB270C64 + 4 * byte_1BB8FD810[v4]))();
}

uint64_t sub_1BB270C64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB270C6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB270C74);
  return result;
}

uint64_t sub_1BB270C80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB270C88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1BB270C8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB270C94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PaywallAutomation.CodingKeys()
{
  return &type metadata for PaywallAutomation.CodingKeys;
}

unint64_t sub_1BB270CB4()
{
  unint64_t result;

  result = qword_1EF2BF6C0;
  if (!qword_1EF2BF6C0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD970, &type metadata for PaywallAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6C0);
  }
  return result;
}

unint64_t sub_1BB270CFC()
{
  unint64_t result;

  result = qword_1EF2BF6C8;
  if (!qword_1EF2BF6C8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD8E0, &type metadata for PaywallAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6C8);
  }
  return result;
}

unint64_t sub_1BB270D44()
{
  unint64_t result;

  result = qword_1EF2BF6D0;
  if (!qword_1EF2BF6D0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FD908, &type metadata for PaywallAutomation.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6D0);
  }
  return result;
}

uint64_t sub_1BB270D88(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701869940 && a2 == 0xE400000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1953722216 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t FormatSponsoredBannerLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t a15, uint64_t *a16, uint64_t a17)
{
  uint64_t result;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  result = swift_allocObject();
  v27 = *a7;
  v28 = *a13;
  v29 = *a16;
  v30 = *((_BYTE *)a16 + 8);
  *(_QWORD *)(result + 16) = a1;
  *(_QWORD *)(result + 24) = a2;
  *(_QWORD *)(result + 32) = a3;
  *(_QWORD *)(result + 40) = a4;
  *(_QWORD *)(result + 48) = a5;
  *(_QWORD *)(result + 56) = a6;
  *(double *)(result + 64) = a9;
  *(double *)(result + 72) = a10;
  *(double *)(result + 80) = a11;
  *(double *)(result + 88) = a12;
  *(_QWORD *)(result + 96) = v27;
  *(_QWORD *)(result + 104) = a8;
  *(_QWORD *)(result + 112) = v28;
  *(_BYTE *)(result + 120) = a14;
  *(_QWORD *)(result + 128) = a15;
  *(_QWORD *)(result + 136) = v29;
  *(_BYTE *)(result + 144) = v30;
  *(_QWORD *)(result + 152) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(result + 160) = a17;
  return result;
}

uint64_t FormatSponsoredBannerLayoutAttributes.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerLayoutAttributes.layoutIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatSponsoredBannerLayoutAttributes.nodeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

double FormatSponsoredBannerLayoutAttributes.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 64);
}

uint64_t FormatSponsoredBannerLayoutAttributes.resizing.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 96);
  return swift_retain();
}

uint64_t FormatSponsoredBannerLayoutAttributes.zIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 104);
}

unint64_t FormatSponsoredBannerLayoutAttributes.visibility.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v1;
  unint64_t v2;

  v2 = *(_QWORD *)(v1 + 112);
  *a1 = v2;
  return sub_1BA67D3F4(v2);
}

uint64_t FormatSponsoredBannerLayoutAttributes.isUserInteractionEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 120);
}

uint64_t FormatSponsoredBannerLayoutAttributes.contextLayoutOptions.getter()
{
  return swift_retain();
}

void FormatSponsoredBannerLayoutAttributes.accessibilityRole.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  char v2;

  v2 = *(_BYTE *)(v1 + 144);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 136);
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t FormatSponsoredBannerLayoutAttributes.auxViewRequirements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t FormatSponsoredBannerLayoutAttributes.style.getter()
{
  return swift_retain();
}

uint64_t FormatSponsoredBannerLayoutAttributes.init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7, uint64_t a8, double a9, double a10, double a11, double a12, uint64_t *a13, char a14, uint64_t a15, uint64_t *a16, uint64_t a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  v18 = *a7;
  v19 = *a13;
  v20 = *a16;
  v21 = *((_BYTE *)a16 + 8);
  *(_QWORD *)(v17 + 16) = a1;
  *(_QWORD *)(v17 + 24) = a2;
  *(_QWORD *)(v17 + 32) = a3;
  *(_QWORD *)(v17 + 40) = a4;
  *(_QWORD *)(v17 + 48) = a5;
  *(_QWORD *)(v17 + 56) = a6;
  *(double *)(v17 + 64) = a9;
  *(double *)(v17 + 72) = a10;
  *(double *)(v17 + 80) = a11;
  *(double *)(v17 + 88) = a12;
  *(_QWORD *)(v17 + 96) = v18;
  *(_QWORD *)(v17 + 104) = a8;
  *(_QWORD *)(v17 + 112) = v19;
  *(_BYTE *)(v17 + 120) = a14;
  *(_QWORD *)(v17 + 128) = a15;
  *(_QWORD *)(v17 + 136) = v20;
  *(_BYTE *)(v17 + 144) = v21;
  *(_QWORD *)(v17 + 152) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v17 + 160) = a17;
  return v17;
}

uint64_t sub_1BB2710FC(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB271134 + 4 * byte_1BB8FD9F0[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_1BB271134()
{
  return 0xD000000000000010;
}

uint64_t sub_1BB271150()
{
  return 0x6E65644965646F6ELL;
}

uint64_t sub_1BB271174()
{
  return 0x656D617266;
}

uint64_t sub_1BB271188()
{
  return 0x676E697A69736572;
}

uint64_t sub_1BB2711A0()
{
  return 0x7865646E497ALL;
}

uint64_t sub_1BB2711B4()
{
  return 0x696C696269736976;
}

unint64_t sub_1BB2711CC()
{
  return 0xD000000000000018;
}

uint64_t sub_1BB271234()
{
  return 0x656C797473;
}

uint64_t sub_1BB271248()
{
  unsigned __int8 *v0;

  return sub_1BB2710FC(*v0);
}

uint64_t sub_1BB271250@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1BB272168(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1BB271274()
{
  sub_1BB271758();
  return sub_1BB874710();
}

uint64_t sub_1BB27129C()
{
  sub_1BB271758();
  return sub_1BB87471C();
}

uint64_t FormatSponsoredBannerLayoutAttributes.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1BA6EEDB4(*(_QWORD *)(v0 + 112));
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t FormatSponsoredBannerLayoutAttributes.__deallocating_deinit()
{
  FormatSponsoredBannerLayoutAttributes.deinit();
  return swift_deallocClassInstance();
}

uint64_t FormatSponsoredBannerLayoutAttributes.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  char v11;
  _OWORD v13[2];
  char v14;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BF6D8, (uint64_t (*)(void))sub_1BB271758, (uint64_t)&type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v13 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB271758();
  sub_1BB8746C8();
  LOBYTE(v13[0]) = 0;
  sub_1BB87417C();
  if (!v2)
  {
    LOBYTE(v13[0]) = 1;
    sub_1BB87417C();
    LOBYTE(v13[0]) = 2;
    sub_1BB87417C();
    v10 = *(_OWORD *)(v3 + 80);
    v13[0] = *(_OWORD *)(v3 + 64);
    v13[1] = v10;
    v14 = 3;
    type metadata accessor for CGRect(0);
    sub_1BA50AD30(&qword_1EF2A9A18, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 96);
    v14 = 4;
    sub_1BA994B40();
    sub_1BB87414C();
    LOBYTE(v13[0]) = 5;
    sub_1BB8741A0();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 112);
    v14 = 6;
    sub_1BA84B088();
    sub_1BB8741AC();
    LOBYTE(v13[0]) = 7;
    sub_1BB874188();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 128);
    v14 = 8;
    type metadata accessor for FormatContextLayoutOptions();
    sub_1BA50AD30(&qword_1EF2AC0C8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8741AC();
    v11 = *(_BYTE *)(v3 + 144);
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 136);
    BYTE8(v13[0]) = v11;
    v14 = 9;
    sub_1BA5FB410();
    sub_1BB87414C();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 152);
    v14 = 10;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    sub_1BA9952AC(&qword_1EF2AC0D8, (uint64_t (*)(void))sub_1BA994B84, MEMORY[0x1E0DEB3B8]);
    sub_1BB8741AC();
    *(_QWORD *)&v13[0] = *(_QWORD *)(v3 + 160);
    v14 = 11;
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    sub_1BA50AD30(&qword_1EF2B5B10, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
    sub_1BB87414C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

unint64_t sub_1BB271758()
{
  unint64_t result;

  result = qword_1EF2BF6E0;
  if (!qword_1EF2BF6E0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDCAC, &type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF6E0);
  }
  return result;
}

uint64_t FormatSponsoredBannerLayoutAttributes.__allocating_init(from:)(_QWORD *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FormatSponsoredBannerLayoutAttributes.init(from:)(a1);
  return v2;
}

uint64_t FormatSponsoredBannerLayoutAttributes.init(from:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  _QWORD *v18;
  __int128 v19;
  __int128 v20;
  char v21;

  sub_1BA4CDF6C(0, &qword_1EF2BF6E8, (uint64_t (*)(void))sub_1BB271758, (uint64_t)&type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v17 = v3;
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v15 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB271758();
  v16 = v6;
  v7 = v18;
  sub_1BB87468C();
  if (v7)
  {
    swift_deallocPartialClassInstance();
    v14 = (uint64_t)a1;
  }
  else
  {
    v18 = a1;
    LOBYTE(v19) = 0;
    *(_QWORD *)(v1 + 16) = sub_1BB874098();
    *(_QWORD *)(v1 + 24) = v8;
    LOBYTE(v19) = 1;
    *(_QWORD *)(v1 + 32) = sub_1BB874098();
    *(_QWORD *)(v1 + 40) = v9;
    LOBYTE(v19) = 2;
    *(_QWORD *)(v1 + 48) = sub_1BB874098();
    *(_QWORD *)(v1 + 56) = v10;
    type metadata accessor for CGRect(0);
    v21 = 3;
    sub_1BA50AD30((unint64_t *)&unk_1ED3B9910, 255, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
    v15 = 0;
    sub_1BB8740D4();
    v11 = v20;
    *(_OWORD *)(v1 + 64) = v19;
    *(_OWORD *)(v1 + 80) = v11;
    v21 = 4;
    sub_1BA995268();
    sub_1BB874068();
    *(_QWORD *)(v1 + 96) = v19;
    LOBYTE(v19) = 5;
    *(_QWORD *)(v1 + 104) = sub_1BB8740C8();
    v21 = 6;
    sub_1BA651250();
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 112) = v19;
    LOBYTE(v19) = 7;
    *(_BYTE *)(v1 + 120) = sub_1BB8740A4() & 1;
    type metadata accessor for FormatContextLayoutOptions();
    v21 = 8;
    sub_1BA50AD30(&qword_1EF2AC0F8, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatContextLayoutOptions, (uint64_t)&protocol conformance descriptor for FormatContextLayoutOptions);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 128) = v19;
    v21 = 9;
    sub_1BA650BA0();
    sub_1BB874068();
    v13 = BYTE8(v19);
    *(_QWORD *)(v1 + 136) = v19;
    *(_BYTE *)(v1 + 144) = v13;
    sub_1BA4CDF6C(0, &qword_1EF2AC0D0, (uint64_t (*)(void))sub_1BA822498, (uint64_t)&type metadata for FormatAuxiliaryViewRequirement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DEB388]);
    v21 = 10;
    sub_1BA9952AC(&qword_1EF2AC100, (uint64_t (*)(void))sub_1BA995330, MEMORY[0x1E0DEB3D8]);
    sub_1BB8740D4();
    *(_QWORD *)(v1 + 152) = v19;
    type metadata accessor for FormatSponsoredBannerNodeStyle();
    v21 = 11;
    sub_1BA50AD30(&qword_1ED3ADC58, 255, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerNodeStyle, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerNodeStyle);
    sub_1BB874068();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v17);
    v14 = (uint64_t)v18;
    *(_QWORD *)(v1 + 160) = v19;
  }
  __swift_destroy_boxed_opaque_existential_1(v14);
  return v1;
}

uint64_t sub_1BB271DC8(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BF6F0, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1BB271DF4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BB271E00(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BF6F8, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1BB271E2C(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BF700, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1BB271E58(uint64_t a1, uint64_t a2)
{
  return sub_1BA50AD30(&qword_1EF2BF708, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerLayoutAttributes);
}

uint64_t sub_1BB271E84@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = swift_allocObject();
  result = FormatSponsoredBannerLayoutAttributes.init(from:)(a1);
  if (!v2)
    *a2 = v5;
  return result;
}

uint64_t sub_1BB271ED8(_QWORD *a1)
{
  return FormatSponsoredBannerLayoutAttributes.encode(to:)(a1);
}

uint64_t sub_1BB271EF8(uint64_t a1, uint64_t a2)
{
  sub_1BA50AD30(&qword_1EF2BF728, a2, (uint64_t (*)(uint64_t))type metadata accessor for FormatSponsoredBannerLayoutAttributes, (uint64_t)&protocol conformance descriptor for FormatSponsoredBannerLayoutAttributes);
  return sub_1BB86D96C();
}

uint64_t method lookup function for FormatSponsoredBannerLayoutAttributes()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatSponsoredBannerLayoutAttributes.__allocating_init(identifier:layoutIdentifier:nodeIdentifier:frame:resizing:zIndex:visibility:isUserInteractionEnabled:contextLayoutOptions:accessibilityRole:style:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t dispatch thunk of FormatSponsoredBannerLayoutAttributes.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t storeEnumTagSinglePayload for FormatSponsoredBannerLayoutAttributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 11 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 11) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF5)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF4)
    return ((uint64_t (*)(void))((char *)&loc_1BB272010 + 4 * byte_1BB8FDA01[v4]))();
  *a1 = a2 + 11;
  return ((uint64_t (*)(void))((char *)sub_1BB272044 + 4 * byte_1BB8FD9FC[v4]))();
}

uint64_t sub_1BB272044(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB27204C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB272054);
  return result;
}

uint64_t sub_1BB272060(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB272068);
  *(_BYTE *)result = a2 + 11;
  return result;
}

uint64_t sub_1BB27206C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB272074(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FormatSponsoredBannerLayoutAttributes.CodingKeys()
{
  return &type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys;
}

unint64_t sub_1BB272094()
{
  unint64_t result;

  result = qword_1EF2BF710;
  if (!qword_1EF2BF710)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDC84, &type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF710);
  }
  return result;
}

unint64_t sub_1BB2720DC()
{
  unint64_t result;

  result = qword_1EF2BF718;
  if (!qword_1EF2BF718)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDBF4, &type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF718);
  }
  return result;
}

unint64_t sub_1BB272124()
{
  unint64_t result;

  result = qword_1EF2BF720;
  if (!qword_1EF2BF720)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDC1C, &type metadata for FormatSponsoredBannerLayoutAttributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF720);
  }
  return result;
}

uint64_t sub_1BB272168(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001BB961EB0 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644965646F6ELL && a2 == 0xEE00726569666974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D617266 && a2 == 0xE500000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x676E697A69736572 && a2 == 0xE800000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7865646E497ALL && a2 == 0xE600000000000000 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x696C696269736976 && a2 == 0xEA00000000007974 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001BB965930 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001BB965760 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001BB961C20 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001BB965970 || (sub_1BB874398() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x656C797473 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    v6 = sub_1BB874398();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 11;
    else
      return 12;
  }
}

ValueMetadata *type metadata accessor for A12_V13()
{
  return &type metadata for A12_V13;
}

uint64_t sub_1BB272634(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  __int128 v10;
  _OWORD v12[2];
  char v13;

  v3 = v1;
  sub_1BA4CDF6C(0, &qword_1EF2BF868, (uint64_t (*)(void))sub_1BB2756A8, (uint64_t)&type metadata for A12_V13.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED170]);
  v6 = v5;
  v7 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2756A8();
  sub_1BB8746C8();
  v10 = *(_OWORD *)(v3 + 16);
  v12[0] = *(_OWORD *)v3;
  v12[1] = v10;
  v13 = 0;
  type metadata accessor for CGRect(0);
  sub_1BA4A2870(&qword_1EF2A9A18, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9C0]);
  sub_1BB8741AC();
  if (!v2)
  {
    *(_QWORD *)&v12[0] = *(_QWORD *)(v3 + 32);
    v13 = 1;
    sub_1BA4C576C(0, &qword_1ED3B94A0);
    sub_1BA4DB848(&qword_1EF2A9F98, (uint64_t (*)(void))sub_1BA82F554, MEMORY[0x1E0DEAF10]);
    sub_1BB8741AC();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1BB2727E8()
{
  sub_1BB2756A8();
  return sub_1BB874710();
}

uint64_t sub_1BB272810()
{
  sub_1BB2756A8();
  return sub_1BB87471C();
}

double sub_1BB272838@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_1BB275494(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_1BB27287C(_QWORD *a1)
{
  return sub_1BB272634(a1);
}

uint64_t sub_1BB272890()
{
  sub_1BB275190();
  return sub_1BB86D96C();
}

uint64_t sub_1BB2728F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  unsigned __int8 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void *v17;
  unsigned __int8 v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  void *v22;
  void *v23;
  unsigned __int8 v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  __int128 v70;
  unsigned __int8 v71;
  ValueMetadata *v72;
  unint64_t v73;
  uint64_t v74;

  v74 = a2;
  v61 = a3;
  v5 = sub_1BB86C8E0();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for GroupLayoutContext();
  v59 = *(_QWORD *)(v9 - 8);
  v60 = v9;
  MEMORY[0x1E0C80A78](v9);
  v62 = (uint64_t)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v51 - v12;
  v14 = type metadata accessor for GroupLayoutBindingContext();
  v57 = *(_QWORD *)(v14 - 8);
  v58 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = *v3;
  v17 = (void *)*((_QWORD *)v3 + 1);
  v18 = v3[16];
  *(_QWORD *)&v70 = 4;
  if (GroupLayoutBindingContext.count(for:)((NewsFeed::FeedItemTraits)&v70))
  {
    sub_1BA7E415C();
    swift_allocError();
    *(_OWORD *)v19 = 0u;
    *(_OWORD *)(v19 + 16) = 0u;
    *(_QWORD *)(v19 + 32) = 0;
    *(_BYTE *)(v19 + 40) = 13;
    return swift_willThrow();
  }
  else
  {
    v55 = a1;
    v54 = v16;
    sub_1BA4C2DD8(a1, (uint64_t)v16, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    v21 = (uint64_t)v13;
    sub_1BA4C2DD8(v74, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    v22 = v17;
    v23 = v17;
    v24 = v18;
    sub_1BA7C26A0(v23, v18);
    sub_1BB86C8D4();
    v53 = sub_1BB86C8C8();
    v52 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    v72 = &type metadata for A12_V13;
    v26 = sub_1BA8EE738();
    v73 = v26;
    v27 = v56;
    LOBYTE(v70) = v56;
    *((_QWORD *)&v70 + 1) = v22;
    v71 = v24;
    type metadata accessor for GroupLayoutKey();
    v28 = swift_allocObject();
    sub_1BA7C26A0(v22, v24);
    v64 = sub_1BB874734();
    v65 = v29;
    v68 = 95;
    v69 = 0xE100000000000000;
    v66 = 45;
    v67 = 0xE100000000000000;
    sub_1BA7114A0();
    v30 = sub_1BB873B04();
    v32 = v31;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v28 + 16) = v30;
    *(_QWORD *)(v28 + 24) = v32;
    v33 = (uint64_t *)(v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_identifier);
    v34 = v52;
    *v33 = v53;
    v33[1] = v34;
    sub_1BA4C010C((uint64_t)&v70, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_factory);
    v35 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings;
    sub_1BA5193C4((uint64_t)v54, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_bindings, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutBindingContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v57 + 56))(v35, 0, 1, v58);
    v36 = v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext;
    sub_1BA5193C4(v21, v28 + OBJC_IVAR____TtC8NewsFeed14GroupLayoutKey_layoutContext, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v59 + 56))(v36, 0, 1, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    sub_1BA7C2538(v22, v24);
    v72 = &type metadata for A12_V13;
    v73 = v26;
    LOBYTE(v70) = v27;
    *((_QWORD *)&v70 + 1) = v22;
    v71 = v24;
    v37 = v62;
    sub_1BA4C2DD8(v74, v62, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
    sub_1BA4B07F0(0, qword_1ED3B0E60, type metadata accessor for FeedHeadline, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for FeedItemSorter);
    v38 = swift_allocObject();
    *(_QWORD *)(v38 + 16) = MEMORY[0x1E0DEE9D8];
    v39 = (_QWORD *)(v38 + 16);
    swift_beginAccess();
    v40 = *(_QWORD **)(v38 + 16);
    sub_1BA7C26A0(v22, v24);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v38 + 16) = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v40 = sub_1BA7892A0(0, v40[2] + 1, 1, v40);
      *v39 = v40;
    }
    v42 = v61;
    v43 = v63;
    v45 = v40[2];
    v44 = v40[3];
    if (v45 >= v44 >> 1)
    {
      v40 = sub_1BA7892A0((_QWORD *)(v44 > 1), v45 + 1, 1, v40);
      *v39 = v40;
    }
    v40[2] = v45 + 1;
    v46 = &v40[2 * v45];
    v46[4] = sub_1BACB8D7C;
    v46[5] = 0;
    swift_endAccess();
    v47 = sub_1BA7E1F18((uint64_t)&unk_1E726A060, 0, 0, v38, 0, 0, 0, 0);
    if (v43)
    {
      swift_release();
      swift_release();
      sub_1BA4A2E80(v37, (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)&v70);
    }
    else
    {
      v48 = v47;
      swift_release();
      v49 = type metadata accessor for A12_V13.Bound();
      v42[3] = v49;
      v42[4] = sub_1BA4A2870(qword_1EF2BF740, (uint64_t (*)(uint64_t))type metadata accessor for A12_V13.Bound, (uint64_t)&unk_1BB8FDDC8);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v42);
      *boxed_opaque_existential_0 = v28;
      sub_1BA4CECCC(&v70, (uint64_t)(boxed_opaque_existential_0 + 1));
      result = sub_1BA5193C4(v37, (uint64_t)boxed_opaque_existential_0 + *(int *)(v49 + 24), (uint64_t (*)(_QWORD))type metadata accessor for GroupLayoutContext);
      *(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v49 + 28)) = v48;
    }
  }
  return result;
}

double sub_1BB272E84@<D0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t inited;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  double v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  double v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _BYTE *v30;
  double result;
  uint64_t v32;
  _QWORD v33[2];
  __int128 v34;
  uint64_t v35;
  _BYTE *v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD v39[6];
  char v40[105];
  __int128 v41[9];
  __int128 v42[2];
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v2 = v1;
  v36 = a1;
  v35 = sub_1BB86DA38();
  *(_QWORD *)&v34 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v33[0] = (char *)v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4B07F0(0, (unint64_t *)&qword_1ED3B9F18, (uint64_t (*)(uint64_t))sub_1BA829A4C, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  v5 = type metadata accessor for A12_V13.Bound();
  v6 = v1 + *(int *)(v5 + 24);
  v7 = type metadata accessor for GroupLayoutContext();
  v8 = *(int *)(v7 + 40);
  v9 = v6;
  v33[1] = v6;
  v10 = *(_QWORD *)(v6 + v8);
  v11 = *(_QWORD *)(v10 + 16);
  v12 = *(double *)(v9 + *(int *)(v7 + 32));
  sub_1BA4C010C(v11 + 16, (uint64_t)&v43);
  sub_1BA4C010C(v11 + 56, (uint64_t)v42);
  v13 = v12 * *(double *)(v11 + 96);
  type metadata accessor for FeedLayoutStylerFactory();
  v14 = swift_initStackObject();
  sub_1BA4CECCC(&v43, v14 + 16);
  sub_1BA4CECCC(v42, v14 + 56);
  *(double *)(v14 + 96) = v13;
  LOBYTE(v41[0]) = 0;
  FeedLayoutStylerFactory.styler(withHeading:)((char *)v41, (uint64_t *)(inited + 32));
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v14 + 16);
  __swift_destroy_boxed_opaque_existential_1(v14 + 56);
  v15 = *(_QWORD *)(v10 + 16);
  sub_1BA4C010C(v15 + 16, (uint64_t)v42);
  sub_1BA4C010C(v15 + 56, (uint64_t)v41);
  v16 = v12 * *(double *)(v15 + 96);
  v17 = swift_initStackObject();
  sub_1BA4CECCC(v42, v17 + 16);
  sub_1BA4CECCC(v41, v17 + 56);
  *(double *)(v17 + 96) = v16;
  v40[0] = 2;
  FeedLayoutStylerFactory.styler(withHeading:)(v40, (uint64_t *)&v43);
  swift_setDeallocating();
  __swift_destroy_boxed_opaque_existential_1(v17 + 16);
  __swift_destroy_boxed_opaque_existential_1(v17 + 56);
  v18 = sub_1BA6B5B08((uint64_t)&v43, *(_QWORD *)(*(_QWORD *)(v2 + *(int *)(v5 + 28)) + 16) - 1);
  *(_QWORD *)&v43 = inited;
  sub_1BA6B5BE8(v18);
  v19 = v43;
  v39[2] = v2;
  v20 = swift_bridgeObjectRetain();
  v21 = sub_1BACB8FF0(v20, v19, (void (*)(char *, uint64_t))sub_1BA6B5C04, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v22 = *MEMORY[0x1E0DB5D88];
  v23 = sub_1BB86D678();
  v24 = v33[0];
  (*(void (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v33[0], v22, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v24, *MEMORY[0x1E0DB6200], v35);
  v37 = v21;
  v38 = v2;
  sub_1BB275234(0, &qword_1EF2BF7E8, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB6308]);
  swift_allocObject();
  v35 = sub_1BB86DB34();
  v25 = sub_1BB86DB40();
  v34 = v43;
  v26 = v44;
  v27 = v45;
  *(_QWORD *)&v43 = v21;
  *(_QWORD *)&v42[0] = v46;
  MEMORY[0x1E0C80A78](v25);
  sub_1BA4B07F0(0, &qword_1ED3B94B8, type metadata accessor for HeadlineViewLayout.Context, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DEAEC8]);
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  sub_1BA6B5AA8();
  sub_1BA6B50E4(&qword_1ED3B94A8, &qword_1ED3B94A0);
  swift_bridgeObjectRetain();
  v28 = sub_1BB86ED58();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v43 = v28;
  sub_1BA4C576C(0, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B50E4((unint64_t *)&qword_1ED3B9360, (unint64_t *)&qword_1ED3B9350);
  sub_1BA6B39A0();
  v29 = sub_1BB872BBC();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v30 = v36;
  *v36 = 0;
  result = *(double *)&v34;
  *(_OWORD *)(v30 + 8) = v34;
  *((_QWORD *)v30 + 3) = v26;
  *((_QWORD *)v30 + 4) = v27;
  v32 = MEMORY[0x1E0DEE9D8];
  *((_QWORD *)v30 + 5) = v29;
  *((_QWORD *)v30 + 6) = v32;
  return result;
}

uint64_t sub_1BB273364(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  _BYTE v14[16];
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v14[-v9];
  v17 = a1;
  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = 12;
  *v10 = v11;
  (*(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DB63F8], v7);
  v15 = a2;
  v16 = a3;
  v12 = MEMORY[0x1E0DB5DD0];
  sub_1BB275234(0, &qword_1EF2BF808, (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5DD0]);
  sub_1BB2751F4(&qword_1EF2BF810, &qword_1EF2BF808, (uint64_t (*)(uint64_t, _QWORD *))v12, MEMORY[0x1E0DB5DD8]);
  sub_1BB86D4BC();
  return (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_1BB2734C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t *, _QWORD, uint64_t);
  uint64_t (*v15)(uint64_t, _QWORD *);
  void (*v16)(uint64_t *, uint64_t);
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v7 = v6;
  v8 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v10 = (uint64_t *)&v18[-v9];
  v21 = a1;
  v11 = sub_1BB86D438();
  v12 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v11 - 8) + 104))(v13, *MEMORY[0x1E0DB5A38], v11);
  *v10 = v12;
  v14 = *(void (**)(uint64_t *, _QWORD, uint64_t))(v8 + 104);
  v14(v10, *MEMORY[0x1E0DB6318], v7);
  v15 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v15, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4EC();
  v16 = *(void (**)(uint64_t *, uint64_t))(v8 + 8);
  v16(v10, v7);
  v21 = a1;
  v14(v10, *MEMORY[0x1E0DB63C0], v7);
  v19 = a2;
  v20 = a3;
  sub_1BB86D498();
  return ((uint64_t (*)(uint64_t *, uint64_t))v16)(v10, v7);
}

uint64_t sub_1BB273688(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, _QWORD *);
  void (*v23)(uint64_t *, uint64_t);
  uint64_t v24;
  uint64_t v26;
  void (*v27)(uint64_t *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v28 = a1;
  v29 = a3;
  v26 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v26 - v7);
  v33 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 6;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v27 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v27(v8, v10, v5);
  sub_1BB2752B8();
  sub_1BA4CDF6C(0, &qword_1EF2BF830, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v12 = v11;
  v13 = *(_QWORD *)(v11 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1BB87CE70;
  v16 = v15 + v14;
  sub_1BA7FDE2C();
  v18 = (_QWORD *)(v16 + *(int *)(v17 + 48));
  v19 = *MEMORY[0x1E0DB6000];
  v20 = sub_1BB86D8B8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v16, v19, v20);
  *v18 = 0x6C6F437468676972;
  v18[1] = 0xEB000000006E6D75;
  (*(void (**)(unint64_t, _QWORD, uint64_t))(v13 + 104))(v16, *MEMORY[0x1E0DB5BF8], v12);
  v21 = v26;
  v32 = v26;
  v22 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v22, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  swift_bridgeObjectRelease();
  v23 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v23(v8, v5);
  v33 = v28;
  v24 = swift_allocObject();
  *(_QWORD *)(v24 + 16) = 6;
  *v8 = v24;
  v27(v8, v10, v5);
  v30 = v21;
  v31 = v29;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v23)(v8, v5);
}

uint64_t sub_1BB273988(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (!*(_QWORD *)(a2 + 16))
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 3;
  *(_QWORD *)((char *)v11 + v9[6]) = 0;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BB273D98(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  double v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, _QWORD *);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t *, uint64_t);
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t result;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  char *v53;
  void *v54;
  double v55;
  double v56;
  double v57;
  double v58;
  id v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t KeyPath;
  uint64_t (*v65)(uint64_t *, uint64_t);
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  void (*v73)(char *, uint64_t, uint64_t, double);
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;

  v82 = a3;
  v79 = a2;
  v72 = a1;
  v69 = type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v69);
  v63 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for HeadlineViewLayout.Context(0);
  v68 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v70 = (uint64_t)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v9 = v8;
  v10 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v12 = (uint64_t *)((char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (uint64_t *)((char *)&v62 - v15);
  v84 = a1;
  v17 = *MEMORY[0x1E0DB6410];
  v73 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 104);
  v73((char *)&v62 - v15, v17, v9, v14);
  sub_1BB2752B8();
  v78 = v18;
  sub_1BA4CDF6C(0, &qword_1EF2BF830, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
  v20 = v19;
  v21 = *(_QWORD *)(v19 - 8);
  v81 = v19;
  v22 = *(_QWORD *)(v21 + 72);
  v23 = *(unsigned __int8 *)(v21 + 80);
  v24 = (v23 + 32) & ~v23;
  v75 = v24;
  v76 = v23 | 7;
  v77 = v24 + v22;
  v25 = swift_allocObject();
  v74 = xmmword_1BB87CE70;
  *(_OWORD *)(v25 + 16) = xmmword_1BB87CE70;
  v26 = *MEMORY[0x1E0DB5C80];
  v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104);
  v80(v25 + v24, v26, v20);
  v83 = a2;
  v27 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  v29 = v28;
  v61 = sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v27, MEMORY[0x1E0DB5A18]);
  sub_1BB86D498();
  swift_bridgeObjectRelease();
  v30 = *(void (**)(uint64_t *, uint64_t))(v10 + 8);
  v30(v16, v9);
  v31 = v72;
  v84 = v72;
  v32 = sub_1BB86D438();
  v33 = swift_allocBox();
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v32 - 8) + 104))(v34, *MEMORY[0x1E0DB5A38], v32);
  *v16 = v33;
  v35 = (void (*)(uint64_t *, uint64_t, uint64_t))v73;
  ((void (*)(uint64_t *, _QWORD, uint64_t))v73)(v16, *MEMORY[0x1E0DB6318], v9);
  v67 = v29;
  v66 = v61;
  sub_1BB86D4EC();
  v65 = (uint64_t (*)(uint64_t *, uint64_t))v30;
  v30(v16, v9);
  v84 = v31;
  KeyPath = swift_getKeyPath();
  sub_1BAA71EEC();
  v37 = v36;
  v38 = swift_allocBox();
  v40 = (char *)v39 + *(int *)(v37 + 48);
  *v39 = 2;
  v41 = *MEMORY[0x1E0DB61C8];
  v42 = sub_1BB86DA20();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 104);
  v44(v40, v41, v42);
  *v12 = v38;
  v45 = *MEMORY[0x1E0DB6338];
  v72 = v12;
  v71 = v9;
  v35(v12, v45, v9);
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v74;
  v47 = (double *)(v46 + v75);
  v48 = v82 + *(int *)(type metadata accessor for A12_V13.Bound() + 24);
  *v47 = *(double *)(v48 + *(int *)(type metadata accessor for GroupLayoutContext() + 32)) * 135.0;
  result = ((uint64_t (*)(double *, _QWORD, uint64_t))v80)(v47, *MEMORY[0x1E0DB5CB8], v81);
  if (*(_QWORD *)(v79 + 16) < 4uLL)
  {
    __break(1u);
  }
  else
  {
    v50 = v70;
    sub_1BA4C2DD8(v79+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ 3 * *(_QWORD *)(v68 + 72), v70, type metadata accessor for HeadlineViewLayout.Context);
    v51 = v69;
    v52 = v63;
    v53 = &v63[*(int *)(v69 + 20)];
    v44(v53, v41, v42);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v53, 0, 1, v42);
    v54 = (void *)*MEMORY[0x1E0DC4918];
    *v52 = 2;
    *(_QWORD *)((char *)v52 + *(int *)(v51 + 24)) = 0;
    *(_QWORD *)((char *)v52 + *(int *)(v51 + 28)) = v54;
    v55 = *MEMORY[0x1E0DC49E8];
    v56 = *(double *)(MEMORY[0x1E0DC49E8] + 8);
    v57 = *(double *)(MEMORY[0x1E0DC49E8] + 16);
    v58 = *(double *)(MEMORY[0x1E0DC49E8] + 24);
    v59 = v54;
    _s8NewsFeed18HeadlineViewLayoutV16imageOnRightSide7context7options6insets11TeaTemplate0E0CyA2C10AttributesVGAC7ContextV_AC7OptionsVSo12UIEdgeInsetsVtFZ_0(v50, (uint64_t)v52, v55, v56, v57, v58);
    sub_1BA4A2E80((uint64_t)v52, type metadata accessor for HeadlineViewLayout.Options);
    sub_1BA4A2E80(v50, type metadata accessor for HeadlineViewLayout.Context);
    sub_1BA595D14();
    v60 = v72;
    sub_1BB86D4C8();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return v65(v60, v71);
  }
  return result;
}

uint64_t sub_1BB274378(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t *, uint64_t, uint64_t);
  uint64_t (*v12)(uint64_t, _QWORD *);
  void (*v13)(uint64_t *, uint64_t);
  uint64_t v14;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)&v16[-v7];
  v19 = a1;
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = 3;
  *v8 = v9;
  v10 = *MEMORY[0x1E0DB63F8];
  v11 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 104);
  v11(v8, v10, v5);
  v18 = a2;
  v12 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v12, MEMORY[0x1E0DB5A18]);
  sub_1BB86D4BC();
  v13 = *(void (**)(uint64_t *, uint64_t))(v6 + 8);
  v13(v8, v5);
  v19 = a1;
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = 3;
  *v8 = v14;
  v11(v8, v10, v5);
  v17 = a2;
  sub_1BB86D4BC();
  return ((uint64_t (*)(uint64_t *, uint64_t))v13)(v8, v5);
}

uint64_t sub_1BB274560(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 2uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ *(_QWORD *)(v13 + 72)+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80)), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BB274970(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t KeyPath;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void **v26;
  void *v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  double v31;
  uint64_t (*v32)(uint64_t, _QWORD *);
  unint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v4 = sub_1BB86DA38();
  v38 = *(_QWORD *)(v4 - 8);
  v39 = v4;
  MEMORY[0x1E0C80A78](v4);
  v40 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1BB86D93C();
  v41 = *(_QWORD *)(v6 - 8);
  v42 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (int *)type metadata accessor for HeadlineViewLayout.Options(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (_QWORD *)((char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = type metadata accessor for HeadlineViewLayout.Context(0);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BA4CDF6C(0, &qword_1EF2BF800, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB6418]);
  v17 = v16;
  v18 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v35 - v19;
  v43 = a1;
  KeyPath = swift_getKeyPath();
  (*(void (**)(char *, _QWORD, uint64_t))(v18 + 104))(v20, *MEMORY[0x1E0DB63C0], v17);
  if (*(_QWORD *)(a2 + 16) < 3uLL)
  {
    __break(1u);
    goto LABEL_5;
  }
  v35[1] = KeyPath;
  v36 = v18;
  v37 = v17;
  sub_1BA4C2DD8(a2+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ 2 * *(_QWORD *)(v13 + 72), (uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v22 = (char *)v11 + v9[5];
  v23 = *MEMORY[0x1E0DB61C8];
  v24 = sub_1BB86DA20();
  v25 = *(_QWORD *)(v24 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 104))(v22, v23, v24);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
  v26 = (void **)MEMORY[0x1E0DC4918];
  *v11 = 2;
  *(_QWORD *)((char *)v11 + v9[6]) = 5;
  v27 = *v26;
  *(_QWORD *)((char *)v11 + v9[7]) = v27;
  v28 = qword_1ED3BC390;
  v29 = v27;
  if (v28 != -1)
LABEL_5:
    swift_once();
  swift_retain();
  sub_1BB86D2B8();
  v30 = swift_release();
  v31 = MEMORY[0x1E0C80A78](v30);
  v35[-4] = v15;
  v35[-3] = v11;
  v34 = (unint64_t)v8;
  (*(void (**)(char *, _QWORD, uint64_t, double))(v38 + 104))(v40, *MEMORY[0x1E0DB6208], v39, v31);
  sub_1BA8F1F64();
  swift_allocObject();
  sub_1BB86DB34();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v42);
  sub_1BA4A2E80((uint64_t)v11, type metadata accessor for HeadlineViewLayout.Options);
  sub_1BA4A2E80((uint64_t)v15, type metadata accessor for HeadlineViewLayout.Context);
  v32 = (uint64_t (*)(uint64_t, _QWORD *))MEMORY[0x1E0DB5A10];
  sub_1BB275234(0, &qword_1EF2BF818, MEMORY[0x1E0DB5A10]);
  sub_1BB2751F4(&qword_1EF2BF820, &qword_1EF2BF818, v32, MEMORY[0x1E0DB5A18]);
  v34 = sub_1BA595D14();
  sub_1BB86D4C8();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v20, v37);
}

uint64_t sub_1BB274D80@<X0>(void *__src@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  _BYTE v21[304];

  memcpy(v21, __src, sizeof(v21));
  sub_1BA640FB4();
  v10 = v9;
  v11 = swift_allocBox();
  v13 = v12;
  v14 = (void *)(v12 + *(int *)(v10 + 48));
  v15 = *(int *)(v10 + 64);
  sub_1BA4C2DD8(a3, v12, type metadata accessor for HeadlineViewLayout.Context);
  memcpy(v14, v21, 0x130uLL);
  v16 = a4 + *(int *)(type metadata accessor for A12_V13.Bound() + 24);
  result = type metadata accessor for GroupLayoutContext();
  v18 = *(_QWORD *)(v16 + *(int *)(result + 28));
  v19 = __OFADD__(v18, a2);
  v20 = v18 + a2;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v13 + v15) = v20;
    *a5 = v11 | 0x4000000000000000;
  }
  return result;
}

uint64_t sub_1BB274E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1BB2728F8(a1, a2, a3);
}

uint64_t sub_1BB274E74()
{
  return sub_1BB690A70();
}

unint64_t sub_1BB274E84(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB274EB0();
  result = sub_1BB274EF4();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB274EB0()
{
  unint64_t result;

  result = qword_1EF2BF730;
  if (!qword_1EF2BF730)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDD14, &type metadata for A12_V13);
    atomic_store(result, (unint64_t *)&qword_1EF2BF730);
  }
  return result;
}

unint64_t sub_1BB274EF4()
{
  unint64_t result;

  result = qword_1EF2BF738;
  if (!qword_1EF2BF738)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDD3C, &type metadata for A12_V13);
    atomic_store(result, (unint64_t *)&qword_1EF2BF738);
  }
  return result;
}

uint64_t type metadata accessor for A12_V13.Bound()
{
  uint64_t result;

  result = qword_1EF2BF7A0;
  if (!qword_1EF2BF7A0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1BB274F74()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB274F80(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for GroupLayoutContext();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v8);
  }
}

uint64_t sub_1BB274FFC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1BB275008(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for GroupLayoutContext();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1BB27507C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for GroupLayoutContext();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1BB275108(uint64_t a1)
{
  uint64_t result;

  result = sub_1BA4A2870(&qword_1EF2BF7E0, (uint64_t (*)(uint64_t))type metadata accessor for A12_V13.Bound, (uint64_t)&unk_1BB8FDDA0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB275144(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB273364(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_1BB27514C()
{
  unint64_t result;

  result = qword_1EF2BF7F0;
  if (!qword_1EF2BF7F0)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDEF8, &type metadata for A12_V13.Layout);
    atomic_store(result, (unint64_t *)&qword_1EF2BF7F0);
  }
  return result;
}

unint64_t sub_1BB275190()
{
  unint64_t result;

  result = qword_1EF2BF7F8;
  if (!qword_1EF2BF7F8)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDEC8, &type metadata for A12_V13.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BF7F8);
  }
  return result;
}

uint64_t sub_1BB2751D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v4;

  return sub_1BB274D80(a3, a1, a2, *(_QWORD *)(v4 + 16), a4);
}

uint64_t sub_1BB2751DC()
{
  return swift_deallocObject();
}

uint64_t sub_1BB2751EC(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB2734C0(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB2751F4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *), uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    sub_1BB275234(255, a2, a3);
    result = MEMORY[0x1BCCE5B24](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

void sub_1BB275234(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, _QWORD *))
{
  unint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  if (!*a2)
  {
    v8[0] = &type metadata for A12_V13.Layout;
    v8[1] = &type metadata for A12_V13.Layout.Attributes;
    v8[2] = sub_1BB27514C();
    v8[3] = sub_1BB275190();
    v6 = a3(a1, v8);
    if (!v7)
      atomic_store(v6, a2);
  }
}

uint64_t sub_1BB2752B0(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB273688(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

void sub_1BB2752B8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EF2BF828)
  {
    sub_1BA4CDF6C(255, &qword_1EF2BF830, (uint64_t (*)(void))sub_1BB27514C, (uint64_t)&type metadata for A12_V13.Layout, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DB5CC0]);
    v0 = sub_1BB874218();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EF2BF828);
  }
}

uint64_t sub_1BB27532C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB273988(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB275334(uint64_t *a1)
{
  uint64_t v1;

  return sub_1BB273D98(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1BB27533C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB274378(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB275344(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB274560(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1BB27534C(uint64_t a1)
{
  uint64_t v1;

  return sub_1BB274970(a1, *(_QWORD *)(v1 + 16));
}

ValueMetadata *type metadata accessor for A12_V13.Layout.Attributes()
{
  return &type metadata for A12_V13.Layout.Attributes;
}

ValueMetadata *type metadata accessor for A12_V13.Layout()
{
  return &type metadata for A12_V13.Layout;
}

unint64_t sub_1BB275378()
{
  unint64_t result;

  result = qword_1EF2BF838;
  if (!qword_1EF2BF838)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDE68, &type metadata for A12_V13.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BF838);
  }
  return result;
}

unint64_t sub_1BB2753C0()
{
  unint64_t result;

  result = qword_1EF2BF840;
  if (!qword_1EF2BF840)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDE40, &type metadata for A12_V13.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BF840);
  }
  return result;
}

unint64_t sub_1BB275408()
{
  unint64_t result;

  result = qword_1EF2BF848;
  if (!qword_1EF2BF848)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDE18, &type metadata for A12_V13.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BF848);
  }
  return result;
}

unint64_t sub_1BB275450()
{
  unint64_t result;

  result = qword_1EF2BF850;
  if (!qword_1EF2BF850)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDE90, &type metadata for A12_V13.Layout.Attributes);
    atomic_store(result, (unint64_t *)&qword_1EF2BF850);
  }
  return result;
}

uint64_t sub_1BB275494@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;

  v18 = a2;
  sub_1BA4CDF6C(0, &qword_1EF2BF858, (uint64_t (*)(void))sub_1BB2756A8, (uint64_t)&type metadata for A12_V13.Layout.Attributes.CodingKeys, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E0DED048]);
  v5 = v4;
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1BB2756A8();
  sub_1BB87468C();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v9 = v6;
  v10 = v18;
  type metadata accessor for CGRect(0);
  v23 = 0;
  sub_1BA4A2870((unint64_t *)&unk_1ED3B9910, (uint64_t (*)(uint64_t))type metadata accessor for CGRect, MEMORY[0x1E0C9B9E0]);
  sub_1BB8740D4();
  v11 = v19;
  v12 = v20;
  v13 = v21;
  v14 = v22;
  sub_1BA4C576C(0, &qword_1ED3B94A0);
  v23 = 1;
  sub_1BA4DB848(&qword_1ED3B94B0, (uint64_t (*)(void))sub_1BA82F510, MEMORY[0x1E0DEAF40]);
  sub_1BB8740D4();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
  v15 = v19;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *v10 = v11;
  v10[1] = v12;
  v10[2] = v13;
  v10[3] = v14;
  v10[4] = v15;
  return result;
}

unint64_t sub_1BB2756A8()
{
  unint64_t result;

  result = qword_1EF2BF860;
  if (!qword_1EF2BF860)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDFEC, &type metadata for A12_V13.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF860);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for A12_V13.Layout.Attributes.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1BB275738 + 4 * byte_1BB8FDD05[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1BB27576C + 4 * byte_1BB8FDD00[v4]))();
}

uint64_t sub_1BB27576C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB275774(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB27577CLL);
  return result;
}

uint64_t sub_1BB275788(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB275790);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1BB275794(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB27579C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for A12_V13.Layout.Attributes.CodingKeys()
{
  return &type metadata for A12_V13.Layout.Attributes.CodingKeys;
}

unint64_t sub_1BB2757BC()
{
  unint64_t result;

  result = qword_1EF2BF870;
  if (!qword_1EF2BF870)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDFC4, &type metadata for A12_V13.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF870);
  }
  return result;
}

unint64_t sub_1BB275804()
{
  unint64_t result;

  result = qword_1EF2BF878;
  if (!qword_1EF2BF878)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDF34, &type metadata for A12_V13.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF878);
  }
  return result;
}

unint64_t sub_1BB27584C()
{
  unint64_t result;

  result = qword_1EF2BF880;
  if (!qword_1EF2BF880)
  {
    result = MEMORY[0x1BCCE5B24](&unk_1BB8FDF5C, &type metadata for A12_V13.Layout.Attributes.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EF2BF880);
  }
  return result;
}

uint64_t FormatResizeAuto.mask.getter()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t FormatResizeAuto.mask.setter(uint64_t a1)
{
  uint64_t v1;

  swift_beginAccess();
  *(_QWORD *)(v1 + 16) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*FormatResizeAuto.mask.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1BB275944()
{
  uint64_t v0;
  uint64_t result;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;

  swift_beginAccess();
  result = 0;
  v2 = 0;
  v3 = *(_QWORD *)(v0 + 16);
  v4 = v3 + 56;
  v5 = 1 << *(_BYTE *)(v3 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(v3 + 56);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v2 << 6);
      goto LABEL_5;
    }
    v12 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v8)
      return result;
    v13 = *(_QWORD *)(v4 + 8 * v12);
    ++v2;
    if (!v13)
    {
      v2 = v12 + 1;
      if (v12 + 1 >= v8)
        return result;
      v13 = *(_QWORD *)(v4 + 8 * v2);
      if (!v13)
      {
        v2 = v12 + 2;
        if (v12 + 2 >= v8)
          return result;
        v13 = *(_QWORD *)(v4 + 8 * v2);
        if (!v13)
          break;
      }
    }
LABEL_22:
    v7 = (v13 - 1) & v13;
    v10 = __clz(__rbit64(v13)) + (v2 << 6);
LABEL_5:
    v11 = qword_1BB8FE130[*(char *)(*(_QWORD *)(v3 + 48) + v10)];
    if ((v11 & result) != 0)
      v11 = 0;
    result |= v11;
  }
  v14 = v12 + 3;
  if (v14 >= v8)
    return result;
  v13 = *(_QWORD *)(v4 + 8 * v14);
  if (v13)
  {
    v2 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    v2 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v2 >= v8)
      return result;
    v13 = *(_QWORD *)(v4 + 8 * v2);
    ++v14;
    if (v13)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t FormatResizeAuto.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FormatResizeAuto.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1BB275AC4(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB275B5C(&qword_1EF2BF888, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB275AF8(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB275B5C(&qword_1ED3C7620, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
  a1[2] = sub_1BB275B5C(&qword_1ED3A5AE0, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
  result = sub_1BB275B5C(&qword_1EF2BF890, (uint64_t)&protocol conformance descriptor for FormatResizeAuto);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB275B5C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatResizeAuto();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1BB275B98(_QWORD *a1)
{
  return FormatResizeAuto.encode(to:)(a1);
}

uint64_t sub_1BB275BB8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v2 = *a1;
  v3 = *a2;
  swift_beginAccess();
  v4 = *(_QWORD *)(v2 + 16);
  swift_beginAccess();
  v5 = *(_QWORD *)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v6 = sub_1BA8583F8(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6 & 1;
}

uint64_t sub_1BB275C4C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  swift_beginAccess();
  *a2 = *(_QWORD *)(v3 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for FormatResizeAuto()
{
  return swift_lookUpClassMethod();
}

uint64_t FormatTextNodeLink.content.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_retain();
}

uint64_t FormatTextNodeLink.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for FormatTextNodeLink() + 20);
  return sub_1BB275CE4(v3, a1);
}

uint64_t sub_1BB275CE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FormatURL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_1BB275D28(uint64_t a1, uint64_t a2, id a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v16;
  void *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;

  v10 = sub_1BB86C67C();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v18 = v4;
  v19 = (uint64_t)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = *v4;
  swift_retain();
  v13 = (void *)sub_1BA72FFD8(a1, a2, a3, a4);
  swift_release();
  if (!v5)
  {
    type metadata accessor for FormatTextNodeLink();
    v14 = v19;
    sub_1BA7FAB40(a1, v19);
    a3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3778]), sel_initWithAttributedString_, v13);
    v16 = *MEMORY[0x1E0DC1160];
    v17 = (void *)sub_1BB86C58C();
    objc_msgSend(a3, sel_addAttribute_value_range_, v16, v17, 0, objc_msgSend(v13, sel_length));

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v14, v10);
  }
  return a3;
}

uint64_t static FormatTextNodeLink.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v7;

  v7 = *a1;
  static FormatTextContent.== infix(_:_:)((uint64_t)&v7);
  if ((v4 & 1) == 0)
    return 0;
  v5 = type metadata accessor for FormatTextNodeLink();
  return _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + *(int *)(v5 + 20), a2 + *(int *)(v5 + 20));
}

uint64_t sub_1BB275F24@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return FormatTextNodeLink.init(from:)(a1, a2);
}

uint64_t sub_1BB275F38(_QWORD *a1)
{
  return FormatTextNodeLink.encode(to:)(a1);
}

uint64_t sub_1BB275F4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  char v6;
  uint64_t v8;

  v8 = *a1;
  static FormatTextContent.== infix(_:_:)((uint64_t)&v8);
  if ((v6 & 1) != 0)
    return _s8NewsFeed9FormatURLO2eeoiySbAC_ACtFZ_0((uint64_t)a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20));
  else
    return 0;
}

uint64_t sub_1BB275FC0(uint64_t a1)
{
  uint64_t result;

  result = sub_1BB276058(&qword_1EF2BF898, (uint64_t)&protocol conformance descriptor for FormatTextNodeLink);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1BB275FF4(_QWORD *a1)
{
  uint64_t result;

  a1[1] = sub_1BB276058(&qword_1EF2B3848, (uint64_t)&protocol conformance descriptor for FormatTextNodeLink);
  a1[2] = sub_1BB276058(&qword_1EF2B5A88, (uint64_t)&protocol conformance descriptor for FormatTextNodeLink);
  result = sub_1BB276058((unint64_t *)&unk_1EF2BF8A0, (uint64_t)&protocol conformance descriptor for FormatTextNodeLink);
  a1[3] = result;
  return result;
}

uint64_t sub_1BB276058(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for FormatTextNodeLink();
    result = MEMORY[0x1BCCE5B24](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for FormatTextNodeLink(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    type metadata accessor for FormatURL();
    swift_retain();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v11 = *(_QWORD *)v7;
      v12 = *((_QWORD *)v7 + 1);
      v13 = *((_QWORD *)v7 + 2);
      v14 = v7[24];
      sub_1BA690C00(v11, v12, v13, v14);
      *(_QWORD *)v6 = v11;
      *((_QWORD *)v6 + 1) = v12;
      *((_QWORD *)v6 + 2) = v13;
      v6[24] = v14;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        v9 = *((_QWORD *)v7 + 1);
        *(_QWORD *)v6 = *(_QWORD *)v7;
        *((_QWORD *)v6 + 1) = v9;
        *((_QWORD *)v6 + 2) = *((_QWORD *)v7 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        v15 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v6, v7, v15);
        v16 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v6[*(int *)(v16 + 20)] = *(_QWORD *)&v7[*(int *)(v16 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t destroy for FormatTextNodeLink(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for FormatURL();
  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 2)
    return sub_1BA5A7EF8(*(_QWORD *)v4, *(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16), *(_BYTE *)(v4 + 24));
  if ((_DWORD)result == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((_DWORD)result)
      return result;
    v6 = sub_1BB86C67C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v4, v6);
    type metadata accessor for FormatAbsoluteURL();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for FormatTextNodeLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  type metadata accessor for FormatURL();
  swift_retain();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v9 = *(_QWORD *)v6;
    v10 = *((_QWORD *)v6 + 1);
    v11 = *((_QWORD *)v6 + 2);
    v12 = v6[24];
    sub_1BA690C00(v9, v10, v11, v12);
    *(_QWORD *)v5 = v9;
    *((_QWORD *)v5 + 1) = v10;
    *((_QWORD *)v5 + 2) = v11;
    v5[24] = v12;
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      v8 = *((_QWORD *)v6 + 1);
      *(_QWORD *)v5 = *(_QWORD *)v6;
      *((_QWORD *)v5 + 1) = v8;
      *((_QWORD *)v5 + 2) = *((_QWORD *)v6 + 2);
      swift_bridgeObjectRetain();
    }
    else
    {
      v13 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v5, v6, v13);
      v14 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v5[*(int *)(v14 + 20)] = *(_QWORD *)&v6[*(int *)(v14 + 20)];
    }
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for FormatTextNodeLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BB15DE64((uint64_t)a1 + v6);
    type metadata accessor for FormatURL();
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v10 = *(_QWORD *)v8;
      v11 = *((_QWORD *)v8 + 1);
      v12 = *((_QWORD *)v8 + 2);
      v13 = v8[24];
      sub_1BA690C00(v10, v11, v12, v13);
      *(_QWORD *)v7 = v10;
      *((_QWORD *)v7 + 1) = v11;
      *((_QWORD *)v7 + 2) = v12;
      v7[24] = v13;
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
        swift_bridgeObjectRetain();
      }
      else
      {
        v14 = sub_1BB86C67C();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, v8, v14);
        v15 = type metadata accessor for FormatAbsoluteURL();
        *(_QWORD *)&v7[*(int *)(v15 + 20)] = *(_QWORD *)&v8[*(int *)(v15 + 20)];
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for FormatTextNodeLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = type metadata accessor for FormatURL();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v5, v6, v8);
    v9 = type metadata accessor for FormatAbsoluteURL();
    *(_QWORD *)&v5[*(int *)(v9 + 20)] = *(_QWORD *)&v6[*(int *)(v9 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for FormatTextNodeLink(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1BB15DE64((uint64_t)a1 + v6);
    v9 = type metadata accessor for FormatURL();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v10 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v7, v8, v10);
      v11 = type metadata accessor for FormatAbsoluteURL();
      *(_QWORD *)&v7[*(int *)(v11 + 20)] = *(_QWORD *)&v8[*(int *)(v11 + 20)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatTextNodeLink()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB2766A4(char *a1, uint64_t a2, uint64_t a3)
{
  int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 118)
  {
    v4 = (*(_QWORD *)a1 >> 60) & 0x8F | (16 * (*(_QWORD *)a1 & 7));
    v5 = v4 ^ 0x7E;
    v6 = 128 - v4;
    if (v5 >= 0x76)
      return 0;
    else
      return v6;
  }
  else
  {
    v10 = type metadata accessor for FormatURL();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for FormatTextNodeLink()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

unint64_t *sub_1BB276734(unint64_t *result, uint64_t a2, int a3, uint64_t a4)
{
  unint64_t *v5;
  uint64_t v6;
  uint64_t v8;

  v5 = result;
  if (a3 == 118)
  {
    v6 = (-(int)a2 >> 4) & 7 | (8 * (-(int)a2 & 0x7F));
    *result = (v6 | (v6 << 57)) & 0xF000000000000007;
  }
  else
  {
    v8 = type metadata accessor for FormatURL();
    return (unint64_t *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))((char *)v5 + *(int *)(a4 + 20), a2, a2, v8);
  }
  return result;
}

uint64_t *sub_1BB2767B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 2)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    *((_BYTE *)v3 + v5) = v10 == 1;
  }
  else
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1BB2768B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  v8 = v6 == 1;
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1BB276974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    v10 = v8 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v10;
  }
  return a1;
}

uint64_t sub_1BB276A5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  v8 = v6 == 1;
  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1BB276B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    v10 = v8 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v10;
  }
  return a1;
}

uint64_t sub_1BB276C00(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 < 0xFF)
    goto LABEL_19;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_19:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_19;
LABEL_12:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB276CB8 + 4 * byte_1BB8FE279[(v4 - 1)]))();
}

void sub_1BB276D04(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1BB276EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1BB276EDC + 4 * byte_1BB8FE287[v3]))();
}

void sub_1BB276F24(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

char *initializeBufferWithCopyOfBuffer for FormatServiceError(char *a1, char **a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  char *v12;
  char *v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v12[(v6 + 16) & ~(unint64_t)v6];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = sub_1BB86C67C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        sub_1BA8CE760();
        v9 = *(int *)(v8 + 48);
        v10 = *(char **)((char *)a2 + v9);
        v11 = v10;
        *(_QWORD *)&a1[v9] = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        v14 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v14;
        v15 = a2[2];
        v16 = a2[3];
        *((_QWORD *)a1 + 2) = v15;
        *((_QWORD *)a1 + 3) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
      case 6u:
        v17 = sub_1BB86C67C();
        (*(void (**)(char *, char **, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(a1, a2, v17);
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
      case 5u:
        *(_QWORD *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 9u:
        v18 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v18;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 0xAu:
        v19 = *a2;
        v20 = v19;
        *(_QWORD *)a1 = v19;
        swift_storeEnumTagMultiPayload();
        break;
      case 0xBu:
        v21 = *a2;
        v22 = a2[1];
        *(_QWORD *)a1 = v21;
        *((_QWORD *)a1 + 1) = v22;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

void destroy for FormatServiceError(void **a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v3 = sub_1BB86C67C();
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
      sub_1BA8CE760();
      v5 = *(void **)((char *)a1 + *(int *)(v4 + 48));
      goto LABEL_5;
    case 2u:
    case 0xBu:
      swift_bridgeObjectRelease();
      goto LABEL_7;
    case 3u:
    case 6u:
      v2 = sub_1BB86C67C();
      (*(void (**)(void **, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
      return;
    case 4u:
    case 5u:
    case 9u:
LABEL_7:
      swift_bridgeObjectRelease();
      break;
    case 0xAu:
      v5 = *a1;
LABEL_5:

      break;
    default:
      return;
  }
}

_QWORD *initializeWithCopy for FormatServiceError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = sub_1BB86C67C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      sub_1BA8CE760();
      v8 = *(int *)(v7 + 48);
      v9 = *(void **)((char *)a2 + v8);
      v10 = v9;
      *(_QWORD *)((char *)a1 + v8) = v9;
      goto LABEL_10;
    case 2u:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      v12 = a2[2];
      v13 = a2[3];
      a1[2] = v12;
      a1[3] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 3u:
    case 6u:
      v14 = sub_1BB86C67C();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(a1, a2, v14);
      goto LABEL_10;
    case 4u:
    case 5u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 9u:
      v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    case 0xAu:
      v16 = (void *)*a2;
      v17 = v16;
      *a1 = v16;
      goto LABEL_10;
    case 0xBu:
      v18 = *a2;
      v19 = a2[1];
      *a1 = v18;
      a1[1] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_10:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *assignWithCopy for FormatServiceError(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  void *v12;
  id v13;

  if (a1 != a2)
  {
    sub_1BB2776E8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = sub_1BB86C67C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
        sub_1BA8CE760();
        v8 = *(int *)(v7 + 48);
        v9 = *(void **)((char *)a2 + v8);
        v10 = v9;
        *(_QWORD *)((char *)a1 + v8) = v9;
        goto LABEL_11;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 3u:
      case 6u:
        v11 = sub_1BB86C67C();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
        goto LABEL_11;
      case 4u:
      case 5u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_11;
      case 0xAu:
        v12 = (void *)*a2;
        v13 = v12;
        *a1 = v12;
        goto LABEL_11;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_11:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1BB2776E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for FormatServiceError();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for FormatServiceError()
{
  uint64_t result;

  result = qword_1ED39FD88;
  if (!qword_1ED39FD88)
    return swift_getSingletonMetadata();
  return result;
}

char *initializeWithTake for FormatServiceError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 6 || EnumCaseMultiPayload == 3)
  {
    v9 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v7 = sub_1BB86C67C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    sub_1BA8CE760();
    *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for FormatServiceError(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a1 != a2)
  {
    sub_1BB2776E8((uint64_t)a1);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 6 || EnumCaseMultiPayload == 3)
    {
      v9 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v7 = sub_1BB86C67C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      sub_1BA8CE760();
      *(_QWORD *)&a1[*(int *)(v8 + 48)] = *(_QWORD *)&a2[*(int *)(v8 + 48)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1BB2779A0()
{
  uint64_t result;
  unint64_t v1;
  uint64_t v2;
  _QWORD v3[16];

  v3[4] = MEMORY[0x1E0DE9D38] + 64;
  result = sub_1BB86C67C();
  if (v1 <= 0x3F)
  {
    v2 = *(_QWORD *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[5] = v3;
    v3[6] = &unk_1BB8FE360;
    v3[7] = v2;
    v3[8] = MEMORY[0x1E0DE9D18] + 64;
    v3[9] = MEMORY[0x1E0DE9D18] + 64;
    v3[10] = v2;
    v3[11] = &unk_1BB8FE378;
    v3[12] = &unk_1BB8FE390;
    v3[13] = &unk_1BB8FE3A8;
    v3[14] = &unk_1BB8FE3C0;
    v3[15] = &unk_1BB8FE3A8;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for GroupLayoutContext(_QWORD *a1, _QWORD *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v23 = *a2;
    *a1 = *a2;
    v4 = (_QWORD *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v7 = sub_1BB86D7A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v4, a2, v7);
    v8 = a3[5];
    v9 = (char *)v4 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1BB86D660();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = (char *)v4 + v12;
    v14 = (char *)a2 + v12;
    *(_OWORD *)v13 = *(_OWORD *)((char *)a2 + v12);
    v13[16] = *((_BYTE *)a2 + v12 + 16);
    *(_WORD *)(v13 + 17) = *(_WORD *)((char *)a2 + v12 + 17);
    v13[19] = *((_BYTE *)a2 + v12 + 19);
    *((_DWORD *)v13 + 5) = *(_DWORD *)((char *)a2 + v12 + 20);
    v15 = *(_QWORD *)((char *)a2 + v12 + 24);
    if (v15 >= 2)
      v15 = swift_bridgeObjectRetain();
    *((_QWORD *)v13 + 3) = v15;
    v16 = type metadata accessor for FeedLayoutSolverOptions(0);
    v17 = *(int *)(v16 + 36);
    v18 = &v13[v17];
    v19 = &v14[v17];
    v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      sub_1BA914C98();
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v24 = sub_1BB8705C4();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v18, v19, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
    }
    *(_QWORD *)&v13[*(int *)(v16 + 40)] = *(_QWORD *)&v14[*(int *)(v16 + 40)];
    v25 = a3[8];
    *(_QWORD *)((char *)v4 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)v4 + v25) = *(_QWORD *)((char *)a2 + v25);
    v26 = a3[10];
    *((_BYTE *)v4 + a3[9]) = *((_BYTE *)a2 + a3[9]);
    *(_QWORD *)((char *)v4 + v26) = *(_QWORD *)((char *)a2 + v26);
    v27 = a3[12];
    *((_BYTE *)v4 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    *(_QWORD *)((char *)v4 + v27) = *(_QWORD *)((char *)a2 + v27);
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t assignWithCopy for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  unint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  const void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t);
  int v23;
  uint64_t v24;
  size_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_OWORD *)(a2 + v11);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(a2 + v11 + 16);
  *(_OWORD *)v12 = v14;
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(a2 + v11 + 17);
  *(_BYTE *)(v12 + 18) = *(_BYTE *)(a2 + v11 + 18);
  *(_BYTE *)(v12 + 19) = *(_BYTE *)(a2 + v11 + 19);
  *(_BYTE *)(v12 + 20) = *(_BYTE *)(a2 + v11 + 20);
  *(_BYTE *)(v12 + 21) = *(_BYTE *)(a2 + v11 + 21);
  *(_BYTE *)(v12 + 22) = *(_BYTE *)(a2 + v11 + 22);
  *(_BYTE *)(v12 + 23) = *(_BYTE *)(a2 + v11 + 23);
  v15 = (unint64_t *)(a1 + v11 + 24);
  v16 = *(_QWORD *)(a2 + v11 + 24);
  if (*v15 >= 2)
  {
    if (v16 >= 2)
    {
      *v15 = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1BA4A2E80(v12 + 24, (uint64_t (*)(_QWORD))sub_1BA8F1528);
      *v15 = *(_QWORD *)(v13 + 24);
    }
  }
  else
  {
    *v15 = v16;
    if (v16 >= 2)
      swift_bridgeObjectRetain();
  }
  v32 = type metadata accessor for FeedLayoutSolverOptions(0);
  v17 = *(int *)(v32 + 36);
  v18 = v12 + v17;
  v19 = (const void *)(v13 + v17);
  v20 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  v31 = v18;
  LODWORD(v18) = v22(v18, 1, v20);
  v23 = v22((uint64_t)v19, 1, v20);
  if ((_DWORD)v18)
  {
    if (!v23)
    {
      v28 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v31, v19, v28);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v21 + 56))(v31, 0, 1, v20);
      goto LABEL_16;
    }
    sub_1BA914C98();
    v25 = *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64);
    v26 = (void *)v31;
  }
  else
  {
    if (!v23)
    {
      v29 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v31, v19, v29);
      goto LABEL_16;
    }
    sub_1BA4A2E80(v31, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v25 = *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64);
    v26 = (void *)v31;
  }
  memcpy(v26, v19, v25);
LABEL_16:
  *(_QWORD *)(v12 + *(int *)(v32 + 40)) = *(_QWORD *)(v13 + *(int *)(v32 + 40));
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  const void *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)(a2 + v11);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(a2 + v11 + 16);
  *(_WORD *)(v12 + 17) = *(_WORD *)(a2 + v11 + 17);
  *(_BYTE *)(v12 + 19) = *(_BYTE *)(a2 + v11 + 19);
  *(_DWORD *)(v12 + 20) = *(_DWORD *)(a2 + v11 + 20);
  *(_QWORD *)(v12 + 24) = *(_QWORD *)(a2 + v11 + 24);
  v14 = type metadata accessor for FeedLayoutSolverOptions(0);
  v15 = *(int *)(v14 + 36);
  v16 = (void *)(v12 + v15);
  v17 = (const void *)(v13 + v15);
  v18 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    sub_1BA914C98();
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = sub_1BB8705C4();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v16, v17, v21);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  }
  *(_QWORD *)(v12 + *(int *)(v14 + 40)) = *(_QWORD *)(v13 + *(int *)(v14 + 40));
  v22 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  v23 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v23) = *(_QWORD *)(a2 + v23);
  v24 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v24) = *(_QWORD *)(a2 + v24);
  return a1;
}

uint64_t assignWithTake for GroupLayoutContext(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  size_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1BB86D7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86D660();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_OWORD *)v12 = *(_OWORD *)(a2 + v11);
  *(_BYTE *)(v12 + 16) = *(_BYTE *)(a2 + v11 + 16);
  *(_BYTE *)(v12 + 17) = *(_BYTE *)(a2 + v11 + 17);
  *(_BYTE *)(v12 + 18) = *(_BYTE *)(a2 + v11 + 18);
  *(_BYTE *)(v12 + 19) = *(_BYTE *)(a2 + v11 + 19);
  *(_BYTE *)(v12 + 20) = *(_BYTE *)(a2 + v11 + 20);
  *(_BYTE *)(v12 + 21) = *(_BYTE *)(a2 + v11 + 21);
  *(_BYTE *)(v12 + 22) = *(_BYTE *)(a2 + v11 + 22);
  *(_BYTE *)(v12 + 23) = *(_BYTE *)(a2 + v11 + 23);
  v14 = (unint64_t *)(a1 + v11 + 24);
  v15 = *(_QWORD *)(a2 + v11 + 24);
  if (*v14 < 2)
    goto LABEL_4;
  if (v15 < 2)
  {
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BA8F1528);
    v15 = *(_QWORD *)(v13 + 24);
LABEL_4:
    *v14 = v15;
    goto LABEL_6;
  }
  *v14 = v15;
  swift_bridgeObjectRelease();
LABEL_6:
  v34 = type metadata accessor for FeedLayoutSolverOptions(0);
  v16 = *(int *)(v34 + 36);
  v17 = v12 + v16;
  v18 = (const void *)(v13 + v16);
  v19 = type metadata accessor for FeedLayoutSolverOptions.PluginOptions(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  v33 = v17;
  LODWORD(v17) = v21(v17, 1, v19);
  v22 = v21((uint64_t)v18, 1, v19);
  if ((_DWORD)v17)
  {
    if (!v22)
    {
      v27 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v33, v18, v27);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(v33, 0, 1, v19);
      goto LABEL_14;
    }
    sub_1BA914C98();
    v24 = *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64);
    v25 = (void *)v33;
  }
  else
  {
    if (!v22)
    {
      v28 = sub_1BB8705C4();
      (*(void (**)(uint64_t, const void *, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v33, v18, v28);
      goto LABEL_14;
    }
    sub_1BA4A2E80(v33, type metadata accessor for FeedLayoutSolverOptions.PluginOptions);
    sub_1BA914C98();
    v24 = *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64);
    v25 = (void *)v33;
  }
  memcpy(v25, v18, v24);
LABEL_14:
  *(_QWORD *)(v12 + *(int *)(v34 + 40)) = *(_QWORD *)(v13 + *(int *)(v34 + 40));
  v29 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v29) = *(_QWORD *)(a2 + v29);
  v30 = a3[10];
  *(_BYTE *)(a1 + a3[9]) = *(_BYTE *)(a2 + a3[9]);
  *(_QWORD *)(a1 + v30) = *(_QWORD *)(a2 + v30);
  swift_release();
  v31 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_QWORD *)(a1 + v31) = *(_QWORD *)(a2 + v31);
  swift_release();
  return a1;
}

uint64_t sub_1BB278384(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v16;

  v6 = sub_1BB86D7A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1BB86D660();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_7:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = type metadata accessor for FeedLayoutSolverOptions(0);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_7;
  }
  v16 = *(_QWORD *)(a1 + a3[10]);
  if (v16 >= 0xFFFFFFFF)
    LODWORD(v16) = -1;
  return (v16 + 1);
}

uint64_t sub_1BB278450(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = sub_1BB86D7A4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  v13 = sub_1BB86D660();
  v14 = *(_QWORD *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = v13;
    v15 = a4[5];
LABEL_7:
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  result = type metadata accessor for FeedLayoutSolverOptions(0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v15 = a4[6];
    goto LABEL_7;
  }
  *(_QWORD *)(a1 + a4[10]) = (a2 - 1);
  return result;
}

uint64_t FormatVideoPlayerData.feedItemIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerData.namespaceIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerData.itemIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FormatVideoPlayerData.headline.getter()
{
  return swift_unknownObjectRetain();
}

void FormatVideoPlayerData.feedKind.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 56);
}

uint64_t FormatVideoPlayerData.videoURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 36);
  v4 = sub_1BB86C67C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t FormatVideoPlayerData.posterImage.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 40));
  return swift_retain();
}

uint64_t FormatVideoPlayerData.isLive.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 44));
}

uint64_t FormatVideoPlayerData.overlayData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v1 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 48);
  v4 = *(_QWORD *)(v3 + 8);
  v5 = *(_QWORD *)(v3 + 16);
  v6 = *(_QWORD *)(v3 + 24);
  v7 = *(_BYTE *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v8 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return swift_retain();
}

uint64_t FormatVideoPlayerData.allowsPrerollAds.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FormatVideoPlayerData() + 52));
}

uint64_t FormatVideoPlayerData.adRequestIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  sub_1BA4C2DD8(v1, (uint64_t)v4, v7);
  if (!v6)
  {
    v5 = *((_QWORD *)v4 + 2);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  return v5;
}

uint64_t FormatVideoPlayerData.cacheKey.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v9;

  v1 = v0;
  v2 = type metadata accessor for FormatVideoPlayerData();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(v0 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  sub_1BA4C2DD8(v1, (uint64_t)v4, v7);
  if (!v6)
    v5 = sub_1BB86C538();
  swift_bridgeObjectRetain();
  sub_1BA4A2E80((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  return v5;
}

_QWORD *initializeBufferWithCopyOfBuffer for FormatVideoPlayerData(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    v11 = a3[9];
    v24 = a1 + v11;
    v12 = (uint64_t)a2 + v11;
    *(_QWORD *)(a1 + 48) = v10;
    v13 = sub_1BB86C67C();
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    v14(v24, v12, v13);
    v15 = a3[11];
    *(_QWORD *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *((_BYTE *)v4 + v15) = *((_BYTE *)a2 + v15);
    v16 = a3[12];
    v17 = a3[13];
    v18 = (char *)v4 + v16;
    v19 = (uint64_t)a2 + v16;
    *(_OWORD *)v18 = *(_OWORD *)v19;
    v20 = *(_QWORD *)(v19 + 24);
    *((_QWORD *)v18 + 2) = *(_QWORD *)(v19 + 16);
    *((_QWORD *)v18 + 3) = v20;
    v18[32] = *(_BYTE *)(v19 + 32);
    v21 = *(_QWORD *)(v19 + 48);
    *((_QWORD *)v18 + 5) = *(_QWORD *)(v19 + 40);
    *((_QWORD *)v18 + 6) = v21;
    *((_BYTE *)v4 + v17) = *((_BYTE *)a2 + v17);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for FormatVideoPlayerData(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v10 = a3[9];
  v22 = a1 + v10;
  v11 = a2 + v10;
  *(_QWORD *)(a1 + 48) = v9;
  v12 = sub_1BB86C67C();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v13(v22, v11, v12);
  v14 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[12];
  v16 = a3[13];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_OWORD *)v17 = *(_OWORD *)v18;
  v19 = *(_QWORD *)(v18 + 24);
  *(_QWORD *)(v17 + 16) = *(_QWORD *)(v18 + 16);
  *(_QWORD *)(v17 + 24) = v19;
  *(_BYTE *)(v17 + 32) = *(_BYTE *)(v18 + 32);
  v20 = *(_QWORD *)(v18 + 48);
  *(_QWORD *)(v17 + 40) = *(_QWORD *)(v18 + 40);
  *(_QWORD *)(v17 + 48) = v20;
  *(_BYTE *)(a1 + v16) = *(_BYTE *)(a2 + v16);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v10 = a3[12];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)(a1 + v10) = *(_QWORD *)(a2 + v10);
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 8) = *(_QWORD *)(v12 + 8);
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
  swift_retain();
  swift_release();
  *(_QWORD *)(v11 + 24) = *(_QWORD *)(v12 + 24);
  swift_retain();
  swift_release();
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  *(_QWORD *)(v11 + 40) = *(_QWORD *)(v12 + 40);
  *(_QWORD *)(v11 + 48) = *(_QWORD *)(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t initializeWithTake for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v7 = a3[9];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[11];
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v11) = *(_BYTE *)(a2 + v11);
  v12 = a3[12];
  v13 = a3[13];
  v14 = a1 + v12;
  v15 = a2 + v12;
  v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(_OWORD *)(v14 + 32) = *(_OWORD *)(v15 + 32);
  *(_QWORD *)(v14 + 48) = *(_QWORD *)(v15 + 48);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  return a1;
}

uint64_t assignWithTake for FormatVideoPlayerData(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_unknownObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_1BB86C67C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  *(_QWORD *)(a1 + a3[10]) = *(_QWORD *)(a2 + a3[10]);
  swift_release();
  v13 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v14 = a1 + v13;
  v15 = a2 + v13;
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);
  swift_release();
  *(_QWORD *)(v14 + 8) = *(_QWORD *)(v15 + 8);
  *(_QWORD *)(v14 + 16) = *(_QWORD *)(v15 + 16);
  swift_release();
  *(_QWORD *)(v14 + 24) = *(_QWORD *)(v15 + 24);
  swift_release();
  *(_BYTE *)(v14 + 32) = *(_BYTE *)(v15 + 32);
  v16 = *(_QWORD *)(v15 + 48);
  *(_QWORD *)(v14 + 40) = *(_QWORD *)(v15 + 40);
  *(_QWORD *)(v14 + 48) = v16;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  return a1;
}

uint64_t getEnumTagSinglePayload for FormatVideoPlayerData()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB278F64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for FormatVideoPlayerData()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1BB278FEC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = sub_1BB86C67C();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

_QWORD *sub_1BB279060(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  unsigned int (*v25)(char *, uint64_t, int *);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, _QWORD, uint64_t, uint64_t);
  char v32;
  char *v33;
  char v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  _QWORD *v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t inited;
  uint64_t v55;
  uint64_t v56;
  _OWORD v57[2];
  uint64_t v58;

  v49 = sub_1BB86C67C();
  v2 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v4 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BB24F2D4(0);
  MEMORY[0x1E0C80A78](v5);
  v53 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v51 = (uint64_t)&v48 - v8;
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v48 - v10;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v48 - v13;
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v48 - v16;
  v18 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8];
  sub_1BA4B07F0(0, (unint64_t *)&qword_1EF2A9CF0, (uint64_t (*)(uint64_t))sub_1BA89EA04, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E0DED1E8]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1BB87CE70;
  sub_1BA4B07F0(0, &qword_1EF2AC0A0, (uint64_t (*)(uint64_t))sub_1BA8C88C8, v18);
  sub_1BA8C88C8(0);
  v52 = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  v55 = *(_QWORD *)(v20 + 72);
  v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1BB8827B0;
  v50 = v22;
  v23 = (char *)(v22 + v21);
  v56 = a1;
  sub_1BA4C2DD8(a1, (uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
  v24 = (int *)type metadata accessor for FormatVideoPlayerData();
  v25 = *(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v24 - 1) + 48);
  if (v25(v17, 1, v24) == 1)
  {
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
    v26 = 0;
    v27 = 0;
  }
  else
  {
    v28 = v49;
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, &v17[v24[9]], v49);
    sub_1BA4A2E80((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
    v26 = sub_1BB86C538();
    v27 = v29;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v28);
  }
  sub_1BAAF7494(0x5255206F65646956, 0xE90000000000004CLL, v26, v27, v23);
  v30 = type metadata accessor for FormatInspectionItem(0);
  v31 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56);
  v31(v23, 0, 1, v30);
  sub_1BA4C2DD8(v56, (uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
  if (v25(v14, 1, v24) == 1)
  {
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
    v32 = 2;
  }
  else
  {
    v32 = v14[v24[11]];
    sub_1BA4A2E80((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  }
  v33 = &v23[v55];
  sub_1BAAF6B38(1702259020, 0xE400000000000000, v32, &v23[v55]);
  v31(v33, 0, 1, v30);
  sub_1BA4C2DD8(v56, (uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
  if (v25(v11, 1, v24) == 1)
  {
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
    v34 = 2;
  }
  else
  {
    v34 = v11[v24[12] + 32];
    sub_1BA4A2E80((uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  }
  v35 = v55;
  sub_1BAAF6B38(0x72754420776F6853, 0xED00006E6F697461, v34, &v23[2 * v55]);
  v31(&v23[2 * v35], 0, 1, v30);
  v36 = (uint64_t (*)(_QWORD))sub_1BB24F2D4;
  v37 = v51;
  sub_1BA4C2DD8(v56, v51, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
  if (v25((char *)v37, 1, v24) == 1)
  {
    v38 = 0;
    v39 = 0;
  }
  else
  {
    v40 = v37 + v24[12];
    v38 = *(_QWORD *)(v40 + 40);
    v39 = *(_QWORD *)(v40 + 48);
    swift_bridgeObjectRetain();
    v36 = (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData;
  }
  sub_1BA4A2E80(v37, v36);
  sub_1BAAF7494(0x6E6F697461727544, 0xE800000000000000, v38, v39, &v23[3 * v35]);
  v31(&v23[3 * v35], 0, 1, v30);
  v41 = v53;
  sub_1BA4C2DD8(v56, v53, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
  if (v25((char *)v41, 1, v24) == 1)
  {
    sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))sub_1BB24F2D4);
    v42 = 2;
  }
  else
  {
    v42 = *(_BYTE *)(v41 + v24[13]);
    sub_1BA4A2E80(v41, (uint64_t (*)(_QWORD))type metadata accessor for FormatVideoPlayerData);
  }
  sub_1BAAF6B38(0xD000000000000011, 0x80000001BB983160, v42, &v23[4 * v35]);
  v31(&v23[4 * v35], 0, 1, v30);
  sub_1BAF89090(0x6C50206F65646956, 0xEC00000072657961, 0, 0, v50, v57);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  v43 = inited;
  *(_QWORD *)(inited + 56) = &type metadata for FormatInspectionGroup;
  *(_QWORD *)(v43 + 64) = &off_1E72D2F60;
  v44 = swift_allocObject();
  *(_QWORD *)(v43 + 32) = v44;
  *(_QWORD *)(v44 + 48) = v58;
  v45 = v57[1];
  *(_OWORD *)(v44 + 16) = v57[0];
  *(_OWORD *)(v44 + 32) = v45;
  v46 = sub_1BB6DF010(v43);
  swift_setDeallocating();
  sub_1BA89EA04(0);
  swift_arrayDestroy();
  return v46;
}

uint64_t sub_1BB279684()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

NewsFeed::SportsDataVisualizationType_optional __swiftcall SportsDataVisualizationType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  NewsFeed::SportsDataVisualizationType_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1BB873FE4();
  result.value = swift_bridgeObjectRelease();
  v5 = 7;
  if (v3 < 7)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t SportsDataVisualizationType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB27973C + 4 * byte_1BB8FE570[*v0]))(0x7365726F6373, 0xE600000000000000);
}

uint64_t sub_1BB27973C()
{
  return 0x676E69646E617473;
}

uint64_t sub_1BB279784()
{
  return 0x726F6353656E696CLL;
}

uint64_t sub_1BB2797A0()
{
  return 0x65527972756A6E69;
}

uint64_t sub_1BB2797C0()
{
  return 0x6579616C5079656BLL;
}

void sub_1BB2797E0(char *a1)
{
  sub_1BB7F1E04(*a1);
}

unint64_t sub_1BB2797F0()
{
  unint64_t result;

  result = qword_1ED3A8190;
  if (!qword_1ED3A8190)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationType, &type metadata for SportsDataVisualizationType);
    atomic_store(result, (unint64_t *)&qword_1ED3A8190);
  }
  return result;
}

void sub_1BB279834()
{
  char *v0;

  sub_1BAB08164(0, *v0);
}

void sub_1BB279840()
{
  __asm { BR              X10 }
}

uint64_t sub_1BB279878()
{
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

void sub_1BB279930(uint64_t a1)
{
  char *v1;

  sub_1BAB08164(a1, *v1);
}

NewsFeed::SportsDataVisualizationType_optional sub_1BB279938(Swift::String *a1)
{
  return SportsDataVisualizationType.init(rawValue:)(*a1);
}

uint64_t sub_1BB279944()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1BB279970 + 4 * byte_1BB8FE57E[*v0]))();
}

void sub_1BB279970(_QWORD *a1@<X8>)
{
  *a1 = 0x676E69646E617473;
  a1[1] = 0xE900000000000073;
}

void sub_1BB279990(_QWORD *a1@<X8>)
{
  *a1 = 0x7374656B63617262;
  a1[1] = 0xE800000000000000;
}

void sub_1BB2799AC(_QWORD *a1@<X8>)
{
  *a1 = 0x65726F6353786F62;
  a1[1] = 0xE900000000000073;
}

void sub_1BB2799CC(_QWORD *a1@<X8>)
{
  *a1 = 0x726F6353656E696CLL;
  a1[1] = 0xEA00000000007365;
}

void sub_1BB2799EC(uint64_t a1@<X8>)
{
  strcpy((char *)a1, "injuryReport");
  *(_BYTE *)(a1 + 13) = 0;
  *(_WORD *)(a1 + 14) = -5120;
}

void sub_1BB279A10(_QWORD *a1@<X8>)
{
  *a1 = 0x6579616C5079656BLL;
  a1[1] = 0xE900000000000072;
}

uint64_t sub_1BB279A34()
{
  sub_1BB279BA8();
  return sub_1BB872D60();
}

uint64_t sub_1BB279A90()
{
  sub_1BB279BA8();
  return sub_1BB872D0C();
}

uint64_t storeEnumTagSinglePayload for SportsDataVisualizationType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1BB279B28 + 4 * byte_1BB8FE58A[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1BB279B5C + 4 * byte_1BB8FE585[v4]))();
}

uint64_t sub_1BB279B5C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB279B64(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1BB279B6CLL);
  return result;
}

uint64_t sub_1BB279B78(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1BB279B80);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1BB279B84(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1BB279B8C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SportsDataVisualizationType()
{
  return &type metadata for SportsDataVisualizationType;
}

unint64_t sub_1BB279BA8()
{
  unint64_t result;

  result = qword_1ED3A8198;
  if (!qword_1ED3A8198)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for SportsDataVisualizationType, &type metadata for SportsDataVisualizationType);
    atomic_store(result, (unint64_t *)&qword_1ED3A8198);
  }
  return result;
}

uint64_t FormatContentMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB279C18 + 4 * byte_1BB8FE6D0[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_1BB279C18()
{
  return 7368564;
}

uint64_t sub_1BB279C28()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB279C38()
{
  return 1952867692;
}

uint64_t sub_1BB279C48()
{
  return 0x7468676972;
}

uint64_t sub_1BB279C5C()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BB279C74()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BB279C8C()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BB279CA8()
{
  return 0x69526D6F74746F62;
}

void sub_1BB279CC8(char *a1)
{
  sub_1BB7FB5E4(*a1);
}

uint64_t sub_1BB279CD4()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D3CEC((uint64_t)v3, v1);
  return sub_1BB874608();
}

void sub_1BB279D18(uint64_t a1)
{
  char *v1;

  sub_1BA9D3CEC(a1, *v1);
}

uint64_t sub_1BB279D20()
{
  char *v0;
  char v1;
  _BYTE v3[72];

  v1 = *v0;
  sub_1BB8745CC();
  sub_1BA9D3CEC((uint64_t)v3, v1);
  return sub_1BB874608();
}

uint64_t sub_1BB279D60@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = FormatContentMode.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FormatContentMode.description.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1BB279DB0 + 4 * byte_1BB8FE6D9[*v0]))(0x7265746E6563, 0xE600000000000000);
}

uint64_t sub_1BB279DB0()
{
  return 7368564;
}

uint64_t sub_1BB279DC0()
{
  return 0x6D6F74746F62;
}

uint64_t sub_1BB279DD0()
{
  return 1952867692;
}

uint64_t sub_1BB279DE0()
{
  return 0x7468676972;
}

uint64_t sub_1BB279DF4()
{
  return 0x7466654C706F74;
}

uint64_t sub_1BB279E0C()
{
  return 0x7468676952706F74;
}

uint64_t sub_1BB279E24()
{
  return 0x654C6D6F74746F62;
}

uint64_t sub_1BB279E40()
{
  return 0x69526D6F74746F62;
}

unint64_t sub_1BB279E64()
{
  unint64_t result;

  result = qword_1EF2BF8B8;
  if (!qword_1EF2BF8B8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BF8B8);
  }
  return result;
}

unint64_t sub_1BB279EA8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1BB279ED4();
  result = sub_1BA4BDB08();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1BB279ED4()
{
  unint64_t result;

  result = qword_1EF2BF8C0;
  if (!qword_1EF2BF8C0)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BF8C0);
  }
  return result;
}

unint64_t sub_1BB279F18(uint64_t a1)
{
  unint64_t result;

  result = sub_1BB279F3C();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1BB279F3C()
{
  unint64_t result;

  result = qword_1EF2BF8C8;
  if (!qword_1EF2BF8C8)
  {
    result = MEMORY[0x1BCCE5B24](&protocol conformance descriptor for FormatContentMode, &type metadata for FormatContentMode);
    atomic_store(result, (unint64_t *)&qword_1EF2BF8C8);
  }
  return result;
}

unint64_t sub_1BB279F80(_QWORD *a1)
{
  unint64_t result;

  a1[1] = sub_1BA6991DC();
  a1[2] = sub_1BA665D9C();
  result = sub_1BB279E64();
  a1[3] = result;
  return result;
}

ValueMetadata *type metadata accessor for FormatContentMode()
{
  return &type metadata for FormatContentMode;
}

uint64_t FormatLogger.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t static FormatLogger.shared.getter()
{
  return swift_initStaticObject();
}

uint64_t FormatLogger.init()()
{
  uint64_t v0;

  return v0;
}

Swift::Void __swiftcall FormatLogger.debug(_:)(Swift::String a1)
{
  sub_1BB27A02C(a1._countAndFlagsBits, (uint64_t)a1._object, MEMORY[0x1E0DF2278]);
}

Swift::Void __swiftcall FormatLogger.info(_:)(Swift::String a1)
{
  sub_1BB27A02C(a1._countAndFlagsBits, (uint64_t)a1._object, MEMORY[0x1E0DF2270]);
}

Swift::Void __swiftcall FormatLogger.log(_:)(Swift::String a1)
{
  sub_1BB27A02C(a1._countAndFlagsBits, (uint64_t)a1._object, MEMORY[0x1E0DF2290]);
}

Swift::Void __swiftcall FormatLogger.warn(_:)(Swift::String a1)
{
  sub_1BB27A02C(a1._countAndFlagsBits, (uint64_t)a1._object, MEMORY[0x1E0DF2280]);
}

Swift::Void __swiftcall FormatLogger.error(_:)(Swift::String a1)
{
  sub_1BB27A02C(a1._countAndFlagsBits, (uint64_t)a1._object, MEMORY[0x1E0DF2280]);
}

uint64_t sub_1BB27A02C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  id v6;
  uint64_t v7;
  uint64_t v8;

  if (qword_1ED3BB670 != -1)
    swift_once();
  v6 = (id)qword_1ED4768A8;
  v7 = a3();
  sub_1BA7AA598();
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1BB87CE70;
  *(_QWORD *)(v8 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v8 + 64) = sub_1BA6A2D8C();
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  swift_bridgeObjectRetain();
  sub_1BB86EF44("%{public}@", 10, 2, &dword_1BA493000, v6, v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t FormatLogger.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FormatLogger.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1BB27A130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA7AA4B0(a1, a2, a3, a4, MEMORY[0x1E0DF2278]);
}

uint64_t sub_1BB27A13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA7AA4B0(a1, a2, a3, a4, MEMORY[0x1E0DF2270]);
}

uint64_t sub_1BB27A148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1BA7AA4B0(a1, a2, a3, a4, MEMORY[0x1E0DF2280]);
}

uint64_t dispatch thunk of FormatLoggerType.debug(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of FormatLoggerType.log(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of FormatLoggerType.info(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of FormatLoggerType.warn(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of FormatLoggerType.error(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of FormatLoggerType.clear()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t method lookup function for FormatLogger()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FormatLogger.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t PuzzleComponentsStyler.__allocating_init(hintFormatter:)(__int128 *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1BA4CECCC(a1, v2 + 16);
  return v2;
}

void sub_1BB27A1D8()
{
  sub_1BB86C148();
  __break(1u);
}

void sub_1BB27A1F0()
{
  sub_1BB86C118();
  __break(1u);
}

uint64_t PuzzleComponentsStyler.init(hintFormatter:)(__int128 *a1)
{
  uint64_t v1;

  sub_1BA4CECCC(a1, v1 + 16);
  return v1;
}

uint64_t PuzzleComponentsStyler.styledHintButtonConfig(with:colorTheme:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t KeyPath;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  _QWORD v61[4];
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void *v66;
  void *v67;
  char *v68;
  char *v69;
  char *v70;
  id v71;
  char *v72;
  int v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  _QWORD v80[2];

  sub_1BAF5B454();
  MEMORY[0x1E0C80A78](v6);
  v79 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1BB86C37C();
  MEMORY[0x1E0C80A78](v8);
  v76 = sub_1BB86C304();
  v78 = *(_QWORD *)(v76 - 8);
  MEMORY[0x1E0C80A78](v76);
  v68 = (char *)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v70 = (char *)v61 - v11;
  MEMORY[0x1E0C80A78](v12);
  v69 = (char *)v61 - v13;
  MEMORY[0x1E0C80A78](v14);
  v77 = (char *)v61 - v15;
  MEMORY[0x1E0C80A78](v16);
  v72 = (char *)v61 - v17;
  v18 = sub_1BB8739CC();
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v21 = (char *)v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = *a1;
  v22 = a1[1];
  v23 = *((unsigned __int8 *)a1 + 16);
  v24 = a1[4];
  v73 = *((unsigned __int8 *)a1 + 40);
  v25 = v22;
  v26 = *(void **)a2;
  v66 = *(void **)(a2 + 8);
  v67 = v26;
  sub_1BB8739A8();
  v71 = (id)objc_opt_self();
  v27 = objc_msgSend(v71, sel_labelColor);
  sub_1BB87396C();
  sub_1BB87393C();
  if (!v25)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v19 + 32))(a3, v21, v18);
  v63 = v19;
  v64 = v18;
  v65 = a3;
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = 0;
  if (v23 == 2 || !v24)
  {
    v34 = v75[5];
    v35 = v75[6];
    __swift_project_boxed_opaque_existential_1(v75 + 2, v34);
    LOBYTE(v80[0]) = v73;
    v36 = v77;
    (*(void (**)(uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t))(v35 + 8))(v74, v25, v80, v34, v35);
    KeyPath = swift_getKeyPath();
    MEMORY[0x1E0C80A78](KeyPath);
    v61[-2] = v38;
    swift_getKeyPath();
    v80[0] = sub_1BB27AC10(v28);
    sub_1BA745D04();
    sub_1BB86C1E4();
    v40 = v78;
    v39 = v79;
    v41 = v76;
    (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v79, v36, v76);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v39, 0, 1, v41);
    sub_1BB873954();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v41);
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v65, v21, v64);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1BB86C370();
    sub_1BB86C310();
    v29 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v29);
    v61[-2] = v30;
    swift_getKeyPath();
    sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9940);
    v61[2] = *MEMORY[0x1E0DC4B10];
    v80[0] = sub_1BB87369C();
    v61[1] = sub_1BA745B28();
    sub_1BB86C1E4();
    v31 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v31);
    v61[-2] = v32;
    swift_getKeyPath();
    v80[0] = objc_msgSend(v71, sel_labelColor);
    v61[3] = sub_1BA745BF4();
    sub_1BB86C1E4();
    v62 = v28;
    v61[0] = v25;
    if ((v23 & 1) != 0)
      sub_1BB874398();
    swift_bridgeObjectRelease();
    sub_1BB86C370();
    v42 = v77;
    sub_1BB86C310();
    v43 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v43);
    v61[-2] = v44;
    swift_getKeyPath();
    v80[0] = sub_1BB87369C();
    sub_1BB86C1E4();
    v45 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v45);
    v61[-2] = v46;
    swift_getKeyPath();
    v80[0] = sub_1BB27AAE4(v67, v66);
    sub_1BB86C1E4();
    v48 = v75[5];
    v47 = v75[6];
    __swift_project_boxed_opaque_existential_1(v75 + 2, v48);
    LOBYTE(v80[0]) = v73;
    v49 = v69;
    (*(void (**)(uint64_t, _QWORD, _QWORD *, uint64_t, uint64_t))(v47 + 8))(v74, v61[0], v80, v48, v47);
    v50 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v50);
    v61[-2] = v51;
    swift_getKeyPath();
    v80[0] = objc_msgSend(v71, sel_labelColor);
    sub_1BB86C1E4();
    v52 = v68;
    v53 = v72;
    sub_1BB86C220();
    v54 = v70;
    sub_1BB86C220();
    v55 = v78;
    v56 = *(void (**)(char *, uint64_t))(v78 + 8);
    v57 = v76;
    v56(v52, v76);
    v58 = swift_getKeyPath();
    MEMORY[0x1E0C80A78](v58);
    v61[-2] = v59;
    swift_getKeyPath();
    v80[0] = sub_1BB27AC10(v62);
    sub_1BA745D04();
    sub_1BB86C1E4();
    v60 = v79;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v79, v54, v57);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v60, 0, 1, v57);
    sub_1BB873954();
    v56(v54, v57);
    v56(v49, v57);
    v56(v42, v57);
    v56(v53, v57);
    (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v65, v21, v64);
  }
  return swift_release();
}

uint64_t sub_1BB27AAA4()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_1BB27AAC8()
{
  sub_1BB86C118();
  __break(1u);
}

id sub_1BB27AAE4(void *a1, void *a2)
{
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  id v9;
  id v10;
  id v11;
  _QWORD v13[6];

  if (!a1)
    return objc_msgSend((id)objc_opt_self(), sel_systemPinkColor);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  v5 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v13[4] = sub_1BB27B4BC;
  v13[5] = v4;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BA61387C;
  v13[3] = &block_descriptor_35;
  v6 = _Block_copy(v13);
  v7 = a1;
  v8 = a2;
  v9 = v7;
  v10 = v8;
  v11 = objc_msgSend(v5, sel_initWithDynamicProvider_, v6);
  _Block_release(v6);

  swift_release();
  return v11;
}

id sub_1BB27AC10(uint64_t a1)
{
  void *v1;
  void **v2;
  id v3;
  id v4;
  void *v5;
  id v6;

  v2 = (void **)(a1 + 16);
  v1 = *(void **)(a1 + 16);
  if (v1)
  {
    v3 = *(id *)(a1 + 16);
  }
  else
  {
    v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DC1288]), sel_init);
    objc_msgSend(v4, sel_setAlignment_, 1);
    swift_beginAccess();
    v5 = *v2;
    *v2 = v4;
    v3 = v4;

    v1 = 0;
  }
  v6 = v1;
  return v3;
}

uint64_t sub_1BB27ACAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB27ADB8(a1, a2, a3, &qword_1EF2BF978);
}

uint64_t sub_1BB27ACC0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EF2BF978);
}

void sub_1BB27ACD4()
{
  sub_1BA745D04();
  sub_1BB86C454();
  __break(1u);
}

void sub_1BB27ACF8()
{
  sub_1BA745D04();
  sub_1BB86C454();
  __break(1u);
}

uint64_t sub_1BB27AD1C()
{
  return 8;
}

uint64_t sub_1BB27AD28()
{
  return swift_release();
}

uint64_t sub_1BB27AD30(_QWORD *a1, _QWORD *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1BB27AD3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB27ADB8(a1, a2, a3, &qword_1EF2BF978) & 1;
}

uint64_t sub_1BB27AD64(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EF2BF978);
}

_QWORD *sub_1BB27AD78(_QWORD *result, _QWORD *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1BB27AD90()
{
  return 8;
}

uint64_t sub_1BB27ADA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB27ADB8(a1, a2, a3, &qword_1EF2BF970);
}

uint64_t sub_1BB27ADB8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  sub_1BB27B4EC(0, a4);
  return sub_1BB872958() & 1;
}

uint64_t sub_1BB27AE14(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EF2BF970);
}

uint64_t keypath_hashTm_0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1BB27B4EC(0, a3);
  return sub_1BB872874();
}

void sub_1BB27AE70()
{
  sub_1BA745BF4();
  sub_1BB86C454();
  __break(1u);
}

id sub_1BB27AE9C(void *a1)
{
  id v1;
  void *v2;
  char **v3;

  v1 = objc_msgSend(a1, sel_userInterfaceStyle);
  v2 = (void *)objc_opt_self();
  v3 = &selRef_whiteColor;
  if (v1 != (id)2)
    v3 = &selRef_blackColor;
  return objc_msgSend(v2, *v3);
}

uint64_t PuzzleComponentsStyler.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t PuzzleComponentsStyler.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

void sub_1BB27AF40()
{
  sub_1BB86C148();
  __break(1u);
}

void sub_1BB27AF5C()
{
  sub_1BA745BF4();
  sub_1BB86C454();
  __break(1u);
}

uint64_t sub_1BB27AF80()
{
  return 8;
}

uint64_t sub_1BB27AF8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1BB27ADB8(a1, a2, a3, &qword_1EF2BF970) & 1;
}

uint64_t sub_1BB27AFB4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm_0(a1, a2, &qword_1EF2BF970);
}

id _s8NewsFeed22PuzzleComponentsStylerC21styledMenuImageConfigSo26UIImageSymbolConfigurationCyF_0()
{
  id v0;
  void *v1;
  id v2;
  uint64_t v3;
  id v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  id v11;
  _QWORD v13[6];

  v0 = objc_msgSend((id)objc_opt_self(), sel_secondarySystemFillColor);
  v1 = (void *)objc_opt_self();
  v2 = objc_msgSend(v1, sel_configurationWithPointSize_weight_scale_, 5, 3, 23.0);
  sub_1BA4AD288(0, (unint64_t *)&qword_1ED3BA020, MEMORY[0x1E0DEE9B0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1BB8856F0;
  v4 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
  v13[4] = sub_1BB27AE9C;
  v13[5] = 0;
  v13[0] = MEMORY[0x1E0C809B0];
  v13[1] = 1107296256;
  v13[2] = sub_1BA61387C;
  v13[3] = &block_descriptor_56;
  v5 = _Block_copy(v13);
  v6 = v2;
  v7 = objc_msgSend(v4, sel_initWithDynamicProvider_, v5);
  _Block_release(v5);
  swift_release();
  *(_QWORD *)(v3 + 32) = v7;
  *(_QWORD *)(v3 + 40) = v0;
  v13[0] = v3;
  sub_1BB872DCC();
  sub_1BA49A224(0, (unint64_t *)&qword_1ED3B9990);
  v8 = v0;
  v9 = (void *)sub_1BB872D9C();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend(v1, sel_configurationWithPaletteColors_, v9);

  v11 = objc_msgSend(v6, sel_configurationByApplyingConfiguration_, v10);
  return v11;
}

uint64_t _s8NewsFeed22PuzzleComponentsStylerC34styledHintButtonAccessibilityLabel4withSSSgAA0c9AccessoryG6ConfigV_tF_0(uint64_t *a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t ObjCClassFromMetadata;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v1 = *((unsigned __int8 *)a1 + 16);
  if (v1 == 2)
    return 0;
  v3 = a1[4];
  if (!v3)
    return 0;
  v2 = a1[1];
  if (v2)
  {
    v4 = *a1;
    v5 = a1[3];
    if ((v1 & 1) != 0)
      sub_1BB874398();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    type metadata accessor for Localized();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v7 = objc_msgSend((id)objc_opt_self(), sel_bundleForClass_, ObjCClassFromMetadata);
    v8 = sub_1BB86C340();
    v10 = v9;

    v11 = MEMORY[0x1E0DEA968];
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B9FA0, MEMORY[0x1E0DEA968], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DED1E8]);
    v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1BB87FC80;
    *(_QWORD *)(v12 + 32) = v5;
    *(_QWORD *)(v12 + 40) = v3;
    *(_QWORD *)(v12 + 48) = v8;
    *(_QWORD *)(v12 + 56) = v10;
    *(_QWORD *)(v12 + 64) = v4;
    *(_QWORD *)(v12 + 72) = v2;
    sub_1BA4AD288(0, (unint64_t *)&qword_1ED3B95C0, v11, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x1E0DEAEC8]);
    sub_1BA6A0BA4();
    v2 = sub_1BB872904();
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t dispatch thunk of PuzzleComponentsStylerType.styledHintButtonConfig(with:colorTheme:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of PuzzleComponentsStylerType.styledMenuImageConfig()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PuzzleComponentsStylerType.styledHintButtonAccessibilityLabel(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for PuzzleComponentsStyler()
{
  return objc_opt_self();
}

uint64_t method lookup function for PuzzleComponentsStyler()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PuzzleComponentsStyler.__allocating_init(hintFormatter:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1BB27B490()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_1BB27B4BC(void *a1)
{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  v2 = *(void **)(v1 + 16);
  v3 = *(void **)(v1 + 24);
  if (objc_msgSend(a1, sel_userInterfaceStyle) == (id)2)
    v4 = v3;
  else
    v4 = v2;
  return v4;
}

void sub_1BB27B4EC(uint64_t a1, unint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  if (!*a2)
  {
    sub_1BB86C184();
    v3 = sub_1BB8746D4();
    if (!v4)
      atomic_store(v3, a2);
  }
}

uint64_t SportsDataVisualizationEventRequest.init(sportsEventId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = result;
  *(_QWORD *)(a3 + 8) = a2;
  *(_BYTE *)(a3 + 16) = 1;
  return result;
}

uint64_t SportsDataVisualizationEventRequest.eventId.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;

  v1 = *(_QWORD *)v0;
  v2 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    v4 = sub_1BB8729A0();

    sub_1BA98B5E4(v1, v2, 0);
    return v4;
  }
  return v1;
}

uint64_t SportsDataVisualizationEventRequest.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = v4;
  return sub_1BA98B668(v2, v3, v4);
}

uint64_t SportsDataVisualizationEventRequest.init(sportsEvent:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_QWORD *)(a2 + 8) = 0;
  *(_BYTE *)(a2 + 16) = 0;
  return result;
}

uint64_t SportsDataVisualizationEventRequest.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;

  v2 = *(_QWORD *)v0;
  v1 = *(_QWORD *)(v0 + 8);
  if ((*(_BYTE *)(v0 + 16) & 1) != 0)
  {
    sub_1BA98B668(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), 1);
  }
  else
  {
    sub_1BA98B668(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), 0);
    v3 = objc_msgSend((id)swift_unknownObjectRetain(), sel_identifier);
    sub_1BB8729A0();

    sub_1BA98B5E4(v2, v1, 0);
    sub_1BA98B5E4(v2, v1, 0);
  }
  sub_1BB872A90();
  return swift_bridgeObjectRelease();
}

